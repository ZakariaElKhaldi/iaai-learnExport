{
  "title": "Linear Graphs",
  "url": "https://www.w3schools.com/ai/ai_linear_graphs.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Linear Graphs",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Machine Learning often uses line graphs to show relationships.",
      "html": "<p>Machine Learning often uses line graphs to show relationships.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A line graph displays the values of a linear function: y = ax + b",
      "html": "<p>A line graph displays the values of a linear function: y = ax + b</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Important keywords:",
      "html": "<p>Important keywords:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Linear",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Linear means straight. A linear graph is a straight line.",
      "html": "<p><b>Linear</b> means straight. A linear graph is a straight line.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The graph consists of two axes: x-axis (horizontal) and y-axis (vertical).",
      "html": "<p>The graph consists of two axes: x-axis (horizontal) and y-axis (vertical).</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/ai/tryit.asp?filename=tryai_plotly_function_linear1",
        "syntaxHighlighting": [
          {
            "text": "\nconst xValues = [];\nconst yValues = [];\n\n// Generate values\nfor (let x = 0; x <= 10; x += 1) {\n\u00a0\u00a0xValues.push(x);\n\u00a0\u00a0yValues.push(x);\n}\n\n// Define Data\nconst data = [{\n\u00a0\u00a0x: xValues,\n\u00a0\u00a0y: yValues,\n\u00a0\u00a0mode: \"lines\"\n}];\n\n// Define Layout\nconst layout = {title: \"y = x\"};\n\n// Display using Plotly\nPlotly.newPlot(\"myPlot\", data, layout);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Generate values",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Define Data",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"lines\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Define Layout",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"y = x\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Display using Plotly",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "newPlot",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"myPlot\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const xValues = [];\nconst yValues = [];\n\n// Generate values\nfor (let x = 0; x <= 10; x += 1) {\nxValues.push(x);\nyValues.push(x);\n}\n\n// Define Data\nconst data = [{\nx: xValues,\ny: yValues,\nmode: \"lines\"\n}];\n\n// Define Layout\nconst layout = {title: \"y = x\"};\n\n// Display using Plotly\nPlotly.newPlot(\"myPlot\", data, layout);",
      "syntax_highlighting": [
        {
          "text": "\nconst xValues = [];\nconst yValues = [];\n\n// Generate values\nfor (let x = 0; x <= 10; x += 1) {\n\u00a0\u00a0xValues.push(x);\n\u00a0\u00a0yValues.push(x);\n}\n\n// Define Data\nconst data = [{\n\u00a0\u00a0x: xValues,\n\u00a0\u00a0y: yValues,\n\u00a0\u00a0mode: \"lines\"\n}];\n\n// Define Layout\nconst layout = {title: \"y = x\"};\n\n// Display using Plotly\nPlotly.newPlot(\"myPlot\", data, layout);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Generate values",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Define Data",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"lines\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Define Layout",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"y = x\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Display using Plotly",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "newPlot",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"myPlot\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> xValues = [];<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> yValues = [];<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Generate values<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">for</span> (<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>; x &lt;= <span class=\"jsnumbercolor\" style=\"color:#905\">10</span>; x += <span class=\"jsnumbercolor\" style=\"color:#905\">1</span>) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0xValues.<span class=\"jspropertycolor\" style=\"color:black\">push</span>(x);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0yValues.<span class=\"jspropertycolor\" style=\"color:black\">push</span>(x);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Define Data<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> data = [{<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0x: xValues,<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0y: yValues,<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0mode: <span class=\"jsstringcolor\" style=\"color:green\">\"lines\"</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}];<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Define Layout<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> layout = {title: <span class=\"jsstringcolor\" style=\"color:green\">\"y = x\"</span>};<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Display using Plotly<br/></span>\nPlotly.<span class=\"jspropertycolor\" style=\"color:black\">newPlot</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"myPlot\"</span>, data, layout);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/ai/tryit.asp?filename=tryai_plotly_function_linear1",
      "syntax_highlighting_data": [
        {
          "text": "\nconst xValues = [];\nconst yValues = [];\n\n// Generate values\nfor (let x = 0; x <= 10; x += 1) {\n\u00a0\u00a0xValues.push(x);\n\u00a0\u00a0yValues.push(x);\n}\n\n// Define Data\nconst data = [{\n\u00a0\u00a0x: xValues,\n\u00a0\u00a0y: yValues,\n\u00a0\u00a0mode: \"lines\"\n}];\n\n// Define Layout\nconst layout = {title: \"y = x\"};\n\n// Display using Plotly\nPlotly.newPlot(\"myPlot\", data, layout);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Generate values",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Define Data",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"lines\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Define Layout",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"y = x\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Display using Plotly",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "newPlot",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"myPlot\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Slope",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The slope is the angle of the graph.",
      "html": "<p>The <b>slope</b> is the angle of the graph.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The slope is the a value in a linear graph:",
      "html": "<p>The slope is the <b>a</b> value in a linear graph:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "y = a x",
      "html": "<p>y = <b>a</b>x</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In this example, slope = 1.2 :",
      "html": "<p>In this example, <b>slope</b> = <b>1.2</b>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/ai/tryit.asp?filename=tryai_plotly_function_linear2",
        "syntaxHighlighting": [
          {
            "text": "\nlet slope = 1.2;\nconst xValues = [];\nconst yValues = [];\n\n// Generate values\nfor (let x = 0; x <= 10; x += 1) {\n\u00a0\u00a0xValues.push(x);\n\u00a0\u00a0yValues.push(x * slope);\n}\n\n// Define Data\nconst data = [{\n\u00a0\u00a0x: xValues,\n\u00a0\u00a0y: yValues,\n\u00a0\u00a0mode: \"lines\"\n}];\n// Define Layout\nconst layout = {title: \"Slope=\" + slope};\n\n// Display using Plotly\nPlotly.newPlot(\"myPlot\", data, layout);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "1.2",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Generate values",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Define Data",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"lines\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Define Layout",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Slope=\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Display using Plotly",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "newPlot",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"myPlot\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let slope = 1.2;\nconst xValues = [];\nconst yValues = [];\n\n// Generate values\nfor (let x = 0; x <= 10; x += 1) {\nxValues.push(x);\nyValues.push(x * slope);\n}\n\n// Define Data\nconst data = [{\nx: xValues,\ny: yValues,\nmode: \"lines\"\n}];\n// Define Layout\nconst layout = {title: \"Slope=\" + slope};\n\n// Display using Plotly\nPlotly.newPlot(\"myPlot\", data, layout);",
      "syntax_highlighting": [
        {
          "text": "\nlet slope = 1.2;\nconst xValues = [];\nconst yValues = [];\n\n// Generate values\nfor (let x = 0; x <= 10; x += 1) {\n\u00a0\u00a0xValues.push(x);\n\u00a0\u00a0yValues.push(x * slope);\n}\n\n// Define Data\nconst data = [{\n\u00a0\u00a0x: xValues,\n\u00a0\u00a0y: yValues,\n\u00a0\u00a0mode: \"lines\"\n}];\n// Define Layout\nconst layout = {title: \"Slope=\" + slope};\n\n// Display using Plotly\nPlotly.newPlot(\"myPlot\", data, layout);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "1.2",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Generate values",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Define Data",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"lines\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Define Layout",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Slope=\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Display using Plotly",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "newPlot",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"myPlot\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> slope = <span class=\"jsnumbercolor\" style=\"color:#905\">1.2</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> xValues = [];<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> yValues = [];<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Generate values<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">for</span> (<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>; x &lt;= <span class=\"jsnumbercolor\" style=\"color:#905\">10</span>; x += <span class=\"jsnumbercolor\" style=\"color:#905\">1</span>) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0xValues.<span class=\"jspropertycolor\" style=\"color:black\">push</span>(x);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0yValues.<span class=\"jspropertycolor\" style=\"color:black\">push</span>(x * slope);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Define Data<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> data = [{<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0x: xValues,<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0y: yValues,<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0mode: <span class=\"jsstringcolor\" style=\"color:green\">\"lines\"</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}];<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Define Layout<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> layout = {title: <span class=\"jsstringcolor\" style=\"color:green\">\"Slope=\"</span> + slope};<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Display using Plotly<br/></span>\nPlotly.<span class=\"jspropertycolor\" style=\"color:black\">newPlot</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"myPlot\"</span>, data, layout);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/ai/tryit.asp?filename=tryai_plotly_function_linear2",
      "syntax_highlighting_data": [
        {
          "text": "\nlet slope = 1.2;\nconst xValues = [];\nconst yValues = [];\n\n// Generate values\nfor (let x = 0; x <= 10; x += 1) {\n\u00a0\u00a0xValues.push(x);\n\u00a0\u00a0yValues.push(x * slope);\n}\n\n// Define Data\nconst data = [{\n\u00a0\u00a0x: xValues,\n\u00a0\u00a0y: yValues,\n\u00a0\u00a0mode: \"lines\"\n}];\n// Define Layout\nconst layout = {title: \"Slope=\" + slope};\n\n// Display using Plotly\nPlotly.newPlot(\"myPlot\", data, layout);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "1.2",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Generate values",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Define Data",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"lines\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Define Layout",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Slope=\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Display using Plotly",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "newPlot",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"myPlot\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Intercept",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Intercept is the start value of the graph.",
      "html": "<p>The <b>Intercept</b> is the start value of the graph.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The intercept is the b value in a linear graph:",
      "html": "<p>The intercept is the <b>b</b> value in a linear graph:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "y = ax + b",
      "html": "<p>y = ax + <b>b</b></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In this example, slope = 1.2 and intercept = 7 :",
      "html": "<p>In this example, slope = 1.2 and <b>intercept</b> = <b>7</b>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/ai/tryit.asp?filename=tryai_plotly_function_linear3",
        "syntaxHighlighting": [
          {
            "text": "\nlet slope = 1.2;\nlet intercept = 7;\nconst xValues = [];\nconst yValues = [];\n\n// Generate values\nfor (let x = 0; x <= 10; x += 1) {\n\u00a0\u00a0xValues.push(x);\n\u00a0\u00a0yValues.push(x * slope + intercept);\n}\n\n// Define Data\nconst data = [{\n\u00a0\u00a0x: xValues,\n\u00a0\u00a0y: yValues,\n\u00a0\u00a0mode: \"lines\"\n}];\n\n// Define Layout\nconst layout = {title: \"Slope=\" + slope + \" Intercept=\" + intercept};\n\n// Display using Plotly\nPlotly.newPlot(\"myPlot\", data, layout);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "1.2",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "7",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Generate values",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Define Data",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"lines\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Define Layout",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Slope=\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\" Intercept=\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Display using Plotly",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "newPlot",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"myPlot\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let slope = 1.2;\nlet intercept = 7;\nconst xValues = [];\nconst yValues = [];\n\n// Generate values\nfor (let x = 0; x <= 10; x += 1) {\nxValues.push(x);\nyValues.push(x * slope + intercept);\n}\n\n// Define Data\nconst data = [{\nx: xValues,\ny: yValues,\nmode: \"lines\"\n}];\n\n// Define Layout\nconst layout = {title: \"Slope=\" + slope + \" Intercept=\" + intercept};\n\n// Display using Plotly\nPlotly.newPlot(\"myPlot\", data, layout);",
      "syntax_highlighting": [
        {
          "text": "\nlet slope = 1.2;\nlet intercept = 7;\nconst xValues = [];\nconst yValues = [];\n\n// Generate values\nfor (let x = 0; x <= 10; x += 1) {\n\u00a0\u00a0xValues.push(x);\n\u00a0\u00a0yValues.push(x * slope + intercept);\n}\n\n// Define Data\nconst data = [{\n\u00a0\u00a0x: xValues,\n\u00a0\u00a0y: yValues,\n\u00a0\u00a0mode: \"lines\"\n}];\n\n// Define Layout\nconst layout = {title: \"Slope=\" + slope + \" Intercept=\" + intercept};\n\n// Display using Plotly\nPlotly.newPlot(\"myPlot\", data, layout);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "1.2",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "7",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Generate values",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Define Data",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"lines\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Define Layout",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Slope=\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\" Intercept=\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Display using Plotly",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "newPlot",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"myPlot\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> slope = <span class=\"jsnumbercolor\" style=\"color:#905\">1.2</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> intercept = <span class=\"jsnumbercolor\" style=\"color:#905\">7</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> xValues = [];<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> yValues = [];<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Generate values<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">for</span> (<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>; x &lt;= <span class=\"jsnumbercolor\" style=\"color:#905\">10</span>; x += <span class=\"jsnumbercolor\" style=\"color:#905\">1</span>) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0xValues.<span class=\"jspropertycolor\" style=\"color:black\">push</span>(x);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0yValues.<span class=\"jspropertycolor\" style=\"color:black\">push</span>(x * slope + intercept);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Define Data<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> data = [{<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0x: xValues,<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0y: yValues,<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0mode: <span class=\"jsstringcolor\" style=\"color:green\">\"lines\"</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}];<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Define Layout<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> layout = {title: <span class=\"jsstringcolor\" style=\"color:green\">\"Slope=\"</span> + slope + <span class=\"jsstringcolor\" style=\"color:green\">\" Intercept=\"</span> + intercept};<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Display using Plotly<br/></span>\nPlotly.<span class=\"jspropertycolor\" style=\"color:black\">newPlot</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"myPlot\"</span>, data, layout);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/ai/tryit.asp?filename=tryai_plotly_function_linear3",
      "syntax_highlighting_data": [
        {
          "text": "\nlet slope = 1.2;\nlet intercept = 7;\nconst xValues = [];\nconst yValues = [];\n\n// Generate values\nfor (let x = 0; x <= 10; x += 1) {\n\u00a0\u00a0xValues.push(x);\n\u00a0\u00a0yValues.push(x * slope + intercept);\n}\n\n// Define Data\nconst data = [{\n\u00a0\u00a0x: xValues,\n\u00a0\u00a0y: yValues,\n\u00a0\u00a0mode: \"lines\"\n}];\n\n// Define Layout\nconst layout = {title: \"Slope=\" + slope + \" Intercept=\" + intercept};\n\n// Display using Plotly\nPlotly.newPlot(\"myPlot\", data, layout);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "1.2",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "7",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Generate values",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Define Data",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"lines\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Define Layout",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Slope=\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\" Intercept=\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Display using Plotly",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "newPlot",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"myPlot\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    }
  ]
}