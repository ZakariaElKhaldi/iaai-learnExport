{
  "id": "1cb02f6f-7ce0-4b2b-b3cc-aec4fd9ee4a8",
  "title": "Logical Operatorsin Programming",
  "slug": "logical-operatorsin-programming",
  "metadata": {
    "description": "Learn about Logical Operatorsin Programming with clear explanations and practical examples.",
    "keywords": [
      "logical",
      "operators",
      "operator",
      "result",
      "true",
      "combine",
      "false",
      "example",
      "conditional",
      "statements"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "Introduction to Programming",
    "subcategory": "Logical Operators"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Logical Operators\nin Programming",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Logical operators are used to combine conditional statements.\nWhat is a Logical Operator?\nA logical operator is one or two symbols or a keyword that tells the computer how to combine conditional statements.\nThe result of using a logical operator is a boolean value (\ntrue\nor\nfalse\n).\nSee\nthis page\nfor an overview of other types of operators.\nThe most common logical operators are:\n&&\n(Logical AND)\n||\n(Logical OR)\n!\n(Logical NOT)\nIn the example below, we use the\n&&\noperator to combine two conditions:\nprint(10 == 5 and 10 != 5)\nconsole.log(10 == 5 && 10 != 5);\nSystem.out.println(10 == 5 && 10 != 5);\ncout << (10 == 5 && 10 != 5);\nRun Example \u00bb\nIn the example above, the left side\n10 == 5\nis\nfalse\n, and the right side\n10 != 5\nis\ntrue\n. The logical operator\n&&\nrequires both sides to be\ntrue\nfor the result to be\ntrue\n, so the result is\nfalse\n.\nTry the simulation below to see the result of different logical operators:\n{{ operatorText }}\n{{ op.codeSnippet }}\na\n{{ aValue }}\noperator\n{{ selectedOperator }}\nb\n{{ bValue }}\n{{ operators[currentIndex].codeSnippet }}\n{{ resultValue }}\nRun\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "5791cf13-06e4-4d85-9009-295488ffb0dc",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "f599be34-2d9d-4c44-970d-ceba481c3f7a",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "cc894626-bbc4-4b8e-a929-00902efa119b",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Logical Operators\nin Programming\n\nLogical operators?",
      "options": [
        "a Logical Operator",
        "used to combine conditional statements",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Logical Operators\nin Programming\n\nLogical operators is 'used to combine conditional statements'."
    },
    {
      "question": "What is What?",
      "options": [
        "used to combine conditional statements",
        "None of the above.",
        "None of the above.",
        "a Logical Operator"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of What is 'a Logical Operator'."
    }
  ],
  "summary": "This tutorial covers Logical Operatorsin Programming concepts and techniques. You'll learn how to use Logical Operatorsin Programming effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Logical Operatorsin Programming and how to apply it in your projects."
}