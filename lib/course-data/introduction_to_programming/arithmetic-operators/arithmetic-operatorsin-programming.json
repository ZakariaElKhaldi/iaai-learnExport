{
  "id": "9e5fb46a-b988-40aa-93c1-f52a28cadf28",
  "title": "Arithmetic Operatorsin Programming",
  "slug": "arithmetic-operatorsin-programming",
  "metadata": {
    "description": "Learn about Arithmetic Operatorsin Programming with clear explanations and practical examples.",
    "keywords": [
      "operator",
      "arithmetic",
      "hello",
      "world",
      "example",
      "operators",
      "exponentiation",
      "print",
      "console",
      "system"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "Introduction to Programming",
    "subcategory": "Arithmetic Operators"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Arithmetic Operators\nin Programming",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Arithmetic operators are used to do mathematical operations on values or variables.\nWhat is an Arithmetic Operator?\nAn arithmetic operator is one or more symbols that tells the computer what mathematical operation it should perform on values or variables.\nSee\nthis page\nfor an overview of other types of operators.\nThe most common arithmetic operators are:\n+\n(Addition)\n-\n(Subtraction)\n*\n(Multiplication)\n/\n(Division)\n%\n(Modulus)\n**\n(Exponentiation)\nIn the example below, we use the\n/\noperator to divide the number\n27\nby\n9\n:\nprint(27 / 9)\nconsole.log(27 / 9);\nSystem.out.println(27 / 9);\ncout << 27 / 9;\nRun Example \u00bb\nUse the simulation below to see the result of different arithmetic operations:\n{{ operatorText }}\n{{ op.codeSnippet }}\na\n{{ aValue }}\noperator\n{{ selectedOperator }}\nb\n{{ bValue }}\nresult\n{{ resultValue }}\nRun\nAddition of Strings\nThe addition operator\n+\ncan also be used to put text strings together, so that\n\"Hello\" + \" World\"\nresults in the combined string\n\"Hello World\"\n.\nprint(\"Hello\" + \" World\")\nconsole.log(\"Hello\" + \" World\");\nSystem.out.println(\"Hello\" + \" World\");\ncout << string(\"Hello\") + \" World\";\nRun Example \u00bb\nThe Modulus Operator\nThe modulus operator\n%\nreturns the remainder of the division. If 7 apples are divided between 3 people, each person gets 2 apples and there is 1 apple left over.\n7 % 3\nis\n1\n(the remainder).\nprint(7 % 3)\nconsole.log(7 % 3);\nSystem.out.println(7 % 3);\ncout << 7 % 3;\nRun Example \u00bb\nThe Exponentiation Operator\nThe exponentiation operator\n**\nraises the first operand to the power of the second, which means that\n2 ** 3\nis the same as\n2 * 2 * 2\n, which equals\n8\n.\nWriting\n2 ** 3\nmathematically looks like this: \\(2^3 = 8\\).\nprint(2 ** 3)\nconsole.log(2 ** 3);\nSystem.out.println(Math.pow(2, 3));\ncout << pow(2, 3);\nRun Example \u00bb\nNote:\nThe exponentiation operator\n**\nis not supported in Java and C++, so the functions\nMath.pow(2, 3)\nand\npow(2, 3)\nare used instead.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "0ccd77af-3ee8-47cf-b90c-512e025420bf",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "a33a5468-bab3-49fd-83f5-a2b195699d4c",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "3998a6da-7b96-481d-be91-408ab0e910ba",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Arithmetic Operators\nin Programming\n\nArithmetic operators?",
      "options": [
        "an Arithmetic Operator",
        "None of the above.",
        "used to do mathematical operations on values or variables",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Arithmetic Operators\nin Programming\n\nArithmetic operators is 'used to do mathematical operations on values or variables'."
    },
    {
      "question": "What is What?",
      "options": [
        "None of the above.",
        "an Arithmetic Operator",
        "None of the above.",
        "used to do mathematical operations on values or variables"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of What is 'an Arithmetic Operator'."
    }
  ],
  "summary": "This tutorial covers Arithmetic Operatorsin Programming concepts and techniques. You'll learn how to use Arithmetic Operatorsin Programming effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Arithmetic Operatorsin Programming and how to apply it in your projects."
}