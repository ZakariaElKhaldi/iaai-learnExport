{
  "id": "807e6861-1a12-4b1e-b72c-2faf7ec6b770",
  "title": "RustMatch",
  "slug": "rustmatch",
  "metadata": {
    "description": "Learn about RustMatch with clear explanations and practical examples.",
    "keywords": [
      "c",
      "match",
      "println",
      "example",
      "value",
      "result",
      "code",
      "main",
      "thursday",
      "invalid",
      "variable"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnRust",
    "subcategory": "Rust Match"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Rust\nMatch",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Rust\nMatch\n\nMatch\nWhen you have many choices",
      "content": ", using\nmatch\nis easier than writing lots of\nif...else\n.\nmatch\nis used to select one of many code blocks to be executed:\nExample\nfn main() {\nlet day = 4;\nmatch day {\n1 => println!(\"Monday\"),\n2 => println!(\"Tuesday\"),\n3 => println!(\"Wednesday\"),\n4 => println!(\"Thursday\"),\n5 => println!(\"Friday\"),\n6 => println!(\"Saturday\"),\n7 => println!(\"Sunday\"),\n_ => println!(\"Invalid day.\"),\n}\n}\n\nExample explained:\nThe\nmatch\nvariable (\nday\n) is evaluated once.\nThe value of the day variable is compared with the values of each \"branch\"\nEach branch starts with a value, followed by\n=>\nand a result\nIf there is a match, the associated block of code is executed\n_\nis used to specify some code to run if there is no match (like\ndefault\nin other languages).\nIn the example above, the value of\nday\nis\n4\n, meaning \"Thursday\" will be printed\nMultiple Matches\nYou can match multiple values at once using the\n|\noperator (OR):\nExample\nfn main() {\nlet day = 6;\nmatch day {\n1 | 2 | 3 | 4 | 5 => println!(\"Weekday\"),\n6 | 7 => println!(\"Weekend\"),\n_ => println!(\"Invalid day\"),\n}\n}\n\nmatch\nwith a Return Value\nJust like\nif\n,\nmatch\ncan also return a value:\nThis means you can save the result of a match into a variable:\nExample\nfn main() {\nlet day = 4;\nlet result = match day {\n1 => \"Monday\",\n2 => \"Tuesday\",\n3 => \"Wednesday\",\n4 => \"Thursday\",\n5 => \"Friday\",\n6 => \"Saturday\",\n7 => \"Sunday\",\n_ => \"Invalid day.\",\n};\nprintln!(\"{}\", result);\n}\n\nNote:",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Each part of the\nmatch\nbranches must be the same\ntype",
      "content": "- just like with\nif...else\n.\n\n\u2605\n+1",
      "order": 3,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "fn main() {\nlet day = 4;\nmatch day {\n1 => println!(\"Monday\"),\n2 => println!(\"Tuesday\"),\n3 => println!(\"Wednesday\"),\n4 => println!(\"Thursday\"),\n5 => println!(\"Friday\"),\n6 => println!(\"Saturday\"),\n7 => println!(\"Sunday\"),\n_ => println!(\"Invalid day.\"),\n}\n}",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "fn main() {\nlet day = 6;\nmatch day {\n1 | 2 | 3 | 4 | 5 => println!(\"Weekday\"),\n6 | 7 => println!(\"Weekend\"),\n_ => println!(\"Invalid day\"),\n}\n}",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "fn main() {\nlet day = 4;\nlet result = match day {\n1 => \"Monday\",\n2 => \"Tuesday\",\n3 => \"Wednesday\",\n4 => \"Thursday\",\n5 => \"Friday\",\n6 => \"Saturday\",\n7 => \"Sunday\",\n_ => \"Invalid day.\",\n};\nprintln!(\"{}\", result);\n}",
      "language": "java",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "fn main() {\nlet day = 4;\nmatch day {\n1 => println!(\"Monday\"),\n2 => println!(\"Tuesday\"),\n3 => println!(\"Wednesday\"),\n4 => println!(\"Thursday\"),\n5 => println!(\"Friday\"),\n6 => println!(\"Saturday\"),\n7 => println!(\"Sunday\"),\n# TODO: Complete this line\n}\n}",
      "solution": "fn main() {\nlet day = 4;\nmatch day {\n1 => println!(\"Monday\"),\n2 => println!(\"Tuesday\"),\n3 => println!(\"Wednesday\"),\n4 => println!(\"Thursday\"),\n5 => println!(\"Friday\"),\n6 => println!(\"Saturday\"),\n7 => println!(\"Sunday\"),\n_ => println!(\"Invalid day.\"),\n}\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "fn main() {\nlet day = 6;\nmatch day {\n# TODO: Complete this line\n6 | 7 => println!(\"Weekend\"),\n_ => println!(\"Invalid day\"),\n}\n}",
      "solution": "fn main() {\nlet day = 6;\nmatch day {\n1 | 2 | 3 | 4 | 5 => println!(\"Weekday\"),\n6 | 7 => println!(\"Weekend\"),\n_ => println!(\"Invalid day\"),\n}\n}"
    }
  ],
  "related_topics": [
    {
      "id": "1a182a2b-3bde-48c5-86a4-2d158ba38baa",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "e06fe8a5-cee1-4c1c-9e3a-9fb330a74bcd",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "81bb0a9f-0a8d-49b1-9b02-a0f572435c0d",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is using\nmatch?",
      "options": [
        "used to select one of many code blocks to be executed:\nExample\nfn main() {\nlet day = 4;\nmatch day {\n1 => println",
        "easier than writing lots of\nif",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of using\nmatch is 'easier than writing lots of\nif'."
    },
    {
      "question": "What is match?",
      "options": [
        "None of the above.",
        "None of the above.",
        "used to select one of many code blocks to be executed:\nExample\nfn main() {\nlet day = 4;\nmatch day {\n1 => println",
        "easier than writing lots of\nif"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of match is 'used to select one of many code blocks to be executed:\nExample\nfn main() {\nlet day = 4;\nmatch day {\n1 => println'."
    }
  ],
  "summary": "This tutorial covers RustMatch concepts and techniques. You'll learn how to use RustMatch effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of RustMatch and how to apply it in your projects."
}