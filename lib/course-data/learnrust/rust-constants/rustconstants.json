{
  "id": "2501ee2d-b9f3-46de-b658-64316faa1602",
  "title": "RustConstants",
  "slug": "rustconstants",
  "metadata": {
    "description": "Learn about RustConstants with clear explanations and practical examples.",
    "keywords": [
      "c",
      "type",
      "constants",
      "const",
      "constant",
      "variables",
      "rust",
      "must",
      "birthyear",
      "used",
      "change"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnRust",
    "subcategory": "Rust Constants"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Rust\nConstants",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Constants\nConstant variables are used to store values that never change.\nUnlike regular variables, constants must be defined with a\ntype\n(e.g.\ni32\nor\nchar\n).\nCreating a Constant\nTo create a constant, use the\nconst\nkeyword, \nfollowed by the name, type, and value:\nExample\nconst BIRTHYEAR: i32 = 1980;\nconst \n  MINUTES_PER_HOUR: i32 = 60;\n\nConstants Must Have a Type\nYou must write the type when creating a constant. You cannot let \nRust guess the type like you can with regular variables:\nExample\nconst BIRTHYEAR: i32 = 1980; // Ok\nconst BIRTHYEAR = 1980;\u00a0// Error: missing type\n\nNaming Rules\nAnother thing about constants, is that it is considered good practice to declare them with uppercase.\nIt is not required, but useful for code readability and common for Rust programmers:\nExamples:\nMAX_SPEED\nPI\nMINUTES_PER_HOUR\nConstants vs Variables\nHere's a quick comparison:\nFeature\nConstant (\nconst\n)\nVariable (\nlet\n)\nCan change?\nNo\nYes, if\nmut\nis used\nType required?\nYes\nNo (optional)\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "const BIRTHYEAR: i32 = 1980;\nconst \n  MINUTES_PER_HOUR: i32 = 60;",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "const BIRTHYEAR: i32 = 1980; // Ok\nconst BIRTHYEAR = 1980;\u00a0// Error: missing type",
      "language": "java",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "const BIRTHYEAR: i32 = 1980;\n# TODO: Complete this line\n  MINUTES_PER_HOUR: i32 = 60;",
      "solution": "const BIRTHYEAR: i32 = 1980;\nconst \n  MINUTES_PER_HOUR: i32 = 60;"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your java code here",
      "solution": "const BIRTHYEAR: i32 = 1980; // Ok\nconst BIRTHYEAR = 1980;\u00a0// Error: missing type"
    }
  ],
  "related_topics": [
    {
      "id": "e180a046-b2aa-438e-b831-cb8f740f9f2d",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "b3bf2d39-54a9-4258-8888-38ba070f44aa",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "9156a559-3309-4fe9-bca0-33d224fb0253",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Rust\nConstants\n\nConstants\nConstant variables?",
      "options": [
        "considered good practice to declare them with uppercase",
        "used to store values that never change",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Rust\nConstants\n\nConstants\nConstant variables is 'used to store values that never change'."
    },
    {
      "question": "What is is that it?",
      "options": [
        "used to store values that never change",
        "None of the above.",
        "considered good practice to declare them with uppercase",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of is that it is 'considered good practice to declare them with uppercase'."
    }
  ],
  "summary": "This tutorial covers RustConstants concepts and techniques. You'll learn how to use RustConstants effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of RustConstants and how to apply it in your projects."
}