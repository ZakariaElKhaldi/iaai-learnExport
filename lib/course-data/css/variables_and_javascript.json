{
  "title": "CSS Change Variables With JavaScript",
  "url": "https://www.w3schools.com/css/css3_variables_javascript.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "CSS Change Variables With JavaScript",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Change Variables With JavaScript",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "CSS variables have access to the DOM, which means that you can change them with JavaScript.",
      "html": "<p>CSS variables have access to the DOM, which means that you can change them with JavaScript.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "JavaScript Tutorial",
          "href": "https://www.w3schools.com/js/default.asp",
          "title": ""
        }
      ],
      "text": "Here is an example of how you can create a script to display and change the --blue variable from the example used in the previous pages. For now, do not worry if you are not familiar with JavaScript. You can learn more about JavaScript in our JavaScript Tutorial :",
      "html": "<p>Here is an example of how you can create a script to display and change the --blue variable from the example used in the previous pages. \nFor now, do not worry if you are not familiar with JavaScript. You can learn \nmore about JavaScript in our <a href=\"/js/default.asp\">JavaScript Tutorial</a>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/css/tryit.asp?filename=trycss3_var_js",
        "syntaxHighlighting": [
          {
            "text": "<script>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "// Get the root elementvar r = document.querySelector(':root');\n  // Create a function for getting a variable valuefunction \n  myFunction_get() {\u00a0 // Get the styles (properties and values) for the \n  root\u00a0 var rs = getComputedStyle(r);\u00a0 // Alert the value of \n  the --blue variable\u00a0 alert(\"The value of --blue is: \" + \n  rs.getPropertyValue('--blue'));}// Create a function for setting a \n  variable valuefunction myFunction_set() {\u00a0 // Set the value of \n  variable --blue to another value (in this case \"lightblue\")\u00a0 \n  r.style.setProperty('--blue', 'lightblue');}",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "// Get the root element",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "querySelector",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "':root'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Create a function for getting a variable value",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Get the styles (properties and values) for the \n  root",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "// Alert the value of \n  the --blue variable",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\"The value of --blue is: \"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getPropertyValue",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "'--blue'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// Create a function for setting a \n  variable value",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "// Set the value of \n  variable --blue to another value (in this case \"lightblue\")",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "style",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "setProperty",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "'--blue'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "'lightblue'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "</script>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "htmlHigh"
        ],
        "isNotranslate": true
      },
      "code": "<script>// Get the root elementvar r = document.querySelector(':root');\n// Create a function for getting a variable valuefunction\nmyFunction_get() {\u00a0 // Get the styles (properties and values) for the\nroot\u00a0 var rs = getComputedStyle(r);\u00a0 // Alert the value of\nthe --blue variable\u00a0 alert(\"The value of --blue is: \" +\nrs.getPropertyValue('--blue'));}// Create a function for setting a\nvariable valuefunction myFunction_set() {\u00a0 // Set the value of\nvariable --blue to another value (in this case \"lightblue\")\nr.style.setProperty('--blue', 'lightblue');}</script>",
      "syntax_highlighting": [
        {
          "text": "<script>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "// Get the root elementvar r = document.querySelector(':root');\n // Create a function for getting a variable valuefunction \n  myFunction_get() {\u00a0 // Get the styles (properties and values) for the \n  root\u00a0 var rs = getComputedStyle(r);\u00a0 // Alert the value of \n  the --blue variable\u00a0 alert(\"The value of --blue is: \" + \n  rs.getPropertyValue('--blue'));}// Create a function for setting a \n  variable valuefunction myFunction_set() {\u00a0 // Set the value of \n  variable --blue to another value (in this case \"lightblue\")\u00a0 \n  r.style.setProperty('--blue', 'lightblue');}",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "// Get the root element",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "querySelector",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "':root'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Create a function for getting a variable value",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Get the styles (properties and values) for the \n  root",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "// Alert the value of \n  the --blue variable",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\"The value of --blue is: \"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getPropertyValue",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "'--blue'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// Create a function for setting a \n  variable value",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "// Set the value of \n  variable --blue to another value (in this case \"lightblue\")",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "style",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "setProperty",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "'--blue'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "'lightblue'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "</script>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate htmlHigh\">\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>script<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><span class=\"jscolor\" style=\"color:black\"><br/><span class=\"commentcolor\" style=\"color:slategray\">// Get the root element<br/></span><span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> r = document.<span class=\"jspropertycolor\" style=\"color:black\">querySelector</span>(<span class=\"jsstringcolor\" style=\"color:green\">':root'</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <br/><span class=\"commentcolor\" style=\"color:slategray\">// Create a function for getting a variable value<br/></span><span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  myFunction_get() {<br/>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Get the styles (properties and values) for the \n  root<br/></span>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> rs = getComputedStyle(r);<br/>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Alert the value of \n  the --blue variable<br/></span>\u00a0 alert(<span class=\"jsstringcolor\" style=\"color:green\">\"The value of --blue is: \"</span> + <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  rs.<span class=\"jspropertycolor\" style=\"color:black\">getPropertyValue</span>(<span class=\"jsstringcolor\" style=\"color:green\">'--blue'</span>));<br/>}<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Create a function for setting a \n  variable value<br/></span><span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> myFunction_set() {<br/>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Set the value of \n  variable --blue to another value (in this case \"lightblue\")<br/></span>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  r.<span class=\"jspropertycolor\" style=\"color:black\">style</span>.<span class=\"jspropertycolor\" style=\"color:black\">setProperty</span>(<span class=\"jsstringcolor\" style=\"color:green\">'--blue'</span>, <span class=\"jsstringcolor\" style=\"color:green\">'lightblue'</span>);<br/>}<br/></span><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/script<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "tryItLink": "https://www.w3schools.com/css/tryit.asp?filename=trycss3_var_js",
      "syntax_highlighting_data": [
        {
          "text": "<script>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "// Get the root elementvar r = document.querySelector(':root');\n  // Create a function for getting a variable valuefunction \n  myFunction_get() {\u00a0 // Get the styles (properties and values) for the \n  root\u00a0 var rs = getComputedStyle(r);\u00a0 // Alert the value of \n  the --blue variable\u00a0 alert(\"The value of --blue is: \" + \n  rs.getPropertyValue('--blue'));}// Create a function for setting a \n  variable valuefunction myFunction_set() {\u00a0 // Set the value of \n  variable --blue to another value (in this case \"lightblue\")\u00a0 \n  r.style.setProperty('--blue', 'lightblue');}",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "// Get the root element",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "querySelector",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "':root'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Create a function for getting a variable value",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Get the styles (properties and values) for the \n  root",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "// Alert the value of \n  the --blue variable",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\"The value of --blue is: \"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getPropertyValue",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "'--blue'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// Create a function for setting a \n  variable value",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "// Set the value of \n  variable --blue to another value (in this case \"lightblue\")",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "style",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "setProperty",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "'--blue'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "'lightblue'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "</script>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "CSS var() Function",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "javascript",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:28%\">Function</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><a href=\"/cssref/func_var.php\">var()</a></td>\n<td>Inserts the value of a CSS variable</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    }
  ]
}