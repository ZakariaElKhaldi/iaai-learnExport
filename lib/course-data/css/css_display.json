{
  "title": "CSS Layout - The display Property",
  "url": "https://www.w3schools.com/css/css_display_visibility.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "CSS Layout - The display Property",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The display property is the most important CSS property for controlling layout.",
      "html": "<p class=\"intro\">The <code>display</code> property is the most important CSS property for controlling layout.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The display Property",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The display property is used to specify how an element is shown on a web page.",
      "html": "<p>The <code>display</code> property is used to specify how an element is shown on a web page.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Every HTML element has a default display value, depending on what type of element it is. The default display value for most elements is block or inline .",
      "html": "<p>Every HTML element has a default display value, depending on what type of element it is. The default display value for most elements is <code>block</code> or \n<code>inline</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The display property is used to change the default display behavior of HTML elements.",
      "html": "<p>The <code>display</code> property is used to change the default display behavior of HTML elements. </p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Block-level Elements",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A block-level element ALWAYS starts on a new line and takes up the full width available (stretches out to the left and right as far as it can).",
      "html": "<p>A block-level element ALWAYS starts on a new line and takes up the full width available \n(stretches out to the left and right as far as it can).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Examples of block-level elements:",
      "html": "<p>Examples of block-level elements:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Inline Elements",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "An inline element DOES NOT start on a new line and only takes up as much width as necessary.",
      "html": "<p>An inline element DOES NOT start on a new line and only takes up as much width as necessary.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This is an inline <span> element inside a paragraph.",
      "html": "<p>This is <span style=\"border-width:3px;border-style:solid;\">an inline &lt;span&gt; element \ninside</span> a paragraph.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Examples of inline elements:",
      "html": "<p>Examples of inline elements:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The display Property Values",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The display property has many values:",
      "html": "<p>The <code>display</code> property has many values:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:25%\">Value</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>inline</td>\n<td>Displays an element as an inline element</td>\n</tr>\n<tr>\n<td>block</td>\n<td>Displays an element as a block element</td>\n</tr>\n<tr>\n<td>contents</td>\n<td>Makes the container disappear, making the child elements children of the \n    element the next level up in the DOM</td>\n</tr>\n<tr>\n<td>flex</td>\n<td>Displays an element as a block-level flex container</td>\n</tr>\n<tr>\n<td>grid</td>\n<td>Displays an element as a block-level grid container</td>\n</tr>\n<tr>\n<td>inline-block</td>\n<td>Displays an element as an inline-level block container. The element itself is formatted as an inline \n    element, but you can apply height and width values</td>\n</tr>\n<tr>\n<td>inline-flex</td>\n<td>Displays an element as an inline-level flex container</td>\n</tr>\n<tr>\n<td>inline-grid</td>\n<td>Displays an element as an inline-level grid container</td>\n</tr>\n<tr>\n<td>inline-table</td>\n<td>The element is displayed as an inline-level table</td>\n</tr>\n<tr>\n<td>list-item</td>\n<td>Let the element behave like a &lt;li&gt; element</td>\n</tr>\n<tr>\n<td>run-in</td>\n<td>Displays an element as either block or inline, depending on context </td>\n</tr>\n<tr>\n<td>table</td>\n<td>Let the element behave like a &lt;table&gt; element</td>\n</tr>\n<tr>\n<td>table-caption</td>\n<td>Let the element behave like a &lt;caption&gt; element</td>\n</tr>\n<tr>\n<td>\n      table-column-group</td>\n<td>Let the element behave like a &lt;colgroup&gt; element</td>\n</tr>\n<tr>\n<td>table-header-group</td>\n<td>Let the element behave like a &lt;thead&gt; element</td>\n</tr>\n<tr>\n<td>table-footer-group</td>\n<td>Let the element behave like a &lt;tfoot&gt; element</td>\n</tr>\n<tr>\n<td>table-row-group</td>\n<td>Let the element behave like a &lt;tbody&gt; element</td>\n</tr>\n<tr>\n<td>table-cell</td>\n<td>Let the element behave like a &lt;td&gt; element</td>\n</tr>\n<tr>\n<td>table-column</td>\n<td>Let the element behave like a &lt;col&gt; element</td>\n</tr>\n<tr>\n<td>table-row</td>\n<td>Let the element behave like a &lt;tr&gt; element</td>\n</tr>\n<tr>\n<td>none</td>\n<td>The element is completely removed</td>\n</tr>\n<tr>\n<td>initial</td>\n<td>Sets this property to its default value</td>\n</tr>\n<tr>\n<td>inherit</td>\n<td>Inherits this property from its parent element</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Display: none;",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "display: none; is commonly used with JavaScript to hide and show elements without deleting and recreating them. Take a look at our last example on this page if you want to know how this can be achieved.",
      "html": "<p><code>display: none;</code> is commonly used with JavaScript to hide \nand show elements without deleting and recreating them. Take a look at our last \nexample on this page if you want to know how this can be achieved.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The <script> element uses display: none; as default.",
      "html": "<p>The <code>&lt;script&gt;</code> element uses <code>display: none;</code> \nas default.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Click to show panel",
      "html": "<p class=\"flip\" onclick=\"myShowFunction()\">Click to show panel</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This panel contains a <div> element, which is hidden by default ( display: none; ).",
      "html": "<p>This panel contains a &lt;div&gt; element, which is hidden by default (<code style=\"color:crimson!important\">display: none;</code>).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It is styled with CSS, and we use JavaScript to show it (change it to ( display: block; ).",
      "html": "<p>It is styled with CSS, and we use JavaScript to show it (change it to (<code style=\"color:crimson!important\">display: block;</code>).</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Override The Default Display Value",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "As mentioned, every element has a default display value. However, you can override this.",
      "html": "<p>As mentioned, every element has a default display value. However, you can \noverride this.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Changing an inline element to a block element, or vice versa, can be useful for making the page look a specific way, and still follow the web standards.",
      "html": "<p>Changing an inline element to a block element, or vice versa, can be useful for \nmaking the page look a specific way, and still follow the web standards.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A common example is making inline <li> elements for horizontal menus:",
      "html": "<p>A common example is making inline <code>&lt;li&gt;</code> elements for horizontal menus:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/css/tryit.asp?filename=trycss_display_inline_list",
        "syntaxHighlighting": [
          {
            "text": "\nli {\u00a0\u00a0display: inline;} ",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0\u00a0display: inline;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": inline;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "cssHigh"
        ],
        "isNotranslate": true
      },
      "code": "li {\u00a0\u00a0display: inline;}",
      "syntax_highlighting": [
        {
          "text": "\nli {\u00a0\u00a0display: inline;} ",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0\u00a0display: inline;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": inline;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate cssHigh\"><span class=\"cssselectorcolor\" style=\"color:#905\">\nli <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0\u00a0display<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> inline<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "tryItLink": "https://www.w3schools.com/css/tryit.asp?filename=trycss_display_inline_list",
      "syntax_highlighting_data": [
        {
          "text": "\nli {\u00a0\u00a0display: inline;} ",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0\u00a0display: inline;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": inline;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: Setting the display property of an element only changes how the element is displayed , NOT what kind of element it is. So, an inline element with display: block; is not allowed to have other block elements inside it.",
      "html": "<p><strong>Note:</strong> Setting the display property of an element only changes <strong>how the element is displayed</strong>, \nNOT what kind of element it is. So, an inline element with <code>display: block;</code> is not allowed\nto have other block elements inside it.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The following example displays <span> elements as block elements:",
      "html": "<p>The following example displays &lt;span&gt; elements as block elements:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/css/tryit.asp?filename=trycss_display_block",
        "syntaxHighlighting": [
          {
            "text": "\nspan {\u00a0 display: block;} ",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0 display: block;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": block;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "cssHigh"
        ],
        "isNotranslate": true
      },
      "code": "span {\u00a0 display: block;}",
      "syntax_highlighting": [
        {
          "text": "\nspan {\u00a0 display: block;} ",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0 display: block;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": block;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate cssHigh\"><span class=\"cssselectorcolor\" style=\"color:#905\">\nspan <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0 display<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> block<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "tryItLink": "https://www.w3schools.com/css/tryit.asp?filename=trycss_display_block",
      "syntax_highlighting_data": [
        {
          "text": "\nspan {\u00a0 display: block;} ",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0 display: block;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": block;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The following example displays <a> elements as block elements:",
      "html": "<p>The following example displays &lt;a&gt; elements as block elements:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/css/tryit.asp?filename=trycss_display_block_a",
        "syntaxHighlighting": [
          {
            "text": "\na {\u00a0 display: block;} ",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0 display: block;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": block;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "cssHigh"
        ],
        "isNotranslate": true
      },
      "code": "a {\u00a0 display: block;}",
      "syntax_highlighting": [
        {
          "text": "\na {\u00a0 display: block;} ",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0 display: block;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": block;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate cssHigh\"><span class=\"cssselectorcolor\" style=\"color:#905\">\na <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0 display<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> block<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "tryItLink": "https://www.w3schools.com/css/tryit.asp?filename=trycss_display_block_a",
      "syntax_highlighting_data": [
        {
          "text": "\na {\u00a0 display: block;} ",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0 display: block;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": block;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Hide an Element - display:none or visibility:hidden?",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "display:none",
      "html": "<p style=\"word-wrap: break-word;\"><code style=\"wrap\">display:none</code></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Remove",
      "html": "<p><button class=\"ws-btn\" onclick=\"removeElement()\">Remove</button></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "visibility:hidden",
      "html": "<p style=\"word-wrap: break-word;\"><code>visibility:hidden</code></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Hide",
      "html": "<p><button class=\"ws-btn\" onclick=\"changeVisibility()\">Hide</button></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Reset",
      "html": "<p>Reset</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Reset All",
      "html": "<p><button class=\"ws-btn\" onclick=\"resetElement()\">Reset All</button></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Hiding an element can be done by setting the display property to none . The element will be hidden, and the page will be displayed as if the element is not there:",
      "html": "<p>Hiding an element can be done by setting the <code>display</code> property to \n<code>none</code>. \nThe element will be hidden, and the page will be displayed as if the element is not \nthere:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/css/tryit.asp?filename=trycss_display_none",
        "syntaxHighlighting": [
          {
            "text": "\nh1.hidden {\u00a0\u00a0display: none;} ",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0\u00a0display: none;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": none;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "cssHigh"
        ],
        "isNotranslate": true
      },
      "code": "h1.hidden {\u00a0\u00a0display: none;}",
      "syntax_highlighting": [
        {
          "text": "\nh1.hidden {\u00a0\u00a0display: none;} ",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0\u00a0display: none;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": none;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate cssHigh\"><span class=\"cssselectorcolor\" style=\"color:#905\">\nh1.hidden <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0\u00a0display<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> none<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "tryItLink": "https://www.w3schools.com/css/tryit.asp?filename=trycss_display_none",
      "syntax_highlighting_data": [
        {
          "text": "\nh1.hidden {\u00a0\u00a0display: none;} ",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0\u00a0display: none;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": none;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "visibility:hidden; also hides an element.",
      "html": "<p><code>visibility:hidden;</code> also hides an element.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "However, the element will still take up the same space as before. The element will be hidden, but still affect the layout:",
      "html": "<p>However, the element will still take up the same space \nas before. The element will be hidden, but still affect the layout:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/css/tryit.asp?filename=trycss_visibility_hidden",
        "syntaxHighlighting": [
          {
            "text": "\nh1.hidden {\u00a0\u00a0visibility: hidden;} ",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0\u00a0visibility: hidden;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": hidden;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "cssHigh"
        ],
        "isNotranslate": true
      },
      "code": "h1.hidden {\u00a0\u00a0visibility: hidden;}",
      "syntax_highlighting": [
        {
          "text": "\nh1.hidden {\u00a0\u00a0visibility: hidden;} ",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0\u00a0visibility: hidden;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": hidden;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate cssHigh\"><span class=\"cssselectorcolor\" style=\"color:#905\">\nh1.hidden <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0\u00a0visibility<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> hidden<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "tryItLink": "https://www.w3schools.com/css/tryit.asp?filename=trycss_visibility_hidden",
      "syntax_highlighting_data": [
        {
          "text": "\nh1.hidden {\u00a0\u00a0visibility: hidden;} ",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0\u00a0visibility: hidden;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": hidden;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "More Examples",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Differences between display: none; and visibility: hidden;",
          "href": "https://www.w3schools.com/tryit.asp?filename=trycss_display",
          "title": ""
        }
      ],
      "text": "Differences between display: none; and visibility: hidden; This example demonstrates display: none; versus visibility: hidden;",
      "html": "<p><a href=\"tryit.asp?filename=trycss_display\" target=\"_blank\">Differences between display: none; and visibility: hidden;</a><br/>\nThis example demonstrates display: none; versus visibility: hidden;</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Showing more display types",
          "href": "https://www.w3schools.com/tryit.asp?filename=trycss_display2",
          "title": ""
        }
      ],
      "text": "Showing more display types This example demonstrates some more display types.",
      "html": "<p><a href=\"tryit.asp?filename=trycss_display2\" target=\"_blank\">Showing more display types</a><br/>\nThis example demonstrates some more display types.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Using CSS together with JavaScript to show content",
          "href": "https://www.w3schools.com/tryit.asp?filename=trycss_display_js",
          "title": ""
        }
      ],
      "text": "Using CSS together with JavaScript to show content This example demonstrates how to use CSS and JavaScript to show an element on click.",
      "html": "<p><a href=\"tryit.asp?filename=trycss_display_js\" target=\"_blank\">Using CSS together with JavaScript to show content</a><br/>\nThis example demonstrates how to use CSS and JavaScript to show an element on click.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is the default display value for most HTML elements?",
      "html": "<p>What is the default display value for most HTML elements?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "What is the default display value for most HTML elements?",
        "options": [
          {
            "value": "0",
            "text": "inline-block"
          },
          {
            "value": "1",
            "text": "block or inline"
          },
          {
            "value": "2",
            "text": "flex"
          },
          {
            "value": "3",
            "text": "none"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_display_visibility1"
      },
      "quiz_type": "quiz",
      "question": "What is the default display value for most HTML elements?",
      "options": [
        {
          "value": "0",
          "text": "inline-block"
        },
        {
          "value": "1",
          "text": "block or inline"
        },
        {
          "value": "2",
          "text": "flex"
        },
        {
          "value": "3",
          "text": "none"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_display_visibility1",
      "html": "<form action=\"exercise.asp?x=xrcise_display_visibility1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">inline-block</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">block or inline</label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\">flex</label></div><div class=\"quizoption\"><input id=\"quizoption3\" name=\"quizoption\" type=\"radio\" value=\"3\"/><label for=\"quizoption3\">none</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "CSS Display/Visibility Properties",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:25%\">Property</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><a href=\"/cssref/pr_class_display.php\">display</a></td>\n<td>Specifies how an element should be displayed</td>\n</tr>\n<tr>\n<td><a href=\"/cssref/pr_class_visibility.php\">visibility</a></td>\n<td>Specifies whether or not an element should be visible</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    }
  ]
}