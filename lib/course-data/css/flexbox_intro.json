{
  "title": "CSS Flexbox (Flexible Box Layout)",
  "url": "https://www.w3schools.com/css/css3_flexbox.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "CSS Flexbox",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "1",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "2",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "3",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "4",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "5",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "6",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "7",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "8",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Try it Yourself \u00bb",
          "href": "https://www.w3schools.com/tryit.asp?filename=trycss3_flexbox_flex-wrap_nowrap8",
          "title": ""
        }
      ],
      "text": "Try it Yourself \u00bb",
      "html": "<p><a class=\"ws-btn\" href=\"tryit.asp?filename=trycss3_flexbox_flex-wrap_nowrap8\" target=\"_blank\">Try it Yourself \u00bb</a></p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "What is CSS Flexbox?",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Flexbox is short for the Flexible Box Layout module.",
      "html": "<p>Flexbox is short for the Flexible Box Layout module.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Flexbox is a layout method for arranging items in rows or columns.",
      "html": "<p>Flexbox is a layout method for arranging items in rows or columns.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Flexbox makes it easier to design a flexible responsive layout structure, without using float or positioning.",
      "html": "<p>Flexbox makes it easier to design a \nflexible responsive layout structure, without using float or positioning.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Flexbox vs. Grid",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The CSS Flexbox Layout should be used for one-dimensional layout, with rows OR columns.",
      "html": "<p>The CSS Flexbox Layout should be used for one-dimensional layout, with rows \n  OR columns.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "CSS Grid Layout",
          "href": "https://www.w3schools.com/css_grid.asp",
          "title": ""
        }
      ],
      "text": "The CSS Grid Layout should be used for two-dimensional layout, with rows AND columns.",
      "html": "<p>The <a href=\"css_grid.asp\">CSS Grid Layout</a> should be used for two-dimensional layout, with rows \n  AND columns.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "CSS Flexible Box Layout Module",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Before the Flexible Box Layout module, there were four layout modes:",
      "html": "<p>Before the Flexible Box Layout module, there were four layout modes:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "CSS flexbox is supported in all modern browsers.",
      "html": "<p>CSS flexbox is supported in all modern browsers.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "CSS Flexbox Components",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A flexbox always consists of:",
      "html": "<p>A flexbox always consists of:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "A Flex Container with Three Flex Items",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To start using CSS Flexbox, you need to first define a flex container.",
      "html": "<p>To start using CSS Flexbox, you need to first define a flex container.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The flex container becomes flexible by setting the display property to flex .",
      "html": "<p>The flex container becomes flexible by setting the <code>\ndisplay</code> property to <code>flex</code>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "1",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "2",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "3",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The element above represents a flex container (the blue area) with three flex items .",
      "html": "<p>The element above represents a <strong>flex container</strong> (the blue area) with three \n<strong>flex items</strong>.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/css/tryit.asp?filename=trycss3_flexbox",
        "syntaxHighlighting": [
          {
            "text": "<div \n  class=\"flex-container\">",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " \n  class=\"flex-container\"",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"flex-container\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<div>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</div>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<div>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</div>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<div>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</div>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</div>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "htmlHigh"
        ],
        "isNotranslate": true
      },
      "code": "<div \nclass=\"flex-container\">\n\u00a0 <div>1</div>\n\u00a0 <div>2</div>\n\u00a0 <div>3</div>\n</div>",
      "syntax_highlighting": [
        {
          "text": "<div \n  class=\"flex-container\">",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " \n  class=\"flex-container\"",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"flex-container\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<div>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</div>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<div>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</div>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<div>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</div>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</div>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate htmlHigh\">\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>div<span class=\"attributecolor\" style=\"color:green\"> \n  class<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"flex-container\"</span></span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\u00a0 <span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>div<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>1<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/div<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\u00a0 <span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>div<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>2<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/div<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\u00a0 <span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>div<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>3<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/div<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/div<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "tryItLink": "https://www.w3schools.com/css/tryit.asp?filename=trycss3_flexbox",
      "syntax_highlighting_data": [
        {
          "text": "<div \n  class=\"flex-container\">",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " \n  class=\"flex-container\"",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"flex-container\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<div>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</div>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<div>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</div>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<div>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</div>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</div>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You will learn more about flex containers and flex items in the next chapters.",
      "html": "<p>You will learn more about flex containers and flex items in the next chapters.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Which property and value is used to create a flex container?",
      "html": "<p>Which property and value is used to create a flex container?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "Which property and value is used to create a flex container?",
        "options": [
          {
            "value": "0",
            "text": "display: flexbox"
          },
          {
            "value": "1",
            "text": "display: flex"
          },
          {
            "value": "2",
            "text": "display: flex-item"
          },
          {
            "value": "3",
            "text": "flexbox: layout"
          },
          {
            "value": "4",
            "text": "flex: layout"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_css3_flexbox1"
      },
      "quiz_type": "quiz",
      "question": "Which property and value is used to create a flex container?",
      "options": [
        {
          "value": "0",
          "text": "display: flexbox"
        },
        {
          "value": "1",
          "text": "display: flex"
        },
        {
          "value": "2",
          "text": "display: flex-item"
        },
        {
          "value": "3",
          "text": "flexbox: layout"
        },
        {
          "value": "4",
          "text": "flex: layout"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_css3_flexbox1",
      "html": "<form action=\"exercise.asp?x=xrcise_css3_flexbox1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\"><code>display: flexbox</code></label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\"><code>display: flex</code></label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\"><code>display: flex-item</code></label></div><div class=\"quizoption\"><input id=\"quizoption3\" name=\"quizoption\" type=\"radio\" value=\"3\"/><label for=\"quizoption3\"><code>flexbox: layout</code></label></div><div class=\"quizoption\"><input id=\"quizoption4\" name=\"quizoption\" type=\"radio\" value=\"4\"/><label for=\"quizoption4\"><code>flex: layout</code></label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}