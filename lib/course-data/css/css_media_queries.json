{
  "title": "CSS Media Queries",
  "url": "https://www.w3schools.com/css/css3_mediaqueries.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "CSS Media Queries",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "CSS Media Queries",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The @media rule, introduced in CSS2, made it possible to define different style rules for different media types.",
      "html": "<p>The <code>@media</code> rule, introduced in CSS2, made it possible to define different style rules for different media types.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Media queries in CSS3 extended the CSS2 media types idea: Instead of looking for a type of device, they look at the capability of the device.",
      "html": "<p>Media queries in CSS3 extended the CSS2 media types idea: Instead of looking for a type of device, \nthey look at the capability of the \ndevice.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Media queries can be used to check many things, such as:",
      "html": "<p>Media queries can be used to check many things, such as:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Using media queries are a popular technique for delivering a tailored style sheet to desktops, laptops, tablets, and mobile phones (such as iPhone and Android phones).",
      "html": "<p>Using media queries are a popular technique for delivering a tailored style \nsheet to desktops, laptops, tablets, and mobile phones (such as iPhone and Android phones).</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "CSS Media Types",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:25%\">Value</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>all</td>\n<td>Used for all media type devices</td>\n</tr>\n<tr>\n<td>print</td>\n<td>Used for print preview mode</td>\n</tr>\n<tr>\n<td>screen</td>\n<td>Used for computer screens, tablets, smart-phones etc.</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "CSS Common Media Features",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Here are some commonly used media features:",
      "html": "<p>Here are some commonly used media features:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:25%\">Value</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>orientation</td>\n<td>Orientation of the viewport. Landscape or portrait</td>\n</tr>\n<tr>\n<td>max-height</td>\n<td>Maximum height of the viewport</td>\n</tr>\n<tr>\n<td>min-height</td>\n<td>Minimum height of the viewport</td>\n</tr>\n<tr>\n<td>height</td>\n<td>Height of the viewport (including scrollbar)</td>\n</tr>\n<tr>\n<td>max-width</td>\n<td>Maximum width of the viewport</td>\n</tr>\n<tr>\n<td>min-width</td>\n<td>Minimum width of the viewport</td>\n</tr>\n<tr>\n<td>width</td>\n<td>Width of the viewport (including scrollbar)</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Media Query Syntax",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A media query consists of a media type and can contain one or more media features, which resolve to either true or false.",
      "html": "<p>A media query consists of a media type and can contain one or more \nmedia features, which resolve to either true or false.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n@media not|only mediatype and  (media feature) \n  and  (media feature) {\u00a0\u00a0CSS-Code;} ",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0\u00a0CSS-Code;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          }
        ],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate",
          "cssHigh"
        ],
        "isNotranslate": true
      },
      "code": "@media not|only mediatype and  (media feature)\nand  (media feature) {\u00a0\u00a0CSS-Code;}",
      "syntax_highlighting": [
        {
          "text": "\n@media not|only mediatype and  (media feature) \n  and  (media feature) {\u00a0\u00a0CSS-Code;} ",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0\u00a0CSS-Code;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate cssHigh\"><span class=\"cssselectorcolor\" style=\"color:#905\"><div>\n@media not|only <i>mediatype </i>and<i> </i> (<i>media feature</i>) \n  and<i> </i> (<i>media feature</i>) <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><i><br/>\u00a0\u00a0CSS-Code;<br/></i></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span></div> </span></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate",
        "cssHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n@media not|only mediatype and  (media feature) \n  and  (media feature) {\u00a0\u00a0CSS-Code;} ",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0\u00a0CSS-Code;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate",
        "cssHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The mediatype is optional (if omitted, it will be set to all). However, if you use not or only , you must also specify a mediatype .",
      "html": "<p>The <em>mediatype</em> is optional (if omitted, it will be set to all). However, if you use <strong>not</strong> or <strong> only</strong>, you must also specify a \n<em>mediatype</em>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The result of the query is true if the specified media type matches the type of device the document is being displayed on and all media features in the media query are true. When a media query is true, the corresponding style sheet or style rules are applied, following the normal cascading rules.",
      "html": "<p>The result of the query is \ntrue if the specified media type matches the type of device the document is \nbeing displayed on and all media features in the media query are true. When a media query is true, the corresponding style sheet or style rules are \napplied, following the normal cascading rules.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Meaning of the not , only, and and keywords:",
      "html": "<p>Meaning of the <strong>not</strong>, <strong>only,</strong> and <strong>and</strong> keywords:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "not: This keyword inverts the meaning of an entire media query.",
      "html": "<p><strong>not:</strong> This keyword inverts the meaning of an entire media query.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "only: This keyword prevents older browsers that do not support media queries from applying the specified styles. It has no effect on modern browsers.",
      "html": "<p><strong>only:</strong> This keyword prevents older browsers that do not support media queries from applying the specified styles. \n<strong>It has no effect on modern browsers.</strong></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "and: This keyword combines a media type and one or more media features.",
      "html": "<p><strong>and:</strong> This keyword combines a media type and one or more \nmedia features.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also link to different stylesheets for different media and different widths of the browser window (viewport):",
      "html": "<p>You can also link to different stylesheets for different media and different \nwidths of the browser window (viewport):</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "<link rel=\"stylesheet\" media=\"print\" href=\"print.css\">",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " rel=\"stylesheet\" media=\"print\" href=\"print.css\"",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"stylesheet\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": "=\"print\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": "=\"print.css\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<link rel=\"stylesheet\" media=\"screen\" href=\"screen.css\">",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " rel=\"stylesheet\" media=\"screen\" href=\"screen.css\"",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"stylesheet\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": "=\"screen\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": "=\"screen.css\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<link rel=\"stylesheet\" media=\"screen and (min-width: \n  480px)\" \nhref=\"example1.css\">",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " rel=\"stylesheet\" media=\"screen and (min-width: \n  480px)\" \nhref=\"example1.css\"",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"stylesheet\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": "=\"screen and (min-width: \n  480px)\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": "=\"example1.css\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<link rel=\"stylesheet\" media=\"screen and (min-width: \n  701px) and (max-width: 900px)\" href=\"example2.css\">",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " rel=\"stylesheet\" media=\"screen and (min-width: \n  701px) and (max-width: 900px)\" href=\"example2.css\"",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"stylesheet\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": "=\"screen and (min-width: \n  701px) and (max-width: 900px)\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": "=\"example2.css\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate",
          "htmlHigh"
        ],
        "isNotranslate": true
      },
      "code": "",
      "syntax_highlighting": [
        {
          "text": "<link rel=\"stylesheet\" media=\"print\" href=\"print.css\">",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " rel=\"stylesheet\" media=\"print\" href=\"print.css\"",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"stylesheet\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": "=\"print\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": "=\"print.css\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<link rel=\"stylesheet\" media=\"screen\" href=\"screen.css\">",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " rel=\"stylesheet\" media=\"screen\" href=\"screen.css\"",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"stylesheet\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": "=\"screen\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": "=\"screen.css\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<link rel=\"stylesheet\" media=\"screen and (min-width: \n  480px)\" \nhref=\"example1.css\">",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " rel=\"stylesheet\" media=\"screen and (min-width: \n  480px)\" \nhref=\"example1.css\"",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"stylesheet\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": "=\"screen and (min-width: \n  480px)\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": "=\"example1.css\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<link rel=\"stylesheet\" media=\"screen and (min-width: \n  701px) and (max-width: 900px)\" href=\"example2.css\">",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " rel=\"stylesheet\" media=\"screen and (min-width: \n  701px) and (max-width: 900px)\" href=\"example2.css\"",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"stylesheet\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": "=\"screen and (min-width: \n  701px) and (max-width: 900px)\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": "=\"example2.css\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate htmlHigh\"><div>\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>link<span class=\"attributecolor\" style=\"color:green\"> rel<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"stylesheet\"</span> media<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"print\"</span> href<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"print.css\"</span></span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>link<span class=\"attributecolor\" style=\"color:green\"> rel<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"stylesheet\"</span> media<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"screen\"</span> href<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"screen.css\"</span></span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>link<span class=\"attributecolor\" style=\"color:green\"> rel<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"stylesheet\"</span> media<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"screen and (min-width: \n  480px)\"</span> \nhref<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"example1.css\"</span></span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>link<span class=\"attributecolor\" style=\"color:green\"> rel<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"stylesheet\"</span> media<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"screen and (min-width: \n  701px) and (max-width: 900px)\"</span> href<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"example2.css\"</span></span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\n  etc....</div>\n</div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate",
        "htmlHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "<link rel=\"stylesheet\" media=\"print\" href=\"print.css\">",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " rel=\"stylesheet\" media=\"print\" href=\"print.css\"",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"stylesheet\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": "=\"print\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": "=\"print.css\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<link rel=\"stylesheet\" media=\"screen\" href=\"screen.css\">",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " rel=\"stylesheet\" media=\"screen\" href=\"screen.css\"",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"stylesheet\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": "=\"screen\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": "=\"screen.css\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<link rel=\"stylesheet\" media=\"screen and (min-width: \n  480px)\" \nhref=\"example1.css\">",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " rel=\"stylesheet\" media=\"screen and (min-width: \n  480px)\" \nhref=\"example1.css\"",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"stylesheet\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": "=\"screen and (min-width: \n  480px)\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": "=\"example1.css\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<link rel=\"stylesheet\" media=\"screen and (min-width: \n  701px) and (max-width: 900px)\" href=\"example2.css\">",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " rel=\"stylesheet\" media=\"screen and (min-width: \n  701px) and (max-width: 900px)\" href=\"example2.css\"",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"stylesheet\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": "=\"screen and (min-width: \n  701px) and (max-width: 900px)\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": "=\"example2.css\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate",
        "htmlHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Media Queries Simple Examples",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "One way to use media queries is to have an alternate CSS section right inside your style sheet.",
      "html": "<p>One way to use media queries is to have an alternate CSS section right inside your style sheet.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The following example changes the background-color to lightgreen if the viewport is 480 pixels wide or wider (if the viewport is less than 480 pixels, the background-color will be pink):",
      "html": "<p>The following example changes the background-color to lightgreen if the \nviewport is 480 pixels wide or wider (if the viewport is less than \n480 pixels, the background-color will be pink):</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/css/tryit.asp?filename=trycss3_media_queries1",
        "syntaxHighlighting": [
          {
            "text": "\n@media screen and (min-width: 480px) {\u00a0 body {\n\u00a0\u00a0\u00a0\u00a0background-color: lightgreen;\u00a0\u00a0}}\n ",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0 body {\n\u00a0\u00a0\u00a0\u00a0background-color: lightgreen;\u00a0\u00a0}",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\n\u00a0\u00a0\u00a0\u00a0background-color: lightgreen;\u00a0\u00a0",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": lightgreen;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "cssHigh"
        ],
        "isNotranslate": true
      },
      "code": "@media screen and (min-width: 480px) {\u00a0 body {\nbackground-color: lightgreen;\u00a0\u00a0}}",
      "syntax_highlighting": [
        {
          "text": "\n@media screen and (min-width: 480px) {\u00a0 body {\n\u00a0\u00a0\u00a0\u00a0background-color: lightgreen;\u00a0\u00a0}}\n",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0 body {\n\u00a0\u00a0\u00a0\u00a0background-color: lightgreen;\u00a0\u00a0}",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\n\u00a0\u00a0\u00a0\u00a0background-color: lightgreen;\u00a0\u00a0",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": lightgreen;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate cssHigh\"><span class=\"cssselectorcolor\" style=\"color:#905\">\n@media screen and (min-width: 480px) <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"cssselectorcolor\" style=\"color:#905\"><br/>\u00a0 body <span class=\"cssdelimitercolor\" style=\"color:#999\"><span class=\"cssdelimitercolor\" style=\"color:#999\">{</span></span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\n\u00a0\u00a0\u00a0\u00a0background-color<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> lightgreen<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0\u00a0</span><span class=\"cssdelimitercolor\" style=\"color:#999\"><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span></span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span><br/>\n</span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "tryItLink": "https://www.w3schools.com/css/tryit.asp?filename=trycss3_media_queries1",
      "syntax_highlighting_data": [
        {
          "text": "\n@media screen and (min-width: 480px) {\u00a0 body {\n\u00a0\u00a0\u00a0\u00a0background-color: lightgreen;\u00a0\u00a0}}\n ",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0 body {\n\u00a0\u00a0\u00a0\u00a0background-color: lightgreen;\u00a0\u00a0}",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\n\u00a0\u00a0\u00a0\u00a0background-color: lightgreen;\u00a0\u00a0",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": lightgreen;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The following example shows a menu that will float to the left of the page if the viewport is 480 pixels wide or wider (if the viewport is less than 480 pixels, the menu will be on top of the content):",
      "html": "<p>The following example shows a menu that will float to the left of the page if \nthe viewport is 480 pixels wide or wider (if the viewport is less than \n480 pixels, the menu will be on top of the content):</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/css/tryit.asp?filename=trycss3_media_queries2",
        "syntaxHighlighting": [
          {
            "text": "\n@media screen and (min-width: 480px) {\u00a0\u00a0#leftsidebar \n{width: 200px; float: left;}\u00a0\u00a0#main \n{margin-left: 216px;}}\n ",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0\u00a0#leftsidebar \n{width: 200px; float: left;}\u00a0\u00a0#main \n{margin-left: 216px;}",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "width: 200px; float: left;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": 200px;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": left;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "margin-left: 216px;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": 216px;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "cssHigh"
        ],
        "isNotranslate": true
      },
      "code": "@media screen and (min-width: 480px) {\u00a0\u00a0#leftsidebar\n{width: 200px; float: left;}\u00a0\u00a0#main\n{margin-left: 216px;}}",
      "syntax_highlighting": [
        {
          "text": "\n@media screen and (min-width: 480px) {\u00a0\u00a0#leftsidebar \n{width: 200px; float: left;}\u00a0\u00a0#main \n{margin-left: 216px;}}\n",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0\u00a0#leftsidebar \n{width: 200px; float: left;}\u00a0\u00a0#main \n{margin-left: 216px;}",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "width: 200px; float: left;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": 200px;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": left;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "margin-left: 216px;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": 216px;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate cssHigh\"><span class=\"cssselectorcolor\" style=\"color:#905\">\n@media screen and (min-width: 480px) <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"cssselectorcolor\" style=\"color:#905\"><br/>\u00a0\u00a0#leftsidebar \n<span class=\"cssdelimitercolor\" style=\"color:#999\"><span class=\"cssdelimitercolor\" style=\"color:#999\">{</span></span><span class=\"csspropertycolor\" style=\"color:#d73a49\">width<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 200px<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span> float<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> left<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span></span><span class=\"cssdelimitercolor\" style=\"color:#999\"><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span></span><br/>\u00a0\u00a0#main \n<span class=\"cssdelimitercolor\" style=\"color:#999\"><span class=\"cssdelimitercolor\" style=\"color:#999\">{</span></span><span class=\"csspropertycolor\" style=\"color:#d73a49\">margin-left<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 216px<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span></span><span class=\"cssdelimitercolor\" style=\"color:#999\"><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span></span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span><br/>\n</span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "tryItLink": "https://www.w3schools.com/css/tryit.asp?filename=trycss3_media_queries2",
      "syntax_highlighting_data": [
        {
          "text": "\n@media screen and (min-width: 480px) {\u00a0\u00a0#leftsidebar \n{width: 200px; float: left;}\u00a0\u00a0#main \n{margin-left: 216px;}}\n ",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0\u00a0#leftsidebar \n{width: 200px; float: left;}\u00a0\u00a0#main \n{margin-left: 216px;}",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "width: 200px; float: left;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": 200px;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": left;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "margin-left: 216px;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": 216px;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "More Media Query Examples",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "CSS MQ Examples",
          "href": "https://www.w3schools.com/css3_mediaqueries_ex.asp",
          "title": ""
        }
      ],
      "text": "For much more examples on media queries, go to the next page: CSS MQ Examples .",
      "html": "<p>For much more examples on media queries, go to the next page: <a href=\"css3_mediaqueries_ex.asp\">CSS MQ Examples</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is the purpose of the @media rule in CSS?",
      "html": "<p>What is the purpose of the <code>@media</code> rule in CSS?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "What is the purpose of the @media rule in CSS?",
        "options": [
          {
            "value": "0",
            "text": "To add animations to elements"
          },
          {
            "value": "1",
            "text": "To define styles for different media types"
          },
          {
            "value": "2",
            "text": "To optimize CSS for faster loading"
          },
          {
            "value": "3",
            "text": "To set styles for print media only"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_css3_mediaqueries1"
      },
      "quiz_type": "quiz",
      "question": "What is the purpose of the @media rule in CSS?",
      "options": [
        {
          "value": "0",
          "text": "To add animations to elements"
        },
        {
          "value": "1",
          "text": "To define styles for different media types"
        },
        {
          "value": "2",
          "text": "To optimize CSS for faster loading"
        },
        {
          "value": "3",
          "text": "To set styles for print media only"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_css3_mediaqueries1",
      "html": "<form action=\"exercise.asp?x=xrcise_css3_mediaqueries1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">To add animations to elements</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">To define styles for different media types</label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\">To optimize CSS for faster loading</label></div><div class=\"quizoption\"><input id=\"quizoption3\" name=\"quizoption\" type=\"radio\" value=\"3\"/><label for=\"quizoption3\">To set styles for print media only</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "CSS @media Reference",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "@media rule in our CSS reference",
          "href": "https://www.w3schools.com/cssref/atrule_media.php",
          "title": ""
        }
      ],
      "text": "For a full overview of all the media types and features/expressions, please look at the @media rule in our CSS reference .",
      "html": "<p>For a full overview of all the media types and features/expressions, please look at the\n<a href=\"/cssref/atrule_media.php\">@media rule in our CSS reference</a>.</p>"
    }
  ]
}