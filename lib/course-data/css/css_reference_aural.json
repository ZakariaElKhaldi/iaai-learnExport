{
  "title": "CSS Aural Reference",
  "url": "https://www.w3schools.com/cssref/css_ref_aural.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "CSS Aural Reference",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Aural Style Sheets",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Aural style sheets use a combination of speech synthesis and sound effects to make the user listen to information, instead of reading information.",
      "html": "<p>Aural style sheets use a combination of speech synthesis and sound effects to make the user listen to information, instead of reading information.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Aural presentation can be used:",
      "html": "<p>Aural presentation can be used:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The aural presentation converts the document to plain text and feed this to a screen reader (a program that reads all the characters on the screen).",
      "html": "<p>The aural presentation converts the document to plain text and feed this to a\nscreen reader (a program that reads all the characters on the screen).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "An example of an Aural style sheet:",
      "html": "<p>An example of an Aural style sheet:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n@media aural {\n\u00a0\nh1, h2, h3, h4\n{\n  \u00a0\u00a0\u00a0 voice-family: male;\n  \u00a0\n  \u00a0\nrichness: 80;\n  \u00a0\u00a0\u00a0 cue-before: url(\"beep.au\")\n\u00a0\n}}\n ",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\n\u00a0\nh1, h2, h3, h4\n{\n  \u00a0\u00a0\u00a0 voice-family: male;\n  \u00a0\n  \u00a0\nrichness: 80;\n  \u00a0\u00a0\u00a0 cue-before: url(\"beep.au\")\n\u00a0\n}",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\n  \u00a0\u00a0\u00a0 voice-family: male;\n  \u00a0\n  \u00a0\nrichness: 80;\n  \u00a0\u00a0\u00a0 cue-before: url(\"beep.au\")\n\u00a0\n",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": male;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": 80;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": url(\"beep.au\")\n\u00a0\n",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          }
        ],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate",
          "cssHigh"
        ],
        "isNotranslate": true
      },
      "code": "@media aural {\n\nh1, h2, h3, h4\n{\nvoice-family: male;\n\n\nrichness: 80;\ncue-before: url(\"beep.au\")\n\n}}",
      "syntax_highlighting": [
        {
          "text": "\n@media aural {\n\u00a0\nh1, h2, h3, h4\n{\n  \u00a0\u00a0\u00a0 voice-family: male;\n  \u00a0\n  \u00a0\nrichness: 80;\n  \u00a0\u00a0\u00a0 cue-before: url(\"beep.au\")\n\u00a0\n}}\n ",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\n\u00a0\nh1, h2, h3, h4\n{\n  \u00a0\u00a0\u00a0 voice-family: male;\n  \u00a0\n  \u00a0\nrichness: 80;\n  \u00a0\u00a0\u00a0 cue-before: url(\"beep.au\")\n\u00a0\n}",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\n  \u00a0\u00a0\u00a0 voice-family: male;\n  \u00a0\n  \u00a0\nrichness: 80;\n  \u00a0\u00a0\u00a0 cue-before: url(\"beep.au\")\n\u00a0\n",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": male;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": 80;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": url(\"beep.au\")\n\u00a0\n",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate cssHigh\"><span class=\"cssselectorcolor\" style=\"color:#905\"><div>\n@media aural <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"cssselectorcolor\" style=\"color:#905\"><br/>\n\u00a0\nh1, h2, h3, h4\n<span class=\"cssdelimitercolor\" style=\"color:#999\"><span class=\"cssdelimitercolor\" style=\"color:#999\">{</span></span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\n  \u00a0\u00a0\u00a0 voice-family<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> male<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\n  \u00a0\n  \u00a0\nrichness<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 80<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\n  \u00a0\u00a0\u00a0 cue-before<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> url(\"beep.au\")<br/>\n\u00a0\n</span></span><span class=\"cssdelimitercolor\" style=\"color:#999\"><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span></span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span>\n</div> </span></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate",
        "cssHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n@media aural {\n\u00a0\nh1, h2, h3, h4\n{\n  \u00a0\u00a0\u00a0 voice-family: male;\n  \u00a0\n  \u00a0\nrichness: 80;\n  \u00a0\u00a0\u00a0 cue-before: url(\"beep.au\")\n\u00a0\n}}\n ",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\n\u00a0\nh1, h2, h3, h4\n{\n  \u00a0\u00a0\u00a0 voice-family: male;\n  \u00a0\n  \u00a0\nrichness: 80;\n  \u00a0\u00a0\u00a0 cue-before: url(\"beep.au\")\n\u00a0\n}",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\n  \u00a0\u00a0\u00a0 voice-family: male;\n  \u00a0\n  \u00a0\nrichness: 80;\n  \u00a0\u00a0\u00a0 cue-before: url(\"beep.au\")\n\u00a0\n",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": male;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": 80;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": url(\"beep.au\")\n\u00a0\n",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate",
        "cssHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The example above will make the speech synthesizer play a sound, then speak the headers in a very rich male voice.",
      "html": "<p>The example above will make the speech synthesizer play a sound, then speak the headers in a very rich male voice.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: The aural CSS media type is deprecated.",
      "html": "<p><strong>Note:</strong> The aural CSS media type is deprecated.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "CSS Aural Reference",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:25%\">Property</th>\n<th>Description</th>\n<th style=\"width:20%\">Values</th>\n</tr>\n<tr>\n<td>azimuth</td>\n<td>Sets where the sound should come from</td>\n<td><i>angle</i><br/>\n      left-side<br/>\n      far-left<br/>\n      left<br/>\n      center-left<br/>\n      center<br/>\n      center-right<br/>\n      right<br/>\n      far-right<br/>\n      right-side<br/>\n      behind<br/>\n      leftwards<br/>\n      rightwards</td>\n</tr>\n<tr>\n<td>cue</td>\n<td>Sets the cue properties\n      in one declaration</td>\n<td><i>cue-before<br/>\n      cue-after</i></td>\n</tr>\n<tr>\n<td>cue-after</td>\n<td>Specifies a sound to be played after speaking an element's\n      content</td>\n<td>none<br/>\n<i>url</i></td>\n</tr>\n<tr>\n<td>cue-before</td>\n<td>Specifies a sound to be played before speaking an element's\n      content</td>\n<td>none<br/>\n<i>url</i></td>\n</tr>\n<tr>\n<td>elevation</td>\n<td>Sets where the sound should come from</td>\n<td>angle<br/>\n      below<br/>\n      level<br/>\n      above<br/>\n      higher<br/>\n      lower</td>\n</tr>\n<tr>\n<td>pause</td>\n<td>Sets the pause properties\n      in one declaration</td>\n<td><i>pause-before<br/>\n      pause-after</i></td>\n</tr>\n<tr>\n<td>pause-after</td>\n<td>Specifies a pause after speaking an element's content</td>\n<td><i>time<br/>\n      %</i></td>\n</tr>\n<tr>\n<td>pause-before</td>\n<td>Specifies a pause before speaking an element's content</td>\n<td><i>time<br/>\n      %</i></td>\n</tr>\n<tr>\n<td>pitch</td>\n<td>Specifies the speaking voice</td>\n<td><i>frequency</i><br/>\n      x-low<br/>\n      low<br/>\n      medium<br/>\n      high<br/>\n      x-high</td>\n</tr>\n<tr>\n<td>pitch-range</td>\n<td>Specifies the variation in the speaking voice. (Monotone\n      voice or animated voice?)</td>\n<td><i>number</i></td>\n</tr>\n<tr>\n<td>play-during</td>\n<td>Specifies a sound to be played while speaking an element's\n      content</td>\n<td>auto<br/>\n      none<br/>\n<i>url</i><br/>\n      mix<br/>\n      repeat</td>\n</tr>\n<tr>\n<td>richness</td>\n<td>Specifies the richness of the speaking voice. (Rich voice\n      or thin voice?)</td>\n<td><i>number</i></td>\n</tr>\n<tr>\n<td>speak</td>\n<td>Specifies whether content will render aurally</td>\n<td>normal<br/>\n      none<br/>\n      spell-out</td>\n</tr>\n<tr>\n<td>speak-header</td>\n<td>Specifies how to handle table headers. Should the headers\n      be spoken before every cell, or only before a cell with a different header\n      than the previous cell</td>\n<td>always<br/>\n      once<br/>\n</td>\n</tr>\n<tr>\n<td>speak-numeral</td>\n<td>Specifies how to speak numbers</td>\n<td>digits<br/>\n      continuous</td>\n</tr>\n<tr>\n<td>speak-punctuation</td>\n<td>Specifies how to speak punctuation characters</td>\n<td>none<br/>\n      code</td>\n</tr>\n<tr>\n<td>speech-rate</td>\n<td>Specifies the speed of the speaking</td>\n<td><i>number</i><br/>\n      x-slow<br/>\n      slow<br/>\n      medium<br/>\n      fast<br/>\n      x-fast<br/>\n      faster<br/>\n      slower</td>\n</tr>\n<tr>\n<td>stress</td>\n<td>Specifies the \"stress\" in the speaking voice</td>\n<td><i>number</i></td>\n</tr>\n<tr>\n<td>voice-family</td>\n<td>Specifies the voice family of the speaking</td>\n<td><i>specific-voice<br/>\n      generic-voice</i></td>\n</tr>\n<tr>\n<td>volume</td>\n<td>Specifies the volume of the speaking</td>\n<td><i>number<br/>\n</i><i>%<br/>\n</i>silent<br/>\n      x-soft<br/>\n      soft<br/>\n      medium<br/>\n      loud<br/>\n      x-loud</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    }
  ]
}