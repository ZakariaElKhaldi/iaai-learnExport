{
  "title": "Kotlin Ranges",
  "url": "https://www.w3schools.com/kotlin/kotlin_ranges.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Kotlin Ranges",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Kotlin Ranges",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "for loop",
          "href": "https://www.w3schools.com/kotlin_for_loop.php",
          "title": ""
        }
      ],
      "text": "With the for loop , you can also create ranges of values with \" .. \":",
      "html": "<p>With the <a href=\"kotlin_for_loop.php\"><code>for</code> loop</a>, you can also create \n<strong>ranges</strong> of values with \"<code>..</code>\":</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_ranges",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "for\n\n(\nchars\nin\n\n'a'\n..\n'x'\n)\n\n{\n\n\nprintln\n(\nchars\n)\n\n\n}",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-for\">for</span> <span class=\"token punctuation\">(</span>chars <span class=\"token keyword keyword-in\">in</span> <span class=\"token char\">'a'</span><span class=\"token operator\">..</span><span class=\"token char\">'x'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>chars<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_ranges",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also create ranges of numbers:",
      "html": "<p>You can also create ranges of numbers:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_ranges2",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "for\n\n(\nnums\nin\n\n5\n..\n15\n)\n\n{\n\n\nprintln\n(\nnums\n)\n\n\n}",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-for\">for</span> <span class=\"token punctuation\">(</span>nums <span class=\"token keyword keyword-in\">in</span> <span class=\"token number\">5</span><span class=\"token operator\">..</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> </code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_ranges2",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: The first and last value is included in the range.",
      "html": "<p><strong>Note:</strong> The first and last value is included in the range.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Check if a Value Exists",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also use the in operator to check if a value exists in a range:",
      "html": "<p>You can also use the <code>in</code> operator to check if a value exists in \na range:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_ranges_in",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "val\nnums\n=\n\narrayOf\n(\n2\n,\n\n4\n,\n\n6\n,\n\n8\n)\n\n\nif\n\n(\n2\n\nin\nnums\n)\n\n{\n\n\nprintln\n(\n\"It exists!\"\n)\n\n\n}\n\nelse\n\n{\n\n\nprintln\n(\n\"It does not exist.\"\n)\n\n\n}",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-val\">val</span> nums <span class=\"token operator\">=</span> <span class=\"token function\">arrayOf</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token keyword keyword-in\">in</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"It exists!\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword keyword-else\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"It does not exist.\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_ranges_in",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_ranges_in2",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "val\ncars\n=\n\narrayOf\n(\n\"Volvo\"\n,\n\n\"BMW\"\n,\n\n\"Ford\"\n,\n\n\"Mazda\"\n)\n\n\nif\n\n(\n\"Volvo\"\n\nin\ncars\n)\n\n{\n\n\nprintln\n(\n\"It exists!\"\n)\n\n\n}\n\nelse\n\n{\n\n\nprintln\n(\n\"It does not exist.\"\n)\n\n\n}",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-val\">val</span> cars <span class=\"token operator\">=</span> <span class=\"token function\">arrayOf</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"Volvo\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"BMW\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Ford\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Mazda\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"Volvo\"</span></span> <span class=\"token keyword keyword-in\">in</span> cars<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"It exists!\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword keyword-else\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"It does not exist.\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> </code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_ranges_in2",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Break or Continue a Range",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also use the break and continue keywords in a range/ for loop:",
      "html": "<p>You can also use the <code>break</code> and <code>continue</code> keywords in a range/<code>for</code> loop:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_ranges_break",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "for\n\n(\nnums\nin\n\n5\n..\n15\n)\n\n{\n\n\nif\n\n(\nnums\n==\n\n10\n)\n\n{\n\n\nbreak\n\n\n}\n\n\nprintln\n(\nnums\n)\n\n\n}",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-for\">for</span> <span class=\"token punctuation\">(</span>nums <span class=\"token keyword keyword-in\">in</span> <span class=\"token number\">5</span><span class=\"token operator\">..</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span>nums <span class=\"token operator\">==</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-break\">break</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> </code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_ranges_break",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_ranges_continue",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "for\n\n(\nnums\nin\n\n5\n..\n15\n)\n\n{\n\n\nif\n\n(\nnums\n==\n\n10\n)\n\n{\n\n\ncontinue\n\n\n}\n\n\nprintln\n(\nnums\n)\n\n\n}",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-for\">for</span> <span class=\"token punctuation\">(</span>nums <span class=\"token keyword keyword-in\">in</span> <span class=\"token number\">5</span><span class=\"token operator\">..</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span>nums <span class=\"token operator\">==</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-continue\">continue</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> </code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_ranges_continue",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    }
  ]
}