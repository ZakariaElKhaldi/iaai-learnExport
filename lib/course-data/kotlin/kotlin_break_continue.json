{
  "title": "Kotlin Break and Continue",
  "url": "https://www.w3schools.com/kotlin/kotlin_break.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Kotlin Break and Continue",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Kotlin Break",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The break statement is used to jump out of a loop .",
      "html": "<p>The <code>break</code> statement is used to jump out of a \n<strong>loop</strong>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This example jumps out of the loop when i is equal to 4:",
      "html": "<p>This example jumps out of the loop when i is equal to 4:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_break",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "var\ni\n=\n\n0\n\n\nwhile\n\n(\ni\n<\n\n10\n)\n\n{\n\n\nprintln\n(\ni\n)\n\ni\n++\n\n\nif\n\n(\ni\n==\n\n4\n)\n\n{\n\n\nbreak\n\n\n}\n\n\n}",
      "language": "javascript",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-var\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword keyword-while\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n  i<span class=\"token operator\">++</span>\n  <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-break\">break</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_break",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Kotlin Continue",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The continue statement breaks one iteration (in the loop), if a specified condition occurs, and continues with the next iteration in the loop.",
      "html": "<p>The <code>continue</code> statement breaks one iteration (in the loop), if a specified condition occurs, and continues with the next iteration in the loop.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This example skips the value of 4:",
      "html": "<p>This example skips the value of 4:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_continue",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "var\ni\n=\n\n0\n\n\nwhile\n\n(\ni\n<\n\n10\n)\n\n{\n\n\nif\n\n(\ni\n==\n\n4\n)\n\n{\n\ni\n++\n\n\ncontinue\n\n\n}\n\n\nprintln\n(\ni\n)\n\ni\n++\n}",
      "language": "javascript",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-var\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword keyword-while\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    i<span class=\"token operator\">++</span>\n    <span class=\"token keyword keyword-continue\">continue</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n  i<span class=\"token operator\">++</span><span class=\"token punctuation\"><br/>}</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_continue",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    }
  ]
}