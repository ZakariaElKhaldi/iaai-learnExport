{
  "title": "Kotlin Functions",
  "url": "https://www.w3schools.com/kotlin/kotlin_functions.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Kotlin Functions",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A function is a block of code which only runs when it is called.",
      "html": "<p class=\"intro\">A <strong>function</strong> is a block of code which only runs when it is called.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can pass data, known as parameters, into a function.",
      "html": "<p class=\"intro\">You can pass data, known as parameters, into a function.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Functions are used to perform certain actions, and they are also known as methods .",
      "html": "<p class=\"intro\">Functions are used to perform certain actions, and they are also known as <strong>methods</strong>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Predefined Functions",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "So it turns out you already know what a function is. You have been using it the whole time through this tutorial!",
      "html": "<p>So it turns out you already know what a function is. You have been using it \nthe whole time through this tutorial!</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "For example, println() is a function. It is used to output/print text to the screen:",
      "html": "<p>For example, <code>println()</code> is a function. It is used to output/print text to the screen:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_helloworld",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "fun\n\nmain\n(\n)\n\n{\n\n\nprintln\n(\n\"Hello World\"\n)\n\n\n}",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-fun\">fun</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"Hello World\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_helloworld",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Create Your Own Functions",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To create your own function, use the fun keyword, and write the name of the function, followed by parantheses () :",
      "html": "<p>To create your own function, use the <code>fun</code> keyword, and write the name of the \nfunction, followed by parantheses <strong>()</strong>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "fun\n\nmyFunction\n(\n)\n\n{\n\n\nprintln\n(\n\"I just got executed!\"\n)\n\n\n}",
      "language": "javascript",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-fun\">fun</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"I just got executed!\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> </code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Call a Function",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Now that you have created a function, you can execute it by calling it.",
      "html": "<p>Now that you have created a function, you can execute it by <strong>calling</strong> \nit.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To call a function in Kotlin, write the name of the function followed by two parantheses () .",
      "html": "<p>To call a function in Kotlin, write the name of the function followed by two \nparantheses <strong>()</strong>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the following example, myFunction() will print some text (the action), when it is called:",
      "html": "<p>In the following example, <code>myFunction()</code> will \nprint some text (the action), when it is called:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_function",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "fun\n\nmain\n(\n)\n\n{\n\n\nmyFunction\n(\n)\n\n// Call myFunction\n\n\n}\n\n\n\n// Outputs \"I just got executed!\"",
      "language": "javascript",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-fun\">fun</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Call myFunction</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Outputs \"I just got executed!\" </span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_function",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A function can be called multiple times, if you want:",
      "html": "<p>A function can be called multiple times, if you want:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_function_multiple",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "fun\n\nmain\n(\n)\n\n{\n\n\nmyFunction\n(\n)\n\n\nmyFunction\n(\n)\n\n\nmyFunction\n(\n)\n\n\n}\n\n\n\n// I just got executed!\n\n\n// I just got executed!\n\n\n// I just got executed!",
      "language": "javascript",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-fun\">fun</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// I just got executed!</span>\n<span class=\"token comment\">// I just got executed!</span>\n<span class=\"token comment\">// I just got executed! </span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_function_multiple",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Function Parameters",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Information can be passed to functions as parameter.",
      "html": "<p>Information can be passed to functions as parameter.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Parameters are specified after the function name, inside the parentheses. You can add as many parameters as you want, just separate them with a comma. Just note that you must specify the type of each parameter (Int, String, etc).",
      "html": "<p>Parameters are specified after the function name, inside the parentheses.\nYou can add as many parameters as you want, just separate them with a comma. \nJust note that you must specify the type of each parameter (Int, String, etc). </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The following example has a function that takes a String called fname as parameter. When the function is called, we pass along a first name, which is used inside the function to print the full name:",
      "html": "<p>\nThe following example has a \nfunction that takes a <code>String</code> called <b>fname</b> as parameter.\nWhen the function is called, we pass along a first name,\nwhich is used inside the function to print the full name:\n</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_function_param",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "fun\n\nmyFunction\n(\nfname\n:\nString\n)\n\n{\n\n\nprintln\n(\nfname\n+\n\n\" Doe\"\n)\n\n\n}\n\n\n\nfun\n\nmain\n(\n)\n\n{\n\n\nmyFunction\n(\n\"John\"\n)\n\n\nmyFunction\n(\n\"Jane\"\n)\n\n\nmyFunction\n(\n\"George\"\n)\n\n\n}\n\n\n\n// John Doe\n\n\n// Jane Doe\n\n\n// George Doe",
      "language": "javascript",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-fun\">fun</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span>fname<span class=\"token operator\">:</span> String<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>fname <span class=\"token operator\">+</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\" Doe\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-fun\">fun</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"John\"</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"Jane\"</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"George\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n  \n<span class=\"token comment\">// John Doe</span>\n<span class=\"token comment\">// Jane Doe</span>\n<span class=\"token comment\">// George Doe </span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_function_param",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When a parameter is passed to the function, it is called an argument . So, from the example above: fname is a parameter , while John , Jane and George are arguments .",
      "html": "<p>When a <strong>parameter</strong> is passed to the function, it is called an <strong>argument</strong>. So, from the example above: <code>fname</code> is a <strong>parameter</strong>, while <code>\nJohn</code>, <code>Jane</code> and <code>\nGeorge</code> are <strong>arguments</strong>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Multiple Parameters",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can have as many parameters as you like:",
      "html": "<p>You can have as many parameters as you like:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_function_param2",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "fun\n\nmyFunction\n(\nfname\n:\nString\n,\nage\n:\nInt\n)\n\n{\n\n\nprintln\n(\nfname\n+\n\n\" is \"\n\n+\nage\n)\n\n\n}\n\n\n\nfun\n\nmain\n(\n)\n\n{\n\n\nmyFunction\n(\n\"John\"\n,\n\n35\n)\n\n\nmyFunction\n(\n\"Jane\"\n,\n\n32\n)\n\n\nmyFunction\n(\n\"George\"\n,\n\n15\n)\n\n\n}\n\n\n\n// John is 35\n\n\n// Jane is 32\n\n\n// George is 15",
      "language": "javascript",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-fun\">fun</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span>fname<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> Int<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>fname <span class=\"token operator\">+</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\" is \"</span></span> <span class=\"token operator\">+</span> age<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-fun\">fun</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"John\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"Jane\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"George\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// John is 35</span>\n<span class=\"token comment\">// Jane is 32</span>\n<span class=\"token comment\">// George is 15 </span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_function_param2",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: When working with multiple parameters, the function call must have the same number of arguments as there are parameters, and the arguments must be passed in the same order.",
      "html": "<p><strong>Note:</strong> When working with multiple parameters, the function call must \nhave the same number of arguments as there are parameters, and the arguments must be passed in the same order.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Return Values",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the examples above, we used functions to output a value. In the following example, we will use a function to return a value and assign it to a variable.",
      "html": "<p>In the examples above, we used functions to output a value. In the following example, we will use a function to \n<strong>return </strong>a value and assign it to a variable.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To return a value, use the return keyword, and specify the return type after the function's parantheses ( Int in this example):",
      "html": "<p>To return a value, use the <code>return</code> keyword, and specify the \n<strong>return type</strong> after \nthe function's parantheses (<code>Int</code> in this example):</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_function_return",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "fun\n\nmyFunction\n(\nx\n:\nInt\n)\n:\nInt\n{\n\n\nreturn\n\n(\nx\n+\n\n5\n)\n\n\n}\n\n\n\nfun\n\nmain\n(\n)\n\n{\n\n\nvar\nresult\n=\n\nmyFunction\n(\n3\n)\n\n\nprintln\n(\nresult\n)\n\n\n}\n\n\n\n// 8 (3 + 5)",
      "language": "javascript",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-fun\">fun</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span> Int<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Int <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-fun\">fun</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-var\">var</span> result <span class=\"token operator\">=</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 8 (3 + 5) </span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_function_return",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Using two parameters:",
      "html": "<p>Using two parameters:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_function_return2",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "fun\n\nmyFunction\n(\nx\n:\nInt\n,\ny\n:\nInt\n)\n:\nInt\n{\n\n\nreturn\n\n(\nx\n+\ny\n)\n\n\n}\n\n\n\nfun\n\nmain\n(\n)\n\n{\n\n\nvar\nresult\n=\n\nmyFunction\n(\n3\n,\n\n5\n)\n\n\nprintln\n(\nresult\n)\n\n\n}\n\n\n\n// 8 (3 + 5)",
      "language": "javascript",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-fun\">fun</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span> Int<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> Int<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Int <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-fun\">fun</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-var\">var</span> result <span class=\"token operator\">=</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 8 (3 + 5) </span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_function_return2",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Shorter Syntax for Return Values",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "There is also a shorter syntax for returning values. You can use the = operator instead of return without specifying the return type. Kotlin is smart enough to automatically find out what it is:",
      "html": "<p>There is also a shorter syntax for returning values. You can use the <code>=</code> operator instead of <code>return</code> \nwithout specifying the return type. Kotlin is smart enough to automatically find out what it is:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_function_assignment",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "fun\n\nmyFunction\n(\nx\n:\nInt\n,\ny\n:\nInt\n)\n\n=\nx\n+\ny\n\n\nfun\n\nmain\n(\n)\n\n{\n\n\nvar\nresult\n=\n\nmyFunction\n(\n3\n,\n\n5\n)\n\n\nprintln\n(\nresult\n)\n\n\n}\n\n\n\n// 8 (3 + 5)",
      "language": "javascript",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-fun\">fun</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span> Int<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> Int<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> y\n\n<span class=\"token keyword keyword-fun\">fun</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-var\">var</span> result <span class=\"token operator\">=</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 8 (3 + 5) </span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_function_assignment",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    }
  ]
}