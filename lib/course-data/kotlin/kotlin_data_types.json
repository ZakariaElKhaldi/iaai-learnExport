{
  "title": "Kotlin Data Types",
  "url": "https://www.w3schools.com/kotlin/kotlin_data_types.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Kotlin Data Types",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Kotlin Data Types",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In Kotlin, the type of a variable is decided by its value:",
      "html": "<p>In Kotlin, the <em>type</em> of a variable is decided by its value:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_data_types",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "val\nmyNum\n=\n\n5\n\n// Int\n\n\nval\nmyDoubleNum\n=\n\n5.99\n\n// Double\n\n\nval\nmyLetter\n=\n\n'D'\n\n// Char\n\n\nval\nmyBoolean\n=\n\ntrue\n\n// Boolean\n\n\nval\nmyText\n=\n\n\"Hello\"\n\n// String",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-val\">val</span> myNum <span class=\"token operator\">=</span> <span class=\"token number\">5</span>             <span class=\"token comment\">// Int</span>\n<span class=\"token keyword keyword-val\">val</span> myDoubleNum <span class=\"token operator\">=</span> <span class=\"token number\">5.99</span>    <span class=\"token comment\">// Double</span>\n<span class=\"token keyword keyword-val\">val</span> myLetter <span class=\"token operator\">=</span> <span class=\"token char\">'D'</span>        <span class=\"token comment\">// Char</span>\n<span class=\"token keyword keyword-val\">val</span> myBoolean <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>      <span class=\"token comment\">// Boolean</span>\n<span class=\"token keyword keyword-val\">val</span> myText <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Hello\"</span></span>      <span class=\"token comment\">// String</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_data_types",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "However, you learned from the previous chapter that it is possible to specify the type if you want:",
      "html": "<p>However, you learned from the previous chapter that it is possible to specify the type if you want:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_data_types2",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "val\nmyNum\n:\nInt\n=\n\n5\n\n// Int\n\n\nval\nmyDoubleNum\n:\nDouble\n=\n\n5.99\n\n// Double\n\n\nval\nmyLetter\n:\nChar\n=\n\n'D'\n\n// Char\n\n\nval\nmyBoolean\n:\nBoolean\n=\n\ntrue\n\n// Boolean\n\n\nval\nmyText\n:\nString\n=\n\n\"Hello\"\n\n// String",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-val\">val</span> myNum<span class=\"token operator\">:</span> Int <span class=\"token operator\">=</span> <span class=\"token number\">5</span>                <span class=\"token comment\">// Int</span>\n<span class=\"token keyword keyword-val\">val</span> myDoubleNum<span class=\"token operator\">:</span> Double <span class=\"token operator\">=</span> <span class=\"token number\">5.99</span>    <span class=\"token comment\">// Double</span>\n<span class=\"token keyword keyword-val\">val</span> myLetter<span class=\"token operator\">:</span> Char <span class=\"token operator\">=</span> <span class=\"token char\">'D'</span>          <span class=\"token comment\">// Char</span>\n<span class=\"token keyword keyword-val\">val</span> myBoolean<span class=\"token operator\">:</span> Boolean <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>     <span class=\"token comment\">// Boolean</span>\n<span class=\"token keyword keyword-val\">val</span> myText<span class=\"token operator\">:</span> String <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Hello\"</span></span>      <span class=\"token comment\">// String</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_data_types2",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Sometimes you have to specify the type, and often you don't. Anyhow, it is good to know what the different types represent.",
      "html": "<p>Sometimes you have to specify the type, and often you don't. Anyhow, it is \ngood to know what the different types represent.\n</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You will learn more about when you need to specify the type later.",
      "html": "<p>You will learn more about <strong>when you need </strong>to specify the type later.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Data types are divided into different groups:",
      "html": "<p>Data types are divided into different groups:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Numbers",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Number types are divided into two groups:",
      "html": "<p>Number types are divided into two groups:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Integer types store whole numbers, positive or negative (such as 123 or -456), without decimals. Valid types are Byte , Short , Int and Long .",
      "html": "<p><strong>Integer types</strong> store whole numbers, positive or negative (such as 123 or -456), without decimals. \nValid types are <code>Byte</code>, <code>\nShort</code>, <code>Int</code> \nand <code>Long</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Floating point types represent numbers with a fractional part, containing one or more decimals. There are two types: Float and Double .",
      "html": "<p><strong>Floating point types</strong> represent numbers with a fractional part, \ncontaining one or more decimals. There are two types: <code>\nFloat</code> and <code>Double</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you don't specify the type for a numeric variable, it is most often returned as Int for whole numbers and Double for floating point numbers.",
      "html": "<p>If you don't specify the type for a numeric variable, it is most often \nreturned as <code>Int</code> for whole numbers and <code>Double</code> for floating point numbers.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Integer Types",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Byte",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Byte data type can store whole numbers from -128 to 127. This can be used instead of Int or other integer types to save memory when you are certain that the value will be within -128 and 127:",
      "html": "<p>The <code>Byte</code> data type can store whole numbers \nfrom -128 to 127. This can be used instead of <code>Int</code> or other integer types to \nsave memory when you are certain that the value will be within -128 and 127:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_byte",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "val\nmyNum\n:\nByte\n=\n\n100\n\n\nprintln\n(\nmyNum\n)",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-val\">val</span> myNum<span class=\"token operator\">:</span> Byte <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n<span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myNum<span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_byte",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Short",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Short data type can store whole numbers from -32768 to 32767:",
      "html": "<p>The <code>Short</code> data type can store whole numbers from -32768 to 32767:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_short",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "val\nmyNum\n:\nShort\n=\n\n5000\n\n\nprintln\n(\nmyNum\n)",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-val\">val</span> myNum<span class=\"token operator\">:</span> Short <span class=\"token operator\">=</span> <span class=\"token number\">5000</span>\n<span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myNum<span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_short",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Int",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Int data type can store whole numbers from -2147483648 to 2147483647:",
      "html": "<p>The <code>Int</code> data type can store whole numbers \nfrom -2147483648 to 2147483647:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_int",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "val\nmyNum\n:\nInt\n=\n\n100000\n\n\nprintln\n(\nmyNum\n)",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-val\">val</span> myNum<span class=\"token operator\">:</span> Int <span class=\"token operator\">=</span> <span class=\"token number\">100000</span>\n<span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myNum<span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_int",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Long",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Long data type can store whole numbers from -9223372036854775808 to 9223372036854775807. This is used when Int is not large enough to store the value. Optionally, you can end the value with an \"L\":",
      "html": "<p>The <code>Long</code> data type can store whole numbers from -9223372036854775808 to 9223372036854775807. This is used when \n<code>Int</code> is not large enough to store the value. \nOptionally, you can end the value with an \"L\":</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_long",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "val\nmyNum\n:\nLong\n=\n\n15000000000L\n\n\nprintln\n(\nmyNum\n)",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-val\">val</span> myNum<span class=\"token operator\">:</span> Long <span class=\"token operator\">=</span> <span class=\"token number\">15000000000L</span>\n<span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myNum<span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_long",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Difference Between Int and Long",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A whole number is an Int as long as it is up to 2147483647. If it goes beyond that, it is defined as Long :",
      "html": "<p>A whole number is an <code>Int</code> as long as it is up to 2147483647. If it goes beyond \nthat, it is defined as <code>Long</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "val\nmyNum1\n=\n\n2147483647\n\n// Int\n\n\nval\nmyNum2\n=\n\n2147483648\n\n// Long",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-val\">val</span> myNum1 <span class=\"token operator\">=</span> <span class=\"token number\">2147483647</span>  <span class=\"token comment\">// Int</span>\n<span class=\"token keyword keyword-val\">val</span> myNum2 <span class=\"token operator\">=</span> <span class=\"token number\">2147483648</span>  <span class=\"token comment\">// Long</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Floating Point Types",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Floating point types represent numbers with a decimal, such as 9.99 or 3.14515.",
      "html": "<p>Floating point types represent numbers with a decimal, such as 9.99 or 3.14515.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Float and Double data types can store fractional numbers:",
      "html": "<p>The <code>Float</code> and <code>Double</code> data types can store fractional numbers:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_float",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "val\nmyNum\n:\nFloat\n=\n\n5.75F\n\n\nprintln\n(\nmyNum\n)",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-val\">val</span> myNum<span class=\"token operator\">:</span> Float <span class=\"token operator\">=</span> <span class=\"token number\">5.75F</span>\n<span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myNum<span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_float",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_double",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "val\nmyNum\n:\nDouble\n=\n\n19.99\n\n\nprintln\n(\nmyNum\n)",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-val\">val</span> myNum<span class=\"token operator\">:</span> Double <span class=\"token operator\">=</span> <span class=\"token number\">19.99</span>\n<span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myNum<span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_double",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Use Float or Double ?",
      "html": "<p>Use <code>Float</code> or <code>Double</code>?</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The precision of a floating point value indicates how many digits the value can have after the decimal point. The precision of Float is only six or seven decimal digits, while Double variables have a precision of about 15 digits. Therefore it is safer to use Double for most calculations.",
      "html": "<p>The <strong>precision</strong> of a floating point value indicates how many digits the value can have \nafter the decimal point.\nThe precision of <code>Float</code> is only six or seven \ndecimal digits, while <code>Double</code> variables have a precision \nof about 15 digits. Therefore it is safer to use <code>Double</code> for most calculations.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Also note that you should end the value of a Float type with an \"F\".",
      "html": "<p>Also note that you should end the value of a <code>Float</code> type with an \"F\".</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Scientific Numbers",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A floating point number can also be a scientific number with an \"e\" or \"E\" to indicate the power of 10:",
      "html": "<p>A floating point number can also be a scientific number with an \"e\" or \"E\" to indicate the power of 10:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_scientific",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "val\nmyNum1\n:\nFloat\n=\n\n35E3F\n\n\nval\nmyNum2\n:\nDouble\n=\n\n12E4\n\n\nprintln\n(\nmyNum1\n)\n\n\nprintln\n(\nmyNum2\n)",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-val\">val</span> myNum1<span class=\"token operator\">:</span> Float <span class=\"token operator\">=</span> <span class=\"token number\">35E3F</span>\n<span class=\"token keyword keyword-val\">val</span> myNum2<span class=\"token operator\">:</span> Double <span class=\"token operator\">=</span> <span class=\"token number\">12E4</span>\n<span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myNum1<span class=\"token punctuation\">)</span>\n<span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myNum2<span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_scientific",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Booleans",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Boolean data type can only take the values true or false :",
      "html": "<p>The <code>Boolean</code> data type can only take the values <code>true</code> or <code>false</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_booleans",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "val\nisKotlinFun\n:\nBoolean\n=\n\ntrue\n\n\nval\nisFishTasty\n:\nBoolean\n=\n\nfalse\n\n\nprintln\n(\nisKotlinFun\n)\n\n// Outputs true\n\n\nprintln\n(\nisFishTasty\n)\n\n// Outputs false",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-val\">val</span> isKotlinFun<span class=\"token operator\">:</span> Boolean <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n<span class=\"token keyword keyword-val\">val</span> isFishTasty<span class=\"token operator\">:</span> Boolean <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n<span class=\"token function\">println</span><span class=\"token punctuation\">(</span>isKotlinFun<span class=\"token punctuation\">)</span>   <span class=\"token comment\">// Outputs true</span>\n<span class=\"token function\">println</span><span class=\"token punctuation\">(</span>isFishTasty<span class=\"token punctuation\">)</span>   <span class=\"token comment\">// Outputs false </span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_booleans",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Boolean values are mostly used for conditional testing, which you will learn more about in a later chapter.",
      "html": "<p>Boolean values are mostly used for conditional testing, which you will learn more about in a later chapter.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Characters",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Char data type is used to store a single character. A char value must be surrounded by single quotes, like 'A' or 'c':",
      "html": "<p>The <code>Char</code> data type is used to store a \n<strong>single</strong> character. A char value must be \nsurrounded by <strong>single</strong> quotes, like 'A' or 'c':</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_char",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "val\nmyGrade\n:\nChar\n=\n\n'B'\n\n\nprintln\n(\nmyGrade\n)",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-val\">val</span> myGrade<span class=\"token operator\">:</span> Char <span class=\"token operator\">=</span> <span class=\"token char\">'B'</span>\n<span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myGrade<span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_char",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Unlike Java, you cannot use ASCII values to display certain characters. The value 66 would output a \"B\" in Java, but will generate an error in Kotlin:",
      "html": "<p>Unlike Java, you cannot use ASCII values to display certain characters. The \nvalue 66 would output a \"B\" in Java, but will generate an error in Kotlin:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "w3-border-red",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "val\nmyLetter\n:\nChar\n=\n\n66\n\n\nprintln\n(\nmyLetter\n)\n\n// Error",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white w3-border-red language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-val\">val</span> myLetter<span class=\"token operator\">:</span> Char <span class=\"token operator\">=</span> <span class=\"token number\">66</span>\n<span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myLetter<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Error</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "w3-border-red",
        "language-kotlin"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "w3-border-red",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Strings",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The String data type is used to store a sequence of characters (text). String values must be surrounded by double quotes:",
      "html": "<p>The <code>String</code> data type is used to store a sequence of characters (text). String values must be surrounded by \n<strong>double</strong> quotes:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_string",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "val\nmyText\n:\nString\n=\n\n\"Hello World\"\n\n\nprintln\n(\nmyText\n)",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-val\">val</span> myText<span class=\"token operator\">:</span> String <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Hello World\"</span></span>\n<span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myText<span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_string",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "the Strings chapter",
          "href": "https://www.w3schools.com/kotlin_strings.php",
          "title": ""
        }
      ],
      "text": "You will learn more about strings in the Strings chapter .",
      "html": "<p>You will learn more about strings in <a href=\"kotlin_strings.php\">the Strings chapter</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Arrays",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Arrays are used to store multiple values in a single variable, instead of declaring separate variables for each value.",
      "html": "<p>Arrays are used to store multiple values in a single variable, instead of declaring separate variables for each value.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "the Arrays chapter",
          "href": "https://www.w3schools.com/kotlin_arrays.php",
          "title": ""
        }
      ],
      "text": "You will learn more about arrays in the Arrays chapter .",
      "html": "<p>You will learn more about arrays in <a href=\"kotlin_arrays.php\">the Arrays chapter</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Type Conversion",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Type conversion is when you convert the value of one data type to another type.",
      "html": "<p>Type conversion is when you convert the value of one data type to another type.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Java",
          "href": "https://www.w3schools.com/java/default.asp",
          "title": ""
        }
      ],
      "text": "In Kotlin, numeric type conversion is different from Java . For example, it is not possible to convert an Int type to a Long type with the following code:",
      "html": "<p>In Kotlin, numeric type conversion is different from <a href=\"/java/default.asp\">Java</a>. For example, it is not possible to convert an <code>Int</code> type to a <code>Long</code> type with the following code:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_conv",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "w3-border-red",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "val\nx\n:\nInt\n=\n\n5\n\n\nval\ny\n:\nLong\n=\nx\n\nprintln\n(\ny\n)\n\n// Error: Type mismatch",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white w3-border-red language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-val\">val</span> x<span class=\"token operator\">:</span> Int <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n<span class=\"token keyword keyword-val\">val</span> y<span class=\"token operator\">:</span> Long <span class=\"token operator\">=</span> x\n<span class=\"token function\">println</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Error: Type mismatch </span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "w3-border-red",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_conv",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "w3-border-red",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To convert a numeric data type to another type, you must use one of the following functions: toByte() , toShort() , toInt() , toLong() , toFloat() , toDouble() or toChar() :",
      "html": "<p>To convert a numeric data type to another type, you must use one of the following functions: <code>toByte()</code>, <code>toShort()</code>, <code>toInt()</code>, <code>toLong()</code>, <code>toFloat()</code>, <code>toDouble()</code> or <code>toChar()</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_conv2",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "val\nx\n:\nInt\n=\n\n5\n\n\nval\ny\n:\nLong\n=\nx\n.\ntoLong\n(\n)\n\n\nprintln\n(\ny\n)",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-val\">val</span> x<span class=\"token operator\">:</span> Int <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n<span class=\"token keyword keyword-val\">val</span> y<span class=\"token operator\">:</span> Long <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span><span class=\"token function\">toLong</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">println</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_type_conv2",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    }
  ]
}