{
  "title": "Kotlin For Loop",
  "url": "https://www.w3schools.com/kotlin/kotlin_for_loop.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Kotlin For Loop",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Kotlin For Loop",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Often when you work with arrays, you need to loop through all of the elements.",
      "html": "<p>Often when you work with arrays, you need to loop through all of the \nelements.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To loop through array elements, use the for loop together with the in operator:",
      "html": "<p>To loop through array elements, use the <code>for</code> \nloop together with the <code>in</code> operator:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_array_for_loop",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "val\ncars\n=\n\narrayOf\n(\n\"Volvo\"\n,\n\n\"BMW\"\n,\n\n\"Ford\"\n,\n\n\"Mazda\"\n)\n\n\nfor\n\n(\nx\nin\ncars\n)\n\n{\n\n\nprintln\n(\nx\n)\n\n\n}",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-val\">val</span> cars <span class=\"token operator\">=</span> <span class=\"token function\">arrayOf</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"Volvo\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"BMW\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Ford\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Mazda\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword keyword-for\">for</span> <span class=\"token punctuation\">(</span>x <span class=\"token keyword keyword-in\">in</span> cars<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_array_for_loop",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can loop through all kinds of arrays. In the example above, we used an array of strings.",
      "html": "<p>You can loop through all kinds of arrays. In the example above, we used an array of strings. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the example below, we loop through an array of integers:",
      "html": "<p>In the example below, we loop through an array of integers:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_array_for_loop2",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "val\nnums\n=\n\narrayOf\n(\n1\n,\n\n5\n,\n\n10\n,\n\n15\n,\n\n20\n)\n\n\nfor\n\n(\nx\nin\nnums\n)\n\n{\n\n\nprintln\n(\nx\n)\n\n\n}",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-val\">val</span> nums <span class=\"token operator\">=</span> <span class=\"token function\">arrayOf</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword keyword-for\">for</span> <span class=\"token punctuation\">(</span>x <span class=\"token keyword keyword-in\">in</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_array_for_loop2",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Traditional For Loop",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Unlike Java and other programming languages, there is no traditional for loop in Kotlin.",
      "html": "<p>Unlike Java and other programming languages, there is no traditional <code>for</code> loop \nin Kotlin.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In Kotlin, the for loop is used to loop through arrays, ranges, and other things that contains a countable number of values.",
      "html": "<p>In Kotlin, the <code>for</code> loop is used to loop through arrays, ranges, and other \nthings that contains a \ncountable number of values.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You will learn more about ranges in the next chapter - which will create a range of values.",
      "html": "<p>You will learn more about <strong>ranges</strong> in the next chapter - which \nwill create a range of values.</p>"
    }
  ]
}