{
  "title": "Kotlin Constructors",
  "url": "https://www.w3schools.com/kotlin/kotlin_constructors.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Kotlin Constructors",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Kotlin Constructor",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the previous chapter, we created an object of a class, and specified the properties inside the class, like this:",
      "html": "<p>In the previous chapter, we created an object of a class, and specified the properties inside the class, like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_classes",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "class\nCar\n{\n\n\nvar\nbrand\n=\n\n\"\"\n\n\nvar\nmodel\n=\n\n\"\"\n\n\nvar\nyear\n=\n\n0\n\n\n}\n\n\n\nfun\n\nmain\n(\n)\n\n{\n\n\nval\nc1\n=\n\nCar\n(\n)\n\nc1\n.\nbrand\n=\n\n\"Ford\"\n\nc1\n.\nmodel\n=\n\n\"Mustang\"\n\nc1\n.\nyear\n=\n\n1969\n\n\n}",
      "language": "javascript",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-class\">class</span> Car <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-var\">var</span> brand <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"\"</span></span>\n  <span class=\"token keyword keyword-var\">var</span> model <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"\"</span></span>\n  <span class=\"token keyword keyword-var\">var</span> year <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-fun\">fun</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-val\">val</span> c1 <span class=\"token operator\">=</span> <span class=\"token function\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  c1<span class=\"token punctuation\">.</span>brand <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Ford\"</span></span>\n  c1<span class=\"token punctuation\">.</span>model <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Mustang\"</span></span>\n  c1<span class=\"token punctuation\">.</span>year <span class=\"token operator\">=</span> <span class=\"token number\">1969</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_classes",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In Kotlin, there's a faster way of doing this, by using a constructor .",
      "html": "<p>In Kotlin, there's a faster way of doing this, by using a <strong>constructor</strong>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "function",
          "href": "https://www.w3schools.com/kotlin_functions.php",
          "title": ""
        }
      ],
      "text": "A constructor is like a special function , and it is defined by using two parantheses () after the class name. You can specify the properties inside of the parantheses (like passing parameters into a regular function).",
      "html": "<p>A \nconstructor is like a special <a href=\"kotlin_functions.php\">function</a>, and it is defined by using two parantheses <code>()</code> \nafter the class name. You can specify the properties inside of the parantheses (like passing \nparameters into a regular function).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The constructor will initialize the properties when you create an object of a class. Just remember to specify the type of the property/variable:",
      "html": "<p>The constructor will initialize the properties when you create an object of a class. Just remember to specify the \ntype of the property/variable:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_constructor",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "class\n\nCar\n(\nvar\nbrand\n:\nString\n,\n\nvar\nmodel\n:\nString\n,\n\nvar\nyear\n:\nInt\n)\n\n\n\nfun\n\nmain\n(\n)\n\n{\n\n\nval\nc1\n=\n\nCar\n(\n\"Ford\"\n,\n\n\"Mustang\"\n,\n\n1969\n)\n\n\n}",
      "language": "javascript",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token function\">Car</span><span class=\"token punctuation\">(</span><span class=\"token keyword keyword-var\">var</span> brand<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span> <span class=\"token keyword keyword-var\">var</span> model<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span> <span class=\"token keyword keyword-var\">var</span> year<span class=\"token operator\">:</span> Int<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword keyword-fun\">fun</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-val\">val</span> c1 <span class=\"token operator\">=</span> <span class=\"token function\">Car</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"Ford\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Mustang\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">1969</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_constructor",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Now it's even easier to specify multiple objects of one class:",
      "html": "<p>Now it's even easier to specify multiple objects of one class:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_constructor2",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-kotlin"
        ],
        "isNotranslate": true
      },
      "code": "class\n\nCar\n(\nvar\nbrand\n:\nString\n,\n\nvar\nmodel\n:\nString\n,\n\nvar\nyear\n:\nInt\n)\n\n\n\nfun\n\nmain\n(\n)\n\n{\n\n\nval\nc1\n=\n\nCar\n(\n\"Ford\"\n,\n\n\"Mustang\"\n,\n\n1969\n)\n\n\nval\nc2\n=\n\nCar\n(\n\"BMW\"\n,\n\n\"X5\"\n,\n\n1999\n)\n\n\nval\nc3\n=\n\nCar\n(\n\"Tesla\"\n,\n\n\"Model S\"\n,\n\n2020\n)\n\n\n}",
      "language": "javascript",
      "code_html": "<pre class=\"notranslate w3-white language-kotlin\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token function\">Car</span><span class=\"token punctuation\">(</span><span class=\"token keyword keyword-var\">var</span> brand<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span> <span class=\"token keyword keyword-var\">var</span> model<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span> <span class=\"token keyword keyword-var\">var</span> year<span class=\"token operator\">:</span> Int<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword keyword-fun\">fun</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-val\">val</span> c1 <span class=\"token operator\">=</span> <span class=\"token function\">Car</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"Ford\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Mustang\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">1969</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword keyword-val\">val</span> c2 <span class=\"token operator\">=</span> <span class=\"token function\">Car</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"BMW\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"X5\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">1999</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword keyword-val\">val</span> c3 <span class=\"token operator\">=</span> <span class=\"token function\">Car</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"Tesla\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Model S\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">2020</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "tryItLink": "https://www.w3schools.com/kotlin/trykotlin.php?filename=demo_constructor2",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-kotlin"
      ],
      "is_notranslate": true
    }
  ]
}