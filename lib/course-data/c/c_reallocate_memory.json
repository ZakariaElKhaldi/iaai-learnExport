{
  "title": "C Reallocate Memory",
  "url": "https://www.w3schools.com/c/c_memory_reallocate.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C Reallocate Memory",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Reallocate Memory",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the amount of memory you reserved is not enough, you can reallocate it to make it larger.",
      "html": "<p>If the amount of memory you reserved is not enough, you can <em>reallocate\n</em>it to make it larger.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Reallocating reserves a different (usually larger) amount of memory while keeping the data that was stored in it.",
      "html": "<p>Reallocating reserves a different (usually larger) amount of memory while keeping the data that was stored in it.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can change the size of allocated memory with the realloc() function.",
      "html": "<p>You can change the size of allocated memory with the <code>realloc()</code> function.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The realloc() function takes two parameters:",
      "html": "<p>The <code>realloc()</code> function takes two parameters:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nint *ptr2 = realloc(ptr1, size);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "int *ptr2 = realloc(ptr1, size);",
      "syntax_highlighting": [
        {
          "text": "\nint *ptr2 = realloc(ptr1, size);\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\">\n<span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> *ptr2 = realloc(<em>ptr1</em>, <em>size</em>);<span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nint *ptr2 = realloc(ptr1, size);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The realloc() function tries to resize the memory at ptr1 and return the same memory address. If it cannot resize the memory at the current address then it will allocate memory at a different address and return the new address instead.",
      "html": "<p>The <code>realloc()</code> function tries to resize the memory at <em>ptr1</em> and return the same memory address. If it cannot resize the memory at the current address then it will allocate memory at a different address and return the new address instead.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: When realloc() returns a different memory address, the memory at the original address is no longer reserved and it is not safe to use. When the reallocation is done it is good to assign the new pointer to the previous variable so that the old pointer cannot be used accidentally.",
      "html": "<p><strong>Note:</strong> When <code>realloc()</code> returns a different memory address, the memory at the original address is no longer reserved and it is not safe to use. When the reallocation is done it is good to assign the new pointer to the previous variable so that the old pointer cannot be used accidentally.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/c/tryc.php?filename=demo_memory_reallocate",
        "syntaxHighlighting": [
          {
            "text": "\n  int *ptr1, *ptr2, size;// Allocate memory for four integerssize = \n  4 * sizeof(*ptr1);ptr1 = malloc(size);printf(\"%d bytes allocated \n  at address %p \\n\", size, ptr1);// Resize the memory to hold six \n  integerssize = 6 * sizeof(*ptr1);ptr2 = realloc(ptr1, size);\n  printf(\"%d bytes reallocated at address %p \\n\", size, ptr2); ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "// Allocate memory for four integers",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"%d bytes allocated \n  at address %p \\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// Resize the memory to hold six \n  integers",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "6",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"%d bytes reallocated at address %p \\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "int *ptr1, *ptr2, size;// Allocate memory for four integerssize =\n4 * sizeof(*ptr1);ptr1 = malloc(size);printf(\"%d bytes allocated\nat address %p \\n\", size, ptr1);// Resize the memory to hold six\nintegerssize = 6 * sizeof(*ptr1);ptr2 = realloc(ptr1, size);\nprintf(\"%d bytes reallocated at address %p \\n\", size, ptr2);",
      "syntax_highlighting": [
        {
          "text": "\n int *ptr1, *ptr2, size;// Allocate memory for four integerssize = \n 4 * sizeof(*ptr1);ptr1 = malloc(size);printf(\"%d bytes allocated \n  at address %p \\n\", size, ptr1);// Resize the memory to hold six \n  integerssize = 6 * sizeof(*ptr1);ptr2 = realloc(ptr1, size);\n  printf(\"%d bytes reallocated at address %p \\n\", size, ptr2); ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "// Allocate memory for four integers",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"%d bytes allocated \n  at address %p \\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// Resize the memory to hold six \n  integers",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "6",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"%d bytes reallocated at address %p \\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> *ptr1, *ptr2, size;<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Allocate memory for four integers<br/></span>size = <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javanumbercolor\" style=\"color:#905\">4</span> * sizeof(*ptr1);<br/>ptr1 = malloc(size);<br/><br/>printf(<span class=\"javastringcolor\" style=\"color:green\">\"%d bytes allocated \n  at address %p \\n\"</span>, size, ptr1);<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Resize the memory to hold six \n  integers<br/></span>size = <span class=\"javanumbercolor\" style=\"color:#905\">6</span> * sizeof(*ptr1);<br/>ptr2 = realloc(ptr1, size);<br/><br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  printf(<span class=\"javastringcolor\" style=\"color:green\">\"%d bytes reallocated at address %p \\n\"</span>, size, ptr2); </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/c/tryc.php?filename=demo_memory_reallocate",
      "syntax_highlighting_data": [
        {
          "text": "\n  int *ptr1, *ptr2, size;// Allocate memory for four integerssize = \n  4 * sizeof(*ptr1);ptr1 = malloc(size);printf(\"%d bytes allocated \n  at address %p \\n\", size, ptr1);// Resize the memory to hold six \n  integerssize = 6 * sizeof(*ptr1);ptr2 = realloc(ptr1, size);\n  printf(\"%d bytes reallocated at address %p \\n\", size, ptr2); ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "// Allocate memory for four integers",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"%d bytes allocated \n  at address %p \\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// Resize the memory to hold six \n  integers",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "6",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"%d bytes reallocated at address %p \\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "NULL Pointer & Error Checking",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The realloc() function returns a NULL pointer if it is not able to allocate more memory. This is very unlikely, but it is worth keeping in mind when you need your code to be failproof.",
      "html": "<p>The <code>realloc()</code> function returns a <code>NULL</code> \npointer if it is not able to allocate more memory. This is very unlikely, but it \nis worth keeping in mind when you need your code to be failproof.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The following example checks whether realloc() is able to resize the memory or not, by checking for a NULL pointer:",
      "html": "<p>The following example checks whether <code>realloc()</code> \nis able to resize the memory or not, by checking for a <code>NULL</code> pointer:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/c/tryc.php?filename=demo_memory_reallocate_null",
        "syntaxHighlighting": [
          {
            "text": "\n  int *ptr1, *ptr2;// Allocate memoryptr1 = malloc(4);// \n  Attempt to resize the memoryptr2 = realloc(ptr1, 8);// Check \n  whether realloc is able to resize the memory or notif (ptr2 == \n  NULL) {\u00a0 // If reallocation fails\u00a0 printf(\"Failed. Unable to resize memory\");} else {\u00a0 \n  // If reallocation is sucessful\u00a0 \n  printf(\"Success. 8 bytes reallocated at address %p \\n\", ptr2);\u00a0 ptr1 = ptr2;\u00a0 \n  // Update ptr1 to point to the newly allocated memory\n  } ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "// Allocate memory",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// \n  Attempt to resize the memory",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "8",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Check \n  whether realloc is able to resize the memory or not",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// If reallocation fails",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\"Failed. Unable to resize memory\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "else",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// If reallocation is sucessful",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Success. 8 bytes reallocated at address %p \\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Update ptr1 to point to the newly allocated memory",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "int *ptr1, *ptr2;// Allocate memoryptr1 = malloc(4);//\nAttempt to resize the memoryptr2 = realloc(ptr1, 8);// Check\nwhether realloc is able to resize the memory or notif (ptr2 ==\nNULL) {\u00a0 // If reallocation fails\u00a0 printf(\"Failed. Unable to resize memory\");} else {\n// If reallocation is sucessful\nprintf(\"Success. 8 bytes reallocated at address %p \\n\", ptr2);\u00a0 ptr1 = ptr2;\n// Update ptr1 to point to the newly allocated memory\n}",
      "syntax_highlighting": [
        {
          "text": "\n int *ptr1, *ptr2;// Allocate memoryptr1 = malloc(4);// \n  Attempt to resize the memoryptr2 = realloc(ptr1, 8);// Check \n  whether realloc is able to resize the memory or notif (ptr2 == \n  NULL) {\u00a0 // If reallocation fails\u00a0 printf(\"Failed. Unable to resize memory\");} else {\u00a0 \n // If reallocation is sucessful\u00a0 \n  printf(\"Success. 8 bytes reallocated at address %p \\n\", ptr2);\u00a0 ptr1 = ptr2;\u00a0 \n // Update ptr1 to point to the newly allocated memory\n  } ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "// Allocate memory",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// \n  Attempt to resize the memory",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "8",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Check \n  whether realloc is able to resize the memory or not",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// If reallocation fails",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\"Failed. Unable to resize memory\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "else",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// If reallocation is sucessful",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Success. 8 bytes reallocated at address %p \\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Update ptr1 to point to the newly allocated memory",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> *ptr1, *ptr2;<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Allocate memory<br/></span>ptr1 = malloc(<span class=\"javanumbercolor\" style=\"color:#905\">4</span>);<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// \n  Attempt to resize the memory<br/></span>ptr2 = realloc(ptr1, <span class=\"javanumbercolor\" style=\"color:#905\">8</span>);<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Check \n  whether realloc is able to resize the memory or not<br/></span><span class=\"javakeywordcolor\" style=\"color:#005cc5\">if</span> (<strong>ptr2 == <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  NULL</strong>) {<br/>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// If reallocation fails<br/></span>\u00a0 printf(<span class=\"javastringcolor\" style=\"color:green\">\"Failed. Unable to resize memory\"</span>);<br/>} <span class=\"javakeywordcolor\" style=\"color:#005cc5\">else</span> {<br/>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// If reallocation is sucessful<br/></span>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  printf(<span class=\"javastringcolor\" style=\"color:green\">\"Success. 8 bytes reallocated at address %p \\n\"</span>, ptr2);<br/>\u00a0 ptr1 = ptr2;\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Update ptr1 to point to the newly allocated memory<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  } </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/c/tryc.php?filename=demo_memory_reallocate_null",
      "syntax_highlighting_data": [
        {
          "text": "\n  int *ptr1, *ptr2;// Allocate memoryptr1 = malloc(4);// \n  Attempt to resize the memoryptr2 = realloc(ptr1, 8);// Check \n  whether realloc is able to resize the memory or notif (ptr2 == \n  NULL) {\u00a0 // If reallocation fails\u00a0 printf(\"Failed. Unable to resize memory\");} else {\u00a0 \n  // If reallocation is sucessful\u00a0 \n  printf(\"Success. 8 bytes reallocated at address %p \\n\", ptr2);\u00a0 ptr1 = ptr2;\u00a0 \n  // Update ptr1 to point to the newly allocated memory\n  } ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "// Allocate memory",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// \n  Attempt to resize the memory",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "8",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Check \n  whether realloc is able to resize the memory or not",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// If reallocation fails",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\"Failed. Unable to resize memory\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "else",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// If reallocation is sucessful",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Success. 8 bytes reallocated at address %p \\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Update ptr1 to point to the newly allocated memory",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: You should always include error checking (if pointer == NULL) when allocating memory.",
      "html": "<p><strong>Note:</strong> You should always include error checking (if <em>pointer</em> == NULL) when \nallocating memory.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: You should also always free , or release, allocated memory when you are done using it. This is important to make sure that your program behaves as expected, but it will also make it more maintainable and efficient.",
      "html": "<p><strong>Note:</strong> You should also always <strong>free</strong>, or release, \nallocated memory when you are done using it. This is important to make sure that \nyour program behaves as expected, but it will also make it more maintainable and \nefficient.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To free memory, simply use the free() function:",
      "html": "<p>To free memory, simply use the <code>free()</code> function:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/c/tryc.php?filename=demo_memory_reallocate_null2",
        "syntaxHighlighting": [
          {
            "text": "\n  // Free allocated memory \n  free(ptr1); ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Free allocated memory ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Free allocated memory\nfree(ptr1);",
      "syntax_highlighting": [
        {
          "text": "\n // Free allocated memory \n free(ptr1); ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Free allocated memory ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Free allocated memory <br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <strong>free(ptr1);</strong> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/c/tryc.php?filename=demo_memory_reallocate_null2",
      "syntax_highlighting_data": [
        {
          "text": "\n  // Free allocated memory \n  free(ptr1); ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Free allocated memory ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You will learn more about how to free allocated memory and why this is important in the next chapter.",
      "html": "<p>You will learn more about how to free allocated memory and why this is important in the next chapter.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What does the realloc function do?",
      "html": "<p>What does the <code>realloc</code> function do?</p>"
    }
  ]
}