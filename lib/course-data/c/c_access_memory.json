{
  "title": "C Access Memory",
  "url": "https://www.w3schools.com/c/c_memory_access.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C Access Memory",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Access Dynamic Memory",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Dynamic memory behaves like an array, with its data type specified by the type of the pointer.",
      "html": "<p>Dynamic memory behaves like an array, with its data type specified by the type of the pointer.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "As with arrays, to access an element in dynamic memory, refer to its index number :",
      "html": "<p>As with arrays, to access an element in dynamic memory, refer to its <strong>index number</strong>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nptr[0] = 12;\n ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "12",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "ptr[0] = 12;",
      "syntax_highlighting": [
        {
          "text": "\nptr[0] = 12;\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "12",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\">\nptr[<span class=\"javanumbercolor\" style=\"color:#905\">0</span>] = <span class=\"javanumbercolor\" style=\"color:#905\">12</span>;<span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nptr[0] = 12;\n ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "12",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also dereference the pointer to access the first element:",
      "html": "<p>You can also dereference the pointer to access the first element:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n*ptr = 12;\n ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "12",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "*ptr = 12;",
      "syntax_highlighting": [
        {
          "text": "\n*ptr = 12;\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "12",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>*ptr = <span class=\"javanumbercolor\" style=\"color:#905\">12</span>;<span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n*ptr = 12;\n ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "12",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/c/tryc.php?filename=demo_memory_access",
        "syntaxHighlighting": [
          {
            "text": "\n  // Allocate memoryint *ptr;ptr = calloc(4, sizeof(*ptr));// \n  Write to the memory*ptr = 2;ptr[1] = 4;ptr[2] = 6;// Read \n  from the memoryprintf(\"%d\\n\", *ptr);printf(\"%d %d %d\", ptr[1], ptr[2], \n  ptr[3]); ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Allocate memory",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// \n  Write to the memory",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "6",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Read \n  from the memory",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\"%d\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"%d %d %d\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "3",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Allocate memoryint *ptr;ptr = calloc(4, sizeof(*ptr));//\nWrite to the memory*ptr = 2;ptr[1] = 4;ptr[2] = 6;// Read\nfrom the memoryprintf(\"%d\\n\", *ptr);printf(\"%d %d %d\", ptr[1], ptr[2],\nptr[3]);",
      "syntax_highlighting": [
        {
          "text": "\n // Allocate memoryint *ptr;ptr = calloc(4, sizeof(*ptr));// \n  Write to the memory*ptr = 2;ptr[1] = 4;ptr[2] = 6;// Read \n  from the memoryprintf(\"%d\\n\", *ptr);printf(\"%d %d %d\", ptr[1], ptr[2], \n  ptr[3]); ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Allocate memory",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// \n  Write to the memory",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "6",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Read \n  from the memory",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\"%d\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"%d %d %d\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "3",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Allocate memory<br/></span><span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> *ptr;<br/>ptr = calloc(<span class=\"javanumbercolor\" style=\"color:#905\">4</span>, sizeof(*ptr));<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// \n  Write to the memory<br/></span>*ptr = <span class=\"javanumbercolor\" style=\"color:#905\">2</span>;<br/>ptr[<span class=\"javanumbercolor\" style=\"color:#905\">1</span>] = <span class=\"javanumbercolor\" style=\"color:#905\">4</span>;<br/>ptr[<span class=\"javanumbercolor\" style=\"color:#905\">2</span>] = <span class=\"javanumbercolor\" style=\"color:#905\">6</span>;<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Read \n  from the memory<br/></span>printf(<span class=\"javastringcolor\" style=\"color:green\">\"%d\\n\"</span>, *ptr);<br/>printf(<span class=\"javastringcolor\" style=\"color:green\">\"%d %d %d\"</span>, ptr[<span class=\"javanumbercolor\" style=\"color:#905\">1</span>], ptr[<span class=\"javanumbercolor\" style=\"color:#905\">2</span>], <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  ptr[<span class=\"javanumbercolor\" style=\"color:#905\">3</span>]); </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/c/tryc.php?filename=demo_memory_access",
      "syntax_highlighting_data": [
        {
          "text": "\n  // Allocate memoryint *ptr;ptr = calloc(4, sizeof(*ptr));// \n  Write to the memory*ptr = 2;ptr[1] = 4;ptr[2] = 6;// Read \n  from the memoryprintf(\"%d\\n\", *ptr);printf(\"%d %d %d\", ptr[1], ptr[2], \n  ptr[3]); ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Allocate memory",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// \n  Write to the memory",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "6",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Read \n  from the memory",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\"%d\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"%d %d %d\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "3",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "A note about data types",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Dynamic memory does not have its own data type, it is just a sequence of bytes. The data in the memory can be interpreted as a type based on the data type of the pointer.",
      "html": "<p>Dynamic memory does not have its own data type, it is just a sequence of bytes. The data in the memory can be interpreted as a type based on the data type of the pointer.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In this example a pointer to four bytes can be interpreted as one int value (4 bytes) or as an array of 4 char values (1 byte each).",
      "html": "<p>In this example a pointer to four bytes can be interpreted as one <code>int</code> value (4 bytes) or as an array of 4 <code>char</code> values (1 byte each).\n\n</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/c/tryc.php?filename=demo_memory_access2",
        "syntaxHighlighting": [
          {
            "text": "\n  int *ptr1 = malloc(4);char *ptr2 = (char*) ptr1;ptr1[0] = 1684234849;\n  printf(\"%d is %c %c %c %c\", *ptr1, ptr2[0], ptr2[1], ptr2[2], ptr2[3]); ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "char",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "char",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "1684234849",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"%d is %c %c %c %c\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "3",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "int *ptr1 = malloc(4);char *ptr2 = (char*) ptr1;ptr1[0] = 1684234849;\nprintf(\"%d is %c %c %c %c\", *ptr1, ptr2[0], ptr2[1], ptr2[2], ptr2[3]);",
      "syntax_highlighting": [
        {
          "text": "\n int *ptr1 = malloc(4);char *ptr2 = (char*) ptr1;ptr1[0] = 1684234849;\n  printf(\"%d is %c %c %c %c\", *ptr1, ptr2[0], ptr2[1], ptr2[2], ptr2[3]); ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "char",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "char",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "1684234849",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"%d is %c %c %c %c\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "3",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> *ptr1 = malloc(<span class=\"javanumbercolor\" style=\"color:#905\">4</span>);<br/><span class=\"javakeywordcolor\" style=\"color:#005cc5\">char</span> *ptr2 = (<span class=\"javakeywordcolor\" style=\"color:#005cc5\">char</span>*) ptr1;<br/>ptr1[<span class=\"javanumbercolor\" style=\"color:#905\">0</span>] = <span class=\"javanumbercolor\" style=\"color:#905\">1684234849</span>;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  printf(<span class=\"javastringcolor\" style=\"color:green\">\"%d is %c %c %c %c\"</span>, *ptr1, ptr2[<span class=\"javanumbercolor\" style=\"color:#905\">0</span>], ptr2[<span class=\"javanumbercolor\" style=\"color:#905\">1</span>], ptr2[<span class=\"javanumbercolor\" style=\"color:#905\">2</span>], ptr2[<span class=\"javanumbercolor\" style=\"color:#905\">3</span>]); </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/c/tryc.php?filename=demo_memory_access2",
      "syntax_highlighting_data": [
        {
          "text": "\n  int *ptr1 = malloc(4);char *ptr2 = (char*) ptr1;ptr1[0] = 1684234849;\n  printf(\"%d is %c %c %c %c\", *ptr1, ptr2[0], ptr2[1], ptr2[2], ptr2[3]); ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "char",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "char",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "1684234849",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"%d is %c %c %c %c\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "3",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "True or False: To access an element in dynamic memory, refer to its index number.",
      "html": "<p>True or False:<br/>To access an element in dynamic memory, refer to its index number.</p>"
    }
  ]
}