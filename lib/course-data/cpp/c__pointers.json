{
  "title": "C++ Pointers",
  "url": "https://www.w3schools.com/cpp/cpp_pointers.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C++ Pointers",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Creating Pointers",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You learned from the previous chapter, that we can get the memory address of a variable by using the & operator:",
      "html": "<p>You learned from the previous chapter, that we can get the <strong>memory \naddress</strong> of a variable by using the <code>&amp;</code> \noperator:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_pointer_ref",
        "syntaxHighlighting": [
          {
            "text": "\n  string food = \"Pizza\"; \n    // A food variable of type stringcout << \n    food;\u00a0 // Outputs the value of food (Pizza)\n  cout << &food; // Outputs the memory address of food (0x6dfed4)\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Pizza\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// A food variable of type string",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Outputs the value of food (Pizza)",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Outputs the memory address of food (0x6dfed4)",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "string food = \"Pizza\";\n// A food variable of type stringcout <<\nfood;\u00a0 // Outputs the value of food (Pizza)\ncout << &food; // Outputs the memory address of food (0x6dfed4)",
      "syntax_highlighting": [
        {
          "text": "\n  string food = \"Pizza\"; \n // A food variable of type stringcout << \n    food;\u00a0 // Outputs the value of food (Pizza)\n  cout << &food; // Outputs the memory address of food (0x6dfed4)\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Pizza\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// A food variable of type string",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Outputs the value of food (Pizza)",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Outputs the memory address of food (0x6dfed4)",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  string food = <span class=\"javastringcolor\" style=\"color:green\">\"Pizza\"</span>; <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// A food variable of type string<br/></span><br/>cout &lt;&lt; <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>    food;\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Outputs the value of food (Pizza)<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  cout &lt;&lt; &amp;food; <span class=\"commentcolor\" style=\"color:slategray\">// Outputs the memory address of food (<strong>0x6dfed4</strong>)<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_pointer_ref",
      "syntax_highlighting_data": [
        {
          "text": "\n  string food = \"Pizza\"; \n    // A food variable of type stringcout << \n    food;\u00a0 // Outputs the value of food (Pizza)\n  cout << &food; // Outputs the memory address of food (0x6dfed4)\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Pizza\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// A food variable of type string",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Outputs the value of food (Pizza)",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Outputs the memory address of food (0x6dfed4)",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A pointer however, is a variable that stores the memory address as its value .",
      "html": "<p>A <strong>pointer</strong> however, is a variable that <strong>stores the memory address as its value</strong>. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A pointer variable points to a data type (like int or string ) of the same type, and is created with the * operator. The address of the variable you're working with is assigned to the pointer:",
      "html": "<p>A pointer variable points to a data type (like <code>int</code> or <code>string</code>) of the same \ntype, and is created with the <code>*</code> operator. The address of the variable you're working with is assigned to the pointer:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_pointer",
        "syntaxHighlighting": [
          {
            "text": "\n    string food = \"Pizza\";\u00a0 // A food variable \n    of type stringstring* ptr = \n    &food;\u00a0\u00a0\u00a0 // A pointer variable, with the name \n    ptr, that stores the \n    address of food// Output the value of food (Pizza)cout << food << \"\\n\";// Output \n    the memory address of food (0x6dfed4)cout << &food << \"\\n\";// \n    Output the memory address of food with the pointer (0x6dfed4)cout << \n    ptr << \"\\n\";\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Pizza\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// A food variable \n    of type string",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// A pointer variable, with the name \n    ptr, that stores the \n    address of food",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "// Output the value of food (Pizza)",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\"\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// Output \n    the memory address of food (0x6dfed4)",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\"\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// \n    Output the memory address of food with the pointer (0x6dfed4)",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "string food = \"Pizza\";\u00a0 // A food variable\nof type stringstring* ptr =\n&food;\u00a0\u00a0\u00a0 // A pointer variable, with the name\nptr, that stores the\naddress of food// Output the value of food (Pizza)cout << food << \"\\n\";// Output\nthe memory address of food (0x6dfed4)cout << &food << \"\\n\";//\nOutput the memory address of food with the pointer (0x6dfed4)cout <<\nptr << \"\\n\";",
      "syntax_highlighting": [
        {
          "text": "\n    string food = \"Pizza\";\u00a0 // A food variable \n    of type stringstring* ptr = \n    &food;\u00a0\u00a0\u00a0 // A pointer variable, with the name \n    ptr, that stores the \n    address of food// Output the value of food (Pizza)cout << food << \"\\n\";// Output \n    the memory address of food (0x6dfed4)cout << &food << \"\\n\";// \n    Output the memory address of food with the pointer (0x6dfed4)cout << \n    ptr << \"\\n\";\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Pizza\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// A food variable \n    of type string",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// A pointer variable, with the name \n    ptr, that stores the \n    address of food",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "// Output the value of food (Pizza)",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\"\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// Output \n    the memory address of food (0x6dfed4)",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\"\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// \n    Output the memory address of food with the pointer (0x6dfed4)",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>    string food = <span class=\"javastringcolor\" style=\"color:green\">\"Pizza\"</span>;\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// A food variable \n    of type string<br/></span><strong>string* ptr = <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>    &amp;food;</strong>\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// A pointer variable, with the name \n    ptr, that stores the \n    address of food<br/></span><br/><span class=\"commentcolor\" style=\"color:slategray\">// Output the value of food (Pizza)<br/></span>cout &lt;&lt; food &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"\\n\"</span>;<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Output \n    the memory address of food (0x6dfed4)<br/></span>cout &lt;&lt; &amp;food &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"\\n\"</span>;<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// \n    Output the memory address of food with the pointer (0x6dfed4)<br/></span>cout &lt;&lt; <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>    ptr &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"\\n\"</span>;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_pointer",
      "syntax_highlighting_data": [
        {
          "text": "\n    string food = \"Pizza\";\u00a0 // A food variable \n    of type stringstring* ptr = \n    &food;\u00a0\u00a0\u00a0 // A pointer variable, with the name \n    ptr, that stores the \n    address of food// Output the value of food (Pizza)cout << food << \"\\n\";// Output \n    the memory address of food (0x6dfed4)cout << &food << \"\\n\";// \n    Output the memory address of food with the pointer (0x6dfed4)cout << \n    ptr << \"\\n\";\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Pizza\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// A food variable \n    of type string",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// A pointer variable, with the name \n    ptr, that stores the \n    address of food",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "// Output the value of food (Pizza)",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\"\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// Output \n    the memory address of food (0x6dfed4)",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\"\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// \n    Output the memory address of food with the pointer (0x6dfed4)",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h4"
      },
      "text": "Example explained",
      "level": "h4"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Create a pointer variable with the name ptr , that points to a string variable, by using the asterisk sign * ( string* ptr ). Note that the type of the pointer has to match the type of the variable you're working with.",
      "html": "<p>Create a pointer variable with the name <code>ptr</code>, that <strong>points to</strong> a <code>string</code> variable, by using the \nasterisk sign \n<code>*</code> (<code>string* ptr</code>). \nNote that the type of the pointer has to match the type of the variable you're \nworking with.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Use the & operator to store the memory address of the variable called food , and assign it to the pointer.",
      "html": "<p>Use the <code>&amp;</code> operator to store the memory address of the \nvariable called <code>food</code>, and assign it to the pointer.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Now, ptr holds the value of food 's memory address.",
      "html": "<p>Now, <code>ptr</code> holds the value of <code>food</code>'s memory address.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Tip: There are three ways to declare pointer variables, but the first way is preferred:",
      "html": "<p><strong>Tip:</strong> There are three ways to declare pointer variables, but the first way is preferred:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n    string* mystring; // Preferredstring *mystring;string * mystring;\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Preferred",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "string* mystring; // Preferredstring *mystring;string * mystring;",
      "syntax_highlighting": [
        {
          "text": "\n    string* mystring; // Preferredstring *mystring;string * mystring;\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Preferred",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>    string* mystring; <span class=\"commentcolor\" style=\"color:slategray\">// Preferred<br/></span>string *mystring;<br/>string * mystring;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n    string* mystring; // Preferredstring *mystring;string * mystring;\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Preferred",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What does a pointer store in C++?",
      "html": "<p>What does a pointer store in C++?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "What does a pointer store in C++?",
        "options": [
          {
            "value": "0",
            "text": "The memory address of another variable"
          },
          {
            "value": "1",
            "text": "The value of another variable"
          },
          {
            "value": "2",
            "text": "The data type of another variable"
          },
          {
            "value": "3",
            "text": "The size of a variable"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_pointers1"
      },
      "quiz_type": "quiz",
      "question": "What does a pointer store in C++?",
      "options": [
        {
          "value": "0",
          "text": "The memory address of another variable"
        },
        {
          "value": "1",
          "text": "The value of another variable"
        },
        {
          "value": "2",
          "text": "The data type of another variable"
        },
        {
          "value": "3",
          "text": "The size of a variable"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_pointers1",
      "html": "<form action=\"exercise.asp?x=xrcise_pointers1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">The memory address of another variable</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">The value of another variable</label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\">The data type of another variable</label></div><div class=\"quizoption\"><input id=\"quizoption3\" name=\"quizoption\" type=\"radio\" value=\"3\"/><label for=\"quizoption3\">The size of a variable</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}