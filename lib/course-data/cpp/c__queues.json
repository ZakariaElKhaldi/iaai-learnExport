{
  "title": "C++ Queues",
  "url": "https://www.w3schools.com/cpp/cpp_queues.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C++ Queues",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "C++ Queue",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A queue stores multiple elements in a specific order, called FIFO .",
      "html": "<p>A queue stores multiple elements in a specific order, called <strong>FIFO</strong>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "FIFO stands for First in, First Out . To visualize FIFO, think of a queue as people standing in line in a supermarket. The first person to stand in line is also the first who can pay and leave the supermarket. This way of organizing elements is called FIFO in computer science and programming.",
      "html": "<p><strong>FIFO</strong> stands for <strong>\nFirst in, First Out</strong>. To visualize FIFO, think of a queue as people standing in line in a supermarket.\nThe first person to stand in line is also the first who can pay and leave the supermarket. This way of organizing elements is called FIFO in computer science and programming.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "vectors",
          "href": "https://www.w3schools.com/cpp_vectors.asp",
          "title": ""
        }
      ],
      "text": "Unlike vectors , elements in the queue are not accessed by index numbers. Since queue elements are added at the end and removed from the front, you can only access an element at the front or the back.",
      "html": "<p>Unlike <a href=\"cpp_vectors.asp\">vectors</a>, elements in the queue are not \naccessed by index numbers. Since queue elements are added at the end and removed \nfrom the front, you can only access an element at the front or the back.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To use a queue, you have to include the <queue> header file:",
      "html": "<p>To use a queue, you have to include the <code>&lt;queue&gt;</code> header file: \n</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  // Include the queue library#include <queue>\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Include the queue library",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Include the queue library#include <queue>",
      "syntax_highlighting": [
        {
          "text": "\n // Include the queue library#include <queue>\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Include the queue library",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Include the queue library<br/></span>#include &lt;queue&gt;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  // Include the queue library#include <queue>\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Include the queue library",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Create a Queue",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To create a queue, use the queue keyword, and specify the type of values it should store within angle brackets <> and then the name of the queue, like: queue < type > queueName .",
      "html": "<p>To create a queue, use the <code>queue</code> keyword, \nand specify the <strong>type</strong> of values it should store within angle brackets <code>&lt;&gt;</code> \nand then the name of the queue, like: <code>queue&lt;<em>type</em>&gt; \n<em>queueName</em></code>.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  // Create a \n  queue of strings called cars\n  queue<string> cars;\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Create a \n  queue of strings called cars",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create a\nqueue of strings called cars\nqueue<string> cars;",
      "syntax_highlighting": [
        {
          "text": "\n // Create a \n  queue of strings called cars\n  queue<string> cars;\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Create a \n  queue of strings called cars",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Create a \n  queue of strings called cars<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  queue&lt;string&gt; cars;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  // Create a \n  queue of strings called cars\n  queue<string> cars;\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Create a \n  queue of strings called cars",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: The type of the queue (string in our example) cannot be changed after its been declared.",
      "html": "<p><strong>Note:</strong> The type of the queue (string in our example) cannot be changed after its been declared.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "vectors",
          "href": "https://www.w3schools.com/cpp_vectors.asp",
          "title": ""
        }
      ],
      "text": "Note: You cannot add elements to the queue at the time of declaration, like you can with vectors :",
      "html": "<p><strong>Note:</strong> You cannot add elements to the queue at the time of declaration, like you can with <a href=\"cpp_vectors.asp\">vectors</a>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n    queue<string> cars = {\"Volvo\", \"BMW\", \n  \"Ford\", \"Mazda\"}; ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh",
          "w3-border-red"
        ],
        "isNotranslate": true
      },
      "code": "queue<string> cars = {\"Volvo\", \"BMW\",\n\"Ford\", \"Mazda\"};",
      "syntax_highlighting": [
        {
          "text": "\n    queue<string> cars = {\"Volvo\", \"BMW\", \n \"Ford\", \"Mazda\"}; ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh w3-border-red\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>    queue&lt;string&gt; cars = {<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>}; </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh",
        "w3-border-red"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n    queue<string> cars = {\"Volvo\", \"BMW\", \n  \"Ford\", \"Mazda\"}; ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh",
        "w3-border-red"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Add Elements",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To add elements to the queue, you can use the .push() function after declaring the queue.",
      "html": "<p>To add elements to the queue, you can use the <code>.push()</code> \nfunction after declaring the queue.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The .push() function adds an element at the end of the queue:",
      "html": "<p>The <code>.push()</code> function adds an element at the \nend of the queue:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  // Create a queue of stringsqueue<string> cars;// Add elements to the queuecars.push(\"Volvo\");cars.push(\"BMW\");\n  cars.push(\"Ford\");cars.push(\"Mazda\");\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Create a queue of strings",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "// Add elements to the queue",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create a queue of stringsqueue<string> cars;// Add elements to the queuecars.push(\"Volvo\");cars.push(\"BMW\");\ncars.push(\"Ford\");cars.push(\"Mazda\");",
      "syntax_highlighting": [
        {
          "text": "\n // Create a queue of stringsqueue<string> cars;// Add elements to the queuecars.push(\"Volvo\");cars.push(\"BMW\");\n  cars.push(\"Ford\");cars.push(\"Mazda\");\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Create a queue of strings",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "// Add elements to the queue",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Create a queue of strings<br/></span>queue&lt;string&gt; cars;<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Add elements to the queue<br/></span>cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>);<br/>cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>);<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>);<br/>cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>);<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  // Create a queue of stringsqueue<string> cars;// Add elements to the queuecars.push(\"Volvo\");cars.push(\"BMW\");\n  cars.push(\"Ford\");cars.push(\"Mazda\");\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Create a queue of strings",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "// Add elements to the queue",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Access Queue Elements",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "arrays",
          "href": "https://www.w3schools.com/cpp_arrays.asp",
          "title": ""
        },
        {
          "text": "vectors",
          "href": "https://www.w3schools.com/cpp_vectors.asp",
          "title": ""
        }
      ],
      "text": "You cannot access queue elements by referring to index numbers, like you would with arrays and vectors .",
      "html": "<p>You cannot access queue elements by referring to index numbers, like you would with \n<a href=\"cpp_arrays.asp\">arrays</a> and <a href=\"cpp_vectors.asp\">vectors</a>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In a queue, you can only access the element at the front or the back, using .front() and .back() respectively:",
      "html": "<p>In a queue, you can only access the element at the front or the back, using\n<code>.front()</code> and <code>.back()</code> \nrespectively:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_queue_access",
        "syntaxHighlighting": [
          {
            "text": "\n    // Access the \n    front element (first and oldest)cout << cars.front();\u00a0 // \n    Outputs \"Volvo\"// Access the \n    back element (last and newest)cout << cars.back();\u00a0 // \n    Outputs \"Mazda\"\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Access the \n    front element (first and oldest)",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "front",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "// \n    Outputs \"Volvo\"",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "// Access the \n    back element (last and newest)",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "back",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "// \n    Outputs \"Mazda\"",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Access the\nfront element (first and oldest)cout << cars.front();\u00a0 //\nOutputs \"Volvo\"// Access the\nback element (last and newest)cout << cars.back();\u00a0 //\nOutputs \"Mazda\"",
      "syntax_highlighting": [
        {
          "text": "\n // Access the \n    front element (first and oldest)cout << cars.front();\u00a0 // \n    Outputs \"Volvo\"// Access the \n    back element (last and newest)cout << cars.back();\u00a0 // \n    Outputs \"Mazda\"\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Access the \n    front element (first and oldest)",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "front",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "// \n    Outputs \"Volvo\"",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "// Access the \n    back element (last and newest)",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "back",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "// \n    Outputs \"Mazda\"",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Access the \n    front element (first and oldest)<br/></span>cout &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">front</span>();\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// \n    Outputs \"Volvo\"<br/></span><br/><span class=\"commentcolor\" style=\"color:slategray\">// Access the \n    back element (last and newest)<br/></span>cout &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">back</span>();\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// \n    Outputs \"Mazda\"<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_queue_access",
      "syntax_highlighting_data": [
        {
          "text": "\n    // Access the \n    front element (first and oldest)cout << cars.front();\u00a0 // \n    Outputs \"Volvo\"// Access the \n    back element (last and newest)cout << cars.back();\u00a0 // \n    Outputs \"Mazda\"\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Access the \n    front element (first and oldest)",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "front",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "// \n    Outputs \"Volvo\"",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "// Access the \n    back element (last and newest)",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "back",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "// \n    Outputs \"Mazda\"",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Change Front and Back Elements",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also use .front and .back to change the value of the front and back elements:",
      "html": "<p>You can also use <code>.front</code> and <code>.back</code> to change the value of the front and back elements:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_queue_change",
        "syntaxHighlighting": [
          {
            "text": "\n    // Change the value of the front elementcars.front() = \"Tesla\";\n    // Change the value of the back elementcars.back() = \"VW\";// \n    Access the front elementcout << cars.front();\u00a0 // Now outputs \n    \"Tesla\" instead of \"Volvo\"// Access the back elementcout << cars.back();\u00a0 // Now outputs \"VW\" instead \n    of \"Mazda\"\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Change the value of the front element",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "front",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Tesla\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Change the value of the back element",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "back",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"VW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// \n    Access the front element",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "front",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "// Now outputs \n    \"Tesla\" instead of \"Volvo\"",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "// Access the back element",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "back",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "// Now outputs \"VW\" instead \n    of \"Mazda\"",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Change the value of the front elementcars.front() = \"Tesla\";\n// Change the value of the back elementcars.back() = \"VW\";//\nAccess the front elementcout << cars.front();\u00a0 // Now outputs\n\"Tesla\" instead of \"Volvo\"// Access the back elementcout << cars.back();\u00a0 // Now outputs \"VW\" instead\nof \"Mazda\"",
      "syntax_highlighting": [
        {
          "text": "\n // Change the value of the front elementcars.front() = \"Tesla\";\n // Change the value of the back elementcars.back() = \"VW\";// \n    Access the front elementcout << cars.front();\u00a0 // Now outputs \n    \"Tesla\" instead of \"Volvo\"// Access the back elementcout << cars.back();\u00a0 // Now outputs \"VW\" instead \n    of \"Mazda\"\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Change the value of the front element",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "front",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Tesla\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Change the value of the back element",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "back",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"VW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// \n    Access the front element",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "front",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "// Now outputs \n    \"Tesla\" instead of \"Volvo\"",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "// Access the back element",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "back",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "// Now outputs \"VW\" instead \n    of \"Mazda\"",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Change the value of the front element<br/></span>cars.<span class=\"javapropertycolor\" style=\"color:black\">front</span>() = <span class=\"javastringcolor\" style=\"color:green\">\"Tesla\"</span>;<br/><br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Change the value of the back element<br/></span>cars.<span class=\"javapropertycolor\" style=\"color:black\">back</span>() = <span class=\"javastringcolor\" style=\"color:green\">\"VW\"</span>;<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// \n    Access the front element<br/></span>cout &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">front</span>();\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Now outputs \n    \"Tesla\" instead of \"Volvo\"<br/></span><br/><span class=\"commentcolor\" style=\"color:slategray\">// Access the back element<br/></span>cout &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">back</span>();\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Now outputs \"VW\" instead \n    of \"Mazda\"<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_queue_change",
      "syntax_highlighting_data": [
        {
          "text": "\n    // Change the value of the front elementcars.front() = \"Tesla\";\n    // Change the value of the back elementcars.back() = \"VW\";// \n    Access the front elementcout << cars.front();\u00a0 // Now outputs \n    \"Tesla\" instead of \"Volvo\"// Access the back elementcout << cars.back();\u00a0 // Now outputs \"VW\" instead \n    of \"Mazda\"\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Change the value of the front element",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "front",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Tesla\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Change the value of the back element",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "back",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"VW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// \n    Access the front element",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "front",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "// Now outputs \n    \"Tesla\" instead of \"Volvo\"",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "// Access the back element",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "back",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "// Now outputs \"VW\" instead \n    of \"Mazda\"",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Remove Elements",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can use the .pop() function to remove an element from the queue.",
      "html": "<p>You can use the <code>.pop()</code> function to remove an element from the \nqueue.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This will remove the front element (the first and oldest element that was added to the queue):",
      "html": "<p>This will remove the front element (the first and oldest element that was added to the \nqueue):</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_queue_remove",
        "syntaxHighlighting": [
          {
            "text": "\n  // Create a queue of stringsqueue<string> cars;// Add elements to the queuecars.push(\"Volvo\");cars.push(\"BMW\");\n  cars.push(\"Ford\");cars.push(\"Mazda\");// Remove the \n  front \n  element (Volvo)cars.pop();// Access the front \n  element (Now BMW)\n  cout << cars.front();\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Create a queue of strings",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "// Add elements to the queue",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// Remove the \n  front \n  element (Volvo)",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "pop",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "// Access the front \n  element (Now BMW)",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "front",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create a queue of stringsqueue<string> cars;// Add elements to the queuecars.push(\"Volvo\");cars.push(\"BMW\");\ncars.push(\"Ford\");cars.push(\"Mazda\");// Remove the\nfront\nelement (Volvo)cars.pop();// Access the front\nelement (Now BMW)\ncout << cars.front();",
      "syntax_highlighting": [
        {
          "text": "\n // Create a queue of stringsqueue<string> cars;// Add elements to the queuecars.push(\"Volvo\");cars.push(\"BMW\");\n  cars.push(\"Ford\");cars.push(\"Mazda\");// Remove the \n  front \n  element (Volvo)cars.pop();// Access the front \n  element (Now BMW)\n  cout << cars.front();\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Create a queue of strings",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "// Add elements to the queue",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// Remove the \n  front \n  element (Volvo)",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "pop",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "// Access the front \n  element (Now BMW)",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "front",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Create a queue of strings<br/></span>queue&lt;string&gt; cars;<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Add elements to the queue<br/></span>cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>);<br/>cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>);<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>);<br/>cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>);<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Remove the \n  front \n  element (Volvo)<br/></span><strong>cars.<span class=\"javapropertycolor\" style=\"color:black\">pop</span>();</strong><br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Access the front \n  element (Now BMW)<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  cout &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">front</span>();<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_queue_remove",
      "syntax_highlighting_data": [
        {
          "text": "\n  // Create a queue of stringsqueue<string> cars;// Add elements to the queuecars.push(\"Volvo\");cars.push(\"BMW\");\n  cars.push(\"Ford\");cars.push(\"Mazda\");// Remove the \n  front \n  element (Volvo)cars.pop();// Access the front \n  element (Now BMW)\n  cout << cars.front();\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Create a queue of strings",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "// Add elements to the queue",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// Remove the \n  front \n  element (Volvo)",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "pop",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "// Access the front \n  element (Now BMW)",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "front",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Get the Size of a Queue",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To find out how many elements there are in a queue, use the .size() function:",
      "html": "<p>To find out how many elements there are in a queue, use the <code>.size()</code> function:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_queue_size",
        "syntaxHighlighting": [
          {
            "text": "\n  cout \n  << cars.size();\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "size",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "cout\n<< cars.size();",
      "syntax_highlighting": [
        {
          "text": "\n  cout \n  << cars.size();\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "size",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  cout <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">size</span>();<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_queue_size",
      "syntax_highlighting_data": [
        {
          "text": "\n  cout \n  << cars.size();\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "size",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Check if the Queue is Empty",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Use the .empty() function to find out if the queue is empty or not.",
      "html": "<p>Use the <code>.empty()</code> function to find out if the \nqueue is empty or not.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The .empty() function returns 1 ( true ) if the queue is empty and 0 ( false ) otherwise:",
      "html": "<p>The <code>.empty()</code> function returns <code>\n1</code> (<em>true</em>) if the queue is empty and <code>0</code> (<em>false</em>) \notherwise:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_queue_empty",
        "syntaxHighlighting": [
          {
            "text": "\n  queue<string> cars;cout << cars.empty(); \n  // Outputs 1 (The queue is empty)\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "empty",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Outputs 1 (The queue is empty)",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "queue<string> cars;cout << cars.empty();\n// Outputs 1 (The queue is empty)",
      "syntax_highlighting": [
        {
          "text": "\n  queue<string> cars;cout << cars.empty(); \n // Outputs 1 (The queue is empty)\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "empty",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Outputs 1 (The queue is empty)",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  queue&lt;string&gt; cars;<br/>cout &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">empty</span>(); <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Outputs 1 (The queue is empty)<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_queue_empty",
      "syntax_highlighting_data": [
        {
          "text": "\n  queue<string> cars;cout << cars.empty(); \n  // Outputs 1 (The queue is empty)\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "empty",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Outputs 1 (The queue is empty)",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_queue_empty2",
        "syntaxHighlighting": [
          {
            "text": "\n  queue<string> cars;cars.push(\"Volvo\");cars.push(\"BMW\");\n  cars.push(\"Ford\");cars.push(\"Mazda\");cout \n  << cars.empty();\u00a0 \n  // Outputs 0 (not empty)\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "empty",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Outputs 0 (not empty)",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "queue<string> cars;cars.push(\"Volvo\");cars.push(\"BMW\");\ncars.push(\"Ford\");cars.push(\"Mazda\");cout\n<< cars.empty();\n// Outputs 0 (not empty)",
      "syntax_highlighting": [
        {
          "text": "\n  queue<string> cars;cars.push(\"Volvo\");cars.push(\"BMW\");\n  cars.push(\"Ford\");cars.push(\"Mazda\");cout \n  << cars.empty();\u00a0 \n // Outputs 0 (not empty)\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "empty",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Outputs 0 (not empty)",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  queue&lt;string&gt; cars;<br/><br/>cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>);<br/>cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>);<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>);<br/>cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>);<br/><br/>cout <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">empty</span>();\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Outputs 0 (not empty)<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_queue_empty2",
      "syntax_highlighting_data": [
        {
          "text": "\n  queue<string> cars;cars.push(\"Volvo\");cars.push(\"BMW\");\n  cars.push(\"Ford\");cars.push(\"Mazda\");cout \n  << cars.empty();\u00a0 \n  // Outputs 0 (not empty)\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "empty",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Outputs 0 (not empty)",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Stacks and Queues",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Stacks",
          "href": "https://www.w3schools.com/cpp_stacks.asp",
          "title": ""
        },
        {
          "text": "previous page",
          "href": "https://www.w3schools.com/cpp_stacks.asp",
          "title": ""
        }
      ],
      "text": "Queues are often mentioned together with Stacks , which is a similar data structure described in the previous page .",
      "html": "<p>Queues are often mentioned together with <a href=\"cpp_stacks.asp\">Stacks</a>, which is a similar data structure described in the \n<a href=\"cpp_stacks.asp\">previous page</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is the order of element access in a queue?",
      "html": "<p>What is the order of element access in a queue?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "What is the order of element access in a queue?",
        "options": [
          {
            "value": "0",
            "text": "FIFO (First In, First Out)"
          },
          {
            "value": "1",
            "text": "LIFO (Last In, First Out)"
          },
          {
            "value": "2",
            "text": "Random"
          },
          {
            "value": "3",
            "text": "Sorted"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_queues1"
      },
      "quiz_type": "quiz",
      "question": "What is the order of element access in a queue?",
      "options": [
        {
          "value": "0",
          "text": "FIFO (First In, First Out)"
        },
        {
          "value": "1",
          "text": "LIFO (Last In, First Out)"
        },
        {
          "value": "2",
          "text": "Random"
        },
        {
          "value": "3",
          "text": "Sorted"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_queues1",
      "html": "<form action=\"exercise.asp?x=xrcise_queues1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">FIFO (First In, First Out)</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">LIFO (Last In, First Out)</label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\">Random</label></div><div class=\"quizoption\"><input id=\"quizoption3\" name=\"quizoption\" type=\"radio\" value=\"3\"/><label for=\"quizoption3\">Sorted</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}