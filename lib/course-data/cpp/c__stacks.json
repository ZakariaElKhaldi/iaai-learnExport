{
  "title": "C++ Stacks",
  "url": "https://www.w3schools.com/cpp/cpp_stacks.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C++ Stacks",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "C++ Stack",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A stack stores multiple elements in a specific order, called LIFO .",
      "html": "<p>A stack stores multiple elements in a specific order, called <strong>LIFO</strong>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "LIFO stands for Last in, First Out . To vizualise LIFO, think of a pile of pancakes, where pancakes are both added and removed from the top. So when removing a pancake, it will always be the last one you added. This way of organizing elements is called LIFO in computer science and programming.",
      "html": "<p><strong>LIFO</strong> stands for <strong>\nLast in, First Out</strong>. To vizualise LIFO, think of a pile of pancakes, \nwhere pancakes are both added and removed from the top. So when removing a pancake, it will always be the last \none you added. This way of organizing elements is called LIFO in computer \nscience and programming.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "vectors",
          "href": "https://www.w3schools.com/cpp_vectors.asp",
          "title": ""
        }
      ],
      "text": "Unlike vectors , elements in the stack are not accessed by index numbers. Since elements are added and removed from the top, you can only access the element at the top of the stack.",
      "html": "<p>Unlike <a href=\"cpp_vectors.asp\">vectors</a>, elements in the stack are not \naccessed by index numbers. Since elements are added and removed from the top, you can only access the element at the top of the stack. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To use a stack, you have to include the <stack> header file:",
      "html": "<p>To use a stack, you have to include the <code>&lt;stack&gt;</code> header file: \n</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  // Include the stack library#include <stack>\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Include the stack library",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Include the stack library#include <stack>",
      "syntax_highlighting": [
        {
          "text": "\n // Include the stack library#include <stack>\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Include the stack library",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Include the stack library<br/></span>#include &lt;stack&gt;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  // Include the stack library#include <stack>\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Include the stack library",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Create a Stack",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To create a stack, use the stack keyword, and specify the type of values it should store within angle brackets <> and then the name of the stack, like: stack < type > stackName .",
      "html": "<p>To create a stack, use the <code>stack</code> keyword, \nand specify the <strong>type</strong> of values it should store within angle brackets <code>&lt;&gt;</code> \nand then the name of the stack, like: <code>stack&lt;<em>type</em>&gt; \n<em>stackName</em></code>.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  // Create a \n  stack of strings called cars\n  stack<string> cars;\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Create a \n  stack of strings called cars",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create a\nstack of strings called cars\nstack<string> cars;",
      "syntax_highlighting": [
        {
          "text": "\n // Create a \n  stack of strings called cars\n  stack<string> cars;\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Create a \n  stack of strings called cars",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Create a \n  stack of strings called cars<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  stack&lt;string&gt; cars;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  // Create a \n  stack of strings called cars\n  stack<string> cars;\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Create a \n  stack of strings called cars",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: The type of the stack (string in our example) cannot be changed after its been declared.",
      "html": "<p><strong>Note:</strong> The type of the stack (string in our example) cannot be changed after its been declared.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "vectors",
          "href": "https://www.w3schools.com/cpp_vectors.asp",
          "title": ""
        }
      ],
      "text": "Note: You cannot add elements to the stack at the time of declaration, like you can with vectors :",
      "html": "<p><strong>Note:</strong> You cannot add elements to the stack at the time of declaration, like you can with <a href=\"cpp_vectors.asp\">vectors</a>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  stack<string> cars = {\"Volvo\", \"BMW\", \n  \"Ford\", \"Mazda\"}; ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh",
          "w3-border-red"
        ],
        "isNotranslate": true
      },
      "code": "stack<string> cars = {\"Volvo\", \"BMW\",\n\"Ford\", \"Mazda\"};",
      "syntax_highlighting": [
        {
          "text": "\n  stack<string> cars = {\"Volvo\", \"BMW\", \n \"Ford\", \"Mazda\"}; ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh w3-border-red\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  stack&lt;string&gt; cars = {<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>}; </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh",
        "w3-border-red"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  stack<string> cars = {\"Volvo\", \"BMW\", \n  \"Ford\", \"Mazda\"}; ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh",
        "w3-border-red"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Add Elements",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To add elements to the stack, use the .push() function, after declaring the stack:",
      "html": "<p>To add elements to the stack, use the <code>.push()</code> \nfunction, after declaring the stack:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  // Create a stack of strings called carsstack<string> cars;// \n  Add elements to the stackcars.push(\"Volvo\");cars.push(\"BMW\");\n  cars.push(\"Ford\");cars.push(\"Mazda\");\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Create a stack of strings called cars",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "// \n  Add elements to the stack",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create a stack of strings called carsstack<string> cars;//\nAdd elements to the stackcars.push(\"Volvo\");cars.push(\"BMW\");\ncars.push(\"Ford\");cars.push(\"Mazda\");",
      "syntax_highlighting": [
        {
          "text": "\n // Create a stack of strings called carsstack<string> cars;// \n  Add elements to the stackcars.push(\"Volvo\");cars.push(\"BMW\");\n  cars.push(\"Ford\");cars.push(\"Mazda\");\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Create a stack of strings called cars",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "// \n  Add elements to the stack",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Create a stack of strings called cars<br/></span>stack&lt;string&gt; cars;<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// \n  Add elements to the stack<br/></span>cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>);<br/>cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>);<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>);<br/>cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>);<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  // Create a stack of strings called carsstack<string> cars;// \n  Add elements to the stackcars.push(\"Volvo\");cars.push(\"BMW\");\n  cars.push(\"Ford\");cars.push(\"Mazda\");\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Create a stack of strings called cars",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "// \n  Add elements to the stack",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Access Stack Elements",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "arrays",
          "href": "https://www.w3schools.com/cpp_arrays.asp",
          "title": ""
        },
        {
          "text": "vectors",
          "href": "https://www.w3schools.com/cpp_vectors.asp",
          "title": ""
        }
      ],
      "text": "You cannot access stack elements by referring to index numbers, like you would with arrays and vectors .",
      "html": "<p>You cannot access stack elements by referring to index numbers, like you would with \n<a href=\"cpp_arrays.asp\">arrays</a> and <a href=\"cpp_vectors.asp\">vectors</a>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In a stack, you can only access the top element, which is done using the .top() function:",
      "html": "<p>In a stack, you can only access the top element, which is done using the <code>.top()</code> function:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_stack_access",
        "syntaxHighlighting": [
          {
            "text": "\n    // Access the top elementcout << cars.top();\u00a0 // Outputs \n    \"Mazda\"\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Access the top element",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "top",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "// Outputs \n    \"Mazda\"",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Access the top elementcout << cars.top();\u00a0 // Outputs\n\"Mazda\"",
      "syntax_highlighting": [
        {
          "text": "\n // Access the top elementcout << cars.top();\u00a0 // Outputs \n    \"Mazda\"\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Access the top element",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "top",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "// Outputs \n    \"Mazda\"",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Access the top element<br/></span>cout &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">top</span>();\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Outputs \n    \"Mazda\"<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_stack_access",
      "syntax_highlighting_data": [
        {
          "text": "\n    // Access the top elementcout << cars.top();\u00a0 // Outputs \n    \"Mazda\"\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Access the top element",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "top",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "// Outputs \n    \"Mazda\"",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Change the Top Element",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also use the .top function to change the value of the top element:",
      "html": "<p>You can also use the <code>.top</code> function to change the value of the top element:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_stack_change",
        "syntaxHighlighting": [
          {
            "text": "\n    // \n    Change the value of the top elementcars.top() = \"Tesla\";\u00a0// \n    Access the top elementcout << cars.top();\u00a0 // Now outputs \"Tesla\" \n    instead of \"Mazda\"\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// \n    Change the value of the top element",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "top",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Tesla\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// \n    Access the top element",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "top",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "// Now outputs \"Tesla\" \n    instead of \"Mazda\"",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "//\nChange the value of the top elementcars.top() = \"Tesla\";\u00a0//\nAccess the top elementcout << cars.top();\u00a0 // Now outputs \"Tesla\"\ninstead of \"Mazda\"",
      "syntax_highlighting": [
        {
          "text": "\n // \n    Change the value of the top elementcars.top() = \"Tesla\";\u00a0// \n    Access the top elementcout << cars.top();\u00a0 // Now outputs \"Tesla\" \n    instead of \"Mazda\"\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// \n    Change the value of the top element",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "top",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Tesla\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// \n    Access the top element",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "top",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "// Now outputs \"Tesla\" \n    instead of \"Mazda\"",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// \n    Change the value of the top element<br/></span>cars.<span class=\"javapropertycolor\" style=\"color:black\">top</span>() = <span class=\"javastringcolor\" style=\"color:green\">\"Tesla\"</span>;<br/><br/>\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// \n    Access the top element<br/></span>cout &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">top</span>();\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Now outputs \"Tesla\" \n    instead of \"Mazda\"<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_stack_change",
      "syntax_highlighting_data": [
        {
          "text": "\n    // \n    Change the value of the top elementcars.top() = \"Tesla\";\u00a0// \n    Access the top elementcout << cars.top();\u00a0 // Now outputs \"Tesla\" \n    instead of \"Mazda\"\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// \n    Change the value of the top element",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "top",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Tesla\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// \n    Access the top element",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "top",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "// Now outputs \"Tesla\" \n    instead of \"Mazda\"",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Remove Elements",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can use the .pop() function to remove an element from the stack.",
      "html": "<p>You can use the <code>.pop()</code> function to remove an element from the stack.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This will remove the last element that was added to the stack:",
      "html": "<p>This will remove the last element that was added to the stack:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_stack_remove",
        "syntaxHighlighting": [
          {
            "text": "\n  // Create a stack of strings called carsstack<string> cars;// \n  Add elements to the stackcars.push(\"Volvo\");cars.push(\"BMW\");\n  cars.push(\"Ford\");cars.push(\"Mazda\");// Remove the \n  last added \n  element (Mazda)cars.pop();// Access the top \n  element (Now Ford)\n  cout << cars.top();\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Create a stack of strings called cars",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "// \n  Add elements to the stack",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// Remove the \n  last added \n  element (Mazda)",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "pop",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "// Access the top \n  element (Now Ford)",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "top",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create a stack of strings called carsstack<string> cars;//\nAdd elements to the stackcars.push(\"Volvo\");cars.push(\"BMW\");\ncars.push(\"Ford\");cars.push(\"Mazda\");// Remove the\nlast added\nelement (Mazda)cars.pop();// Access the top\nelement (Now Ford)\ncout << cars.top();",
      "syntax_highlighting": [
        {
          "text": "\n // Create a stack of strings called carsstack<string> cars;// \n  Add elements to the stackcars.push(\"Volvo\");cars.push(\"BMW\");\n  cars.push(\"Ford\");cars.push(\"Mazda\");// Remove the \n  last added \n  element (Mazda)cars.pop();// Access the top \n  element (Now Ford)\n  cout << cars.top();\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Create a stack of strings called cars",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "// \n  Add elements to the stack",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// Remove the \n  last added \n  element (Mazda)",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "pop",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "// Access the top \n  element (Now Ford)",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "top",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Create a stack of strings called cars<br/></span>stack&lt;string&gt; cars;<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// \n  Add elements to the stack<br/></span>cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>);<br/>cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>);<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>);<br/>cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>);<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Remove the \n  last added \n  element (Mazda)<br/></span><strong>cars.<span class=\"javapropertycolor\" style=\"color:black\">pop</span>();</strong><br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Access the top \n  element (Now Ford)<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  cout &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">top</span>();<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_stack_remove",
      "syntax_highlighting_data": [
        {
          "text": "\n  // Create a stack of strings called carsstack<string> cars;// \n  Add elements to the stackcars.push(\"Volvo\");cars.push(\"BMW\");\n  cars.push(\"Ford\");cars.push(\"Mazda\");// Remove the \n  last added \n  element (Mazda)cars.pop();// Access the top \n  element (Now Ford)\n  cout << cars.top();\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Create a stack of strings called cars",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "// \n  Add elements to the stack",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// Remove the \n  last added \n  element (Mazda)",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "pop",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "// Access the top \n  element (Now Ford)",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "top",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Get the Size of the Stack",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To find out how many elements a stack has, use the .size() function:",
      "html": "<p>To find out how many elements a stack has, use the <code>.size()</code> function:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_stack_size",
        "syntaxHighlighting": [
          {
            "text": "\n  cout \n  << cars.size();\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "size",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "cout\n<< cars.size();",
      "syntax_highlighting": [
        {
          "text": "\n  cout \n  << cars.size();\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "size",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  cout <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">size</span>();<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_stack_size",
      "syntax_highlighting_data": [
        {
          "text": "\n  cout \n  << cars.size();\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "size",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Check if the Stack is Empty",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Use the .empty() function to find out if the stack is empty or not.",
      "html": "<p>Use the <code>.empty()</code> function to find out if the \nstack is empty or not.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The .empty() function returns 1 ( true ) if the stack is empty and 0 ( false ) otherwise:",
      "html": "<p>The <code>.empty()</code> function returns <code>\n1</code> (<em>true</em>) if the stack is empty and <code>0</code> (<em>false</em>) \notherwise:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_stack_empty",
        "syntaxHighlighting": [
          {
            "text": "\n  stack<string> cars;cout << cars.empty(); \n  // Outputs 1 (The stack is empty)\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "empty",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Outputs 1 (The stack is empty)",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "stack<string> cars;cout << cars.empty();\n// Outputs 1 (The stack is empty)",
      "syntax_highlighting": [
        {
          "text": "\n  stack<string> cars;cout << cars.empty(); \n // Outputs 1 (The stack is empty)\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "empty",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Outputs 1 (The stack is empty)",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  stack&lt;string&gt; cars;<br/>cout &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">empty</span>(); <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Outputs 1 (The stack is empty)<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_stack_empty",
      "syntax_highlighting_data": [
        {
          "text": "\n  stack<string> cars;cout << cars.empty(); \n  // Outputs 1 (The stack is empty)\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "empty",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Outputs 1 (The stack is empty)",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_stack_empty2",
        "syntaxHighlighting": [
          {
            "text": "\n  stack<string> cars;cars.push(\"Volvo\");cars.push(\"BMW\");\n  cars.push(\"Ford\");cars.push(\"Mazda\");cout \n  << cars.empty();\u00a0 \n  // Outputs 0 (not empty)\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "empty",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Outputs 0 (not empty)",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "stack<string> cars;cars.push(\"Volvo\");cars.push(\"BMW\");\ncars.push(\"Ford\");cars.push(\"Mazda\");cout\n<< cars.empty();\n// Outputs 0 (not empty)",
      "syntax_highlighting": [
        {
          "text": "\n  stack<string> cars;cars.push(\"Volvo\");cars.push(\"BMW\");\n  cars.push(\"Ford\");cars.push(\"Mazda\");cout \n  << cars.empty();\u00a0 \n // Outputs 0 (not empty)\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "empty",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Outputs 0 (not empty)",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  stack&lt;string&gt; cars;<br/><br/>cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>);<br/>cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>);<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>);<br/>cars.<span class=\"javapropertycolor\" style=\"color:black\">push</span>(<span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>);<br/><br/>cout <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">empty</span>();\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Outputs 0 (not empty)<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_stack_empty2",
      "syntax_highlighting_data": [
        {
          "text": "\n  stack<string> cars;cars.push(\"Volvo\");cars.push(\"BMW\");\n  cars.push(\"Ford\");cars.push(\"Mazda\");cout \n  << cars.empty();\u00a0 \n  // Outputs 0 (not empty)\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "empty",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Outputs 0 (not empty)",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Stacks and Queues",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Queues",
          "href": "https://www.w3schools.com/cpp_queues.asp",
          "title": ""
        },
        {
          "text": "next page",
          "href": "https://www.w3schools.com/cpp_queues.asp",
          "title": ""
        }
      ],
      "text": "Stacks are often mentioned together with Queues , which is a similar data structure described on the next page .",
      "html": "<p>Stacks are often mentioned together with <a href=\"cpp_queues.asp\">Queues</a>, which is a similar data structure described on the <a href=\"cpp_queues.asp\">next page</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is the order of element access in a stack?",
      "html": "<p>What is the order of element access in a stack?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "What is the order of element access in a stack?",
        "options": [
          {
            "value": "0",
            "text": "FIFO (First In, First Out)"
          },
          {
            "value": "1",
            "text": "LIFO (Last In, First Out)"
          },
          {
            "value": "2",
            "text": "Random"
          },
          {
            "value": "3",
            "text": "Sorted"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_stacks1"
      },
      "quiz_type": "quiz",
      "question": "What is the order of element access in a stack?",
      "options": [
        {
          "value": "0",
          "text": "FIFO (First In, First Out)"
        },
        {
          "value": "1",
          "text": "LIFO (Last In, First Out)"
        },
        {
          "value": "2",
          "text": "Random"
        },
        {
          "value": "3",
          "text": "Sorted"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_stacks1",
      "html": "<form action=\"exercise.asp?x=xrcise_stacks1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">FIFO (First In, First Out)</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">LIFO (Last In, First Out)</label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\">Random</label></div><div class=\"quizoption\"><input id=\"quizoption3\" name=\"quizoption\" type=\"radio\" value=\"3\"/><label for=\"quizoption3\">Sorted</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}