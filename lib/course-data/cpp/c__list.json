{
  "title": "C++ List",
  "url": "https://www.w3schools.com/cpp/cpp_list.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C++ List",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "C++ List",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "vector",
          "href": "https://www.w3schools.com/cpp_vectors.asp",
          "title": ""
        }
      ],
      "text": "A list is similar to a vector in that it can store multiple elements of the same type and dynamically grow in size.",
      "html": "<p>A list is similar to a <a href=\"cpp_vectors.asp\">vector</a> in that it can store multiple elements of the same type and dynamically grow in size.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "However, two major differences between lists and vectors are:",
      "html": "<p>However, two major differences between lists and vectors are:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To use a list, you have to include the <list> header file:",
      "html": "<p>To use a list, you have to include the <code>&lt;list&gt;</code> header file:\n\n</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  // Include the list library#include <list>\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Include the list library",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Include the list library#include <list>",
      "syntax_highlighting": [
        {
          "text": "\n // Include the list library#include <list>\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Include the list library",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Include the list library<br/></span>#include &lt;list&gt;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  // Include the list library#include <list>\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Include the list library",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Create a List",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To create a list, use the list keyword, and specify the type of values it should store within angle brackets <> and then the name of the list, like: list < type > listName .",
      "html": "<p>To create a list, use the <code>list</code> keyword, and \nspecify the <strong>type</strong> of values it should store within angle brackets <code>&lt;&gt;</code> \nand then the name of the list, like: <code>list&lt;<em>type</em>&gt; \n<em>listName</em></code>.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  // Create a list called cars that will store stringslist<string> cars;\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Create a list called cars that will store strings",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create a list called cars that will store stringslist<string> cars;",
      "syntax_highlighting": [
        {
          "text": "\n // Create a list called cars that will store stringslist<string> cars;\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Create a list called cars that will store strings",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Create a list called cars that will store strings<br/></span>list&lt;string&gt; cars;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  // Create a list called cars that will store stringslist<string> cars;\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Create a list called cars that will store strings",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you want to add elements at the time of declaration, place them in a comma-separated list, inside curly braces {} :",
      "html": "<p>If you want to add elements at the time of declaration, place them in a comma-separated list, inside curly braces <code>{}</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_list",
        "syntaxHighlighting": [
          {
            "text": "\n  // Create a list called cars that will store stringslist<string> cars = {\"Volvo\", \"BMW\", \n  \"Ford\", \"Mazda\"};// Print list elements\n  for (string car : cars) {\u00a0 cout << car << \"\\n\";}\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Create a list called cars that will store strings",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// Print list elements",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\"\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create a list called cars that will store stringslist<string> cars = {\"Volvo\", \"BMW\",\n\"Ford\", \"Mazda\"};// Print list elements\nfor (string car : cars) {\u00a0 cout << car << \"\\n\";}",
      "syntax_highlighting": [
        {
          "text": "\n // Create a list called cars that will store stringslist<string> cars = {\"Volvo\", \"BMW\", \n \"Ford\", \"Mazda\"};// Print list elements\n for (string car : cars) {\u00a0 cout << car << \"\\n\";}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Create a list called cars that will store strings",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// Print list elements",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\"\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Create a list called cars that will store strings<br/></span>list&lt;string&gt; cars = {<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>};<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Print list elements<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javakeywordcolor\" style=\"color:#005cc5\">for</span> (string car : cars) {<br/>\u00a0 cout &lt;&lt; car &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"\\n\"</span>;<br/>}<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_list",
      "syntax_highlighting_data": [
        {
          "text": "\n  // Create a list called cars that will store stringslist<string> cars = {\"Volvo\", \"BMW\", \n  \"Ford\", \"Mazda\"};// Print list elements\n  for (string car : cars) {\u00a0 cout << car << \"\\n\";}\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Create a list called cars that will store strings",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// Print list elements",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\"\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: The type of the list ( string in our example) cannot be changed after its been declared.",
      "html": "<p><strong>Note:</strong> The type of the list (<code>string</code> in our example) cannot be changed after its been declared.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Access a List",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You cannot access list elements by referring to index numbers, like with arrays and vectors.",
      "html": "<p>You cannot access list elements by referring to index numbers, like with \narrays and vectors.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "However, you can access the first or the last element with the .front() and .back() functions, respectively:",
      "html": "<p>However, you can access the first or the last element with the <code>.front()</code> and \n<code>.back()</code> functions, respectively:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_list_access",
        "syntaxHighlighting": [
          {
            "text": "\n  // Create a list called cars that will store stringslist<string> cars = {\"Volvo\", \"BMW\", \n  \"Ford\", \"Mazda\"};// Get the first element\n  cout << cars.front();\u00a0 // Outputs Volvo// Get the \n  last element\n  cout << cars.back();\u00a0 // Outputs Mazda\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Create a list called cars that will store strings",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// Get the first element",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "front",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "// Outputs Volvo",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "// Get the \n  last element",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "back",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "// Outputs Mazda",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create a list called cars that will store stringslist<string> cars = {\"Volvo\", \"BMW\",\n\"Ford\", \"Mazda\"};// Get the first element\ncout << cars.front();\u00a0 // Outputs Volvo// Get the\nlast element\ncout << cars.back();\u00a0 // Outputs Mazda",
      "syntax_highlighting": [
        {
          "text": "\n // Create a list called cars that will store stringslist<string> cars = {\"Volvo\", \"BMW\", \n \"Ford\", \"Mazda\"};// Get the first element\n  cout << cars.front();\u00a0 // Outputs Volvo// Get the \n  last element\n  cout << cars.back();\u00a0 // Outputs Mazda\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Create a list called cars that will store strings",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// Get the first element",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "front",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "// Outputs Volvo",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "// Get the \n  last element",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "back",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "// Outputs Mazda",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Create a list called cars that will store strings<br/></span>list&lt;string&gt; cars = {<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>};<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Get the first element<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  cout &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">front</span>();\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Outputs Volvo<br/></span><br/><span class=\"commentcolor\" style=\"color:slategray\">// Get the \n  last element<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  cout &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">back</span>();\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Outputs Mazda<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_list_access",
      "syntax_highlighting_data": [
        {
          "text": "\n  // Create a list called cars that will store stringslist<string> cars = {\"Volvo\", \"BMW\", \n  \"Ford\", \"Mazda\"};// Get the first element\n  cout << cars.front();\u00a0 // Outputs Volvo// Get the \n  last element\n  cout << cars.back();\u00a0 // Outputs Mazda\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Create a list called cars that will store strings",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// Get the first element",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "front",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "// Outputs Volvo",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "// Get the \n  last element",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "back",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "// Outputs Mazda",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Change a List Element",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also change the value of the first or the last element with the .front() and .back() functions",
      "html": "<p>You can also change the value of the first or the last element with the <code>.front()</code> and \n<code>.back()</code> functions</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_list_change",
        "syntaxHighlighting": [
          {
            "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Change the \n  value of the first elementcars.front() = \"Opel\";// Change the \n  value of the last elementcars.back() = \"Toyota\";cout << cars.front(); // Now \n  outputs Opel instead of Volvocout << cars.back();\u00a0 // Now \n  outputs Toyota instead of Mazda\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// Change the \n  value of the first element",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "front",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Opel\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// Change the \n  value of the last element",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "back",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Toyota\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "front",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "// Now \n  outputs Opel instead of Volvo",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "back",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "// Now \n  outputs Toyota instead of Mazda",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Change the\nvalue of the first elementcars.front() = \"Opel\";// Change the\nvalue of the last elementcars.back() = \"Toyota\";cout << cars.front(); // Now\noutputs Opel instead of Volvocout << cars.back();\u00a0 // Now\noutputs Toyota instead of Mazda",
      "syntax_highlighting": [
        {
          "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Change the \n  value of the first elementcars.front() = \"Opel\";// Change the \n  value of the last elementcars.back() = \"Toyota\";cout << cars.front(); // Now \n  outputs Opel instead of Volvocout << cars.back();\u00a0 // Now \n  outputs Toyota instead of Mazda\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// Change the \n  value of the first element",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "front",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Opel\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// Change the \n  value of the last element",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "back",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Toyota\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "front",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "// Now \n  outputs Opel instead of Volvo",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "back",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "// Now \n  outputs Toyota instead of Mazda",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  list&lt;string&gt; cars = {<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>};<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Change the \n  value of the first element<br/></span>cars.<span class=\"javapropertycolor\" style=\"color:black\">front</span>() = <span class=\"javastringcolor\" style=\"color:green\">\"Opel\"</span>;<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Change the \n  value of the last element<br/></span>cars.<span class=\"javapropertycolor\" style=\"color:black\">back</span>() = <span class=\"javastringcolor\" style=\"color:green\">\"Toyota\"</span>;<br/><br/>cout &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">front</span>(); <span class=\"commentcolor\" style=\"color:slategray\">// Now \n  outputs Opel instead of Volvo<br/></span>cout &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">back</span>();\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Now \n  outputs Toyota instead of Mazda<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_list_change",
      "syntax_highlighting_data": [
        {
          "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Change the \n  value of the first elementcars.front() = \"Opel\";// Change the \n  value of the last elementcars.back() = \"Toyota\";cout << cars.front(); // Now \n  outputs Opel instead of Volvocout << cars.back();\u00a0 // Now \n  outputs Toyota instead of Mazda\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// Change the \n  value of the first element",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "front",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Opel\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// Change the \n  value of the last element",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "back",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Toyota\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "front",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "// Now \n  outputs Opel instead of Volvo",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "back",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "// Now \n  outputs Toyota instead of Mazda",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Add List Elements",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To add elements to a list, you can use .push_front() to insert an element at the beginning of the list and .push_back() to add an element at the end:",
      "html": "<p>To add elements to a list, you can use <code>.push_front()</code> \nto insert an element at the beginning of the list and <code>.push_back()</code> \nto add an element at the end:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_list_add",
        "syntaxHighlighting": [
          {
            "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Add an \n  element at the beginningcars.push_front(\"Tesla\");// Add an element \n  at the endcars.push_back(\"VW\");\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// Add an \n  element at the beginning",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "push_front",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"Tesla\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// Add an element \n  at the end",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "push_back",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"VW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Add an\nelement at the beginningcars.push_front(\"Tesla\");// Add an element\nat the endcars.push_back(\"VW\");",
      "syntax_highlighting": [
        {
          "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Add an \n  element at the beginningcars.push_front(\"Tesla\");// Add an element \n  at the endcars.push_back(\"VW\");\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// Add an \n  element at the beginning",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "push_front",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"Tesla\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// Add an element \n  at the end",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "push_back",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"VW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  list&lt;string&gt; cars = {<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>};<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Add an \n  element at the beginning<br/></span>cars.<span class=\"javapropertycolor\" style=\"color:black\">push_front</span>(<span class=\"javastringcolor\" style=\"color:green\">\"Tesla\"</span>);<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Add an element \n  at the end<br/></span>cars.<span class=\"javapropertycolor\" style=\"color:black\">push_back</span>(<span class=\"javastringcolor\" style=\"color:green\">\"VW\"</span>);<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_list_add",
      "syntax_highlighting_data": [
        {
          "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Add an \n  element at the beginningcars.push_front(\"Tesla\");// Add an element \n  at the endcars.push_back(\"VW\");\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// Add an \n  element at the beginning",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "push_front",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"Tesla\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// Add an element \n  at the end",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "push_back",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"VW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Remove List Elements",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To remove elements from a list, use .pop_front() to remove an element from the beginning of the list and .pop_back() to remove an element at the end:",
      "html": "<p>To remove elements from a list, use <code>.pop_front()</code> \nto remove an element from the beginning of the list and <code>.pop_back()</code> \nto remove an element at the end:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_list_remove",
        "syntaxHighlighting": [
          {
            "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Remove the \n  first elementcars.pop_front();// Remove the last elementcars.pop_back();\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// Remove the \n  first element",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "pop_front",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "// Remove the last element",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "pop_back",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Remove the\nfirst elementcars.pop_front();// Remove the last elementcars.pop_back();",
      "syntax_highlighting": [
        {
          "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Remove the \n  first elementcars.pop_front();// Remove the last elementcars.pop_back();\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// Remove the \n  first element",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "pop_front",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "// Remove the last element",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "pop_back",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  list&lt;string&gt; cars = {<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>};<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Remove the \n  first element<br/></span>cars.<span class=\"javapropertycolor\" style=\"color:black\">pop_front</span>();<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Remove the last element<br/></span>cars.<span class=\"javapropertycolor\" style=\"color:black\">pop_back</span>();<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_list_remove",
      "syntax_highlighting_data": [
        {
          "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Remove the \n  first elementcars.pop_front();// Remove the last elementcars.pop_back();\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// Remove the \n  first element",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "pop_front",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "// Remove the last element",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "pop_back",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "List Size",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To find out how many elements a list has, use the .size() function:",
      "html": "<p>To find out how many elements a list has, use the <code>.size()</code> function:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_list_size",
        "syntaxHighlighting": [
          {
            "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};cout << cars.size();\u00a0 \n  // Outputs 4\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "size",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Outputs 4",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};cout << cars.size();\n// Outputs 4",
      "syntax_highlighting": [
        {
          "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};cout << cars.size();\u00a0 \n // Outputs 4\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "size",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Outputs 4",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  list&lt;string&gt; cars = {<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>};<br/>cout &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">size</span>();\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Outputs 4<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_list_size",
      "syntax_highlighting_data": [
        {
          "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};cout << cars.size();\u00a0 \n  // Outputs 4\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "size",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Outputs 4",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Check if a List is Empty",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Use the .empty() function to find out if a list is empty or not.",
      "html": "<p>Use the <code>.empty()</code> function to find out if a list is empty or not.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The .empty() function returns 1 ( true ) if the list is empty and 0 ( false ) otherwise:",
      "html": "<p>The <code>.empty()</code> function returns <code>\n1</code> (<em>true</em>) if the list is empty and <code>0</code> (<em>false</em>) \notherwise:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_list_empty",
        "syntaxHighlighting": [
          {
            "text": "\n  list<string> cars;cout << cars.empty();\u00a0 \n  // Outputs 1 (The list is empty)\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "empty",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Outputs 1 (The list is empty)",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "list<string> cars;cout << cars.empty();\n// Outputs 1 (The list is empty)",
      "syntax_highlighting": [
        {
          "text": "\n  list<string> cars;cout << cars.empty();\u00a0 \n // Outputs 1 (The list is empty)\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "empty",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Outputs 1 (The list is empty)",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  list&lt;string&gt; cars;<br/>cout &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">empty</span>();\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Outputs 1 (The list is empty)<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_list_empty",
      "syntax_highlighting_data": [
        {
          "text": "\n  list<string> cars;cout << cars.empty();\u00a0 \n  // Outputs 1 (The list is empty)\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "empty",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Outputs 1 (The list is empty)",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_list_empty2",
        "syntaxHighlighting": [
          {
            "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};cout << cars.empty();\u00a0 \n  // Outputs 0 (not empty)\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "empty",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Outputs 0 (not empty)",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};cout << cars.empty();\n// Outputs 0 (not empty)",
      "syntax_highlighting": [
        {
          "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};cout << cars.empty();\u00a0 \n // Outputs 0 (not empty)\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "empty",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Outputs 0 (not empty)",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  list&lt;string&gt; cars = {<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>};<br/>cout &lt;&lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">empty</span>();\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Outputs 0 (not empty)<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_list_empty2",
      "syntax_highlighting_data": [
        {
          "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};cout << cars.empty();\u00a0 \n  // Outputs 0 (not empty)\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "empty",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Outputs 0 (not empty)",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Loop Through a List",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You cannot loop through the list elements with a traditional for loop combined with the .size() function, since it is not possible to access elements in a list by index:",
      "html": "<p>You cannot loop through the list elements with a traditional <code>for</code> loop combined with the \n<code>.size()</code> function, since it is not possible to access \nelements in a list by index:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};for (int i = \n  0; i < cars.size(); i++) {\u00a0 cout << cars[i] << \"\\n\";}\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "size",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh",
          "w3-border-red"
        ],
        "isNotranslate": true
      },
      "code": "list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};for (int i =\n0; i < cars.size(); i++) {\u00a0 cout << cars[i] << \"\\n\";}",
      "syntax_highlighting": [
        {
          "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};for (int i = \n 0; i < cars.size(); i++) {\u00a0 cout << cars[i] << \"\\n\";}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "size",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh w3-border-red\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  list&lt;string&gt; cars = {<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>};<br/><br/><span class=\"javakeywordcolor\" style=\"color:#005cc5\">for</span> (<span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> i = <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javanumbercolor\" style=\"color:#905\">0</span>; i &lt; cars.<span class=\"javapropertycolor\" style=\"color:black\">size</span>(); i++) {<br/>\u00a0 cout &lt;&lt; cars[i] &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"\\n\"</span>;<br/>}<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh",
        "w3-border-red"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};for (int i = \n  0; i < cars.size(); i++) {\u00a0 cout << cars[i] << \"\\n\";}\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "size",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh",
        "w3-border-red"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The simplest way to loop through a list is with the for-each loop:",
      "html": "<p>The simplest way to loop through a list is with the <strong>for-each</strong> \nloop:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_list_loop",
        "syntaxHighlighting": [
          {
            "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\n  for (string car : cars) {\u00a0 cout << car << \"\\n\";}\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\"\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\nfor (string car : cars) {\u00a0 cout << car << \"\\n\";}",
      "syntax_highlighting": [
        {
          "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\n for (string car : cars) {\u00a0 cout << car << \"\\n\";}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\"\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  list&lt;string&gt; cars = {<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>};<br/><br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javakeywordcolor\" style=\"color:#005cc5\">for</span> (string car : cars) {<br/>\u00a0 cout &lt;&lt; car &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"\\n\"</span>;<br/>}<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_list_loop",
      "syntax_highlighting_data": [
        {
          "text": "\n  list<string> cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\n  for (string car : cars) {\u00a0 cout << car << \"\\n\";}\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\"\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "iterator",
          "href": "https://www.w3schools.com/cpp_iterators.asp",
          "title": ""
        }
      ],
      "text": "Tip: It is also possible to loop through lists with an iterator , which you will learn more about in a later chapter.",
      "html": "<p><strong>Tip:</strong> It is also possible to loop through lists with an <a href=\"cpp_iterators.asp\">iterator</a>, which you will learn more about in a later chapter.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is a major difference between a list and a vector in C++?",
      "html": "<p>What is a major difference between a list and a vector in C++?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "What is a major difference between a list and a vector in C++?",
        "options": [
          {
            "value": "0",
            "text": "A list allows random access while a vector does not"
          },
          {
            "value": "1",
            "text": "A list cannot change in size, while a vector can"
          },
          {
            "value": "2",
            "text": "Elements can be added or removed from both ends of a list, but a vector is optimized for adding/removing at the end"
          },
          {
            "value": "3",
            "text": "A list can store multiple data types, while a vector cannot"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_list1"
      },
      "quiz_type": "quiz",
      "question": "What is a major difference between a list and a vector in C++?",
      "options": [
        {
          "value": "0",
          "text": "A list allows random access while a vector does not"
        },
        {
          "value": "1",
          "text": "A list cannot change in size, while a vector can"
        },
        {
          "value": "2",
          "text": "Elements can be added or removed from both ends of a list, but a vector is optimized for adding/removing at the end"
        },
        {
          "value": "3",
          "text": "A list can store multiple data types, while a vector cannot"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_list1",
      "html": "<form action=\"exercise.asp?x=xrcise_list1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">A list allows random access while a vector does not</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">A list cannot change in size, while a vector can</label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\">Elements can be added or removed from both ends of a list, but a vector is optimized for adding/removing at the end</label></div><div class=\"quizoption\"><input id=\"quizoption3\" name=\"quizoption\" type=\"radio\" value=\"3\"/><label for=\"quizoption3\">A list can store multiple data types, while a vector cannot</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}