{
  "title": "C++ Iterators",
  "url": "https://www.w3schools.com/cpp/cpp_iterators.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C++ Iterator",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "C++ Iterators",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "vectors",
          "href": "https://www.w3schools.com/cpp_vectors.asp",
          "title": ""
        },
        {
          "text": "sets",
          "href": "https://www.w3schools.com/cpp_sets.asp",
          "title": ""
        },
        {
          "text": "pointing",
          "href": "https://www.w3schools.com/cpp_pointers.asp",
          "title": ""
        }
      ],
      "text": "Iterators are used to access and iterate through elements of data structures ( vectors , sets , etc.), by \" pointing \" to them.",
      "html": "<p>Iterators are used to access and iterate through elements of data structures (<a href=\"cpp_vectors.asp\">vectors</a>, <a href=\"cpp_sets.asp\">sets</a>, \netc.), by \"<a href=\"cpp_pointers.asp\">pointing</a>\" to them.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It is called an \"iterator\" because \"iterating\" is the technical term for looping .",
      "html": "<p>It is called an \"iterator\" because \"iterating\" is the technical term for \n<strong>looping</strong>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To iterate through a vector, look at the following example:",
      "html": "<p>To iterate through a vector, look at the following example:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_vector",
        "syntaxHighlighting": [
          {
            "text": "\n  // Create a vector called cars that will store stringsvector<string> cars = {\"Volvo\", \"BMW\", \n  \"Ford\", \"Mazda\"};// Create a vector iterator \n  called it\n  vector<string>::iterator it;// Loop through the vector with the \n  iterator\n  for (it = cars.begin(); it != cars.end(); ++it) {\u00a0 cout << *it << \n  \"\\n\";}\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Create a vector called cars that will store strings",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// Create a vector iterator \n  called it",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Loop through the vector with the \n  iterator",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "begin",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "end",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create a vector called cars that will store stringsvector<string> cars = {\"Volvo\", \"BMW\",\n\"Ford\", \"Mazda\"};// Create a vector iterator\ncalled it\nvector<string>::iterator it;// Loop through the vector with the\niterator\nfor (it = cars.begin(); it != cars.end(); ++it) {\u00a0 cout << *it <<\n\"\\n\";}",
      "syntax_highlighting": [
        {
          "text": "\n // Create a vector called cars that will store stringsvector<string> cars = {\"Volvo\", \"BMW\", \n \"Ford\", \"Mazda\"};// Create a vector iterator \n  called it\n  vector<string>::iterator it;// Loop through the vector with the \n  iterator\n for (it = cars.begin(); it != cars.end(); ++it) {\u00a0 cout << *it << \n \"\\n\";}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Create a vector called cars that will store strings",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// Create a vector iterator \n  called it",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Loop through the vector with the \n  iterator",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "begin",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "end",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Create a vector called cars that will store strings<br/></span>vector&lt;string&gt; cars = {<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>};<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Create a vector iterator \n  called it<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  vector&lt;string&gt;::iterator it;<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Loop through the vector with the \n  iterator<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javakeywordcolor\" style=\"color:#005cc5\">for</span> (it = cars.<span class=\"javapropertycolor\" style=\"color:black\">begin</span>(); it != cars.<span class=\"javapropertycolor\" style=\"color:black\">end</span>(); ++it) {<br/>\u00a0 cout &lt;&lt; *it &lt;&lt; <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javastringcolor\" style=\"color:green\">\"\\n\"</span>;<br/>}<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_vector",
      "syntax_highlighting_data": [
        {
          "text": "\n  // Create a vector called cars that will store stringsvector<string> cars = {\"Volvo\", \"BMW\", \n  \"Ford\", \"Mazda\"};// Create a vector iterator \n  called it\n  vector<string>::iterator it;// Loop through the vector with the \n  iterator\n  for (it = cars.begin(); it != cars.end(); ++it) {\u00a0 cout << *it << \n  \"\\n\";}\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Create a vector called cars that will store strings",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// Create a vector iterator \n  called it",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Loop through the vector with the \n  iterator",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "begin",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "end",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h4"
      },
      "text": "Example explained",
      "level": "h4"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: The type of the iterator must match the type of the data structure it should iterate through ( string in our example)",
      "html": "<p><strong>Note:</strong> The type of the iterator \n  must match the type of the data structure it should iterate through (<code>string</code> in \n  our example)</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "What is begin() and end() ?",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "vectors",
          "href": "https://www.w3schools.com/cpp_vectors.asp",
          "title": ""
        },
        {
          "text": "lists",
          "href": "https://www.w3schools.com/cpp_list.asp",
          "title": ""
        }
      ],
      "text": "begin() and end() are functions that belong to data structures , such as vectors and lists . They do not belong to the iterator itself. Instead, they are used with iterators to access and iterate through the elements of these data structures.",
      "html": "<p><code>begin()</code> and <code>end()</code> are \n<strong>functions</strong> that <strong>belong to data structures</strong>, such \nas <a href=\"cpp_vectors.asp\">vectors</a> and <a href=\"cpp_list.asp\">lists</a>. They \n<strong>do not belong to the iterator</strong> itself. Instead, they are used with iterators to \naccess and iterate through the elements of these data structures.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To understand how they work, let's continue to use vectors as an example:",
      "html": "<p>To understand how they work, let's continue to use vectors as an example:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  vector<string> cars \n  = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\n  vector<string>::iterator it;\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "vector<string> cars\n= {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\nvector<string>::iterator it;",
      "syntax_highlighting": [
        {
          "text": "\n  vector<string> cars \n  = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\n vector<string>::iterator it;\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  vector&lt;string&gt; cars <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  = {<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>};<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <br/>vector&lt;string&gt;::iterator it;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  vector<string> cars \n  = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\n  vector<string>::iterator it;\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Begin Examples",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "begin() points to the first element in the vector (index 0, which is \"Volvo\"):",
      "html": "<p><code>begin()</code> points to the first element in the \nvector (index 0, which is \"Volvo\"):</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_begin",
        "syntaxHighlighting": [
          {
            "text": "\n  // Point \n  to the first element in the vectorit = cars.begin();\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Point \n  to the first element in the vector",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "begin",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Point\nto the first element in the vectorit = cars.begin();",
      "syntax_highlighting": [
        {
          "text": "\n // Point \n  to the first element in the vectorit = cars.begin();\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Point \n  to the first element in the vector",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "begin",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Point \n  to the first element in the vector<br/></span>it = cars.<span class=\"javapropertycolor\" style=\"color:black\">begin</span>();<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_begin",
      "syntax_highlighting_data": [
        {
          "text": "\n  // Point \n  to the first element in the vectorit = cars.begin();\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Point \n  to the first element in the vector",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "begin",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To point to the second element (BMW), you can write cars.begin() + 1 :",
      "html": "<p>To point to the second element (BMW), you can write <code>\ncars.begin() + 1</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_begin2",
        "syntaxHighlighting": [
          {
            "text": "\n  // Point \n  to the second elementit = cars.begin() + 1;\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Point \n  to the second element",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "begin",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Point\nto the second elementit = cars.begin() + 1;",
      "syntax_highlighting": [
        {
          "text": "\n // Point \n  to the second elementit = cars.begin() + 1;\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Point \n  to the second element",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "begin",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Point \n  to the second element<br/></span>it = cars.<span class=\"javapropertycolor\" style=\"color:black\">begin</span>() + <span class=\"javanumbercolor\" style=\"color:#905\">1</span>;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_begin2",
      "syntax_highlighting_data": [
        {
          "text": "\n  // Point \n  to the second elementit = cars.begin() + 1;\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Point \n  to the second element",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "begin",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "And of course, that also means you can point to the third element with cars.begin() + 2 :",
      "html": "<p>And of course, that also means you can point to the third element with <code>\ncars.begin() + 2</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_begin3",
        "syntaxHighlighting": [
          {
            "text": "\n  // Point \n  to the third elementit = cars.begin() + 2;\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Point \n  to the third element",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "begin",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Point\nto the third elementit = cars.begin() + 2;",
      "syntax_highlighting": [
        {
          "text": "\n // Point \n  to the third elementit = cars.begin() + 2;\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Point \n  to the third element",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "begin",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Point \n  to the third element<br/></span>it = cars.<span class=\"javapropertycolor\" style=\"color:black\">begin</span>() + <span class=\"javanumbercolor\" style=\"color:#905\">2</span>;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_begin3",
      "syntax_highlighting_data": [
        {
          "text": "\n  // Point \n  to the third elementit = cars.begin() + 2;\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Point \n  to the third element",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "begin",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "End Example",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "end() points to one position after the last element in the vector (meaning it doesn't point to an actual element, but rather indicates that this is the end of the vector).",
      "html": "<p><code>end()</code> points to one position <strong>after</strong> the last \nelement in the vector (meaning it doesn't point to an actual element, but rather \nindicates that this is the end of the vector).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "So, to use end() to point to the last element in the cars vector (Mazda), you can use cars.end() - 1 :",
      "html": "<p>So, to use <code>end()</code> to point to \nthe last element in the cars vector (Mazda), you can use <code>cars.end() - 1</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_end",
        "syntaxHighlighting": [
          {
            "text": "\n  // Point \n  to the last elementit = cars.end() - 1;\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Point \n  to the last element",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "end",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Point\nto the last elementit = cars.end() - 1;",
      "syntax_highlighting": [
        {
          "text": "\n // Point \n  to the last elementit = cars.end() - 1;\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Point \n  to the last element",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "end",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Point \n  to the last element<br/></span>it = cars.<span class=\"javapropertycolor\" style=\"color:black\">end</span>() - <span class=\"javanumbercolor\" style=\"color:#905\">1</span>;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_end",
      "syntax_highlighting_data": [
        {
          "text": "\n  // Point \n  to the last elementit = cars.end() - 1;\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Point \n  to the last element",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "end",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Why do we say \"point\"?",
      "html": "<p><strong>Why do we say \"point\"? </strong> </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "pointers",
          "href": "https://www.w3schools.com/cpp_pointers.asp",
          "title": ""
        }
      ],
      "text": "Iterators are like \" pointers \" in that they \"point\" to elements in a data structure rather than returning values from them. They refer to a specific position, providing a way to access and modify the value when needed, without making a copy of it. For example:",
      "html": "<p>Iterators are like \"<a href=\"cpp_pointers.asp\">pointers</a>\" in that they \n  \"point\" to elements in a data structure rather than returning values from \n  them. They refer to a specific position, providing a way to access and modify \n  the value when needed, without making a copy of it. For example:\n</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_modify",
        "syntaxHighlighting": [
          {
            "text": "\n  // Point to the first element in the vectorit = cars.begin();// \n  Modify the value of the first element*it = \"Tesla\";// Volvo is now \n  Tesla\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Point to the first element in the vector",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "begin",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "// \n  Modify the value of the first element",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\"Tesla\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// Volvo is now \n  Tesla",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Point to the first element in the vectorit = cars.begin();//\nModify the value of the first element*it = \"Tesla\";// Volvo is now\nTesla",
      "syntax_highlighting": [
        {
          "text": "\n // Point to the first element in the vectorit = cars.begin();// \n  Modify the value of the first element*it = \"Tesla\";// Volvo is now \n  Tesla\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Point to the first element in the vector",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "begin",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "// \n  Modify the value of the first element",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\"Tesla\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// Volvo is now \n  Tesla",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Point to the first element in the vector<br/></span>it = cars.<span class=\"javapropertycolor\" style=\"color:black\">begin</span>();<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// \n  Modify the value of the first element<br/></span>*it = <span class=\"javastringcolor\" style=\"color:green\">\"Tesla\"</span>;<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Volvo is now \n  Tesla<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_modify",
      "syntax_highlighting_data": [
        {
          "text": "\n  // Point to the first element in the vectorit = cars.begin();// \n  Modify the value of the first element*it = \"Tesla\";// Volvo is now \n  Tesla\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Point to the first element in the vector",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "begin",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "// \n  Modify the value of the first element",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\"Tesla\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// Volvo is now \n  Tesla",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The auto Keyword",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "auto",
          "href": "https://www.w3schools.com/cpp_auto.asp",
          "title": "Read More About The auto Keyword"
        }
      ],
      "text": "In C++ 11 and later versions, you can use the auto keyword instead of explicitly declaring and specifying the type of the iterator.",
      "html": "<p>In C++ 11 and later versions, you can use the <a href=\"cpp_auto.asp\" title=\"Read More About The auto Keyword\"><code>auto</code></a> keyword instead of \nexplicitly declaring and specifying the type of the iterator. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The auto keyword allows the compiler to automatically determine the correct data type, which simplifies the code and makes it more readable:",
      "html": "<p>The <code>auto</code> keyword allows the compiler to \nautomatically determine the correct data type, which simplifies the code and \nmakes it more readable:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  vector<string>::iterator it = cars.begin();\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "begin",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "vector<string>::iterator it = cars.begin();",
      "syntax_highlighting": [
        {
          "text": "\n  vector<string>::iterator it = cars.begin();\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "begin",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  vector&lt;string&gt;::iterator it = cars.<span class=\"javapropertycolor\" style=\"color:black\">begin</span>();<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  vector<string>::iterator it = cars.begin();\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "begin",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_begin_auto",
        "syntaxHighlighting": [
          {
            "text": "\n  auto it = cars.begin();\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "begin",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "auto it = cars.begin();",
      "syntax_highlighting": [
        {
          "text": "\n  auto it = cars.begin();\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "begin",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  auto it = cars.<span class=\"javapropertycolor\" style=\"color:black\">begin</span>();<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_begin_auto",
      "syntax_highlighting_data": [
        {
          "text": "\n  auto it = cars.begin();\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "begin",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the example above, the compiler knows the type of it based on the return type of cars.begin() , which is vector <string>::iterator .",
      "html": "<p>In the example above, the compiler knows the type of <code>it</code> based on the return type of <code>cars.begin()</code>, which is <code>vector&lt;string&gt;::iterator</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The auto keyword works in for loops as well:",
      "html": "<p>The <code>auto</code> keyword works in <code>for</code> loops as well:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_auto",
        "syntaxHighlighting": [
          {
            "text": "\n  for (auto it = cars.begin(); it != cars.end(); ++it) {\u00a0 cout << *it \n  << \"\\n\";}\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "begin",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "end",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "for (auto it = cars.begin(); it != cars.end(); ++it) {\u00a0 cout << *it\n<< \"\\n\";}",
      "syntax_highlighting": [
        {
          "text": "\n for (auto it = cars.begin(); it != cars.end(); ++it) {\u00a0 cout << *it \n  << \"\\n\";}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "begin",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "end",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javakeywordcolor\" style=\"color:#005cc5\">for</span> (auto it = cars.<span class=\"javapropertycolor\" style=\"color:black\">begin</span>(); it != cars.<span class=\"javapropertycolor\" style=\"color:black\">end</span>(); ++it) {<br/>\u00a0 cout &lt;&lt; *it <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"\\n\"</span>;<br/>}<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_auto",
      "syntax_highlighting_data": [
        {
          "text": "\n  for (auto it = cars.begin(); it != cars.end(); ++it) {\u00a0 cout << *it \n  << \"\\n\";}\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "begin",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "end",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "For-Each Loop vs. Iterators",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can use a for-each loop to just loop through elements of a data structure, like this:",
      "html": "<p>You can use a <strong>for-each</strong> loop to just loop through elements of a data structure, like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_loop",
        "syntaxHighlighting": [
          {
            "text": "\n  // Create a vector called cars that will store stringsvector<string> cars = {\"Volvo\", \"BMW\", \n  \"Ford\", \"Mazda\"};// Print vector elements\n  for (string car : cars) {\u00a0 cout << car << \"\\n\";}\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Create a vector called cars that will store strings",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// Print vector elements",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\"\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create a vector called cars that will store stringsvector<string> cars = {\"Volvo\", \"BMW\",\n\"Ford\", \"Mazda\"};// Print vector elements\nfor (string car : cars) {\u00a0 cout << car << \"\\n\";}",
      "syntax_highlighting": [
        {
          "text": "\n // Create a vector called cars that will store stringsvector<string> cars = {\"Volvo\", \"BMW\", \n \"Ford\", \"Mazda\"};// Print vector elements\n for (string car : cars) {\u00a0 cout << car << \"\\n\";}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Create a vector called cars that will store strings",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// Print vector elements",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\"\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Create a vector called cars that will store strings<br/></span>vector&lt;string&gt; cars = {<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>};<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Print vector elements<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javakeywordcolor\" style=\"color:#005cc5\">for</span> (string car : cars) {<br/>\u00a0 cout &lt;&lt; car &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"\\n\"</span>;<br/>}<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_loop",
      "syntax_highlighting_data": [
        {
          "text": "\n  // Create a vector called cars that will store stringsvector<string> cars = {\"Volvo\", \"BMW\", \n  \"Ford\", \"Mazda\"};// Print vector elements\n  for (string car : cars) {\u00a0 cout << car << \"\\n\";}\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Create a vector called cars that will store strings",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// Print vector elements",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\"\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When you are just reading the elements, and don't need to modify them, the for-each loop is much simpler and cleaner than iterators.",
      "html": "<p>When you are just reading the elements, and don't need to modify them, the for-each loop is much simpler and cleaner than \niterators.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "However, when you need to add, modify, or remove elements during iteration , iterate in reverse, or skip elements, you should use iterators:",
      "html": "<p>However, when you need to add, modify, or remove elements <strong>during iteration</strong>, iterate in reverse, or skip elements, \nyou should use \niterators:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_loop2",
        "syntaxHighlighting": [
          {
            "text": "\n  // Create a vector called cars that will store stringsvector<string> cars \n  = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Loop through vector elements\n  for (auto it = cars.begin(); it != cars.end(); ) {\u00a0 if (*it == \"BMW\") \n  {\u00a0\u00a0\u00a0 it = cars.erase(it); // Remove the BMW element\u00a0 } else {\u00a0\u00a0\u00a0 ++it;\u00a0 }}// Print vector elementsfor (const \n  string& car : cars) {\u00a0 cout << car << \"\\n\";}\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Create a vector called cars that will store strings",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// Loop through vector elements",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "begin",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "end",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "erase",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "// Remove the BMW element",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "else",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "// Print vector elements",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create a vector called cars that will store stringsvector<string> cars\n= {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Loop through vector elements\nfor (auto it = cars.begin(); it != cars.end(); ) {\u00a0 if (*it == \"BMW\")\n{\u00a0\u00a0\u00a0 it = cars.erase(it); // Remove the BMW element\u00a0 } else {\u00a0\u00a0\u00a0 ++it;\u00a0 }}// Print vector elementsfor (const\nstring& car : cars) {\u00a0 cout << car << \"\\n\";}",
      "syntax_highlighting": [
        {
          "text": "\n // Create a vector called cars that will store stringsvector<string> cars \n  = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Loop through vector elements\n for (auto it = cars.begin(); it != cars.end(); ) {\u00a0 if (*it == \"BMW\") \n  {\u00a0\u00a0\u00a0 it = cars.erase(it); // Remove the BMW element\u00a0 } else {\u00a0\u00a0\u00a0 ++it;\u00a0 }}// Print vector elementsfor (const \n  string& car : cars) {\u00a0 cout << car << \"\\n\";}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Create a vector called cars that will store strings",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// Loop through vector elements",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "begin",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "end",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "erase",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "// Remove the BMW element",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "else",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "// Print vector elements",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Create a vector called cars that will store strings<br/></span>vector&lt;string&gt; cars <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  = {<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>};<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Loop through vector elements<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javakeywordcolor\" style=\"color:#005cc5\">for</span> (auto it = cars.<span class=\"javapropertycolor\" style=\"color:black\">begin</span>(); it != cars.<span class=\"javapropertycolor\" style=\"color:black\">end</span>(); ) {<br/>\u00a0 <span class=\"javakeywordcolor\" style=\"color:#005cc5\">if</span> (*it == <span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>) <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  {<br/>\u00a0\u00a0\u00a0 it = cars.<span class=\"javapropertycolor\" style=\"color:black\">erase</span>(it); <span class=\"commentcolor\" style=\"color:slategray\">// Remove the BMW element<br/></span>\u00a0 } <span class=\"javakeywordcolor\" style=\"color:#005cc5\">else</span> {<br/>\u00a0\u00a0\u00a0 ++it;<br/>\u00a0 }<br/>}<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Print vector elements<br/></span><span class=\"javakeywordcolor\" style=\"color:#005cc5\">for</span> (<span class=\"javakeywordcolor\" style=\"color:#005cc5\">const</span> <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  string&amp; car : cars) {<br/>\u00a0 cout &lt;&lt; car &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"\\n\"</span>;<br/>}<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_loop2",
      "syntax_highlighting_data": [
        {
          "text": "\n  // Create a vector called cars that will store stringsvector<string> cars \n  = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Loop through vector elements\n  for (auto it = cars.begin(); it != cars.end(); ) {\u00a0 if (*it == \"BMW\") \n  {\u00a0\u00a0\u00a0 it = cars.erase(it); // Remove the BMW element\u00a0 } else {\u00a0\u00a0\u00a0 ++it;\u00a0 }}// Print vector elementsfor (const \n  string& car : cars) {\u00a0 cout << car << \"\\n\";}\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Create a vector called cars that will store strings",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// Loop through vector elements",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "begin",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "end",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "erase",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "// Remove the BMW element",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "else",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "// Print vector elements",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Iterate in Reverse",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To iterate in reverse order, you can use rbegin() and rend() instead of begin() and end() :",
      "html": "<p>To iterate in reverse order, you can use <code>rbegin()</code> and <code>rend()</code> instead of <code>begin()</code> and <code>end()</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_reverse",
        "syntaxHighlighting": [
          {
            "text": "\n  // Iterate in reverse orderfor (auto it = cars.rbegin(); it != \n  cars.rend(); ++it) {\u00a0 cout << *it << \"\\n\";}\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Iterate in reverse order",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "rbegin",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "rend",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Iterate in reverse orderfor (auto it = cars.rbegin(); it !=\ncars.rend(); ++it) {\u00a0 cout << *it << \"\\n\";}",
      "syntax_highlighting": [
        {
          "text": "\n // Iterate in reverse orderfor (auto it = cars.rbegin(); it != \n  cars.rend(); ++it) {\u00a0 cout << *it << \"\\n\";}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Iterate in reverse order",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "rbegin",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "rend",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Iterate in reverse order<br/></span><span class=\"javakeywordcolor\" style=\"color:#005cc5\">for</span> (auto it = cars.<span class=\"javapropertycolor\" style=\"color:black\">rbegin</span>(); it != <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  cars.<span class=\"javapropertycolor\" style=\"color:black\">rend</span>(); ++it) {<br/>\u00a0 cout &lt;&lt; *it &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"\\n\"</span>;<br/>}<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_reverse",
      "syntax_highlighting_data": [
        {
          "text": "\n  // Iterate in reverse orderfor (auto it = cars.rbegin(); it != \n  cars.rend(); ++it) {\u00a0 cout << *it << \"\\n\";}\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Iterate in reverse order",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "rbegin",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "rend",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Iterate Through other Data Structures",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Iterators are great for code reusability since you can use the same syntax for iterating through vectors, lists, deques, sets and maps:",
      "html": "<p>Iterators are great for code reusability since you can use the same syntax \nfor iterating through vectors, lists, deques, sets and maps:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_list",
        "syntaxHighlighting": [
          {
            "text": "\n  // Create a list called cars that will store stringslist<string> cars = \n  {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Loop through the list with an \n  iteratorfor (auto it = cars.begin(); it != cars.end(); ++it) {\u00a0 \n  cout << *it << \"\\n\";}\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Create a list called cars that will store strings",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// Loop through the list with an \n  iterator",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "begin",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "end",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create a list called cars that will store stringslist<string> cars =\n{\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Loop through the list with an\niteratorfor (auto it = cars.begin(); it != cars.end(); ++it) {\ncout << *it << \"\\n\";}",
      "syntax_highlighting": [
        {
          "text": "\n // Create a list called cars that will store stringslist<string> cars = \n  {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Loop through the list with an \n  iteratorfor (auto it = cars.begin(); it != cars.end(); ++it) {\u00a0 \n  cout << *it << \"\\n\";}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Create a list called cars that will store strings",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// Loop through the list with an \n  iterator",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "begin",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "end",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Create a list called cars that will store strings<br/></span>list&lt;string&gt; cars = <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  {<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>};<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Loop through the list with an \n  iterator<br/></span><span class=\"javakeywordcolor\" style=\"color:#005cc5\">for</span> (auto it = cars.<span class=\"javapropertycolor\" style=\"color:black\">begin</span>(); it != cars.<span class=\"javapropertycolor\" style=\"color:black\">end</span>(); ++it) {<br/>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  cout &lt;&lt; *it &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"\\n\"</span>;<br/>}<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_list",
      "syntax_highlighting_data": [
        {
          "text": "\n  // Create a list called cars that will store stringslist<string> cars = \n  {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Loop through the list with an \n  iteratorfor (auto it = cars.begin(); it != cars.end(); ++it) {\u00a0 \n  cout << *it << \"\\n\";}\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Create a list called cars that will store strings",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// Loop through the list with an \n  iterator",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "begin",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "end",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_deque",
        "syntaxHighlighting": [
          {
            "text": "\n  // Create a deque called cars that will store stringsdeque<string> cars = \n  {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Loop through the deque with an \n  iteratorfor (auto it = cars.begin(); it != cars.end(); ++it) {\u00a0 \n  cout << *it << \"\\n\";}\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Create a deque called cars that will store strings",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// Loop through the deque with an \n  iterator",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "begin",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "end",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create a deque called cars that will store stringsdeque<string> cars =\n{\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Loop through the deque with an\niteratorfor (auto it = cars.begin(); it != cars.end(); ++it) {\ncout << *it << \"\\n\";}",
      "syntax_highlighting": [
        {
          "text": "\n // Create a deque called cars that will store stringsdeque<string> cars = \n  {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Loop through the deque with an \n  iteratorfor (auto it = cars.begin(); it != cars.end(); ++it) {\u00a0 \n  cout << *it << \"\\n\";}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Create a deque called cars that will store strings",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// Loop through the deque with an \n  iterator",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "begin",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "end",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Create a deque called cars that will store strings<br/></span>deque&lt;string&gt; cars = <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  {<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>};<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Loop through the deque with an \n  iterator<br/></span><span class=\"javakeywordcolor\" style=\"color:#005cc5\">for</span> (auto it = cars.<span class=\"javapropertycolor\" style=\"color:black\">begin</span>(); it != cars.<span class=\"javapropertycolor\" style=\"color:black\">end</span>(); ++it) {<br/>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  cout &lt;&lt; *it &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"\\n\"</span>;<br/>}<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_deque",
      "syntax_highlighting_data": [
        {
          "text": "\n  // Create a deque called cars that will store stringsdeque<string> cars = \n  {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Loop through the deque with an \n  iteratorfor (auto it = cars.begin(); it != cars.end(); ++it) {\u00a0 \n  cout << *it << \"\\n\";}\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Create a deque called cars that will store strings",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// Loop through the deque with an \n  iterator",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "begin",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "end",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_set",
        "syntaxHighlighting": [
          {
            "text": "\n  // Create a set called cars that will store stringsset<string> cars = \n  {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Loop through the set with an \n  iteratorfor (auto it = cars.begin(); it != cars.end(); ++it) {\u00a0 \n  cout << *it << \"\\n\";}\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Create a set called cars that will store strings",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// Loop through the set with an \n  iterator",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "begin",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "end",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create a set called cars that will store stringsset<string> cars =\n{\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Loop through the set with an\niteratorfor (auto it = cars.begin(); it != cars.end(); ++it) {\ncout << *it << \"\\n\";}",
      "syntax_highlighting": [
        {
          "text": "\n // Create a set called cars that will store stringsset<string> cars = \n  {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Loop through the set with an \n  iteratorfor (auto it = cars.begin(); it != cars.end(); ++it) {\u00a0 \n  cout << *it << \"\\n\";}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Create a set called cars that will store strings",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// Loop through the set with an \n  iterator",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "begin",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "end",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Create a set called cars that will store strings<br/></span>set&lt;string&gt; cars = <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  {<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>};<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Loop through the set with an \n  iterator<br/></span><span class=\"javakeywordcolor\" style=\"color:#005cc5\">for</span> (auto it = cars.<span class=\"javapropertycolor\" style=\"color:black\">begin</span>(); it != cars.<span class=\"javapropertycolor\" style=\"color:black\">end</span>(); ++it) {<br/>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  cout &lt;&lt; *it &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"\\n\"</span>;<br/>}<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_set",
      "syntax_highlighting_data": [
        {
          "text": "\n  // Create a set called cars that will store stringsset<string> cars = \n  {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};// Loop through the set with an \n  iteratorfor (auto it = cars.begin(); it != cars.end(); ++it) {\u00a0 \n  cout << *it << \"\\n\";}\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Create a set called cars that will store strings",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// Loop through the set with an \n  iterator",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "begin",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "end",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_map",
        "syntaxHighlighting": [
          {
            "text": "\n  // Create a map that will store strings and integersmap<string, int> \n  people = { {\"John\", 32}, {\"Adele\", 45}, {\"Bo\", 29} };// Loop through \n  the map with an iteratorfor (auto it = people.begin(); it != people.end(); \n  ++it) {\u00a0 cout << it->first << \" is: \" << it->second << \"\\n\";}\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Create a map that will store strings and integers",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"John\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "32",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Adele\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "45",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Bo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "29",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Loop through \n  the map with an iterator",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "begin",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "end",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\" is: \"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create a map that will store strings and integersmap<string, int>\npeople = { {\"John\", 32}, {\"Adele\", 45}, {\"Bo\", 29} };// Loop through\nthe map with an iteratorfor (auto it = people.begin(); it != people.end();\n++it) {\u00a0 cout << it->first << \" is: \" << it->second << \"\\n\";}",
      "syntax_highlighting": [
        {
          "text": "\n // Create a map that will store strings and integersmap<string, int> \n  people = { {\"John\", 32}, {\"Adele\", 45}, {\"Bo\", 29} };// Loop through \n  the map with an iteratorfor (auto it = people.begin(); it != people.end(); \n  ++it) {\u00a0 cout << it->first << \" is: \" << it->second << \"\\n\";}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Create a map that will store strings and integers",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"John\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "32",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Adele\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "45",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Bo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "29",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Loop through \n  the map with an iterator",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "begin",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "end",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\" is: \"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Create a map that will store strings and integers<br/></span>map&lt;string, <span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span>&gt; <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  people = { {<span class=\"javastringcolor\" style=\"color:green\">\"John\"</span>, <span class=\"javanumbercolor\" style=\"color:#905\">32</span>}, {<span class=\"javastringcolor\" style=\"color:green\">\"Adele\"</span>, <span class=\"javanumbercolor\" style=\"color:#905\">45</span>}, {<span class=\"javastringcolor\" style=\"color:green\">\"Bo\"</span>, <span class=\"javanumbercolor\" style=\"color:#905\">29</span>} };<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Loop through \n  the map with an iterator<br/></span><span class=\"javakeywordcolor\" style=\"color:#005cc5\">for</span> (auto it = people.<span class=\"javapropertycolor\" style=\"color:black\">begin</span>(); it != people.<span class=\"javapropertycolor\" style=\"color:black\">end</span>(); <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  ++it) {<br/>\u00a0 cout &lt;&lt; it-&gt;first &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\" is: \"</span> &lt;&lt; it-&gt;second &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"\\n\"</span>;<br/>}<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_map",
      "syntax_highlighting_data": [
        {
          "text": "\n  // Create a map that will store strings and integersmap<string, int> \n  people = { {\"John\", 32}, {\"Adele\", 45}, {\"Bo\", 29} };// Loop through \n  the map with an iteratorfor (auto it = people.begin(); it != people.end(); \n  ++it) {\u00a0 cout << it->first << \" is: \" << it->second << \"\\n\";}\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Create a map that will store strings and integers",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"John\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "32",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Adele\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "45",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Bo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "29",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Loop through \n  the map with an iterator",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "begin",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "end",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\" is: \"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h4"
      },
      "text": "Iterator Support",
      "level": "h4"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "vector",
          "href": "https://www.w3schools.com/cpp_vectors.asp",
          "title": ""
        },
        {
          "text": "list",
          "href": "https://www.w3schools.com/cpp_list.asp",
          "title": ""
        },
        {
          "text": "deque",
          "href": "https://www.w3schools.com/cpp_deque.asp",
          "title": ""
        },
        {
          "text": "map",
          "href": "https://www.w3schools.com/cpp_maps.asp",
          "title": ""
        },
        {
          "text": "set",
          "href": "https://www.w3schools.com/cpp_sets.asp",
          "title": ""
        },
        {
          "text": "stacks",
          "href": "https://www.w3schools.com/cpp_stacks.asp",
          "title": ""
        },
        {
          "text": "queues",
          "href": "https://www.w3schools.com/cpp_queues.asp",
          "title": ""
        }
      ],
      "text": "The examples above shows how to iterate through different data structures that support iterators ( vector , list , deque , map and set support iterators, while stacks and queues do not ).",
      "html": "<p>The examples above shows how to iterate through different data structures that support iterators (<a href=\"cpp_vectors.asp\">vector</a>, <a href=\"cpp_list.asp\">list</a>, <a href=\"cpp_deque.asp\">deque</a>, <a href=\"cpp_maps.asp\">map</a> and <a href=\"cpp_sets.asp\">set</a> support iterators, while <strong><a href=\"cpp_stacks.asp\">stacks</a> and <a href=\"cpp_queues.asp\">queues</a> \ndo not</strong>).</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Algorithms",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Another important feature of iterators is that they are used with different algorithm functions, such as sort() and find() (found in the <algorithm> library), to sort and search for elements in a data structure.",
      "html": "<p>Another important feature of iterators is that they are used with different \nalgorithm functions, such as <code>sort()</code> and <code>find()</code> \n(found in the <code>&lt;algorithm&gt;</code> library), to sort and \nsearch for elements in a data structure. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "For example, the sort() function takes iterators (typically returned by begin() and end() ) as parameters to sort elements in a data structure from the beginning to the end.",
      "html": "<p>For example, the <code>sort()</code> function takes \niterators (typically returned by <code>begin()</code> \nand <code>end()</code>) as parameters to sort elements in a data structure \nfrom the beginning to the end. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In this example, the elements are sorted alphabetically since they are strings:",
      "html": "<p>In this example, the elements are sorted alphabetically since they are \nstrings:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_sort",
        "syntaxHighlighting": [
          {
            "text": "\n  #include <iostream>#include <vector>#include <algorithm>\u00a0 \n  // Include the <algorithm> libraryusing namespace std;int main() {\u00a0 // Create a vector called cars \n  that will store strings\u00a0 vector<string> cars = {\"Volvo\", \"BMW\", \n  \"Ford\", \"Mazda\"};\u00a0 // Sort cars in alphabetical order\u00a0\n  sort(cars.begin(), cars.end());\u00a0 // Print cars in alphabetical order\u00a0 for (string car : cars) {\u00a0\u00a0\u00a0 \n  cout << car << \"\\n\";\u00a0 }\u00a0 return 0;}\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Include the <algorithm> library",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "// Create a vector called cars \n  that will store strings",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"Mazda\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "// Sort cars in alphabetical order",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "begin",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "end",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "// Print cars in alphabetical order",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "#include <iostream>#include <vector>#include <algorithm>\n// Include the <algorithm> libraryusing namespace std;int main() {\u00a0 // Create a vector called cars\nthat will store strings\u00a0 vector<string> cars = {\"Volvo\", \"BMW\",\n\"Ford\", \"Mazda\"};\u00a0 // Sort cars in alphabetical order\nsort(cars.begin(), cars.end());\u00a0 // Print cars in alphabetical order\u00a0 for (string car : cars) {\ncout << car << \"\\n\";\u00a0 }\u00a0 return 0;}",
      "syntax_highlighting": [
        {
          "text": "\n  #include <iostream>#include <vector>#include <algorithm>\u00a0 \n // Include the <algorithm> libraryusing namespace std;int main() {\u00a0 // Create a vector called cars \n  that will store strings\u00a0 vector<string> cars = {\"Volvo\", \"BMW\", \n \"Ford\", \"Mazda\"};\u00a0 // Sort cars in alphabetical order\u00a0\n sort(cars.begin(), cars.end());\u00a0 // Print cars in alphabetical order\u00a0 for (string car : cars) {\u00a0\u00a0\u00a0 \n  cout << car << \"\\n\";\u00a0 }\u00a0 return 0;}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Include the <algorithm> library",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "// Create a vector called cars \n  that will store strings",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"Mazda\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "// Sort cars in alphabetical order",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "begin",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "end",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "// Print cars in alphabetical order",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  #include &lt;iostream&gt;<br/>#include &lt;vector&gt;<br/><strong>#include &lt;algorithm&gt;</strong>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Include the &lt;algorithm&gt; library<br/></span>using namespace std;<br/><br/><span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> main() {<br/>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Create a vector called cars \n  that will store strings<br/></span>\u00a0 vector&lt;string&gt; cars = {<span class=\"javastringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javastringcolor\" style=\"color:green\">\"Ford\"</span>, <span class=\"javastringcolor\" style=\"color:green\">\"Mazda\"</span>};<br/><br/>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Sort cars in alphabetical order<br/></span>\u00a0<span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <strong>sort(cars.<span class=\"javapropertycolor\" style=\"color:black\">begin</span>(), cars.<span class=\"javapropertycolor\" style=\"color:black\">end</span>());</strong><br/><br/>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Print cars in alphabetical order<br/></span>\u00a0 <span class=\"javakeywordcolor\" style=\"color:#005cc5\">for</span> (string car : cars) {<br/>\u00a0\u00a0\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  cout &lt;&lt; car &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"\\n\"</span>;<br/>\u00a0 }<br/><br/>\u00a0 <span class=\"javakeywordcolor\" style=\"color:#005cc5\">return</span> <span class=\"javanumbercolor\" style=\"color:#905\">0</span>;<br/>}<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_sort",
      "syntax_highlighting_data": [
        {
          "text": "\n  #include <iostream>#include <vector>#include <algorithm>\u00a0 \n  // Include the <algorithm> libraryusing namespace std;int main() {\u00a0 // Create a vector called cars \n  that will store strings\u00a0 vector<string> cars = {\"Volvo\", \"BMW\", \n  \"Ford\", \"Mazda\"};\u00a0 // Sort cars in alphabetical order\u00a0\n  sort(cars.begin(), cars.end());\u00a0 // Print cars in alphabetical order\u00a0 for (string car : cars) {\u00a0\u00a0\u00a0 \n  cout << car << \"\\n\";\u00a0 }\u00a0 return 0;}\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Include the <algorithm> library",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "// Create a vector called cars \n  that will store strings",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"Mazda\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "// Sort cars in alphabetical order",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "begin",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "end",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "// Print cars in alphabetical order",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "And in this example, the elements are sorted numerically since they are integers:",
      "html": "<p>And in this example, the elements are sorted numerically since they are \nintegers:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_sort2",
        "syntaxHighlighting": [
          {
            "text": "\n  #include <iostream>#include <vector>#include <algorithm>using namespace std;int main() {\u00a0 \n  // Create a vector called numbers that will store integers\u00a0 \n  vector<int> numbers = {1, 7, 3, 5, 9, 2};\u00a0 // Sort numbers \n  numerically\u00a0 \n  sort(numbers.begin(), numbers.end());\u00a0 for (int num : numbers) {\u00a0\u00a0\u00a0 \n  cout << num << \"\\n\";\u00a0 }\u00a0 return 0;}\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Create a vector called numbers that will store integers",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "7",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "3",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "5",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "9",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Sort numbers \n  numerically",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "begin",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "end",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "#include <iostream>#include <vector>#include <algorithm>using namespace std;int main() {\n// Create a vector called numbers that will store integers\nvector<int> numbers = {1, 7, 3, 5, 9, 2};\u00a0 // Sort numbers\nnumerically\nsort(numbers.begin(), numbers.end());\u00a0 for (int num : numbers) {\ncout << num << \"\\n\";\u00a0 }\u00a0 return 0;}",
      "syntax_highlighting": [
        {
          "text": "\n  #include <iostream>#include <vector>#include <algorithm>using namespace std;int main() {\u00a0 \n // Create a vector called numbers that will store integers\u00a0 \n  vector<int> numbers = {1, 7, 3, 5, 9, 2};\u00a0 // Sort numbers \n  numerically\u00a0 \n  sort(numbers.begin(), numbers.end());\u00a0 for (int num : numbers) {\u00a0\u00a0\u00a0 \n  cout << num << \"\\n\";\u00a0 }\u00a0 return 0;}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Create a vector called numbers that will store integers",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "7",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "3",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "5",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "9",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Sort numbers \n  numerically",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "begin",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "end",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  #include &lt;iostream&gt;<br/>#include &lt;vector&gt;<br/>#include &lt;algorithm&gt;<br/>using namespace std;<br/><br/><span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> main() {<br/>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Create a vector called numbers that will store integers<br/></span>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  vector&lt;<span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span>&gt; numbers = {<span class=\"javanumbercolor\" style=\"color:#905\">1</span>, <span class=\"javanumbercolor\" style=\"color:#905\">7</span>, <span class=\"javanumbercolor\" style=\"color:#905\">3</span>, <span class=\"javanumbercolor\" style=\"color:#905\">5</span>, <span class=\"javanumbercolor\" style=\"color:#905\">9</span>, <span class=\"javanumbercolor\" style=\"color:#905\">2</span>};<br/><br/>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Sort numbers \n  numerically<br/></span>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  sort(numbers.<span class=\"javapropertycolor\" style=\"color:black\">begin</span>(), numbers.<span class=\"javapropertycolor\" style=\"color:black\">end</span>());<br/><br/>\u00a0 <span class=\"javakeywordcolor\" style=\"color:#005cc5\">for</span> (<span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> num : numbers) {<br/>\u00a0\u00a0\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  cout &lt;&lt; num &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"\\n\"</span>;<br/>\u00a0 }<br/><br/>\u00a0 <span class=\"javakeywordcolor\" style=\"color:#005cc5\">return</span> <span class=\"javanumbercolor\" style=\"color:#905\">0</span>;<br/>}<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_sort2",
      "syntax_highlighting_data": [
        {
          "text": "\n  #include <iostream>#include <vector>#include <algorithm>using namespace std;int main() {\u00a0 \n  // Create a vector called numbers that will store integers\u00a0 \n  vector<int> numbers = {1, 7, 3, 5, 9, 2};\u00a0 // Sort numbers \n  numerically\u00a0 \n  sort(numbers.begin(), numbers.end());\u00a0 for (int num : numbers) {\u00a0\u00a0\u00a0 \n  cout << num << \"\\n\";\u00a0 }\u00a0 return 0;}\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Create a vector called numbers that will store integers",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "7",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "3",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "5",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "9",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Sort numbers \n  numerically",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "begin",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "end",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To reverse the order, you can use rbegin() and rend() instead of begin() and end() :",
      "html": "<p>To reverse the order, you can use <code>rbegin()</code> and <code>rend()</code> instead of <code>begin()</code> and <code>end()</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_sort3",
        "syntaxHighlighting": [
          {
            "text": "\n  #include <iostream>#include <vector>#include <algorithm>using namespace std;int main() {\u00a0 \n  // Create a vector called numbers that will store integers\u00a0 \n  vector<int> numbers = {1, 7, 3, 5, 9, 2};\u00a0 // Sort numbers \n  numerically in reverse order\u00a0 \n  sort(numbers.rbegin(), numbers.rend());\u00a0 for (int num : numbers) {\u00a0\u00a0\u00a0 \n  cout << num << \"\\n\";\u00a0 }\u00a0 return 0;}\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Create a vector called numbers that will store integers",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "7",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "3",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "5",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "9",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Sort numbers \n  numerically in reverse order",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "rbegin",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "rend",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "#include <iostream>#include <vector>#include <algorithm>using namespace std;int main() {\n// Create a vector called numbers that will store integers\nvector<int> numbers = {1, 7, 3, 5, 9, 2};\u00a0 // Sort numbers\nnumerically in reverse order\nsort(numbers.rbegin(), numbers.rend());\u00a0 for (int num : numbers) {\ncout << num << \"\\n\";\u00a0 }\u00a0 return 0;}",
      "syntax_highlighting": [
        {
          "text": "\n  #include <iostream>#include <vector>#include <algorithm>using namespace std;int main() {\u00a0 \n // Create a vector called numbers that will store integers\u00a0 \n  vector<int> numbers = {1, 7, 3, 5, 9, 2};\u00a0 // Sort numbers \n  numerically in reverse order\u00a0 \n  sort(numbers.rbegin(), numbers.rend());\u00a0 for (int num : numbers) {\u00a0\u00a0\u00a0 \n  cout << num << \"\\n\";\u00a0 }\u00a0 return 0;}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Create a vector called numbers that will store integers",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "7",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "3",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "5",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "9",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Sort numbers \n  numerically in reverse order",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "rbegin",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "rend",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  #include &lt;iostream&gt;<br/>#include &lt;vector&gt;<br/>#include &lt;algorithm&gt;<br/>using namespace std;<br/><br/><span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> main() {<br/>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Create a vector called numbers that will store integers<br/></span>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  vector&lt;<span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span>&gt; numbers = {<span class=\"javanumbercolor\" style=\"color:#905\">1</span>, <span class=\"javanumbercolor\" style=\"color:#905\">7</span>, <span class=\"javanumbercolor\" style=\"color:#905\">3</span>, <span class=\"javanumbercolor\" style=\"color:#905\">5</span>, <span class=\"javanumbercolor\" style=\"color:#905\">9</span>, <span class=\"javanumbercolor\" style=\"color:#905\">2</span>};<br/><br/>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Sort numbers \n  numerically in reverse order<br/></span>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  sort(numbers<strong>.<span class=\"javapropertycolor\" style=\"color:black\">rbegin</span>()</strong>, numbers<strong>.<span class=\"javapropertycolor\" style=\"color:black\">rend</span>()</strong>);<br/><br/>\u00a0 <span class=\"javakeywordcolor\" style=\"color:#005cc5\">for</span> (<span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> num : numbers) {<br/>\u00a0\u00a0\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  cout &lt;&lt; num &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"\\n\"</span>;<br/>\u00a0 }<br/><br/>\u00a0 <span class=\"javakeywordcolor\" style=\"color:#005cc5\">return</span> <span class=\"javanumbercolor\" style=\"color:#905\">0</span>;<br/>}<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_iterator_sort3",
      "syntax_highlighting_data": [
        {
          "text": "\n  #include <iostream>#include <vector>#include <algorithm>using namespace std;int main() {\u00a0 \n  // Create a vector called numbers that will store integers\u00a0 \n  vector<int> numbers = {1, 7, 3, 5, 9, 2};\u00a0 // Sort numbers \n  numerically in reverse order\u00a0 \n  sort(numbers.rbegin(), numbers.rend());\u00a0 for (int num : numbers) {\u00a0\u00a0\u00a0 \n  cout << num << \"\\n\";\u00a0 }\u00a0 return 0;}\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Create a vector called numbers that will store integers",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "7",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "3",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "5",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "9",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Sort numbers \n  numerically in reverse order",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "rbegin",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "rend",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What will the following code output? vector <string> cars = {\"Volvo\", \"BMW\", \"Ford\"}; for (auto it = cars.begin(); it != cars.end(); ++it) { cout << *it << \" \"; }",
      "html": "<p>What will the following code output?<br/><code class=\"codeblock\">vector&lt;string&gt; cars = {\"Volvo\", \"BMW\", \"Ford\"};<br/>for (auto it = cars.begin(); it != cars.end(); ++it) {<br/>\u00a0\u00a0cout &lt;&lt; *it &lt;&lt; \" \";<br/>}</code></p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "What will the following code output?vector<string> cars = {\"Volvo\", \"BMW\", \"Ford\"};for (auto it = cars.begin(); it != cars.end(); ++it) {\u00a0\u00a0cout << *it << \" \";}",
        "options": [
          {
            "value": "0",
            "text": "Volvo\nBMW\nFord"
          },
          {
            "value": "1",
            "text": "BMW\nFord\nVolvo"
          },
          {
            "value": "2",
            "text": "Ford\nBMW\nVolvo"
          },
          {
            "value": "3",
            "text": "Random order"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_iterators1"
      },
      "quiz_type": "quiz",
      "question": "What will the following code output?vector<string> cars = {\"Volvo\", \"BMW\", \"Ford\"};for (auto it = cars.begin(); it != cars.end(); ++it) {\u00a0\u00a0cout << *it << \" \";}",
      "options": [
        {
          "value": "0",
          "text": "Volvo\nBMW\nFord"
        },
        {
          "value": "1",
          "text": "BMW\nFord\nVolvo"
        },
        {
          "value": "2",
          "text": "Ford\nBMW\nVolvo"
        },
        {
          "value": "3",
          "text": "Random order"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_iterators1",
      "html": "<form action=\"exercise.asp?x=xrcise_iterators1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">Volvo\nBMW\nFord</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">BMW\nFord\nVolvo</label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\">Ford\nBMW\nVolvo</label></div><div class=\"quizoption\"><input id=\"quizoption3\" name=\"quizoption\" type=\"radio\" value=\"3\"/><label for=\"quizoption3\">Random order</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}