{
  "title": "C++ Keywords",
  "url": "https://www.w3schools.com/cpp/cpp_ref_keywords.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C++ Keywords",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "C++ Keywords",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A list of useful keywords in C++ can be found in the table below.",
      "html": "<p>A list of useful keywords in C++ can be found in the table below.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "javascript",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:20%\">Keyword</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>and</td>\n<td>An alternative way to write the logical <code class=\"w3-codespan\">&amp;&amp;</code> operator</td>\n</tr>\n<tr>\n<td>and_eq</td>\n<td>An alternative way to write the <code class=\"w3-codespan\">&amp;=</code> assignment operator</td>\n</tr>\n<tr>\n<td>bitand</td>\n<td>An alternative way to write the <code class=\"w3-codespan\">&amp;</code> bitwise operator</td>\n</tr>\n<tr>\n<td>bitor</td>\n<td>An alternative way to write the <code class=\"w3-codespan\">|</code> bitwise operator</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_bool.asp\">bool</a></td>\n<td>A data type that can only store true or false values</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_break.asp\">break</a></td>\n<td>Breaks out of a loop or a switch block</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_case.asp\">case</a></td>\n<td>Marks a block of code in switch statements</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_catch.asp\">catch</a></td>\n<td>Catches exceptions generated by try statements</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_char.asp\">char</a></td>\n<td>A data type that can store a single character</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_class.asp\">class</a></td>\n<td>Defines a class</td>\n</tr>\n<tr>\n<td>compl</td>\n<td>An alternative way to write the <code class=\"w3-codespan\">~</code> bitwise operator</td>\n</tr>\n<tr>\n<td>const</td>\n<td>Defines a variable or parameter as a constant (unchangeable) or specifies that a class method does not modify attributes of the class</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_continue.asp\">continue</a></td>\n<td>Continues to the next iteration of a loop</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_default.asp\">default</a></td>\n<td>Specifies the default block of code in a switch statement</td>\n</tr>\n<tr>\n<td>delete</td>\n<td>Frees dynamic memory</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_do.asp\">do</a></td>\n<td>Used together with while to create a do/while loop</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_double.asp\">double</a></td>\n<td>A data type that is usually 64 bits long which can store fractional numbers</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_else.asp\">else</a></td>\n<td>Used in conditional statements</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_enum.asp\">enum</a></td>\n<td>Declares an enumerated type</td>\n</tr>\n<tr>\n<td>false</td>\n<td>A boolean value equivalent to 0</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_float.asp\">float</a></td>\n<td>A data type that is usually 32 bits long which can store fractional numbers</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_for.asp\">for</a></td>\n<td>Creates a for loop</td>\n</tr>\n<tr>\n<td>friend</td>\n<td>Specifies classes and functions which have access to private and protected members</td>\n</tr>\n<tr>\n<td>goto</td>\n<td>Jumps to a line of code specified by a label</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_if.asp\">if</a></td>\n<td>Makes a conditional statement</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_int.asp\">int</a></td>\n<td>A data type that is usually 32 bits long which can store whole numbers</td>\n</tr>\n<tr>\n<td>long</td>\n<td>Ensures that an integer is at least 32 bits long (use <em>long long</em> to ensure 64 bits)</td>\n</tr>\n<tr>\n<td>namespace</td>\n<td>Declares a namespace</td>\n</tr>\n<tr>\n<td>new</td>\n<td>Reserves dynamic memory</td>\n</tr>\n<tr>\n<td>not</td>\n<td>An alternative way to write the logical <code class=\"w3-codespan\">!</code> operator</td>\n</tr>\n<tr>\n<td>not_eq</td>\n<td>An alternative way to write the <code class=\"w3-codespan\">!=</code> comparison operator</td>\n</tr>\n<tr>\n<td>or</td>\n<td>An alternative way to write the logical <code class=\"w3-codespan\">||</code> operator</td>\n</tr>\n<tr>\n<td>or_eq</td>\n<td>An alternative way to write the <code class=\"w3-codespan\">|=</code> assignment operator</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_private.asp\">private</a></td>\n<td>An access modifier which makes a member only accessible within the declared class</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_protected.asp\">protected</a></td>\n<td>An access modifier which makes a member only accessible within the declared class and its children</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_public.asp\">public</a></td>\n<td>An access modifier which makes a member accessible from anywhere</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_return.asp\">return</a></td>\n<td>Used to return a value from a function</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_short.asp\">short</a></td>\n<td>Reduces the size of an integer to 16 bits</td>\n</tr>\n<tr>\n<td>signed</td>\n<td>Specifies that an <code class=\"w3-codespan\">int</code> or <code class=\"w3-codespan\">char</code> can represent positive and negative values (this is the default so the keyword is not usually necessary)</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_sizeof.asp\">sizeof</a></td>\n<td>An operator that returns the amount of memory occupied by a variable or data type</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_static.asp\">static</a></td>\n<td>\n      Specifies that an attribute or method belongs to the class itself instead of instances of the class<br/>\n      Specifies that a variable in a function keeps its value after the function ends\n    </td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_struct.asp\">struct</a></td>\n<td>\n      Defines a structure\n    </td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_switch.asp\">switch</a></td>\n<td>\n      Selects one of many code blocks to be executed\n    </td>\n</tr>\n<tr>\n<td>template</td>\n<td>\n      Declares a template class or template function\n    </td>\n</tr>\n<tr>\n<td>this</td>\n<td>\n      A variable that is available inside class methods and constructors which contians a pointer to a class instance\n    </td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_throw.asp\">throw</a></td>\n<td>\n      Creates a custom error which can be caught by a try...catch statement\n    </td>\n</tr>\n<tr>\n<td>true</td>\n<td>A boolean value equivalent to 1</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_try.asp\">try</a></td>\n<td>Creates a try...catch statement</td>\n</tr>\n<tr>\n<td>typedef</td>\n<td>Defines a custom data type</td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_unsigned.asp\">unsigned</a></td>\n<td>Specifies that an <code class=\"w3-codespan\">int</code> or <code class=\"w3-codespan\">char</code> should only represent positive values which allows for storing numbers up to twice as large</td>\n</tr>\n<tr>\n<td>using</td>\n<td>\n      Allows variables and functions from a namespace to be used without the namespace's prefix\n    </td>\n</tr>\n<tr>\n<td>virtual</td>\n<td>\n      Specifies that a class method is virtual\n    </td>\n</tr>\n<tr>\n<td>void</td>\n<td>\n      Indicates a function that does not return a value or specifies a pointer to a data with an unspecified type\n    </td>\n</tr>\n<tr>\n<td><a href=\"ref_keyword_while.asp\">while</a></td>\n<td>\n      Creates a while loop\n    </td>\n</tr>\n<tr>\n<td>xor</td>\n<td>An alternative way to write the <code class=\"w3-codespan\">^</code> bitwise operator</td>\n</tr>\n<tr>\n<td>xor_eq</td>\n<td>An alternative way to write the <code class=\"w3-codespan\">^=</code> assignment operator</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    }
  ]
}