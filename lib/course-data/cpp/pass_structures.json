{
  "title": "C++ Pass Structures to a Function",
  "url": "https://www.w3schools.com/cpp/cpp_function_structures.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C++ Pass Structures to a Function",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Pass Structure to a Function",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also pass a structure to a function.",
      "html": "<p>You can also pass a structure to a function.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This is useful when you want to work with grouped data inside a function:",
      "html": "<p>This is useful when you want to \nwork with grouped data inside a function:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_functions_structs",
        "syntaxHighlighting": [
          {
            "text": "\n    struct Car {\u00a0 string brand;\u00a0 int year;};void myFunction(Car \n    c) {\u00a0 cout << \"Brand: \" << c.brand << \", Year: \" << c.year << \"\\n\";\n    }\n    int main() {\u00a0 Car myCar = {\"Toyota\", 2020};\u00a0 \n    myFunction(myCar);\u00a0 return 0;} ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "void",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Brand: \"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "brand",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\", Year: \"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "year",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\"\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\"Toyota\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "2020",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "struct Car {\u00a0 string brand;\u00a0 int year;};void myFunction(Car\nc) {\u00a0 cout << \"Brand: \" << c.brand << \", Year: \" << c.year << \"\\n\";\n}\nint main() {\u00a0 Car myCar = {\"Toyota\", 2020};\nmyFunction(myCar);\u00a0 return 0;}",
      "syntax_highlighting": [
        {
          "text": "\n    struct Car {\u00a0 string brand;\u00a0 int year;};void myFunction(Car \n    c) {\u00a0 cout << \"Brand: \" << c.brand << \", Year: \" << c.year << \"\\n\";\n    }\n int main() {\u00a0 Car myCar = {\"Toyota\", 2020};\u00a0 \n    myFunction(myCar);\u00a0 return 0;} ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "void",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Brand: \"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "brand",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\", Year: \"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "year",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\"\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\"Toyota\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "2020",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>    struct Car {<br/>\u00a0 string brand;<br/>\u00a0 <span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> year;<br/>};<br/><br/><span class=\"javakeywordcolor\" style=\"color:#005cc5\">void</span> myFunction(Car <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>    c) {<br/>\u00a0 cout &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"Brand: \"</span> &lt;&lt; c.<span class=\"javapropertycolor\" style=\"color:black\">brand</span> &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\", Year: \"</span> &lt;&lt; c.<span class=\"javapropertycolor\" style=\"color:black\">year</span> &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"\\n\"</span>;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>    }<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <br/><span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> main() {<br/>\u00a0 Car myCar = {<span class=\"javastringcolor\" style=\"color:green\">\"Toyota\"</span>, <span class=\"javanumbercolor\" style=\"color:#905\">2020</span>};<br/>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>    myFunction(myCar);<br/>\u00a0 <span class=\"javakeywordcolor\" style=\"color:#005cc5\">return</span> <span class=\"javanumbercolor\" style=\"color:#905\">0</span>;<br/>} </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_functions_structs",
      "syntax_highlighting_data": [
        {
          "text": "\n    struct Car {\u00a0 string brand;\u00a0 int year;};void myFunction(Car \n    c) {\u00a0 cout << \"Brand: \" << c.brand << \", Year: \" << c.year << \"\\n\";\n    }\n    int main() {\u00a0 Car myCar = {\"Toyota\", 2020};\u00a0 \n    myFunction(myCar);\u00a0 return 0;} ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "void",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Brand: \"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "brand",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\", Year: \"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "year",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\"\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\"Toyota\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "2020",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: Since the structure is passed by value, the function gets a copy of the structure.",
      "html": "<p><strong>Note:</strong> Since the structure is passed by value, the function \ngets a copy of the structure.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This means that the original data is not changed.",
      "html": "<p>This means that the original data is not changed.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Pass by Reference",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also pass a structure by reference, using & .",
      "html": "<p>You can also pass a structure by reference, using <code>&amp;</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This allows the function to modify the original data:",
      "html": "<p>This allows the function to modify the original data:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_functions_structs2",
        "syntaxHighlighting": [
          {
            "text": "\n    struct Car {\u00a0 string brand;\u00a0 int year;};void updateYear(Car& c) {\u00a0 \n    c.year++;}\n    int main() {\u00a0 Car myCar = {\"Toyota\", 2020};\u00a0 \n    updateYear(myCar);\u00a0 cout << \"The \" << myCar.brand << \" is now from \n    year \" << myCar.year << \".\\n\";\u00a0 return 0;} ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "void",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "year",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\"Toyota\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "2020",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"The \"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "brand",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\" is now from \n    year \"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "year",
            "color": "rgb(0, 0, 0)",
            "class": "javapropertycolor"
          },
          {
            "text": "\".\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "struct Car {\u00a0 string brand;\u00a0 int year;};void updateYear(Car& c) {\nc.year++;}\nint main() {\u00a0 Car myCar = {\"Toyota\", 2020};\nupdateYear(myCar);\u00a0 cout << \"The \" << myCar.brand << \" is now from\nyear \" << myCar.year << \".\\n\";\u00a0 return 0;}",
      "syntax_highlighting": [
        {
          "text": "\n    struct Car {\u00a0 string brand;\u00a0 int year;};void updateYear(Car& c) {\u00a0 \n    c.year++;}\n int main() {\u00a0 Car myCar = {\"Toyota\", 2020};\u00a0 \n    updateYear(myCar);\u00a0 cout << \"The \" << myCar.brand << \" is now from \n    year \" << myCar.year << \".\\n\";\u00a0 return 0;} ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "void",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "year",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\"Toyota\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "2020",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"The \"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "brand",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\" is now from \n    year \"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "year",
          "color": "black",
          "class": [
            "javapropertycolor"
          ]
        },
        {
          "text": "\".\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>    struct Car {<br/>\u00a0 string brand;<br/>\u00a0 <span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> year;<br/>};<br/><br/><span class=\"javakeywordcolor\" style=\"color:#005cc5\">void</span> updateYear(Car&amp; c) {<br/>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>    c.<span class=\"javapropertycolor\" style=\"color:black\">year</span>++;<br/>}<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <br/><span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> main() {<br/>\u00a0 Car myCar = {<span class=\"javastringcolor\" style=\"color:green\">\"Toyota\"</span>, <span class=\"javanumbercolor\" style=\"color:#905\">2020</span>};<br/>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>    updateYear(myCar);<br/>\u00a0 cout &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"The \"</span> &lt;&lt; myCar.<span class=\"javapropertycolor\" style=\"color:black\">brand</span> &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\" is now from \n    year \"</span> &lt;&lt; myCar.<span class=\"javapropertycolor\" style=\"color:black\">year</span> &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\".\\n\"</span>;<br/>\u00a0 <span class=\"javakeywordcolor\" style=\"color:#005cc5\">return</span> <span class=\"javanumbercolor\" style=\"color:#905\">0</span>;<br/>} </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_functions_structs2",
      "syntax_highlighting_data": [
        {
          "text": "\n    struct Car {\u00a0 string brand;\u00a0 int year;};void updateYear(Car& c) {\u00a0 \n    c.year++;}\n    int main() {\u00a0 Car myCar = {\"Toyota\", 2020};\u00a0 \n    updateYear(myCar);\u00a0 cout << \"The \" << myCar.brand << \" is now from \n    year \" << myCar.year << \".\\n\";\u00a0 return 0;} ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "void",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "year",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\"Toyota\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "2020",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"The \"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "brand",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\" is now from \n    year \"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "year",
          "color": "rgb(0, 0, 0)",
          "class": "javapropertycolor"
        },
        {
          "text": "\".\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Tip: Use reference if you want the function to change the structure's data, or to avoid copying large structures.",
      "html": "<p><strong>Tip:</strong> Use reference if you want the function to change the structure's data, or to avoid copying large structures.</p>"
    }
  ]
}