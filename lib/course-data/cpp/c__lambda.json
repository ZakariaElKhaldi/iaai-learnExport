{
  "title": "C++ Lambda Functions",
  "url": "https://www.w3schools.com/cpp/cpp_functions_lambda.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C++ Lambda Functions",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Lambda Functions",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A lambda function is a small, anonymous function you can write directly in your code. It's useful when you need a quick function without naming it or declaring it separately.",
      "html": "<p>A <b>lambda function</b> is a small, anonymous function you can write directly in your code. It's useful when you need a quick function without naming it or declaring it separately.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Think of it as a \"mini function on the fly.\"",
      "html": "<p>Think of it as a \"mini function on the fly.\"</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate",
          "cppHigh"
        ],
        "isNotranslate": true
      },
      "code": "[] () { };",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate cppHigh\">\n[<em>capture</em>] (<em>parameters</em>) { <em>code </em>};\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "cppHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate",
        "cppHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Don't worry: We'll explain what capture means later. For now, let's just use an empty pair of brackets.",
      "html": "<p><b>Don't worry:</b> We'll explain what <code>capture</code> means later. For now, let's just use an empty pair of brackets.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Basic Lambda Example",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Here, message holds a lambda function that prints a message to the screen:",
      "html": "<p>Here, <code>message</code> holds a lambda function that prints a message to the screen:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_lambda",
        "syntaxHighlighting": [
          {
            "text": "\nint main() {\n\u00a0\u00a0auto message = []() {\n\u00a0\u00a0\u00a0\u00a0cout << \"Hello \n  World!\\n\";\n\u00a0\u00a0};\n\u00a0\u00a0message();\n\u00a0\u00a0return 0;\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Hello \n  World!\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "int main() {\nauto message = []() {\ncout << \"Hello\nWorld!\\n\";\n};\nmessage();\nreturn 0;\n}",
      "syntax_highlighting": [
        {
          "text": "\nint main() {\n\u00a0\u00a0auto message = []() {\n\u00a0\u00a0\u00a0\u00a0cout << \"Hello \n  World!\\n\";\n\u00a0\u00a0};\n\u00a0\u00a0message();\n\u00a0\u00a0return 0;\n}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Hello \n  World!\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\">\n<span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> main() {<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0auto message = []() {<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0\u00a0\u00a0cout &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"Hello \n  World!\\n\"</span>;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0};<br/><br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0message();<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"javakeywordcolor\" style=\"color:#005cc5\">return</span> <span class=\"javanumbercolor\" style=\"color:#905\">0</span>;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>}<span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_lambda",
      "syntax_highlighting_data": [
        {
          "text": "\nint main() {\n\u00a0\u00a0auto message = []() {\n\u00a0\u00a0\u00a0\u00a0cout << \"Hello \n  World!\\n\";\n\u00a0\u00a0};\n\u00a0\u00a0message();\n\u00a0\u00a0return 0;\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Hello \n  World!\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Lambda with Parameters",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can pass values into a lambda just like a regular function:",
      "html": "<p>You can pass values into a lambda just like a regular function:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_lambda_param",
        "syntaxHighlighting": [
          {
            "text": "\n#include <iostream>\nusing namespace std;\nint main() {\n\u00a0\u00a0auto add = [](int a, int b) {\n\u00a0\u00a0\u00a0\u00a0return a + b;\n\u00a0\u00a0};\n\u00a0\u00a0cout << add(3, 4);\n\u00a0\u00a0return 0;\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "3",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "#include <iostream>\nusing namespace std;\nint main() {\nauto add = [](int a, int b) {\nreturn a + b;\n};\ncout << add(3, 4);\nreturn 0;\n}",
      "syntax_highlighting": [
        {
          "text": "\n#include <iostream>\nusing namespace std;\nint main() {\n\u00a0\u00a0auto add = [](int a, int b) {\n\u00a0\u00a0\u00a0\u00a0return a + b;\n\u00a0\u00a0};\n\u00a0\u00a0cout << add(3, 4);\n\u00a0\u00a0return 0;\n}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "3",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\">\n#include &lt;iostream&gt;<br/>\nusing namespace std;<br/><br/>\n<span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> main() {<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0auto add = [](<span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> a, <span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> b) {<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0\u00a0\u00a0<span class=\"javakeywordcolor\" style=\"color:#005cc5\">return</span> a + b;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0};<br/><br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0cout &lt;&lt; add(<span class=\"javanumbercolor\" style=\"color:#905\">3</span>, <span class=\"javanumbercolor\" style=\"color:#905\">4</span>);<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"javakeywordcolor\" style=\"color:#005cc5\">return</span> <span class=\"javanumbercolor\" style=\"color:#905\">0</span>;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>}<span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_lambda_param",
      "syntax_highlighting_data": [
        {
          "text": "\n#include <iostream>\nusing namespace std;\nint main() {\n\u00a0\u00a0auto add = [](int a, int b) {\n\u00a0\u00a0\u00a0\u00a0return a + b;\n\u00a0\u00a0};\n\u00a0\u00a0cout << add(3, 4);\n\u00a0\u00a0return 0;\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "3",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Passing Lambdas to Functions",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also pass a lambda function as an argument to another function.",
      "html": "<p>You can also <b>pass a lambda function as an argument</b> to another function.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This is useful when you want to tell a function what to do , not just what data to use.",
      "html": "<p>This is useful when you want to tell a function <b>what to do</b>, not just what data to use.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the example below, we send a small lambda function to another function, which then runs it twice:",
      "html": "<p>In the example below, we send a small lambda function to another function, which then runs it twice:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_lambda_pass",
        "syntaxHighlighting": [
          {
            "text": "\n  #include <iostream>#include <functional> // Needed for std::function\n  using namespace std;// A function that takes another function as \n  parametervoid myFunction(function<void()> func) {\u00a0 func();\u00a0 \n  func();}\n  int main() {\u00a0 auto message = []() {\u00a0\u00a0\u00a0 cout << \n  \"Hello World!\\n\";\u00a0 };\u00a0 myFunction(message);\u00a0 \n  return 0;} ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Needed for std::function",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// A function that takes another function as \n  parameter",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "void",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "void",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Hello World!\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "#include <iostream>#include <functional> // Needed for std::function\nusing namespace std;// A function that takes another function as\nparametervoid myFunction(function<void()> func) {\u00a0 func();\nfunc();}\nint main() {\u00a0 auto message = []() {\u00a0\u00a0\u00a0 cout <<\n\"Hello World!\\n\";\u00a0 };\u00a0 myFunction(message);\nreturn 0;}",
      "syntax_highlighting": [
        {
          "text": "\n  #include <iostream>#include <functional> // Needed for std::function\n  using namespace std;// A function that takes another function as \n  parametervoid myFunction(function<void()> func) {\u00a0 func();\u00a0 \n  func();}\n int main() {\u00a0 auto message = []() {\u00a0\u00a0\u00a0 cout << \n \"Hello World!\\n\";\u00a0 };\u00a0 myFunction(message);\u00a0 \n return 0;} ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Needed for std::function",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// A function that takes another function as \n  parameter",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "void",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "void",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Hello World!\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  #include &lt;iostream&gt;<br/>#include &lt;functional&gt; <span class=\"commentcolor\" style=\"color:slategray\">// Needed for std::function<br/></span><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  using namespace std;<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// A function that takes another function as \n  parameter<br/></span><span class=\"javakeywordcolor\" style=\"color:#005cc5\">void</span> myFunction(<span class=\"javakeywordcolor\" style=\"color:#005cc5\">function</span>&lt;<span class=\"javakeywordcolor\" style=\"color:#005cc5\">void</span>()&gt; func) {<br/>\u00a0 func();<br/>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  func();<br/>}<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <br/><span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> main() {<br/>\u00a0 auto message = []() {<br/>\u00a0\u00a0\u00a0 cout &lt;&lt; <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javastringcolor\" style=\"color:green\">\"Hello World!\\n\"</span>;<br/>\u00a0 };<br/><br/>\u00a0 myFunction(message);<br/>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javakeywordcolor\" style=\"color:#005cc5\">return</span> <span class=\"javanumbercolor\" style=\"color:#905\">0</span>;<br/>} </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_lambda_pass",
      "syntax_highlighting_data": [
        {
          "text": "\n  #include <iostream>#include <functional> // Needed for std::function\n  using namespace std;// A function that takes another function as \n  parametervoid myFunction(function<void()> func) {\u00a0 func();\u00a0 \n  func();}\n  int main() {\u00a0 auto message = []() {\u00a0\u00a0\u00a0 cout << \n  \"Hello World!\\n\";\u00a0 };\u00a0 myFunction(message);\u00a0 \n  return 0;} ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Needed for std::function",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// A function that takes another function as \n  parameter",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "void",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "void",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Hello World!\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note that you must include the <functional> library for this example to work.",
      "html": "<p>Note that you must include the <code>&lt;functional&gt;</code> library for this example to work.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Using Lambdas in Loops",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can define and use a lambda function inside a loop, which are great for quick actions:",
      "html": "<p>You can define and use a lambda function inside a loop, which are great for \nquick actions:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_lambda_loop",
        "syntaxHighlighting": [
          {
            "text": "\n#include <iostream>\nusing namespace std;\nint main() {\n\u00a0\u00a0for (int i = 1; i <= 3; i++) {\n\u00a0\u00a0\u00a0\u00a0auto show = [i]() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout << \"Number: \" << i << \"\\n\";\n\u00a0\u00a0\u00a0\u00a0};\n\u00a0\u00a0\u00a0\u00a0show();\n\u00a0\u00a0}\n\u00a0\u00a0return 0;\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "3",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Number: \"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\"\\n\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "#include <iostream>\nusing namespace std;\nint main() {\nfor (int i = 1; i <= 3; i++) {\nauto show = [i]() {\ncout << \"Number: \" << i << \"\\n\";\n};\nshow();\n}\nreturn 0;\n}",
      "syntax_highlighting": [
        {
          "text": "\n#include <iostream>\nusing namespace std;\nint main() {\n\u00a0\u00a0for (int i = 1; i <= 3; i++) {\n\u00a0\u00a0\u00a0\u00a0auto show = [i]() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout << \"Number: \" << i << \"\\n\";\n\u00a0\u00a0\u00a0\u00a0};\n\u00a0\u00a0\u00a0\u00a0show();\n\u00a0\u00a0}\n\u00a0\u00a0return 0;\n}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "3",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Number: \"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\"\\n\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\">\n#include &lt;iostream&gt;<br/>\nusing namespace std;<br/><br/>\n<span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> main() {<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"javakeywordcolor\" style=\"color:#005cc5\">for</span> (<span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> i = <span class=\"javanumbercolor\" style=\"color:#905\">1</span>; i &lt;= <span class=\"javanumbercolor\" style=\"color:#905\">3</span>; i++) {<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0\u00a0\u00a0auto show = [i]() {<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"Number: \"</span> &lt;&lt; i &lt;&lt; <span class=\"javastringcolor\" style=\"color:green\">\"\\n\"</span>;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0\u00a0\u00a0};<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0\u00a0\u00a0show();<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0}<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"javakeywordcolor\" style=\"color:#005cc5\">return</span> <span class=\"javanumbercolor\" style=\"color:#905\">0</span>;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>}<span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_lambda_loop",
      "syntax_highlighting_data": [
        {
          "text": "\n#include <iostream>\nusing namespace std;\nint main() {\n\u00a0\u00a0for (int i = 1; i <= 3; i++) {\n\u00a0\u00a0\u00a0\u00a0auto show = [i]() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout << \"Number: \" << i << \"\\n\";\n\u00a0\u00a0\u00a0\u00a0};\n\u00a0\u00a0\u00a0\u00a0show();\n\u00a0\u00a0}\n\u00a0\u00a0return 0;\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "3",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Number: \"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\"\\n\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Capture Clause [] (Optional)",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can use the [ ] brackets to give a lambda access to variables outside of it.",
      "html": "<p>You can use the <code>[ ]</code> brackets to give a lambda access to variables outside of it.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This is called the capture clause .",
      "html": "<p>This is called the <b>capture clause</b>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In this example, the lambda captures the variable x by value (a copy):",
      "html": "<p>In this example, the lambda captures the variable <code>x</code> by value (a copy):</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_lambda_capture",
        "syntaxHighlighting": [
          {
            "text": "\nint main() {\n\u00a0\u00a0int x = 10;\n\u00a0\u00a0auto show = [x]() {\n\u00a0\u00a0\u00a0\u00a0cout << x;\n\u00a0\u00a0};\n\u00a0\u00a0show();\n\u00a0\u00a0return 0;\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "int main() {\nint x = 10;\nauto show = [x]() {\ncout << x;\n};\nshow();\nreturn 0;\n}",
      "syntax_highlighting": [
        {
          "text": "\nint main() {\n\u00a0\u00a0int x = 10;\n\u00a0\u00a0auto show = [x]() {\n\u00a0\u00a0\u00a0\u00a0cout << x;\n\u00a0\u00a0};\n\u00a0\u00a0show();\n\u00a0\u00a0return 0;\n}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\">\n<span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> main() {<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> x = <span class=\"javanumbercolor\" style=\"color:#905\">10</span>;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0auto show = [x]() {<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0\u00a0\u00a0cout &lt;&lt; x;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0};<br/><br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0show();<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"javakeywordcolor\" style=\"color:#005cc5\">return</span> <span class=\"javanumbercolor\" style=\"color:#905\">0</span>;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>}<span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_lambda_capture",
      "syntax_highlighting_data": [
        {
          "text": "\nint main() {\n\u00a0\u00a0int x = 10;\n\u00a0\u00a0auto show = [x]() {\n\u00a0\u00a0\u00a0\u00a0cout << x;\n\u00a0\u00a0};\n\u00a0\u00a0show();\n\u00a0\u00a0return 0;\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: The lambda uses a copy of x . If you change x after defining the lambda, it won't affect the value inside the lambda.",
      "html": "<p><b>Note:</b> The lambda uses a <b>copy</b> of <code>x</code>. If you change <code>x</code> after defining the lambda, it won't affect the value inside the lambda.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: You can also use [&] to capture by reference.",
      "html": "<p><b>Note:</b> You can also use <code>[&amp;]</code> to capture by reference.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Capture by Reference",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you want the lambda to use the latest value of a variable (not just a copy), you can use [&] to capture it by reference.",
      "html": "<p>If you want the lambda to use the <b>latest value</b> of a variable (not just a copy), you can use <code>[&amp;]</code> to capture it by reference.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This means the lambda will work with the original variable, not a separate copy:",
      "html": "<p>This means the lambda will work with the original variable, not a separate copy:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_lambda_capture2",
        "syntaxHighlighting": [
          {
            "text": "\nint main() {\n\u00a0\u00a0int x = 10;\n\u00a0\u00a0auto show = [&x]() {\n\u00a0\u00a0\u00a0\u00a0cout << x;\n\u00a0\u00a0};\n\u00a0\u00a0x = 20;\u00a0  // Change x after the lambda is created\n\u00a0\u00a0show();\n\u00a0\u00a0return 0;\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "20",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "// Change x after the lambda is created",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "int main() {\nint x = 10;\nauto show = [&x]() {\ncout << x;\n};\nx = 20;\u00a0  // Change x after the lambda is created\nshow();\nreturn 0;\n}",
      "syntax_highlighting": [
        {
          "text": "\nint main() {\n\u00a0\u00a0int x = 10;\n\u00a0\u00a0auto show = [&x]() {\n\u00a0\u00a0\u00a0\u00a0cout << x;\n\u00a0\u00a0};\n\u00a0\u00a0x = 20;\u00a0  // Change x after the lambda is created\n\u00a0\u00a0show();\n\u00a0\u00a0return 0;\n}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "20",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "// Change x after the lambda is created",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\">\n<span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> main() {<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> x = <span class=\"javanumbercolor\" style=\"color:#905\">10</span>;<br/><br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0auto show = [&amp;x]() {<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0\u00a0\u00a0cout &lt;&lt; x;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0};<br/><br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0x = <span class=\"javanumbercolor\" style=\"color:#905\">20</span>;\u00a0  <span class=\"commentcolor\" style=\"color:slategray\">// Change x after the lambda is created<br/></span><br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0show();<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"javakeywordcolor\" style=\"color:#005cc5\">return</span> <span class=\"javanumbercolor\" style=\"color:#905\">0</span>;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>}<span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/cpp/trycpp.asp?filename=demo_lambda_capture2",
      "syntax_highlighting_data": [
        {
          "text": "\nint main() {\n\u00a0\u00a0int x = 10;\n\u00a0\u00a0auto show = [&x]() {\n\u00a0\u00a0\u00a0\u00a0cout << x;\n\u00a0\u00a0};\n\u00a0\u00a0x = 20;\u00a0  // Change x after the lambda is created\n\u00a0\u00a0show();\n\u00a0\u00a0return 0;\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "20",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "// Change x after the lambda is created",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Why? The lambda sees the original x variable, so when you change x , the lambda uses the updated value.",
      "html": "<p><b>Why?</b> The lambda sees the original <code>x</code> variable, so when you change <code>x</code>, the lambda uses the updated value.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Regular Functions vs Lambda Functions",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Both regular functions and lambda functions let you group code and run it later, but they are used in slightly different situations.",
      "html": "<p>Both regular functions and lambda functions let you group code and run it later, but they are used in slightly different situations.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h4"
      },
      "text": "Use a regular function when:",
      "level": "h4"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h4"
      },
      "text": "Use a lambda function when:",
      "level": "h4"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Both of these examples do the same thing. They return the sum of two numbers:",
      "html": "<p>Both of these examples do the same thing. They return the sum of two numbers:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nint add(int a, int b) {\n\u00a0\u00a0return a + b;\n}\n   ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "int add(int a, int b) {\nreturn a + b;\n}",
      "syntax_highlighting": [
        {
          "text": "\nint add(int a, int b) {\n\u00a0\u00a0return a + b;\n}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\">\n<span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> add(<span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> a, <span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> b) {<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"javakeywordcolor\" style=\"color:#005cc5\">return</span> a + b;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>}<span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nint add(int a, int b) {\n\u00a0\u00a0return a + b;\n}\n   ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nauto add = [](int a, int b) {\n\u00a0\u00a0return a + b;\n};\n   ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "int",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "auto add = [](int a, int b) {\nreturn a + b;\n};",
      "syntax_highlighting": [
        {
          "text": "\nauto add = [](int a, int b) {\n\u00a0\u00a0return a + b;\n};\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "int",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\">\nauto add = [](<span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> a, <span class=\"javakeywordcolor\" style=\"color:#005cc5\">int</span> b) {<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"javakeywordcolor\" style=\"color:#005cc5\">return</span> a + b;<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>};<span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nauto add = [](int a, int b) {\n\u00a0\u00a0return a + b;\n};\n   ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "int",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: The lambda version is great when you don't need to reuse the function later. It's quick and works well inside blocks or as arguments to other functions.",
      "html": "<p><b>Note:</b> The lambda version is great when you don't need to reuse the function later. It's quick and works well inside blocks or as arguments to other functions.</p>"
    }
  ]
}