{
  "id": "d4c6dd2c-8898-4e84-91d8-1d1561acc4ff",
  "title": "jQuery Effects -Animation",
  "slug": "jquery-effects-animation",
  "metadata": {
    "description": "Learn about jQuery Effects -Animation with clear explanations and practical examples.",
    "keywords": [
      "c",
      "animate",
      "jquery",
      "example",
      "method",
      "slow",
      "function",
      "animations",
      "left",
      "button",
      "click"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnjQuery",
    "subcategory": "jQuery Animate"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "jQuery Effects -\nAnimation",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "With jQuery, you can create custom animations.\nStart Animation\njQuery\njQuery Animations - The animate() Method\nThe jQuery\nanimate()\nmethod is used to create custom animations.\nSyntax:\n$(\nselector\n).animate({\nparams\n}\n,speed,callback\n);\nThe required params parameter defines the CSS properties to be animated.\nThe optional speed parameter specifies the duration of the effect. It can take the following values: \"slow\", \"fast\", or \nmilliseconds.\nThe optional callback parameter is a function to be executed after the \nanimation completes.\nThe following example demonstrates a simple use of the\nanimate()\nmethod; it moves \na <div> element to the right, until it has reached a left property of 250px:\nExample\n$(\"button\").click(function(){\n$(\"div\").animate({left: '250px'});\n});\n\nBy default, all HTML elements have a static position, and cannot be moved.\nTo manipulate the position, remember to first set the CSS position property of the element to relative, fixed, or absolute!\njQuery animate() - Manipulate Multiple Properties\nNotice that multiple properties can be animated at the same time:\nExample\n$(\"button\").click(function(){\n$(\"div\").animate({\nleft: '250px',\nopacity: '0.5',\nheight: '150px',\nwidth: '150px'\n});\n});\n\nIs it possible to manipulate ALL CSS properties with the animate() method?\nYes, almost! However, there is one important thing to remember: all property \nnames must be camel-cased when used with the animate() method: You will need to \nwrite paddingLeft instead of padding-left, marginRight instead of margin-right, and so on.\nAlso, color animation is not included in the core jQuery library.\nIf you want to animate color, you need to download the\nColor \nAnimations plugin\nfrom jQuery.com.\njQuery animate() - Using Relative Values\nIt is also possible to define relative values (the value is then relative to \nthe element's current value). This is done by putting += or -= in front of the \nvalue:\nExample\n$(\"button\").click(function(){\n$(\"div\").animate({\nleft: '250px',\nheight: '+=150px',\nwidth: '+=150px'\n});\n});\n\njQuery animate() - Using Pre-defined Values\nYou can even specify a property's animation value as \"\nshow\n\", \"\nhide\n\", or \"\ntoggle\n\":\nExample\n$(\"button\").click(function(){\n$(\"div\").animate({\nheight: 'toggle'\n});\n});\n\njQuery animate() - Uses Queue Functionality\nBy default, jQuery comes with queue functionality for animations.\nThis means that if you write multiple\nanimate()\ncalls after each other, \njQuery creates an \"internal\" queue with these method calls. Then it runs the \nanimate calls ONE by ONE.\nSo, if you want to perform different animations after each other, we take \nadvantage of the queue functionality:\nExample 1\n$(\"button\").click(function(){\nvar div = $(\"div\");\ndiv.animate({height: '300px', opacity: '0.4'}, \"slow\");\ndiv.animate({width: '300px', opacity: '0.8'}, \"slow\");\ndiv.animate({height: '100px', opacity: '0.4'}, \"slow\");\ndiv.animate({width: '100px', opacity: '0.8'}, \"slow\");\n});\n\nThe example below first moves the\n<div>\nelement to the right, and then increases the font size of the text:\nExample 2\n$(\"button\").click(function(){\nvar div = $(\"div\");\ndiv.animate({left: '100px'}, \"slow\");\ndiv.animate({fontSize: '3em'}, \"slow\");\n});\n\njQuery Exercises\nTest Yourself With Exercises\nExercise:\nUse the\nanimate()\nmethod to move a <div> element 250 pixels to the right.\n$(\"div\").animate({\n: '\n'});\nSubmit Answer \u00bb\nStart the Exercise\njQuery Effects Reference\nFor a complete overview of all jQuery effects, please go to our\njQuery Effect Reference\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "$(\"button\").click(function(){\n$(\"div\").animate({left: '250px'});\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "$(\"button\").click(function(){\n$(\"div\").animate({\nleft: '250px',\nopacity: '0.5',\nheight: '150px',\nwidth: '150px'\n});\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "$(\"button\").click(function(){\n$(\"div\").animate({\nleft: '250px',\nheight: '+=150px',\nwidth: '+=150px'\n});\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "$(\"button\").click(function(){\n$(\"div\").animate({\nheight: 'toggle'\n});\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example 1",
      "content": "",
      "order": 7,
      "code": "$(\"button\").click(function(){\nvar div = $(\"div\");\ndiv.animate({height: '300px', opacity: '0.4'}, \"slow\");\ndiv.animate({width: '300px', opacity: '0.8'}, \"slow\");\ndiv.animate({height: '100px', opacity: '0.4'}, \"slow\");\ndiv.animate({width: '100px', opacity: '0.8'}, \"slow\");\n});",
      "language": "javascript",
      "explanation": "Example of example 1"
    },
    {
      "type": "code_example",
      "title": "Example 2",
      "content": "",
      "order": 8,
      "code": "$(\"button\").click(function(){\nvar div = $(\"div\");\ndiv.animate({left: '100px'}, \"slow\");\ndiv.animate({fontSize: '3em'}, \"slow\");\n});",
      "language": "javascript",
      "explanation": "Example of example 2"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "$(\"button\").click(function(){\n$(\"div\").animate({left: '250px'});\n# TODO: Complete this line",
      "solution": "$(\"button\").click(function(){\n$(\"div\").animate({left: '250px'});\n});"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "$(\"button\").click(function(){\n$(\"div\").animate({\nleft: '250px',\nopacity: '0.5',\nheight: '150px',\nwidth: '150px'\n# TODO: Complete this line\n});",
      "solution": "$(\"button\").click(function(){\n$(\"div\").animate({\nleft: '250px',\nopacity: '0.5',\nheight: '150px',\nwidth: '150px'\n});\n});"
    }
  ],
  "related_topics": [
    {
      "id": "ff44f5d6-330e-4d2b-bbf2-aa1796049d83",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "e84719b2-6826-4e4f-9f8b-8222fa76c251",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "61342f37-bcd8-4819-a974-7becbf392375",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is method?",
      "options": [
        "None of the above.",
        "None of the above.",
        "a function to be executed after the \nanimation completes",
        "used to create custom animations"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of method is 'used to create custom animations'."
    },
    {
      "question": "What is The optional callback parameter?",
      "options": [
        "used to create custom animations",
        "None of the above.",
        "None of the above.",
        "a function to be executed after the \nanimation completes"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of The optional callback parameter is 'a function to be executed after the \nanimation completes'."
    }
  ],
  "summary": "This tutorial covers jQuery Effects -Animation concepts and techniques. You'll learn how to use jQuery Effects -Animation effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of jQuery Effects -Animation and how to apply it in your projects."
}