{
  "id": "0708ac39-45d5-45ee-9ecb-90d8e73812cc",
  "title": "jQuery Traversing -Descendants",
  "slug": "jquery-traversing-descendants",
  "metadata": {
    "description": "Learn about jQuery Traversing -Descendants with clear explanations and practical examples.",
    "keywords": [
      "c",
      "jquery",
      "children",
      "example",
      "traversing",
      "find",
      "method",
      "returns",
      "element",
      "elements",
      "descendants"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnjQuery",
    "subcategory": "jQuery Descendants"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "jQuery Traversing -\nDescendants",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "With jQuery you can traverse down the DOM tree to \nfind descendants of an element.\nA descendant is a child, grandchild, great-grandchild, and so \non.\nTraversing Down the DOM Tree\nTwo useful jQuery methods for traversing down the DOM tree are:\nchildren()\nfind()\njQuery children() Method\nThe\nchildren()\nmethod returns all direct children of the selected element.\nThis method only traverses a single level down the DOM tree.\nThe following example returns all elements that are direct children of each\n<div>\nelements:\nExample\n$(document).ready(function(){\n$(\"div\").children();\n});\n\nYou can also use an optional parameter to filter the search for children.\nThe following example returns all\n<p>\nelements with the class name \"first\", that \nare direct children of\n<div>\n:\nExample\n$(document).ready(function(){\n$(\"div\").children(\"p.first\");\n});\n\njQuery find() Method\nThe\nfind()\nmethod returns descendant elements of the selected element, all \nthe way down to the last descendant.\nThe following example returns all\n<span>\nelements that are \ndescendants of\n<div>\n:\nExample\n$(document).ready(function(){\n$(\"div\").find(\"span\");\n});\n\nThe following example returns all \ndescendants of\n<div>\n:\nExample\n$(document).ready(function(){\n$(\"div\").find(\"*\");\n});\n\njQuery Exercises\nTest Yourself With Exercises\nExercise:\nUse a jQuery method to get all direct children of a <div> element element.\n$(\"div\").\n();\nSubmit Answer \u00bb\nStart the Exercise\njQuery Traversing Reference\nFor a complete overview of all jQuery Traversing methods, please go to our\njQuery Traversing Reference\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "$(document).ready(function(){\n$(\"div\").children();\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "$(document).ready(function(){\n$(\"div\").children(\"p.first\");\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "$(document).ready(function(){\n$(\"div\").find(\"span\");\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "$(document).ready(function(){\n$(\"div\").find(\"*\");\n});",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "$(document).ready(function(){\n$(\"div\").children();\n# TODO: Complete this line",
      "solution": "$(document).ready(function(){\n$(\"div\").children();\n});"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "$(document).ready(function(){\n$(\"div\").children(\"p.first\");\n# TODO: Complete this line",
      "solution": "$(document).ready(function(){\n$(\"div\").children(\"p.first\");\n});"
    }
  ],
  "related_topics": [
    {
      "id": "30e68dd8-c268-4abc-813f-af5e0580b108",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "4b8dc3fc-c5a2-4754-8172-8f0614b3eb57",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "f13dc708-b7ac-4ff5-9eb3-65333ac4a202",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is A descendant?",
      "options": [
        "a child",
        "Not a A descendant.",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of A descendant is 'a child'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers jQuery Traversing -Descendants concepts and techniques. You'll learn how to use jQuery Traversing -Descendants effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of jQuery Traversing -Descendants and how to apply it in your projects."
}