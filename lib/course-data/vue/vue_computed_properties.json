{
  "title": "Vue Computed Properties",
  "url": "https://www.w3schools.com/vue/vue_computed-properties.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Vue Computed Properties",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Computed properties are like data properties, except they depend on other properties.",
      "html": "<p><strong>Computed properties</strong> are like data properties, except they depend on other properties.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Computed properties are written like methods, but they do not accept any input arguments.",
      "html": "<p><strong>Computed properties</strong> are written like methods, but they do not accept any input arguments.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Computed properties are updated automatically when a dependency changes, while methods are called on when something happens, like with event handling for example.",
      "html": "<p><strong>Computed properties</strong> are updated automatically when a dependency changes, while methods are called on when something happens, like with event handling for example.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Computed properties are used when outputting something that depends on something else.",
      "html": "<p><strong>Computed properties</strong> are used when outputting something that depends on something else.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Computed Properties are Dynamic",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The big advantage with a computed property is that it is dynamic, meaning it changes depending on for example the value of one or more data properties.",
      "html": "<p>The big advantage with a computed property is that it is dynamic, meaning it changes depending on for example the value of one or more data properties.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Computed properties is the third configuration option in the Vue instance that we will learn. The first two configuration options we have already looked at are 'data' and 'methods'.",
      "html": "<p>Computed properties is the third configuration option in the Vue instance that we will learn. The first two configuration options we have already looked at are 'data' and 'methods'.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "As with 'data' and 'methods' computed properties also has a reserved name in the Vue instance: ' computed '.",
      "html": "<p>As with 'data' and 'methods' computed properties also has a reserved name in the Vue instance: '<strong>computed</strong>'.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n      const app = Vue.createApp({ \n        \u00a0 data() { \n          \u00a0 \u00a0 ...\n        \u00a0 }, \n        \u00a0 computed: { \n          \u00a0 \u00a0 ...\n        \u00a0 }, \n        \u00a0 methods: { \n          \u00a0 \u00a0 ... \n        \u00a0 } \n      })\n   ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "createApp",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const app = Vue.createApp({\ndata() {\n...\n},\ncomputed: {\n...\n},\nmethods: {\n...\n}\n})",
      "syntax_highlighting": [
        {
          "text": "\n const app = Vue.createApp({ \n        \u00a0 data() { \n          \u00a0 \u00a0 ...\n        \u00a0 }, \n        \u00a0 computed: { \n          \u00a0 \u00a0 ...\n        \u00a0 }, \n        \u00a0 methods: { \n          \u00a0 \u00a0 ... \n        \u00a0 } \n      })\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "createApp",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> app = Vue.<span class=\"jspropertycolor\" style=\"color:black\">createApp</span>({ <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>        \u00a0 data() { <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>          \u00a0 \u00a0 .<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>        \u00a0 }, <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>        \u00a0 <strong>computed</strong>: { <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>          \u00a0 \u00a0 .<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>        \u00a0 }, <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>        \u00a0 methods: { <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>          \u00a0 \u00a0 .<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span> <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>        \u00a0 } <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      })<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n      const app = Vue.createApp({ \n        \u00a0 data() { \n          \u00a0 \u00a0 ...\n        \u00a0 }, \n        \u00a0 computed: { \n          \u00a0 \u00a0 ...\n        \u00a0 }, \n        \u00a0 methods: { \n          \u00a0 \u00a0 ... \n        \u00a0 } \n      })\n   ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "createApp",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Computed Property 'yes' or 'no'",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Let's say we want a form to create items in a shopping list, and we want to mark if a new item is important or not. We could add a 'true' or 'false' feedback when the checkbox gets checked, like we have done in an example before:",
      "html": "<p>Let's say we want a form to create items in a shopping list, and we want to mark if a new item is important or not. We could add a 'true' or 'false' feedback when the checkbox gets checked, like we have done in an example before:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/vue/tryit.php?filename=tryvue_cp_important",
        "syntaxHighlighting": [
          {
            "text": "<input type=\"checkbox\" v-model=\"chbxVal\">",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " type=\"checkbox\" v-model=\"chbxVal\"",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"checkbox\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": "=\"chbxVal\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "{{ chbxVal }}",
            "color": "rgb(215, 58, 73)",
            "class": "angularstatementcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "htmlHigh"
        ],
        "isNotranslate": true
      },
      "code": "<input type=\"checkbox\" v-model=\"chbxVal\"> {{ chbxVal }}",
      "syntax_highlighting": [
        {
          "text": "<input type=\"checkbox\" v-model=\"chbxVal\">",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " type=\"checkbox\" v-model=\"chbxVal\"",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"checkbox\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": "=\"chbxVal\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "{{ chbxVal }}",
          "color": "#d73a49",
          "class": [
            "angularstatementcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate htmlHigh\">\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>input<span class=\"attributecolor\" style=\"color:green\"> type<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"checkbox\"</span> v-model<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"chbxVal\"</span></span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span> <span class=\"angularstatementcolor\" style=\"color:#d73a49\">{{ chbxVal }}</span> <br/>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "tryItLink": "https://www.w3schools.com/vue/tryit.php?filename=tryvue_cp_important",
      "syntax_highlighting_data": [
        {
          "text": "<input type=\"checkbox\" v-model=\"chbxVal\">",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " type=\"checkbox\" v-model=\"chbxVal\"",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"checkbox\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": "=\"chbxVal\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "{{ chbxVal }}",
          "color": "rgb(215, 58, 73)",
          "class": "angularstatementcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "However, if you you ask someone if something is important, they will most likely answer 'yes' or 'no' instead of 'true' or 'false'. So to make our form more fitting with normal language (more intuitive) we should have 'yes' or 'no' as feedback on the checkbox instead of 'true' or 'false'.",
      "html": "<p>However, if you you ask someone if something is important, they will most likely answer 'yes' or 'no' instead of 'true' or 'false'. So to make our form more fitting with normal language (more intuitive) we should have 'yes' or 'no' as feedback on the checkbox instead of 'true' or 'false'.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "And guess what, a computed property is a perfect tool to help us with that.",
      "html": "<p>And guess what, a computed property is a perfect tool to help us with that.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/vue/tryit.php?filename=tryvue_cp_important-2",
        "syntaxHighlighting": [
          {
            "text": "<input type=\"checkbox\" v-model=\"chbxVal\">",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " type=\"checkbox\" v-model=\"chbxVal\"",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"checkbox\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": "=\"chbxVal\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "{{ isImportant }}",
            "color": "rgb(215, 58, 73)",
            "class": "angularstatementcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "htmlHigh"
        ],
        "isNotranslate": true
      },
      "code": "<input type=\"checkbox\" v-model=\"chbxVal\"> {{ isImportant }}",
      "syntax_highlighting": [
        {
          "text": "<input type=\"checkbox\" v-model=\"chbxVal\">",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " type=\"checkbox\" v-model=\"chbxVal\"",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"checkbox\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": "=\"chbxVal\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "{{ isImportant }}",
          "color": "#d73a49",
          "class": [
            "angularstatementcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate htmlHigh\">\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>input<span class=\"attributecolor\" style=\"color:green\"> type<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"checkbox\"</span> v-model<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"chbxVal\"</span></span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span> <span class=\"angularstatementcolor\" style=\"color:#d73a49\">{{ isImportant }}</span> <br/>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "tryItLink": "https://www.w3schools.com/vue/tryit.php?filename=tryvue_cp_important-2",
      "syntax_highlighting_data": [
        {
          "text": "<input type=\"checkbox\" v-model=\"chbxVal\">",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " type=\"checkbox\" v-model=\"chbxVal\"",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"checkbox\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": "=\"chbxVal\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "{{ isImportant }}",
          "color": "rgb(215, 58, 73)",
          "class": "angularstatementcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Computed Properties vs. Methods",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Computed properties and methods are both written as functions, but they are different:",
      "html": "<p>Computed properties and methods are both written as functions, but they are different:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Vue Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Test Yourself With Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise:",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Provide the correct code so that the 'isImportant' computed property is shown on the screen.",
      "html": "<p>Provide the correct code so that the 'isImportant' computed property is shown on the screen.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "<div id=\"app\">\n<form>\n<p>\nImportant item?\n<label>\n<input type=\"checkbox\" v-model=\"chbxVal\">\n\n\n</label>\n</p>\n</form>\n</div>\n\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nchbxVal: false\n}\n},\n\n: {\nisImportant() {\nif(this.chbxVal){\nreturn 'yes'\n}\nelse {\nreturn 'no'\n}\n}\n}\n})\napp.mount('#app')\n</script>",
      "language": "html",
      "code_html": "<pre style=\"overflow: auto;\">&lt;div id=\"app\"&gt;\n  &lt;form&gt;\n    &lt;p&gt;\n      Important item?\n      &lt;label&gt;\n         &lt;input type=\"checkbox\" v-model=\"chbxVal\"&gt; \n         <input maxlength=\"17\" name=\"ex1\" style=\"width: 18ch;\"/>\n      &lt;/label&gt;\n    &lt;/p&gt;\n  &lt;/form&gt;\n&lt;/div&gt;\n\n&lt;script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  const app = Vue.createApp({\n    data() {\n      return {\n        chbxVal: false\n      }\n    },\n    <input maxlength=\"8\" name=\"ex2\" style=\"width: 9ch;\"/>: {\n      isImportant() {\n        if(this.chbxVal){\n          return 'yes'\n        }\n        else {\n          return 'no'\n        }\n      }\n    }\n  })\n app.mount('#app')\n&lt;/script&gt;\n</pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Start the Exercise",
          "href": "https://www.w3schools.com/exercise.php?filename=exercise_computed-properties2",
          "title": ""
        }
      ],
      "text": "Start the Exercise",
      "html": "<p><a href=\"exercise.php?filename=exercise_computed-properties2\" target=\"_blank\">Start the Exercise</a></p>"
    }
  ]
}