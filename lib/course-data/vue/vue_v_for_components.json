{
  "title": "Vue v-for Components",
  "url": "https://www.w3schools.com/vue/vue_v-for-comp.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Vue v-for Components",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Components can be reused with v-for to generate many elements of the same kind.",
      "html": "<p>Components can be reused with <code>v-for</code> to generate many elements of the same kind.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When generating elements with v-for from a component, it is also very helpful that props can be assigned dynamically based on values from an array.",
      "html": "<p>When generating elements with <code>v-for</code> from a component, it is also very helpful that props can be assigned dynamically based on values from an array.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Create Component Elements with v-for",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We will now create component elements with v-for based on an array with food item names.",
      "html": "<p>We will now create component elements with <code>v-for</code> based on an array with food item names.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-html"
        ],
        "isNotranslate": true
      },
      "code": "<\ntemplate\n>\n\n\n<\nh1\n>\nFood\n</\nh1\n>\n\n\n<\np\n>\nComponents created with v-for based on an array.\n</\np\n>\n\n\n<\ndiv\n\nid\n=\n\"\nwrapper\n\"\n>\n\n\n<\nfood-item\n\n\nv-for\n=\n\"\nx in foods\n\"\n\n\nv-bind:\nfood-name\n=\n\"\nx\n\"\n/>\n\n\n</\ndiv\n>\n\n\n</\ntemplate\n>\n\n\n\n<\nscript\n>\n\n\nexport\n\ndefault\n\n{\n\n\ndata\n(\n)\n\n{\n\n\nreturn\n\n{\n\nfoods\n:\n\n[\n'Apples'\n,\n'Pizza'\n,\n'Rice'\n,\n'Fish'\n,\n'Cake'\n]\n\n\n}\n;\n\n\n}\n\n\n}\n\n\n</\nscript\n>",
      "language": "html",
      "code_html": "<pre class=\"notranslate w3-white language-html\" data-line=\"\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>Food<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Components created with v-for based on an array.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>food-item</span>\n      <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>x in foods<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\"><span class=\"token namespace\">v-bind:</span>food-name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>x<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword keyword-export\">export</span> <span class=\"token keyword keyword-default\">default</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">{</span>\n        foods<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Apples'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Pizza'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Rice'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Fish'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Cake'</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-html"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-html"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "v-bind Shorthand",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To bind props dynamically we use v-bind , and because we will use v-bind much more now than before we will use the v-bind: shorthand : in the rest of this tutorial.",
      "html": "<p>To bind props dynamically we use <code>v-bind</code>, and because we will use <code>v-bind</code> much more now than before we will use the <code>v-bind:</code> shorthand <code>:</code> in the rest of this tutorial.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The 'key' Attribute",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If we modify the array after the elements are created with v-for , errors can emerge because of the way Vue updates such elements created with v-for . Vue reuses elements to optimize performance, so if we remove an item, already existing elements are reused instead of recreating all elements, and element properties might not be correct anymore.",
      "html": "<p>If we modify the array after the elements are created with <code>v-for</code>, errors can emerge because of the way Vue updates such elements created with <code>v-for</code>. Vue reuses elements to optimize performance, so if we remove an item, already existing elements are reused instead of recreating all elements, and element properties might not be correct anymore.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The reason for elements being reused incorrectly is that elements do not have a unique identifier, and that is exactly what we use the key attribute for: to let Vue tell the elements apart.",
      "html": "<p>The reason for elements being reused incorrectly is that elements do not have a unique identifier, and that is exactly what we use the <code>key</code> attribute for: to let Vue tell the elements apart.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We will generate faulty behavior without the key attribute, but first let's build a web page with foods using v-for to display: food name, description, image for favorite food and button to change favorite status.",
      "html": "<p>We will generate faulty behavior without the <code>key</code> attribute, but first let's build a web page with foods using <code>v-for</code> to display: food name, description, image for favorite food and button to change favorite status.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-html"
        ],
        "isNotranslate": true
      },
      "code": "<\ntemplate\n>\n\n\n<\nh1\n>\nFood\n</\nh1\n>\n\n\n<\np\n>\nFood items are generated with v-for from the 'foods' array.\n</\np\n>\n\n\n<\ndiv\n\nid\n=\n\"\nwrapper\n\"\n>\n\n\n<\nfood-item\n\n\nv-for\n=\n\"\nx in foods\n\"\n\n\n:food-name\n=\n\"\nx.name\n\"\n\n\n:food-desc\n=\n\"\nx.desc\n\"\n\n\n:is-favorite\n=\n\"\nx.favorite\n\"\n/>\n\n\n</\ndiv\n>\n\n\n</\ntemplate\n>\n\n\n\n<\nscript\n>\n\n\nexport\n\ndefault\n\n{\n\n\ndata\n(\n)\n\n{\n\n\nreturn\n\n{\n\nfoods\n:\n\n[\n\n\n{\n\nname\n:\n\n'Apples'\n,\n\ndesc\n:\n\n'Apples are a type of fruit that grow on trees.'\n,\n\nfavorite\n:\n\ntrue\n\n}\n,\n\n\n{\n\nname\n:\n\n'Pizza'\n,\n\ndesc\n:\n\n'Pizza has a bread base with tomato sauce, cheese, and toppings on top.'\n,\n\nfavorite\n:\n\nfalse\n\n}\n,\n\n\n{\n\nname\n:\n\n'Rice'\n,\n\ndesc\n:\n\n'Rice is a type of grain that people like to eat.'\n,\n\nfavorite\n:\n\nfalse\n\n}\n\n\n{\n\nname\n:\n\n'Fish'\n,\n\ndesc\n:\n\n'Fish is an animal that lives in water.'\n,\n\nfavorite\n:\n\ntrue\n\n}\n\n\n{\n\nname\n:\n\n'Cake'\n,\n\ndesc\n:\n\n'Cake is something sweet that tastes good.'\n,\n\nfavorite\n:\n\nfalse\n\n}\n\n\n]\n\n\n}\n;\n\n\n}\n\n\n}\n\n\n</\nscript\n>\n\n\n\n<\nstyle\n>\n\n\n#wrapper\n\n{\n\n\ndisplay\n:\nflex\n;\n\n\nflex-wrap\n:\nwrap\n;\n\n\n}\n\n\n#wrapper > div\n\n{\n\n\nborder\n:\ndashed black 1px\n;\n\n\nflex-basis\n:\n120px\n;\n\n\nmargin\n:\n10px\n;\n\n\npadding\n:\n10px\n;\n\n\nbackground-color\n:\nlightgreen\n;\n\n\n}\n\n\n</\nstyle\n>",
      "language": "html",
      "code_html": "<pre class=\"notranslate w3-white language-html\" data-line=\"\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>Food<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Food items are generated with v-for from the 'foods' array.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>food-item</span>\n      <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>x in foods<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">:food-name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>x.name<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">:food-desc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>x.desc<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">:is-favorite</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>x.favorite<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword keyword-export\">export</span> <span class=\"token keyword keyword-default\">default</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">{</span>\n        foods<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Apples'</span><span class=\"token punctuation\">,</span>\n            desc<span class=\"token operator\">:</span> <span class=\"token string\">'Apples are a type of fruit that grow on trees.'</span><span class=\"token punctuation\">,</span>\n            favorite<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Pizza'</span><span class=\"token punctuation\">,</span>\n            desc<span class=\"token operator\">:</span> <span class=\"token string\">'Pizza has a bread base with tomato sauce, cheese, and toppings on top.'</span><span class=\"token punctuation\">,</span>\n            favorite<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Rice'</span><span class=\"token punctuation\">,</span>\n            desc<span class=\"token operator\">:</span> <span class=\"token string\">'Rice is a type of grain that people like to eat.'</span><span class=\"token punctuation\">,</span>\n            favorite<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Fish'</span><span class=\"token punctuation\">,</span>\n            desc<span class=\"token operator\">:</span> <span class=\"token string\">'Fish is an animal that lives in water.'</span><span class=\"token punctuation\">,</span>\n            favorite<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Cake'</span><span class=\"token punctuation\">,</span>\n            desc<span class=\"token operator\">:</span> <span class=\"token string\">'Cake is something sweet that tastes good.'</span><span class=\"token punctuation\">,</span>\n            favorite<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">#wrapper</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">flex-wrap</span><span class=\"token punctuation\">:</span> wrap<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">#wrapper &gt; div</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> dashed black 1px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">flex-basis</span><span class=\"token punctuation\">:</span> 120px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> lightgreen<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-html"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-html"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To see that we need the key attribute, let's create a button that removes the second element in the array. When this happens, without the key attribute, the favorite image is transferred from the 'Fish' element to the 'Cake' element, and that is NOT correct:",
      "html": "<p>To see that we need the <code>key</code> attribute, let's create a button that removes the second element in the array. When this happens, without the <code>key</code> attribute, the favorite image is transferred from the 'Fish' element to the 'Cake' element, and that is NOT correct:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-html"
        ],
        "isNotranslate": true
      },
      "code": "<\nbutton\n\n@click\n=\n\"\nremoveItem\n\"\n>\nRemove Item\n</\nbutton\n>",
      "language": "html",
      "code_html": "<pre class=\"notranslate w3-white language-html\" data-line=\"\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>removeItem<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Remove Item<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-html"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-html"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "As mentioned before: this fault, that the favorite image changes from 'fish' to 'cake' when an element is removed, has to do with Vue optimizing the page by reusing elements, and at the same time Vue cannot fully tell the elements apart. That is why we should always include the key attribute to uniquely mark each element when generating elements with v-for . When we use the key attribute, we no longer get this problem.",
      "html": "<p>As mentioned before: this fault, that the favorite image changes from 'fish' to 'cake' when an element is removed, has to do with Vue optimizing the page by reusing elements, and at the same time Vue cannot fully tell the elements apart. That is why we should always include the <code>key</code> attribute to uniquely mark each element when generating elements with <code>v-for</code>. When we use the <code>key</code> attribute, we no longer get this problem.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We do not use the array element index as the key attribute value because that changes when array elements are removed and added. We could create a new data property to keep a unique value for each item, like an ID number, but because the food items already have unique names we can just use that:",
      "html": "<p>We do not use the array element index as the <code>key</code> attribute value because that changes when array elements are removed and added. We could create a new data property to keep a unique value for each item, like an ID number, but because the food items already have unique names we can just use that:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-html"
        ],
        "isNotranslate": true
      },
      "code": "<\nfood-item\n\n\nv-for\n=\n\"\nx in foods\n\"\n\n\n:key\n=\n\"\nx.name\n\"\n\n\n:food-name\n=\n\"\nx.name\n\"\n\n\n:food-desc\n=\n\"\nx.desc\n\"\n\n\n:is-favorite\n=\n\"\nx.favorite\n\"\n\n\n/>",
      "language": "html",
      "code_html": "<pre class=\"notranslate w3-white language-html\" data-line=\"3\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>food-item</span>\n  <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>x in foods<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>x.name<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:food-name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>x.name<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:food-desc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>x.desc<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:is-favorite</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>x.favorite<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/&gt;</span></span>\n<div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"3\" data-start=\"3\" style=\"top: 44px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-html"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-html"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Vue Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Test Yourself With Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise:",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When generating elements with v-for, which specific attribute is always recommended to use?",
      "html": "<p>When generating elements with v-for, which specific attribute is always recommended to use?</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "<fish-type\nv-for=\"x in fish\"\n:\n=\"x.id\"\n:fish-name=\"x.name\"\n:img-url=\"x.url\"\n/>",
      "language": "html",
      "code_html": "<pre style=\"overflow: auto;\">&lt;fish-type\n  v-for=\"x in fish\"\n  :<input maxlength=\"10\" name=\"ex1\" style=\"width: 11ch;\"/>=\"x.id\"\n  :fish-name=\"x.name\"\n  :img-url=\"x.url\"\n/&gt;\n</pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Start the Exercise",
          "href": "https://www.w3schools.com/exercise.php?filename=exercise_components4",
          "title": ""
        }
      ],
      "text": "Start the Exercise",
      "html": "<p><a href=\"exercise.php?filename=exercise_components4\" target=\"_blank\">Start the Exercise</a></p>"
    }
  ]
}