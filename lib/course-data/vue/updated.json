{
  "title": "Vue updated Lifecycle Hook",
  "url": "https://www.w3schools.com/vue/ref_lh_updated.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Vue 'updated' Lifecycle Hook",
      "level": "h1"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-js"
        ],
        "isNotranslate": true
      },
      "code": "export\n\ndefault\n\n{\n\n\ndata\n(\n)\n\n{\n\n\nreturn\n\n{\n\n\nsliderVal\n:\n\n50\n,\n\n\nrenderCount\n:\n\n0\n\n\n}\n\n\n}\n,\n\n\nupdated\n(\n)\n\n{\n\n\nthis\n.\nrenderCount\n++\n;\n\nconsole\n.\nlog\n(\n'Updated '\n\n+\n\nthis\n.\nrenderCount\n+\n\n' times.'\n)\n\n\n}\n\n\n}",
      "language": "javascript",
      "code_html": "<pre class=\"notranslate w3-white language-js\" data-line=\"8-11\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword keyword-export\">export</span> <span class=\"token keyword keyword-default\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">sliderVal</span><span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">renderCount</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">updated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>renderCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Updated '</span> <span class=\"token operator\">+</span> <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>renderCount <span class=\"token operator\">+</span> <span class=\"token string\">' times.'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<div aria-hidden=\"true\" class=\"line-highlight\" data-end=\"11\" data-range=\"8-11\" data-start=\"8\" style=\"top: 154px; width: 789px;\"> \n \n \n \n</div></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-js"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-js"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Definition and Usage",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The updated lifecycle hook happens right after the DOM tree has updated.",
      "html": "<p>The <code>updated</code> lifecycle hook happens right after the DOM tree has updated.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If we modify a property or do something else in the updated hook that triggers a new render, the updated hook will be called again after that new render, and we have most likely created an infinite loop.",
      "html": "<p>If we modify a property or do something else in the <code>updated</code> hook that triggers a new render, the <code>updated</code> hook will be called again after that new render, and we have most likely created an infinite loop.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To avoid an infinite loop we should always consider to use the beforeUpdate lifecycle hook instead of the updated lifecycle hook.",
      "html": "<p>To avoid an infinite loop we should always consider to use the <code>beforeUpdate</code> lifecycle hook instead of the <code>updated</code> lifecycle hook.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The this.$nextTick() or nextTick() functions can also be used to run code after the DOM has been updated.",
      "html": "<p>The <code>this.$nextTick()</code> or <code>nextTick()</code> functions can also be used to run code after the DOM has been updated.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: In the example above, we write the render count to the console, because making changes to the view would re-activate the updated hook and create an infinite loop.",
      "html": "<p><strong>Note: </strong>In the example above, we write the render count to the console, because making changes to the view would re-activate the <code>updated</code> hook and create an infinite loop.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Related Pages",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Vue Lifecycle Hooks",
          "href": "https://www.w3schools.com/vue_lifecycle-hooks.php",
          "title": ""
        }
      ],
      "text": "Vue Tutorial: Vue Lifecycle Hooks",
      "html": "<p>Vue Tutorial: <a href=\"vue_lifecycle-hooks.php\">Vue Lifecycle Hooks</a></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "The 'beforeUpdate' Hook",
          "href": "https://www.w3schools.com/vue_lifecycle-hooks.php#beforeUpdate",
          "title": ""
        }
      ],
      "text": "Vue Tutorial: The 'beforeUpdate' Hook",
      "html": "<p>Vue Tutorial: <a href=\"vue_lifecycle-hooks.php#beforeUpdate\">The 'beforeUpdate' Hook</a></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Vue 'beforeUpdate' Lifecycle Hook",
          "href": "https://www.w3schools.com/ref_lh_beforeUpdate.php",
          "title": ""
        }
      ],
      "text": "Vue Reference: Vue 'beforeUpdate' Lifecycle Hook",
      "html": "<p>Vue Reference: <a href=\"ref_lh_beforeUpdate.php\">Vue 'beforeUpdate' Lifecycle Hook</a></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Vue $nextTick() Method",
          "href": "https://www.w3schools.com/ref_metNextTick.php",
          "title": ""
        }
      ],
      "text": "Vue Reference: Vue $nextTick() Method",
      "html": "<p>Vue Reference: <a href=\"ref_metNextTick.php\">Vue $nextTick() Method</a></p>"
    }
  ]
}