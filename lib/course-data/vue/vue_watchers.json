{
  "title": "Vue Watchers",
  "url": "https://www.w3schools.com/vue/vue_watchers.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Vue Watchers",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A watcher is a method that watches a data property with the same name.",
      "html": "<p>A <strong>watcher</strong> is a method that watches a data property with the same name.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A watcher runs every time the data property value changes.",
      "html": "<p>A <strong>watcher</strong> runs every time the data property value changes.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Use a watcher if a certain data property value requires an action.",
      "html": "<p>Use a <strong>watcher</strong> if a certain data property value requires an action.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Watcher Concept",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Watchers is the fourth configuration option in the Vue instance that we will learn. The first three configuration options we have already looked at are 'data', 'methods' and 'computed'.",
      "html": "<p>Watchers is the fourth configuration option in the Vue instance that we will learn. The first three configuration options we have already looked at are 'data', 'methods' and 'computed'.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "As with 'data', 'methods' and 'computed' watchers also has a reserved name in the Vue instance: ' watch '.",
      "html": "<p>As with 'data', 'methods' and 'computed' watchers also has a reserved name in the Vue instance: '<strong>watch</strong>'.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n      const app = Vue.createApp({ \n        \u00a0 data() { \n          \u00a0 \u00a0 ...\n        \u00a0 }, \n        \u00a0 watch: { \n          \u00a0 \u00a0 ...\n        \u00a0 }, \n        \u00a0 computed: { \n          \u00a0 \u00a0 ...\n        \u00a0 }, \n        \u00a0 methods: { \n          \u00a0 \u00a0 ... \n        \u00a0 } \n      })\n   ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "createApp",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const app = Vue.createApp({\ndata() {\n...\n},\nwatch: {\n...\n},\ncomputed: {\n...\n},\nmethods: {\n...\n}\n})",
      "syntax_highlighting": [
        {
          "text": "\n const app = Vue.createApp({ \n        \u00a0 data() { \n          \u00a0 \u00a0 ...\n        \u00a0 }, \n        \u00a0 watch: { \n          \u00a0 \u00a0 ...\n        \u00a0 }, \n        \u00a0 computed: { \n          \u00a0 \u00a0 ...\n        \u00a0 }, \n        \u00a0 methods: { \n          \u00a0 \u00a0 ... \n        \u00a0 } \n      })\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "createApp",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> app = Vue.<span class=\"jspropertycolor\" style=\"color:black\">createApp</span>({ <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>        \u00a0 data() { <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>          \u00a0 \u00a0 .<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>        \u00a0 }, <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>        \u00a0 <strong>watch</strong>: { <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>          \u00a0 \u00a0 .<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>        \u00a0 }, <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>        \u00a0 computed: { <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>          \u00a0 \u00a0 .<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>        \u00a0 }, <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>        \u00a0 methods: { <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>          \u00a0 \u00a0 .<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span> <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>        \u00a0 } <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      })<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n      const app = Vue.createApp({ \n        \u00a0 data() { \n          \u00a0 \u00a0 ...\n        \u00a0 }, \n        \u00a0 watch: { \n          \u00a0 \u00a0 ...\n        \u00a0 }, \n        \u00a0 computed: { \n          \u00a0 \u00a0 ...\n        \u00a0 }, \n        \u00a0 methods: { \n          \u00a0 \u00a0 ... \n        \u00a0 } \n      })\n   ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "createApp",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "As mentioned in the green area at the top, a watcher monitors a data property with the same name.",
      "html": "<p>As mentioned in the green area at the top, a watcher monitors a data property with the same name.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We never call a watcher method. It is only called automatically when the property value changes.",
      "html": "<p>We never call a watcher method. It is only called automatically when the property value changes.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The new property value is always available as an input argument to the watcher method, and so is the old value.",
      "html": "<p>The new property value is always available as an input argument to the watcher method, and so is the old value.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/vue/tryit.php?filename=tryvue_watcher_1",
        "syntaxHighlighting": [
          {
            "text": "<input type=\"range\" v-model=\"rangeVal\">",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " type=\"range\" v-model=\"rangeVal\"",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"range\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": "=\"rangeVal\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<p>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "{{ rangeVal }}",
            "color": "rgb(215, 58, 73)",
            "class": "angularstatementcolor"
          },
          {
            "text": "</p>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "htmlHigh"
        ],
        "isNotranslate": true
      },
      "code": "<input type=\"range\" v-model=\"rangeVal\"> \n\n<p>{{ rangeVal }}</p>",
      "syntax_highlighting": [
        {
          "text": "<input type=\"range\" v-model=\"rangeVal\">",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " type=\"range\" v-model=\"rangeVal\"",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"range\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": "=\"rangeVal\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<p>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "{{ rangeVal }}",
          "color": "#d73a49",
          "class": [
            "angularstatementcolor"
          ]
        },
        {
          "text": "</p>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate htmlHigh\">\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>input<span class=\"attributecolor\" style=\"color:green\"> type<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"range\"</span> v-model<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"rangeVal\"</span></span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span> <br/>\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>p<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><span class=\"angularstatementcolor\" style=\"color:#d73a49\">{{ rangeVal }}</span><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/p<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span> <br/>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "tryItLink": "https://www.w3schools.com/vue/tryit.php?filename=tryvue_watcher_1",
      "syntax_highlighting_data": [
        {
          "text": "<input type=\"range\" v-model=\"rangeVal\">",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " type=\"range\" v-model=\"rangeVal\"",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"range\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": "=\"rangeVal\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<p>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "{{ rangeVal }}",
          "color": "rgb(215, 58, 73)",
          "class": "angularstatementcolor"
        },
        {
          "text": "</p>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "A Watcher with New and Old Values",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In addition to the new property value, the previous property value is also automatically available as an input argument to watcher methods.",
      "html": "<p>In addition to the new property value, the previous property value is also automatically available as an input argument to watcher methods.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/vue/tryit.php?filename=tryvue_watcher_newOld",
        "syntaxHighlighting": [
          {
            "text": "<div v-on:click=\"updatePos\">",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " v-on:click=\"updatePos\"",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"updatePos\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</div>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<p>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "{{ xDiff }}",
            "color": "rgb(215, 58, 73)",
            "class": "angularstatementcolor"
          },
          {
            "text": "</p>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "htmlHigh"
        ],
        "isNotranslate": true
      },
      "code": "<div v-on:click=\"updatePos\"></div> \n\n<p>{{ xDiff }}</p>",
      "syntax_highlighting": [
        {
          "text": "<div v-on:click=\"updatePos\">",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " v-on:click=\"updatePos\"",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"updatePos\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</div>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<p>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "{{ xDiff }}",
          "color": "#d73a49",
          "class": [
            "angularstatementcolor"
          ]
        },
        {
          "text": "</p>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate htmlHigh\">\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>div<span class=\"attributecolor\" style=\"color:green\"> v-on:click<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"updatePos\"</span></span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/div<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span> <br/>\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>p<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><span class=\"angularstatementcolor\" style=\"color:#d73a49\">{{ xDiff }}</span><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/p<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span> <br/>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "tryItLink": "https://www.w3schools.com/vue/tryit.php?filename=tryvue_watcher_newOld",
      "syntax_highlighting_data": [
        {
          "text": "<div v-on:click=\"updatePos\">",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " v-on:click=\"updatePos\"",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"updatePos\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</div>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<p>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "{{ xDiff }}",
          "color": "rgb(215, 58, 73)",
          "class": "angularstatementcolor"
        },
        {
          "text": "</p>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We can also use new and old values to give feedback to the user the exact moment the input goes from being invalid to valid:",
      "html": "<p>We can also use new and old values to give feedback to the user the exact moment the input goes from being invalid to valid:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/vue/tryit.php?filename=tryvue_watcher_newOld2",
        "syntaxHighlighting": [
          {
            "text": "<input v-type=\"email\" v-model=\"inpAddress\">",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " v-type=\"email\" v-model=\"inpAddress\"",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"email\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": "=\"inpAddress\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<p v-bind:class=\"myClass\">",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " v-bind:class=\"myClass\"",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"myClass\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "{{ feedbackText }}",
            "color": "rgb(215, 58, 73)",
            "class": "angularstatementcolor"
          },
          {
            "text": "</p>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "htmlHigh"
        ],
        "isNotranslate": true
      },
      "code": "<input v-type=\"email\" v-model=\"inpAddress\"> \n\n<p v-bind:class=\"myClass\">{{ feedbackText }}</p>",
      "syntax_highlighting": [
        {
          "text": "<input v-type=\"email\" v-model=\"inpAddress\">",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " v-type=\"email\" v-model=\"inpAddress\"",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"email\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": "=\"inpAddress\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<p v-bind:class=\"myClass\">",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " v-bind:class=\"myClass\"",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"myClass\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "{{ feedbackText }}",
          "color": "#d73a49",
          "class": [
            "angularstatementcolor"
          ]
        },
        {
          "text": "</p>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate htmlHigh\">\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>input<span class=\"attributecolor\" style=\"color:green\"> v-type<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"email\"</span> v-model<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"inpAddress\"</span></span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span> <br/>\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>p<span class=\"attributecolor\" style=\"color:green\"> v-bind:class<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"myClass\"</span></span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><span class=\"angularstatementcolor\" style=\"color:#d73a49\">{{ feedbackText }}</span><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/p<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span> <br/>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "tryItLink": "https://www.w3schools.com/vue/tryit.php?filename=tryvue_watcher_newOld2",
      "syntax_highlighting_data": [
        {
          "text": "<input v-type=\"email\" v-model=\"inpAddress\">",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " v-type=\"email\" v-model=\"inpAddress\"",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"email\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": "=\"inpAddress\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<p v-bind:class=\"myClass\">",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " v-bind:class=\"myClass\"",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"myClass\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "{{ feedbackText }}",
          "color": "rgb(215, 58, 73)",
          "class": "angularstatementcolor"
        },
        {
          "text": "</p>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Watchers vs. Methods",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Watchers and methods are both written as functions, but there are many differences:",
      "html": "<p>Watchers and methods are both written as functions, but there are many differences:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Watchers vs. Computed Properties",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Watchers and computed properties are both written as functions.",
      "html": "<p>Watchers and computed properties are both written as functions.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Watchers and computed properties are both called automatically when a dependency change, and never called from HTML.",
      "html": "<p>Watchers and computed properties are both called automatically when a dependency change, and never called from HTML.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Here are some differences between computed properties and watchers:",
      "html": "<p>Here are some differences between computed properties and watchers:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Vue Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Test Yourself With Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise:",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The watcher in this exercise is supposed to increment the 'count' data property by one every time 'rangeVal' data property changes.",
      "html": "<p>The watcher in this exercise is supposed to increment the 'count' data property by one every time 'rangeVal' data property changes.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What must the watcher be called?",
      "html": "<p>What must the watcher be called?</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nrangeVal: 70,\ncount: 0\n}\n},\nwatch: {\n\n() {\nthis.count++\n}\n}\n})\napp.mount('#app')\n</script>",
      "language": "html",
      "code_html": "<pre style=\"overflow: auto;\">&lt;script&gt;\n  const app = Vue.createApp({\n    data() {\n      return {\n      \trangeVal: 70,\n        count: 0\n      }\n    },\n    watch: {\n      <input maxlength=\"8\" name=\"ex1\" style=\"width: 9ch;\"/>() {\n        this.count++\n      }\n    }\n  })\n app.mount('#app')\n&lt;/script&gt;\n</pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Start the Exercise",
          "href": "https://www.w3schools.com/exercise.php?filename=exercise_watchers1",
          "title": ""
        }
      ],
      "text": "Start the Exercise",
      "html": "<p><a href=\"exercise.php?filename=exercise_watchers1\" target=\"_blank\">Start the Exercise</a></p>"
    }
  ]
}