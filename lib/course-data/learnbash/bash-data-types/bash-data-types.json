{
  "id": "45640345-9f44-4221-b945-5dc5834bcbda",
  "title": "Bash Data Types",
  "slug": "bash-data-types",
  "metadata": {
    "description": "Learn about Bash Data Types with clear explanations and practical examples.",
    "keywords": [
      "example",
      "arrays",
      "colors",
      "bash",
      "echo",
      "data",
      "associative",
      "types",
      "strings",
      "used"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnBash",
    "subcategory": "Bash Data Types"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Bash Data Types",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Understanding Bash Data Types\nThis section introduces the different data types available in Bash scripting.\nStrings\nStrings are sequences of characters used to store text. They can be manipulated using various string operations such as concatenation and substring extraction.\nExample: Strings\n# String example\ngreeting=\"Hello, World!\"\nname=\"Alice\"\nfull_greeting=\"$greeting, $name!\"\necho $full_greeting\nNumbers\nNumbers in Bash can be used for arithmetic operations. Bash supports integer arithmetic natively, such as addition, subtraction, multiplication, and division.\nExample: Numbers\n# Number example\nnum1=5\nnum2=10\nsum=$((num1 + num2))\ndifference=$((num2 - num1))\nproduct=$((num1 * num2))\nquotient=$((num2 / num1))\necho \"Sum: $sum, Difference: $difference, Product: $product, Quotient: $quotient\"\nArrays\nArrays are used to store multiple values in a single variable. Each element in an array is accessed using an index. You can iterate over arrays and modify elements.\nExample: Arrays\n# Array example\nfruits=(\"apple\" \"banana\" \"cherry\")\nfor fruit in \"${fruits[@]}\"; do\n  echo $fruit\ndone\nAssociative Arrays\nAssociative arrays allow you to use named keys to access values. They are similar to dictionaries in other programming languages. You can add or remove keys and values.\nExample: Associative Arrays\n# Associative array example\ndeclare -A colors\ncolors[apple]=\"red\"\ncolors[banana]=\"yellow\"\ncolors[grape]=\"purple\"\nunset colors[banana]\necho ${colors[apple]} # red\necho ${colors[grape]} # purple\nData Type Limitations\nBash does not support floating-point arithmetic natively. For such operations, consider using external tools like\nbc\nor\nawk\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "6430fd31-8102-4b1e-8df8-fb3aecb4c226",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "a3a7cacc-04d4-4cfb-b409-dff53d0e3d8d",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "2b11cfbb-2475-4159-ae0f-a40d0b2f8fd8",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Strings\nStrings?",
      "options": [
        "None of the above.",
        "sequences of characters used to store text",
        "None of the above.",
        "used to store multiple values in a single variable"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Strings\nStrings is 'sequences of characters used to store text'."
    },
    {
      "question": "What is Arrays\nArrays?",
      "options": [
        "None of the above.",
        "None of the above.",
        "used to store multiple values in a single variable",
        "sequences of characters used to store text"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Arrays\nArrays is 'used to store multiple values in a single variable'."
    }
  ],
  "summary": "This tutorial covers Bash Data Types concepts and techniques. You'll learn how to use Bash Data Types effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Bash Data Types and how to apply it in your projects."
}