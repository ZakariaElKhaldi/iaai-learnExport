{
  "id": "ef102dc8-dbf1-42fd-a074-346a0feee448",
  "title": "What is JSON?",
  "slug": "what-is-json",
  "metadata": {
    "description": "Learn about What is JSON? with clear explanations and practical examples.",
    "keywords": [
      "json",
      "javascript",
      "firstname",
      "lastname",
      "data",
      "object",
      "objects",
      "name",
      "employees",
      "value"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "Web Development",
    "subcategory": "What is JSON"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "What is JSON?",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "JSON\nJSON stands for\nJ\nava\nS\ncript\nO\nbject\nN\notation\nJSON is a lightweight format for storing and transporting data\nJSON is often used when data is sent from a server to a web page\nJSON is \"self-describing\" and easy to understand\nJSON Example\nThis example defines an employees object: an array of 3 employee records (objects):\n{\n\"employees\":[\n{\"firstName\":\"John\", \"lastName\":\"Doe\"},\n{\"firstName\":\"Anna\", \"lastName\":\"Smith\"},\n{\"firstName\":\"Peter\", \"lastName\":\"Jones\"}\n]\n}\nLearn JSON Now!\nJSON Syntax Rules\nData is in name/value pairs\nData is separated by commas\nCurly braces hold objects\nSquare brackets hold arrays\nJavaScript Object Notation\nThe JSON format is syntactically identical to the code for creating \nJavaScript objects.\nBecause of this similarity, a JavaScript program \ncan easily convert JSON data into native \nJavaScript objects.\nThe JSON syntax is derived from JavaScript object notation syntax, but the JSON format is text only. \nCode for reading and generating JSON data can be written in any programming language.\nJSON Data - A Name and a Value\nJSON data is written as name/value pairs, just like JavaScript object \nproperties.\nA name/value pair consists of a field name (in double quotes), \nfollowed by a colon, followed by a value:\n\"firstName\":\"John\"\nJSON names require double quotes. JavaScript names do not.\nJSON Objects\nJSON objects are written inside curly braces.\nJust like in JavaScript, objects can contain multiple name/value pairs:\n{\"firstName\":\"John\", \"lastName\":\"Doe\"}\nJSON Arrays\nJSON arrays are written inside square brackets.\nJust like in JavaScript, an array can contain objects:\n\"employees\":[\n{\"firstName\":\"John\", \"lastName\":\"Doe\"},\n{\"firstName\":\"Anna\", \"lastName\":\"Smith\"},\n{\"firstName\":\"Peter\", \"lastName\":\"Jones\"}\n]\nIn the example above, the object \"employees\" is an array. It contains three \nobjects.\nEach object is a record of a person (with a first name and a last name).\nConverting a JSON Text to a JavaScript Object\nA common use of JSON is to read data from a web server, \nand display the data in a web page.\nFor simplicity, this can be demonstrated using a string as input.\nFirst, create a JavaScript string containing JSON syntax:\nvar text = '{ \"employees\" : [' +\n'{ \"firstName\":\"John\" , \"lastName\":\"Doe\" },' +\n'{ \"firstName\":\"Anna\" , \"lastName\":\"Smith\" },' +\n'{ \"firstName\":\"Peter\" , \"lastName\":\"Jones\" } ]}';\nThen, use the JavaScript built-in function JSON.parse() to convert the string into a JavaScript object:\nvar obj = JSON.parse(text);\nFinally, use the new JavaScript object in your page:\nExample\n<p id=\"demo\"></p>\n<script>\ndocument.getElementById(\"demo\").innerHTML =\nobj.employees[1].firstName + \" \" + obj.employees[1].lastName;\n</script>\n\nFull JSON Tutorial\nThis has been a short description of JSON.\nFor a full JSON tutorial go to\n JSON Tutorial\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "JSON Example",
      "content": "",
      "order": 3,
      "code": "{\n\"employees\":[\n{\"firstName\":\"John\", \"lastName\":\"Doe\"},\n{\"firstName\":\"Anna\", \"lastName\":\"Smith\"},\n{\"firstName\":\"Peter\", \"lastName\":\"Jones\"}\n]\n}",
      "language": "javascript",
      "explanation": "Example of json example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "var text = '{ \"employees\" : [' +\n'{ \"firstName\":\"John\" , \"lastName\":\"Doe\" },' +\n'{ \"firstName\":\"Anna\" , \"lastName\":\"Smith\" },' +\n'{ \"firstName\":\"Peter\" , \"lastName\":\"Jones\" } ]}';",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "var obj = JSON.parse(text);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<p id=\"demo\"></p>\n<script>\ndocument.getElementById(\"demo\").innerHTML =\nobj.employees[1].firstName + \" \" + obj.employees[1].lastName;\n</script>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "{\n# TODO: Complete this line\n{\"firstName\":\"John\", \"lastName\":\"Doe\"},\n{\"firstName\":\"Anna\", \"lastName\":\"Smith\"},\n{\"firstName\":\"Peter\", \"lastName\":\"Jones\"}\n]\n}",
      "solution": "{\n\"employees\":[\n{\"firstName\":\"John\", \"lastName\":\"Doe\"},\n{\"firstName\":\"Anna\", \"lastName\":\"Smith\"},\n{\"firstName\":\"Peter\", \"lastName\":\"Jones\"}\n]\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "var text = '{ \"employees\" : [' +\n# TODO: Complete this line\n'{ \"firstName\":\"Anna\" , \"lastName\":\"Smith\" },' +\n'{ \"firstName\":\"Peter\" , \"lastName\":\"Jones\" } ]}';",
      "solution": "var text = '{ \"employees\" : [' +\n'{ \"firstName\":\"John\" , \"lastName\":\"Doe\" },' +\n'{ \"firstName\":\"Anna\" , \"lastName\":\"Smith\" },' +\n'{ \"firstName\":\"Peter\" , \"lastName\":\"Jones\" } ]}';"
    }
  ],
  "related_topics": [
    {
      "id": "9dab7681-f5eb-496e-a74c-82f086560827",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "a6256d00-2567-48dd-8f9c-a019932dcb97",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "ab5f4c46-2a4e-4663-8725-363c3fa6bd9d",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is What?",
      "options": [
        "JSON",
        "\"self-describing\" and easy to understand\nJSON Example\nThis example defines an employees object: an array of 3 employee records (objects):\n{\n\"employees\":[\n{\"firstName\":\"John\"",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of What is 'JSON'."
    },
    {
      "question": "What is JSON\nJSON stands for\nJ\nava\nS\ncript\nO\nbject\nN\notation\nJSON is a lightweight format for storing and transporting data\nJSON is often used when data is sent from a server to a web page\nJSON?",
      "options": [
        "\"self-describing\" and easy to understand\nJSON Example\nThis example defines an employees object: an array of 3 employee records (objects):\n{\n\"employees\":[\n{\"firstName\":\"John\"",
        "JSON",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of JSON\nJSON stands for\nJ\nava\nS\ncript\nO\nbject\nN\notation\nJSON is a lightweight format for storing and transporting data\nJSON is often used when data is sent from a server to a web page\nJSON is '\"self-describing\" and easy to understand\nJSON Example\nThis example defines an employees object: an array of 3 employee records (objects):\n{\n\"employees\":[\n{\"firstName\":\"John\"'."
    }
  ],
  "summary": "This tutorial covers What is JSON? concepts and techniques. You'll learn how to use What is JSON? effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of What is JSON? and how to apply it in your projects."
}