{
  "id": "5f6679a6-5179-4fa3-b583-a38c882ceaa1",
  "title": "What is GitHub?",
  "slug": "what-is-github",
  "metadata": {
    "description": "Learn about What is GitHub? with clear explanations and practical examples.",
    "keywords": [
      "github",
      "branch",
      "pull",
      "repository",
      "master",
      "changes",
      "requests",
      "work",
      "commits",
      "used"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "Web Development",
    "subcategory": "What is GitHub"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "What is GitHub?",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "GitHub is a code hosting platform for collaboration and version control.\nGitHub lets you (and others) work together on projects.\n\nGitHub essentials are:\nRepositories\nBranches\nCommits\nPull Requests\nGit (the version control software GitHub is built on)\nExample\n$ git push origin heroku\n$ cd /etc/\n$ ls\nRepository\nA GitHub\nrepository\ncan be used to store a development\nproject\n.\nIt can contain\nfolders\nand any type of\nfiles\n(HTML, CSS, JavaScript, Documents, Data, Images).\nA GitHub repository should also include a\nlicence\nfile and a\nREADME\nfile about \nthe project.\nA GitHub repository can also be used to store ideas, or any resources that you want to share.\nBranch\nA GitHub branch is used to work with different\nversions\nof a repository at the same time.\nBy default a repository has a\nmaster\nbranch (a production \nbranch).\nAny other branch is a\ncopy\nof the master branch (as it was \nat a point in time).\nNew Branches are for bug fixes and feature work separate from the master branch.\nWhen changes are ready, they can be merged into the master branch. If you make changes to the master branch while working on a new branch, \nthese updates can be pulled in.\nCommits\nAt GitHub, changes are called commits.\nEach commit (change) has a description explaining why a change was made.\nPull Requests\nPull Requests are the heart of GitHub\ncollaboration\n.\nWith a pull request you are\nproposing\nthat your changes should \nbe\nmerged\n(pulled in) with the master.\nPull requests show content\ndifferences\n, changes, additions, and subtractions in\ncolors\n(green and red).\nAs soon as you have a commit, you can open a pull request and start a discussion, even before the code is finished.\nA a great way to learn GitHub, before working on larger projects, is to open \npull requests in your own repository and merge them yourself.\nYou merge any changes into the master by clicking a \"Merge pull request\" button.\nAfter merging you can delete the branch by clicking a \"Delete branch button\".\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "$ git push origin heroku\n$ cd /etc/\n$ ls",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "$ git push origin heroku\n$ cd /etc/\n# TODO: Complete this line",
      "solution": "$ git push origin heroku\n$ cd /etc/\n$ ls"
    },
    {
      "title": "Create a Layout",
      "description": "Build a simple layout using the techniques from this tutorial.",
      "difficulty": "easy",
      "starter_code": "<!-- Add your code here -->",
      "solution": "<!-- Example solution would go here -->"
    }
  ],
  "related_topics": [
    {
      "id": "1ad7cbdd-ea3a-41cc-aa88-51cbab9bed72",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "8851b550-98b2-4186-a286-c122a9b2ef68",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "0b6fc9c3-5961-46be-9633-ff95b398e002",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is What?",
      "options": [
        "GitHub",
        "a code hosting platform for collaboration and version control",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of What is 'GitHub'."
    },
    {
      "question": "What is GitHub?",
      "options": [
        "None of the above.",
        "None of the above.",
        "a code hosting platform for collaboration and version control",
        "GitHub"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of GitHub is 'a code hosting platform for collaboration and version control'."
    }
  ],
  "summary": "This tutorial covers What is GitHub? concepts and techniques. You'll learn how to use What is GitHub? effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of What is GitHub? and how to apply it in your projects."
}