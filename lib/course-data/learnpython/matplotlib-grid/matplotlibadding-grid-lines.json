{
  "id": "9be8d247-4adc-4f9c-8629-4aaaad6de296",
  "title": "MatplotlibAdding Grid Lines",
  "slug": "matplotlibadding-grid-lines",
  "metadata": {
    "description": "Learn about MatplotlibAdding Grid Lines with clear explanations and practical examples.",
    "keywords": [
      "grid",
      "lines",
      "import",
      "array",
      "plot",
      "matplotlib",
      "pyplot",
      "axis",
      "example",
      "numpy"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnPython",
    "subcategory": "Matplotlib Grid"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Matplotlib\nAdding Grid Lines",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Add Grid Lines to a Plot\nWith Pyplot, you can use the\ngrid()\nfunction to add grid lines to the plot.\nExample\nAdd grid lines to the plot:\nimport numpy as np\nimport matplotlib.pyplot as plt\nx = np.array([80, \n  85, 90, 95, 100, 105, 110, 115, 120, 125])\ny = np.array([240, 250, 260, \n  270, 280, 290, 300, 310, 320, 330])\nplt.title(\"Sports Watch Data\")\nplt.xlabel(\"Average Pulse\")\nplt.ylabel(\"Calorie Burnage\")\nplt.plot(x, \n  y)\nplt.grid()\nplt.show()\nResult:\n\nSpecify Which Grid Lines to Display\nYou can use the\naxis\nparameter in\nthe\ngrid()\nfunction to specify which grid lines \nto display.\nLegal values are: 'x', 'y', and 'both'. Default value is 'both'.\nExample\nDisplay only grid lines for the x-axis:\nimport numpy as np\nimport matplotlib.pyplot as plt\nx = np.array([80, \n  85, 90, 95, 100, 105, 110, 115, 120, 125])\ny = np.array([240, 250, 260, \n  270, 280, 290, 300, 310, 320, 330])\nplt.title(\"Sports Watch Data\")\nplt.xlabel(\"Average Pulse\")\nplt.ylabel(\"Calorie Burnage\")\nplt.plot(x, \n  y)\nplt.grid(axis = 'x')\nplt.show()\nResult:\n\nExample\nDisplay only grid lines for the y-axis:\nimport numpy as np\nimport matplotlib.pyplot as plt\nx = np.array([80, \n  85, 90, 95, 100, 105, 110, 115, 120, 125])\ny = np.array([240, 250, 260, \n  270, 280, 290, 300, 310, 320, 330])\nplt.title(\"Sports Watch Data\")\nplt.xlabel(\"Average Pulse\")\nplt.ylabel(\"Calorie Burnage\")\nplt.plot(x, \n  y)\nplt.grid(axis = 'y')\nplt.show()\nResult:\n\nSet Line Properties for the Grid\nYou can also set the line properties of the grid, like this: grid(color = '\ncolor\n', \nlinestyle = '\nlinestyle\n', linewidth =\nnumber\n).\nExample\nSet the line properties of the grid:\nimport numpy as np\nimport matplotlib.pyplot as plt\nx = np.array([80, \n  85, 90, 95, 100, 105, 110, 115, 120, 125])\ny = np.array([240, 250, 260, \n  270, 280, 290, 300, 310, 320, 330])\nplt.title(\"Sports Watch Data\")\nplt.xlabel(\"Average \n  Pulse\")\nplt.ylabel(\"Calorie Burnage\")\nplt.plot(x, \n  y)\nplt.grid(color = 'green', linestyle = '--', linewidth = 0.5)\nplt.show()\nResult:\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "import numpy as np\nimport matplotlib.pyplot as plt\nx = np.array([80, \n  85, 90, 95, 100, 105, 110, 115, 120, 125])\ny = np.array([240, 250, 260, \n  270, 280, 290, 300, 310, 320, 330])\nplt.title(\"Sports Watch Data\")\nplt.xlabel(\"Average Pulse\")\nplt.ylabel(\"Calorie Burnage\")\nplt.plot(x, \n  y)\nplt.grid()\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "import numpy as np\nimport matplotlib.pyplot as plt\nx = np.array([80, \n  85, 90, 95, 100, 105, 110, 115, 120, 125])\ny = np.array([240, 250, 260, \n  270, 280, 290, 300, 310, 320, 330])\nplt.title(\"Sports Watch Data\")\nplt.xlabel(\"Average Pulse\")\nplt.ylabel(\"Calorie Burnage\")\nplt.plot(x, \n  y)\nplt.grid(axis = 'x')\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "import numpy as np\nimport matplotlib.pyplot as plt\nx = np.array([80, \n  85, 90, 95, 100, 105, 110, 115, 120, 125])\ny = np.array([240, 250, 260, \n  270, 280, 290, 300, 310, 320, 330])\nplt.title(\"Sports Watch Data\")\nplt.xlabel(\"Average Pulse\")\nplt.ylabel(\"Calorie Burnage\")\nplt.plot(x, \n  y)\nplt.grid(axis = 'y')\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "import numpy as np\nimport matplotlib.pyplot as plt\nx = np.array([80, \n  85, 90, 95, 100, 105, 110, 115, 120, 125])\ny = np.array([240, 250, 260, \n  270, 280, 290, 300, 310, 320, 330])\nplt.title(\"Sports Watch Data\")\nplt.xlabel(\"Average \n  Pulse\")\nplt.ylabel(\"Calorie Burnage\")\nplt.plot(x, \n  y)\nplt.grid(color = 'green', linestyle = '--', linewidth = 0.5)\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "import numpy as np\nimport matplotlib.pyplot as plt\nx = np.array([80, \n  85, 90, 95, 100, 105, 110, 115, 120, 125])\n# TODO: Complete this line\n  270, 280, 290, 300, 310, 320, 330])\nplt.title(\"Sports Watch Data\")\nplt.xlabel(\"Average Pulse\")\nplt.ylabel(\"Calorie Burnage\")\nplt.plot(x, \n  y)\nplt.grid()\nplt.show()",
      "solution": "import numpy as np\nimport matplotlib.pyplot as plt\nx = np.array([80, \n  85, 90, 95, 100, 105, 110, 115, 120, 125])\ny = np.array([240, 250, 260, \n  270, 280, 290, 300, 310, 320, 330])\nplt.title(\"Sports Watch Data\")\nplt.xlabel(\"Average Pulse\")\nplt.ylabel(\"Calorie Burnage\")\nplt.plot(x, \n  y)\nplt.grid()\nplt.show()"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "import numpy as np\nimport matplotlib.pyplot as plt\nx = np.array([80, \n  85, 90, 95, 100, 105, 110, 115, 120, 125])\ny = np.array([240, 250, 260, \n  270, 280, 290, 300, 310, 320, 330])\nplt.title(\"Sports Watch Data\")\nplt.xlabel(\"Average Pulse\")\n# TODO: Complete this line\nplt.plot(x, \n  y)\nplt.grid(axis = 'x')\nplt.show()",
      "solution": "import numpy as np\nimport matplotlib.pyplot as plt\nx = np.array([80, \n  85, 90, 95, 100, 105, 110, 115, 120, 125])\ny = np.array([240, 250, 260, \n  270, 280, 290, 300, 310, 320, 330])\nplt.title(\"Sports Watch Data\")\nplt.xlabel(\"Average Pulse\")\nplt.ylabel(\"Calorie Burnage\")\nplt.plot(x, \n  y)\nplt.grid(axis = 'x')\nplt.show()"
    }
  ],
  "related_topics": [
    {
      "id": "8a4bdafa-b57f-45a4-9ec4-a48b02f5e80a",
      "title": "Python Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "2ff90747-61f2-40ab-9c16-0a130c2cf0e3",
      "title": "Python Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "30bbee8b-c448-4b9f-8615-290bc833f3c9",
      "title": "Python Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Default value?",
      "options": [
        "None of the above.",
        "'both'",
        "None of the above.",
        "Not a Default value."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Default value is ''both''."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers MatplotlibAdding Grid Lines concepts and techniques. You'll learn how to use MatplotlibAdding Grid Lines effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of MatplotlibAdding Grid Lines and how to apply it in your projects."
}