{
  "id": "f895a39f-1245-4137-bd9b-d09b462341cb",
  "title": "The Euclidean Algorithm",
  "slug": "the-euclidean-algorithm",
  "metadata": {
    "description": "Learn about The Euclidean Algorithm with clear explanations and practical examples.",
    "keywords": [
      "divisor",
      "common",
      "greatest",
      "algorithm",
      "remainder",
      "subtraction",
      "using",
      "division",
      "begin",
      "equation"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 8,
    "category": "LearnDSA",
    "subcategory": "DSA Euclidean Algorithm"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "The Euclidean Algorithm",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Named after the ancient Greek mathematician Euclid, the Euclidean algorithm is the oldest known non-trivial algorithm, described in Euclid's famous book \"Elements\" from 300 BCE.\nThe Euclidean Algorithm\nThe Euclidean algorithm finds the greatest common divisor (gcd) of two numbers \\(a\\) and \\(b\\).\nThe greatest common divisor is the largest number that divides both \\(a\\) and \\(b\\) without leaving a remainder.\nFinding the greatest common divisor using division.\n\\(a=\\)\n{{nmbr1}}\n\\(b=\\)\n{{nmbr2}}\nResult:\n{{ buttonText }}\n{{ msgDone }}\nCalculations\nThe algorithm uses division with remainder. It takes the remainder from the \nHow it works:\nStart with the two initial numbers \\(a\\) and \\(b\\).\nDo a division with remainder: \\(a=q_0 \\cdot b + r_0\\)\nUse the remainder (\\(r_0\\)) and the divisor (\\(b\\)) from the last calculation to set up the \nRepeat steps 2 and 3 until the remainder is \\(0\\).\nThe second last remainder calculated is the greatest common divisor.\nContinue reading to see how the Euclidean algorithm can be done by hand, with programming, and to understand how and why the algorithm actually works.\nMathematical Terminology\nBelow are words used to describe the Euclidean Algorithm that you need to know to understand the explanations on this page.\nDivisor:\nA number we can use to divide a number by, without leaving a remainder. We say that 3 is a divisor of 6 because \\(6/3=2\\), without leaving a remainder (the remainder is 0).\nRemainder:\nThe part you are left with after dividing a number with another number. Dividing 7 by 3 is 2, with a remainder of 1. (So 3 is not a divisor of 7.)\nCommon divisor:\nFor numbers \\(a\\) and \\(b\\), a common divisor is a number that can divide both \\(a\\) and \\(b\\) without leaving a remainder. The common divisors of 18 and 12 are 2, 3, and 6, because both 18 and 12 can be divided by 2, 3, and 6 without producing a remainder.\nGreatest common divisor:\nThe largest of the common divisors. The greatest common divisor of 18 and 12 is 6 because that is the largest of the common divisors 2, 3, and 6.\nThe greatest common divisor is used in the mathematical field of Number Theory, and in cryptography for encrypting messages.\nNote:\nAll numbers used by the Euclidean algorithm are integers.\nManual Run Through\nTo understand how the Euclidean algorithm works, and to write the code for it, let's first run it manually to find the greatest common divisor of \\(120\\) and \\(25\\).\nTo do this we use division with remainder.\nStep 1:\nWe start with dividing \\(120\\) with \\(25\\):\n\\[\n\\begin{equation}\n\\begin{aligned}\n120 & = 4 \\cdot 25 + 20\n\\end{aligned}\n\\end{equation}\n\\]\nHow many times can we fit \\(25\\) inside \\(120\\)? It is \\(4\\) times, right? \\(4 \\cdot 25\\) is \\(100\\). We get the remainder \\(20\\) by subtracting \\(100\\) from \\(120\\).\nStep 2:\nWe use the \n\\[\n\\begin{equation}\n\\begin{aligned}\n25 & = 1 \\cdot 20 + 5\n\\end{aligned}\n\\end{equation}\n\\]\nWe can fit \\(20\\) inside \\(25\\) one time. We get the remainder \\(5\\) by subtracting \\(20\\) from \\(25\\).\nStep 3:\nIn the \n\\[\n\\begin{equation}\n\\begin{aligned}\n20 & = 4 \\cdot 5 + 0\n\\end{aligned}\n\\end{equation}\n\\]\nWe get \\(0\\) as the remainder, and that means that we are done with the calculations.\nThe greatest common divisor of \\(120\\) and \\(25\\) is \\(5\\).\nImplementation of The Euclidean Algorithm\nTo find the greatest common divisor using division, we continue running the algorithm until the remainder calculated is \\(0\\).\nThis is the same as saying we continue to run the algorithm as long as \\(b\\) is not \\(0\\). That is why\nb != 0\nis the condition in the\nwhile\nloop below.\nExample\nFinding the greatest common divisor of 120 and 25 using the Euclidean algorithm:\ndef gcd_division(a, b):\n    while b != 0:\n        remainder = a % b\n        print(f\"{a} = {a//b} * {b} + {remainder}\")\n        a = b\n        b = remainder\n    return a\n\na = 120\nb = 25\nprint(\"The Euclidean algorithm using division:\\n\")\nprint(f\"The GCD of {a} and {b} is: {gcd_division(a, b)}\")\nRun Example \u00bb\nThe Original Euclidean Algorithm\nInstead of using division like we did above, the original Euclidean algorithm as described in the book \"Elements\" over 2000 years ago uses subtraction.\nFinding the greatest common divisor using subtraction.\n\\(a=\\)\n{{nmbr1}}\n\\(b=\\)\n{{nmbr2}}\nResult:\n{{ buttonText }}\n{{ msgDone }}\nCalculations\nHow the Euclidean algorithm with subtraction works:\nStart with the two initial numbers \\(a\\) and \\(b\\).\nFind the difference \\( a-b=c\\). The difference \\(c\\) shares the same greatest common divisor as \\(a\\) and \\(b\\).\nTake the two lowest numbers of \\(a\\), \\(b\\), and \\(c\\), and find the difference between them.\nRepeat steps 2 and 3 until the difference is \\(0\\).\nThe second last difference calculated is the greatest common divisor.\nUsing subtraction instead of division is not as fast, but both the division method and the subtraction method uses the same mathematical principle:\nThe greatest common divisor of numbers \\(a\\) and \\(b\\), is also the greatest common divisor of the difference between \\(a\\) and \\(b\\).\nThis can be shown in just a few lines.\nNumbers \\(a\\) and \\(b\\) have a greatest common divisor \\(x\\).\nThis means that both \\(a\\) and \\(b\\) can be factorized like this:\n\\[\n\\begin{equation}\n\\begin{aligned}\na & = k \\cdot x \\\\\nb & = l \\cdot x \n\\end{aligned}\n\\end{equation}\n\\]\nAfter factorization, subtracting \\(b\\) from \\(a\\) gives us a very interesting result:\n\\[\n\\begin{equation}\n\\begin{aligned}\na-b & = k \\cdot x - l \\cdot x \\\\\n    & = (k-l) \\cdot x\n\\end{aligned}\n\\end{equation}\n\\]\nWe can see that the greatest common divisor (\\(x\\)) of \\(a\\) and \\(b\\) is also the greatest common divisor of the difference between \\(a\\) and \\(b\\)!\nThis principle is why the Euclidean algorithm works, it is what makes it possible.\nFinding The Greatest Common Divisor Using Subtraction\nUsing the principle described above, that the difference between \\(a\\) and \\(b\\) also shares the same greatest common divisor, we can use subtraction to find the greatest common divisor, like Euclid's original algorithm does.\nLet's find the greatest common divisor of \\(120\\) from \\(25\\) using subtraction.\n\\[\n\\begin{equation}\n\\begin{aligned}\n120 - 25 & = 95 \n\\end{aligned}\n\\end{equation}\n\\]\nAccording to the mathematical principle already described, the numbers \\(120\\), \\(25\\), and \\(95\\) all share the same greatest common divisor.\nThis means we can further reduce our problem by subtracting \\(25\\) from \\(95\\):\n\\[\n\\begin{equation}\n\\begin{aligned}\n95 - 25 & = 70 \n\\end{aligned}\n\\end{equation}\n\\]\nIf we continue like this, always taking the two lowest numbers from the \n\\[\n\\begin{equation}\n\\begin{aligned}\n70 - 25   & = 45 \\\\\n45 - 25   & = 20 \\\\\n25 - 20   & = 5 \\\\\n20 - 5    & = 15 \\\\\n15 - 5    & = 10 \\\\\n10 - 5    & = \\underline{\\textbf{5}} \\\\\n5 - 5     & = 0\n\\end{aligned}\n\\end{equation}\n\\]\nThe Euclidean algorithm using subtraction is done when the difference is \\(0\\).\nThe greatest common divisor of \\(120\\) and \\(25\\) can be found in the \nNow that we can calculate the greatest common divisor using subtraction by hand, it is easier to implement it in a programming language.\nImplementation of The Euclidean Algorithm Using Subtraction\nTo find the greatest common divisor using subtraction, we continue running the algorithm until the difference between \\(a\\) and \\(b\\) is \\(0\\), like we have just seen.\nThis is the same as saying we continue running the algorithm as long as \\(a\\) and \\(b\\) are different values. That is why\na != b\nis the condition in the\nwhile\nloop below.\nExample\nFinding the greatest common divisor of 120 and 25 using the Euclidean algorithm with subtraction:\ndef gcd_subtraction(a, b):\n    while a != b:\n        if a > b:\n            print(f\"{a} - {b} = {a-b}\")\n            a = a - b\n        else:\n            print(f\"{b} - {a} = {b-a}\")\n            b = b - a\n    return a\n\na = 120\nb = 25\nprint(\"The Euclidean algorithm using subtraction:\\n\")\nprint(f\"The GCD of {a} and {b} is: {gcd_subtraction(a, b)}\")\nRun Example \u00bb\nComparing The Subtraction Method With The Division Method\nTo see how good the division method can be to find the greatest common divisor, and how the methods are similar, we will:\nUse subtraction to find the greatest common divisor of \\(120\\) and \\(25\\).\nUse division with remainder to find the greatest common divisor of \\(120\\) and \\(25\\).\nCompare the subtraction and division methods.\n1. Using Subtraction\nFinding the greatest common divisor of \\(120\\) and \\(25\\) using subtraction:\n\\[\n\\begin{equation}\n\\begin{aligned}\n120 - 25  & = 95 \\\\\n95 - 25   & = 70 \\\\\n70 - 25   & = 45 \\\\\n45 - 25   & = 20 \\\\\n25 - 20   & = 5 \\\\\n20 - 5    & = 15 \\\\\n15 - 5    & = 10 \\\\\n10 - 5    & = \\underline{\\textbf{5}} \\\\\n5 - 5     & = 0\n\\end{aligned}\n\\end{equation}\n\\]\nUsing subtraction, the algorithm is finished when the difference is \\(0\\).\nIn the second last calculation we see that the greatest common divisor of \\(120\\) and \\(25\\) is \\(5\\).\nNotice how \\(25\\) and \\(5\\) must be subtracted many times, until finding the GCD.\n2. Using Division\nFinding the greatest common divisor of \\(120\\) and \\(25\\) using division with remainder looks like this:\n\\[\n\\begin{equation}\n\\begin{aligned}\n120  & = 4 \\cdot 25 + 20 \\\\\n25   & = 1 \\cdot 20 + \\underline{\\textbf{5}} \\\\\n20   & = 4 \\cdot 5 + 0\n\\end{aligned}\n\\end{equation}\n\\]\nUsing division, the Euclidean algorithm is finished when the remainder is \\(0\\).\nThe \n3. Comparison\nTake a look at the subtraction and division methods above.\nTo easier see that the division calculations are basically the same as the subtraction calculations, we can write the division with remainder calculations like this:\n\\[\n\\begin{equation}\n\\begin{aligned}\n120 - 4 \\cdot 25  & = 20 \\\\\n25 - 1 \\cdot 20   & = \\underline{\\textbf{5}} \\\\\n20 - 4 \\cdot 5    & = 0\n\\end{aligned}\n\\end{equation}\n\\]\nUsing subtraction, \\(25\\) is subtracted from \\(120\\) a total of \\(4\\) times, while the division method does this in just one step.\nSimilarly, the subtraction method subtracts \\(5\\) a total of \\(4\\) times, while the division method does the same in just one calculation.\nAs you can see, the methods do the same thing, the division method just does many subtractions in the same calculation, so that it finds the greatest common divisor faster.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "783c9265-f170-465d-ba15-1ef0650dd226",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "7151705c-dd15-40e3-9e25-148b0a290016",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "c82dc5d9-f8e4-4c6a-8bc9-4fee0a5fafbf",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is the Euclidean algorithm?",
      "options": [
        "None of the above.",
        "the largest number that divides both \\(a\\) and \\(b\\) without leaving a remainder",
        "the oldest known non-trivial algorithm",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of the Euclidean algorithm is 'the oldest known non-trivial algorithm'."
    },
    {
      "question": "What is The greatest common divisor?",
      "options": [
        "None of the above.",
        "None of the above.",
        "the largest number that divides both \\(a\\) and \\(b\\) without leaving a remainder",
        "the oldest known non-trivial algorithm"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of The greatest common divisor is 'the largest number that divides both \\(a\\) and \\(b\\) without leaving a remainder'."
    }
  ],
  "summary": "This tutorial covers The Euclidean Algorithm concepts and techniques. You'll learn how to use The Euclidean Algorithm effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of The Euclidean Algorithm and how to apply it in your projects."
}