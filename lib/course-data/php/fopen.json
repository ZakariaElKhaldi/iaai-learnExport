{
  "title": "PHP fopen() Function",
  "url": "https://www.w3schools.com/php/func_filesystem_fopen.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "PHP fopen() Function",
      "level": "h1"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "<?php\n$file = fopen(\"test.txt\", \"r\");\n  //Output lines until EOF is reached\nwhile(! feof($file)) {\u00a0 $line = fgets($file);\u00a0 echo $line. \"<br>\";}\n\nfclose($file);\n?>",
            "color": "rgb(0, 0, 0)",
            "class": "phpcolor"
          },
          {
            "text": "<?php",
            "color": "rgb(215, 58, 73)",
            "class": "phptagcolor"
          },
          {
            "text": "\"test.txt\"",
            "color": "rgb(0, 128, 0)",
            "class": "phpstringcolor"
          },
          {
            "text": "\"r\"",
            "color": "rgb(0, 128, 0)",
            "class": "phpstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "//Output lines until EOF is reached",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "while",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "echo",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\"<br>\"",
            "color": "rgb(0, 128, 0)",
            "class": "phpstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "?>",
            "color": "rgb(215, 58, 73)",
            "class": "phptagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "htmlHigh"
        ],
        "isNotranslate": true
      },
      "code": "<?php\n$file = fopen(\"test.txt\", \"r\");\n//Output lines until EOF is reached\nwhile(! feof($file)) {\u00a0 $line = fgets($file);\u00a0 echo $line. \"<br>\";}\n\nfclose($file);\n?>",
      "syntax_highlighting": [
        {
          "text": "<?php\n$file = fopen(\"test.txt\", \"r\");\n //Output lines until EOF is reached\nwhile(! feof($file)) {\u00a0 $line = fgets($file);\u00a0 echo $line. \"<br>\";}\n\nfclose($file);\n?>",
          "color": "black",
          "class": [
            "phpcolor"
          ]
        },
        {
          "text": "<?php",
          "color": "#d73a49",
          "class": [
            "phptagcolor"
          ]
        },
        {
          "text": "\"test.txt\"",
          "color": "green",
          "class": [
            "phpstringcolor"
          ]
        },
        {
          "text": "\"r\"",
          "color": "green",
          "class": [
            "phpstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "//Output lines until EOF is reached",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "while",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "echo",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\"<br>\"",
          "color": "green",
          "class": [
            "phpstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "?>",
          "color": "#d73a49",
          "class": [
            "phptagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate htmlHigh\">\n<span class=\"phpcolor\" style=\"color:black\"><span class=\"phptagcolor\" style=\"color:#d73a49\">&lt;?php</span><br/>\n$file = fopen(<span class=\"phpstringcolor\" style=\"color:green\">\"test.txt\"</span>, <span class=\"phpstringcolor\" style=\"color:green\">\"r\"</span>);<br/><span class=\"phpnumbercolor\" style=\"color:#905\">\n</span> <br/><span class=\"commentcolor\" style=\"color:slategray\">//Output lines until EOF is reached<br/></span>\n<span class=\"phpkeywordcolor\" style=\"color:#005cc5\">while</span>(! feof($file)) {<br/>\u00a0 $line = fgets($file);<br/>\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">echo</span> $line. <span class=\"phpstringcolor\" style=\"color:green\">\"&lt;br&gt;\"</span>;<br/>}<br/><span class=\"phpnumbercolor\" style=\"color:#905\">\n</span><br/>\nfclose($file);<br/>\n<span class=\"phptagcolor\" style=\"color:#d73a49\">?&gt;</span></span>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "<?php\n$file = fopen(\"test.txt\", \"r\");\n  //Output lines until EOF is reached\nwhile(! feof($file)) {\u00a0 $line = fgets($file);\u00a0 echo $line. \"<br>\";}\n\nfclose($file);\n?>",
          "color": "rgb(0, 0, 0)",
          "class": "phpcolor"
        },
        {
          "text": "<?php",
          "color": "rgb(215, 58, 73)",
          "class": "phptagcolor"
        },
        {
          "text": "\"test.txt\"",
          "color": "rgb(0, 128, 0)",
          "class": "phpstringcolor"
        },
        {
          "text": "\"r\"",
          "color": "rgb(0, 128, 0)",
          "class": "phpstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "//Output lines until EOF is reached",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "while",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "echo",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\"<br>\"",
          "color": "rgb(0, 128, 0)",
          "class": "phpstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "?>",
          "color": "rgb(215, 58, 73)",
          "class": "phptagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Definition and Usage",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The fopen() function opens a file or URL.",
      "html": "<p>The fopen() function opens a file or URL.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: When writing to a text file, be sure to use the correct line-ending character! Unix systems use \\n, Windows systems use \\r\\n, and Macintosh systems use \\r as the line ending character. Windows offers a translation flag ('t') which will translate \\n to \\r\\n when working with the file. You can also use 'b' to force binary mode. To use these flags, specify either 'b' or 't' as the last character of the mode parameter.",
      "html": "<p><b>Note:</b> When writing to a text file, be sure to use the correct \nline-ending character! Unix systems use \\n, Windows systems use \\r\\n, and Macintosh \nsystems use \\r as the line ending character.\nWindows offers a translation flag ('t') which will translate \\n to \\r\\n when working with the file. \nYou can also use 'b' to force binary mode. To use \nthese flags, specify either 'b' or 't' as the last character of the mode parameter.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Syntax",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate\"><div>\nfopen(<em>filename</em>, <em>mode</em>, <em>include_path</em>, <em>context</em>)\n</div></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Parameter Values",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:20%\">Parameter</th>\n<th style=\"width:80%\">Description</th>\n</tr>\n<tr>\n<td><em>filename</em></td>\n<td>Required. Specifies the file or URL to open</td>\n</tr>\n<tr>\n<td><em>mode</em></td>\n<td>Required. Specifies the type of access you require to the file/stream.<p>Possible values:</p>\n<ul>\n<li>\"r\" - Read only. Starts at the beginning of the file</li>\n<li>\"r+\" - Read/Write. Starts at the beginning of the file</li>\n<li>\"w\" - Write only. Opens and truncates the file; or creates a new  file if it doesn't exist. \n    Place file pointer at the beginning of the file</li>\n<li>\"w+\" - Read/Write. Opens and truncates the file; or creates a new  file if it doesn't exist. \n    Place file pointer at the beginning of the file</li>\n<li>\"a\" - Write only. Opens and writes to the end of the file or \n    creates a new file if it doesn't exist</li>\n<li>\"a+\" - Read/Write. Preserves file content by writing to the \n    end of the file</li>\n<li>\"x\" - Write only. Creates a new file. Returns FALSE and an \n    error if file already exists</li>\n<li>\"x+\" - Read/Write. Creates a new file. Returns FALSE and an \n    error if file already exists</li>\n<li>\"c\" - Write only. Opens the file; or creates a new  file if it doesn't exist. \n    Place file pointer at the beginning of the file</li>\n<li>\"c+\" - Read/Write. Opens the file; or creates a new  file if it doesn't exist. \n    Place file pointer at the beginning of the file</li>\n<li>\"e\" - Only available in PHP compiled on POSIX.1-2008 conform systems. </li>\n</ul>\n</td>\n</tr>\n<tr>\n<td><em>include_path</em></td>\n<td>Optional. Set this parameter to '1' if you want to search for the file in the include_path (in php.ini) as well</td>\n</tr>\n<tr>\n<td><em>context</em></td>\n<td>Optional. Specifies the context of the file handle. Context is a set of options that can modify the behavior of a stream</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Technical Details",
      "level": "h2"
    }
  ]
}