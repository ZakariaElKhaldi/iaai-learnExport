{
  "title": "PHP Form Validation",
  "url": "https://www.w3schools.com/php/php_form_validation.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "PHP Form Validation",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This and the next chapters show how to use PHP to validate form data.",
      "html": "<p class=\"intro\">This and the next chapters show how to use PHP to validate form data.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "PHP Form Validation",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "",
      "html": "<p>\n</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Think SECURITY when processing PHP forms!",
      "html": "<p><strong>Think SECURITY when processing PHP forms!</strong></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "These pages will show how to process PHP forms with security in mind. Proper validation of form data is important to protect your form from hackers and spammers!",
      "html": "<p>These pages will show how to process PHP forms with security in mind. Proper validation of form data is important \nto protect your form from hackers and spammers!</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The HTML form we will be working at in these chapters, contains various input fields: required and optional text fields, radio buttons, and a submit button:",
      "html": "<p>The HTML form we will be working at in these chapters, contains various input fields: \nrequired and optional text fields, radio buttons, and a submit button:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The validation rules for the form above are as follows:",
      "html": "<p>The validation rules for the form above are as follows:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:25%\">Field</th>\n<th style=\"width:75%\">Validation Rules</th>\n</tr>\n<tr>\n<td>Name</td>\n<td>Required. + Must only contain letters and whitespace</td>\n</tr>\n<tr>\n<td>E-mail</td>\n<td>Required. + Must contain a valid email address (with @ and .)</td>\n</tr>\n<tr>\n<td>Website</td>\n<td>Optional. If present, it must contain a valid URL</td>\n</tr>\n<tr>\n<td>Comment</td>\n<td>Optional. Multi-line input field (textarea)</td>\n</tr>\n<tr>\n<td>Gender</td>\n<td>Required. Must select one</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "First we will look at the plain HTML code for the form:",
      "html": "<p>First we will look at the plain HTML code for the form:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Text Fields",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The name, email, and website fields are text input elements, and the comment field is a textarea.",
      "html": "<p>The name, email, and website fields are text input elements, and the comment \nfield is a textarea.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The HTML code looks like this:",
      "html": "<p>The HTML code looks like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "language-html"
        ],
        "isNotranslate": true
      },
      "code": "Name:\n<\ninput\n\ntype\n=\n\"\ntext\n\"\n\nname\n=\n\"\nname\n\"\n>\n\nE-mail:\n<\ninput\n\ntype\n=\n\"\ntext\n\"\n\nname\n=\n\"\nemail\n\"\n>\n\nWebsite:\n<\ninput\n\ntype\n=\n\"\ntext\n\"\n\nname\n=\n\"\nwebsite\n\"\n>\n\nComment:\n<\ntextarea\n\nname\n=\n\"\ncomment\n\"\n\nrows\n=\n\"\n5\n\"\n\ncols\n=\n\"\n40\n\"\n>\n</\ntextarea\n>",
      "language": "html",
      "code_html": "<pre class=\"notranslate language-html\" style=\"border-radius:5px;\" tabindex=\"0\"><code class=\"language-html\">Name: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\nE-mail: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\nWebsite: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>website<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\nComment: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>comment<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cols</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>40<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "language-html"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "language-html"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Radio Buttons",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The gender fields are radio buttons and the HTML code looks like this:",
      "html": "<p>The gender fields are radio buttons and the HTML code looks like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "language-html"
        ],
        "isNotranslate": true
      },
      "code": "Gender:\n\n<\ninput\n\ntype\n=\n\"\nradio\n\"\n\nname\n=\n\"\ngender\n\"\n\nvalue\n=\n\"\nfemale\n\"\n>\nFemale\n\n<\ninput\n\ntype\n=\n\"\nradio\n\"\n\nname\n=\n\"\ngender\n\"\n\nvalue\n=\n\"\nmale\n\"\n>\nMale\n\n<\ninput\n\ntype\n=\n\"\nradio\n\"\n\nname\n=\n\"\ngender\n\"\n\nvalue\n=\n\"\nother\n\"\n>\nOther",
      "language": "html",
      "code_html": "<pre class=\"notranslate language-html\" style=\"border-radius:5px;\" tabindex=\"0\"><code class=\"language-html\">Gender:\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>gender<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>female<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Female\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>gender<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>male<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Male\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>gender<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>other<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Other\n</code></pre>",
      "code_classes": [
        "notranslate",
        "language-html"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "language-html"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Form Element",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The HTML code of the form looks like this:",
      "html": "<p>The HTML code of the form looks like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "language-php"
        ],
        "isNotranslate": true
      },
      "code": "<\nform\n\nmethod\n=\n\"\npost\n\"\n\naction\n=\n\"\n<?php\n\necho\n\nhtmlspecialchars\n(\n$_SERVER\n[\n\"PHP_SELF\"\n]\n)\n;\n?>\n\"\n>",
      "language": "php",
      "code_html": "<pre class=\"notranslate language-php\" style=\"border-radius:5px;\" tabindex=\"0\"><code class=\"language-php\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword keyword-echo\">echo</span> <span class=\"token function\">htmlspecialchars</span><span class=\"token punctuation\">(</span><span class=\"token global\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"PHP_SELF\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "language-php"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "language-php"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When the form is submitted, the form data is sent with method=\"post\".",
      "html": "<p>When the form is submitted, the form data is sent with method=\"post\".</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is the $_SERVER[\"PHP_SELF\"] variable? The $_SERVER[\"PHP_SELF\"] is a super global variable that returns the filename of the currently executing script.",
      "html": "<p><strong>What is the <code>$_SERVER[\"PHP_SELF\"]</code> variable?</strong><br/><br/>The \n<code>$_SERVER[\"PHP_SELF\"]</code> is a super global variable that returns the filename of the \ncurrently executing script.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "So, the $_SERVER[\"PHP_SELF\"] sends the submitted form data to the page itself, instead of jumping to a different page. This way, the user will get error messages on the same page as the form.",
      "html": "<p>So, the <code>$_SERVER[\"PHP_SELF\"]</code> sends the submitted form data to the page itself, instead of jumping to a different page. \nThis way, the user will get error messages on the same page as the form.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is the htmlspecialchars() function? The htmlspecialchars() function converts special characters into HTML entities. This means that it will replace HTML characters like < and > with &lt; and &gt; . This prevents attackers from exploiting the code by injecting HTML or Javascript code (Cross-site Scripting attacks) in forms.",
      "html": "<p><strong>What is the <code>htmlspecialchars()</code> function?</strong><br/><br/>\nThe <code>htmlspecialchars()</code> function converts special characters into HTML entities. \nThis means that it will replace HTML characters like <code>&lt;</code> and <code>&gt;</code>\nwith <code>&amp;lt;</code> and <code>&amp;gt;</code>. \nThis prevents attackers from exploiting the code by injecting HTML or Javascript code\n(Cross-site Scripting attacks) in forms.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Warning!",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The $_SERVER[\"PHP_SELF\"] variable can be used by hackers!",
      "html": "<p>The <code>$_SERVER[\"PHP_SELF\"]</code> variable can be used by hackers!</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If PHP_SELF is used in your page then a user can enter a slash / and then some Cross Site Scripting (XSS) commands to execute.",
      "html": "<p>If PHP_SELF is used in your page then a user can enter a slash <code>/</code> and then\nsome Cross Site Scripting (XSS) commands to execute.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Cross-site scripting (XSS) is a type of computer security vulnerability typically found in Web applications. XSS enables attackers to inject client-side script into Web pages viewed by other users.",
      "html": "<p><strong>Cross-site scripting (XSS) is a type of computer security vulnerability \ntypically found in Web applications. XSS enables attackers to inject client-side \nscript into Web pages viewed by other users.\n</strong></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Assume we have the following form in a page named \"test_form.php\":",
      "html": "<p>Assume we have the following form in a page named \"test_form.php\":</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "language-php"
        ],
        "isNotranslate": true
      },
      "code": "<\nform\n\nmethod\n=\n\"\npost\n\"\n\naction\n=\n\"\n<?php\n\necho\n\n$_SERVER\n[\n\"PHP_SELF\"\n]\n;\n?>\n\"\n>",
      "language": "php",
      "code_html": "<pre class=\"notranslate language-php\" style=\"border-radius:5px;\" tabindex=\"0\"><code class=\"language-php\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword keyword-echo\">echo</span> <span class=\"token global\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"PHP_SELF\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "language-php"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "language-php"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Now, if a user enters the normal URL in the address bar like \"http://www.example.com/test_form.php\", the above code will be translated to:",
      "html": "<p>Now, if a user enters the normal URL in the address bar like \n\"http://www.example.com/test_form.php\", the above code will be translated to:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "language-html"
        ],
        "isNotranslate": true
      },
      "code": "<\nform\n\nmethod\n=\n\"\npost\n\"\n\naction\n=\n\"\ntest_form.php\n\"\n>",
      "language": "html",
      "code_html": "<pre class=\"notranslate language-html\" style=\"border-radius:5px;\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test_form.php<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "language-html"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "language-html"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "So far, so good.",
      "html": "<p>So far, so good.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "However, consider that a user enters the following URL in the address bar:",
      "html": "<p>However, consider that a user enters the following URL in the address bar:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate\"><div>\nhttp://www.example.com/test_form.php/%22%3E%3Cscript%3Ealert('hacked')%3C/script%3E</div></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In this case, the above code will be translated to:",
      "html": "<p>In this case, the above code will be translated to:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "language-html"
        ],
        "isNotranslate": true
      },
      "code": "<\nform\n\nmethod\n=\n\"\npost\n\"\n\naction\n=\n\"\ntest_form.php/\n\"\n>\n<\nscript\n>\nalert\n(\n'hacked'\n)\n</\nscript\n>",
      "language": "html",
      "code_html": "<pre class=\"notranslate language-html\" style=\"border-radius:5px;\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test_form.php/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\"><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hacked'</span><span class=\"token punctuation\">)</span></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "language-html"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "language-html"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This code adds a script tag and an alert command. And when the page loads, the JavaScript code will be executed (the user will see an alert box). This is just a simple and harmless example how the PHP_SELF variable can be exploited.",
      "html": "<p>This code adds a script tag and an alert command. And when the page loads, the \nJavaScript code will be executed (the user will see an alert box). This is just a simple \nand harmless example how the PHP_SELF variable can be exploited.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Be aware of that any JavaScript code can be added inside the <script> tag! A hacker can redirect the user to a file on another server, and that file can hold malicious code that can alter the global variables or submit the form to another address to save the user data, for example.",
      "html": "<p>Be aware of that <strong>any JavaScript code can be added inside the  \n&lt;script&gt; tag! </strong>A hacker can redirect the user to a file on another server, \nand that file can hold malicious code \nthat can alter the global variables or submit the form to another \naddress to save the user data, for example.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "How To Avoid $_SERVER[\"PHP_SELF\"] Exploits?",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "$_SERVER[\"PHP_SELF\"] exploits can be avoided by using the htmlspecialchars() function.",
      "html": "<p><code>$_SERVER[\"PHP_SELF\"]</code> exploits can be avoided by using the\n<code>htmlspecialchars()</code> function.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The form code should look like this:",
      "html": "<p>The form code should look like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "language-php"
        ],
        "isNotranslate": true
      },
      "code": "<\nform\n\nmethod\n=\n\"\npost\n\"\n\naction\n=\n\"\n<?php\n\necho\n\nhtmlspecialchars\n(\n$_SERVER\n[\n\"PHP_SELF\"\n]\n)\n;\n?>\n\"\n>",
      "language": "php",
      "code_html": "<pre class=\"notranslate language-php\" style=\"border-radius:5px;\" tabindex=\"0\"><code class=\"language-php\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword keyword-echo\">echo</span> <span class=\"token function\">htmlspecialchars</span><span class=\"token punctuation\">(</span><span class=\"token global\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"PHP_SELF\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "language-php"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "language-php"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The htmlspecialchars() function converts special characters to HTML entities. Now if the user tries to exploit the PHP_SELF variable, it will result in the following output:",
      "html": "<p>The <code>htmlspecialchars()</code> function converts special characters to HTML entities.\nNow if the user tries to exploit the PHP_SELF variable, it will result in the following output:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "language-html"
        ],
        "isNotranslate": true
      },
      "code": "<\nform\n\nmethod\n=\n\"\npost\n\"\n\naction\n=\n\"\ntest_form.php/\n&quot;\n&gt;\n&lt;\nscript\n&gt;\nalert('hacked')\n&lt;\n/script\n&gt;\n\"\n>",
      "language": "html",
      "code_html": "<pre class=\"notranslate language-html\" style=\"border-radius:5px;\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test_form.php/<span class=\"token entity named-entity\" title='\"'>&amp;quot;</span><span class=\"token entity named-entity\" title=\"&gt;\">&amp;gt;</span><span class=\"token entity named-entity\" title=\"&lt;\">&amp;lt;</span>script<span class=\"token entity named-entity\" title=\"&gt;\">&amp;gt;</span>alert('hacked')<span class=\"token entity named-entity\" title=\"&lt;\">&amp;lt;</span>/script<span class=\"token entity named-entity\" title=\"&gt;\">&amp;gt;</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "language-html"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "language-html"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The exploit attempt fails, and no harm is done!",
      "html": "<p>The exploit attempt fails, and no harm is done!</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Validate Form Data With PHP",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The first thing we will do is to pass all variables through PHP's htmlspecialchars() function.",
      "html": "<p>The first thing we will do is to pass all variables through PHP's <code>htmlspecialchars()</code> function.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When we use the htmlspecialchars() function; then if a user tries to submit the following in a text field:",
      "html": "<p>When we use the <code>htmlspecialchars()</code> function;\nthen if a user tries to submit the following in a text field:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate\"><div>\n&lt;script&gt;location.href('http://www.hacked.com')&lt;/script&gt;</div></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "- this would not be executed, because it would be saved as HTML escaped code, like this:",
      "html": "<p>- this would not be executed, because it would be saved as HTML escaped code, like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "language-html"
        ],
        "isNotranslate": true
      },
      "code": "&lt;\nscript\n&gt;\nlocation.href('http://www.hacked.com')\n&lt;\n/script\n&gt;",
      "language": "html",
      "code_html": "<pre class=\"notranslate language-html\" style=\"border-radius:5px;\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token entity named-entity\" title=\"&lt;\">&amp;lt;</span>script<span class=\"token entity named-entity\" title=\"&gt;\">&amp;gt;</span>location.href('http://www.hacked.com')<span class=\"token entity named-entity\" title=\"&lt;\">&amp;lt;</span>/script<span class=\"token entity named-entity\" title=\"&gt;\">&amp;gt;</span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "language-html"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "language-html"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The code is now safe to be displayed on a page or inside an e-mail.",
      "html": "<p>The code is now safe to be displayed on a page or inside an e-mail.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We will also do two more things when the user submits the form:",
      "html": "<p>We will also do two more things when the user submits the form:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The next step is to create a function that will do all the checking for us (which is much more convenient than writing the same code over and over again).",
      "html": "<p>The next step is to create a function that will do all the checking for us \n(which is much more convenient than writing the same code over and over again).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We will name the function test_input() .",
      "html": "<p>We will name the function <code>test_input()</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Now, we can check each $_POST variable with the test_input() function, and the script looks like this:",
      "html": "<p>Now, we can \ncheck each <code>$_POST</code> variable with the <code>test_input()</code> function, and the script looks like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-php"
        ],
        "isNotranslate": true
      },
      "code": "// define variables and set to empty values\n\n\n$name\n\n=\n\n$email\n\n=\n\n$gender\n\n=\n\n$comment\n\n=\n\n$website\n\n=\n\n\"\"\n;\n\n\n\nif\n\n(\n$_SERVER\n[\n\"REQUEST_METHOD\"\n]\n\n==\n\n\"POST\"\n)\n\n{\n\n\n$name\n\n=\n\ntest_input\n(\n$_POST\n[\n\"name\"\n]\n)\n;\n\n\n$email\n\n=\n\ntest_input\n(\n$_POST\n[\n\"email\"\n]\n)\n;\n\n\n$website\n\n=\n\ntest_input\n(\n$_POST\n[\n\"website\"\n]\n)\n;\n\n\n$comment\n\n=\n\ntest_input\n(\n$_POST\n[\n\"comment\"\n]\n)\n;\n\n\n$gender\n\n=\n\ntest_input\n(\n$_POST\n[\n\"gender\"\n]\n)\n;\n\n\n}\n\n\n\nfunction\n\ntest_input\n(\n$data\n)\n\n{\n\n\n$data\n\n=\n\ntrim\n(\n$data\n)\n;\n\n\n$data\n\n=\n\nstripslashes\n(\n$data\n)\n;\n\n\n$data\n\n=\n\nhtmlspecialchars\n(\n$data\n)\n;\n\n\nreturn\n\n$data\n;\n\n\n}",
      "language": "php",
      "code_html": "<pre class=\"notranslate w3-white language-php\" tabindex=\"0\"><code class=\"language-php\"><span class=\"token comment\">// define variables and set to empty values</span>\n<span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$email</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$gender</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$comment</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$website</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span><span class=\"token global\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"REQUEST_METHOD\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"POST\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token function\">test_input</span><span class=\"token punctuation\">(</span><span class=\"token global\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token variable\">$email</span> <span class=\"token operator\">=</span> <span class=\"token function\">test_input</span><span class=\"token punctuation\">(</span><span class=\"token global\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"email\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token variable\">$website</span> <span class=\"token operator\">=</span> <span class=\"token function\">test_input</span><span class=\"token punctuation\">(</span><span class=\"token global\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"website\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token variable\">$comment</span> <span class=\"token operator\">=</span> <span class=\"token function\">test_input</span><span class=\"token punctuation\">(</span><span class=\"token global\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"comment\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token variable\">$gender</span> <span class=\"token operator\">=</span> <span class=\"token function\">test_input</span><span class=\"token punctuation\">(</span><span class=\"token global\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"gender\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-function\">function</span> <span class=\"token function-definition function\">test_input</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token function\">stripslashes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token function\">htmlspecialchars</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-php"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-php"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Notice that at the start of the script, we check whether the form has been submitted using $_SERVER[\"REQUEST_METHOD\"] . If the REQUEST_METHOD is POST , then the form has been submitted - and it should be validated. If it has not been submitted, skip the validation and display a blank form.",
      "html": "<p>Notice that at the start of the script, we check whether the form has been \nsubmitted using <code>$_SERVER[\"REQUEST_METHOD\"]</code>.\nIf the <code>REQUEST_METHOD</code> is <code>POST</code>, then \nthe form has been submitted - and it \nshould be validated. If it has not been submitted, skip the validation and \ndisplay a blank form.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "However, in the example above, all input fields are optional. The script works fine even if the user does not enter any data.",
      "html": "<p>However, in the example above, all input fields are optional. The script \nworks fine even if the user does not enter any data.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The next step is to make input fields required and create error messages if needed.",
      "html": "<p>The next step is to make input fields required and create error messages if \nneeded.</p>"
    }
  ]
}