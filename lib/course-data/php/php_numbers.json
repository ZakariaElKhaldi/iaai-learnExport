{
  "title": "PHP Numbers",
  "url": "https://www.w3schools.com/php/php_numbers.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "PHP Numbers",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In this chapter we will look in depth into Integers, Floats, and Number Strings.",
      "html": "<p class=\"intro\">In this chapter we will look in depth into Integers, Floats, and \nNumber Strings.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "PHP Numbers",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "There are three main numeric types in PHP:",
      "html": "<p>There are three main numeric types in PHP:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In addition, PHP has two more data types used for numbers:",
      "html": "<p>In addition, PHP has two more data types used for numbers:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Variables of numeric types are created when you assign a value to them:",
      "html": "<p>Variables of numeric types are created when you assign a value to them:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-php"
        ],
        "isNotranslate": true
      },
      "code": "$a\n\n=\n\n5\n;\n\n\n$b\n\n=\n\n5.34\n;\n\n\n$c\n\n=\n\n\"25\"\n;",
      "language": "php",
      "code_html": "<pre class=\"notranslate w3-white language-php\" tabindex=\"0\"><code class=\"language-php\"><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token number\">5.34</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"25\"</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-php"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-php"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To verify the type of any object in PHP, use the var_dump() function:",
      "html": "<p>To verify the type of any object in PHP, use the <code>var_dump()</code> function:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_numbers1",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-php"
        ],
        "isNotranslate": true
      },
      "code": "var_dump\n(\n$a\n)\n;\n\n\nvar_dump\n(\n$b\n)\n;\n\n\nvar_dump\n(\n$c\n)\n;",
      "language": "php",
      "code_html": "<pre class=\"notranslate w3-white language-php\" tabindex=\"0\"><code class=\"language-php\"><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-php"
      ],
      "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_numbers1",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-php"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "PHP Integers",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "2, 256, -256, 10358, -179567 are all integers.",
      "html": "<p>2, 256, -256, 10358, -179567 are all integers.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "An integer is a number without any decimal part.",
      "html": "<p>An integer is a number without any decimal part.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "An integer data type is a non-decimal number between -2147483648 and 2147483647 in 32 bit systems, and between -9223372036854775808 and 9223372036854775807 in 64 bit systems. A value greater (or lower) than this, will be stored as float, because it exceeds the limit of an integer.",
      "html": "<p>An integer data type is a non-decimal number between -2147483648 and \n2147483647 in 32 bit systems, and between -9223372036854775808 and \n9223372036854775807 in 64 bit systems. A value greater (or lower) than this, will be stored as float, \nbecause it exceeds the limit of an integer.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: Another important thing to know is that even if 4 * 2.5 is 10, the result is stored as float, because one of the operands is a float (2.5).",
      "html": "<p><strong>Note:</strong> Another important thing to know is that even if 4 * 2.5 is 10, the result is \nstored as float, because one of the operands is a float (2.5).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Here are some rules for integers:",
      "html": "<p>Here are some rules for integers:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "PHP has the following predefined constants for integers:",
      "html": "<p>PHP has the following predefined constants for integers:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "PHP has the following functions to check if the type of a variable is integer:",
      "html": "<p>PHP has the following functions to check if the type of a variable is \ninteger:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_numbers_integer",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-php"
        ],
        "isNotranslate": true
      },
      "code": "$x\n\n=\n\n5985\n;\n\n\nvar_dump\n(\nis_int\n(\n$x\n)\n)\n;\n\n\n\n$x\n\n=\n\n59.85\n;\n\n\nvar_dump\n(\nis_int\n(\n$x\n)\n)\n;",
      "language": "php",
      "code_html": "<pre class=\"notranslate w3-white language-php\" tabindex=\"0\"><code class=\"language-php\"><span class=\"token variable\">$x</span> <span class=\"token operator\">=</span> <span class=\"token number\">5985</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_int</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$x</span> <span class=\"token operator\">=</span> <span class=\"token number\">59.85</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_int</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-php"
      ],
      "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_numbers_integer",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-php"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "PHP Floats",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A float is a number with a decimal point or a number in exponential form.",
      "html": "<p>A float is a number with a decimal point or a number in exponential form.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "2.0, 256.4, 10.358, 7.64E+5, 5.56E-5 are all floats.",
      "html": "<p>2.0, 256.4, 10.358, 7.64E+5, 5.56E-5 are all floats.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The float data type can commonly store a value up to 1.7976931348623E+308 (platform dependent), and have a maximum precision of 14 digits.",
      "html": "<p>The float data type can commonly store a value up to 1.7976931348623E+308 \n(platform dependent), and have a maximum precision of 14 digits.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "PHP has the following predefined constants for floats (from PHP 7.2):",
      "html": "<p>PHP has the following predefined constants for floats (from PHP 7.2):</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "PHP has the following functions to check if the type of a variable is float:",
      "html": "<p>PHP has the following functions to check if the type of a variable is \nfloat:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_numbers_float",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-php"
        ],
        "isNotranslate": true
      },
      "code": "$x\n\n=\n\n10.365\n;\n\n\nvar_dump\n(\nis_float\n(\n$x\n)\n)\n;",
      "language": "php",
      "code_html": "<pre class=\"notranslate w3-white language-php\" tabindex=\"0\"><code class=\"language-php\"><span class=\"token variable\">$x</span> <span class=\"token operator\">=</span> <span class=\"token number\">10.365</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_float</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-php"
      ],
      "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_numbers_float",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-php"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "PHP Infinity",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A numeric value that is larger than PHP_FLOAT_MAX is considered infinite.",
      "html": "<p>A numeric value that is larger than <code>PHP_FLOAT_MAX</code> is considered infinite.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "PHP has the following functions to check if a numeric value is finite or infinite:",
      "html": "<p>PHP has the following functions to check if a numeric value is finite or \ninfinite:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "However, the PHP var_dump() function returns the data type and value:",
      "html": "<p>However, the PHP <code>var_dump()</code> function returns the data type and value:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_numbers_infinite",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-php"
        ],
        "isNotranslate": true
      },
      "code": "$x\n\n=\n\n1.9e411\n;\n\n\nvar_dump\n(\n$x\n)\n;",
      "language": "php",
      "code_html": "<pre class=\"notranslate w3-white language-php\" tabindex=\"0\"><code class=\"language-php\"><span class=\"token variable\">$x</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.9e411</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-php"
      ],
      "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_numbers_infinite",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-php"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "PHP NaN",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "NaN stands for Not a Number.",
      "html": "<p><code>NaN</code> stands for Not a Number.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "NaN is used for impossible mathematical operations.",
      "html": "<p><code>NaN</code> is used for impossible mathematical operations.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "PHP has the following functions to check if a value is not a number:",
      "html": "<p>PHP has the following functions to check if a value is not a number:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "However, the PHP var_dump() function returns the data type and value:",
      "html": "<p>However, the PHP <code>var_dump()</code> function returns the data type and value:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_numbers_nan",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-php"
        ],
        "isNotranslate": true
      },
      "code": "$x\n\n=\n\nacos\n(\n8\n)\n;\n\n\nvar_dump\n(\n$x\n)\n;",
      "language": "php",
      "code_html": "<pre class=\"notranslate w3-white language-php\" tabindex=\"0\"><code class=\"language-php\"><span class=\"token variable\">$x</span> <span class=\"token operator\">=</span> <span class=\"token function\">acos</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-php"
      ],
      "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_numbers_nan",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-php"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "PHP Numerical Strings",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The PHP is_numeric() function can be used to find whether a variable is numeric. The function returns true if the variable is a number or a numeric string, false otherwise.",
      "html": "<p>The PHP <code>is_numeric()</code> function can be used to find whether a variable is \nnumeric. The function returns true if the variable is a number or a numeric \nstring, false otherwise.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_numbers_numeric",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-php"
        ],
        "isNotranslate": true
      },
      "code": "$x\n\n=\n\n5985\n;\n\n\nvar_dump\n(\nis_numeric\n(\n$x\n)\n)\n;\n\n\n\n$x\n\n=\n\n\"5985\"\n;\n\n\nvar_dump\n(\nis_numeric\n(\n$x\n)\n)\n;\n\n\n$x\n\n=\n\n\"59.85\"\n\n+\n\n100\n;\n\n\nvar_dump\n(\nis_numeric\n(\n$x\n)\n)\n;\n\n\n\n$x\n\n=\n\n\"Hello\"\n;\n\n\nvar_dump\n(\nis_numeric\n(\n$x\n)\n)\n;",
      "language": "php",
      "code_html": "<pre class=\"notranslate w3-white language-php\" tabindex=\"0\"><code class=\"language-php\"><span class=\"token variable\">$x</span> <span class=\"token operator\">=</span> <span class=\"token number\">5985</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$x</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"5985\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$x</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"59.85\"</span> <span class=\"token operator\">+</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$x</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"Hello\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-php"
      ],
      "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_numbers_numeric",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-php"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: From PHP 7.0: The is_numeric() function will return FALSE for numeric strings in hexadecimal form (e.g. 0xf4c3b00c), as they are no longer considered as numeric strings.",
      "html": "<p><strong>Note:</strong> From PHP 7.0: The <code>is_numeric()</code> function will return \nFALSE for numeric strings in hexadecimal form (e.g. 0xf4c3b00c), as they are no \nlonger considered as numeric strings.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "PHP Casting Strings and Floats to Integers",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Sometimes you need to cast a numerical value into another data type.",
      "html": "<p>Sometimes you need to cast a numerical value into another data type.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The (int) , (integer) , and intval() functions are often used to convert a value to an integer.",
      "html": "<p>The<code> (int)</code>, <code>(integer)</code>, and \n<code>intval()</code> functions are often used to convert a value \nto an integer.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_numbers_cast",
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-php"
        ],
        "isNotranslate": true
      },
      "code": "// Cast float to int\n\n\n$x\n\n=\n\n23465.768\n;\n\n\n$int_cast\n\n=\n\n(\nint\n)\n$x\n;\n\n\necho\n\n$int_cast\n;\n\n\n\necho\n\n\"<br>\"\n;\n\n\n\n// Cast string to int\n\n\n$x\n\n=\n\n\"23465.768\"\n;\n\n\n$int_cast\n\n=\n\n(\nint\n)\n$x\n;\n\n\necho\n\n$int_cast\n;",
      "language": "php",
      "code_html": "<pre class=\"notranslate w3-white language-php\" tabindex=\"0\"><code class=\"language-php\"><span class=\"token comment\">// Cast float to int</span>\n<span class=\"token variable\">$x</span> <span class=\"token operator\">=</span> <span class=\"token number\">23465.768</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$int_cast</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting keyword-int\">int</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword keyword-echo\">echo</span> <span class=\"token variable\">$int_cast</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-echo\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Cast string to int</span>\n<span class=\"token variable\">$x</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"23465.768\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$int_cast</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting keyword-int\">int</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword keyword-echo\">echo</span> <span class=\"token variable\">$int_cast</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-php"
      ],
      "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_numbers_cast",
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-php"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "PHP Casting chapter",
          "href": "https://www.w3schools.com/php_casting.asp",
          "title": ""
        }
      ],
      "text": "Learn more about casting in the PHP Casting chapter .",
      "html": "<p>Learn more about casting in the <a href=\"php_casting.asp\">PHP Casting chapter</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is a correct function to use to check if a variable is an integer?",
      "html": "<p>What is a correct function to use to check if a variable is an integer?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "What is a correct function to use to check if a variable is an integer?",
        "options": [
          {
            "value": "0",
            "text": "isnumeric()"
          },
          {
            "value": "1",
            "text": "typeisint()"
          },
          {
            "value": "2",
            "text": "is_int()"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_numbers1"
      },
      "quiz_type": "quiz",
      "question": "What is a correct function to use to check if a variable is an integer?",
      "options": [
        {
          "value": "0",
          "text": "isnumeric()"
        },
        {
          "value": "1",
          "text": "typeisint()"
        },
        {
          "value": "2",
          "text": "is_int()"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_numbers1",
      "html": "<form action=\"exercise.asp?x=xrcise_numbers1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\"><code>isnumeric()</code></label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\"><code>typeisint()</code></label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\"><code>is_int()</code></label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}