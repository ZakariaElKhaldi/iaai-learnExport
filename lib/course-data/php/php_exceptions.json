{
  "title": "PHP Exceptions",
  "url": "https://www.w3schools.com/php/php_exceptions.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "PHP Exceptions",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "What is an Exception?",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "An exception is an object that describes an error or unexpected behaviour of a PHP script.",
      "html": "<p>An exception is an object that describes an error or unexpected behaviour of a PHP script.\n</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Exceptions are thrown by many PHP functions and classes.",
      "html": "<p>Exceptions are thrown by many PHP functions and classes.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "User defined functions and classes can also throw exceptions.",
      "html": "<p>User defined functions and classes can also throw exceptions.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Exceptions are a good way to stop a function when it comes across data that it cannot use.",
      "html": "<p>Exceptions are a good way to stop a function when it comes across data that it cannot\nuse.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Throwing an Exception",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The throw statement allows a user defined function or method to throw an exception. When an exception is thrown, the code following it will not be executed.",
      "html": "<p>The <code>throw</code> statement allows a user defined \nfunction or method to throw an exception. When an exception is thrown, the code \nfollowing it will not be executed.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If an exception is not caught, a fatal error will occur with an \"Uncaught Exception\" message.",
      "html": "<p>If an exception is not caught, a fatal error will occur with an \"Uncaught \nException\" message.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Lets try to throw an exception without catching it:",
      "html": "<p>Lets try to throw an exception without catching it:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_exceptions_throw",
        "syntaxHighlighting": [
          {
            "text": "<?phpfunction divide($dividend, $divisor) {\u00a0 if($divisor == 0) \n  {\u00a0\u00a0\u00a0 throw new Exception(\"Division by zero\");\u00a0 }\u00a0 \n  return $dividend / $divisor;}echo divide(5, 0);?>",
            "color": "rgb(0, 0, 0)",
            "class": "phpcolor"
          },
          {
            "text": "<?php",
            "color": "rgb(215, 58, 73)",
            "class": "phptagcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "throw",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\"Division by zero\"",
            "color": "rgb(0, 128, 0)",
            "class": "phpstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "echo",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "5",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "?>",
            "color": "rgb(215, 58, 73)",
            "class": "phptagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "htmlHigh",
          "notranslate",
          "w3-border-red"
        ],
        "isNotranslate": true
      },
      "code": "<?phpfunction divide($dividend, $divisor) {\u00a0 if($divisor == 0) \n{\u00a0\u00a0\u00a0 throw new Exception(\"Division by zero\");\u00a0 }\nreturn $dividend / $divisor;}echo divide(5, 0);?>",
      "syntax_highlighting": [
        {
          "text": "<?phpfunction divide($dividend, $divisor) {\u00a0 if($divisor == 0) \n  {\u00a0\u00a0\u00a0 throw new Exception(\"Division by zero\");\u00a0 }\u00a0 \n return $dividend / $divisor;}echo divide(5, 0);?>",
          "color": "black",
          "class": [
            "phpcolor"
          ]
        },
        {
          "text": "<?php",
          "color": "#d73a49",
          "class": [
            "phptagcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "throw",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\"Division by zero\"",
          "color": "green",
          "class": [
            "phpstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "echo",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "5",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "?>",
          "color": "#d73a49",
          "class": [
            "phptagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code htmlHigh notranslate w3-border-red\">\n<span class=\"phpcolor\" style=\"color:black\"><span class=\"phptagcolor\" style=\"color:#d73a49\">&lt;?php</span><br/><span class=\"phpkeywordcolor\" style=\"color:#005cc5\">function</span> divide($dividend, $divisor) {<br/>\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">if</span>($divisor == <span class=\"phpnumbercolor\" style=\"color:#905\">0</span>) <span class=\"phpnumbercolor\" style=\"color:#905\">\n</span>  {<br/>\u00a0\u00a0\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">throw</span> <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">new</span> Exception(<span class=\"phpstringcolor\" style=\"color:green\">\"Division by zero\"</span>);<br/>\u00a0 }<br/>\u00a0 <span class=\"phpnumbercolor\" style=\"color:#905\">\n</span> <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">return</span> $dividend / $divisor;<br/>}<br/><br/><span class=\"phpkeywordcolor\" style=\"color:#005cc5\">echo</span> divide(<span class=\"phpnumbercolor\" style=\"color:#905\">5</span>, <span class=\"phpnumbercolor\" style=\"color:#905\">0</span>);<br/><span class=\"phptagcolor\" style=\"color:#d73a49\">?&gt;</span></span> </div>",
      "code_classes": [
        "w3-code",
        "htmlHigh",
        "notranslate",
        "w3-border-red"
      ],
      "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_exceptions_throw",
      "syntax_highlighting_data": [
        {
          "text": "<?phpfunction divide($dividend, $divisor) {\u00a0 if($divisor == 0) \n  {\u00a0\u00a0\u00a0 throw new Exception(\"Division by zero\");\u00a0 }\u00a0 \n  return $dividend / $divisor;}echo divide(5, 0);?>",
          "color": "rgb(0, 0, 0)",
          "class": "phpcolor"
        },
        {
          "text": "<?php",
          "color": "rgb(215, 58, 73)",
          "class": "phptagcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "throw",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\"Division by zero\"",
          "color": "rgb(0, 128, 0)",
          "class": "phpstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "echo",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "5",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "?>",
          "color": "rgb(215, 58, 73)",
          "class": "phptagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "htmlHigh",
        "notranslate",
        "w3-border-red"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The result will look something like this:",
      "html": "<p>The result will look something like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate\"><div>\n<b>Fatal error</b>: <strong>Uncaught Exception</strong>: Division by zero in \n  C:\\webfolder\\test.php:4<br/>\nStack trace: #0 C:\\webfolder\\test.php(9): <br/>\n  divide(5, 0) #1 {main} thrown in <b>C:\\webfolder\\test.php</b> on line <b>4</b>\n</div></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The try...catch Statement",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To avoid the error from the example above, we can use the try...catch statement to catch exceptions and continue the process.",
      "html": "<p>To avoid the error from the example above, we can use the\n<code>try...catch</code> statement to catch exceptions and continue the process.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Syntax",
      "level": "h3"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  try {\u00a0 code that can throw exceptions} catch(Exception $e) {\u00a0 \n  code that runs when an exception is caught}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "try",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "throw",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "catch",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "try {\u00a0 code that can throw exceptions} catch(Exception $e) {\ncode that runs when an exception is caught}",
      "syntax_highlighting": [
        {
          "text": "\ntry {\u00a0 code that can throw exceptions} catch(Exception $e) {\u00a0 \n  code that runs when an exception is caught}\n",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "try",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "throw",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "catch",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><div>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">try</span> {<br/>\u00a0 code that can <span class=\"jskeywordcolor\" style=\"color:#005cc5\">throw</span> exceptions<br/>} <span class=\"jskeywordcolor\" style=\"color:#005cc5\">catch</span>(Exception $e) {<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  code that runs when an exception is caught<br/>}</div>\n</span></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  try {\u00a0 code that can throw exceptions} catch(Exception $e) {\u00a0 \n  code that runs when an exception is caught}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "try",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "throw",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "catch",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_exceptions_try_catch",
        "syntaxHighlighting": [
          {
            "text": "<?phpfunction divide($dividend, $divisor) {\u00a0 if($divisor == \n  0) {\u00a0\u00a0\u00a0 throw new Exception(\"Division by zero\");\u00a0 \n  }\u00a0 return $dividend / $divisor;}try {\u00a0 echo \n  divide(5, 0);} catch(Exception $e) {\u00a0 echo \"Unable to divide.\";\n  }?>",
            "color": "rgb(0, 0, 0)",
            "class": "phpcolor"
          },
          {
            "text": "<?php",
            "color": "rgb(215, 58, 73)",
            "class": "phptagcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "throw",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\"Division by zero\"",
            "color": "rgb(0, 128, 0)",
            "class": "phpstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "try",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "echo",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "5",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "catch",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "echo",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\"Unable to divide.\"",
            "color": "rgb(0, 128, 0)",
            "class": "phpstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "?>",
            "color": "rgb(215, 58, 73)",
            "class": "phptagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "htmlHigh",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "<?phpfunction divide($dividend, $divisor) {\u00a0 if($divisor == \n0) {\u00a0\u00a0\u00a0 throw new Exception(\"Division by zero\");\n}\u00a0 return $dividend / $divisor;}try {\u00a0 echo\ndivide(5, 0);} catch(Exception $e) {\u00a0 echo \"Unable to divide.\";\n}?>",
      "syntax_highlighting": [
        {
          "text": "<?phpfunction divide($dividend, $divisor) {\u00a0 if($divisor == \n 0) {\u00a0\u00a0\u00a0 throw new Exception(\"Division by zero\");\u00a0 \n  }\u00a0 return $dividend / $divisor;}try {\u00a0 echo \n  divide(5, 0);} catch(Exception $e) {\u00a0 echo \"Unable to divide.\";\n  }?>",
          "color": "black",
          "class": [
            "phpcolor"
          ]
        },
        {
          "text": "<?php",
          "color": "#d73a49",
          "class": [
            "phptagcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "throw",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\"Division by zero\"",
          "color": "green",
          "class": [
            "phpstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "try",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "echo",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "5",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "catch",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "echo",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\"Unable to divide.\"",
          "color": "green",
          "class": [
            "phpstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "?>",
          "color": "#d73a49",
          "class": [
            "phptagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code htmlHigh notranslate\">\n<span class=\"phpcolor\" style=\"color:black\"><span class=\"phptagcolor\" style=\"color:#d73a49\">&lt;?php</span><br/><span class=\"phpkeywordcolor\" style=\"color:#005cc5\">function</span> divide($dividend, $divisor) {<br/>\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">if</span>($divisor == <span class=\"phpnumbercolor\" style=\"color:#905\">\n</span> <span class=\"phpnumbercolor\" style=\"color:#905\">0</span>) {<br/>\u00a0\u00a0\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">throw</span> <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">new</span> Exception(<span class=\"phpstringcolor\" style=\"color:green\">\"Division by zero\"</span>);<br/>\u00a0 <span class=\"phpnumbercolor\" style=\"color:#905\">\n</span>  }<br/>\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">return</span> $dividend / $divisor;<br/>}<br/><br/><span class=\"phpkeywordcolor\" style=\"color:#005cc5\">try</span> {<br/>\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">echo</span> <span class=\"phpnumbercolor\" style=\"color:#905\">\n</span>  divide(<span class=\"phpnumbercolor\" style=\"color:#905\">5</span>, <span class=\"phpnumbercolor\" style=\"color:#905\">0</span>);<br/>} <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">catch</span>(Exception $e) {<br/>\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">echo</span> <span class=\"phpstringcolor\" style=\"color:green\">\"Unable to divide.\"</span>;<br/><span class=\"phpnumbercolor\" style=\"color:#905\">\n</span>  }<br/><span class=\"phptagcolor\" style=\"color:#d73a49\">?&gt;</span></span> </div>",
      "code_classes": [
        "w3-code",
        "htmlHigh",
        "notranslate"
      ],
      "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_exceptions_try_catch",
      "syntax_highlighting_data": [
        {
          "text": "<?phpfunction divide($dividend, $divisor) {\u00a0 if($divisor == \n  0) {\u00a0\u00a0\u00a0 throw new Exception(\"Division by zero\");\u00a0 \n  }\u00a0 return $dividend / $divisor;}try {\u00a0 echo \n  divide(5, 0);} catch(Exception $e) {\u00a0 echo \"Unable to divide.\";\n  }?>",
          "color": "rgb(0, 0, 0)",
          "class": "phpcolor"
        },
        {
          "text": "<?php",
          "color": "rgb(215, 58, 73)",
          "class": "phptagcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "throw",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\"Division by zero\"",
          "color": "rgb(0, 128, 0)",
          "class": "phpstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "try",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "echo",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "5",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "catch",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "echo",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\"Unable to divide.\"",
          "color": "rgb(0, 128, 0)",
          "class": "phpstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "?>",
          "color": "rgb(215, 58, 73)",
          "class": "phptagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "htmlHigh",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The catch block indicates what type of exception should be caught and the name of the variable which can be used to access the exception. In the example above, the type of exception is Exception and the variable name is $e .",
      "html": "<p>The catch block indicates what type of exception should be caught and the name of the\nvariable which can be used to access the exception. In the example above, the type of\nexception is <code>Exception</code> and the variable name is <code>$e</code>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The try...catch...finally Statement",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The try...catch...finally statement can be used to catch exceptions. Code in the finally block will always run regardless of whether an exception was caught. If finally is present, the catch block is optional.",
      "html": "<p>The <code>try...catch...finally</code> statement can be used to catch exceptions. Code in the\n<code>finally</code> block will always run regardless of whether an exception was caught. If\n<code>finally</code> is present, the <code>catch</code> block is optional.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Syntax",
      "level": "h3"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  try {\u00a0 code that can throw exceptions} catch(Exception $e) {\u00a0 \n  code that runs when an exception is caught} finally {\u00a0 code that \n  always runs regardless of whether an exception was caught}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "try",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "throw",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "catch",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "finally",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "try {\u00a0 code that can throw exceptions} catch(Exception $e) {\ncode that runs when an exception is caught} finally {\u00a0 code that\nalways runs regardless of whether an exception was caught}",
      "syntax_highlighting": [
        {
          "text": "\ntry {\u00a0 code that can throw exceptions} catch(Exception $e) {\u00a0 \n  code that runs when an exception is caught} finally {\u00a0 code that \n  always runs regardless of whether an exception was caught}\n",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "try",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "throw",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "catch",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "finally",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><div>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">try</span> {<br/>\u00a0 code that can <span class=\"jskeywordcolor\" style=\"color:#005cc5\">throw</span> exceptions<br/>} <span class=\"jskeywordcolor\" style=\"color:#005cc5\">catch</span>(Exception $e) {<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  code that runs when an exception is caught<br/>} <span class=\"jskeywordcolor\" style=\"color:#005cc5\">finally</span> {<br/>\u00a0 code that <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  always runs regardless of whether an exception was caught<br/>}</div>\n</span></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  try {\u00a0 code that can throw exceptions} catch(Exception $e) {\u00a0 \n  code that runs when an exception is caught} finally {\u00a0 code that \n  always runs regardless of whether an exception was caught}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "try",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "throw",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "catch",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "finally",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_exceptions_finally",
        "syntaxHighlighting": [
          {
            "text": "<?phpfunction divide($dividend, $divisor) {\u00a0 if($divisor \n  == 0) {\u00a0\u00a0\u00a0 throw new Exception(\"Division by zero\");\u00a0 \n  }\u00a0 return $dividend / $divisor;}try {\u00a0 echo \n  divide(5, 0);} catch(Exception $e) {\u00a0 echo \"Unable to \n  divide. \";} finally {\u00a0 echo \"Process complete.\";}?>",
            "color": "rgb(0, 0, 0)",
            "class": "phpcolor"
          },
          {
            "text": "<?php",
            "color": "rgb(215, 58, 73)",
            "class": "phptagcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "throw",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\"Division by zero\"",
            "color": "rgb(0, 128, 0)",
            "class": "phpstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "try",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "echo",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "5",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "catch",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "echo",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\"Unable to \n  divide. \"",
            "color": "rgb(0, 128, 0)",
            "class": "phpstringcolor"
          },
          {
            "text": "echo",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\"Process complete.\"",
            "color": "rgb(0, 128, 0)",
            "class": "phpstringcolor"
          },
          {
            "text": "?>",
            "color": "rgb(215, 58, 73)",
            "class": "phptagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "htmlHigh",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "<?phpfunction divide($dividend, $divisor) {\u00a0 if($divisor \n== 0) {\u00a0\u00a0\u00a0 throw new Exception(\"Division by zero\");\n}\u00a0 return $dividend / $divisor;}try {\u00a0 echo\ndivide(5, 0);} catch(Exception $e) {\u00a0 echo \"Unable to\ndivide. \";} finally {\u00a0 echo \"Process complete.\";}?>",
      "syntax_highlighting": [
        {
          "text": "<?phpfunction divide($dividend, $divisor) {\u00a0 if($divisor \n  == 0) {\u00a0\u00a0\u00a0 throw new Exception(\"Division by zero\");\u00a0 \n  }\u00a0 return $dividend / $divisor;}try {\u00a0 echo \n  divide(5, 0);} catch(Exception $e) {\u00a0 echo \"Unable to \n  divide. \";} finally {\u00a0 echo \"Process complete.\";}?>",
          "color": "black",
          "class": [
            "phpcolor"
          ]
        },
        {
          "text": "<?php",
          "color": "#d73a49",
          "class": [
            "phptagcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "throw",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\"Division by zero\"",
          "color": "green",
          "class": [
            "phpstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "try",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "echo",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "5",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "catch",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "echo",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\"Unable to \n  divide. \"",
          "color": "green",
          "class": [
            "phpstringcolor"
          ]
        },
        {
          "text": "echo",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\"Process complete.\"",
          "color": "green",
          "class": [
            "phpstringcolor"
          ]
        },
        {
          "text": "?>",
          "color": "#d73a49",
          "class": [
            "phptagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code htmlHigh notranslate\">\n<span class=\"phpcolor\" style=\"color:black\"><span class=\"phptagcolor\" style=\"color:#d73a49\">&lt;?php</span><br/><span class=\"phpkeywordcolor\" style=\"color:#005cc5\">function</span> divide($dividend, $divisor) {<br/>\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">if</span>($divisor <span class=\"phpnumbercolor\" style=\"color:#905\">\n</span>  == <span class=\"phpnumbercolor\" style=\"color:#905\">0</span>) {<br/>\u00a0\u00a0\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">throw</span> <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">new</span> Exception(<span class=\"phpstringcolor\" style=\"color:green\">\"Division by zero\"</span>);<br/>\u00a0 <span class=\"phpnumbercolor\" style=\"color:#905\">\n</span>  }<br/>\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">return</span> $dividend / $divisor;<br/>}<br/><br/><span class=\"phpkeywordcolor\" style=\"color:#005cc5\">try</span> {<br/>\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">echo</span> <span class=\"phpnumbercolor\" style=\"color:#905\">\n</span>  divide(<span class=\"phpnumbercolor\" style=\"color:#905\">5</span>, <span class=\"phpnumbercolor\" style=\"color:#905\">0</span>);<br/>} <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">catch</span>(Exception $e) {<br/>\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">echo</span> <span class=\"phpstringcolor\" style=\"color:green\">\"Unable to \n  divide. \"</span>;<br/>} finally {<br/>\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">echo</span> <span class=\"phpstringcolor\" style=\"color:green\">\"Process complete.\"</span>;<br/>}<br/><span class=\"phptagcolor\" style=\"color:#d73a49\">?&gt;</span></span> </div>",
      "code_classes": [
        "w3-code",
        "htmlHigh",
        "notranslate"
      ],
      "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_exceptions_finally",
      "syntax_highlighting_data": [
        {
          "text": "<?phpfunction divide($dividend, $divisor) {\u00a0 if($divisor \n  == 0) {\u00a0\u00a0\u00a0 throw new Exception(\"Division by zero\");\u00a0 \n  }\u00a0 return $dividend / $divisor;}try {\u00a0 echo \n  divide(5, 0);} catch(Exception $e) {\u00a0 echo \"Unable to \n  divide. \";} finally {\u00a0 echo \"Process complete.\";}?>",
          "color": "rgb(0, 0, 0)",
          "class": "phpcolor"
        },
        {
          "text": "<?php",
          "color": "rgb(215, 58, 73)",
          "class": "phptagcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "throw",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\"Division by zero\"",
          "color": "rgb(0, 128, 0)",
          "class": "phpstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "try",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "echo",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "5",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "catch",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "echo",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\"Unable to \n  divide. \"",
          "color": "rgb(0, 128, 0)",
          "class": "phpstringcolor"
        },
        {
          "text": "echo",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\"Process complete.\"",
          "color": "rgb(0, 128, 0)",
          "class": "phpstringcolor"
        },
        {
          "text": "?>",
          "color": "rgb(215, 58, 73)",
          "class": "phptagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "htmlHigh",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_exceptions_finally2",
        "syntaxHighlighting": [
          {
            "text": "<?phpfunction divide($dividend, $divisor) {\u00a0 if($divisor == 0) \n  {\u00a0\u00a0\u00a0 throw new Exception(\"Division by zero\");\u00a0 }\u00a0 \n  return $dividend / $divisor;}try {\u00a0 echo divide(5, 0);} finally {\u00a0 echo \n  \"Process complete.\";}?>",
            "color": "rgb(0, 0, 0)",
            "class": "phpcolor"
          },
          {
            "text": "<?php",
            "color": "rgb(215, 58, 73)",
            "class": "phptagcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "throw",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\"Division by zero\"",
            "color": "rgb(0, 128, 0)",
            "class": "phpstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "try",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "echo",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "5",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "echo",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "\"Process complete.\"",
            "color": "rgb(0, 128, 0)",
            "class": "phpstringcolor"
          },
          {
            "text": "?>",
            "color": "rgb(215, 58, 73)",
            "class": "phptagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "htmlHigh",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "<?phpfunction divide($dividend, $divisor) {\u00a0 if($divisor == 0) \n{\u00a0\u00a0\u00a0 throw new Exception(\"Division by zero\");\u00a0 }\nreturn $dividend / $divisor;}try {\u00a0 echo divide(5, 0);} finally {\u00a0 echo\n\"Process complete.\";}?>",
      "syntax_highlighting": [
        {
          "text": "<?phpfunction divide($dividend, $divisor) {\u00a0 if($divisor == 0) \n  {\u00a0\u00a0\u00a0 throw new Exception(\"Division by zero\");\u00a0 }\u00a0 \n return $dividend / $divisor;}try {\u00a0 echo divide(5, 0);} finally {\u00a0 echo \n \"Process complete.\";}?>",
          "color": "black",
          "class": [
            "phpcolor"
          ]
        },
        {
          "text": "<?php",
          "color": "#d73a49",
          "class": [
            "phptagcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "throw",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\"Division by zero\"",
          "color": "green",
          "class": [
            "phpstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "try",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "echo",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "5",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "echo",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "\"Process complete.\"",
          "color": "green",
          "class": [
            "phpstringcolor"
          ]
        },
        {
          "text": "?>",
          "color": "#d73a49",
          "class": [
            "phptagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code htmlHigh notranslate\">\n<span class=\"phpcolor\" style=\"color:black\"><span class=\"phptagcolor\" style=\"color:#d73a49\">&lt;?php</span><br/><span class=\"phpkeywordcolor\" style=\"color:#005cc5\">function</span> divide($dividend, $divisor) {<br/>\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">if</span>($divisor == <span class=\"phpnumbercolor\" style=\"color:#905\">0</span>) <span class=\"phpnumbercolor\" style=\"color:#905\">\n</span>  {<br/>\u00a0\u00a0\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">throw</span> <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">new</span> Exception(<span class=\"phpstringcolor\" style=\"color:green\">\"Division by zero\"</span>);<br/>\u00a0 }<br/>\u00a0 <span class=\"phpnumbercolor\" style=\"color:#905\">\n</span> <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">return</span> $dividend / $divisor;<br/>}<br/><br/><span class=\"phpkeywordcolor\" style=\"color:#005cc5\">try</span> {<br/>\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">echo</span> divide(<span class=\"phpnumbercolor\" style=\"color:#905\">5</span>, <span class=\"phpnumbercolor\" style=\"color:#905\">0</span>);<br/>} finally {<br/>\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">echo</span> <span class=\"phpnumbercolor\" style=\"color:#905\">\n</span> <span class=\"phpstringcolor\" style=\"color:green\">\"Process complete.\"</span>;<br/>}<br/><span class=\"phptagcolor\" style=\"color:#d73a49\">?&gt;</span></span> </div>",
      "code_classes": [
        "w3-code",
        "htmlHigh",
        "notranslate"
      ],
      "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_exceptions_finally2",
      "syntax_highlighting_data": [
        {
          "text": "<?phpfunction divide($dividend, $divisor) {\u00a0 if($divisor == 0) \n  {\u00a0\u00a0\u00a0 throw new Exception(\"Division by zero\");\u00a0 }\u00a0 \n  return $dividend / $divisor;}try {\u00a0 echo divide(5, 0);} finally {\u00a0 echo \n  \"Process complete.\";}?>",
          "color": "rgb(0, 0, 0)",
          "class": "phpcolor"
        },
        {
          "text": "<?php",
          "color": "rgb(215, 58, 73)",
          "class": "phptagcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "throw",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\"Division by zero\"",
          "color": "rgb(0, 128, 0)",
          "class": "phpstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "try",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "echo",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "5",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "echo",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "\"Process complete.\"",
          "color": "rgb(0, 128, 0)",
          "class": "phpstringcolor"
        },
        {
          "text": "?>",
          "color": "rgb(215, 58, 73)",
          "class": "phptagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "htmlHigh",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Exception Object",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Exception Object contains information about the error or unexpected behaviour that the function encountered.",
      "html": "<p>The Exception Object contains information about the error or unexpected behaviour that\nthe function encountered.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Syntax",
      "level": "h3"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate\"><div>\n  new Exception(message, code, previous)</div>\n</div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Parameter Values",
      "level": "h3"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:20%\">Parameter</th>\n<th style=\"width:80%\">Description</th>\n</tr>\n<tr>\n<td>message</td>\n<td>Optional. A string describing why the exception was thrown</td>\n</tr>\n<tr>\n<td>code</td>\n<td>Optional. An integer that can be used to easily distinguish this exception from others of the same type</td>\n</tr>\n<tr>\n<td>previous</td>\n<td>Optional. If this exception was thrown in a catch block of another exception, it is recommended to pass that exception into this parameter</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Methods",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When catching an exception, the following table shows some of the methods that can be used to get information about the exception:",
      "html": "<p>When catching an exception, the following table shows some of the methods that can be used to\nget information about the exception:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:20%\">Method</th>\n<th style=\"width:80%\">Description</th>\n</tr>\n<tr>\n<td>getMessage()</td>\n<td>Returns a string describing why the exception was thrown</td>\n</tr>\n<tr>\n<td>getPrevious()</td>\n<td>If this exception was triggered by another one, this method returns the previous exception. If not, then it returns <em>null</em></td>\n</tr>\n<tr>\n<td>getCode()</td>\n<td>Returns the exception code</td>\n</tr>\n<tr>\n<td>getFile()</td>\n<td>Returns the full path of the file in which the exception was thrown</td>\n</tr>\n<tr>\n<td>getLine()</td>\n<td>Returns the line number of the line of code which threw the exception</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_exceptions_obj_info",
        "syntaxHighlighting": [
          {
            "text": "<?phpfunction divide($dividend, $divisor) {\u00a0 if($divisor == 0) \n  {\u00a0\u00a0\u00a0 throw new Exception(\"Division by zero\", 1);\u00a0 \n  }\u00a0 return $dividend / $divisor;}try {\u00a0 echo \n  divide(5, 0);} catch(Exception $ex) {\u00a0 $code = $ex->getCode();\u00a0 \n  $message = $ex->getMessage();\u00a0 $file = $ex->getFile();\u00a0 \n  $line = $ex->getLine();\u00a0 echo \"Exception thrown in $file on line \n  $line: [Code $code]\u00a0 $message\";}?>",
            "color": "rgb(0, 0, 0)",
            "class": "phpcolor"
          },
          {
            "text": "<?php",
            "color": "rgb(215, 58, 73)",
            "class": "phptagcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "throw",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\"Division by zero\"",
            "color": "rgb(0, 128, 0)",
            "class": "phpstringcolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "try",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "echo",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "5",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "catch",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "echo",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\"Exception thrown in $file on line \n  $line: [Code $code]\u00a0 $message\"",
            "color": "rgb(0, 128, 0)",
            "class": "phpstringcolor"
          },
          {
            "text": "?>",
            "color": "rgb(215, 58, 73)",
            "class": "phptagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "htmlHigh",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "<?phpfunction divide($dividend, $divisor) {\u00a0 if($divisor == 0) \n{\u00a0\u00a0\u00a0 throw new Exception(\"Division by zero\", 1);\n}\u00a0 return $dividend / $divisor;}try {\u00a0 echo\ndivide(5, 0);} catch(Exception $ex) {\u00a0 $code = $ex->getCode();\n$message = $ex->getMessage();\u00a0 $file = $ex->getFile();\n$line = $ex->getLine();\u00a0 echo \"Exception thrown in $file on line\n$line: [Code $code]\u00a0 $message\";}?>",
      "syntax_highlighting": [
        {
          "text": "<?phpfunction divide($dividend, $divisor) {\u00a0 if($divisor == 0) \n  {\u00a0\u00a0\u00a0 throw new Exception(\"Division by zero\", 1);\u00a0 \n  }\u00a0 return $dividend / $divisor;}try {\u00a0 echo \n  divide(5, 0);} catch(Exception $ex) {\u00a0 $code = $ex->getCode();\u00a0 \n  $message = $ex->getMessage();\u00a0 $file = $ex->getFile();\u00a0 \n  $line = $ex->getLine();\u00a0 echo \"Exception thrown in $file on line \n  $line: [Code $code]\u00a0 $message\";}?>",
          "color": "black",
          "class": [
            "phpcolor"
          ]
        },
        {
          "text": "<?php",
          "color": "#d73a49",
          "class": [
            "phptagcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "throw",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\"Division by zero\"",
          "color": "green",
          "class": [
            "phpstringcolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "try",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "echo",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "5",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "catch",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "echo",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\"Exception thrown in $file on line \n  $line: [Code $code]\u00a0 $message\"",
          "color": "green",
          "class": [
            "phpstringcolor"
          ]
        },
        {
          "text": "?>",
          "color": "#d73a49",
          "class": [
            "phptagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code htmlHigh notranslate\">\n<span class=\"phpcolor\" style=\"color:black\"><span class=\"phptagcolor\" style=\"color:#d73a49\">&lt;?php</span><br/><span class=\"phpkeywordcolor\" style=\"color:#005cc5\">function</span> divide($dividend, $divisor) {<br/>\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">if</span>($divisor == <span class=\"phpnumbercolor\" style=\"color:#905\">0</span>) <span class=\"phpnumbercolor\" style=\"color:#905\">\n</span>  {<br/>\u00a0\u00a0\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">throw</span> <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">new</span> Exception(<span class=\"phpstringcolor\" style=\"color:green\">\"Division by zero\"</span>, <span class=\"phpnumbercolor\" style=\"color:#905\">1</span>);<br/>\u00a0 <span class=\"phpnumbercolor\" style=\"color:#905\">\n</span>  }<br/>\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">return</span> $dividend / $divisor;<br/>}<br/><br/><span class=\"phpkeywordcolor\" style=\"color:#005cc5\">try</span> {<br/>\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">echo</span> <span class=\"phpnumbercolor\" style=\"color:#905\">\n</span>  divide(<span class=\"phpnumbercolor\" style=\"color:#905\">5</span>, <span class=\"phpnumbercolor\" style=\"color:#905\">0</span>);<br/>} <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">catch</span>(Exception $ex) {<br/>\u00a0 $code = $ex-&gt;getCode();<br/>\u00a0 <span class=\"phpnumbercolor\" style=\"color:#905\">\n</span>  $message = $ex-&gt;getMessage();<br/>\u00a0 $file = $ex-&gt;getFile();<br/>\u00a0 <span class=\"phpnumbercolor\" style=\"color:#905\">\n</span>  $line = $ex-&gt;getLine();<br/>\u00a0 <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">echo</span> <span class=\"phpstringcolor\" style=\"color:green\">\"Exception thrown in $file on line \n  $line: [Code $code]<br/>\u00a0 $message\"</span>;<br/>}<br/><span class=\"phptagcolor\" style=\"color:#d73a49\">?&gt;</span></span> </div>",
      "code_classes": [
        "w3-code",
        "htmlHigh",
        "notranslate"
      ],
      "tryItLink": "https://www.w3schools.com/php/phptryit.asp?filename=tryphp_exceptions_obj_info",
      "syntax_highlighting_data": [
        {
          "text": "<?phpfunction divide($dividend, $divisor) {\u00a0 if($divisor == 0) \n  {\u00a0\u00a0\u00a0 throw new Exception(\"Division by zero\", 1);\u00a0 \n  }\u00a0 return $dividend / $divisor;}try {\u00a0 echo \n  divide(5, 0);} catch(Exception $ex) {\u00a0 $code = $ex->getCode();\u00a0 \n  $message = $ex->getMessage();\u00a0 $file = $ex->getFile();\u00a0 \n  $line = $ex->getLine();\u00a0 echo \"Exception thrown in $file on line \n  $line: [Code $code]\u00a0 $message\";}?>",
          "color": "rgb(0, 0, 0)",
          "class": "phpcolor"
        },
        {
          "text": "<?php",
          "color": "rgb(215, 58, 73)",
          "class": "phptagcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "throw",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\"Division by zero\"",
          "color": "rgb(0, 128, 0)",
          "class": "phpstringcolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "try",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "echo",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "5",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "catch",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "echo",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\"Exception thrown in $file on line \n  $line: [Code $code]\u00a0 $message\"",
          "color": "rgb(0, 128, 0)",
          "class": "phpstringcolor"
        },
        {
          "text": "?>",
          "color": "rgb(215, 58, 73)",
          "class": "phptagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "htmlHigh",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Complete Exception Reference",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Complete PHP Exception Reference",
          "href": "https://www.w3schools.com/php_ref_exception.asp",
          "title": ""
        }
      ],
      "text": "For a complete reference, go to our Complete PHP Exception Reference .",
      "html": "<p>For a complete reference, go to our <a href=\"php_ref_exception.asp\">Complete PHP Exception Reference</a>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The reference contains descriptions and examples of all Exception methods.",
      "html": "<p>The reference contains descriptions and examples of all Exception methods.</p>"
    }
  ]
}