{
  "title": "PHP XML DOM Parser",
  "url": "https://www.w3schools.com/php/php_xml_dom.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "PHP XML DOM Parser",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The built-in DOM parser makes it possible to process XML documents in PHP.",
      "html": "<p class=\"intro\">The built-in DOM parser makes it possible to process XML documents in PHP.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The XML DOM Parser",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The DOM parser is a tree-based parser.",
      "html": "<p>The DOM parser is a tree-based parser.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Look at the following XML document fraction:",
      "html": "<p>Look at the following XML document fraction:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate\"><div>\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;<br/>\n&lt;from&gt;Jani&lt;/from&gt;\n</div></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The DOM sees the XML above as a tree structure:",
      "html": "<p>The DOM sees the XML above as a tree structure: </p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Installation",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The DOM parser functions are part of the PHP core. There is no installation needed to use these functions.",
      "html": "<p>The DOM parser functions are part of the PHP core. There is no installation needed to use these functions.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The XML File",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The XML file below (\"note.xml\") will be used in our example:",
      "html": "<p>The XML file below (\"note.xml\") will be used in our example:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate\"><div>\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;<br/>\n&lt;note&gt;<br/>\n&lt;to&gt;Tove&lt;/to&gt;<br/>\n&lt;from&gt;Jani&lt;/from&gt;<br/>\n&lt;heading&gt;Reminder&lt;/heading&gt;<br/>\n&lt;body&gt;Don't forget me this weekend!&lt;/body&gt;<br/>\n&lt;/note&gt;\n</div></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Load and Output XML",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We want to initialize the XML parser, load the xml, and output it:",
      "html": "<p>We want to initialize the XML parser, load the xml, and output it:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "<?php\n$xmlDoc = new DOMDocument();\n$xmlDoc->load(\"note.xml\");\n\nprint $xmlDoc->saveXML();\n?>",
            "color": "rgb(0, 0, 0)",
            "class": "phpcolor"
          },
          {
            "text": "<?php",
            "color": "rgb(215, 58, 73)",
            "class": "phptagcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\"note.xml\"",
            "color": "rgb(0, 128, 0)",
            "class": "phpstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "?>",
            "color": "rgb(215, 58, 73)",
            "class": "phptagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "htmlHigh",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "<?php\n$xmlDoc = new DOMDocument();\n$xmlDoc->load(\"note.xml\");\n\nprint $xmlDoc->saveXML();\n?>",
      "syntax_highlighting": [
        {
          "text": "<?php\n$xmlDoc = new DOMDocument();\n$xmlDoc->load(\"note.xml\");\n\nprint $xmlDoc->saveXML();\n?>",
          "color": "black",
          "class": [
            "phpcolor"
          ]
        },
        {
          "text": "<?php",
          "color": "#d73a49",
          "class": [
            "phptagcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\"note.xml\"",
          "color": "green",
          "class": [
            "phpstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "?>",
          "color": "#d73a49",
          "class": [
            "phptagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code htmlHigh notranslate\">\n<span class=\"phpcolor\" style=\"color:black\"><span class=\"phptagcolor\" style=\"color:#d73a49\">&lt;?php</span><br/>\n$xmlDoc = <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">new</span> DOMDocument();<br/>\n$xmlDoc-&gt;load(<span class=\"phpstringcolor\" style=\"color:green\">\"note.xml\"</span>);<br/><span class=\"phpnumbercolor\" style=\"color:#905\">\n</span><br/>\n<span class=\"phpkeywordcolor\" style=\"color:#005cc5\">print</span> $xmlDoc-&gt;saveXML();<br/>\n<span class=\"phptagcolor\" style=\"color:#d73a49\">?&gt;</span></span>\n</div>",
      "code_classes": [
        "w3-code",
        "htmlHigh",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "<?php\n$xmlDoc = new DOMDocument();\n$xmlDoc->load(\"note.xml\");\n\nprint $xmlDoc->saveXML();\n?>",
          "color": "rgb(0, 0, 0)",
          "class": "phpcolor"
        },
        {
          "text": "<?php",
          "color": "rgb(215, 58, 73)",
          "class": "phptagcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\"note.xml\"",
          "color": "rgb(0, 128, 0)",
          "class": "phpstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "?>",
          "color": "rgb(215, 58, 73)",
          "class": "phptagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "htmlHigh",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The output of the code above will be:",
      "html": "<p>The output of the code above will be:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate\"><div>\nTove Jani Reminder Don't forget me this weekend!\n</div></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you select \"View source\" in the browser window, you will see the following HTML:",
      "html": "<p>If you select \"View source\" in the browser window, you will see the following HTML:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate\"><div>\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;<br/>\n&lt;note&gt;<br/>\n&lt;to&gt;Tove&lt;/to&gt;<br/>\n&lt;from&gt;Jani&lt;/from&gt;<br/>\n&lt;heading&gt;Reminder&lt;/heading&gt;<br/>\n&lt;body&gt;Don't forget me this weekend!&lt;/body&gt;<br/>\n&lt;/note&gt;\n</div></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The example above creates a DOMDocument-Object and loads the XML from \"note.xml\" into it.",
      "html": "<p>The example above creates a DOMDocument-Object and loads the XML from \"note.xml\" into it.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Then the saveXML() function puts the internal XML document into a string, so we can output it.",
      "html": "<p>Then the saveXML() function puts the internal XML document into a string, so we can output it. </p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Looping through XML",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We want to initialize the XML parser, load the XML, and loop through all elements of the <note> element:",
      "html": "<p>We want to initialize the XML parser, load the XML, and loop through all elements of the &lt;note&gt; element:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "<?php\n$xmlDoc = new DOMDocument();\n$xmlDoc->load(\"note.xml\");\n\n$x = $xmlDoc->documentElement;\nforeach ($x->childNodes AS $item) {\n\u00a0\u00a0print $item->nodeName . \" = \" . $item->nodeValue . \"<br>\";\n }\n?>",
            "color": "rgb(0, 0, 0)",
            "class": "phpcolor"
          },
          {
            "text": "<?php",
            "color": "rgb(215, 58, 73)",
            "class": "phptagcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\"note.xml\"",
            "color": "rgb(0, 128, 0)",
            "class": "phpstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "foreach",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "AS",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "phpkeywordcolor"
          },
          {
            "text": "\" = \"",
            "color": "rgb(0, 128, 0)",
            "class": "phpstringcolor"
          },
          {
            "text": "\"<br>\"",
            "color": "rgb(0, 128, 0)",
            "class": "phpstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "phpnumbercolor"
          },
          {
            "text": "?>",
            "color": "rgb(215, 58, 73)",
            "class": "phptagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "htmlHigh",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "<?php\n$xmlDoc = new DOMDocument();\n$xmlDoc->load(\"note.xml\");\n\n$x = $xmlDoc->documentElement;\nforeach ($x->childNodes AS $item) {\nprint $item->nodeName . \" = \" . $item->nodeValue . \"<br>\";\n}\n?>",
      "syntax_highlighting": [
        {
          "text": "<?php\n$xmlDoc = new DOMDocument();\n$xmlDoc->load(\"note.xml\");\n\n$x = $xmlDoc->documentElement;\nforeach ($x->childNodes AS $item) {\n\u00a0\u00a0print $item->nodeName . \" = \" . $item->nodeValue . \"<br>\";\n }\n?>",
          "color": "black",
          "class": [
            "phpcolor"
          ]
        },
        {
          "text": "<?php",
          "color": "#d73a49",
          "class": [
            "phptagcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\"note.xml\"",
          "color": "green",
          "class": [
            "phpstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "foreach",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "AS",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "phpkeywordcolor"
          ]
        },
        {
          "text": "\" = \"",
          "color": "green",
          "class": [
            "phpstringcolor"
          ]
        },
        {
          "text": "\"<br>\"",
          "color": "green",
          "class": [
            "phpstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "phpnumbercolor"
          ]
        },
        {
          "text": "?>",
          "color": "#d73a49",
          "class": [
            "phptagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code htmlHigh notranslate\">\n<span class=\"phpcolor\" style=\"color:black\"><span class=\"phptagcolor\" style=\"color:#d73a49\">&lt;?php</span><br/>\n$xmlDoc = <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">new</span> DOMDocument();<br/>\n$xmlDoc-&gt;load(<span class=\"phpstringcolor\" style=\"color:green\">\"note.xml\"</span>);<br/><span class=\"phpnumbercolor\" style=\"color:#905\">\n</span><br/>\n$x = $xmlDoc-&gt;documentElement;<br/>\n<span class=\"phpkeywordcolor\" style=\"color:#005cc5\">foreach</span> ($x-&gt;childNodes <span class=\"phpkeywordcolor\" style=\"color:#005cc5\">AS</span> $item) {<br/><span class=\"phpnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"phpkeywordcolor\" style=\"color:#005cc5\">print</span> $item-&gt;nodeName . <span class=\"phpstringcolor\" style=\"color:green\">\" = \"</span> . $item-&gt;nodeValue . <span class=\"phpstringcolor\" style=\"color:green\">\"&lt;br&gt;\"</span>;<br/><span class=\"phpnumbercolor\" style=\"color:#905\">\n</span> }<br/>\n<span class=\"phptagcolor\" style=\"color:#d73a49\">?&gt;</span></span>\n</div>",
      "code_classes": [
        "w3-code",
        "htmlHigh",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "<?php\n$xmlDoc = new DOMDocument();\n$xmlDoc->load(\"note.xml\");\n\n$x = $xmlDoc->documentElement;\nforeach ($x->childNodes AS $item) {\n\u00a0\u00a0print $item->nodeName . \" = \" . $item->nodeValue . \"<br>\";\n }\n?>",
          "color": "rgb(0, 0, 0)",
          "class": "phpcolor"
        },
        {
          "text": "<?php",
          "color": "rgb(215, 58, 73)",
          "class": "phptagcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\"note.xml\"",
          "color": "rgb(0, 128, 0)",
          "class": "phpstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "foreach",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "AS",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "phpkeywordcolor"
        },
        {
          "text": "\" = \"",
          "color": "rgb(0, 128, 0)",
          "class": "phpstringcolor"
        },
        {
          "text": "\"<br>\"",
          "color": "rgb(0, 128, 0)",
          "class": "phpstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "phpnumbercolor"
        },
        {
          "text": "?>",
          "color": "rgb(215, 58, 73)",
          "class": "phptagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "htmlHigh",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The output of the code above will be:",
      "html": "<p>The output of the code above will be:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate\"><div>\n#text = <br/>\nto = Tove<br/>\n#text = <br/>\nfrom = Jani<br/>\n#text = <br/>\nheading = Reminder<br/>\n#text = <br/>\nbody = Don't forget me this weekend!<br/>\n#text = \n</div></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the example above you see that there are empty text nodes between each element.",
      "html": "<p>In the example above you see that there are empty text nodes between each element.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When XML generates, it often contains white-spaces between the nodes. The XML DOM parser treats these as ordinary elements, and if you are not aware of them, they sometimes cause problems.",
      "html": "<p>When XML generates, it often contains white-spaces between the nodes. The XML \nDOM parser treats these as ordinary elements, and if you are not aware of them, \nthey sometimes cause problems.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "XML tutorial",
          "href": "https://www.w3schools.com/xml/default.asp",
          "title": ""
        }
      ],
      "text": "If you want to learn more about the XML DOM, please visit our XML tutorial .",
      "html": "<p>If you want to learn more about the XML DOM, please visit our\n<a href=\"/xml/default.asp\">XML tutorial</a>.</p>"
    }
  ]
}