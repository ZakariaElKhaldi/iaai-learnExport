{
  "id": "c1061062-f511-4d62-9848-89d0ab7e484f",
  "title": "Django Add Main Index Page",
  "slug": "django-add-main-index-page",
  "metadata": {
    "description": "Learn about Django Add Main Index Page with clear explanations and practical examples.",
    "keywords": [
      "go",
      "main",
      "members",
      "template",
      "html",
      "page",
      "details",
      "block",
      "view",
      "views",
      "import"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Go Basics"
    ],
    "estimated_time": 5,
    "category": "LearnDjango",
    "subcategory": "Add Main Index Page"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Django Add Main Index Page",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Main Index Page\nOur project needs a main page.\nThe main page will be the landing page when someone visits the root folder of the project.\nNow, you get an error when visiting the root folder of your project:\n127.0.0.1:8000/\n.\nStart by creating a template called\nmain.html\n:\nMain\nmy_tennis_club/members/templates/main.html\n:\n{% extends \"master.html\" %}\n\n{% block title %}\n  My Tennis Club\n{% endblock %}\n\n{% block content %}\n  <h1>My Tennis Club</h1>\n\n<h3>Members</h3>\n\n<p>Check out all our <a href=\"members/\">members</a></p>\n\n{% endblock %}\nCreate new View\nThen create a new view called\nmain\n, that will deal with incoming requests to \nroot of the project:\nmy_tennis_club/members/views.py\n:\nfrom django.http import HttpResponse\nfrom django.template import loader\nfrom .models import Member\n\ndef members(request):\n  mymembers = Member.objects.all().values()\n  template = loader.get_template('all_members.html')\n  context = {\n    'mymembers': mymembers,\n  }\n  return HttpResponse(template.render(context, request))\n\ndef details(request, id):\n  mymember = Member.objects.get(id=id)\n  template = loader.get_template('details.html')\n  context = {\n    'mymember': mymember,\n  }\n  return HttpResponse(template.render(context, request))\n\ndef main(request):\n  template = loader.get_template('main.html')\n  return HttpResponse(template.render())\nThe\nmain\nview does the following:\nloads the\nmain.html\ntemplate.\nOutputs the HTML that is rendered by the template.\nAdd URL\nNow we need to make sure that the root url points to the correct view.\nOpen the\nurls.py\nfile and add the main view to the\nurlpatterns\nlist:\nmy_tennis_club/members/urls.py\n:\nfrom django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.main, name='main'),\n    path('members/', views.members, name='members'),\n    path('members/details/<int:id>', views.details, name='details'),\n]\nRun Example \u00bb\nAdd Link Back to Main\nThe members page is missing a link back to the main page,\nso let us add that in the\nall_members.html\ntemplate,\nin the\ncontent\nblock:\nExample\nmy_tennis_club/members/templates/all_members.html\n:\n{% extends \"master.html\" %}\n\n{% block title %}\n  My Tennis Club - List of all members\n{% endblock %}\n\n{% block content %}\n\n<p><a href=\"/\">HOME</a></p>\n\n<h1>Members</h1>\n\n<ul>\n    {% for x in mymembers %}\n      <li><a href=\"details/{{ x.id }}\">{{ x.firstname }} {{ x.lastname }}</a></li>\n    {% endfor %}\n  </ul>\n{% endblock %}\nRun Example \u00bb\nIf you have followed all the steps on your own computer, you can see the result in your own browser:\n127.0.0.1:8000/\n.\nIf the server is down, you have to start it again with the\nrunserver\ncommand:\npython manage.py runserver\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "python manage.py runserver",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your unknown code here",
      "solution": "python manage.py runserver"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "933876a2-4fec-4c9c-8dfe-3e86b7e45b29",
      "title": "Go Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "c72e8aaa-cb48-4592-89ed-4ef235daf4d4",
      "title": "Go Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "d76b2b32-3fe0-4c96-825c-a50a09be88e5",
      "title": "Go Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Outputs the HTML that?",
      "options": [
        "None of the above.",
        "None of the above.",
        "rendered by the template",
        "missing a link back to the main page"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Outputs the HTML that is 'rendered by the template'."
    },
    {
      "question": "What is Add Link Back to Main\nThe members page?",
      "options": [
        "None of the above.",
        "rendered by the template",
        "None of the above.",
        "missing a link back to the main page"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Add Link Back to Main\nThe members page is 'missing a link back to the main page'."
    }
  ],
  "summary": "This tutorial covers Django Add Main Index Page concepts and techniques. You'll learn how to use Django Add Main Index Page effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Django Add Main Index Page and how to apply it in your projects."
}