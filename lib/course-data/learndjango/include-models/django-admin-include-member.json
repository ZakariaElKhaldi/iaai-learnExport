{
  "id": "1a0fbb91-9908-4476-8a51-4b14bff18a1c",
  "title": "Django Admin - Include Member",
  "slug": "django-admin-include-member",
  "metadata": {
    "description": "Learn about Django Admin - Include Member with clear explanations and practical examples.",
    "keywords": [
      "admin",
      "member",
      "django",
      "members",
      "models",
      "include",
      "interface",
      "model",
      "import",
      "register"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnDjango",
    "subcategory": "Include Models"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Django Admin",
      "content": "- Include Member\n\nInclude Member in the Admin Interface\nTo include the Member model in the admin interface, we have to tell Django that this model should be visible in the admin interface.\nThis is done in a file called\nadmin.py\n, and is located in your app's folder, \nwhich in our case is the\nmembers\nfolder.\nOpen it, and it should look like this:\nmy_tennis_club/members/admin.py\n:\nfrom django.contrib import admin",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Section 2",
      "content": "# Register your models here.\nInsert a couple of lines here to make the Member model visible in the admin \npage:\nmy_tennis_club/members/admin.py\n:\nfrom django.contrib import admin\nfrom .models import Member",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Section 3",
      "content": "# Register your models here.\nadmin.site.register(Member)\nNow go back to the browser (\n127.0.0.1:8000/admin/\n) and you should get this result:\nClick\nMembers\nand see the five records we inserted earlier in this tutorial:\nChange Display\nIn the list in the screenshot above, we see \"Member object (1)\", \"Member object (2)\" etc. which might not be the data\nyou wanted to be displayed in the list.\nIt would be better to display \"firstname\" and \"lastname\" instead.\nThis can easily be done by changing some settings in the\nmodels.py\nand/or the\nadmin.py\nfiles.\nYou will learn more about this in the\n\n.\n\n\u2605\n+1",
      "order": 3,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "d0055659-617c-45c3-b847-e978e4be6284",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "6e6c43c6-93dd-4f2b-bf01-5b73eab94785",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "fe648865-50df-402f-86cf-70b6f0e7a771",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is This?",
      "options": [
        "located in your app's folder",
        "None of the above.",
        "done in a file called\nadmin",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of This is 'done in a file called\nadmin'."
    },
    {
      "question": "What is and?",
      "options": [
        "None of the above.",
        "None of the above.",
        "located in your app's folder",
        "done in a file called\nadmin"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of and is 'located in your app's folder'."
    }
  ],
  "summary": "This tutorial covers Django Admin - Include Member concepts and techniques. You'll learn how to use Django Admin - Include Member effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Django Admin - Include Member and how to apply it in your projects."
}