{
  "id": "6db4df4b-b4e7-4baa-b6a3-9ecb7e6e8e62",
  "title": "Django Add Master Template",
  "slug": "django-add-master-template",
  "metadata": {
    "description": "Learn about Django Add Master Template with clear explanations and practical examples.",
    "keywords": [
      "go",
      "html",
      "block",
      "members",
      "master",
      "templates",
      "title",
      "details",
      "endblock",
      "mymember",
      "template"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Go Basics"
    ],
    "estimated_time": 5,
    "category": "LearnDjango",
    "subcategory": "Add Master Template"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Django Add Master Template",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The extends Tag\nIn the \nfor details about a member.\nThe templates have a set of HTML code that are the same for both templates.\nDjango provides a way of making a \"parent template\" that you can include in all pages to \ndo the stuff\nthat is the same in all pages.\nStart by creating a template called\nmaster.html\n, with all the necessary HTML elements:\nMaster\nmy_tennis_club/members/templates/master.html\n:\n<!DOCTYPE html>\n<html>\n<head>\n  <title>{% block title %}{% endblock %}</title>\n</head>\n<body>\n\n{% block content %}\n{% endblock %}\n\n</body>\n</html>\nDo you see Django block Tag inside the\n<title>\nelement, and the\n<body>\nelement?\nThey are placeholders, telling Django to replace this block with content from other sources.\nModify Templates\nNow the two templates (\nall_members.html\nand\ndetails.html\n) can use this\nmaster.html\ntemplate.\nThis is done by including the master template with the\n{% extends %}\ntag,\nand inserting a\ntitle\nblock and a\ncontent\nblock:\nMembers\nmy_tennis_club/members/templates/all_members.html\n:\n{% extends \"master.html\" %}\n\n{% block title %}\n  My Tennis Club - List of all members\n{% endblock %}\n\n{% block content %}\n  <h1>Members</h1>\n\n<ul>\n    {% for x in mymembers %}\n      <li><a href=\"details/{{ x.id }}\">{{ x.firstname }} {{ x.lastname }}</a></li>\n    {% endfor %}\n  </ul>\n{% endblock %}\nRun Example \u00bb\nDetails\nmy_tennis_club/members/templates/details.html\n:\n{% extends \"master.html\" %}\n\n{% block title %}\n  Details about {{ mymember.firstname }} {{ mymember.lastname }}\n{% endblock %}\n\n{% block content %}\n  <h1>{{ mymember.firstname }} {{ mymember.lastname }}</h1>\n\n<p>Phone {{ mymember.phone }}</p>\n  <p>Member since: {{ mymember.joined_date }}</p>\n\n<p>Back to <a href=\"/members\">Members</a></p>\n\n{% endblock %}\nRun Example \u00bb\nIf you have followed all the steps on your own computer, you can see the result in your own browser:\n127.0.0.1:8000/members/\n.\nIf the server is down, you have to start it again with the\nrunserver\ncommand:\npython manage.py runserver\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "python manage.py runserver",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your unknown code here",
      "solution": "python manage.py runserver"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "aedc4373-bb87-4056-8288-64612ff3a1b1",
      "title": "Go Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "77ebdd3d-d78d-402d-a085-5eabe3ffa852",
      "title": "Go Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "61d38344-8951-4cc0-9e2c-4ffce2c2ea58",
      "title": "Go Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The templates have a set of HTML code that?",
      "options": [
        "None of the above.",
        "the same in all pages",
        "None of the above.",
        "the same for both templates"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of The templates have a set of HTML code that is 'the same for both templates'."
    },
    {
      "question": "What is that you can include in all pages to \ndo the stuff\nthat?",
      "options": [
        "the same for both templates",
        "None of the above.",
        "the same in all pages",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of that you can include in all pages to \ndo the stuff\nthat is 'the same in all pages'."
    }
  ],
  "summary": "This tutorial covers Django Add Master Template concepts and techniques. You'll learn how to use Django Add Master Template effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Django Add Master Template and how to apply it in your projects."
}