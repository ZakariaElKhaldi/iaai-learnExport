{
  "id": "8722ac3b-9e65-407c-a750-73e8415e9d3c",
  "title": "Django Templates",
  "slug": "django-templates",
  "metadata": {
    "description": "Learn about Django Templates with clear explanations and practical examples.",
    "keywords": [
      "go",
      "applying",
      "auth",
      "django",
      "html",
      "members",
      "contrib",
      "templates",
      "folder",
      "file",
      "admin"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Go Basics"
    ],
    "estimated_time": 5,
    "category": "LearnDjango",
    "subcategory": "Django Templates"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Django Templates",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Templates\nIn the\nDjango Intro\npage, we learned that the \nresult should be in HTML, and it should be created in a template, so let's do that.\nCreate a\ntemplates\nfolder inside the\nmembers\nfolder, and create a HTML file \nnamed\nmyfirst.html\n.\nThe file structure should be like this:\nmy_tennis_club\nmanage.py\nmy_tennis_club/\nmembers/\ntemplates/\nmyfirst.html\nOpen the HTML file and insert the following:\nmy_tennis_club/members/templates/myfirst.html\n:\n<!DOCTYPE html>\n<html>\n<body>\n\n<h1>Hello World!</h1>\n<p>Welcome to my first Django project!</p>\n\n</body>\n</html>\nModify the View\nOpen the\nviews.py\nfile in the\nmembers\nfolder, and replace its content with this:\nmy_tennis_club/members/views.py\n:\nfrom django.http import HttpResponse\nfrom django.template import loader\n\ndef members(request):\n  template = loader.get_template('myfirst.html')\n  return HttpResponse(template.render())\nChange Settings\nTo be able to work with more complicated stuff than \"Hello World!\", \nWe have to tell Django that a new app is created.\nThis is done in the\nsettings.py\nfile in the\nmy_tennis_club\nfolder.\nLook up the\nINSTALLED_APPS[]\nlist and add the\nmembers\napp like this:\nmy_tennis_club/my_tennis_club/settings.py\n:\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'members'\n]\nThen run this command:\npython manage.py migrate\nWhich will produce this output:\nOperations to perform:\nApply all migrations: admin, auth,\n  contenttypes, sessions\nRunning migrations:\nApplying \n  contenttypes.0001_initial... OK\nApplying auth.0001_initial... OK\nApplying admin.0001_initial... OK\nApplying \n  admin.0002_logentry_remove_auto_add... OK\nApplying \n  admin.0003_logentry_add_action_flag_choices... OK\nApplying \n  contenttypes.0002_remove_content_type_name... OK\nApplying \n  auth.0002_alter_permission_name_max_length... OK\nApplying \n  auth.0003_alter_user_email_max_length... OK\nApplying \n  auth.0004_alter_user_username_opts... OK\nApplying \n  auth.0005_alter_user_last_login_null... OK\nApplying \n  auth.0006_require_contenttypes_0002... OK\nApplying \n  auth.0007_alter_validators_add_error_messages... OK\nApplying \n  auth.0008_alter_user_username_max_length... OK\nApplying \n  auth.0009_alter_user_last_name_max_length... OK\nApplying \n  auth.0010_alter_group_name_max_length... OK\nApplying \n  auth.0011_update_proxy_permissions... OK\nApplying \n  auth.0012_alter_user_first_name_max_length... OK\nApplying \n  sessions.0001_initial... OK\n(myworld) C:\\Users\\\nYour Name\n\\myworld\\my_tennis_club>\nStart the server by navigating to the\n/my_tennis_club\nfolder and execute this command:\npython manage.py runserver\nIn the browser window, type\n127.0.0.1:8000/members/\nin the address bar.\nThe result should look like this:\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "my_tennis_club\nmanage.py\nmy_tennis_club/\nmembers/\ntemplates/\nmyfirst.html",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "python manage.py migrate",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "Operations to perform:\nApply all migrations: admin, auth,\n  contenttypes, sessions\nRunning migrations:\nApplying \n  contenttypes.0001_initial... OK\nApplying auth.0001_initial... OK\nApplying admin.0001_initial... OK\nApplying \n  admin.0002_logentry_remove_auto_add... OK\nApplying \n  admin.0003_logentry_add_action_flag_choices... OK\nApplying \n  contenttypes.0002_remove_content_type_name... OK\nApplying \n  auth.0002_alter_permission_name_max_length... OK\nApplying \n  auth.0003_alter_user_email_max_length... OK\nApplying \n  auth.0004_alter_user_username_opts... OK\nApplying \n  auth.0005_alter_user_last_login_null... OK\nApplying \n  auth.0006_require_contenttypes_0002... OK\nApplying \n  auth.0007_alter_validators_add_error_messages... OK\nApplying \n  auth.0008_alter_user_username_max_length... OK\nApplying \n  auth.0009_alter_user_last_name_max_length... OK\nApplying \n  auth.0010_alter_group_name_max_length... OK\nApplying \n  auth.0011_update_proxy_permissions... OK\nApplying \n  auth.0012_alter_user_first_name_max_length... OK\nApplying \n  sessions.0001_initial... OK\n(myworld) C:\\Users\\\nYour Name\n\\myworld\\my_tennis_club>",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "python manage.py runserver",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "my_tennis_club\nmanage.py\nmy_tennis_club/\nmembers/\ntemplates/\n# TODO: Complete this line",
      "solution": "my_tennis_club\nmanage.py\nmy_tennis_club/\nmembers/\ntemplates/\nmyfirst.html"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your unknown code here",
      "solution": "python manage.py migrate"
    }
  ],
  "related_topics": [
    {
      "id": "b4b4f9b2-5b7c-4933-af01-9929e31b9121",
      "title": "Go Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "37c6589e-fd13-4719-8272-7e48da7189ab",
      "title": "Go Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "790b3162-ee13-484c-a644-e3b42f4824cc",
      "title": "Go Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is We have to tell Django that a new app?",
      "options": [
        "done in the\nsettings",
        "None of the above.",
        "None of the above.",
        "created"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of We have to tell Django that a new app is 'created'."
    },
    {
      "question": "What is This?",
      "options": [
        "None of the above.",
        "None of the above.",
        "done in the\nsettings",
        "created"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of This is 'done in the\nsettings'."
    }
  ],
  "summary": "This tutorial covers Django Templates concepts and techniques. You'll learn how to use Django Templates effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Django Templates and how to apply it in your projects."
}