{
  "id": "96b1fbe1-57e7-443e-b9b3-98695714789d",
  "title": "Django Update Model",
  "slug": "django-update-model",
  "metadata": {
    "description": "Learn about Django Update Model with clear explanations and practical examples.",
    "keywords": [
      "go",
      "models",
      "members",
      "phone",
      "member",
      "model",
      "none",
      "firstname",
      "lastname",
      "python",
      "django"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Go Basics"
    ],
    "estimated_time": 5,
    "category": "LearnDjango",
    "subcategory": "Django Update Model"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Django Update Model",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Add Fields in the Model\nTo add a field to a table after it is created, open the\nmodels.py\nfile, and make your changes:\nmy_tennis_club/members/models.py\n:\nfrom django.db import models\n\nclass Member(models.Model):\n  firstname = models.CharField(max_length=255)\n  lastname = models.CharField(max_length=255)\n  phone = models.IntegerField()\n  joined_date = models.DateField()\nAs you can see, we want to add\nphone\nand\njoined_date\nto our Member Model.\nThis is a change in the Model's structure, and therefor we have to make a migration\nto tell Django that it has to update the database:\npython manage.py makemigrations members\nNote:\nMake sure you are back in the virtual environment before running the command.\nThe command above will result in a prompt, because we try to add fields that \nare not allowed to be null, to a table that already contains records.\nAs you can see, Django asks if we want to provide the fields with a specific \nvalue, or if we want to stop the migration and fix it in the model:\npython manage.py makemigrations members\nYou are trying to add a non-nullable field 'joined_date' to members without a default;\nwe can't do that (the database needs something to populate existing rows).\nPlease select a fix:\n1) Provide a one-off default now (will be set on all existing rows with a null value for this column)\n2) Quit, and let me add a default in models.py\nSelect an option:\nI will select option 2, and open the\nmodels.py\nfile again and allow NULL values for the two new fields:\nmy_tennis_club/members/models.py\n:\nfrom django.db import models\n\nclass Member(models.Model):\n  firstname = models.CharField(max_length=255)\n  lastname = models.CharField(max_length=255)\n  phone = models.IntegerField(null=True)\n  joined_date = models.DateField(null=True)\nAnd make the migration once again:\npython manage.py makemigrations members\nWhich will result in this:\nMigrations for 'members':\nmembers\\migrations\\0002_member_joined_date_member_phone.py\n- Add field \n  joined_date to member\n- Add field \n  phone to member\nRun the migrate command:\npython manage.py migrate\nWhich will result in this output:\nOperations to perform:\nApply all migrations: admin, auth, contenttypes, members, sessions\nRunning migrations:\nApplying members.0002_member_joined_date_member_phone... OK\n(myworld) C:\\Users\\\nYour Name\n\\myworld\\my_tennis_club>\nInsert Data\nWe can insert data to the two new fields with the same approach as we did in the\nUpdate Data chapter\n:\nFirst we enter the Python Shell:\npython manage.py shell\nNow we are in the shell, the result should be something like this:\nPython 3.13.2 (tags/v3.13.2:4f8bb39, Feb  4 2025, 15:23:48) [MSC v.1942 64 bit (AMD64)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n(InteractiveConsole)\n>>>\nAt the bottom, after the three\n>>>\nwrite the following (and hit [enter] for each line):\n>>> from members.models import Member\n>>> x = Member.objects.all()[0]\n>>> x.phone = 5551234\n>>> x.joined_date = '2022-01-05'\n>>> x.save()\nThis will insert a phone number and a date in the Member Model, at least for the first record, the four remaining\nrecords will for now be left empty. We will deal with them later in the tutorial.\nExecute this command to see if the Member table got updated:\n>>> Member.objects.all().values()\nThe result should look like this:\n<QuerySet [\n{'id': 1, 'firstname': 'Emil', 'lastname': 'Refsnes', 'phone': 5551234, 'joined_date': datetime.date(2022, 1, 5)},\n{'id': 2, 'firstname': 'Tobias', 'lastname': 'Refsnes', 'phone': None, 'joined_date': None},\n{'id': 3, 'firstname': 'Linus', 'lastname': 'Refsnes', 'phone': None, 'joined_date': None},\n{'id': 4, 'firstname': 'Lene', 'lastname': 'Refsnes', 'phone': None, 'joined_date': None},\n{'id': 5, 'firstname': 'Stalikken', 'lastname': 'Refsnes', 'phone': None, 'joined_date': None}]>\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "python manage.py makemigrations members",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "python manage.py makemigrations members\nYou are trying to add a non-nullable field 'joined_date' to members without a default;\nwe can't do that (the database needs something to populate existing rows).\nPlease select a fix:\n1) Provide a one-off default now (will be set on all existing rows with a null value for this column)\n2) Quit, and let me add a default in models.py\nSelect an option:",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "python manage.py makemigrations members",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "Migrations for 'members':\nmembers\\migrations\\0002_member_joined_date_member_phone.py\n- Add field \n  joined_date to member\n- Add field \n  phone to member",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "python manage.py migrate",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "Operations to perform:\nApply all migrations: admin, auth, contenttypes, members, sessions\nRunning migrations:\nApplying members.0002_member_joined_date_member_phone... OK\n(myworld) C:\\Users\\\nYour Name\n\\myworld\\my_tennis_club>",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "python manage.py shell",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "Python 3.13.2 (tags/v3.13.2:4f8bb39, Feb  4 2025, 15:23:48) [MSC v.1942 64 bit (AMD64)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n(InteractiveConsole)\n>>>",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": ">>> from members.models import Member\n>>> x = Member.objects.all()[0]\n>>> x.phone = 5551234\n>>> x.joined_date = '2022-01-05'\n>>> x.save()",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": ">>> Member.objects.all().values()",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 13,
      "code": "<QuerySet [\n{'id': 1, 'firstname': 'Emil', 'lastname': 'Refsnes', 'phone': 5551234, 'joined_date': datetime.date(2022, 1, 5)},\n{'id': 2, 'firstname': 'Tobias', 'lastname': 'Refsnes', 'phone': None, 'joined_date': None},\n{'id': 3, 'firstname': 'Linus', 'lastname': 'Refsnes', 'phone': None, 'joined_date': None},\n{'id': 4, 'firstname': 'Lene', 'lastname': 'Refsnes', 'phone': None, 'joined_date': None},\n{'id': 5, 'firstname': 'Stalikken', 'lastname': 'Refsnes', 'phone': None, 'joined_date': None}]>",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your unknown code here",
      "solution": "python manage.py makemigrations members"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "python manage.py makemigrations members\n# TODO: Complete this line\nwe can't do that (the database needs something to populate existing rows).\nPlease select a fix:\n1) Provide a one-off default now (will be set on all existing rows with a null value for this column)\n2) Quit, and let me add a default in models.py\nSelect an option:",
      "solution": "python manage.py makemigrations members\nYou are trying to add a non-nullable field 'joined_date' to members without a default;\nwe can't do that (the database needs something to populate existing rows).\nPlease select a fix:\n1) Provide a one-off default now (will be set on all existing rows with a null value for this column)\n2) Quit, and let me add a default in models.py\nSelect an option:"
    }
  ],
  "related_topics": [
    {
      "id": "48a35720-b210-4e06-acfb-21aaf5536caf",
      "title": "Go Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "ad3734f9-b6a9-4efc-b1dd-f72acdd4863c",
      "title": "Go Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "3b41444d-4f04-4e3a-a81a-13aa6e970230",
      "title": "Go Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Django Update Model\n\nAdd Fields in the Model\nTo add a field to a table after it?",
      "options": [
        "None of the above.",
        "None of the above.",
        "a change in the Model's structure",
        "created"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Django Update Model\n\nAdd Fields in the Model\nTo add a field to a table after it is 'created'."
    },
    {
      "question": "What is This?",
      "options": [
        "None of the above.",
        "created",
        "a change in the Model's structure",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of This is 'a change in the Model's structure'."
    }
  ],
  "summary": "This tutorial covers Django Update Model concepts and techniques. You'll learn how to use Django Update Model effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Django Update Model and how to apply it in your projects."
}