{
  "id": "9a5252bf-fb1a-4a92-a91a-c7791951898b",
  "title": "Django URLs",
  "slug": "django-urls",
  "metadata": {
    "description": "Learn about Django URLs with clear explanations and practical examples.",
    "keywords": [
      "go",
      "urls",
      "members",
      "file",
      "path",
      "import",
      "django",
      "folder",
      "views",
      "urlpatterns",
      "include"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Go Basics"
    ],
    "estimated_time": 5,
    "category": "LearnDjango",
    "subcategory": "Django URLs"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Django URLs",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "URLs\nCreate a file named\nurls.py\nin the same folder as the\nviews.py\nfile, and type this code in it:\nmy_tennis_club/members/urls.py\n:\nfrom django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('members/', views.members, name='members'),\n]\nThe\nurls.py\nfile you just created is \nspecific for the\nmembers\napplication. We have \nto do some routing in the root directory\nmy_tennis_club\nas well. This may seem complicated, but for now, just follow the instructions \nbelow.\nThere is a file called\nurls.py\non the\nmy_tennis_club\nfolder, open that file and add the\ninclude\nmodule in the\nimport\nstatement, and also add a\npath()\nfunction in the\nurlpatterns[]\nlist, with arguments that will route users that comes in via\n127.0.0.1:8000/\n.\nThen your file will look like this:\nmy_tennis_club/my_tennis_club/urls.py\n:\nfrom django.contrib import admin\nfrom django.urls import include, path\n\nurlpatterns = [\n    path('', include('members.urls')),\n    path('admin/', admin.site.urls),\n]\nIf the server is not running, navigate to the\n/my_tennis_club\nfolder and execute this command in the command prompt:\npython manage.py runserver\nIn the browser window, type\n127.0.0.1:8000/members/\nin the address bar.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "python manage.py runserver",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your unknown code here",
      "solution": "python manage.py runserver"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "99891ce6-400b-4f28-a90c-5d4f28814bfe",
      "title": "Go Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "6253510a-d0b9-4093-b409-77e6279436f9",
      "title": "Go Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "4e14af67-7bd1-4fd7-83d3-4a604bd04723",
      "title": "Go Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is py\nfile you just created?",
      "options": [
        "None of the above.",
        "specific for the\nmembers\napplication",
        "None of the above.",
        "a file called\nurls"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of py\nfile you just created is 'specific for the\nmembers\napplication'."
    },
    {
      "question": "What is There?",
      "options": [
        "a file called\nurls",
        "specific for the\nmembers\napplication",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of There is 'a file called\nurls'."
    }
  ],
  "summary": "This tutorial covers Django URLs concepts and techniques. You'll learn how to use Django URLs effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Django URLs and how to apply it in your projects."
}