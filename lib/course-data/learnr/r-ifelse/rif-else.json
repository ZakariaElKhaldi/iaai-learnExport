{
  "id": "191b3055-9546-4695-80ec-a8545b98e840",
  "title": "RIf ... Else",
  "slug": "rif-else",
  "metadata": {
    "description": "Learn about RIf ... Else with clear explanations and practical examples.",
    "keywords": [
      "else",
      "greater",
      "print",
      "example",
      "equal",
      "condition",
      "true",
      "conditions",
      "statements",
      "used"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnR",
    "subcategory": "R If...Else"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "R\nIf ... Else",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "R\nIf",
      "content": "... Else\n\nConditions and If Statements\nR supports the usual logical conditions from mathematics:",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Try it",
      "content": "==\nEqual\nx == y\nTry it \u00bb\n!=\nNot equal\nx != y\nTry it \u00bb\n>\nGreater than\nx > y\nTry it \u00bb\n<\nLess than\nx < y\nTry it \u00bb\n>=\nGreater than or equal to\nx >= y\nTry it \u00bb\n<=\nLess than or equal to\nx <= y\nTry it \u00bb\nThese conditions can be used in several ways, most commonly in \"if statements\" and loops.\nThe if Statement\nAn \"if statement\" is written with the\nif\nkeyword, and it is used to specify a block of code to be executed if a condition is\nTRUE\n:\nExample\na <- 33\nb <- 200\nif (b > a) {\nprint(\"b is greater than a\")\n}\n\nIn this example we use two variables,\na\nand\nb\n,\nwhich are used as a part of the if statement to test whether\nb\nis greater than\na\n.\nAs\na\nis\n33\n, and\nb\nis\n200\n,\nwe know that 200 is greater than 33, and so we print to screen that \"b is greater than a\".\nR uses curly brackets { } to define the scope in the code.\nElse If\nThe\nelse if\nkeyword is R's way of saying \"if the \ncondition\":\nExample\na <- 33\nb <- 33\nif (b > a) {\nprint(\"b is greater than a\")\n} else if (a == b) {\nprint (\"a and b are equal\")\n}\n\nIn this example\na\nis equal to\nb\n, so the first condition is not true, but the\nelse if\ncondition is true, so we\nprint to screen that \"a and b are equal\".\nYou can use as many\nelse if\nstatements as you want in R.\nIf Else\nThe\nelse\nkeyword catches anything which isn't caught by the preceding conditions:\nExample\na <- 200\nb <- 33\nif (b > a) {\nprint(\"b is greater than a\")\n} else if (a == b) {\nprint(\"a and b are equal\")\n} else {\nprint(\"a is greater than b\")\n}\n\nIn this example,\na\nis greater than\nb\n,\nso the first condition is not true, also the\nelse if\ncondition is not true,\nso we go to the\nelse\ncondition and print to screen that \"a is greater than b\".\nYou can also use\nelse\nwithout\nelse if\n:\nExample\na <- 200\nb <- 33\nif (b > a) {\nprint(\"b is greater than a\")\n} else {\nprint(\"b is not greater than a\")\n}\n\n\u2605\n+1",
      "order": 3,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "a <- 33\nb <- 200\nif (b > a) {\nprint(\"b is greater than a\")\n}",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "a <- 33\nb <- 33\nif (b > a) {\nprint(\"b is greater than a\")\n} else if (a == b) {\nprint (\"a and b are equal\")\n}",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "a <- 200\nb <- 33\nif (b > a) {\nprint(\"b is greater than a\")\n} else if (a == b) {\nprint(\"a and b are equal\")\n} else {\nprint(\"a is greater than b\")\n}",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "a <- 200\nb <- 33\nif (b > a) {\nprint(\"b is greater than a\")\n} else {\nprint(\"b is not greater than a\")\n}",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "a <- 33\nb <- 200\nif (b > a) {\nprint(\"b is greater than a\")\n# TODO: Complete this line",
      "solution": "a <- 33\nb <- 200\nif (b > a) {\nprint(\"b is greater than a\")\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "a <- 33\nb <- 33\n# TODO: Complete this line\nprint(\"b is greater than a\")\n} else if (a == b) {\nprint (\"a and b are equal\")\n}",
      "solution": "a <- 33\nb <- 33\nif (b > a) {\nprint(\"b is greater than a\")\n} else if (a == b) {\nprint (\"a and b are equal\")\n}"
    }
  ],
  "related_topics": [
    {
      "id": "1688f140-40f4-4136-b443-49206f225da2",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "3a595d16-a6e4-4b07-b1cc-25fd5c12c1d9",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "fad04c37-65e9-446c-89ec-748170f36c9b",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is and it is used to specify a block of code to be executed if a condition?",
      "options": [
        "33",
        "None of the above.",
        "TRUE\n:\nExample\na <- 33\nb <- 200\nif (b > a) {\nprint(\"b is greater than a\")\n}\n\nIn this example we use two variables",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of and it is used to specify a block of code to be executed if a condition is 'TRUE\n:\nExample\na <- 33\nb <- 200\nif (b > a) {\nprint(\"b is greater than a\")\n}\n\nIn this example we use two variables'."
    },
    {
      "question": "What is As\na?",
      "options": [
        "TRUE\n:\nExample\na <- 33\nb <- 200\nif (b > a) {\nprint(\"b is greater than a\")\n}\n\nIn this example we use two variables",
        "None of the above.",
        "None of the above.",
        "33"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of As\na is '33'."
    }
  ],
  "summary": "This tutorial covers RIf ... Else concepts and techniques. You'll learn how to use RIf ... Else effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of RIf ... Else and how to apply it in your projects."
}