{
  "id": "9afa4dc9-c6a0-4d03-9fca-aa0d6d0a9212",
  "title": "RData Types",
  "slug": "rdata-types",
  "metadata": {
    "description": "Learn about RData Types with clear explanations and practical examples.",
    "keywords": [
      "data",
      "types",
      "type",
      "class",
      "different",
      "numeric",
      "character",
      "string",
      "integer",
      "variables"
    ],
    "difficulty": "intermediate",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnR",
    "subcategory": "R Data Types"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "R\nData Types",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Data Types\nIn programming, data type is an important concept.\nVariables can store data of different types, and different types can do different things.\nIn R, variables do not need to be declared with any particular type, and can even change type after they\nhave been set:\nExample\nmy_var <- 30 # my_var is type of\nnumeric\nmy_var <- \"Sally\" \n  # my_var is now of type\ncharacter\n(aka string)\n\nR has a variety of data types and object classes. You will learn much more \nabout these as you continue to get to know R.\nBasic Data Types\nBasic data types in R can be divided into the following types:\nnumeric\n- (10.5, 55, 787)\ninteger\n- (1L, 55L, 100L, where the letter \"L\" declares this as an integer)\ncomplex\n- (9 + 3i, where \"i\" is the imaginary part)\ncharacter\n(a.k.a. string) - (\"k\", \"R is exciting\", \"FALSE\", \"11.5\")\nlogical\n(a.k.a. boolean) - (TRUE or FALSE)\nWe can use the\nclass()\nfunction to check the data type of a variable:\nExample\n# numeric\nx <- 10.5\nclass(x)\n# integer\nx <- 1000L\nclass(x)\n# \n  complex\nx <- 9i + 3\nclass(x)\n# character/string\nx <- \"R is exciting\"\nclass(x)\n# logical/boolean\nx <- TRUE\nclass(x)\n\nYou will learn much more about the individual data types in the upcoming chapters.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "my_var <- 30 # my_var is type of\nnumeric\nmy_var <- \"Sally\" \n  # my_var is now of type\ncharacter\n(aka string)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "# numeric\nx <- 10.5\nclass(x)\n# integer\nx <- 1000L\nclass(x)\n# \n  complex\nx <- 9i + 3\nclass(x)\n# character/string\nx <- \"R is exciting\"\nclass(x)\n# logical/boolean\nx <- TRUE\nclass(x)",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "my_var <- 30 # my_var is type of\nnumeric\n# TODO: Complete this line\n  # my_var is now of type\ncharacter\n(aka string)",
      "solution": "my_var <- 30 # my_var is type of\nnumeric\nmy_var <- \"Sally\" \n  # my_var is now of type\ncharacter\n(aka string)"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "# numeric\nx <- 10.5\nclass(x)\n# integer\nx <- 1000L\nclass(x)\n# \n  complex\nx <- 9i + 3\nclass(x)\n# character/string\nx <- \"R is exciting\"\n# TODO: Complete this line\n# logical/boolean\nx <- TRUE\nclass(x)",
      "solution": "# numeric\nx <- 10.5\nclass(x)\n# integer\nx <- 1000L\nclass(x)\n# \n  complex\nx <- 9i + 3\nclass(x)\n# character/string\nx <- \"R is exciting\"\nclass(x)\n# logical/boolean\nx <- TRUE\nclass(x)"
    }
  ],
  "related_topics": [
    {
      "id": "8fb2e258-297a-41ae-b7f7-0b6e7be5ae4c",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "61a46710-41db-4d76-b1fd-239547372c8f",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "fc036771-729a-4154-9dfa-a717d8b7657f",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is data type?",
      "options": [
        "None of the above.",
        "None of the above.",
        "an important concept",
        "type of\nnumeric\nmy_var <- \"Sally\" \n  # my_var is now of type\ncharacter\n(aka string)\n\nR has a variety of data types and object classes"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of data type is 'an important concept'."
    },
    {
      "question": "What is var?",
      "options": [
        "None of the above.",
        "an important concept",
        "type of\nnumeric\nmy_var <- \"Sally\" \n  # my_var is now of type\ncharacter\n(aka string)\n\nR has a variety of data types and object classes",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of var is 'type of\nnumeric\nmy_var <- \"Sally\" \n  # my_var is now of type\ncharacter\n(aka string)\n\nR has a variety of data types and object classes'."
    }
  ],
  "summary": "This tutorial covers RData Types concepts and techniques. You'll learn how to use RData Types effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of RData Types and how to apply it in your projects."
}