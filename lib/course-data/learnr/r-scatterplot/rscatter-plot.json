{
  "id": "66062416-a8ce-43b4-85b9-c421e851a254",
  "title": "RScatter Plot",
  "slug": "rscatter-plot",
  "metadata": {
    "description": "Learn about RScatter Plot with clear explanations and practical examples.",
    "keywords": [
      "c",
      "plot",
      "cars",
      "plots",
      "observation",
      "example",
      "speed",
      "scatter",
      "result",
      "axis",
      "function"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnR",
    "subcategory": "R Scatterplot"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "R\nScatter Plot",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Scatter Plots\nYou learned from the\nPlot chapter\nthat the\nplot()\nfunction is used to plot \nnumbers against each other.\nA \"scatter plot\" is a type of plot used to display the relationship between two numerical \nvariables, and plots one dot for each observation.\nIt needs two vectors of same \nlength, one for the x-axis (horizontal) and one for the y-axis (vertical):\nExample\nx <- c(5,7,8,7,2,2,9,4,11,12,9,6)\ny <- \n  c(99,86,87,88,111,103,87,94,78,77,85,86)\nplot(x, y)\nResult:\n\nThe observation in the example above should show the result of 12 cars passing by.\nThat might not be clear for someone who sees the graph for the first time, so let's add a header and \ndifferent labels to describe the scatter plot better:\nExample\nx <- c(5,7,8,7,2,2,9,4,11,12,9,6)\ny <- \n  c(99,86,87,88,111,103,87,94,78,77,85,86)\nplot(x, y, main=\"Observation \n  of Cars\", xlab=\"Car age\", ylab=\"Car speed\")\nResult:\n\nTo recap, the observation in the example above is the result of 12 cars passing by.\nThe\nx-axis\nshows how old the car is.\nThe\ny-axis\nshows the speed of the car when it passes.\nAre there any relationships between the observations?\nIt seems that the newer the car, the faster it drives, but that could be a coincidence, after all we only registered 12 cars.\nCompare Plots\nIn the example above, there seems to be a relationship between the car speed and age, but what if we plot the observations from another day as well? Will the scatter plot tell us something else?\nTo compare the plot with another plot, use the\npoints()\nfunction:\nExample\nDraw two plots on the same figure:\n# day one, the age and speed of 12 cars:\nx1 <- c(5,7,8,7,2,2,9,4,11,12,9,6)\ny1 <- c(99,86,87,88,111,103,87,94,78,77,85,86)\n# day two, the age and speed of 15 cars:\nx2 <- \n  c(2,2,8,1,15,8,12,9,7,3,11,4,7,14,12)\ny2 <- \n  c(100,105,84,105,90,99,90,95,94,100,79,112,91,80,85)\nplot(x1, y1, \n  main=\"Observation of Cars\", xlab=\"Car age\", ylab=\"Car speed\", col=\"red\", \n  cex=2)\npoints(x2, y2, col=\"blue\", cex=2)\nResult:\n\nNote:\nTo be able to see the difference of the comparison, you must assign different colors to the plots (by using the\ncol\nparameter).\nRed\nrepresents the values of day 1, while\nblue\nrepresents day 2.  Note that we have also added the\ncex\nparameter to increase the size of the dots.\nConclusion of observation:\nBy comparing the two plots, I think it is safe to say that they both gives us the same conclusion: the newer the car, the faster it drives.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "x <- c(5,7,8,7,2,2,9,4,11,12,9,6)\ny <- \n  c(99,86,87,88,111,103,87,94,78,77,85,86)\nplot(x, y)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "x <- c(5,7,8,7,2,2,9,4,11,12,9,6)\ny <- \n  c(99,86,87,88,111,103,87,94,78,77,85,86)\nplot(x, y, main=\"Observation \n  of Cars\", xlab=\"Car age\", ylab=\"Car speed\")",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "# day one, the age and speed of 12 cars:\nx1 <- c(5,7,8,7,2,2,9,4,11,12,9,6)\ny1 <- c(99,86,87,88,111,103,87,94,78,77,85,86)\n# day two, the age and speed of 15 cars:\nx2 <- \n  c(2,2,8,1,15,8,12,9,7,3,11,4,7,14,12)\ny2 <- \n  c(100,105,84,105,90,99,90,95,94,100,79,112,91,80,85)\nplot(x1, y1, \n  main=\"Observation of Cars\", xlab=\"Car age\", ylab=\"Car speed\", col=\"red\", \n  cex=2)\npoints(x2, y2, col=\"blue\", cex=2)",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "x <- c(5,7,8,7,2,2,9,4,11,12,9,6)\ny <- \n# TODO: Complete this line\nplot(x, y)",
      "solution": "x <- c(5,7,8,7,2,2,9,4,11,12,9,6)\ny <- \n  c(99,86,87,88,111,103,87,94,78,77,85,86)\nplot(x, y)"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "x <- c(5,7,8,7,2,2,9,4,11,12,9,6)\n# TODO: Complete this line\n  c(99,86,87,88,111,103,87,94,78,77,85,86)\nplot(x, y, main=\"Observation \n  of Cars\", xlab=\"Car age\", ylab=\"Car speed\")",
      "solution": "x <- c(5,7,8,7,2,2,9,4,11,12,9,6)\ny <- \n  c(99,86,87,88,111,103,87,94,78,77,85,86)\nplot(x, y, main=\"Observation \n  of Cars\", xlab=\"Car age\", ylab=\"Car speed\")"
    }
  ],
  "related_topics": [
    {
      "id": "cec15881-e44d-48b0-be61-b3d4323828d2",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "2ad07da9-dcce-4015-b053-053bae5fea52",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "8dc43a06-5a24-4e6e-9cfc-db5c31f20642",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is function?",
      "options": [
        "Not a function.",
        "None of the above.",
        "used to plot \nnumbers against each other",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of function is 'used to plot \nnumbers against each other'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers RScatter Plot concepts and techniques. You'll learn how to use RScatter Plot effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of RScatter Plot and how to apply it in your projects."
}