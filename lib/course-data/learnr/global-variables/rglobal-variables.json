{
  "id": "c82a9260-a314-4f7d-b56f-e3746120dcae",
  "title": "RGlobal Variables",
  "slug": "rglobal-variables",
  "metadata": {
    "description": "Learn about RGlobal Variables with clear explanations and practical examples.",
    "keywords": [
      "global",
      "function",
      "variable",
      "inside",
      "variables",
      "create",
      "paste",
      "assignment",
      "operator",
      "outside"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnR",
    "subcategory": "Global Variables"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "R\nGlobal Variables",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Global Variables\nVariables that are created outside of a function are known as\nglobal\nvariables.\nGlobal variables can be used by everyone, both inside of functions and outside.\nExample\nCreate a variable outside of a function and use it inside the function:\ntxt <- \"awesome\"\nmy_function <- function() {\npaste(\"R is\", \n  txt)\n}\nmy_function()\n\nIf you create a variable with the same name inside a function, this variable will be local, and can only\nbe used inside the function. The global variable with the same name will remain as it was, global and\nwith the original value.\nExample\nCreate a variable inside of a function with the same name as the\nglobal variable:\ntxt <- \"global variable\"\nmy_function <- function() {\ntxt = \"fantastic\"\npaste(\"R is\", txt)\n}\nmy_function()\ntxt # print txt\n\nIf you try to print\ntxt\n, it will return \"\nglobal variable\n\" because we are printing\ntxt\noutside the function.\nThe Global Assignment Operator\nNormally, when you create a variable inside a function, that variable is local, and can only be used\ninside that function.\nTo create a global variable inside a function, you can use the\nglobal assignment\noperator\n<<-\nExample\nIf you use the assignment operator\n<<-\n, the variable belongs to the global scope:\nmy_function <- function() {\ntxt <<- \"fantastic\"\npaste(\"R is\", \n  txt)\n}\nmy_function()\nprint(txt)\n\nAlso, use the\nglobal\nassignment operator if you want to \nchange a global variable inside a function:\nExample\nTo change the value of a global variable inside a function, refer to the variable by using the global\nassignment operator\n<<-\n:\ntxt <- \"awesome\"\nmy_function <- function() {\ntxt <<- \"fantastic\"\npaste(\"R is\", txt)\n}\nmy_function()\npaste(\"R is\", \n  txt)\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "txt <- \"awesome\"\nmy_function <- function() {\npaste(\"R is\", \n  txt)\n}\nmy_function()",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "txt <- \"global variable\"\nmy_function <- function() {\ntxt = \"fantastic\"\npaste(\"R is\", txt)\n}\nmy_function()\ntxt # print txt",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "my_function <- function() {\ntxt <<- \"fantastic\"\npaste(\"R is\", \n  txt)\n}\nmy_function()\nprint(txt)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "txt <- \"awesome\"\nmy_function <- function() {\ntxt <<- \"fantastic\"\npaste(\"R is\", txt)\n}\nmy_function()\npaste(\"R is\", \n  txt)",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "txt <- \"awesome\"\nmy_function <- function() {\npaste(\"R is\", \n  txt)\n# TODO: Complete this line\nmy_function()",
      "solution": "txt <- \"awesome\"\nmy_function <- function() {\npaste(\"R is\", \n  txt)\n}\nmy_function()"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "txt <- \"global variable\"\nmy_function <- function() {\ntxt = \"fantastic\"\npaste(\"R is\", txt)\n# TODO: Complete this line\nmy_function()\ntxt # print txt",
      "solution": "txt <- \"global variable\"\nmy_function <- function() {\ntxt = \"fantastic\"\npaste(\"R is\", txt)\n}\nmy_function()\ntxt # print txt"
    }
  ],
  "related_topics": [
    {
      "id": "6a5d64d3-33a5-4a05-a9a9-0af19e9bb4bb",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "15899f27-198d-46ac-98c2-1fdb263fb4de",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "bcbc5535-ee4a-4fe2-af4b-cba53a86d3a9",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is R\nGlobal Variables\n\nGlobal Variables\nVariables that are created outside of a function?",
      "options": [
        "known as\nglobal\nvariables",
        "None of the above.",
        "None of the above.",
        "Not a R\nGlobal Variables\n\nGlobal Variables\nVariables that are created outside of a function."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of R\nGlobal Variables\n\nGlobal Variables\nVariables that are created outside of a function is 'known as\nglobal\nvariables'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers RGlobal Variables concepts and techniques. You'll learn how to use RGlobal Variables effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of RGlobal Variables and how to apply it in your projects."
}