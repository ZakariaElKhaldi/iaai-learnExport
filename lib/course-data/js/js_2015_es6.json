{
  "title": "JavaScript ES6",
  "url": "https://www.w3schools.com/js/js_es6.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Javascript ES6",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "ECMAScript 2015 was the second major revision to JavaScript.",
      "html": "<p>ECMAScript 2015 was the second major revision to JavaScript.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "ECMAScript 2015 is also known as ES6 and ECMAScript 6.",
      "html": "<p>ECMAScript 2015 is also known as ES6 and ECMAScript 6.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This chapter describes the most important features of ES6.",
      "html": "<p>This chapter describes the most important features of ES6.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "New Features in ES6",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Browser Support for ES6 (2015)",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "ES6 is fully supported in all modern browsers since June 2017:",
      "html": "<p>ES6 is fully supported in all modern browsers since June 2017:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "browserref",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"browserref notranslate\" style=\"font-size:15px\">\n<tbody><tr style=\"height:60px\">\n<th class=\"bsChrome\" style=\"width:20%;\" title=\"Chrome\"></th>\n<th class=\"bsEdge\" style=\"width:20%;\" title=\"Edge\"></th>\n<th class=\"bsFirefox\" style=\"width:20%;\" title=\"Firefox\"></th>\n<th class=\"bsSafari\" style=\"width:20%;\" title=\"Safari\"></th>\n<th class=\"bsOpera\" style=\"width:19%;\" title=\"Opera\"></th>\n</tr>\n<tr>\n<td>Chrome<br/>51</td>\n<td>Edge<br/>15</td>\n<td>Firefox<br/>54</td>\n<td>Safari<br/>10</td>\n<td>Opera<br/>38</td>\n</tr>\n<tr>\n<td>May 2016</td>\n<td>Apr 2017</td>\n<td>Jun 2017</td>\n<td>Sep 2016</td>\n<td>Jun 2016</td>\n</tr>\n</tbody>\n</table>",
      "code_classes": [
        "browserref",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "browserref",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "ES6 is not supported in Internet Explorer.",
      "html": "<p>ES6 is not supported in Internet Explorer.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript let",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The let keyword allows you to declare a variable with block scope.",
      "html": "<p>The <code>let</code> keyword allows you to declare a variable with \nblock scope.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_let",
        "syntaxHighlighting": [
          {
            "text": "\nvar x = 10;\n// Here x is 10\n{ \n\u00a0\u00a0let x = 2;\n  \u00a0 // Here x is 2}\n// Here x is 10\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Here x is 10",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Here x is 2",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Here x is 10\n ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "var x = 10;\n// Here x is 10\n{\nlet x = 2;\n// Here x is 2}\n// Here x is 10",
      "syntax_highlighting": [
        {
          "text": "\nvar x = 10;\n// Here x is 10\n{ \n\u00a0\u00a0let x = 2;\n  \u00a0 // Here x is 2}\n// Here x is 10\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Here x is 10",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Here x is 2",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Here x is 10\n ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> x = <span class=\"jsnumbercolor\" style=\"color:#905\">10</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Here x is 10<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>{ <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = <span class=\"jsnumbercolor\" style=\"color:#905\">2</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Here x is 2<br/></span>}<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Here x is 10\n </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_let",
      "syntax_highlighting_data": [
        {
          "text": "\nvar x = 10;\n// Here x is 10\n{ \n\u00a0\u00a0let x = 2;\n  \u00a0 // Here x is 2}\n// Here x is 10\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Here x is 10",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Here x is 2",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Here x is 10\n ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "JavaScript Let",
          "href": "https://www.w3schools.com/js_let.asp",
          "title": ""
        }
      ],
      "text": "Read more about let in the chapter: JavaScript Let .",
      "html": "<p>Read more about <code>let</code> in the chapter: <a href=\"js_let.asp\">JavaScript Let</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript const",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The const keyword allows you to declare a constant (a JavaScript variable with a constant value).",
      "html": "<p>The <code>const</code> keyword allows you to declare a constant (a \nJavaScript variable with a constant value).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Constants are similar to let variables, except that the value cannot be changed.",
      "html": "<p>Constants are similar to let variables, except that the value cannot be changed.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_const",
        "syntaxHighlighting": [
          {
            "text": "\nvar x = 10;\n// Here x is 10\n{ \n\u00a0\u00a0const x = 2;\n  \u00a0 // Here x is 2}\n// Here x is 10\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Here x is 10",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Here x is 2",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Here x is 10\n ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "var x = 10;\n// Here x is 10\n{\nconst x = 2;\n// Here x is 2}\n// Here x is 10",
      "syntax_highlighting": [
        {
          "text": "\nvar x = 10;\n// Here x is 10\n{ \n\u00a0\u00a0const x = 2;\n  \u00a0 // Here x is 2}\n// Here x is 10\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Here x is 10",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Here x is 2",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Here x is 10\n ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> x = <span class=\"jsnumbercolor\" style=\"color:#905\">10</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Here x is 10<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>{ <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> x = <span class=\"jsnumbercolor\" style=\"color:#905\">2</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Here x is 2<br/></span>}<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Here x is 10\n </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_const",
      "syntax_highlighting_data": [
        {
          "text": "\nvar x = 10;\n// Here x is 10\n{ \n\u00a0\u00a0const x = 2;\n  \u00a0 // Here x is 2}\n// Here x is 10\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Here x is 10",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Here x is 2",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Here x is 10\n ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "JavaScript Const",
          "href": "https://www.w3schools.com/js_const.asp",
          "title": ""
        }
      ],
      "text": "Read more about const in the chapter: JavaScript Const .",
      "html": "<p>Read more about <code>const</code> in the chapter: <a href=\"js_const.asp\">JavaScript Const</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Arrow Functions",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Arrow functions allows a short syntax for writing function expressions.",
      "html": "<p>Arrow functions allows a short syntax for writing function expressions.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You don't need the function keyword, the return keyword, and the curly brackets .",
      "html": "<p>You don't need the <code>function</code> keyword, the <code>return</code> keyword, and the \n<strong>curly brackets</strong>.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_arrow",
        "syntaxHighlighting": [
          {
            "text": "\n// ES5\nvar x = function(x, y) {\n   \u00a0\u00a0\n   return x * y;\n}\n// ES6\nconst x = (x, y) => x * y; \n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// ES5",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// ES6",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "// ES5\nvar x = function(x, y) {\n\nreturn x * y;\n}\n// ES6\nconst x = (x, y) => x * y;",
      "syntax_highlighting": [
        {
          "text": "\n// ES5\nvar x = function(x, y) {\n   \u00a0\u00a0\n return x * y;\n}\n// ES6\nconst x = (x, y) => x * y; \n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// ES5",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// ES6",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// ES5<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> x = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span>(x, y) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>   \u00a0\u00a0<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">return</span> x * y;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// ES6<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> x = (x, y) =&gt; x * y;<br/> <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_arrow",
      "syntax_highlighting_data": [
        {
          "text": "\n// ES5\nvar x = function(x, y) {\n   \u00a0\u00a0\n   return x * y;\n}\n// ES6\nconst x = (x, y) => x * y; \n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// ES5",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// ES6",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Arrow functions do not have their own this . They are not well suited for defining object methods .",
      "html": "<p>Arrow functions do not have their own <code>this</code>.\nThey are not well suited for defining <strong>object methods</strong>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Arrow functions are not hoisted. They must be defined before they are used.",
      "html": "<p>Arrow functions are not hoisted. They must be defined <strong>before</strong> they are used.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Using const is safer than using var , because a function expression is always a constant value.",
      "html": "<p>Using <code>const</code>\nis safer than using <code>var</code>, because a function expression is \nalways a constant value.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can only omit the return keyword and the curly brackets if the function is a single statement. Because of this, it might be a good habit to always keep them:",
      "html": "<p>You can only omit the <code>return</code> keyword and the curly brackets if the function is a single statement. \nBecause of this, it might be a good habit to always keep them:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_arrow_safe",
        "syntaxHighlighting": [
          {
            "text": "\nconst x = (x, y) => { return x * y }; \n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const x = (x, y) => { return x * y };",
      "syntax_highlighting": [
        {
          "text": "\nconst x = (x, y) => { return x * y }; \n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> x = (x, y) =&gt; { <span class=\"jskeywordcolor\" style=\"color:#005cc5\">return</span> x * y };<br/> <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_arrow_safe",
      "syntax_highlighting_data": [
        {
          "text": "\nconst x = (x, y) => { return x * y }; \n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "JavaScript Arrow Function",
          "href": "https://www.w3schools.com/js_arrow_function.asp",
          "title": ""
        }
      ],
      "text": "Learn more about Arrow Functions in the chapter: JavaScript Arrow Function .",
      "html": "<p>Learn more about Arrow Functions in the chapter: <a href=\"js_arrow_function.asp\">JavaScript Arrow Function</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Object Destructuring",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Destructuring assignment makes it easy to assign array values and object properties to variables.",
      "html": "<p>Destructuring assignment makes it easy to assign array values and object properties to variables.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_object_destructuring",
        "syntaxHighlighting": [
          {
            "text": "\n// Create an Object\nconst person = {\n\u00a0 firstName: \"John\",\n\u00a0 lastName: \"Doe\",\n\u00a0 age: 50,\n\u00a0 eyeColor: \"blue\"\n};\n\n// Destructuring Assignment\nlet { firstName, age } = person;\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Create an Object",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"John\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"Doe\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "50",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"blue\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Destructuring Assignment",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create an Object\nconst person = {\nfirstName: \"John\",\nlastName: \"Doe\",\nage: 50,\neyeColor: \"blue\"\n};\n\n// Destructuring Assignment\nlet { firstName, age } = person;",
      "syntax_highlighting": [
        {
          "text": "\n// Create an Object\nconst person = {\n\u00a0 firstName: \"John\",\n\u00a0 lastName: \"Doe\",\n\u00a0 age: 50,\n\u00a0 eyeColor: \"blue\"\n};\n\n// Destructuring Assignment\nlet { firstName, age } = person;\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Create an Object",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"John\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"Doe\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "50",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"blue\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Destructuring Assignment",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Create an Object<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> person = {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 firstName: <span class=\"jsstringcolor\" style=\"color:green\">\"John\"</span>,<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 lastName: <span class=\"jsstringcolor\" style=\"color:green\">\"Doe\"</span>,<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 age: <span class=\"jsnumbercolor\" style=\"color:#905\">50</span>,<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 eyeColor: <span class=\"jsstringcolor\" style=\"color:green\">\"blue\"</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>};<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Destructuring Assignment<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> { firstName, age } = person;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_object_destructuring",
      "syntax_highlighting_data": [
        {
          "text": "\n// Create an Object\nconst person = {\n\u00a0 firstName: \"John\",\n\u00a0 lastName: \"Doe\",\n\u00a0 age: 50,\n\u00a0 eyeColor: \"blue\"\n};\n\n// Destructuring Assignment\nlet { firstName, age } = person;\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Create an Object",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"John\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"Doe\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "50",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"blue\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Destructuring Assignment",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Note:",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When destructuring an object, you must use the same name for the variables as the corresponding object keys (names).",
      "html": "<p>When destructuring an object, you must use the same name for the variables\nas the corresponding object keys (names).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The order of the keys (names) does not matter.",
      "html": "<p>The order of the keys (names) does not matter.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Array Destructuring",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Destructuring assignment makes it easy to assign array values and object properties to variables.",
      "html": "<p>Destructuring assignment makes it easy to assign array values and object properties to variables.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_array_destructuring",
        "syntaxHighlighting": [
          {
            "text": "\n// Create an Array\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\n\n// Destructuring Assignment\nlet [fruit1, fruit2] = fruits;\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Create an Array",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Banana\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Orange\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Apple\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Mango\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Destructuring Assignment",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create an Array\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\n\n// Destructuring Assignment\nlet [fruit1, fruit2] = fruits;",
      "syntax_highlighting": [
        {
          "text": "\n// Create an Array\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\n\n// Destructuring Assignment\nlet [fruit1, fruit2] = fruits;\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Create an Array",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Banana\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Orange\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Apple\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Mango\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Destructuring Assignment",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Create an Array<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> fruits = [<span class=\"jsstringcolor\" style=\"color:green\">\"Banana\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Orange\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Apple\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Mango\"</span>];<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Destructuring Assignment<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> [fruit1, fruit2] = fruits;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_array_destructuring",
      "syntax_highlighting_data": [
        {
          "text": "\n// Create an Array\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\n\n// Destructuring Assignment\nlet [fruit1, fruit2] = fruits;\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Create an Array",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Banana\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Orange\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Apple\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Mango\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Destructuring Assignment",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Spread (...) Operator",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The ... operator expands an iterable (like an array) into more elements:",
      "html": "<p>The ... operator expands an iterable (like an array) into more elements: \n</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_oper_spread_year",
        "syntaxHighlighting": [
          {
            "text": "\nconst q1 = [\"Jan\", \"Feb\", \"Mar\"];\nconst q2 = [\"Apr\", \"May\", \"Jun\"];\nconst q3 = [\"Jul\", \"Aug\", \"Sep\"];\nconst q4 = [\"Oct\", \"Nov\", \"May\"];\n\nconst year = [...q1, ...q2, ...q3, ...q4];\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Jan\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Feb\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Mar\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Apr\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"May\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Jun\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Jul\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Aug\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Sep\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Oct\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Nov\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"May\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "q1",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "q2",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "q3",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "q4",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const q1 = [\"Jan\", \"Feb\", \"Mar\"];\nconst q2 = [\"Apr\", \"May\", \"Jun\"];\nconst q3 = [\"Jul\", \"Aug\", \"Sep\"];\nconst q4 = [\"Oct\", \"Nov\", \"May\"];\n\nconst year = [...q1, ...q2, ...q3, ...q4];",
      "syntax_highlighting": [
        {
          "text": "\nconst q1 = [\"Jan\", \"Feb\", \"Mar\"];\nconst q2 = [\"Apr\", \"May\", \"Jun\"];\nconst q3 = [\"Jul\", \"Aug\", \"Sep\"];\nconst q4 = [\"Oct\", \"Nov\", \"May\"];\n\nconst year = [...q1, ...q2, ...q3, ...q4];\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Jan\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Feb\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Mar\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Apr\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"May\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Jun\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Jul\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Aug\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Sep\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Oct\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Nov\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"May\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "q1",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "q2",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "q3",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "q4",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> q1 = [<span class=\"jsstringcolor\" style=\"color:green\">\"Jan\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Feb\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Mar\"</span>];<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> q2 = [<span class=\"jsstringcolor\" style=\"color:green\">\"Apr\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"May\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Jun\"</span>];<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> q3 = [<span class=\"jsstringcolor\" style=\"color:green\">\"Jul\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Aug\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Sep\"</span>];<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> q4 = [<span class=\"jsstringcolor\" style=\"color:green\">\"Oct\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Nov\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"May\"</span>];<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> year = [.<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\">q1</span>, .<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\">q2</span>, .<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\">q3</span>, .<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\">q4</span>];<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_oper_spread_year",
      "syntax_highlighting_data": [
        {
          "text": "\nconst q1 = [\"Jan\", \"Feb\", \"Mar\"];\nconst q2 = [\"Apr\", \"May\", \"Jun\"];\nconst q3 = [\"Jul\", \"Aug\", \"Sep\"];\nconst q4 = [\"Oct\", \"Nov\", \"May\"];\n\nconst year = [...q1, ...q2, ...q3, ...q4];\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Jan\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Feb\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Mar\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Apr\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"May\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Jun\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Jul\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Aug\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Sep\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Oct\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Nov\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"May\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "q1",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "q2",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "q3",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "q4",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The ... operator can be used to expand an iterable into more arguments for function calls:",
      "html": "<p>The ... operator can be used to expand an iterable into more arguments for function calls:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_oper_spread_arguments",
        "syntaxHighlighting": [
          {
            "text": "\nconst numbers = [23,55,21,87,56];\nlet maxValue = Math.max(...numbers);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "23",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "55",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "21",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "87",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "56",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "max",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "numbers",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const numbers = [23,55,21,87,56];\nlet maxValue = Math.max(...numbers);",
      "syntax_highlighting": [
        {
          "text": "\nconst numbers = [23,55,21,87,56];\nlet maxValue = Math.max(...numbers);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "23",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "55",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "21",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "87",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "56",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "max",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "numbers",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> numbers = [<span class=\"jsnumbercolor\" style=\"color:#905\">23</span>,<span class=\"jsnumbercolor\" style=\"color:#905\">55</span>,<span class=\"jsnumbercolor\" style=\"color:#905\">21</span>,<span class=\"jsnumbercolor\" style=\"color:#905\">87</span>,<span class=\"jsnumbercolor\" style=\"color:#905\">56</span>];<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> maxValue = Math.<span class=\"jspropertycolor\" style=\"color:black\">max</span>(.<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\">numbers</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_oper_spread_arguments",
      "syntax_highlighting_data": [
        {
          "text": "\nconst numbers = [23,55,21,87,56];\nlet maxValue = Math.max(...numbers);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "23",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "55",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "21",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "87",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "56",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "max",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "numbers",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The For/Of Loop",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The JavaScript for/of statement loops through the values of an iterable objects.",
      "html": "<p>The JavaScript <code>for/of</code> statement loops \nthrough the values of an iterable objects.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "for/of lets you loop over data structures that are iterable such as Arrays, Strings, Maps, NodeLists, and more.",
      "html": "<p> <code>for/of</code> lets you loop over data structures \nthat are iterable such as Arrays, Strings, Maps, NodeLists, and more.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The for/of loop has the following syntax:",
      "html": "<p>The <code>for/of</code> loop has the following syntax:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nfor (variable of iterable) {\n    \u00a0 // code block to be executed\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// code block to be executed",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "for (variable of iterable) {\n// code block to be executed\n}",
      "syntax_highlighting": [
        {
          "text": "\nfor (variable of iterable) {\n    \u00a0 // code block to be executed\n}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// code block to be executed",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><div>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">for</span> (<i>variable</i> of <i>iterable</i>) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>    \u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// <i>code block to be executed</i><br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<br/>\n</div> </span></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nfor (variable of iterable) {\n    \u00a0 // code block to be executed\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// code block to be executed",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "variable - For every iteration the value of the next property is assigned to the variable. Variable can be declared with const , let , or var .",
      "html": "<p><em>variable</em> - For every iteration the value of the next property is \nassigned to the variable. <em>Variable</em> can be declared with\n<code>const</code>, <code>let</code>, or <code>var</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "iterable - An object that has iterable properties.",
      "html": "<p><em>iterable</em> - An object that has iterable properties.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Looping over an Array",
      "level": "h3"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_object_for_of",
        "syntaxHighlighting": [
          {
            "text": "\nconst cars = [\"BMW\", \"Volvo\", \"Mini\"];\nlet text = \"\";\nfor (let x of cars) {\n\u00a0 text += x + \" \";\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Mini\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\" \"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const cars = [\"BMW\", \"Volvo\", \"Mini\"];\nlet text = \"\";\nfor (let x of cars) {\ntext += x + \" \";\n}",
      "syntax_highlighting": [
        {
          "text": "\nconst cars = [\"BMW\", \"Volvo\", \"Mini\"];\nlet text = \"\";\nfor (let x of cars) {\n\u00a0 text += x + \" \";\n}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Mini\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\" \"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> cars = [<span class=\"jsstringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Mini\"</span>];<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"\"</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">for</span> (<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x of cars) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 text += x + <span class=\"jsstringcolor\" style=\"color:green\">\" \"</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_object_for_of",
      "syntax_highlighting_data": [
        {
          "text": "\nconst cars = [\"BMW\", \"Volvo\", \"Mini\"];\nlet text = \"\";\nfor (let x of cars) {\n\u00a0 text += x + \" \";\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Mini\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\" \"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Looping over a String",
      "level": "h3"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_object_for_of2",
        "syntaxHighlighting": [
          {
            "text": "\nlet language = \"JavaScript\";\nlet text = \"\";\n\n\nfor (let x of language) {\u00a0 \n\u00a0 text += x + \" \";\n}\n   ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"JavaScript\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\" \"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let language = \"JavaScript\";\nlet text = \"\";\n\nfor (let x of language) {\ntext += x + \" \";\n}",
      "syntax_highlighting": [
        {
          "text": "\nlet language = \"JavaScript\";\nlet text = \"\";\n\nfor (let x of language) {\u00a0 \n\u00a0 text += x + \" \";\n}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"JavaScript\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\" \"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> language = <span class=\"jsstringcolor\" style=\"color:green\">\"JavaScript\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"\"</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">for</span> (<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x of language) {<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 text += x + <span class=\"jsstringcolor\" style=\"color:green\">\" \"</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_object_for_of2",
      "syntax_highlighting_data": [
        {
          "text": "\nlet language = \"JavaScript\";\nlet text = \"\";\n\n\nfor (let x of language) {\u00a0 \n\u00a0 text += x + \" \";\n}\n   ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"JavaScript\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\" \"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "JavaScript Loop For/In/Of",
          "href": "https://www.w3schools.com/js_loop_forin.asp",
          "title": ""
        }
      ],
      "text": "Learn more in the chapter: JavaScript Loop For/In/Of .",
      "html": "<p>Learn more in the chapter: <a href=\"js_loop_forin.asp\">JavaScript Loop For/In/Of</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript Maps",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Being able to use an Object as a key is an important Map feature.",
      "html": "<p>Being able to use an Object as a key is an important Map feature.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_map_create_array",
        "syntaxHighlighting": [
          {
            "text": "\nconst fruits = new Map([\n  [\"apples\", 500],\n  [\"bananas\", 300],\n  [\"oranges\", 200]\n]);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"apples\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "500",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"bananas\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "300",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"oranges\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "200",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const fruits = new Map([\n[\"apples\", 500],\n[\"bananas\", 300],\n[\"oranges\", 200]\n]);",
      "syntax_highlighting": [
        {
          "text": "\nconst fruits = new Map([\n  [\"apples\", 500],\n  [\"bananas\", 300],\n  [\"oranges\", 200]\n]);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"apples\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "500",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"bananas\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "300",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"oranges\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "200",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> fruits = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> Map([<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  [<span class=\"jsstringcolor\" style=\"color:green\">\"apples\"</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">500</span>],<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  [<span class=\"jsstringcolor\" style=\"color:green\">\"bananas\"</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">300</span>],<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  [<span class=\"jsstringcolor\" style=\"color:green\">\"oranges\"</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">200</span>]<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>]);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_map_create_array",
      "syntax_highlighting_data": [
        {
          "text": "\nconst fruits = new Map([\n  [\"apples\", 500],\n  [\"bananas\", 300],\n  [\"oranges\", 200]\n]);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"apples\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "500",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"bananas\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "300",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"oranges\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "200",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "JavaScript Maps",
          "href": "https://www.w3schools.com/js_object_maps.asp",
          "title": ""
        }
      ],
      "text": "Learn more about Map objects, and the difference between a Map and an Array, in the the chapter: JavaScript Maps .",
      "html": "<p>Learn more about Map objects, and the difference between a Map and an Array, in the the chapter: <a href=\"js_object_maps.asp\">JavaScript Maps</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript Sets",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_set_create_values",
        "syntaxHighlighting": [
          {
            "text": "\n// Create a Set\nconst letters = new Set();\n\n// Add some values to the Set\nletters.add(\"a\");\nletters.add(\"b\");\nletters.add(\"c\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Create a Set",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Add some values to the Set",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "add",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"a\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "add",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"b\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "add",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"c\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create a Set\nconst letters = new Set();\n\n// Add some values to the Set\nletters.add(\"a\");\nletters.add(\"b\");\nletters.add(\"c\");",
      "syntax_highlighting": [
        {
          "text": "\n// Create a Set\nconst letters = new Set();\n\n// Add some values to the Set\nletters.add(\"a\");\nletters.add(\"b\");\nletters.add(\"c\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Create a Set",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Add some values to the Set",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "add",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"a\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "add",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"b\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "add",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"c\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Create a Set<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> letters = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> Set();<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Add some values to the Set<br/></span>\nletters.<span class=\"jspropertycolor\" style=\"color:black\">add</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"a\"</span>);<br/>\nletters.<span class=\"jspropertycolor\" style=\"color:black\">add</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"b\"</span>);<br/>\nletters.<span class=\"jspropertycolor\" style=\"color:black\">add</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"c\"</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_set_create_values",
      "syntax_highlighting_data": [
        {
          "text": "\n// Create a Set\nconst letters = new Set();\n\n// Add some values to the Set\nletters.add(\"a\");\nletters.add(\"b\");\nletters.add(\"c\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Create a Set",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Add some values to the Set",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "add",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"a\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "add",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"b\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "add",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"c\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "JavaScript Sets",
          "href": "https://www.w3schools.com/js_object_sets.asp",
          "title": ""
        }
      ],
      "text": "Learn more about Set objects in the the chapter: JavaScript Sets .",
      "html": "<p>Learn more about Set objects in the the chapter: <a href=\"js_object_sets.asp\">JavaScript Sets</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript Classes",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "JavaScript Classes are templates for JavaScript Objects.",
      "html": "<p>JavaScript Classes are templates for JavaScript Objects.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Use the keyword class to create a class.",
      "html": "<p>Use the keyword <code>class</code> to create a class.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Always add a method named constructor() :",
      "html": "<p>Always add a method named <code>constructor()</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nclass ClassName {\n\u00a0  constructor() { ... }\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "class",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "class ClassName {\nconstructor() { ... }\n}",
      "syntax_highlighting": [
        {
          "text": "\nclass ClassName {\n\u00a0  constructor() { ... }\n}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "class",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">class</span> ClassName {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0  constructor() { .<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span> }<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nclass ClassName {\n\u00a0  constructor() { ... }\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "class",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nclass Car {\n\u00a0  constructor(name, year) {\n\u00a0\u00a0\u00a0 this.name = name;\n\u00a0\u00a0\u00a0 this.year = year;\n\u00a0 }\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "class",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "name",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "year",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "class Car {\nconstructor(name, year) {\nthis.name = name;\nthis.year = year;\n}\n}",
      "syntax_highlighting": [
        {
          "text": "\nclass Car {\n\u00a0  constructor(name, year) {\n\u00a0\u00a0\u00a0 this.name = name;\n\u00a0\u00a0\u00a0 this.year = year;\n\u00a0 }\n}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "class",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "name",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "year",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">class</span> Car {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0  constructor(name, year) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">name</span> = name;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">year</span> = year;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 }<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nclass Car {\n\u00a0  constructor(name, year) {\n\u00a0\u00a0\u00a0 this.name = name;\n\u00a0\u00a0\u00a0 this.year = year;\n\u00a0 }\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "class",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "name",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "year",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The example above creates a class named \"Car\".",
      "html": "<p>The example above creates a class named \"Car\".</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The class has two initial properties: \"name\" and \"year\".",
      "html": "<p>The class has two initial properties: \"name\" and \"year\".</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A JavaScript class is not an object.",
      "html": "<p>A JavaScript class is <b>not</b> an object.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It is a template for JavaScript objects.",
      "html": "<p>It is a <b>template</b> for JavaScript objects.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Using a Class",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When you have a class, you can use the class to create objects:",
      "html": "<p>When you have a class, you can use the class to create objects:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_class_init",
        "syntaxHighlighting": [
          {
            "text": "\nconst myCar1 = new Car(\"Ford\", 2014);\nconst myCar2 = new Car(\"Audi\", 2019);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "2014",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Audi\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "2019",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const myCar1 = new Car(\"Ford\", 2014);\nconst myCar2 = new Car(\"Audi\", 2019);",
      "syntax_highlighting": [
        {
          "text": "\nconst myCar1 = new Car(\"Ford\", 2014);\nconst myCar2 = new Car(\"Audi\", 2019);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "2014",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Audi\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "2019",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> myCar1 = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> Car(<span class=\"jsstringcolor\" style=\"color:green\">\"Ford\"</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">2014</span>);<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> myCar2 = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> Car(<span class=\"jsstringcolor\" style=\"color:green\">\"Audi\"</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">2019</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_class_init",
      "syntax_highlighting_data": [
        {
          "text": "\nconst myCar1 = new Car(\"Ford\", 2014);\nconst myCar2 = new Car(\"Audi\", 2019);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "2014",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Audi\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "2019",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "JavaScript Classes",
          "href": "https://www.w3schools.com/js_classes.asp",
          "title": ""
        }
      ],
      "text": "Learn more about classes in the the chapter: JavaScript Classes .",
      "html": "<p>Learn more about classes in the the chapter: <a href=\"js_classes.asp\">JavaScript Classes</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript Promises",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A Promise is a JavaScript object that links \"Producing Code\" and \"Consuming Code\".",
      "html": "<p>A Promise is a JavaScript object that links \"Producing Code\" and \"Consuming Code\".</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "\"Producing Code\" can take some time and \"Consuming Code\" must wait for the result.",
      "html": "<p>\"Producing Code\" can take some time and \"Consuming Code\" must wait for the result.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nconst myPromise = new Promise(function(myResolve, myReject) {\n// \"Producing Code\" (May take some time)\n\n\u00a0 myResolve(); // when successful\n\u00a0 myReject(); \u00a0// when error\n});\n// \"Consuming Code\" (Must wait for a fulfilled Promise).\nmyPromise.then(\n\u00a0 function(value) { /* code if successful */ },\n\u00a0 function(error) { /* code if some error */ }\n);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// \"Producing Code\" (May take some time)",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// when successful",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// when error",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// \"Consuming Code\" (Must wait for a fulfilled Promise).",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "then",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "/* code if successful */",
            "color": "rgb(238, 153, 0)",
            "class": "jsregexpcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "/* code if some error */",
            "color": "rgb(238, 153, 0)",
            "class": "jsregexpcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const myPromise = new Promise(function(myResolve, myReject) {\n// \"Producing Code\" (May take some time)\n\nmyResolve(); // when successful\nmyReject(); \u00a0// when error\n});\n// \"Consuming Code\" (Must wait for a fulfilled Promise).\nmyPromise.then(\nfunction(value) { /* code if successful */ },\nfunction(error) { /* code if some error */ }\n);",
      "syntax_highlighting": [
        {
          "text": "\nconst myPromise = new Promise(function(myResolve, myReject) {\n// \"Producing Code\" (May take some time)\n\n\u00a0 myResolve(); // when successful\n\u00a0 myReject(); \u00a0// when error\n});\n// \"Consuming Code\" (Must wait for a fulfilled Promise).\nmyPromise.then(\n\u00a0 function(value) { /* code if successful */ },\n\u00a0 function(error) { /* code if some error */ }\n);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// \"Producing Code\" (May take some time)",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// when successful",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// when error",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// \"Consuming Code\" (Must wait for a fulfilled Promise).",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "then",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "/* code if successful */",
          "color": "#e90",
          "class": [
            "jsregexpcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "/* code if some error */",
          "color": "#e90",
          "class": [
            "jsregexpcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> myPromise = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> Promise(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span>(myResolve, myReject) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// \"Producing Code\" (May take some time)<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 myResolve(); <span class=\"commentcolor\" style=\"color:slategray\">// when successful<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 myReject(); \u00a0<span class=\"commentcolor\" style=\"color:slategray\">// when error<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>});<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// \"Consuming Code\" (Must wait for a fulfilled Promise).<br/></span>\nmyPromise.<span class=\"jskeywordcolor\" style=\"color:#005cc5\">then</span>(<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span>(value) { <span class=\"jsregexpcolor\" style=\"color:#e90\">/* code if successful */</span> },<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span>(error) { <span class=\"jsregexpcolor\" style=\"color:#e90\">/* code if some error */</span> }<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nconst myPromise = new Promise(function(myResolve, myReject) {\n// \"Producing Code\" (May take some time)\n\n\u00a0 myResolve(); // when successful\n\u00a0 myReject(); \u00a0// when error\n});\n// \"Consuming Code\" (Must wait for a fulfilled Promise).\nmyPromise.then(\n\u00a0 function(value) { /* code if successful */ },\n\u00a0 function(error) { /* code if some error */ }\n);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// \"Producing Code\" (May take some time)",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// when successful",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// when error",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// \"Consuming Code\" (Must wait for a fulfilled Promise).",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "then",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "/* code if successful */",
          "color": "rgb(238, 153, 0)",
          "class": "jsregexpcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "/* code if some error */",
          "color": "rgb(238, 153, 0)",
          "class": "jsregexpcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_promise3",
        "syntaxHighlighting": [
          {
            "text": "\nconst myPromise = new Promise(function(myResolve, myReject) {\n\u00a0 setTimeout(function() { myResolve(\"I love You !!\"); }, 3000);});\nmyPromise.then(function(value) {\n\u00a0 document.getElementById(\"demo\").innerHTML = value;\n});\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"I love You !!\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "3000",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "then",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"demo\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const myPromise = new Promise(function(myResolve, myReject) {\nsetTimeout(function() { myResolve(\"I love You !!\"); }, 3000);});\nmyPromise.then(function(value) {\ndocument.getElementById(\"demo\").innerHTML = value;\n});",
      "syntax_highlighting": [
        {
          "text": "\nconst myPromise = new Promise(function(myResolve, myReject) {\n\u00a0 setTimeout(function() { myResolve(\"I love You !!\"); }, 3000);});\nmyPromise.then(function(value) {\n\u00a0 document.getElementById(\"demo\").innerHTML = value;\n});\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"I love You !!\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "3000",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "then",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"demo\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> myPromise = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> Promise(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span>(myResolve, myReject) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 setTimeout(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span>() { myResolve(<span class=\"jsstringcolor\" style=\"color:green\">\"I love You !!\"</span>); }, <span class=\"jsnumbercolor\" style=\"color:#905\">3000</span>);<br/>});<br/><br/>\nmyPromise.<span class=\"jskeywordcolor\" style=\"color:#005cc5\">then</span>(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span>(value) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 document.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"demo\"</span>).<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span> = value;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>});<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_promise3",
      "syntax_highlighting_data": [
        {
          "text": "\nconst myPromise = new Promise(function(myResolve, myReject) {\n\u00a0 setTimeout(function() { myResolve(\"I love You !!\"); }, 3000);});\nmyPromise.then(function(value) {\n\u00a0 document.getElementById(\"demo\").innerHTML = value;\n});\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"I love You !!\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "3000",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "then",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"demo\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "JavaScript Promises",
          "href": "https://www.w3schools.com/js_promise.asp",
          "title": ""
        }
      ],
      "text": "Learn more about Promises in the the chapter: JavaScript Promises .",
      "html": "<p>Learn more about Promises in the the chapter: <a href=\"js_promise.asp\">JavaScript Promises</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Symbol Type",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A JavaScript Symbol is a primitive data type just like Number, String, or Boolean.",
      "html": "<p>A JavaScript Symbol is a primitive data type just like Number, String, or Boolean.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It represents a unique \"hidden\" identifier that no other code can accidentally access.",
      "html": "<p>It represents a unique \"hidden\" identifier that no other code can accidentally access.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "For instance, if different coders want to add a person.id property to a person object belonging to a third-party code, they could mix each others values.",
      "html": "<p>For instance, if different coders want to add a person.id property to a person object belonging to a third-party code,\nthey could mix each others values.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Using Symbol() to create a unique identifiers, solves this problem:",
      "html": "<p>Using Symbol() to create a unique identifiers, solves this problem:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_symbol",
        "syntaxHighlighting": [
          {
            "text": "\nconst person = {\n\u00a0 firstName: \"John\",\n\u00a0 lastName: \"Doe\",\n\u00a0 age: 50,\n\u00a0 eyeColor: \"blue\"\n};\nlet id = Symbol('id');\nperson[id] = 140353;\n// Now person[id] = 140353\n// but person.id is still undefined\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"John\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"Doe\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "50",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"blue\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "'id'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "140353",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Now person[id] = 140353",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// but person.id is still undefined\n ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const person = {\nfirstName: \"John\",\nlastName: \"Doe\",\nage: 50,\neyeColor: \"blue\"\n};\nlet id = Symbol('id');\nperson[id] = 140353;\n// Now person[id] = 140353\n// but person.id is still undefined",
      "syntax_highlighting": [
        {
          "text": "\nconst person = {\n\u00a0 firstName: \"John\",\n\u00a0 lastName: \"Doe\",\n\u00a0 age: 50,\n\u00a0 eyeColor: \"blue\"\n};\nlet id = Symbol('id');\nperson[id] = 140353;\n// Now person[id] = 140353\n// but person.id is still undefined\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"John\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"Doe\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "50",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"blue\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "'id'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "140353",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Now person[id] = 140353",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// but person.id is still undefined\n ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> person = {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 firstName: <span class=\"jsstringcolor\" style=\"color:green\">\"John\"</span>,<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 lastName: <span class=\"jsstringcolor\" style=\"color:green\">\"Doe\"</span>,<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 age: <span class=\"jsnumbercolor\" style=\"color:#905\">50</span>,<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 eyeColor: <span class=\"jsstringcolor\" style=\"color:green\">\"blue\"</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>};<br/><br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> id = Symbol(<span class=\"jsstringcolor\" style=\"color:green\">'id'</span>);<br/>\nperson[id] = <span class=\"jsnumbercolor\" style=\"color:#905\">140353</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Now person[id] = 140353<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// but person.id is still undefined\n </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_symbol",
      "syntax_highlighting_data": [
        {
          "text": "\nconst person = {\n\u00a0 firstName: \"John\",\n\u00a0 lastName: \"Doe\",\n\u00a0 age: 50,\n\u00a0 eyeColor: \"blue\"\n};\nlet id = Symbol('id');\nperson[id] = 140353;\n// Now person[id] = 140353\n// but person.id is still undefined\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"John\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"Doe\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "50",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"blue\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "'id'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "140353",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Now person[id] = 140353",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// but person.id is still undefined\n ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Note",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Symbols are always unique.",
      "html": "<p>Symbols are always unique.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you create two symbols with the same description they will have different values:",
      "html": "<p>If you create two symbols with the same description they will have different values:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nSymbol(\"id\") == Symbol(\"id\"); // false\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\"id\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"id\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// false\n ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Symbol(\"id\") == Symbol(\"id\"); // false",
      "syntax_highlighting": [
        {
          "text": "\nSymbol(\"id\") == Symbol(\"id\"); // false\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\"id\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"id\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// false\n ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nSymbol(<span class=\"jsstringcolor\" style=\"color:green\">\"id\"</span>) == Symbol(<span class=\"jsstringcolor\" style=\"color:green\">\"id\"</span>); <span class=\"commentcolor\" style=\"color:slategray\">// false\n </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nSymbol(\"id\") == Symbol(\"id\"); // false\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\"id\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"id\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// false\n ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Default Parameter Values",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "ES6 allows function parameters to have default values.",
      "html": "<p>ES6 allows function parameters to have default values.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_default",
        "syntaxHighlighting": [
          {
            "text": "\nfunction myFunction(x, y = 10) {\u00a0\n  // y is 10 if not passed or undefined\u00a0\n  return x + y;}myFunction(5); // will return 15 ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// y is 10 if not passed or undefined",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "5",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// will return 15 ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "function myFunction(x, y = 10) {\n// y is 10 if not passed or undefined\nreturn x + y;}myFunction(5); // will return 15",
      "syntax_highlighting": [
        {
          "text": "\nfunction myFunction(x, y = 10) {\u00a0\n // y is 10 if not passed or undefined\u00a0\n return x + y;}myFunction(5); // will return 15 ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// y is 10 if not passed or undefined",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "5",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// will return 15 ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> myFunction(x, y = <span class=\"jsnumbercolor\" style=\"color:#905\">10</span>) {<br/>\u00a0<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// y is 10 if not passed or undefined<br/></span>\u00a0<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">return</span> x + y;<br/>}<br/>myFunction(<span class=\"jsnumbercolor\" style=\"color:#905\">5</span>); <span class=\"commentcolor\" style=\"color:slategray\">// will return 15 </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_default",
      "syntax_highlighting_data": [
        {
          "text": "\nfunction myFunction(x, y = 10) {\u00a0\n  // y is 10 if not passed or undefined\u00a0\n  return x + y;}myFunction(5); // will return 15 ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// y is 10 if not passed or undefined",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "5",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// will return 15 ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Function Rest Parameter",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The rest parameter (...) allows a function to treat an indefinite number of arguments as an array:",
      "html": "<p>The rest parameter (...) allows a function to treat an indefinite number of arguments as an array:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_rest",
        "syntaxHighlighting": [
          {
            "text": "\nfunction sum(...args) {\n\u00a0 let sum = 0;\n\u00a0 for (let arg of args) sum += arg;\n\u00a0 return sum;\n}\nlet x = sum(4, 9, 16, 25, 29, 100, 66, 77);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "args",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "9",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "16",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "25",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "29",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "100",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "66",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "77",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "function sum(...args) {\nlet sum = 0;\nfor (let arg of args) sum += arg;\nreturn sum;\n}\nlet x = sum(4, 9, 16, 25, 29, 100, 66, 77);",
      "syntax_highlighting": [
        {
          "text": "\nfunction sum(...args) {\n\u00a0 let sum = 0;\n\u00a0 for (let arg of args) sum += arg;\n\u00a0 return sum;\n}\nlet x = sum(4, 9, 16, 25, 29, 100, 66, 77);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "args",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "9",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "16",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "25",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "29",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "100",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "66",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "77",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> sum(.<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\">args</span>) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> sum = <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">for</span> (<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> arg of args) sum += arg;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">return</span> sum;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<br/><br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = sum(<span class=\"jsnumbercolor\" style=\"color:#905\">4</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">9</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">16</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">25</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">29</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">100</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">66</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">77</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_rest",
      "syntax_highlighting_data": [
        {
          "text": "\nfunction sum(...args) {\n\u00a0 let sum = 0;\n\u00a0 for (let arg of args) sum += arg;\n\u00a0 return sum;\n}\nlet x = sum(4, 9, 16, 25, 29, 100, 66, 77);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "args",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "9",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "16",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "25",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "29",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "100",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "66",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "77",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "String.includes()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The includes() method returns true if a string contains a specified value, otherwise false :",
      "html": "<p>The <code>includes()</code> method returns <code>true</code> if a string contains a specified value,\notherwise <code>false</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_includes",
        "syntaxHighlighting": [
          {
            "text": "\nlet text = \"Hello world, welcome to the universe.\";\ntext.includes(\"world\")\u00a0\u00a0\u00a0\u00a0// Returns true\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Hello world, welcome to the universe.\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "includes",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"world\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// Returns true\n ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text = \"Hello world, welcome to the universe.\";\ntext.includes(\"world\")\u00a0\u00a0\u00a0\u00a0// Returns true",
      "syntax_highlighting": [
        {
          "text": "\nlet text = \"Hello world, welcome to the universe.\";\ntext.includes(\"world\")\u00a0\u00a0\u00a0\u00a0// Returns true\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Hello world, welcome to the universe.\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "includes",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"world\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// Returns true\n ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"Hello world, welcome to the universe.\"</span>;<br/>\ntext.<span class=\"jspropertycolor\" style=\"color:black\">includes</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"world\"</span>)\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// Returns true\n </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_includes",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text = \"Hello world, welcome to the universe.\";\ntext.includes(\"world\")\u00a0\u00a0\u00a0\u00a0// Returns true\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Hello world, welcome to the universe.\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "includes",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"world\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// Returns true\n ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "String.startsWith()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The startsWith() method returns true if a string begins with a specified value, otherwise false :",
      "html": "<p>The <code>startsWith()</code> method returns <code>true</code>\nif a string begins with a specified value, otherwise <code>false</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_startswith",
        "syntaxHighlighting": [
          {
            "text": "\nlet text = \"Hello world, welcome to the universe.\";\n\ntext.startsWith(\"Hello\")\u00a0\u00a0\u00a0// Returns true\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Hello world, welcome to the universe.\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "startsWith",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"Hello\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// Returns true\n ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text = \"Hello world, welcome to the universe.\";\n\ntext.startsWith(\"Hello\")\u00a0\u00a0\u00a0// Returns true",
      "syntax_highlighting": [
        {
          "text": "\nlet text = \"Hello world, welcome to the universe.\";\n\ntext.startsWith(\"Hello\")\u00a0\u00a0\u00a0// Returns true\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Hello world, welcome to the universe.\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "startsWith",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"Hello\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// Returns true\n ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"Hello world, welcome to the universe.\"</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/>\ntext.<span class=\"jspropertycolor\" style=\"color:black\">startsWith</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"Hello\"</span>)\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// Returns true\n </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_startswith",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text = \"Hello world, welcome to the universe.\";\n\ntext.startsWith(\"Hello\")\u00a0\u00a0\u00a0// Returns true\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Hello world, welcome to the universe.\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "startsWith",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"Hello\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// Returns true\n ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "String.endsWith()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The endsWith() method returns true if a string ends with a specified value, otherwise false :",
      "html": "<p>The <code>endsWith()</code> method returns <code>true</code>\nif a string ends with a specified value, otherwise <code>false</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_endswith",
        "syntaxHighlighting": [
          {
            "text": "\nvar text = \"John Doe\";\ntext.endsWith(\"Doe\")\u00a0\u00a0\u00a0\u00a0// Returns true\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"John Doe\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "endsWith",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"Doe\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// Returns true\n ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "var text = \"John Doe\";\ntext.endsWith(\"Doe\")\u00a0\u00a0\u00a0\u00a0// Returns true",
      "syntax_highlighting": [
        {
          "text": "\nvar text = \"John Doe\";\ntext.endsWith(\"Doe\")\u00a0\u00a0\u00a0\u00a0// Returns true\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"John Doe\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "endsWith",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"Doe\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// Returns true\n ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"John Doe\"</span>;<br/>\ntext.<span class=\"jspropertycolor\" style=\"color:black\">endsWith</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"Doe\"</span>)\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// Returns true\n </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_endswith",
      "syntax_highlighting_data": [
        {
          "text": "\nvar text = \"John Doe\";\ntext.endsWith(\"Doe\")\u00a0\u00a0\u00a0\u00a0// Returns true\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"John Doe\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "endsWith",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"Doe\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// Returns true\n ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Array entries()",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_entries",
        "syntaxHighlighting": [
          {
            "text": "\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\nconst f = fruits.entries();for (let x of f) {\n\u00a0 document.getElementById(\"demo\").innerHTML += x;}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Banana\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Orange\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Apple\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Mango\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "entries",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"demo\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\nconst f = fruits.entries();for (let x of f) {\ndocument.getElementById(\"demo\").innerHTML += x;}",
      "syntax_highlighting": [
        {
          "text": "\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\nconst f = fruits.entries();for (let x of f) {\n\u00a0 document.getElementById(\"demo\").innerHTML += x;}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Banana\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Orange\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Apple\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Mango\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "entries",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"demo\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> fruits = [<span class=\"jsstringcolor\" style=\"color:green\">\"Banana\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Orange\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Apple\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Mango\"</span>];<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> f = fruits.<span class=\"jspropertycolor\" style=\"color:black\">entries</span>();<br/><br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">for</span> (<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x of f) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 document.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"demo\"</span>).<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span> += x;<br/>}<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_entries",
      "syntax_highlighting_data": [
        {
          "text": "\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\nconst f = fruits.entries();for (let x of f) {\n\u00a0 document.getElementById(\"demo\").innerHTML += x;}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Banana\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Orange\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Apple\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Mango\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "entries",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"demo\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The entries() method returns an Array Iterator object with key/value pairs:",
      "html": "<p>The <code>entries()</code> method returns an Array Iterator object with key/value pairs:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "[0, \"Banana\"] [1, \"Orange\"] [2, \"Apple\"] [3, \"Mango\"]",
      "html": "<p>[0, \"Banana\"]<br/>[1, \"Orange\"]<br/>[2, \"Apple\"]<br/>[3, \"Mango\"]</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The entries() method does not change the original array.",
      "html": "<p>The <code>entries()</code> method does not change the original array.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Array.from()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Array.from() method returns an Array object from any object with a length property or any iterable object.",
      "html": "<p>The <code>Array.from()</code> method returns an Array object from any object with a length \nproperty or any iterable object.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_array_from",
        "syntaxHighlighting": [
          {
            "text": "\nArray.from(\"ABCDEFG\")\u00a0\u00a0\u00a0// Returns [A,B,C,D,E,F,G]\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "from",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"ABCDEFG\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// Returns [A,B,C,D,E,F,G]",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Array.from(\"ABCDEFG\")\u00a0\u00a0\u00a0// Returns [A,B,C,D,E,F,G]",
      "syntax_highlighting": [
        {
          "text": "\nArray.from(\"ABCDEFG\")\u00a0\u00a0\u00a0// Returns [A,B,C,D,E,F,G]\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "from",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"ABCDEFG\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// Returns [A,B,C,D,E,F,G]",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nArray.<span class=\"jspropertycolor\" style=\"color:black\">from</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"ABCDEFG\"</span>)\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// Returns [A,B,C,D,E,F,G]<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_array_from",
      "syntax_highlighting_data": [
        {
          "text": "\nArray.from(\"ABCDEFG\")\u00a0\u00a0\u00a0// Returns [A,B,C,D,E,F,G]\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "from",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"ABCDEFG\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// Returns [A,B,C,D,E,F,G]",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Array keys()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The keys() method returns an Array Iterator object with the keys of an array.",
      "html": "<p>The <code>keys()</code> method returns an Array Iterator object with the keys of an array.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_array_keys",
        "syntaxHighlighting": [
          {
            "text": "\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\nconst keys = fruits.keys();\nlet text = \"\";\nfor (let x of keys) {\n\u00a0 text += x + \"<br>\";}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Banana\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Orange\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Apple\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Mango\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "keys",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"<br>\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\nconst keys = fruits.keys();\nlet text = \"\";\nfor (let x of keys) {\ntext += x + \"<br>\";}",
      "syntax_highlighting": [
        {
          "text": "\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\nconst keys = fruits.keys();\nlet text = \"\";\nfor (let x of keys) {\n\u00a0 text += x + \"<br>\";}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Banana\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Orange\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Apple\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Mango\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "keys",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"<br>\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> fruits = [<span class=\"jsstringcolor\" style=\"color:green\">\"Banana\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Orange\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Apple\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Mango\"</span>];<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> keys = fruits.<span class=\"jspropertycolor\" style=\"color:black\">keys</span>();<br/><br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">for</span> (<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x of keys) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 text += x + <span class=\"jsstringcolor\" style=\"color:green\">\"&lt;br&gt;\"</span>;<br/>}<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_array_keys",
      "syntax_highlighting_data": [
        {
          "text": "\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\nconst keys = fruits.keys();\nlet text = \"\";\nfor (let x of keys) {\n\u00a0 text += x + \"<br>\";}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Banana\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Orange\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Apple\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Mango\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "keys",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"<br>\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Array find()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The find() method returns the value of the first array element that passes a test function.",
      "html": "<p>The <code>find()</code> method returns the value of the first array element that passes a \ntest function.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This example finds (returns the value of ) the first element that is larger than 18:",
      "html": "<p>This example finds (returns the value of ) the first element that is larger \nthan 18:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_array_find",
        "syntaxHighlighting": [
          {
            "text": "\n  const numbers = [4, 9, 16, 25, 29];let first = \n  numbers.find(myFunction);function myFunction(value, index, array) {\n  \u00a0 return \n  value > 18;}  ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "9",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "16",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "25",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "29",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "find",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "18",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const numbers = [4, 9, 16, 25, 29];let first =\nnumbers.find(myFunction);function myFunction(value, index, array) {\nreturn\nvalue > 18;}",
      "syntax_highlighting": [
        {
          "text": "\n const numbers = [4, 9, 16, 25, 29];let first = \n  numbers.find(myFunction);function myFunction(value, index, array) {\n  \u00a0 return \n  value > 18;}  ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "9",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "16",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "25",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "29",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "find",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "18",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> numbers = [<span class=\"jsnumbercolor\" style=\"color:#905\">4</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">9</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">16</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">25</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">29</span>];<br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> first = <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  numbers.<span class=\"jspropertycolor\" style=\"color:black\">find</span>(myFunction);<br/><br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> myFunction(value, index, array) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">return</span> <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  value &gt; <span class=\"jsnumbercolor\" style=\"color:#905\">18</span>;<br/>}  </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_array_find",
      "syntax_highlighting_data": [
        {
          "text": "\n  const numbers = [4, 9, 16, 25, 29];let first = \n  numbers.find(myFunction);function myFunction(value, index, array) {\n  \u00a0 return \n  value > 18;}  ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "9",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "16",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "25",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "29",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "find",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "18",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note that the function takes 3 arguments:",
      "html": "<p>Note that the function takes 3 arguments:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Array findIndex()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The findIndex() method returns the index of the first array element that passes a test function.",
      "html": "<p>The <code>findIndex()</code> method returns the index of the first array element that \npasses a test function.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This example finds the index of the first element that is larger than 18:",
      "html": "<p>This example finds the index of the first element that is larger than 18:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_array_find_index",
        "syntaxHighlighting": [
          {
            "text": "\n  const numbers = [4, 9, 16, 25, 29];let first = \n  numbers.findIndex(myFunction);function myFunction(value, index, array) {\n  \u00a0 return \n  value > 18;}  ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "9",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "16",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "25",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "29",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "findIndex",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "18",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const numbers = [4, 9, 16, 25, 29];let first =\nnumbers.findIndex(myFunction);function myFunction(value, index, array) {\nreturn\nvalue > 18;}",
      "syntax_highlighting": [
        {
          "text": "\n const numbers = [4, 9, 16, 25, 29];let first = \n  numbers.findIndex(myFunction);function myFunction(value, index, array) {\n  \u00a0 return \n  value > 18;}  ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "9",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "16",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "25",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "29",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "findIndex",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "18",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> numbers = [<span class=\"jsnumbercolor\" style=\"color:#905\">4</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">9</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">16</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">25</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">29</span>];<br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> first = <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  numbers.<span class=\"jspropertycolor\" style=\"color:black\">findIndex</span>(myFunction);<br/><br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> myFunction(value, index, array) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">return</span> <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  value &gt; <span class=\"jsnumbercolor\" style=\"color:#905\">18</span>;<br/>}  </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_array_find_index",
      "syntax_highlighting_data": [
        {
          "text": "\n  const numbers = [4, 9, 16, 25, 29];let first = \n  numbers.findIndex(myFunction);function myFunction(value, index, array) {\n  \u00a0 return \n  value > 18;}  ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "9",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "16",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "25",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "29",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "findIndex",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "18",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note that the function takes 3 arguments:",
      "html": "<p>Note that the function takes 3 arguments:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "New Math Methods",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "ES6 added the following methods to the Math object:",
      "html": "<p>ES6 added the following methods to the Math object:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Math.trunc() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Math.trunc(x) returns the integer part of x:",
      "html": "<p><code>Math.trunc(x)</code> returns the integer part of x:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_math_trunc",
        "syntaxHighlighting": [
          {
            "text": "\nMath.trunc(4.9);\u00a0\u00a0\u00a0\u00a0// returns 4\nMath.trunc(4.7);\u00a0\u00a0\u00a0\u00a0// returns 4\nMath.trunc(4.4);\u00a0\u00a0\u00a0\u00a0// returns 4\nMath.trunc(4.2);\u00a0\u00a0\u00a0\u00a0// returns 4\nMath.trunc(-4.2);\u00a0\u00a0\u00a0\u00a0// returns -4\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "trunc",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "4.9",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns 4",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "trunc",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "4.7",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns 4",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "trunc",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "4.4",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns 4",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "trunc",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "4.2",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns 4",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "trunc",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "4.2",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns -4",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Math.trunc(4.9);\u00a0\u00a0\u00a0\u00a0// returns 4\nMath.trunc(4.7);\u00a0\u00a0\u00a0\u00a0// returns 4\nMath.trunc(4.4);\u00a0\u00a0\u00a0\u00a0// returns 4\nMath.trunc(4.2);\u00a0\u00a0\u00a0\u00a0// returns 4\nMath.trunc(-4.2);\u00a0\u00a0\u00a0\u00a0// returns -4",
      "syntax_highlighting": [
        {
          "text": "\nMath.trunc(4.9);\u00a0\u00a0\u00a0\u00a0// returns 4\nMath.trunc(4.7);\u00a0\u00a0\u00a0\u00a0// returns 4\nMath.trunc(4.4);\u00a0\u00a0\u00a0\u00a0// returns 4\nMath.trunc(4.2);\u00a0\u00a0\u00a0\u00a0// returns 4\nMath.trunc(-4.2);\u00a0\u00a0\u00a0\u00a0// returns -4\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "trunc",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "4.9",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns 4",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "trunc",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "4.7",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns 4",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "trunc",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "4.4",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns 4",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "trunc",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "4.2",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns 4",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "trunc",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "4.2",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns -4",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nMath.<span class=\"jspropertycolor\" style=\"color:black\">trunc</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">4.9</span>);\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// returns 4<br/></span>\nMath.<span class=\"jspropertycolor\" style=\"color:black\">trunc</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">4.7</span>);\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// returns 4<br/></span>\nMath.<span class=\"jspropertycolor\" style=\"color:black\">trunc</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">4.4</span>);\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// returns 4<br/></span>\nMath.<span class=\"jspropertycolor\" style=\"color:black\">trunc</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">4.2</span>);\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// returns 4<br/></span>\nMath.<span class=\"jspropertycolor\" style=\"color:black\">trunc</span>(-<span class=\"jsnumbercolor\" style=\"color:#905\">4.2</span>);\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// returns -4<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_math_trunc",
      "syntax_highlighting_data": [
        {
          "text": "\nMath.trunc(4.9);\u00a0\u00a0\u00a0\u00a0// returns 4\nMath.trunc(4.7);\u00a0\u00a0\u00a0\u00a0// returns 4\nMath.trunc(4.4);\u00a0\u00a0\u00a0\u00a0// returns 4\nMath.trunc(4.2);\u00a0\u00a0\u00a0\u00a0// returns 4\nMath.trunc(-4.2);\u00a0\u00a0\u00a0\u00a0// returns -4\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "trunc",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "4.9",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns 4",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "trunc",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "4.7",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns 4",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "trunc",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "4.4",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns 4",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "trunc",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "4.2",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns 4",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "trunc",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "4.2",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns -4",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Math.sign() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Math.sign(x) returns if x is negative, null or positive:",
      "html": "<p><code>Math.sign(x)</code> returns if x is negative, null or positive:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_math_sign",
        "syntaxHighlighting": [
          {
            "text": "\nMath.sign(-4);\u00a0\u00a0\u00a0\u00a0// returns -1\nMath.sign(0);\u00a0\u00a0\u00a0\u00a0// returns 0\nMath.sign(4);\u00a0\u00a0\u00a0\u00a0// returns 1\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "sign",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns -1",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "sign",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns 0",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "sign",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns 1",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Math.sign(-4);\u00a0\u00a0\u00a0\u00a0// returns -1\nMath.sign(0);\u00a0\u00a0\u00a0\u00a0// returns 0\nMath.sign(4);\u00a0\u00a0\u00a0\u00a0// returns 1",
      "syntax_highlighting": [
        {
          "text": "\nMath.sign(-4);\u00a0\u00a0\u00a0\u00a0// returns -1\nMath.sign(0);\u00a0\u00a0\u00a0\u00a0// returns 0\nMath.sign(4);\u00a0\u00a0\u00a0\u00a0// returns 1\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "sign",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns -1",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "sign",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns 0",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "sign",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns 1",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nMath.<span class=\"jspropertycolor\" style=\"color:black\">sign</span>(-<span class=\"jsnumbercolor\" style=\"color:#905\">4</span>);\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// returns -1<br/></span>\nMath.<span class=\"jspropertycolor\" style=\"color:black\">sign</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>);\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// returns 0<br/></span>\nMath.<span class=\"jspropertycolor\" style=\"color:black\">sign</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">4</span>);\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// returns 1<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_math_sign",
      "syntax_highlighting_data": [
        {
          "text": "\nMath.sign(-4);\u00a0\u00a0\u00a0\u00a0// returns -1\nMath.sign(0);\u00a0\u00a0\u00a0\u00a0// returns 0\nMath.sign(4);\u00a0\u00a0\u00a0\u00a0// returns 1\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "sign",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns -1",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "sign",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns 0",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "sign",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns 1",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Math.cbrt() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Math.cbrt(x) returns the cube root of x:",
      "html": "<p><code>Math.cbrt(x)</code> returns the cube root of x:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_math_cbrt",
        "syntaxHighlighting": [
          {
            "text": "\nMath.cbrt(8);\u00a0\u00a0\u00a0\u00a0// returns 2\nMath.cbrt(64);\u00a0\u00a0\u00a0\u00a0// returns 4\nMath.cbrt(125);\u00a0\u00a0\u00a0\u00a0// returns 5\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "cbrt",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "8",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns 2",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "cbrt",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "64",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns 4",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "cbrt",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "125",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns 5",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Math.cbrt(8);\u00a0\u00a0\u00a0\u00a0// returns 2\nMath.cbrt(64);\u00a0\u00a0\u00a0\u00a0// returns 4\nMath.cbrt(125);\u00a0\u00a0\u00a0\u00a0// returns 5",
      "syntax_highlighting": [
        {
          "text": "\nMath.cbrt(8);\u00a0\u00a0\u00a0\u00a0// returns 2\nMath.cbrt(64);\u00a0\u00a0\u00a0\u00a0// returns 4\nMath.cbrt(125);\u00a0\u00a0\u00a0\u00a0// returns 5\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "cbrt",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "8",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns 2",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "cbrt",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "64",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns 4",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "cbrt",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "125",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns 5",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nMath.<span class=\"jspropertycolor\" style=\"color:black\">cbrt</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">8</span>);\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// returns 2<br/></span>\nMath.<span class=\"jspropertycolor\" style=\"color:black\">cbrt</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">64</span>);\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// returns 4<br/></span>\nMath.<span class=\"jspropertycolor\" style=\"color:black\">cbrt</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">125</span>);\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// returns 5<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_math_cbrt",
      "syntax_highlighting_data": [
        {
          "text": "\nMath.cbrt(8);\u00a0\u00a0\u00a0\u00a0// returns 2\nMath.cbrt(64);\u00a0\u00a0\u00a0\u00a0// returns 4\nMath.cbrt(125);\u00a0\u00a0\u00a0\u00a0// returns 5\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "cbrt",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "8",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns 2",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "cbrt",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "64",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns 4",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "cbrt",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "125",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns 5",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Math.log2() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Math.log2(x) returns the base 2 logarithm of x:",
      "html": "<p><code>Math.log2(x)</code> returns the base 2 logarithm of x:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_math_log2",
        "syntaxHighlighting": [
          {
            "text": "\nMath.log2(2);\u00a0\u00a0\u00a0\u00a0// returns 1\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "log2",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns 1",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Math.log2(2);\u00a0\u00a0\u00a0\u00a0// returns 1",
      "syntax_highlighting": [
        {
          "text": "\nMath.log2(2);\u00a0\u00a0\u00a0\u00a0// returns 1\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "log2",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns 1",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nMath.<span class=\"jspropertycolor\" style=\"color:black\">log2</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">2</span>);\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// returns 1<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_math_log2",
      "syntax_highlighting_data": [
        {
          "text": "\nMath.log2(2);\u00a0\u00a0\u00a0\u00a0// returns 1\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "log2",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns 1",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Math.log10() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Math.log10(x) returns the base 10 logarithm of x:",
      "html": "<p><code>Math.log10(x)</code> returns the base 10 logarithm of x:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_math_log10",
        "syntaxHighlighting": [
          {
            "text": "\nMath.log10(10);\u00a0\u00a0\u00a0\u00a0// returns 1\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "log10",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns 1",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Math.log10(10);\u00a0\u00a0\u00a0\u00a0// returns 1",
      "syntax_highlighting": [
        {
          "text": "\nMath.log10(10);\u00a0\u00a0\u00a0\u00a0// returns 1\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "log10",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns 1",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nMath.<span class=\"jspropertycolor\" style=\"color:black\">log10</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">10</span>);\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// returns 1<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_math_log10",
      "syntax_highlighting_data": [
        {
          "text": "\nMath.log10(10);\u00a0\u00a0\u00a0\u00a0// returns 1\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "log10",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns 1",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "New Number Properties",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "ES6 added the following properties to the Number object:",
      "html": "<p>ES6 added the following properties to the Number object:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_epsilon",
        "syntaxHighlighting": [
          {
            "text": "\nlet x = Number.EPSILON;\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "EPSILON",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let x = Number.EPSILON;",
      "syntax_highlighting": [
        {
          "text": "\nlet x = Number.EPSILON;\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "EPSILON",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = Number.<span class=\"jspropertycolor\" style=\"color:black\">EPSILON</span>;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_epsilon",
      "syntax_highlighting_data": [
        {
          "text": "\nlet x = Number.EPSILON;\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "EPSILON",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_min_safe",
        "syntaxHighlighting": [
          {
            "text": "\nlet x = Number.MIN_SAFE_INTEGER;\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "MIN_SAFE_INTEGER",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let x = Number.MIN_SAFE_INTEGER;",
      "syntax_highlighting": [
        {
          "text": "\nlet x = Number.MIN_SAFE_INTEGER;\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "MIN_SAFE_INTEGER",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = Number.<span class=\"jspropertycolor\" style=\"color:black\">MIN_SAFE_INTEGER</span>;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_min_safe",
      "syntax_highlighting_data": [
        {
          "text": "\nlet x = Number.MIN_SAFE_INTEGER;\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "MIN_SAFE_INTEGER",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_max_safe",
        "syntaxHighlighting": [
          {
            "text": "\nlet x = Number.MAX_SAFE_INTEGER;\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "MAX_SAFE_INTEGER",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let x = Number.MAX_SAFE_INTEGER;",
      "syntax_highlighting": [
        {
          "text": "\nlet x = Number.MAX_SAFE_INTEGER;\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "MAX_SAFE_INTEGER",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = Number.<span class=\"jspropertycolor\" style=\"color:black\">MAX_SAFE_INTEGER</span>;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_max_safe",
      "syntax_highlighting_data": [
        {
          "text": "\nlet x = Number.MAX_SAFE_INTEGER;\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "MAX_SAFE_INTEGER",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Number.isInteger() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Number.isInteger() method returns true if the argument is an integer.",
      "html": "<p>The <code>Number.isInteger()</code> method returns <code>true</code> if the argument is an integer.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_isinteger",
        "syntaxHighlighting": [
          {
            "text": "\nNumber.isInteger(10);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // returns true\nNumber.isInteger(10.5);\u00a0\u00a0\u00a0\u00a0\u00a0 // returns false\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "isInteger",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns true",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "isInteger",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "10.5",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns false",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Number.isInteger(10);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // returns true\nNumber.isInteger(10.5);\u00a0\u00a0\u00a0\u00a0\u00a0 // returns false",
      "syntax_highlighting": [
        {
          "text": "\nNumber.isInteger(10);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // returns true\nNumber.isInteger(10.5);\u00a0\u00a0\u00a0\u00a0\u00a0 // returns false\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "isInteger",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns true",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "isInteger",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "10.5",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns false",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">isInteger</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">10</span>);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns true<br/></span>\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">isInteger</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">10.5</span>);\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns false<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_isinteger",
      "syntax_highlighting_data": [
        {
          "text": "\nNumber.isInteger(10);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // returns true\nNumber.isInteger(10.5);\u00a0\u00a0\u00a0\u00a0\u00a0 // returns false\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "isInteger",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns true",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "isInteger",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "10.5",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns false",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Number.isSafeInteger() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A safe integer is an integer that can be exactly represented as a double precision number.",
      "html": "<p>A safe integer is an integer that can be exactly represented as a double precision number.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Number.isSafeInteger() method returns true if the argument is a safe integer.",
      "html": "<p>The <code>Number.isSafeInteger()</code> method returns <code>true</code> if the argument is a safe integer.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_issafeinteger",
        "syntaxHighlighting": [
          {
            "text": "\nNumber.isSafeInteger(10);\u00a0\u00a0\u00a0\u00a0// returns true\nNumber.isSafeInteger(12345678901234567890);\u00a0 // returns false\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "isSafeInteger",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns true",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "isSafeInteger",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "12345678901234567890",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns false",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Number.isSafeInteger(10);\u00a0\u00a0\u00a0\u00a0// returns true\nNumber.isSafeInteger(12345678901234567890);\u00a0 // returns false",
      "syntax_highlighting": [
        {
          "text": "\nNumber.isSafeInteger(10);\u00a0\u00a0\u00a0\u00a0// returns true\nNumber.isSafeInteger(12345678901234567890);\u00a0 // returns false\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "isSafeInteger",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns true",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "isSafeInteger",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "12345678901234567890",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns false",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">isSafeInteger</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">10</span>);\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// returns true<br/></span>\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">isSafeInteger</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">12345678901234567890</span>);\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns false<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_issafeinteger",
      "syntax_highlighting_data": [
        {
          "text": "\nNumber.isSafeInteger(10);\u00a0\u00a0\u00a0\u00a0// returns true\nNumber.isSafeInteger(12345678901234567890);\u00a0 // returns false\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "isSafeInteger",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns true",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "isSafeInteger",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "12345678901234567890",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns false",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Safe integers are all integers from -(2 53 - 1) to +(2 53 - 1). This is safe: 9007199254740991. This is not safe: 9007199254740992.",
      "html": "<p>Safe integers are all integers from -(2<sup>53</sup> - 1) to +(2<sup>53</sup> - 1).<br/>\nThis is safe: 9007199254740991. This is not safe: 9007199254740992.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "New Global Methods",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "ES6 added 2 new global number methods:",
      "html": "<p>ES6 added 2 new global number methods:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The isFinite() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The global isFinite() method returns false if the argument is Infinity or NaN .",
      "html": "<p>The global <code>isFinite()</code> method returns <code>false</code> if the argument is <code>Infinity</code> or <code>NaN</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Otherwise it returns true :",
      "html": "<p>Otherwise it returns <code>true</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_isfinite",
        "syntaxHighlighting": [
          {
            "text": "\nisFinite(10/0);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // returns false\nisFinite(10/1);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // returns true\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns false",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns true",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "isFinite(10/0);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // returns false\nisFinite(10/1);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // returns true",
      "syntax_highlighting": [
        {
          "text": "\nisFinite(10/0);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // returns false\nisFinite(10/1);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // returns true\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns false",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns true",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nisFinite(<span class=\"jsnumbercolor\" style=\"color:#905\">10</span>/<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns false<br/></span>\nisFinite(<span class=\"jsnumbercolor\" style=\"color:#905\">10</span>/<span class=\"jsnumbercolor\" style=\"color:#905\">1</span>);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns true<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_isfinite",
      "syntax_highlighting_data": [
        {
          "text": "\nisFinite(10/0);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // returns false\nisFinite(10/1);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // returns true\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns false",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns true",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The isNaN() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The global isNaN() method returns true if the argument is NaN . Otherwise it returns false :",
      "html": "<p>The global <code>isNaN()</code> method returns <code>true</code> if the argument is <code>NaN</code>. Otherwise it returns <code>false</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_isnan",
        "syntaxHighlighting": [
          {
            "text": "\nisNaN(\"Hello\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // returns true\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\"Hello\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// returns true",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "isNaN(\"Hello\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // returns true",
      "syntax_highlighting": [
        {
          "text": "\nisNaN(\"Hello\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // returns true\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\"Hello\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// returns true",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nisNaN(<span class=\"jsstringcolor\" style=\"color:green\">\"Hello\"</span>);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns true<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_isnan",
      "syntax_highlighting_data": [
        {
          "text": "\nisNaN(\"Hello\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // returns true\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\"Hello\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// returns true",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Modules",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Modules are imported in two different ways:",
      "html": "<p>Modules are imported in two different ways:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_modules1",
        "syntaxHighlighting": [
          {
            "text": "\nimport { name, age } from \"./person.js\";\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "import",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"./person.js\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "import { name, age } from \"./person.js\";",
      "syntax_highlighting": [
        {
          "text": "\nimport { name, age } from \"./person.js\";\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "import",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"./person.js\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">import</span> { name, age } from <span class=\"jsstringcolor\" style=\"color:green\">\"./person.js\"</span>;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_modules1",
      "syntax_highlighting_data": [
        {
          "text": "\nimport { name, age } from \"./person.js\";\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "import",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"./person.js\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_modules2",
        "syntaxHighlighting": [
          {
            "text": "\nimport message from \"./message.js\";\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "import",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"./message.js\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "import message from \"./message.js\";",
      "syntax_highlighting": [
        {
          "text": "\nimport message from \"./message.js\";\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "import",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"./message.js\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">import</span> message from <span class=\"jsstringcolor\" style=\"color:green\">\"./message.js\"</span>;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_modules2",
      "syntax_highlighting_data": [
        {
          "text": "\nimport message from \"./message.js\";\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "import",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"./message.js\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "JavaScript Modules",
          "href": "https://www.w3schools.com/js_modules.asp",
          "title": ""
        }
      ],
      "text": "Learn more about Modules in: JavaScript Modules .",
      "html": "<p>Learn more about Modules in: <a href=\"js_modules.asp\">JavaScript Modules</a>.</p>"
    }
  ]
}