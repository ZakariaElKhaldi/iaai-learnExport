{
  "title": "JavaScript Operator Precedence",
  "url": "https://www.w3schools.com/js/js_precedence.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "JavaScript Operator Precedence",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Operator precedence describes the order in which operations are performed in an arithmetic expression.",
      "html": "<p>Operator precedence describes the order in which operations are performed in \nan arithmetic expression.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Multiplication ( * ) and division ( / ) have higher precedence than addition ( + ) and subtraction ( - ).",
      "html": "<p>Multiplication (<code>*</code>) and division (<code>/</code>) have higher <strong>precedence</strong> than \naddition (<code>+</code>) and subtraction (<code>-</code>).</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_arithmetic_precedence1",
        "syntaxHighlighting": [
          {
            "text": "\nlet x = 100 + 50 * 3;\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "100",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "50",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "3",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let x = 100 + 50 * 3;",
      "syntax_highlighting": [
        {
          "text": "\nlet x = 100 + 50 * 3;\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "100",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "50",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "3",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = <span class=\"jsnumbercolor\" style=\"color:#905\">100</span> + <span class=\"jsnumbercolor\" style=\"color:#905\">50</span> * <span class=\"jsnumbercolor\" style=\"color:#905\">3</span>;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_arithmetic_precedence1",
      "syntax_highlighting_data": [
        {
          "text": "\nlet x = 100 + 50 * 3;\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "100",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "50",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "3",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "table",
      "metadata": {
        "data": [
          [],
          [
            "Val",
            "Operator",
            "Description",
            "Example"
          ],
          [
            "18",
            "( )",
            "Expression Grouping",
            "(100 + 50) * 3"
          ],
          [
            "17",
            ".",
            "Member Of",
            "person.name"
          ],
          [
            "17",
            "[]",
            "Member Of",
            "person[\"name\"]"
          ],
          [
            "17",
            "?.",
            "Optional Chaining\n  ES2020",
            "x ?. y"
          ],
          [
            "17",
            "()",
            "Function Call",
            "myFunction()"
          ],
          [
            "17",
            "new",
            "New with Arguments",
            "new Date(\"June 5,2022\")"
          ],
          [
            "16",
            "new",
            "New without Arguments",
            "new Date()"
          ],
          [
            "Increment Operators\nPostfix increments are executed before prefix increments"
          ],
          [
            "15",
            "++",
            "Postfix Increment",
            "i++"
          ],
          [
            "15",
            "--",
            "Postfix Decrement",
            "i--"
          ],
          [
            "14",
            "++",
            "Prefix Increment",
            "++i"
          ],
          [
            "14",
            "--",
            "Prefix Decrement",
            "--i"
          ],
          [
            "NOT Operators"
          ],
          [
            "14",
            "!",
            "Logical NOT",
            "!(x==y)"
          ],
          [
            "14",
            "~",
            "Bitwise NOT",
            "~x"
          ],
          [
            "Unary Operators"
          ],
          [
            "14",
            "+",
            "Unary Plus",
            "+x"
          ],
          [
            "14",
            "-",
            "Unary Minus",
            "-x"
          ],
          [
            "14",
            "typeof",
            "Data Type",
            "typeof x"
          ],
          [
            "14",
            "void",
            "Evaluate Void",
            "void(0)"
          ],
          [
            "14",
            "delete",
            "Property Delete",
            "delete myCar.color"
          ],
          [
            "Arithmetic Operators\nExponentiations are executed before multiplications\nMultiplications and divisions are executed before additions and subtractions"
          ],
          [
            "13",
            "**",
            "Exponentiation\n  ES2016",
            "10 ** 2"
          ],
          [
            "12",
            "*",
            "Multiplication",
            "10 * 5"
          ],
          [
            "12",
            "/",
            "Division",
            "10 / 5"
          ],
          [
            "12",
            "%",
            "Division Remainder",
            "10 % 5"
          ],
          [
            "11",
            "+",
            "Addition",
            "10 + 5"
          ],
          [
            "11",
            "-",
            "Subtraction",
            "10 - 5"
          ],
          [
            "11",
            "+",
            "Concatenation",
            "\"John\" + \"Doe\""
          ],
          [
            "Shift Operators"
          ],
          [
            "10",
            "<<",
            "Shift Left",
            "x << 2"
          ],
          [
            "10",
            ">>",
            "Shift Right (signed)",
            "x >> 2"
          ],
          [
            "10",
            ">>>",
            "Shift Right (unsigned)",
            "x >>> 2"
          ],
          [
            "Relational Operators"
          ],
          [
            "9",
            "in",
            "Property in Object",
            "\"PI\" in Math"
          ],
          [
            "9",
            "instanceof",
            "Instance of Object",
            "x instanceof Array"
          ],
          [
            "Comparison Operators"
          ],
          [
            "9",
            "<",
            "Less than",
            "x < y"
          ],
          [
            "9",
            "<=",
            "Less than or equal",
            "x <= y"
          ],
          [
            "9",
            ">",
            "Greater than",
            "x > y"
          ],
          [
            "9",
            ">=",
            "Greater than or equal",
            "x >= Array"
          ],
          [
            "8",
            "==",
            "Equal",
            "x == y"
          ],
          [
            "8",
            "===",
            "Strict equal",
            "x === y"
          ],
          [
            "8",
            "!=",
            "Unequal",
            "x != y"
          ],
          [
            "8",
            "!==",
            "Strict unequal",
            "x !== y"
          ],
          [
            "Bitwise Operators"
          ],
          [
            "7",
            "&",
            "Bitwise AND",
            "x & y"
          ],
          [
            "6",
            "^",
            "Bitwise XOR",
            "x ^ y"
          ],
          [
            "5",
            "|",
            "Bitwise OR",
            "x | y"
          ],
          [
            "Logical Operators"
          ],
          [
            "4",
            "&&",
            "Logical AND",
            "x && y"
          ],
          [
            "3",
            "||",
            "Logical OR",
            "x || y"
          ],
          [
            "3",
            "??",
            "Nullish Coalescing\n  ES2020",
            "x ?? y"
          ],
          [
            "Conditional (ternary) Operator"
          ],
          [
            "2",
            "? :",
            "Condition",
            "? \"yes\" : \"no\""
          ],
          [
            "Assignment Operators\nAssignments are executed after other operations"
          ],
          [
            "2",
            "=",
            "Simple Assignment",
            "x = y"
          ],
          [
            "2",
            ":",
            "Colon Assignment",
            "x: 5"
          ],
          [
            "2",
            "+=",
            "Addition Assignment",
            "x += y"
          ],
          [
            "2",
            "-=",
            "Subtraction Assignment",
            "x -= y"
          ],
          [
            "2",
            "*=",
            "Multiplication Assignment",
            "x *= y"
          ],
          [
            "2",
            "**=",
            "Exponentiation Assignment",
            "x **= y"
          ],
          [
            "2",
            "/=",
            "Division Assignment",
            "x /= y"
          ],
          [
            "2",
            "%=",
            "Remainder Assignment",
            "x %= y"
          ],
          [
            "2",
            "<<=",
            "Left Shift Assignment",
            "x <<= y"
          ],
          [
            "2",
            ">>=",
            "Right Shift Assignment",
            "x >>= y"
          ],
          [
            "2",
            ">>>=",
            "Unsigned Right Shift",
            "x >>>= y"
          ],
          [
            "2",
            "&=",
            "Bitwise AND Assignment",
            "x &= y"
          ],
          [
            "2",
            "|=",
            "Bitwise OR Assignment",
            "x |= y"
          ],
          [
            "2",
            "^=",
            "Bitwise XOR Assignment",
            "x ^= y"
          ],
          [
            "2",
            "&&=",
            "Logical AND Assignment",
            "x &&= y"
          ],
          [
            "2",
            "||=",
            "Logical OR Assignment",
            "x ||= y"
          ],
          [
            "2",
            "=>",
            "Arrow",
            "x => y"
          ],
          [
            "2",
            "yield",
            "Pause / Resume",
            "yield x"
          ],
          [
            "2",
            "yield*",
            "Delegate",
            "yield* x"
          ],
          [
            "2",
            "...",
            "Spread",
            "... x"
          ],
          [
            "1",
            ",",
            "Comma",
            "x , y"
          ]
        ]
      },
      "data": [
        [],
        [
          "Val",
          "Operator",
          "Description",
          "Example"
        ],
        [
          "18",
          "( )",
          "Expression Grouping",
          "(100 + 50) * 3"
        ],
        [
          "17",
          ".",
          "Member Of",
          "person.name"
        ],
        [
          "17",
          "[]",
          "Member Of",
          "person[\"name\"]"
        ],
        [
          "17",
          "?.",
          "Optional Chaining\n  ES2020",
          "x ?. y"
        ],
        [
          "17",
          "()",
          "Function Call",
          "myFunction()"
        ],
        [
          "17",
          "new",
          "New with Arguments",
          "new Date(\"June 5,2022\")"
        ],
        [
          "16",
          "new",
          "New without Arguments",
          "new Date()"
        ],
        [
          "Increment Operators\nPostfix increments are executed before prefix increments"
        ],
        [
          "15",
          "++",
          "Postfix Increment",
          "i++"
        ],
        [
          "15",
          "--",
          "Postfix Decrement",
          "i--"
        ],
        [
          "14",
          "++",
          "Prefix Increment",
          "++i"
        ],
        [
          "14",
          "--",
          "Prefix Decrement",
          "--i"
        ],
        [
          "NOT Operators"
        ],
        [
          "14",
          "!",
          "Logical NOT",
          "!(x==y)"
        ],
        [
          "14",
          "~",
          "Bitwise NOT",
          "~x"
        ],
        [
          "Unary Operators"
        ],
        [
          "14",
          "+",
          "Unary Plus",
          "+x"
        ],
        [
          "14",
          "-",
          "Unary Minus",
          "-x"
        ],
        [
          "14",
          "typeof",
          "Data Type",
          "typeof x"
        ],
        [
          "14",
          "void",
          "Evaluate Void",
          "void(0)"
        ],
        [
          "14",
          "delete",
          "Property Delete",
          "delete myCar.color"
        ],
        [
          "Arithmetic Operators\nExponentiations are executed before multiplications\nMultiplications and divisions are executed before additions and subtractions"
        ],
        [
          "13",
          "**",
          "Exponentiation\n  ES2016",
          "10 ** 2"
        ],
        [
          "12",
          "*",
          "Multiplication",
          "10 * 5"
        ],
        [
          "12",
          "/",
          "Division",
          "10 / 5"
        ],
        [
          "12",
          "%",
          "Division Remainder",
          "10 % 5"
        ],
        [
          "11",
          "+",
          "Addition",
          "10 + 5"
        ],
        [
          "11",
          "-",
          "Subtraction",
          "10 - 5"
        ],
        [
          "11",
          "+",
          "Concatenation",
          "\"John\" + \"Doe\""
        ],
        [
          "Shift Operators"
        ],
        [
          "10",
          "<<",
          "Shift Left",
          "x << 2"
        ],
        [
          "10",
          ">>",
          "Shift Right (signed)",
          "x >> 2"
        ],
        [
          "10",
          ">>>",
          "Shift Right (unsigned)",
          "x >>> 2"
        ],
        [
          "Relational Operators"
        ],
        [
          "9",
          "in",
          "Property in Object",
          "\"PI\" in Math"
        ],
        [
          "9",
          "instanceof",
          "Instance of Object",
          "x instanceof Array"
        ],
        [
          "Comparison Operators"
        ],
        [
          "9",
          "<",
          "Less than",
          "x < y"
        ],
        [
          "9",
          "<=",
          "Less than or equal",
          "x <= y"
        ],
        [
          "9",
          ">",
          "Greater than",
          "x > y"
        ],
        [
          "9",
          ">=",
          "Greater than or equal",
          "x >= Array"
        ],
        [
          "8",
          "==",
          "Equal",
          "x == y"
        ],
        [
          "8",
          "===",
          "Strict equal",
          "x === y"
        ],
        [
          "8",
          "!=",
          "Unequal",
          "x != y"
        ],
        [
          "8",
          "!==",
          "Strict unequal",
          "x !== y"
        ],
        [
          "Bitwise Operators"
        ],
        [
          "7",
          "&",
          "Bitwise AND",
          "x & y"
        ],
        [
          "6",
          "^",
          "Bitwise XOR",
          "x ^ y"
        ],
        [
          "5",
          "|",
          "Bitwise OR",
          "x | y"
        ],
        [
          "Logical Operators"
        ],
        [
          "4",
          "&&",
          "Logical AND",
          "x && y"
        ],
        [
          "3",
          "||",
          "Logical OR",
          "x || y"
        ],
        [
          "3",
          "??",
          "Nullish Coalescing\n  ES2020",
          "x ?? y"
        ],
        [
          "Conditional (ternary) Operator"
        ],
        [
          "2",
          "? :",
          "Condition",
          "? \"yes\" : \"no\""
        ],
        [
          "Assignment Operators\nAssignments are executed after other operations"
        ],
        [
          "2",
          "=",
          "Simple Assignment",
          "x = y"
        ],
        [
          "2",
          ":",
          "Colon Assignment",
          "x: 5"
        ],
        [
          "2",
          "+=",
          "Addition Assignment",
          "x += y"
        ],
        [
          "2",
          "-=",
          "Subtraction Assignment",
          "x -= y"
        ],
        [
          "2",
          "*=",
          "Multiplication Assignment",
          "x *= y"
        ],
        [
          "2",
          "**=",
          "Exponentiation Assignment",
          "x **= y"
        ],
        [
          "2",
          "/=",
          "Division Assignment",
          "x /= y"
        ],
        [
          "2",
          "%=",
          "Remainder Assignment",
          "x %= y"
        ],
        [
          "2",
          "<<=",
          "Left Shift Assignment",
          "x <<= y"
        ],
        [
          "2",
          ">>=",
          "Right Shift Assignment",
          "x >>= y"
        ],
        [
          "2",
          ">>>=",
          "Unsigned Right Shift",
          "x >>>= y"
        ],
        [
          "2",
          "&=",
          "Bitwise AND Assignment",
          "x &= y"
        ],
        [
          "2",
          "|=",
          "Bitwise OR Assignment",
          "x |= y"
        ],
        [
          "2",
          "^=",
          "Bitwise XOR Assignment",
          "x ^= y"
        ],
        [
          "2",
          "&&=",
          "Logical AND Assignment",
          "x &&= y"
        ],
        [
          "2",
          "||=",
          "Logical OR Assignment",
          "x ||= y"
        ],
        [
          "2",
          "=>",
          "Arrow",
          "x => y"
        ],
        [
          "2",
          "yield",
          "Pause / Resume",
          "yield x"
        ],
        [
          "2",
          "yield*",
          "Delegate",
          "yield* x"
        ],
        [
          "2",
          "...",
          "Spread",
          "... x"
        ],
        [
          "1",
          ",",
          "Comma",
          "x , y"
        ]
      ],
      "html": "<table>\n<tbody><tr>\n<td colspan=\"4\">\n<h2>Operator Precedence Values</h2>\nExpressions in parentheses are computed <b>before</b> the rest of the expression<br/>\nFunction are executed <b>before</b> the result is used in the rest of the expression\n</td>\n</tr>\n<tr class=\"ws-grey\">\n<td>Val</td>\n<td>Operator</td>\n<td>Description</td>\n<td>Example</td>\n</tr>\n<tr>\n<td>18</td>\n<td>( )</td>\n<td><a href=\"tryit.asp?filename=tryjs_arithmetic_precedence2\" target=\"_blank\">Expression Grouping</a></td>\n<td>(100 + 50) * 3</td>\n</tr>\n<tr>\n<td>17</td>\n<td>.</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_member_of\" target=\"_blank\">Member Of</a></td>\n<td>person.name</td>\n</tr>\n<tr>\n<td>17</td>\n<td>[]</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_member_of2\" target=\"_blank\">Member Of</a></td>\n<td>person[\"name\"]</td>\n</tr>\n<tr>\n<td>17</td>\n<td>?.</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_optional_chaining\" target=\"_blank\">Optional Chaining</a>\n<a href=\"js_2019.asp\">ES2020</a></td>\n<td>x ?. y</td>\n</tr>\n<tr>\n<td>17</td>\n<td>()</td>\n<td><a href=\"tryit.asp?filename=tryjs_functions\" target=\"_blank\">Function Call</a></td>\n<td>myFunction()</td>\n</tr>\n<tr>\n<td>17</td>\n<td>new</td>\n<td><a href=\"tryit.asp?filename=tryjs_date_new_arguments\" target=\"_blank\">New with Arguments</a></td>\n<td>new Date(\"June 5,2022\")</td>\n</tr>\n<tr>\n<td>16</td>\n<td>new</td>\n<td><a href=\"tryit.asp?filename=tryjs_date_current\" target=\"_blank\">New without Arguments</a></td>\n<td>new Date()</td>\n</tr>\n<tr>\n<td colspan=\"4\">\n<span>Increment Operators</span><br/>\nPostfix increments are executed <b>before</b> prefix increments</td>\n</tr>\n<tr>\n<td>15</td>\n<td>++</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_incr2\" target=\"_blank\">Postfix Increment</a></td>\n<td>i++</td>\n</tr>\n<tr>\n<td>15</td>\n<td>--</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_decr2\" target=\"_blank\">Postfix Decrement</a></td>\n<td>i--</td>\n</tr>\n<tr>\n<td>14</td>\n<td>++</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_incr\" target=\"_blank\">Prefix Increment</a></td>\n<td>++i</td>\n</tr>\n<tr>\n<td>14</td>\n<td>--</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_decr\" target=\"_blank\">Prefix Decrement</a></td>\n<td>--i</td>\n</tr>\n<tr>\n<td colspan=\"4\">\n<span>NOT Operators</span>\n</td>\n</tr>\n<tr>\n<td>14</td>\n<td>!</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_not\" target=\"_blank\">Logical NOT</a></td>\n<td>!(x==y)</td>\n</tr>\n<tr>\n<td>14</td>\n<td>~</td>\n<td><a href=\"tryit.asp?filename=tryjs_bitwise_not\" target=\"_blank\">Bitwise NOT</a></td>\n<td>~x</td>\n</tr>\n<tr>\n<td colspan=\"4\">\n<span>Unary Operators</span>\n</td>\n</tr><tr>\n<td>14</td>\n<td>+</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_unary_plus\" target=\"_blank\">Unary Plus</a></td>\n<td>+x</td>\n</tr>\n<tr>\n<td>14</td>\n<td>-</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_unary_minus\" target=\"_blank\">Unary Minus</a></td>\n<td>-x</td>\n</tr>\n<tr>\n<td>14</td>\n<td>typeof</td>\n<td><a href=\"tryit.asp?filename=tryjs_typeof_all\" target=\"_blank\">Data Type</a></td>\n<td>typeof x</td>\n</tr>\n<tr>\n<td>14</td>\n<td>void</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_void\" target=\"_blank\">Evaluate Void</a></td>\n<td>void(0)</td>\n</tr>\n<tr>\n<td>14</td>\n<td>delete</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_delete\" target=\"_blank\">Property Delete</a></td>\n<td>delete myCar.color</td>\n</tr>\n<tr>\n<td colspan=\"4\">\n<span>Arithmetic Operators</span><br/>\nExponentiations are executed <b>before</b> multiplications<br/>\nMultiplications and divisions are executed <b>before</b> additions and subtractions\n</td>\n</tr>\n<tr>\n<td>13</td>\n<td>**</td>\n<td><a href=\"tryit.asp?filename=tryjs_arithmetric_exponent1\" target=\"_blank\">Exponentiation</a>\n<a href=\"js_2016.asp\">ES2016</a></td>\n<td>10 ** 2</td>\n</tr>\n<tr>\n<td>12</td>\n<td>*</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_mult\" target=\"_blank\">Multiplication</a></td>\n<td>10 * 5</td>\n</tr>\n<tr>\n<td>12</td>\n<td>/</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_div\" target=\"_blank\">Division</a></td>\n<td>10 / 5</td>\n</tr>\n<tr>\n<td>12</td>\n<td>%</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_mod\" target=\"_blank\">Division Remainder</a></td>\n<td>10 % 5</td>\n</tr>\n<tr>\n<td>11</td>\n<td>+</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_add\" target=\"_blank\">Addition</a></td>\n<td>10 + 5</td>\n</tr>\n<tr>\n<td>11</td>\n<td>-</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_sub\" target=\"_blank\">Subtraction</a></td>\n<td>10 - 5</td>\n</tr>\n<tr>\n<td>11</td>\n<td>+</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_concatenate\" target=\"_blank\">Concatenation</a></td>\n<td>\"John\" + \"Doe\"</td>\n</tr>\n<tr>\n<td colspan=\"4\">\nShift Operators</td>\n</tr>\n<tr>\n<td>10</td>\n<td>&lt;&lt;</td>\n<td><a href=\"tryit.asp?filename=tryjs_bitwise_left\" target=\"_blank\">Shift Left</a></td>\n<td>x &lt;&lt; 2</td>\n</tr>\n<tr>\n<td>10</td>\n<td>&gt;&gt;</td>\n<td><a href=\"tryit.asp?filename=tryjs_bitwise_right_sign\" target=\"_blank\">Shift Right (signed)</a></td>\n<td>x &gt;&gt; 2</td>\n</tr>\n<tr>\n<td>10</td>\n<td>&gt;&gt;&gt;</td>\n<td><a href=\"tryit.asp?filename=tryjs_bitwise_right\" target=\"_blank\">Shift Right (unsigned)</a></td>\n<td>x &gt;&gt;&gt; 2</td>\n</tr>\n<tr>\n<td colspan=\"4\">\nRelational Operators</td>\n</tr>\n<tr>\n<td>9</td>\n<td>in</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_in\" target=\"_blank\">Property in Object</a></td>\n<td>\"PI\" in Math</td>\n</tr>\n<tr>\n<td>9</td>\n<td>instanceof</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_instanceof\" target=\"_blank\">Instance of Object</a></td>\n<td>x instanceof Array</td>\n</tr>\n<tr>\n<td colspan=\"4\">\nComparison Operators</td>\n</tr>\n<tr>\n<td>9</td>\n<td>&lt;</td>\n<td><a href=\"tryit.asp?filename=tryjs_comparison9\" target=\"_blank\">Less than</a></td>\n<td>x &lt; y\u00a0</td>\n</tr>\n<tr>\n<td>9</td>\n<td>&lt;=</td>\n<td><a href=\"tryit.asp?filename=tryjs_comparison11\" target=\"_blank\">Less than or equal</a></td>\n<td>x &lt;= y</td>\n</tr>\n<tr>\n<td>9</td>\n<td>&gt;</td>\n<td><a href=\"tryit.asp?filename=tryjs_comparison8\" target=\"_blank\">Greater than</a></td>\n<td>x &gt; y</td>\n</tr>\n<tr>\n<td>9</td>\n<td>&gt;=</td>\n<td><a href=\"tryit.asp?filename=tryjs_comparison10\" target=\"_blank\">Greater than or equal</a></td>\n<td>x &gt;= Array</td>\n</tr>\n<tr>\n<td>8</td>\n<td>==</td>\n<td><a href=\"tryit.asp?filename=tryjs_comparison1\" target=\"_blank\">Equal</a></td>\n<td>x == y</td>\n</tr>\n<tr>\n<td>8</td>\n<td>===</td>\n<td><a href=\"tryit.asp?filename=tryjs_comparison4\" target=\"_blank\">Strict equal</a></td>\n<td>x === y</td>\n</tr>\n<tr>\n<td>8</td>\n<td>!=</td>\n<td><a href=\"tryit.asp?filename=tryjs_comparison5\" target=\"_blank\">Unequal</a></td>\n<td>x != y</td>\n</tr>\n<tr>\n<td>8</td>\n<td>!==</td>\n<td><a href=\"tryit.asp?filename=tryjs_comparison6\" target=\"_blank\">Strict unequal</a></td>\n<td>x !== y</td>\n</tr>\n<tr>\n<td colspan=\"4\">\nBitwise Operators</td>\n</tr>\n<tr>\n<td>7</td>\n<td>&amp;</td>\n<td><a href=\"tryit.asp?filename=tryjs_bitwise_and\" target=\"_blank\">Bitwise AND</a></td>\n<td>x &amp; y</td>\n</tr>\n<tr>\n<td>6</td>\n<td>^</td>\n<td><a href=\"tryit.asp?filename=tryjs_bitwise_xor\" target=\"_blank\">Bitwise XOR</a></td>\n<td>x ^ y</td>\n</tr>\n<tr>\n<td>5</td>\n<td>|</td>\n<td><a href=\"tryit.asp?filename=tryjs_bitwise_or\" target=\"_blank\">Bitwise OR</a></td>\n<td>x | y</td>\n</tr>\n<tr>\n<td colspan=\"4\">\nLogical Operators</td>\n</tr>\n<tr>\n<td>4</td>\n<td>&amp;&amp;</td>\n<td><a href=\"tryit.asp?filename=tryjs_comparison_and\" target=\"_blank\">Logical AND</a></td>\n<td>x &amp;&amp; y</td>\n</tr>\n<tr>\n<td>3</td>\n<td>||</td>\n<td><a href=\"tryit.asp?filename=tryjs_comparison_or\" target=\"_blank\">Logical OR</a></td>\n<td>x || y</td>\n</tr>\n<tr>\n<td>3</td>\n<td>??</td>\n<td><a href=\"tryit.asp?filename=tryjs_nullish\" target=\"_blank\">Nullish Coalescing</a>\n<a href=\"js_2019.asp\">ES2020</a></td>\n<td>x ?? y</td>\n</tr>\n<tr>\n<td colspan=\"4\">\n<span>Conditional (ternary) Operator</span>\n</td>\n</tr>\n<tr>\n<td>2</td>\n<td>? :</td>\n<td><a href=\"tryit.asp?filename=tryjs_comparison\" target=\"_blank\">Condition</a></td>\n<td>? \"yes\" : \"no\"</td>\n</tr>\n<tr>\n<td colspan=\"4\">\n<span>Assignment Operators</span><br/>\nAssignments are executed <b>after</b> other operations\n</td>\n</tr>\n<tr>\n<td>2</td>\n<td>=</td>\n<td><a href=\"tryit.asp?filename=tryjs_assign_equal\" target=\"_blank\">Simple Assignment</a></td>\n<td>x = y</td>\n</tr>\n<tr>\n<td>2</td>\n<td>:</td>\n<td><a href=\"tryit.asp?filename=tryjs_assign_colon\" target=\"_blank\">Colon Assignment</a></td>\n<td>x: 5</td>\n</tr>\n<tr>\n<td>2</td>\n<td>+=</td>\n<td><a href=\"tryit.asp?filename=tryjs_assign_plusequal\" target=\"_blank\">Addition Assignment</a></td>\n<td>x += y</td>\n</tr>\n<tr>\n<td>2</td>\n<td>-=</td>\n<td><a href=\"tryit.asp?filename=tryjs_assign_minequal\" target=\"_blank\">Subtraction Assignment</a></td>\n<td>x -= y</td>\n</tr>\n<tr>\n<td>2</td>\n<td>*=</td>\n<td><a href=\"tryit.asp?filename=tryjs_assign_multequal\" target=\"_blank\">Multiplication Assignment</a></td>\n<td>x *= y</td>\n</tr>\n<tr>\n<td>2</td>\n<td>**=</td>\n<td><a href=\"tryit.asp?filename=tryjs_assign_exponential\" target=\"_blank\">Exponentiation Assignment</a></td>\n<td>x **= y</td>\n</tr>\n<tr>\n<td>2</td>\n<td>/=</td>\n<td><a href=\"tryit.asp?filename=tryjs_assign_divequal\" target=\"_blank\">Division Assignment</a></td>\n<td>x /= y</td>\n</tr>\n<tr>\n<td>2</td>\n<td>%=</td>\n<td><a href=\"tryit.asp?filename=tryjs_assign_modequal\" target=\"_blank\">Remainder Assignment</a></td>\n<td>x %= y</td>\n</tr>\n<tr>\n<td>2</td>\n<td>&lt;&lt;=</td>\n<td><a href=\"tryit.asp?filename=tryjs_assign_left_shift\" target=\"_blank\">Left Shift Assignment</a></td>\n<td>x &lt;&lt;= y</td>\n</tr>\n<tr>\n<td>2</td>\n<td>&gt;&gt;=</td>\n<td><a href=\"tryit.asp?filename=tryjs_assign_right_shift\" target=\"_blank\">Right Shift Assignment</a></td>\n<td>x &gt;&gt;= y</td>\n</tr>\n<tr>\n<td>2</td>\n<td>&gt;&gt;&gt;=</td>\n<td><a href=\"tryit.asp?filename=tryjs_assign_unsigned_right_shift\" target=\"_blank\">Unsigned Right Shift</a></td>\n<td>x &gt;&gt;&gt;= y</td>\n</tr>\n<tr>\n<td>2</td>\n<td>&amp;=</td>\n<td><a href=\"tryit.asp?filename=tryjs_assign_bitwise_and\" target=\"_blank\">Bitwise AND Assignment</a></td>\n<td>x &amp;= y</td>\n</tr>\n<tr>\n<td>2</td>\n<td>|=</td>\n<td><a href=\"tryit.asp?filename=tryjs_assign_bitwise_or\" target=\"_blank\">Bitwise OR Assignment</a></td>\n<td>x |= y</td>\n</tr>\n<tr>\n<td>2</td>\n<td>^=</td>\n<td><a href=\"tryit.asp?filename=tryjs_assign_bitwise_xor\" target=\"_blank\">Bitwise XOR Assignment</a></td>\n<td>x ^= y</td>\n</tr>\n<tr>\n<td>2</td>\n<td>&amp;&amp;=</td>\n<td><a href=\"tryit.asp?filename=tryjs_assign_logical_and\" target=\"_blank\">Logical AND Assignment</a></td>\n<td>x &amp;&amp;= y</td>\n</tr>\n<tr>\n<td>2</td>\n<td>||=</td>\n<td><a href=\"tryit.asp?filename=tryjs_assign_logical_or\" target=\"_blank\">Logical OR Assignment</a></td>\n<td>x ||= y</td>\n</tr>\n<tr>\n<td>2</td>\n<td>=&gt;</td>\n<td><a href=\"tryit.asp?filename=tryjs_arrow_function4\" target=\"_blank\">Arrow</a></td>\n<td>x =&gt; y</td>\n</tr>\n<tr>\n<td>2</td>\n<td>yield</td>\n<td>Pause / Resume</td>\n<td>yield x</td>\n</tr>\n<tr>\n<td>2</td>\n<td>yield*</td>\n<td>Delegate</td>\n<td>yield* x</td>\n</tr>\n<tr>\n<td>2</td>\n<td>...</td>\n<td><a href=\"tryit.asp?filename=tryjs_oper_spread_arguments\" target=\"_blank\">Spread</a></td>\n<td>... x</td>\n</tr>\n<tr>\n<td>1</td>\n<td>,</td>\n<td>Comma</td>\n<td>x , y</td>\n</tr>\n</tbody></table>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Consider the following code: let x = 10 + 50 * 3; What will be the result of x ?",
      "html": "<p>Consider the following code:<br/><code class=\"codeblock\">let x = 10 + 50 * 3;</code><br/>What will be the result of <code>x</code>?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "Consider the following code:let x = 10 + 50 * 3;What will be the result of x?",
        "options": [
          {
            "value": "0",
            "text": "160"
          },
          {
            "value": "1",
            "text": "180"
          },
          {
            "value": "2",
            "text": "250"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_precedence1"
      },
      "quiz_type": "quiz",
      "question": "Consider the following code:let x = 10 + 50 * 3;What will be the result of x?",
      "options": [
        {
          "value": "0",
          "text": "160"
        },
        {
          "value": "1",
          "text": "180"
        },
        {
          "value": "2",
          "text": "250"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_precedence1",
      "html": "<form action=\"exercise.asp?x=xrcise_precedence1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">160</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">180</label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\">250</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}