{
  "title": "JavaScript Break and Continue",
  "url": "https://www.w3schools.com/js/js_break.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "JavaScript Break and Continue",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The break statement \"jumps out\" of a loop.",
      "html": "<p class=\"intro\">The <code>break</code> statement \"jumps out\" of a loop.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The continue statement \"jumps over\" one iteration in the loop.",
      "html": "<p class=\"intro\">The <code>continue</code> statement \"jumps over\" one iteration in \nthe loop.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Break Statement",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You have already seen the break statement used in an earlier chapter of this tutorial. It was used to \"jump out\" of a switch() statement.",
      "html": "<p>You have already seen the <code>break</code> statement used in an earlier \nchapter of this tutorial. It was used to \"jump out\" of a <code>switch()</code> statement.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The break statement can also be used to jump out of a loop:",
      "html": "<p>The <code>break</code> statement can also be used to jump out of a loop:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_break",
        "syntaxHighlighting": [
          {
            "text": "\nfor (let i = 0; i < 10; i++) {\n  \u00a0\nif (i === 3) { break; }\n  \u00a0 text += \"The number is \" + i + \"<br>\";\n } ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "3",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "break",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"The number is \"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"<br>\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "for (let i = 0; i < 10; i++) {\n\nif (i === 3) { break; }\ntext += \"The number is \" + i + \"<br>\";\n}",
      "syntax_highlighting": [
        {
          "text": "\nfor (let i = 0; i < 10; i++) {\n  \u00a0\nif (i === 3) { break; }\n  \u00a0 text += \"The number is \" + i + \"<br>\";\n } ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "3",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "break",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"The number is \"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"<br>\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">for</span> (<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> i = <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>; i &lt; <span class=\"jsnumbercolor\" style=\"color:#905\">10</span>; i++) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (i === <span class=\"jsnumbercolor\" style=\"color:#905\">3</span>) { <span class=\"jskeywordcolor\" style=\"color:#005cc5\">break</span>; }<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 text += <span class=\"jsstringcolor\" style=\"color:green\">\"The number is \"</span> + i + <span class=\"jsstringcolor\" style=\"color:green\">\"&lt;br&gt;\"</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> } </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_break",
      "syntax_highlighting_data": [
        {
          "text": "\nfor (let i = 0; i < 10; i++) {\n  \u00a0\nif (i === 3) { break; }\n  \u00a0 text += \"The number is \" + i + \"<br>\";\n } ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "3",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "break",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"The number is \"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"<br>\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the example above, the break statement ends the loop (\"breaks\" the loop) when the loop counter (i) is 3.",
      "html": "<p>In the example above, the <code>break</code> statement ends the loop (\"breaks\" the loop)\nwhen the loop counter (i) is 3.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Continue Statement",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The continue statement breaks one iteration (in the loop), if a specified condition occurs, and continues with the next iteration in the loop.",
      "html": "<p>The <code>continue</code> statement breaks one iteration (in the loop), if a specified \ncondition occurs, and continues with the next iteration in the loop.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This example skips the value of 3:",
      "html": "<p>This example skips the value of 3: </p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_continue",
        "syntaxHighlighting": [
          {
            "text": "\nfor (let i = 0; i < 10; i++) {\n  \u00a0 if (i === 3) { continue; }\n  \u00a0 text += \"The number is \" + i + \"<br>\";\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "3",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "continue",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"The number is \"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"<br>\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "for (let i = 0; i < 10; i++) {\nif (i === 3) { continue; }\ntext += \"The number is \" + i + \"<br>\";\n}",
      "syntax_highlighting": [
        {
          "text": "\nfor (let i = 0; i < 10; i++) {\n  \u00a0 if (i === 3) { continue; }\n  \u00a0 text += \"The number is \" + i + \"<br>\";\n}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "3",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "continue",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"The number is \"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"<br>\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">for</span> (<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> i = <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>; i &lt; <span class=\"jsnumbercolor\" style=\"color:#905\">10</span>; i++) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (i === <span class=\"jsnumbercolor\" style=\"color:#905\">3</span>) { <span class=\"jskeywordcolor\" style=\"color:#005cc5\">continue</span>; }<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 text += <span class=\"jsstringcolor\" style=\"color:green\">\"The number is \"</span> + i + <span class=\"jsstringcolor\" style=\"color:green\">\"&lt;br&gt;\"</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_continue",
      "syntax_highlighting_data": [
        {
          "text": "\nfor (let i = 0; i < 10; i++) {\n  \u00a0 if (i === 3) { continue; }\n  \u00a0 text += \"The number is \" + i + \"<br>\";\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "3",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "continue",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"The number is \"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"<br>\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript Labels",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To label JavaScript statements you precede the statements with a label name and a colon:",
      "html": "<p>To label JavaScript statements you precede the statements with a label name \nand a colon:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n label:statements ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "label:statements",
      "syntax_highlighting": [
        {
          "text": "\n label:statements ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> label:<br/>statements </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n label:statements ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The break and the continue statements are the only JavaScript statements that can \"jump out of\" a code block.",
      "html": "<p>The <code>break</code> and the <code>continue</code> statements are the only JavaScript statements that \ncan \"jump out of\" a code block.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Syntax:",
      "html": "<p>Syntax:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "break; \n\ncontinue ;",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n break <em>labelname</em>; <br/><br/>continue <em>labelname</em>;</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The continue statement (with or without a label reference) can only be used to skip one loop iteration .",
      "html": "<p>\nThe <code>continue</code> \nstatement (with or without a label reference) can only be used to <strong>skip one \nloop iteration</strong>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The break statement, without a label reference, can only be used to jump out of a loop or a switch .",
      "html": "<p>The <code>break</code> statement, without a label reference, can only be used to <strong>\njump out of a loop \nor a switch</strong>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "With a label reference, the break statement can be used to jump out of any code block :",
      "html": "<p>With a label reference, the break statement can be used to <strong>jump out \nof any code block</strong>: </p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_break_list",
        "syntaxHighlighting": [
          {
            "text": "\nconst cars = [\"BMW\", \"Volvo\", \"Saab\", \"Ford\"];list: {\u00a0 text += cars[0] + \"<br>\"; \n  \u00a0 text += cars[1] + \"<br>\"; \u00a0 break list;\u00a0 text += cars[2] + \"<br>\"; \n  \u00a0 text += cars[3] + \"<br>\"; } ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"BMW\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Saab\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"<br>\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"<br>\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "break",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"<br>\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "3",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"<br>\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const cars = [\"BMW\", \"Volvo\", \"Saab\", \"Ford\"];list: {\u00a0 text += cars[0] + \"<br>\";\ntext += cars[1] + \"<br>\"; \u00a0 break list;\u00a0 text += cars[2] + \"<br>\";\ntext += cars[3] + \"<br>\"; }",
      "syntax_highlighting": [
        {
          "text": "\nconst cars = [\"BMW\", \"Volvo\", \"Saab\", \"Ford\"];list: {\u00a0 text += cars[0] + \"<br>\"; \n  \u00a0 text += cars[1] + \"<br>\"; \u00a0 break list;\u00a0 text += cars[2] + \"<br>\"; \n  \u00a0 text += cars[3] + \"<br>\"; } ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"BMW\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Saab\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"<br>\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"<br>\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "break",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"<br>\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "3",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"<br>\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> cars = [<span class=\"jsstringcolor\" style=\"color:green\">\"BMW\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Volvo\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Saab\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Ford\"</span>];<br/>list: {<br/>\u00a0 text += cars[<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>] + <span class=\"jsstringcolor\" style=\"color:green\">\"&lt;br&gt;\"</span>; <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 text += cars[<span class=\"jsnumbercolor\" style=\"color:#905\">1</span>] + <span class=\"jsstringcolor\" style=\"color:green\">\"&lt;br&gt;\"</span>; <br/>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">break</span> list;<br/>\u00a0 text += cars[<span class=\"jsnumbercolor\" style=\"color:#905\">2</span>] + <span class=\"jsstringcolor\" style=\"color:green\">\"&lt;br&gt;\"</span>; <br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 text += cars[<span class=\"jsnumbercolor\" style=\"color:#905\">3</span>] + <span class=\"jsstringcolor\" style=\"color:green\">\"&lt;br&gt;\"</span>; <br/>} </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_break_list",
      "syntax_highlighting_data": [
        {
          "text": "\nconst cars = [\"BMW\", \"Volvo\", \"Saab\", \"Ford\"];list: {\u00a0 text += cars[0] + \"<br>\"; \n  \u00a0 text += cars[1] + \"<br>\"; \u00a0 break list;\u00a0 text += cars[2] + \"<br>\"; \n  \u00a0 text += cars[3] + \"<br>\"; } ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"BMW\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Saab\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"<br>\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"<br>\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "break",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"<br>\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "3",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"<br>\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A code block is a block of code between { and }.",
      "html": "<p>A code block is a block of code between { and }.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Consider the following code: const fruits = ['Apple', 'Banana', 'Cherry']; let x = ''; myfavorite: { x = fruits[0]; break myfavorite; x = fruits[1]; x = fruits[2]; } alert(x); What will be the alerted result?",
      "html": "<p>Consider the following code:<br/><code class=\"codeblock\">const fruits = ['Apple', 'Banana', 'Cherry'];<br/>let x = '';<br/>myfavorite: {<br/>\u00a0\u00a0x = fruits[0];<br/>\u00a0\u00a0break myfavorite;<br/>\u00a0\u00a0x = fruits[1];<br/>\u00a0\u00a0x = fruits[2];<br/>}<br/>alert(x);</code><br/>What will be the alerted result?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "Consider the following code:const fruits = ['Apple', 'Banana', 'Cherry'];let x = '';myfavorite: {\u00a0\u00a0x = fruits[0];\u00a0\u00a0break myfavorite;\u00a0\u00a0x = fruits[1];\u00a0\u00a0x = fruits[2];}alert(x);What will be the alerted result?",
        "options": [
          {
            "value": "0",
            "text": "Apple"
          },
          {
            "value": "1",
            "text": "Banana"
          },
          {
            "value": "2",
            "text": "Cherry"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_break1"
      },
      "quiz_type": "quiz",
      "question": "Consider the following code:const fruits = ['Apple', 'Banana', 'Cherry'];let x = '';myfavorite: {\u00a0\u00a0x = fruits[0];\u00a0\u00a0break myfavorite;\u00a0\u00a0x = fruits[1];\u00a0\u00a0x = fruits[2];}alert(x);What will be the alerted result?",
      "options": [
        {
          "value": "0",
          "text": "Apple"
        },
        {
          "value": "1",
          "text": "Banana"
        },
        {
          "value": "2",
          "text": "Cherry"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_break1",
      "html": "<form action=\"exercise.asp?x=xrcise_break1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">Apple</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">Banana</label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\">Cherry</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}