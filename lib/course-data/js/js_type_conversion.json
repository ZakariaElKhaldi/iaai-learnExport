{
  "title": "JavaScript Type Conversions",
  "url": "https://www.w3schools.com/js/js_type_conversion.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "JavaScript Type Conversion",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript Type Conversion",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "JavaScript variables can be converted to a new variable and another data type:",
      "html": "<p>JavaScript variables can be converted to a new variable and another data type:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Converting Strings to Numbers",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The global method Number() converts a variable (or a value) into a number.",
      "html": "<p>The global method <code>Number()</code> converts a variable (or a value) into a number.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A numeric string (like \"3.14\") converts to a number (like 3.14).",
      "html": "<p>A numeric string (like \"3.14\") converts to a number (like 3.14).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "An empty string (like \"\") converts to 0.",
      "html": "<p>An empty string (like \"\") converts to 0.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A non numeric string (like \"John\") converts to NaN (Not a Number).",
      "html": "<p>A non numeric string (like \"John\") converts to <code>NaN</code> (Not a Number).</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_number",
        "syntaxHighlighting": [
          {
            "text": "\nNumber(\"3.14\")\nNumber(Math.PI)\nNumber(\" \")\nNumber(\"\")\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\"3.14\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "PI",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\" \"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Number(\"3.14\")\nNumber(Math.PI)\nNumber(\" \")\nNumber(\"\")",
      "syntax_highlighting": [
        {
          "text": "\nNumber(\"3.14\")\nNumber(Math.PI)\nNumber(\" \")\nNumber(\"\")\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\"3.14\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "PI",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\" \"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nNumber(<span class=\"jsstringcolor\" style=\"color:green\">\"3.14\"</span>)<br/>\nNumber(Math.<span class=\"jspropertycolor\" style=\"color:black\">PI</span>)<br/>\nNumber(<span class=\"jsstringcolor\" style=\"color:green\">\" \"</span>)<br/>\nNumber(<span class=\"jsstringcolor\" style=\"color:green\">\"\"</span>)<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_number",
      "syntax_highlighting_data": [
        {
          "text": "\nNumber(\"3.14\")\nNumber(Math.PI)\nNumber(\" \")\nNumber(\"\")\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\"3.14\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "PI",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\" \"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Number Methods",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Number Methods",
          "href": "https://www.w3schools.com/js_number_methods.asp",
          "title": ""
        }
      ],
      "text": "In the chapter Number Methods , you will find more methods that can be used to convert strings to numbers:",
      "html": "<p>In the chapter <a href=\"js_number_methods.asp\">Number Methods</a>, you \nwill find more methods that can be used to convert strings to \nnumbers:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:25%\">Method</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>Number()</td>\n<td>Returns a number, converted from its argument</td>\n</tr>\n<tr>\n</tr><tr>\n<td>parseFloat()</td>\n<td>Parses a string and returns a floating point number</td>\n</tr>\n<tr>\n<td>parseInt()</td>\n<td>Parses a string and returns an integer</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Unary + Operator",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The unary + operator can be used to convert a variable to a number:",
      "html": "<p>The <strong>unary + operator</strong> can be used to \nconvert a variable to a number:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_typeof3",
        "syntaxHighlighting": [
          {
            "text": "\nlet y = \"5\";\u00a0\u00a0\u00a0\u00a0\u00a0\n// y is a string\nlet x = + y;\u00a0\u00a0\u00a0\u00a0\u00a0 \n// x is a number\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"5\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// y is a string",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// x is a number\n ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let y = \"5\";\n// y is a string\nlet x = + y;\n// x is a number",
      "syntax_highlighting": [
        {
          "text": "\nlet y = \"5\";\u00a0\u00a0\u00a0\u00a0\u00a0\n// y is a string\nlet x = + y;\u00a0\u00a0\u00a0\u00a0\u00a0 \n// x is a number\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"5\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// y is a string",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// x is a number\n ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> y = <span class=\"jsstringcolor\" style=\"color:green\">\"5\"</span>;\u00a0\u00a0\u00a0\u00a0\u00a0<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// y is a string<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = + y;\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// x is a number\n </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_typeof3",
      "syntax_highlighting_data": [
        {
          "text": "\nlet y = \"5\";\u00a0\u00a0\u00a0\u00a0\u00a0\n// y is a string\nlet x = + y;\u00a0\u00a0\u00a0\u00a0\u00a0 \n// x is a number\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"5\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// y is a string",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// x is a number\n ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the variable cannot be converted, it will still become a number, but with the value NaN (Not a Number):",
      "html": "<p>\nIf the \nvariable cannot be converted, it will still become a number, but with the value <code>NaN</code> \n(Not a Number):</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_typeof4",
        "syntaxHighlighting": [
          {
            "text": "\nlet y = \"John\";\u00a0\u00a0\n// y is a string\nlet x = + y;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// x is a number (NaN) ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"John\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// y is a string",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "// x is a number (NaN) ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let y = \"John\";\n// y is a string\nlet x = + y;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// x is a number (NaN)",
      "syntax_highlighting": [
        {
          "text": "\nlet y = \"John\";\u00a0\u00a0\n// y is a string\nlet x = + y;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// x is a number (NaN) ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"John\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// y is a string",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "// x is a number (NaN) ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> y = <span class=\"jsstringcolor\" style=\"color:green\">\"John\"</span>;\u00a0\u00a0<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// y is a string<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = + y;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// x is a number (NaN) </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_typeof4",
      "syntax_highlighting_data": [
        {
          "text": "\nlet y = \"John\";\u00a0\u00a0\n// y is a string\nlet x = + y;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// x is a number (NaN) ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"John\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// y is a string",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "// x is a number (NaN) ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Converting Numbers to Strings",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The global method String() can convert numbers to strings.",
      "html": "<p>The global method <code>String()</code> can convert numbers to strings.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It can be used on any type of numbers, literals, variables, or expressions:",
      "html": "<p>It can be used on any type of numbers, literals, variables, or expressions:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_number_string",
        "syntaxHighlighting": [
          {
            "text": "\n String(x)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// returns a string from a number variable x\n String(123)\u00a0\u00a0 \u00a0\u00a0\u00a0 // returns a string from a number literal 123\n String(100 + 23)\u00a0 // returns a string from a number from an expression ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns a string from a number variable x",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "123",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns a string from a number literal 123",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "100",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "23",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns a string from a number from an expression ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "String(x)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// returns a string from a number variable x\nString(123)\u00a0\u00a0 \u00a0\u00a0\u00a0 // returns a string from a number literal 123\nString(100 + 23)\u00a0 // returns a string from a number from an expression",
      "syntax_highlighting": [
        {
          "text": "\n String(x)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// returns a string from a number variable x\n String(123)\u00a0\u00a0 \u00a0\u00a0\u00a0 // returns a string from a number literal 123\n String(100 + 23)\u00a0 // returns a string from a number from an expression ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns a string from a number variable x",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "123",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns a string from a number literal 123",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "100",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "23",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns a string from a number from an expression ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> String(x)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// returns a string from a number variable x<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> String(<span class=\"jsnumbercolor\" style=\"color:#905\">123</span>)\u00a0\u00a0 \u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns a string from a number literal 123<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> String(<span class=\"jsnumbercolor\" style=\"color:#905\">100</span> + <span class=\"jsnumbercolor\" style=\"color:#905\">23</span>)\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns a string from a number from an expression </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_number_string",
      "syntax_highlighting_data": [
        {
          "text": "\n String(x)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// returns a string from a number variable x\n String(123)\u00a0\u00a0 \u00a0\u00a0\u00a0 // returns a string from a number literal 123\n String(100 + 23)\u00a0 // returns a string from a number from an expression ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns a string from a number variable x",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "123",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns a string from a number literal 123",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "100",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "23",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns a string from a number from an expression ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Number method toString() does the same.",
      "html": "<p>The Number method <code>toString()</code> does the same.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_number_tostring",
        "syntaxHighlighting": [
          {
            "text": "\nx.toString()(123).toString()(100 + 23).toString() ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "toString",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "123",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "toString",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "100",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "23",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "toString",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "x.toString()(123).toString()(100 + 23).toString()",
      "syntax_highlighting": [
        {
          "text": "\nx.toString()(123).toString()(100 + 23).toString() ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "toString",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "123",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "toString",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "100",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "23",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "toString",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nx.<span class=\"jspropertycolor\" style=\"color:black\">toString</span>()<br/>(<span class=\"jsnumbercolor\" style=\"color:#905\">123</span>).<span class=\"jspropertycolor\" style=\"color:black\">toString</span>()<br/>(<span class=\"jsnumbercolor\" style=\"color:#905\">100</span> + <span class=\"jsnumbercolor\" style=\"color:#905\">23</span>).<span class=\"jspropertycolor\" style=\"color:black\">toString</span>() </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_number_tostring",
      "syntax_highlighting_data": [
        {
          "text": "\nx.toString()(123).toString()(100 + 23).toString() ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "toString",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "123",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "toString",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "100",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "23",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "toString",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "More Methods",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Number Methods",
          "href": "https://www.w3schools.com/js_number_methods.asp",
          "title": ""
        }
      ],
      "text": "In the chapter Number Methods , you will find more methods that can be used to convert numbers to strings:",
      "html": "<p>In the chapter <a href=\"js_number_methods.asp\">Number Methods</a>, you \nwill find more methods that can be used to convert numbers to \nstrings:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:25%\">Method</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>toExponential()</td>\n<td>Returns a string, with a number rounded and written using exponential notation.</td>\n</tr>\n<tr>\n<td>toFixed()</td>\n<td>Returns a string, with a number rounded and written with a specified number of decimals.</td>\n</tr>\n<tr>\n<td>toPrecision()</td>\n<td>Returns a string, with a number written with a specified length</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Converting Dates to Numbers",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The global method Number() can be used to convert dates to numbers.",
      "html": "<p>The global method <code>Number()</code> can be used to convert dates to \nnumbers.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nd = new Date();Number(d)\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 // returns 1404568027739\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "// returns 1404568027739\n ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "d = new Date();Number(d)\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 // returns 1404568027739",
      "syntax_highlighting": [
        {
          "text": "\nd = new Date();Number(d)\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 // returns 1404568027739\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "// returns 1404568027739\n ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nd = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> Date();<br/>Number(d)\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns 1404568027739\n </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nd = new Date();Number(d)\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 // returns 1404568027739\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "// returns 1404568027739\n ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The date method getTime() does the same.",
      "html": "<p>The date method <code>getTime()</code>  does the same.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nd = new Date();d.getTime()\u00a0\u00a0\u00a0 \u00a0 \u00a0 // returns 1404568027739\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "getTime",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "// returns 1404568027739\n ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "d = new Date();d.getTime()\u00a0\u00a0\u00a0 \u00a0 \u00a0 // returns 1404568027739",
      "syntax_highlighting": [
        {
          "text": "\nd = new Date();d.getTime()\u00a0\u00a0\u00a0 \u00a0 \u00a0 // returns 1404568027739\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "getTime",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "// returns 1404568027739\n ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nd = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> Date();<br/>d.<span class=\"jspropertycolor\" style=\"color:black\">getTime</span>()\u00a0\u00a0\u00a0 \u00a0 \u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns 1404568027739\n </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nd = new Date();d.getTime()\u00a0\u00a0\u00a0 \u00a0 \u00a0 // returns 1404568027739\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "getTime",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "// returns 1404568027739\n ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Converting Dates to Strings",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The global method String() can convert dates to strings.",
      "html": "<p>The global method <code>String()</code> can convert dates to \nstrings.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  String(Date())\u00a0 // returns \"Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)\" ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns \"Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)\" ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "String(Date())\u00a0 // returns \"Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)\"",
      "syntax_highlighting": [
        {
          "text": "\n  String(Date())\u00a0 // returns \"Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)\" ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns \"Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)\" ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  String(Date())\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns \"Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)\" </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  String(Date())\u00a0 // returns \"Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)\" ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns \"Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)\" ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Date method toString() does the same.",
      "html": "<p>The Date method <code>toString()</code> does the same.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  Date().toString()\u00a0 // returns \"Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)\" ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "toString",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "// returns \"Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)\" ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Date().toString()\u00a0 // returns \"Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)\"",
      "syntax_highlighting": [
        {
          "text": "\n  Date().toString()\u00a0 // returns \"Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)\" ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "toString",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "// returns \"Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)\" ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  Date().<span class=\"jspropertycolor\" style=\"color:black\">toString</span>()\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns \"Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)\" </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  Date().toString()\u00a0 // returns \"Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)\" ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "toString",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "// returns \"Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)\" ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Date Methods",
          "href": "https://www.w3schools.com/js_date_methods.asp",
          "title": ""
        }
      ],
      "text": "In the chapter Date Methods , you will find more methods that can be used to convert dates to strings:",
      "html": "<p>In the chapter <a href=\"js_date_methods.asp\">Date Methods</a>, you \nwill find more methods that can be used to convert dates to \nstrings:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>getDate()</td>\n<td>Get the day as a number (1-31)</td>\n</tr>\n<tr>\n<td>getDay()</td>\n<td>Get the weekday a number (0-6)</td>\n</tr>\n<tr>\n<td>getFullYear()</td>\n<td>Get the four digit year (yyyy)</td>\n</tr>\n<tr>\n<td>getHours()</td>\n<td>Get the hour (0-23)</td>\n</tr>\n<tr>\n<td>getMilliseconds()</td>\n<td>Get the milliseconds (0-999)</td>\n</tr>\n<tr>\n<td>getMinutes()</td>\n<td>Get the minutes (0-59)</td>\n</tr>\n<tr>\n<td>getMonth()</td>\n<td>Get the month (0-11)</td>\n</tr>\n<tr>\n<td>getSeconds()</td>\n<td>Get the seconds (0-59)</td>\n</tr>\n<tr>\n<td>getTime()</td>\n<td>Get the time (milliseconds since January 1, 1970)</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Converting Booleans to Numbers",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The global method Number() can also convert booleans to numbers.",
      "html": "<p>The global method <code>Number()</code> can also convert booleans to numbers.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nNumber(false)\u00a0\u00a0\u00a0\u00a0 // returns 0\nNumber(true)\u00a0 \u00a0\u00a0\u00a0 // returns 1\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "false",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "// returns 0",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "true",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "// returns 1\n ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Number(false)\u00a0\u00a0\u00a0\u00a0 // returns 0\nNumber(true)\u00a0 \u00a0\u00a0\u00a0 // returns 1",
      "syntax_highlighting": [
        {
          "text": "\nNumber(false)\u00a0\u00a0\u00a0\u00a0 // returns 0\nNumber(true)\u00a0 \u00a0\u00a0\u00a0 // returns 1\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "false",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "// returns 0",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "true",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "// returns 1\n ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nNumber(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">false</span>)\u00a0\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns 0<br/></span>\nNumber(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">true</span>)\u00a0 \u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns 1\n </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nNumber(false)\u00a0\u00a0\u00a0\u00a0 // returns 0\nNumber(true)\u00a0 \u00a0\u00a0\u00a0 // returns 1\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "false",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "// returns 0",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "true",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "// returns 1\n ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Converting Booleans to Strings",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The global method String() can convert booleans to strings.",
      "html": "<p>The global method <code>String()</code> can convert booleans to \nstrings.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nString(false)\u00a0\u00a0\u00a0 \u00a0\u00a0// returns \"false\"\nString(true)\u00a0\u00a0\u00a0\u00a0 \u00a0 // returns \"true\"\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "false",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "// returns \"false\"",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "true",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "// returns \"true\"\n ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "String(false)\u00a0\u00a0\u00a0 \u00a0\u00a0// returns \"false\"\nString(true)\u00a0\u00a0\u00a0\u00a0 \u00a0 // returns \"true\"",
      "syntax_highlighting": [
        {
          "text": "\nString(false)\u00a0\u00a0\u00a0 \u00a0\u00a0// returns \"false\"\nString(true)\u00a0\u00a0\u00a0\u00a0 \u00a0 // returns \"true\"\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "false",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "// returns \"false\"",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "true",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "// returns \"true\"\n ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nString(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">false</span>)\u00a0\u00a0\u00a0 \u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// returns \"false\"<br/></span>\nString(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">true</span>)\u00a0\u00a0\u00a0\u00a0 \u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns \"true\"\n </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nString(false)\u00a0\u00a0\u00a0 \u00a0\u00a0// returns \"false\"\nString(true)\u00a0\u00a0\u00a0\u00a0 \u00a0 // returns \"true\"\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "false",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "// returns \"false\"",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "true",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "// returns \"true\"\n ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Boolean method toString() does the same.",
      "html": "<p>The Boolean method <code>toString()</code> does the same.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nfalse.toString()\u00a0\u00a0\u00a0// returns \"false\"\n  true.toString()\u00a0 \u00a0 // returns \"true\"\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "false",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "toString",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "// returns \"false\"",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "true",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "toString",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "// returns \"true\"\n ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "false.toString()\u00a0\u00a0\u00a0// returns \"false\"\ntrue.toString()\u00a0 \u00a0 // returns \"true\"",
      "syntax_highlighting": [
        {
          "text": "\nfalse.toString()\u00a0\u00a0\u00a0// returns \"false\"\n true.toString()\u00a0 \u00a0 // returns \"true\"\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "false",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "toString",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "// returns \"false\"",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "true",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "toString",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "// returns \"true\"\n ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">false</span>.<span class=\"jspropertycolor\" style=\"color:black\">toString</span>()\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// returns \"false\"<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">true</span>.<span class=\"jspropertycolor\" style=\"color:black\">toString</span>()\u00a0 \u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns \"true\"\n </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nfalse.toString()\u00a0\u00a0\u00a0// returns \"false\"\n  true.toString()\u00a0 \u00a0 // returns \"true\"\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "false",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "toString",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "// returns \"false\"",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "true",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "toString",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "// returns \"true\"\n ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Automatic Type Conversion",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When JavaScript tries to operate on a \"wrong\" data type, it will try to convert the value to a \"right\" type.",
      "html": "<p>When JavaScript tries to operate on a \"wrong\" data type, it will try to \nconvert the value to a \"right\" type.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The result is not always what you expect:",
      "html": "<p>The result is not always what you expect:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_auto",
        "syntaxHighlighting": [
          {
            "text": "\n 5 + null\u00a0\u00a0\u00a0 // returns 5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because null is converted to 0\"5\" + null\u00a0 // returns \"5null\"\u00a0\u00a0 because null is converted to \"null\"\"5\" + 2\u00a0\u00a0\u00a0\u00a0 // returns \n    \"52\"\u00a0\u00a0\u00a0\u00a0\u00a0 because 2 is converted to \"2\"\n \"5\" - 2\u00a0\u00a0\u00a0\u00a0 // returns 3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because \"5\" is converted to 5\"5\" * \"2\"\u00a0\u00a0 // returns \n    10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because \"5\" and \"2\" are \n    converted to 5 and 2 ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "5",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "null",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "// returns 5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because null is converted to 0",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\"5\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "null",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "// returns \"5null\"\u00a0\u00a0 because null is converted to \"null\"",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\"5\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns \n    \"52\"\u00a0\u00a0\u00a0\u00a0\u00a0 because 2 is converted to \"2\"",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"5\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// returns 3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because \"5\" is converted to 5",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\"5\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"2\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// returns \n    10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because \"5\" and \"2\" are \n    converted to 5 and 2 ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "5 + null\u00a0\u00a0\u00a0 // returns 5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because null is converted to 0\"5\" + null\u00a0 // returns \"5null\"\u00a0\u00a0 because null is converted to \"null\"\"5\" + 2\u00a0\u00a0\u00a0\u00a0 // returns\n\"52\"\u00a0\u00a0\u00a0\u00a0\u00a0 because 2 is converted to \"2\"\n\"5\" - 2\u00a0\u00a0\u00a0\u00a0 // returns 3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because \"5\" is converted to 5\"5\" * \"2\"\u00a0\u00a0 // returns\n10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because \"5\" and \"2\" are\nconverted to 5 and 2",
      "syntax_highlighting": [
        {
          "text": "\n 5 + null\u00a0\u00a0\u00a0 // returns 5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because null is converted to 0\"5\" + null\u00a0 // returns \"5null\"\u00a0\u00a0 because null is converted to \"null\"\"5\" + 2\u00a0\u00a0\u00a0\u00a0 // returns \n    \"52\"\u00a0\u00a0\u00a0\u00a0\u00a0 because 2 is converted to \"2\"\n \"5\" - 2\u00a0\u00a0\u00a0\u00a0 // returns 3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because \"5\" is converted to 5\"5\" * \"2\"\u00a0\u00a0 // returns \n    10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because \"5\" and \"2\" are \n    converted to 5 and 2 ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "5",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "null",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "// returns 5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because null is converted to 0",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\"5\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "null",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "// returns \"5null\"\u00a0\u00a0 because null is converted to \"null\"",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\"5\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns \n    \"52\"\u00a0\u00a0\u00a0\u00a0\u00a0 because 2 is converted to \"2\"",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"5\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// returns 3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because \"5\" is converted to 5",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\"5\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"2\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// returns \n    10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because \"5\" and \"2\" are \n    converted to 5 and 2 ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jsnumbercolor\" style=\"color:#905\">5</span> + <span class=\"jskeywordcolor\" style=\"color:#005cc5\">null</span>\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns 5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because null is converted to 0<br/></span><span class=\"jsstringcolor\" style=\"color:green\">\"5\"</span> + <span class=\"jskeywordcolor\" style=\"color:#005cc5\">null</span>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns \"5null\"\u00a0\u00a0 because null is converted to \"null\"<br/></span><span class=\"jsstringcolor\" style=\"color:green\">\"5\"</span> + <span class=\"jsnumbercolor\" style=\"color:#905\">2</span>\u00a0\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns \n    \"52\"\u00a0\u00a0\u00a0\u00a0\u00a0 because 2 is converted to \"2\"<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jsstringcolor\" style=\"color:green\">\"5\"</span> - <span class=\"jsnumbercolor\" style=\"color:#905\">2</span>\u00a0\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns 3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because \"5\" is converted to 5<br/></span><span class=\"jsstringcolor\" style=\"color:green\">\"5\"</span> * <span class=\"jsstringcolor\" style=\"color:green\">\"2\"</span>\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// returns \n    10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because \"5\" and \"2\" are \n    converted to 5 and 2 </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_auto",
      "syntax_highlighting_data": [
        {
          "text": "\n 5 + null\u00a0\u00a0\u00a0 // returns 5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because null is converted to 0\"5\" + null\u00a0 // returns \"5null\"\u00a0\u00a0 because null is converted to \"null\"\"5\" + 2\u00a0\u00a0\u00a0\u00a0 // returns \n    \"52\"\u00a0\u00a0\u00a0\u00a0\u00a0 because 2 is converted to \"2\"\n \"5\" - 2\u00a0\u00a0\u00a0\u00a0 // returns 3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because \"5\" is converted to 5\"5\" * \"2\"\u00a0\u00a0 // returns \n    10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because \"5\" and \"2\" are \n    converted to 5 and 2 ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "5",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "null",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "// returns 5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because null is converted to 0",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\"5\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "null",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "// returns \"5null\"\u00a0\u00a0 because null is converted to \"null\"",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\"5\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns \n    \"52\"\u00a0\u00a0\u00a0\u00a0\u00a0 because 2 is converted to \"2\"",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"5\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// returns 3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because \"5\" is converted to 5",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\"5\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"2\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// returns \n    10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 because \"5\" and \"2\" are \n    converted to 5 and 2 ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Automatic String Conversion",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "JavaScript automatically calls the variable's toString() function when you try to \"output\" an object or a variable:",
      "html": "<p>JavaScript automatically calls the variable's <code>toString()</code> function when you try \nto \"output\" an object or a variable:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\ndocument.getElementById(\"demo\").innerHTML = myVar;\n// if myVar = {name:\"Fjohn\"}\u00a0 // toString converts to \"[object Object]\"\n// if myVar = [1,2,3,4]\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"1,2,3,4\"\n// if myVar = new Date()\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"Fri Jul 18 2014 09:08:55 GMT+0200\"\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"demo\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// if myVar = {name:\"Fjohn\"}\u00a0 // toString converts to \"[object Object]\"",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// if myVar = [1,2,3,4]\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"1,2,3,4\"",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// if myVar = new Date()\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"Fri Jul 18 2014 09:08:55 GMT+0200\"",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "document.getElementById(\"demo\").innerHTML = myVar;\n// if myVar = {name:\"Fjohn\"}\u00a0 // toString converts to \"[object Object]\"\n// if myVar = [1,2,3,4]\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"1,2,3,4\"\n// if myVar = new Date()\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"Fri Jul 18 2014 09:08:55 GMT+0200\"",
      "syntax_highlighting": [
        {
          "text": "\ndocument.getElementById(\"demo\").innerHTML = myVar;\n// if myVar = {name:\"Fjohn\"}\u00a0 // toString converts to \"[object Object]\"\n// if myVar = [1,2,3,4]\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"1,2,3,4\"\n// if myVar = new Date()\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"Fri Jul 18 2014 09:08:55 GMT+0200\"\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"demo\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// if myVar = {name:\"Fjohn\"}\u00a0 // toString converts to \"[object Object]\"",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// if myVar = [1,2,3,4]\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"1,2,3,4\"",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// if myVar = new Date()\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"Fri Jul 18 2014 09:08:55 GMT+0200\"",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\ndocument.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"demo\"</span>).<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span> = myVar;<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// if myVar = {name:\"Fjohn\"}\u00a0 // toString converts to \"[object Object]\"<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// if myVar = [1,2,3,4]\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"1,2,3,4\"<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// if myVar = new Date()\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"Fri Jul 18 2014 09:08:55 GMT+0200\"<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\ndocument.getElementById(\"demo\").innerHTML = myVar;\n// if myVar = {name:\"Fjohn\"}\u00a0 // toString converts to \"[object Object]\"\n// if myVar = [1,2,3,4]\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"1,2,3,4\"\n// if myVar = new Date()\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"Fri Jul 18 2014 09:08:55 GMT+0200\"\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"demo\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// if myVar = {name:\"Fjohn\"}\u00a0 // toString converts to \"[object Object]\"",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// if myVar = [1,2,3,4]\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"1,2,3,4\"",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// if myVar = new Date()\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"Fri Jul 18 2014 09:08:55 GMT+0200\"",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Numbers and booleans are also converted, but this is not very visible:",
      "html": "<p>Numbers and booleans are also converted, but this is not very visible:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n// if myVar = 123\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"123\"\n// if myVar = true \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"true\"\n// if myVar = false\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"false\"\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// if myVar = 123\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"123\"",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// if myVar = true \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"true\"",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// if myVar = false\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"false\"\n ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "// if myVar = 123\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"123\"\n// if myVar = true \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"true\"\n// if myVar = false\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"false\"",
      "syntax_highlighting": [
        {
          "text": "\n// if myVar = 123\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"123\"\n// if myVar = true \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"true\"\n// if myVar = false\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"false\"\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// if myVar = 123\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"123\"",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// if myVar = true \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"true\"",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// if myVar = false\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"false\"\n ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// if myVar = 123\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"123\"<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// if myVar = true \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"true\"<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// if myVar = false\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"false\"\n </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n// if myVar = 123\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"123\"\n// if myVar = true \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"true\"\n// if myVar = false\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"false\"\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// if myVar = 123\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"123\"",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// if myVar = true \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"true\"",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// if myVar = false\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // toString converts to \"false\"\n ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript Type Conversion Table",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This table shows the result of converting different JavaScript values to Number, String, and Boolean:",
      "html": "<p>This table shows the result of converting different JavaScript values to Number, String, and Boolean:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_false",
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "javascript",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th>Original<br/>Value</th>\n<th>Converted<br/>to Number</th>\n<th>Converted<br/>to String</th>\n<th>Converted<br/>to Boolean</th>\n<th style=\"width:10%\">Try it</th>\n</tr>\n<tr>\n<td>false</td>\n<td>0</td>\n<td>\"false\"</td>\n<td>false</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_false\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>true</td>\n<td>1</td>\n<td>\"true\"</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_true\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>\"0\"</td>\n<td>false</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_number_0\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>\"1\"</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_number_1\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>\"0\"</td>\n<td>0</td>\n<td>\"0\"</td>\n<td class=\"important\">true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_string_0\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>\"000\"</td>\n<td>0</td>\n<td>\"000\"</td>\n<td class=\"important\">true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_string_000\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>\"1\"</td>\n<td>1</td>\n<td>\"1\"</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_string_1\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>NaN</td>\n<td>NaN</td>\n<td>\"NaN\"</td>\n<td>false</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_nan\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>Infinity</td>\n<td>Infinity</td>\n<td>\"Infinity\"</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_infinity\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>-Infinity</td>\n<td>-Infinity</td>\n<td>\"-Infinity\"</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_infinity_minus\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>\"\"</td>\n<td class=\"important\">0</td>\n<td>\"\"</td>\n<td class=\"important\">false</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_string_empty\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>\"20\"</td>\n<td>20</td>\n<td>\"20\"</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_string_number\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>\"twenty\"</td>\n<td>NaN</td>\n<td>\"twenty\"</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_string_text\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>[ ]</td>\n<td class=\"important\">0</td>\n<td>\"\"</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_array_empty\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>[20]</td>\n<td class=\"important\">20</td>\n<td>\"20\"</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_array_one_number\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>[10,20]</td>\n<td>NaN</td>\n<td>\"10,20\"</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_array_two_numbers\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>[\"twenty\"]</td>\n<td>NaN</td>\n<td>\"twenty\"</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_array_one_string\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>[\"ten\",\"twenty\"]</td>\n<td>NaN</td>\n<td>\"ten,twenty\"</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_array_two_strings\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>function(){}</td>\n<td>NaN</td>\n<td>\"function(){}\"</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_function\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>{ }</td>\n<td>NaN</td>\n<td>\"[object Object]\"</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_object\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>null</td>\n<td class=\"important\">0</td>\n<td>\"null\"</td>\n<td>false</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_null\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>undefined</td>\n<td>NaN</td>\n<td>\"undefined\"</td>\n<td>false</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_type_convert_undefined\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_false",
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Values in quotes indicate string values.",
      "html": "<p>Values in quotes indicate string values.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Red values indicate values (some) programmers might not expect.",
      "html": "<p><span class=\"important\">Red values</span> indicate values (some) programmers might not expect.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Consider the following code: let x = Number(55.21); What will be the value of x ?",
      "html": "<p>Consider the following code:<br/><code class=\"codeblock\">let x = Number(55.21);</code><br/>What will be the value of <code>x</code>?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "Consider the following code:let x = Number(55.21);What will be the value of x?",
        "options": [
          {
            "value": "0",
            "text": "55"
          },
          {
            "value": "1",
            "text": "55.2"
          },
          {
            "value": "2",
            "text": "55.21"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_type_conversion1"
      },
      "quiz_type": "quiz",
      "question": "Consider the following code:let x = Number(55.21);What will be the value of x?",
      "options": [
        {
          "value": "0",
          "text": "55"
        },
        {
          "value": "1",
          "text": "55.2"
        },
        {
          "value": "2",
          "text": "55.21"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_type_conversion1",
      "html": "<form action=\"exercise.asp?x=xrcise_type_conversion1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\"><code>55</code></label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\"><code>55.2</code></label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\"><code>55.21</code></label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}