{
  "title": "JavaScript Comparison and Logical Operators",
  "url": "https://www.w3schools.com/js/js_comparisons.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "JavaScript Comparison and Logical Operators",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Comparison and Logical operators are used to test for true or false .",
      "html": "<p class=\"intro\">Comparison and Logical operators are used to test for <code>true</code> or \n<code>false</code>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Comparison Operators",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Comparison operators are used in logical statements to determine equality or difference between variables or values.",
      "html": "<p>Comparison operators are used in logical statements to determine equality or difference between variables or values. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Given that x = 5 , the table below explains the comparison operators:",
      "html": "<p>Given that <code>x = 5</code>, the table below explains the comparison operators:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_comparison1",
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:12%\">Operator</th>\n<th>Description</th>\n<th>Comparing</th>\n<th>Returns</th>\n<th style=\"width:10%\">Try it</th>\n</tr>\n<tr class=\"spes_table_row1\">\n<td rowspan=\"3\">==</td>\n<td rowspan=\"3\">equal to</td>\n<td>x == 8</td>\n<td>false</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison1\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr class=\"spes_table_row1\">\n<td>x == 5</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison2\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr class=\"spes_table_row1\">\n<td>x == \"5\"</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison12\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr class=\"spes_table_row2\">\n<td rowspan=\"2\">===</td>\n<td rowspan=\"2\">equal value and equal type</td>\n<td>x === 5</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison4\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr class=\"spes_table_row2\">\n<td>x === \"5\"</td>\n<td>false</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison3\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr class=\"spes_table_row1\">\n<td>!=</td>\n<td>not equal</td>\n<td>x != 8</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison5\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr class=\"spes_table_row2\">\n<td rowspan=\"3\">!==</td>\n<td rowspan=\"3\">not equal value or not equal type</td>\n<td>x !== 5</td>\n<td>false</td>\n<td>\n<a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison7\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr class=\"spes_table_row2\">\n<td>x !== \"5\"</td>\n<td>true</td>\n<td>\n<a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison6\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr class=\"spes_table_row2\">\n<td>x !== 8</td>\n<td>true</td>\n<td>\n<a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison13\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr class=\"spes_table_row1\">\n<td>&gt;</td>\n<td>greater than</td>\n<td>x &gt; 8</td>\n<td>false</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison8\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr class=\"spes_table_row2\">\n<td>&lt;</td>\n<td>less than</td>\n<td>x &lt; 8</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison9\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr class=\"spes_table_row1\">\n<td>&gt;=</td>\n<td>greater than or equal to</td>\n<td>x &gt;= 8</td>\n<td>false</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison10\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr class=\"spes_table_row2\">\n<td>&lt;=</td>\n<td>less than or equal to</td>\n<td>x &lt;= 8</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison11\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_comparison1",
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "How Can it be Used",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Comparison operators can be used in conditional statements to compare values and take action depending on the result:",
      "html": "<p>Comparison operators can be used in conditional statements to compare values \nand take action depending on the result:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nif (age < 18) text = \"Too young to buy alcohol\";\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "18",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"Too young to buy alcohol\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "if (age < 18) text = \"Too young to buy alcohol\";",
      "syntax_highlighting": [
        {
          "text": "\nif (age < 18) text = \"Too young to buy alcohol\";\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "18",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"Too young to buy alcohol\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (age &lt; <span class=\"jsnumbercolor\" style=\"color:#905\">18</span>) text = <span class=\"jsstringcolor\" style=\"color:green\">\"Too young to buy alcohol\"</span>;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nif (age < 18) text = \"Too young to buy alcohol\";\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "18",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"Too young to buy alcohol\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You will learn more about the use of conditional statements in the next chapter of this tutorial.",
      "html": "<p>You will learn more about the use of conditional statements in the next chapter of this tutorial.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Logical Operators",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Logical operators are used to determine the logic between variables or values.",
      "html": "<p>Logical operators are used to determine the logic between variables or values.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Given that x = 6 and y = 3 , the table below explains the logical operators:",
      "html": "<p>Given that <code>x = 6</code> and <code>y = 3</code>, the table below explains the logical operators: </p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_comparison_and",
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:12%\">Operator</th>\n<th>Description</th>\n<th>Example</th>\n<th style=\"width:10%\">Try it</th>\n</tr>\n<tr>\n<td>&amp;&amp;</td>\n<td>and</td>\n<td> (x &lt; 10 &amp;&amp; y &gt; 1) is true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison_and\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>||</td>\n<td>or</td>\n<td>(x == 5 || y == 5) is false</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison_or\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>!</td>\n<td>not</td>\n<td> !(x == y) is true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison_not\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_comparison_and",
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Conditional (Ternary) Operator",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "JavaScript also contains a conditional operator that assigns a value to a variable based on some condition.",
      "html": "<p>JavaScript also contains a conditional operator that assigns a value to a variable based on some condition.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Syntax",
      "level": "h3"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate\"><div>\n<em>variablename </em>= (<em>condition</em>) ?<em> value1</em>:<em>value2</em>\u00a0</div></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Example",
      "level": "h3"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_comparison",
        "syntaxHighlighting": [
          {
            "text": "\nlet voteable = (age < 18) ? \"Too young\":\"Old enough\"; ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "18",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"Too young\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Old enough\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let voteable = (age < 18) ? \"Too young\":\"Old enough\";",
      "syntax_highlighting": [
        {
          "text": "\nlet voteable = (age < 18) ? \"Too young\":\"Old enough\"; ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "18",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"Too young\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Old enough\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> voteable = (age &lt; <span class=\"jsnumbercolor\" style=\"color:#905\">18</span>) ? <span class=\"jsstringcolor\" style=\"color:green\">\"Too young\"</span>:<span class=\"jsstringcolor\" style=\"color:green\">\"Old enough\"</span>; </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_comparison",
      "syntax_highlighting_data": [
        {
          "text": "\nlet voteable = (age < 18) ? \"Too young\":\"Old enough\"; ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "18",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"Too young\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Old enough\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the variable age is a value below 18, the value of the variable voteable will be \"Too young\", otherwise the value of voteable will be \"Old enough\".",
      "html": "<p>If the variable age is a value below 18, the value of the variable voteable \nwill be \"Too young\", otherwise the value of voteable will be \"Old enough\".</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Comparing Different Types",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Comparing data of different types may give unexpected results.",
      "html": "<p>Comparing data of different types may give unexpected results.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When comparing a string with a number, JavaScript will convert the string to a number when doing the comparison. An empty string converts to 0. A non-numeric string converts to NaN which is always false .",
      "html": "<p>When comparing a string with a number, JavaScript will convert the string to \na number when doing the comparison. An empty string converts to 0. A non-numeric \nstring converts to <code>NaN</code> which is always <code>false</code>.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_comparison_20",
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th>Case</th>\n<th>Value</th>\n<th style=\"width:10%\">Try</th>\n</tr>\n<tr>\n<td>2 &lt; 12</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison_20\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>2 &lt; \"12\"</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison_21\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>2 &lt; \"John\"</td>\n<td>false</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison_23\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>2 &gt; \"John\"</td>\n<td>false</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison_24\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>2 == \"John\"</td>\n<td>false</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison_25\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>\"2\" &lt; \"12\"</td>\n<td>false</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison_26\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>\"2\" &gt; \"12\"</td>\n<td>true</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison_27\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>\"2\" == \"12\"</td>\n<td>false</td>\n<td><a class=\"w3-btn btnsmall\" href=\"tryit.asp?filename=tryjs_comparison_28\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_comparison_20",
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When comparing two strings, \"2\" will be greater than \"12\", because (alphabetically) 1 is less than 2.",
      "html": "<p>When comparing two strings, \"2\" will be greater than \"12\", because \n(alphabetically) 1 is less than 2.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To secure a proper result, variables should be converted to the proper type before comparison:",
      "html": "<p>To secure a proper result, variables should be converted to the proper type \nbefore comparison:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_comparison_12",
        "syntaxHighlighting": [
          {
            "text": "\nage = Number(age);\nif (isNaN(age)) {\n\u00a0\u00a0voteable = \"Input is not a number\";\n} else {\n  \u00a0 voteable = (age < 18) ? \"Too young\" : \"Old enough\";\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"Input is not a number\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "else",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "18",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"Too young\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Old enough\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "age = Number(age);\nif (isNaN(age)) {\nvoteable = \"Input is not a number\";\n} else {\nvoteable = (age < 18) ? \"Too young\" : \"Old enough\";\n}",
      "syntax_highlighting": [
        {
          "text": "\nage = Number(age);\nif (isNaN(age)) {\n\u00a0\u00a0voteable = \"Input is not a number\";\n} else {\n  \u00a0 voteable = (age < 18) ? \"Too young\" : \"Old enough\";\n}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"Input is not a number\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "else",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "18",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"Too young\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Old enough\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nage = Number(age);<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (isNaN(age)) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0voteable = <span class=\"jsstringcolor\" style=\"color:green\">\"Input is not a number\"</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>} <span class=\"jskeywordcolor\" style=\"color:#005cc5\">else</span> {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 voteable = (age &lt; <span class=\"jsnumbercolor\" style=\"color:#905\">18</span>) ? <span class=\"jsstringcolor\" style=\"color:green\">\"Too young\"</span> : <span class=\"jsstringcolor\" style=\"color:green\">\"Old enough\"</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_comparison_12",
      "syntax_highlighting_data": [
        {
          "text": "\nage = Number(age);\nif (isNaN(age)) {\n\u00a0\u00a0voteable = \"Input is not a number\";\n} else {\n  \u00a0 voteable = (age < 18) ? \"Too young\" : \"Old enough\";\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"Input is not a number\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "else",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "18",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"Too young\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Old enough\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Nullish Coalescing Operator (??)",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The ?? operator returns the first argument if it is not nullish ( null or undefined ).",
      "html": "<p>The <code>??</code> operator returns the first argument if it is not <b>nullish</b>\n(<code>null</code> or <code>undefined</code>).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Otherwise it returns the second argument.",
      "html": "<p>Otherwise it returns the second argument.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_nullish",
        "syntaxHighlighting": [
          {
            "text": "\nlet name = null;\nlet text = \"missing\";\nlet result = name ?? text;\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "null",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"missing\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let name = null;\nlet text = \"missing\";\nlet result = name ?? text;",
      "syntax_highlighting": [
        {
          "text": "\nlet name = null;\nlet text = \"missing\";\nlet result = name ?? text;\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "null",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"missing\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> name = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">null</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"missing\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> result = name ?? text;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_nullish",
      "syntax_highlighting_data": [
        {
          "text": "\nlet name = null;\nlet text = \"missing\";\nlet result = name ?? text;\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "null",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"missing\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The nullish operator is supported in all browsers since March 2020:",
      "html": "<p>The nullish operator is supported in all browsers since March 2020:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "browserref",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"browserref notranslate\">\n<tbody><tr style=\"height:50px\">\n<th class=\"bsChrome\" style=\"width:20%;\" title=\"Chrome\"></th>\n<th class=\"bsEdge\" style=\"width:20%;\" title=\"Edge\"></th>\n<th class=\"bsFirefox\" style=\"width:20%;\" title=\"Firefox\"></th>\n<th class=\"bsSafari\" style=\"width:20%;\" title=\"Safari\"></th>\n<th class=\"bsOpera\" style=\"width:19%;\" title=\"Opera\"></th>\n</tr>\n<tr>\n<td>Chrome 80</td>\n<td>Edge 80</td>\n<td>Firefox 72</td>\n<td>Safari 13.1</td>\n<td>Opera 67</td>\n</tr>\n<tr>\n<td>Feb 2020</td>\n<td>Feb 2020</td>\n<td>Jan 2020</td>\n<td>Mar 2020</td>\n<td>Mar 2020</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "browserref",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "browserref",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Optional Chaining Operator (?.)",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The ?. operator returns undefined if an object is undefined or null (instead of throwing an error).",
      "html": "<p>The <code>?.</code> operator returns <code>undefined</code> if an object is\n<code>undefined</code> or <code>null</code> (instead of throwing an error).</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_oper_optional_chaining",
        "syntaxHighlighting": [
          {
            "text": "\n// Create an object:\nconst car = {type:\"Fiat\", model:\"500\", color:\"white\"};\n// Ask for car name:\ndocument.getElementById(\"demo\").innerHTML = car?.name;\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Create an object:",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Fiat\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"500\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"white\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Ask for car name:",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"demo\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "name",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create an object:\nconst car = {type:\"Fiat\", model:\"500\", color:\"white\"};\n// Ask for car name:\ndocument.getElementById(\"demo\").innerHTML = car?.name;",
      "syntax_highlighting": [
        {
          "text": "\n// Create an object:\nconst car = {type:\"Fiat\", model:\"500\", color:\"white\"};\n// Ask for car name:\ndocument.getElementById(\"demo\").innerHTML = car?.name;\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Create an object:",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Fiat\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"500\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"white\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Ask for car name:",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"demo\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "name",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Create an object:<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> car = {type:<span class=\"jsstringcolor\" style=\"color:green\">\"Fiat\"</span>, model:<span class=\"jsstringcolor\" style=\"color:green\">\"500\"</span>, color:<span class=\"jsstringcolor\" style=\"color:green\">\"white\"</span>};<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Ask for car name:<br/></span>\ndocument.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"demo\"</span>).<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span> = car?.<span class=\"jspropertycolor\" style=\"color:black\">name</span>;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_oper_optional_chaining",
      "syntax_highlighting_data": [
        {
          "text": "\n// Create an object:\nconst car = {type:\"Fiat\", model:\"500\", color:\"white\"};\n// Ask for car name:\ndocument.getElementById(\"demo\").innerHTML = car?.name;\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Create an object:",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Fiat\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"500\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"white\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Ask for car name:",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"demo\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "name",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The optional chaining operator is supported in all browsers since March 2020:",
      "html": "<p>The optional chaining operator is supported in all browsers since March 2020:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "browserref",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"browserref notranslate\">\n<tbody><tr style=\"height:50px\">\n<th class=\"bsChrome\" style=\"width:20%;\" title=\"Chrome\"></th>\n<th class=\"bsEdge\" style=\"width:20%;\" title=\"Edge\"></th>\n<th class=\"bsFirefox\" style=\"width:20%;\" title=\"Firefox\"></th>\n<th class=\"bsSafari\" style=\"width:20%;\" title=\"Safari\"></th>\n<th class=\"bsOpera\" style=\"width:19%;\" title=\"Opera\"></th>\n</tr>\n<tr>\n<td>Chrome 80</td>\n<td>Edge 80</td>\n<td>Firefox 72</td>\n<td>Safari 13.1</td>\n<td>Opera 67</td>\n</tr>\n<tr>\n<td>Feb 2020</td>\n<td>Feb 2020</td>\n<td>Jan 2020</td>\n<td>Mar 2020</td>\n<td>Mar 2020</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "browserref",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "browserref",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Consider the following code: let x = (5 == 5 || 5 < 2); What will be the value of x ?",
      "html": "<p>Consider the following code:<br/><code class=\"codeblock\">let x = (5 == 5 || 5 &lt; 2);</code><br/>What will be the value of <code>x</code>?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "Consider the following code:let x = (5 == 5 || 5 < 2);What will be the value of x?",
        "options": [
          {
            "value": "0",
            "text": "true"
          },
          {
            "value": "1",
            "text": "false"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_comparisons1"
      },
      "quiz_type": "quiz",
      "question": "Consider the following code:let x = (5 == 5 || 5 < 2);What will be the value of x?",
      "options": [
        {
          "value": "0",
          "text": "true"
        },
        {
          "value": "1",
          "text": "false"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_comparisons1",
      "html": "<form action=\"exercise.asp?x=xrcise_comparisons1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\"><code>true</code></label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\"><code>false</code></label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}