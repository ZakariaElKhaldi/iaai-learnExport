{
  "title": "JavaScript BigInt",
  "url": "https://www.w3schools.com/js/js_bigint.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "JavaScript BigInt",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "JavaScript BigInt variables are used to store big integer values that are too big to be represented by a normal JavaScript Number .",
      "html": "<p>JavaScript <code>BigInt</code> variables are used to store big integer values\nthat are too big to be represented by a normal JavaScript <code>Number</code>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript Integer Accuracy",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "JavaScript integers are only accurate up to 15 digits:",
      "html": "<p>JavaScript integers are only accurate up to 15 digits:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_inaccurate1",
        "syntaxHighlighting": [
          {
            "text": "\nlet x = 999999999999999;\nlet y = 9999999999999999;\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "999999999999999",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "9999999999999999",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let x = 999999999999999;\nlet y = 9999999999999999;",
      "syntax_highlighting": [
        {
          "text": "\nlet x = 999999999999999;\nlet y = 9999999999999999;\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "999999999999999",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "9999999999999999",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = <span class=\"jsnumbercolor\" style=\"color:#905\">999999999999999</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> y = <span class=\"jsnumbercolor\" style=\"color:#905\">9999999999999999</span>;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_inaccurate1",
      "syntax_highlighting_data": [
        {
          "text": "\nlet x = 999999999999999;\nlet y = 9999999999999999;\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "999999999999999",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "9999999999999999",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In JavaScript, all numbers are stored in a 64-bit floating-point format (IEEE 754 standard).",
      "html": "<p>In JavaScript, all numbers are stored in a 64-bit floating-point format (IEEE 754 standard).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "With this standard, large integer cannot be exactly represented and will be rounded.",
      "html": "<p>With this standard, large integer cannot be exactly represented and will be rounded.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Because of this, JavaScript can only safely represent integers:",
      "html": "<p>Because of this, JavaScript can only safely represent integers:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Up to 9007199254740991 +(2 53 -1)",
      "html": "<p>Up to <b>9007199254740991</b> +(2<sup>53</sup>-1)</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "and",
      "html": "<p>and</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Down to -9007199254740991 -(2 53 -1).",
      "html": "<p>Down to <b>-9007199254740991</b> -(2<sup>53</sup>-1).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Integer values outside this range lose precision.",
      "html": "<p>Integer values outside this range lose precision.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "How to Create a BigInt",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To create a BigInt , append n to the end of an integer or call BigInt() :",
      "html": "<p>To create a <code>BigInt</code>, append n to the end of an integer or call\n<code>BigInt()</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_bigint",
        "syntaxHighlighting": [
          {
            "text": "\nlet x = 9999999999999999;\nlet y = 9999999999999999n;\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "9999999999999999",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let x = 9999999999999999;\nlet y = 9999999999999999n;",
      "syntax_highlighting": [
        {
          "text": "\nlet x = 9999999999999999;\nlet y = 9999999999999999n;\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "9999999999999999",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = <span class=\"jsnumbercolor\" style=\"color:#905\">9999999999999999</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> y = 9999999999999999n;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_bigint",
      "syntax_highlighting_data": [
        {
          "text": "\nlet x = 9999999999999999;\nlet y = 9999999999999999n;\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "9999999999999999",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "BigInt: A new JavaScript Datatype",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The JavaScript typeof a BigInt is \"bigint\":",
      "html": "<p>The JavaScript <code>typeof</code> a <code>BigInt</code> is \"bigint\":</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_bigint_typeof",
        "syntaxHighlighting": [
          {
            "text": "\nlet x = BigInt(999999999999999);\nlet type = typeof x;\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "999999999999999",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "typeof",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let x = BigInt(999999999999999);\nlet type = typeof x;",
      "syntax_highlighting": [
        {
          "text": "\nlet x = BigInt(999999999999999);\nlet type = typeof x;\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "999999999999999",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "typeof",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = BigInt(<span class=\"jsnumbercolor\" style=\"color:#905\">999999999999999</span>);<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> type = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">typeof</span> x;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_bigint_typeof",
      "syntax_highlighting_data": [
        {
          "text": "\nlet x = BigInt(999999999999999);\nlet type = typeof x;\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "999999999999999",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "typeof",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "BigInt is the second numeric data type in JavaScript (after Number ).",
      "html": "<p><code>BigInt</code> is the second numeric data type in JavaScript\n(after <code>Number</code>).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "With BigInt the total number of supported data types in JavaScript is 8:",
      "html": "<p>With <code>BigInt</code> the total number of supported data types in JavaScript is 8:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "1. String 2. Number 3. Bigint 4. Boolean 5. Undefined 6. Null 7. Symbol 8. Object",
      "html": "<p>\n1. String<br/>\n2. Number<br/>\n3. Bigint<br/>\n4. Boolean<br/>\n5. Undefined<br/>\n6. Null<br/>\n7. Symbol<br/>\n8. Object\n</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "BigInt Operators",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Operators that can be used on a JavaScript Number can also be used on a BigInt .",
      "html": "<p>Operators that can be used on a JavaScript <code>Number</code>\ncan also be used on a <code>BigInt</code>.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_bigint_multiply",
        "syntaxHighlighting": [
          {
            "text": "\nlet x = 9007199254740995n;\nlet y = 9007199254740995n;\nlet z = x * y;\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let x = 9007199254740995n;\nlet y = 9007199254740995n;\nlet z = x * y;",
      "syntax_highlighting": [
        {
          "text": "\nlet x = 9007199254740995n;\nlet y = 9007199254740995n;\nlet z = x * y;\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = 9007199254740995n;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> y = 9007199254740995n;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> z = x * y;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_bigint_multiply",
      "syntax_highlighting_data": [
        {
          "text": "\nlet x = 9007199254740995n;\nlet y = 9007199254740995n;\nlet z = x * y;\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Notes",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Arithmetic between a BigInt and a Number is not allowed (type conversion lose information).",
      "html": "<p>Arithmetic between a <code>BigInt</code>\nand a <code>Number</code> is not allowed (type conversion lose information).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Unsigned right shift (>>>) can not be done on a BigInt (it does not have a fixed width).",
      "html": "<p>Unsigned right shift (&gt;&gt;&gt;) can not be done on a <code>BigInt</code>\n(it does not have a fixed width).</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "BigInt Decimals",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A BigInt can not have decimals.",
      "html": "<p>A <code>BigInt</code> can not have decimals.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_bigint_divide",
        "syntaxHighlighting": [
          {
            "text": "\nlet x = 5n;\nlet y = x / 2;\n// Error: Cannot mix BigInt and other types, use explicit conversion.\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Error: Cannot mix BigInt and other types, use explicit conversion.\n ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let x = 5n;\nlet y = x / 2;\n// Error: Cannot mix BigInt and other types, use explicit conversion.",
      "syntax_highlighting": [
        {
          "text": "\nlet x = 5n;\nlet y = x / 2;\n// Error: Cannot mix BigInt and other types, use explicit conversion.\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Error: Cannot mix BigInt and other types, use explicit conversion.\n ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = 5n;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> y = x / <span class=\"jsnumbercolor\" style=\"color:#905\">2</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Error: Cannot mix BigInt and other types, use explicit conversion.\n </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_bigint_divide",
      "syntax_highlighting_data": [
        {
          "text": "\nlet x = 5n;\nlet y = x / 2;\n// Error: Cannot mix BigInt and other types, use explicit conversion.\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Error: Cannot mix BigInt and other types, use explicit conversion.\n ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "BigInt Hex, Octal and Binary",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "BigInt can also be written in hexadecimal, octal, or binary notation:",
      "html": "<p><code>BigInt</code> can also be written in hexadecimal, octal, or binary notation:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_bigint_octal",
        "syntaxHighlighting": [
          {
            "text": "\nlet hex = 0x20000000000003n;\nlet oct = 0o400000000000000003n;\nlet bin = 0b100000000000000000000000000000000000000000000000000011n;\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let hex = 0x20000000000003n;\nlet oct = 0o400000000000000003n;\nlet bin = 0b100000000000000000000000000000000000000000000000000011n;",
      "syntax_highlighting": [
        {
          "text": "\nlet hex = 0x20000000000003n;\nlet oct = 0o400000000000000003n;\nlet bin = 0b100000000000000000000000000000000000000000000000000011n;\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> hex = 0x20000000000003n;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> oct = 0o400000000000000003n;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> bin = 0b100000000000000000000000000000000000000000000000000011n;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_bigint_octal",
      "syntax_highlighting_data": [
        {
          "text": "\nlet hex = 0x20000000000003n;\nlet oct = 0o400000000000000003n;\nlet bin = 0b100000000000000000000000000000000000000000000000000011n;\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Precision Curiosity",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Rounding can compromise program security:",
      "html": "<p>Rounding can compromise program security:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_max_safe_error",
        "syntaxHighlighting": [
          {
            "text": "\n9007199254740992 === 9007199254740993; // is true !!!\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n9007199254740992",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "9007199254740993",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// is true !!!\n ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "9007199254740992 === 9007199254740993; // is true !!!",
      "syntax_highlighting": [
        {
          "text": "\n9007199254740992 === 9007199254740993; // is true !!!\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n9007199254740992",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "9007199254740993",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// is true !!!\n ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n9007199254740992</span> === <span class=\"jsnumbercolor\" style=\"color:#905\">9007199254740993</span>; <span class=\"commentcolor\" style=\"color:slategray\">// is true !!!\n </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_max_safe_error",
      "syntax_highlighting_data": [
        {
          "text": "\n9007199254740992 === 9007199254740993; // is true !!!\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n9007199254740992",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "9007199254740993",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// is true !!!\n ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Browser Support",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "BigInt is supported in all browsers since September 2020:",
      "html": "<p><code>BigInt</code> is supported in all browsers since September 2020:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "browserref",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"browserref notranslate\">\n<tbody><tr style=\"height:50px\">\n<th class=\"bsChrome\" style=\"width:20%;\" title=\"Chrome\"></th>\n<th class=\"bsEdge\" style=\"width:20%;\" title=\"Edge\"></th>\n<th class=\"bsFirefox\" style=\"width:20%;\" title=\"Firefox\"></th>\n<th class=\"bsSafari\" style=\"width:20%;\" title=\"Safari\"></th>\n<th class=\"bsOpera\" style=\"width:19%;\" title=\"Opera\"></th>\n</tr>\n<tr>\n<td>Chrome 67</td>\n<td>Edge 79</td>\n<td>Firefox 68</td>\n<td>Safari 14</td>\n<td>Opera 54</td>\n</tr>\n<tr>\n<td>May 2018</td>\n<td>Jan 2020</td>\n<td>Jul 2019</td>\n<td>Sep 2020</td>\n<td>Jun 2018</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "browserref",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "browserref",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Minimum and Maximum Safe Integers",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "ES6",
          "href": "https://www.w3schools.com/js_es6.asp",
          "title": ""
        }
      ],
      "text": "ES6 added max and min properties to the Number object:",
      "html": "<p><a href=\"js_es6.asp\">ES6</a> added max and min properties to the Number object:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_max_safe",
        "syntaxHighlighting": [
          {
            "text": "\nlet x = Number.MAX_SAFE_INTEGER;\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "MAX_SAFE_INTEGER",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let x = Number.MAX_SAFE_INTEGER;",
      "syntax_highlighting": [
        {
          "text": "\nlet x = Number.MAX_SAFE_INTEGER;\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "MAX_SAFE_INTEGER",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = Number.<span class=\"jspropertycolor\" style=\"color:black\">MAX_SAFE_INTEGER</span>;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_max_safe",
      "syntax_highlighting_data": [
        {
          "text": "\nlet x = Number.MAX_SAFE_INTEGER;\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "MAX_SAFE_INTEGER",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_min_safe",
        "syntaxHighlighting": [
          {
            "text": "\nlet x = Number.MIN_SAFE_INTEGER;\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "MIN_SAFE_INTEGER",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let x = Number.MIN_SAFE_INTEGER;",
      "syntax_highlighting": [
        {
          "text": "\nlet x = Number.MIN_SAFE_INTEGER;\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "MIN_SAFE_INTEGER",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = Number.<span class=\"jspropertycolor\" style=\"color:black\">MIN_SAFE_INTEGER</span>;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_min_safe",
      "syntax_highlighting_data": [
        {
          "text": "\nlet x = Number.MIN_SAFE_INTEGER;\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "MIN_SAFE_INTEGER",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "New Number Methods",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "ES6",
          "href": "https://www.w3schools.com/js_es6.asp",
          "title": ""
        }
      ],
      "text": "ES6 also added 2 new methods to the Number object:",
      "html": "<p><a href=\"js_es6.asp\">ES6</a> also added 2 new methods to the Number object:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Number.isInteger() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Number.isInteger() method returns true if the argument is an integer.",
      "html": "<p>The <code>Number.isInteger()</code> method returns <code>true</code> if the argument is an integer.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_isinteger",
        "syntaxHighlighting": [
          {
            "text": "\nNumber.isInteger(10);\nNumber.isInteger(10.5);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "isInteger",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "isInteger",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "10.5",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Number.isInteger(10);\nNumber.isInteger(10.5);",
      "syntax_highlighting": [
        {
          "text": "\nNumber.isInteger(10);\nNumber.isInteger(10.5);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "isInteger",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "isInteger",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "10.5",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">isInteger</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">10</span>);<br/>\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">isInteger</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">10.5</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_isinteger",
      "syntax_highlighting_data": [
        {
          "text": "\nNumber.isInteger(10);\nNumber.isInteger(10.5);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "isInteger",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "isInteger",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "10.5",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Number.isSafeInteger() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A safe integer is an integer that can be exactly represented as a double precision number.",
      "html": "<p>A safe integer is an integer that can be exactly represented as a double precision number.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Number.isSafeInteger() method returns true if the argument is a safe integer.",
      "html": "<p>The <code>Number.isSafeInteger()</code> method returns <code>true</code> if the argument is a safe integer.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_issafeinteger",
        "syntaxHighlighting": [
          {
            "text": "\nNumber.isSafeInteger(10);\nNumber.isSafeInteger(12345678901234567890);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "isSafeInteger",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "isSafeInteger",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "12345678901234567890",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Number.isSafeInteger(10);\nNumber.isSafeInteger(12345678901234567890);",
      "syntax_highlighting": [
        {
          "text": "\nNumber.isSafeInteger(10);\nNumber.isSafeInteger(12345678901234567890);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "isSafeInteger",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "isSafeInteger",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "12345678901234567890",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">isSafeInteger</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">10</span>);<br/>\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">isSafeInteger</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">12345678901234567890</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_issafeinteger",
      "syntax_highlighting_data": [
        {
          "text": "\nNumber.isSafeInteger(10);\nNumber.isSafeInteger(12345678901234567890);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "isSafeInteger",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "isSafeInteger",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "12345678901234567890",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Safe integers are all integers from -(2 53 - 1) to +(2 53 - 1). This is safe: 9007199254740991. This is not safe: 9007199254740992.",
      "html": "<p>Safe integers are all integers from -(2<sup>53</sup> - 1) to +(2<sup>53</sup> - 1).<br/>\nThis is safe: 9007199254740991. This is not safe: 9007199254740992.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is a legal JavaScript syntax for creating a BigInt number?",
      "html": "<p>What is a legal JavaScript syntax for creating a BigInt number?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "What is a legal JavaScript syntax for creating a BigInt number?",
        "options": [
          {
            "value": "0",
            "text": "1234567890123456789m"
          },
          {
            "value": "1",
            "text": "1234567890123456789max"
          },
          {
            "value": "2",
            "text": "1234567890123456789n"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_bigint1"
      },
      "quiz_type": "quiz",
      "question": "What is a legal JavaScript syntax for creating a BigInt number?",
      "options": [
        {
          "value": "0",
          "text": "1234567890123456789m"
        },
        {
          "value": "1",
          "text": "1234567890123456789max"
        },
        {
          "value": "2",
          "text": "1234567890123456789n"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_bigint1",
      "html": "<form action=\"exercise.asp?x=xrcise_bigint1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\"><code>1234567890123456789m</code></label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\"><code>1234567890123456789max</code></label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\"><code>1234567890123456789n</code></label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}