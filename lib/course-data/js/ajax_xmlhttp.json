{
  "title": "AJAX The XMLHttpRequest Object",
  "url": "https://www.w3schools.com/js/js_ajax_http.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "AJAX - The XMLHttpRequest Object",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The keystone of AJAX is the XMLHttpRequest object.",
      "html": "<p>The keystone of AJAX is the XMLHttpRequest object.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The XMLHttpRequest Object",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "All modern browsers support the XMLHttpRequest object.",
      "html": "<p>All modern browsers support the <code>XMLHttpRequest</code> object.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The XMLHttpRequest object can be used to exchange data with a web server behind the scenes. This means that it is possible to update parts of a web page, without reloading the whole page.",
      "html": "<p>The <code>XMLHttpRequest</code> object can be used to exchange data with a web server behind the \nscenes. This means that it is possible to update parts of a web page, without \nreloading the whole page.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Create an XMLHttpRequest Object",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "All modern browsers (Chrome, Firefox, IE, Edge, Safari, Opera) have a built-in XMLHttpRequest object.",
      "html": "<p>All modern browsers (Chrome, Firefox, IE, Edge, Safari, Opera) have a built-in <code>XMLHttpRequest</code> object.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Syntax for creating an XMLHttpRequest object:",
      "html": "<p>Syntax for creating an <code>XMLHttpRequest</code> object:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nvariable = new XMLHttpRequest(); ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          }
        ],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "variable = new XMLHttpRequest();",
      "syntax_highlighting": [
        {
          "text": "\nvariable = new XMLHttpRequest(); ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><div>\n<i>variable </i>= <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> XMLHttpRequest();</div> </span></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nvariable = new XMLHttpRequest(); ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Define a Callback Function",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A callback function is a function passed as a parameter to another function.",
      "html": "<p>A callback function is a function passed as a parameter to another function.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In this case, the callback function should contain the code to execute when the response is ready.",
      "html": "<p>In this case, the callback function should contain the code to execute when the \nresponse is ready.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nxhttp.onload = function() {\n\u00a0  // What to do when the response is ready\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "onload",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// What to do when the response is ready",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "xhttp.onload = function() {\n// What to do when the response is ready\n}",
      "syntax_highlighting": [
        {
          "text": "\nxhttp.onload = function() {\n\u00a0  // What to do when the response is ready\n}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "onload",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// What to do when the response is ready",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nxhttp.<span class=\"jspropertycolor\" style=\"color:black\">onload</span> = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span>() {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0  <span class=\"commentcolor\" style=\"color:slategray\">// What to do when the response is ready<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nxhttp.onload = function() {\n\u00a0  // What to do when the response is ready\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "onload",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// What to do when the response is ready",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Send a Request",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To send a request to a server, you can use the open() and send() methods of the XMLHttpRequest object:",
      "html": "<p>To send a request to a server, you can use the open() and send() methods of the\n<code>XMLHttpRequest</code> object:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nxhttp.open(\"GET\", \"ajax_info.txt\");\nxhttp.send(); ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "open",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"GET\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"ajax_info.txt\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "send",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          }
        ],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "xhttp.open(\"GET\", \"ajax_info.txt\");\nxhttp.send();",
      "syntax_highlighting": [
        {
          "text": "\nxhttp.open(\"GET\", \"ajax_info.txt\");\nxhttp.send(); ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "open",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"GET\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"ajax_info.txt\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "send",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nxhttp.<span class=\"jspropertycolor\" style=\"color:black\">open</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"GET\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"ajax_info.txt\"</span>);<br/>\nxhttp.<span class=\"jspropertycolor\" style=\"color:black\">send</span>(); </span></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nxhttp.open(\"GET\", \"ajax_info.txt\");\nxhttp.send(); ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "open",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"GET\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"ajax_info.txt\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "send",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        }
      ],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_xmlhttp",
        "syntaxHighlighting": [
          {
            "text": "\n// Create an XMLHttpRequest object\nconst xhttp = new XMLHttpRequest();\n// Define a callback function\nxhttp.onload = function() {\n\u00a0\u00a0// Here you can use the Data\n}\n// Send a request\nxhttp.open(\"GET\", \"ajax_info.txt\");\nxhttp.send();\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Create an XMLHttpRequest object",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Define a callback function",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "onload",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Here you can use the Data",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Send a request",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "open",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"GET\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"ajax_info.txt\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "send",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create an XMLHttpRequest object\nconst xhttp = new XMLHttpRequest();\n// Define a callback function\nxhttp.onload = function() {\n// Here you can use the Data\n}\n// Send a request\nxhttp.open(\"GET\", \"ajax_info.txt\");\nxhttp.send();",
      "syntax_highlighting": [
        {
          "text": "\n// Create an XMLHttpRequest object\nconst xhttp = new XMLHttpRequest();\n// Define a callback function\nxhttp.onload = function() {\n\u00a0\u00a0// Here you can use the Data\n}\n// Send a request\nxhttp.open(\"GET\", \"ajax_info.txt\");\nxhttp.send();\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Create an XMLHttpRequest object",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Define a callback function",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "onload",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Here you can use the Data",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Send a request",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "open",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"GET\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"ajax_info.txt\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "send",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Create an XMLHttpRequest object<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> xhttp = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> XMLHttpRequest();<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Define a callback function<br/></span>\nxhttp.<span class=\"jspropertycolor\" style=\"color:black\">onload</span> = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span>() {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// Here you can use the Data<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Send a request<br/></span>\nxhttp.<span class=\"jspropertycolor\" style=\"color:black\">open</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"GET\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"ajax_info.txt\"</span>);<br/>\nxhttp.<span class=\"jspropertycolor\" style=\"color:black\">send</span>();<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_xmlhttp",
      "syntax_highlighting_data": [
        {
          "text": "\n// Create an XMLHttpRequest object\nconst xhttp = new XMLHttpRequest();\n// Define a callback function\nxhttp.onload = function() {\n\u00a0\u00a0// Here you can use the Data\n}\n// Send a request\nxhttp.open(\"GET\", \"ajax_info.txt\");\nxhttp.send();\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Create an XMLHttpRequest object",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Define a callback function",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "onload",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Here you can use the Data",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Send a request",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "open",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"GET\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"ajax_info.txt\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "send",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Access Across Domains",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "For security reasons, modern browsers do not allow access across domains.",
      "html": "<p>For security reasons, modern browsers do not allow access across domains.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This means that both the web page and the XML file it tries to load, must be located on the same server.",
      "html": "<p>This means that both the web page and the XML file it tries to load, must be located on the same server.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The examples on W3Schools all open XML files located on the W3Schools domain.",
      "html": "<p>The examples on W3Schools all open XML files located on the W3Schools domain.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you want to use the example above on one of your own web pages, the XML files you load must be located on your own server.",
      "html": "<p>If you want to use the example above on one of your own web pages,\nthe XML files you load must be located on your own server.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "XMLHttpRequest Object Methods",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:35%\">Method</th>\n<th style=\"width:65%\">Description</th>\n</tr>\n<tr>\n<td>new XMLHttpRequest()</td>\n<td>Creates a new XMLHttpRequest object</td>\n</tr>\n<tr>\n<td>abort()</td>\n<td>Cancels the current request</td>\n</tr>\n<tr>\n<td>getAllResponseHeaders()</td>\n<td>Returns header information</td>\n</tr>\n<tr>\n<td>getResponseHeader()</td>\n<td>Returns specific header information</td>\n</tr>\n<tr>\n<td>open(<em>method, url, async, user, psw</em>)</td>\n<td>Specifies the request<br/><br/><em>method</em>: the request type GET or POST<br/>\n<em>url</em>: the file location<br/>\n<em>async</em>: true (asynchronous) or false (synchronous)<br/><em>user</em>: optional user name<br/><em>psw</em>: optional password</td>\n</tr>\n<tr>\n<td>send()</td>\n<td>Sends the request to the server<br/>Used for GET requests</td>\n</tr>\n<tr>\n<td>send(<em>string</em>)</td>\n<td>Sends the request to the server.<br/>Used for POST requests</td>\n</tr>\n<tr>\n<td>setRequestHeader()</td>\n<td>Adds a label/value pair to the header to be sent</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "XMLHttpRequest Object Properties",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "javascript",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:35%\">Property</th>\n<th style=\"width:65%\">Description</th>\n</tr>\n<tr>\n<td>onload</td>\n<td>Defines a function to be called when the request is received (loaded)</td>\n</tr>\n<tr>\n<td>onreadystatechange</td>\n<td>Defines a function to be called when the readyState property changes</td>\n</tr>\n<tr>\n<td>readyState</td>\n<td>Holds the status of the XMLHttpRequest.<br/>\n 0: request not initialized <br/>\n 1: server connection established<br/>\n 2: request received <br/>\n 3: processing request <br/>\n 4: request finished and response is ready </td>\n</tr>\n<tr>\n<td>responseText</td>\n<td>Returns the response data as a string</td>\n</tr>\n<tr>\n<td>responseXML</td>\n<td>Returns the response data as XML data</td>\n</tr>\n<tr>\n<td>status</td>\n<td>Returns the status-number of a request<br/>200: \"OK\"<br/>403: \"Forbidden\"<br/>404: \"Not Found\"<br/>\n    For a complete list go to the <a href=\"/tags/ref_httpmessages.asp\">Http \n    Messages Reference</a></td>\n</tr>\n<tr>\n<td>statusText</td>\n<td>Returns the status-text (e.g. \"OK\" or \"Not Found\")</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The onload Property",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "With the XMLHttpRequest object you can define a callback function to be executed when the request receives an answer.",
      "html": "<p>With the <code>XMLHttpRequest</code> object you can define a callback function to be executed when \nthe request receives an answer.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The function is defined in the onload property of the XMLHttpRequest object:",
      "html": "<p>The function is defined in the <code>onload</code> property of the <code>XMLHttpRequest</code> object:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_first",
        "syntaxHighlighting": [
          {
            "text": "\n xhttp.onload = function() {\n\u00a0 document.getElementById(\"demo\").innerHTML = this.responseText;\n }\n xhttp.open(\"GET\", \"ajax_info.txt\");\n xhttp.send(); ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "onload",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"demo\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "responseText",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "open",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"GET\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"ajax_info.txt\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "send",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "xhttp.onload = function() {\ndocument.getElementById(\"demo\").innerHTML = this.responseText;\n}\nxhttp.open(\"GET\", \"ajax_info.txt\");\nxhttp.send();",
      "syntax_highlighting": [
        {
          "text": "\n xhttp.onload = function() {\n\u00a0 document.getElementById(\"demo\").innerHTML = this.responseText;\n }\n xhttp.open(\"GET\", \"ajax_info.txt\");\n xhttp.send(); ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "onload",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"demo\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "responseText",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "open",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"GET\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"ajax_info.txt\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "send",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> xhttp.<span class=\"jspropertycolor\" style=\"color:black\">onload</span> = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span>() {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 document.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"demo\"</span>).<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span> = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">responseText</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> }<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> xhttp.<span class=\"jspropertycolor\" style=\"color:black\">open</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"GET\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"ajax_info.txt\"</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> xhttp.<span class=\"jspropertycolor\" style=\"color:black\">send</span>(); </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_first",
      "syntax_highlighting_data": [
        {
          "text": "\n xhttp.onload = function() {\n\u00a0 document.getElementById(\"demo\").innerHTML = this.responseText;\n }\n xhttp.open(\"GET\", \"ajax_info.txt\");\n xhttp.send(); ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "onload",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"demo\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "responseText",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "open",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"GET\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"ajax_info.txt\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "send",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Multiple Callback Functions",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you have more than one AJAX task in a website, you should create one function for executing the XMLHttpRequest object, and one callback function for each AJAX task.",
      "html": "<p>If you have more than one AJAX task in a website, you should create one function for \nexecuting the <code>XMLHttpRequest</code> object, and one callback function for each \nAJAX task.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The function call should contain the URL and what function to call when the response is ready.",
      "html": "<p>The function call should contain the URL and what function to call when the \nresponse is ready.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nloadDoc(\"url-1\", myFunction1);\n\nloadDoc(\"url-2\", myFunction2);\nfunction loadDoc(url, cFunction) {\n\u00a0 const xhttp = new XMLHttpRequest();\n\u00a0 xhttp.onload = function() {cFunction(this);}\n\u00a0\u00a0xhttp.open(\"GET\", url);\n\u00a0\u00a0xhttp.send();\n}\nfunction myFunction1(xhttp) {\n\u00a0 // action goes here\n}\n\nfunction myFunction2(xhttp) {\n\u00a0 // action goes here\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\"url-1\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"url-2\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "onload",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "open",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"GET\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "send",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// action goes here",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// action goes here",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "loadDoc(\"url-1\", myFunction1);\n\nloadDoc(\"url-2\", myFunction2);\nfunction loadDoc(url, cFunction) {\nconst xhttp = new XMLHttpRequest();\nxhttp.onload = function() {cFunction(this);}\nxhttp.open(\"GET\", url);\nxhttp.send();\n}\nfunction myFunction1(xhttp) {\n// action goes here\n}\n\nfunction myFunction2(xhttp) {\n// action goes here\n}",
      "syntax_highlighting": [
        {
          "text": "\nloadDoc(\"url-1\", myFunction1);\n\nloadDoc(\"url-2\", myFunction2);\nfunction loadDoc(url, cFunction) {\n\u00a0 const xhttp = new XMLHttpRequest();\n\u00a0 xhttp.onload = function() {cFunction(this);}\n\u00a0\u00a0xhttp.open(\"GET\", url);\n\u00a0\u00a0xhttp.send();\n}\nfunction myFunction1(xhttp) {\n\u00a0 // action goes here\n}\n\nfunction myFunction2(xhttp) {\n\u00a0 // action goes here\n}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\"url-1\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"url-2\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "onload",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "open",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"GET\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "send",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// action goes here",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// action goes here",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nloadDoc(<span class=\"jsstringcolor\" style=\"color:green\">\"<em>url-1</em>\"</span>, myFunction1);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/>\nloadDoc(<span class=\"jsstringcolor\" style=\"color:green\">\"<em>url-2</em>\"</span>, myFunction2);<br/><br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> loadDoc(url, cFunction) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> xhttp = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> XMLHttpRequest();<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 xhttp.<span class=\"jspropertycolor\" style=\"color:black\">onload</span> = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span>() {cFunction(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>);}<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0xhttp.<span class=\"jspropertycolor\" style=\"color:black\">open</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"GET\"</span>, url);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0xhttp.<span class=\"jspropertycolor\" style=\"color:black\">send</span>();<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<br/><br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> myFunction1(xhttp) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// action goes here<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> myFunction2(xhttp) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// action goes here<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nloadDoc(\"url-1\", myFunction1);\n\nloadDoc(\"url-2\", myFunction2);\nfunction loadDoc(url, cFunction) {\n\u00a0 const xhttp = new XMLHttpRequest();\n\u00a0 xhttp.onload = function() {cFunction(this);}\n\u00a0\u00a0xhttp.open(\"GET\", url);\n\u00a0\u00a0xhttp.send();\n}\nfunction myFunction1(xhttp) {\n\u00a0 // action goes here\n}\n\nfunction myFunction2(xhttp) {\n\u00a0 // action goes here\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\"url-1\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"url-2\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "onload",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "open",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"GET\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "send",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// action goes here",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// action goes here",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The onreadystatechange Property",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The readyState property holds the status of the XMLHttpRequest.",
      "html": "<p>The <code>readyState</code> property holds the status of the XMLHttpRequest.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The onreadystatechange property defines a callback function to be executed when the readyState changes.",
      "html": "<p>The <code>onreadystatechange</code> property defines a callback function to be executed when the readyState changes.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The status property and the statusText properties hold the status of the XMLHttpRequest object.",
      "html": "<p>The <code>status</code> property and the <code>statusText</code> properties hold the status of the XMLHttpRequest object.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "javascript",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:20%\">Property</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>onreadystatechange</td>\n<td>Defines a function to be called when the readyState property changes</td>\n</tr>\n<tr>\n<td>readyState</td>\n<td>Holds the status of the XMLHttpRequest. <br/>\n 0: request not initialized <br/>\n 1: server connection established<br/>\n 2: request received <br/>\n 3: processing request <br/>\n 4: request finished and response is ready</td>\n</tr>\n<tr>\n<td>status</td>\n<td>200: \"OK\"<br/>403: \"Forbidden\"<br/>\n 404: \"Page not found\"<br/>For a complete list go to the\n    <a href=\"/tags/ref_httpmessages.asp\">Http Messages Reference</a></td>\n</tr>\n<tr>\n<td>statusText</td>\n<td>Returns the status-text (e.g. \"OK\" or \"Not Found\")</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The onreadystatechange function is called every time the readyState changes.",
      "html": "<p>The <code>onreadystatechange</code> function is called every time the readyState changes. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When readyState is 4 and status is 200, the response is ready:",
      "html": "<p>When <code>readyState</code> is 4 and status is 200, the response is ready:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_onreadystage",
        "syntaxHighlighting": [
          {
            "text": "\nfunction loadDoc() {\n\u00a0\u00a0const xhttp = new XMLHttpRequest();\n\u00a0\u00a0xhttp.onreadystatechange = function() {\n\u00a0\u00a0\u00a0\u00a0if (this.readyState == 4 && this.status == 200) {\n  \u00a0\u00a0\u00a0\u00a0\u00a0 document.getElementById(\"demo\").innerHTML =\n  \u00a0\u00a0\u00a0\u00a0\u00a0 this.responseText;\n  \u00a0\u00a0\u00a0 }\n\u00a0\u00a0};\n\u00a0\u00a0xhttp.open(\"GET\", \"ajax_info.txt\");\n\u00a0\u00a0xhttp.send();\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "onreadystatechange",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "readyState",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "status",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "200",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"demo\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "responseText",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "open",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"GET\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"ajax_info.txt\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "send",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "function loadDoc() {\nconst xhttp = new XMLHttpRequest();\nxhttp.onreadystatechange = function() {\nif (this.readyState == 4 && this.status == 200) {\ndocument.getElementById(\"demo\").innerHTML =\nthis.responseText;\n}\n};\nxhttp.open(\"GET\", \"ajax_info.txt\");\nxhttp.send();\n}",
      "syntax_highlighting": [
        {
          "text": "\nfunction loadDoc() {\n\u00a0\u00a0const xhttp = new XMLHttpRequest();\n\u00a0\u00a0xhttp.onreadystatechange = function() {\n\u00a0\u00a0\u00a0\u00a0if (this.readyState == 4 && this.status == 200) {\n  \u00a0\u00a0\u00a0\u00a0\u00a0 document.getElementById(\"demo\").innerHTML =\n  \u00a0\u00a0\u00a0\u00a0\u00a0 this.responseText;\n  \u00a0\u00a0\u00a0 }\n\u00a0\u00a0};\n\u00a0\u00a0xhttp.open(\"GET\", \"ajax_info.txt\");\n\u00a0\u00a0xhttp.send();\n}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "onreadystatechange",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "readyState",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "status",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "200",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"demo\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "responseText",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "open",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"GET\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"ajax_info.txt\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "send",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> loadDoc() {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> xhttp = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> XMLHttpRequest();<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0xhttp.<span class=\"jspropertycolor\" style=\"color:black\">onreadystatechange</span> = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span>() {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0\u00a0\u00a0<span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (<span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">readyState</span> == <span class=\"jsnumbercolor\" style=\"color:#905\">4</span> &amp;&amp; <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">status</span> == <span class=\"jsnumbercolor\" style=\"color:#905\">200</span>) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0\u00a0\u00a0\u00a0\u00a0 document.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"demo\"</span>).<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span> =<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">responseText</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0\u00a0\u00a0 }<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0};<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0xhttp.<span class=\"jspropertycolor\" style=\"color:black\">open</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"GET\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"ajax_info.txt\"</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0xhttp.<span class=\"jspropertycolor\" style=\"color:black\">send</span>();<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/>}<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_onreadystage",
      "syntax_highlighting_data": [
        {
          "text": "\nfunction loadDoc() {\n\u00a0\u00a0const xhttp = new XMLHttpRequest();\n\u00a0\u00a0xhttp.onreadystatechange = function() {\n\u00a0\u00a0\u00a0\u00a0if (this.readyState == 4 && this.status == 200) {\n  \u00a0\u00a0\u00a0\u00a0\u00a0 document.getElementById(\"demo\").innerHTML =\n  \u00a0\u00a0\u00a0\u00a0\u00a0 this.responseText;\n  \u00a0\u00a0\u00a0 }\n\u00a0\u00a0};\n\u00a0\u00a0xhttp.open(\"GET\", \"ajax_info.txt\");\n\u00a0\u00a0xhttp.send();\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "onreadystatechange",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "readyState",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "status",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "200",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"demo\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "responseText",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "open",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"GET\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"ajax_info.txt\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "send",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The onreadystatechange event is triggered four times (1-4), one time for each change in the readyState.",
      "html": "<p>The <code>onreadystatechange</code> event is triggered four times (1-4), one time for each change in the readyState.</p>"
    }
  ]
}