{
  "title": "JavaScript Static Methods",
  "url": "https://www.w3schools.com/js/js_class_static.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "JavaScript Static Methods",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Static class methods are defined on the class itself.",
      "html": "<p>Static class methods are defined on the class itself.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You cannot call a static method on an object, only on an object class.",
      "html": "<p>You cannot call a <code>static</code> method on an object, only on an object class.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "",
      "html": "<p></p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_class_static",
        "syntaxHighlighting": [
          {
            "text": "\nclass Car {\u00a0 constructor(name) {\u00a0\u00a0\u00a0 this.name = \n  name;\u00a0\n  }\u00a0 static hello() {\u00a0\u00a0\u00a0 return \"Hello!!\";\u00a0\n  }}const myCar = new Car(\"Ford\");// You can call 'hello()' on \n  the Car Class:document.getElementById(\"demo\").innerHTML \n  = Car.hello();// But NOT on a Car Object:// document.getElementById(\"demo\").innerHTML \n  = myCar.hello();// this will raise an error. ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "class",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "name",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "static",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Hello!!\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// You can call 'hello()' on \n  the Car Class:",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"demo\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "hello",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "// But NOT on a Car Object:",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "// document.getElementById(\"demo\").innerHTML \n  = myCar.hello();",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "// this will raise an error. ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "class Car {\u00a0 constructor(name) {\u00a0\u00a0\u00a0 this.name =\nname;\n}\u00a0 static hello() {\u00a0\u00a0\u00a0 return \"Hello!!\";\n}}const myCar = new Car(\"Ford\");// You can call 'hello()' on\nthe Car Class:document.getElementById(\"demo\").innerHTML\n= Car.hello();// But NOT on a Car Object:// document.getElementById(\"demo\").innerHTML\n= myCar.hello();// this will raise an error.",
      "syntax_highlighting": [
        {
          "text": "\nclass Car {\u00a0 constructor(name) {\u00a0\u00a0\u00a0 this.name = \n  name;\u00a0\n  }\u00a0 static hello() {\u00a0\u00a0\u00a0 return \"Hello!!\";\u00a0\n  }}const myCar = new Car(\"Ford\");// You can call 'hello()' on \n  the Car Class:document.getElementById(\"demo\").innerHTML \n  = Car.hello();// But NOT on a Car Object:// document.getElementById(\"demo\").innerHTML \n  = myCar.hello();// this will raise an error. ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "class",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "name",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "static",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Hello!!\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// You can call 'hello()' on \n  the Car Class:",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"demo\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "hello",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "// But NOT on a Car Object:",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "// document.getElementById(\"demo\").innerHTML \n  = myCar.hello();",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "// this will raise an error. ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">class</span> Car {<br/>\u00a0 constructor(name) {<br/>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">name</span> = <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  name;<br/>\u00a0<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  }<br/>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">static</span> hello() {<br/>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">return</span> <span class=\"jsstringcolor\" style=\"color:green\">\"Hello!!\"</span>;<br/>\u00a0<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  }<br/>}<br/><br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> myCar = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> Car(<span class=\"jsstringcolor\" style=\"color:green\">\"Ford\"</span>);<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// You can call 'hello()' on \n  the Car Class:<br/></span>document.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"demo\"</span>).<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span> <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  = Car.<span class=\"jspropertycolor\" style=\"color:black\">hello</span>();<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// But NOT on a Car Object:<br/></span><span class=\"commentcolor\" style=\"color:slategray\">// document.getElementById(\"demo\").innerHTML \n  = myCar.hello();<br/></span><span class=\"commentcolor\" style=\"color:slategray\">// this will raise an error. </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_class_static",
      "syntax_highlighting_data": [
        {
          "text": "\nclass Car {\u00a0 constructor(name) {\u00a0\u00a0\u00a0 this.name = \n  name;\u00a0\n  }\u00a0 static hello() {\u00a0\u00a0\u00a0 return \"Hello!!\";\u00a0\n  }}const myCar = new Car(\"Ford\");// You can call 'hello()' on \n  the Car Class:document.getElementById(\"demo\").innerHTML \n  = Car.hello();// But NOT on a Car Object:// document.getElementById(\"demo\").innerHTML \n  = myCar.hello();// this will raise an error. ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "class",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "name",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "static",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Hello!!\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// You can call 'hello()' on \n  the Car Class:",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"demo\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "hello",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "// But NOT on a Car Object:",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "// document.getElementById(\"demo\").innerHTML \n  = myCar.hello();",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "// this will raise an error. ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you want to use the myCar object inside the static method, you can send it as a parameter:",
      "html": "<p>If you want to use the myCar object inside the <code>static</code> method, you can send it \nas a parameter:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_class_static2",
        "syntaxHighlighting": [
          {
            "text": "\nclass Car {\u00a0 constructor(name) {\u00a0\u00a0\u00a0 this.name = \n  name;\u00a0\n  }\u00a0 static hello(x) {\u00a0\u00a0\u00a0 return \"Hello \" + \n  x.name;\u00a0\n  }}const myCar = new Car(\"Ford\");document.getElementById(\"demo\").innerHTML \n  = Car.hello(myCar); ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "class",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "name",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "static",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Hello \"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "name",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"demo\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "hello",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "class Car {\u00a0 constructor(name) {\u00a0\u00a0\u00a0 this.name =\nname;\n}\u00a0 static hello(x) {\u00a0\u00a0\u00a0 return \"Hello \" +\nx.name;\n}}const myCar = new Car(\"Ford\");document.getElementById(\"demo\").innerHTML\n= Car.hello(myCar);",
      "syntax_highlighting": [
        {
          "text": "\nclass Car {\u00a0 constructor(name) {\u00a0\u00a0\u00a0 this.name = \n  name;\u00a0\n  }\u00a0 static hello(x) {\u00a0\u00a0\u00a0 return \"Hello \" + \n  x.name;\u00a0\n  }}const myCar = new Car(\"Ford\");document.getElementById(\"demo\").innerHTML \n  = Car.hello(myCar); ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "class",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "name",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "static",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Hello \"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "name",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"demo\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "hello",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">class</span> Car {<br/>\u00a0 constructor(name) {<br/>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">name</span> = <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  name;<br/>\u00a0<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  }<br/>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">static</span> hello(x) {<br/>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">return</span> <span class=\"jsstringcolor\" style=\"color:green\">\"Hello \"</span> + <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  x.<span class=\"jspropertycolor\" style=\"color:black\">name</span>;<br/>\u00a0<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  }<br/>}<br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> myCar = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> Car(<span class=\"jsstringcolor\" style=\"color:green\">\"Ford\"</span>);<br/>document.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"demo\"</span>).<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span> <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  = Car.<span class=\"jspropertycolor\" style=\"color:black\">hello</span>(myCar); </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_class_static2",
      "syntax_highlighting_data": [
        {
          "text": "\nclass Car {\u00a0 constructor(name) {\u00a0\u00a0\u00a0 this.name = \n  name;\u00a0\n  }\u00a0 static hello(x) {\u00a0\u00a0\u00a0 return \"Hello \" + \n  x.name;\u00a0\n  }}const myCar = new Car(\"Ford\");document.getElementById(\"demo\").innerHTML \n  = Car.hello(myCar); ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "class",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "name",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "static",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Hello \"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "name",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"demo\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "hello",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    }
  ]
}