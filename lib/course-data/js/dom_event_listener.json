{
  "title": "JavaScript DOM EventListener",
  "url": "https://www.w3schools.com/js/js_htmldom_eventlistener.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "JavaScript HTML DOM EventListener",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The addEventListener() method",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_displaydate",
        "syntaxHighlighting": [
          {
            "text": "\n document.getElementById(\"myBtn\").addEventListener(\"click\", displayDate); ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"myBtn\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "addEventListener",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"click\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "document.getElementById(\"myBtn\").addEventListener(\"click\", displayDate);",
      "syntax_highlighting": [
        {
          "text": "\n document.getElementById(\"myBtn\").addEventListener(\"click\", displayDate); ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"myBtn\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "addEventListener",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"click\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> document.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"myBtn\"</span>).<span class=\"jspropertycolor\" style=\"color:black\">addEventListener</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"click\"</span>, displayDate); </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_displaydate",
      "syntax_highlighting_data": [
        {
          "text": "\n document.getElementById(\"myBtn\").addEventListener(\"click\", displayDate); ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"myBtn\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "addEventListener",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"click\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The addEventListener() method attaches an event handler to the specified element.",
      "html": "<p>The <code>addEventListener()</code> method attaches an event handler to the specified element.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The addEventListener() method attaches an event handler to an element without overwriting existing event handlers.",
      "html": "<p>The <code>addEventListener()</code> method attaches an event handler to an element without overwriting existing event handlers.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can add many event handlers to one element.",
      "html": "<p>You can add many event handlers to one element.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can add many event handlers of the same type to one element, i.e two \"click\" events.",
      "html": "<p>You can add many event handlers of the same type to one element, i.e two \"click\" events.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can add event listeners to any DOM object not only HTML elements. i.e the window object.",
      "html": "<p>You can add event listeners to any DOM object not only HTML elements. i.e the window object.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The addEventListener() method makes it easier to control how the event reacts to bubbling.",
      "html": "<p>The <code>addEventListener()</code> method makes it easier to control how the event reacts to bubbling.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When using the addEventListener() method, the JavaScript is separated from the HTML markup, for better readability and allows you to add event listeners even when you do not control the HTML markup.",
      "html": "<p>When using the <code>addEventListener()</code> method, the JavaScript is separated from the HTML markup, for better readability \nand allows you to add event listeners even when you do not control the HTML markup.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can easily remove an event listener by using the removeEventListener() method.",
      "html": "<p>You can easily remove an event listener by using the <code>removeEventListener()</code> method.<br/></p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Syntax",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate\"><div>\n<em>element</em>.addEventListener(<em>event, function, useCapture</em>);</div></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "HTML DOM Event",
          "href": "https://www.w3schools.com/jsref/dom_obj_event.asp",
          "title": ""
        }
      ],
      "text": "The first parameter is the type of the event (like \" click \" or \" mousedown \" or any other HTML DOM Event .)",
      "html": "<p>The first parameter is the type of the event (like \"<code>click</code>\" or \"<code>mousedown</code>\" \nor any other <a href=\"/jsref/dom_obj_event.asp\">HTML DOM Event</a>.)</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The second parameter is the function we want to call when the event occurs.",
      "html": "<p>The second parameter is the function we want to call when the event occurs. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The third parameter is a boolean value specifying whether to use event bubbling or event capturing. This parameter is optional.",
      "html": "<p>The third parameter is a boolean value specifying whether to use event bubbling or event capturing. This parameter is optional.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note that you don't use the \"on\" prefix for the event; use \" click \" instead of \" onclick \".",
      "html": "<p>Note that you don't use the \n\"on\" prefix for the event; use \"<code>click</code>\" instead of \"<code>onclick</code>\".</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Add an Event Handler to an Element",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_add",
        "syntaxHighlighting": [
          {
            "text": "\n element.addEventListener(\"click\", function(){ alert(\"Hello World!\"); }); ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "addEventListener",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"click\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Hello World!\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "element.addEventListener(\"click\", function(){ alert(\"Hello World!\"); });",
      "syntax_highlighting": [
        {
          "text": "\n element.addEventListener(\"click\", function(){ alert(\"Hello World!\"); }); ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "addEventListener",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"click\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Hello World!\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <em>element</em>.<span class=\"jspropertycolor\" style=\"color:black\">addEventListener</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"click\"</span>, <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span>(){ alert(<span class=\"jsstringcolor\" style=\"color:green\">\"Hello World!\"</span>); }); </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_add",
      "syntax_highlighting_data": [
        {
          "text": "\n element.addEventListener(\"click\", function(){ alert(\"Hello World!\"); }); ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "addEventListener",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"click\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Hello World!\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also refer to an external \"named\" function:",
      "html": "<p>You can also refer to an external \"named\" function:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_add2",
        "syntaxHighlighting": [
          {
            "text": "\n  element.addEventListener(\"click\",  myFunction);function myFunction() {\u00a0\u00a0alert (\"Hello World!\");} ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "addEventListener",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"click\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Hello World!\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "element.addEventListener(\"click\",  myFunction);function myFunction() {\u00a0\u00a0alert (\"Hello World!\");}",
      "syntax_highlighting": [
        {
          "text": "\n element.addEventListener(\"click\",  myFunction);function myFunction() {\u00a0\u00a0alert (\"Hello World!\");} ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "addEventListener",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"click\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Hello World!\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <em>element</em>.<span class=\"jspropertycolor\" style=\"color:black\">addEventListener</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"click\"</span>,  myFunction);<br/><br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> myFunction() {<br/>\u00a0\u00a0alert (<span class=\"jsstringcolor\" style=\"color:green\">\"Hello World!\"</span>);<br/>} </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_add2",
      "syntax_highlighting_data": [
        {
          "text": "\n  element.addEventListener(\"click\",  myFunction);function myFunction() {\u00a0\u00a0alert (\"Hello World!\");} ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "addEventListener",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"click\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Hello World!\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Add Many Event Handlers to the Same Element",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The addEventListener() method allows you to add many events to the same element, without overwriting existing events:",
      "html": "<p>The <code>addEventListener()</code> method allows you to add many events to the same \nelement, without overwriting existing events:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_add_many",
        "syntaxHighlighting": [
          {
            "text": "\n element.addEventListener(\"click\", myFunction);\n element.addEventListener(\"click\", mySecondFunction);\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "addEventListener",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"click\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "addEventListener",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"click\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "element.addEventListener(\"click\", myFunction);\nelement.addEventListener(\"click\", mySecondFunction);",
      "syntax_highlighting": [
        {
          "text": "\n element.addEventListener(\"click\", myFunction);\n element.addEventListener(\"click\", mySecondFunction);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "addEventListener",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"click\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "addEventListener",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"click\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <em>element</em>.<span class=\"jspropertycolor\" style=\"color:black\">addEventListener</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"click\"</span>, myFunction);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <em>element</em>.<span class=\"jspropertycolor\" style=\"color:black\">addEventListener</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"click\"</span>, mySecondFunction);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_add_many",
      "syntax_highlighting_data": [
        {
          "text": "\n element.addEventListener(\"click\", myFunction);\n element.addEventListener(\"click\", mySecondFunction);\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "addEventListener",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"click\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "addEventListener",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"click\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can add events of different types to the same element:",
      "html": "<p>You can add events of different types to the same element:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_add_many2",
        "syntaxHighlighting": [
          {
            "text": "\nelement.addEventListener(\"mouseover\", myFunction);\nelement.addEventListener(\"click\", mySecondFunction);\nelement.addEventListener(\"mouseout\", myThirdFunction); ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "addEventListener",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"mouseover\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "addEventListener",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"click\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "addEventListener",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"mouseout\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "element.addEventListener(\"mouseover\", myFunction);\nelement.addEventListener(\"click\", mySecondFunction);\nelement.addEventListener(\"mouseout\", myThirdFunction);",
      "syntax_highlighting": [
        {
          "text": "\nelement.addEventListener(\"mouseover\", myFunction);\nelement.addEventListener(\"click\", mySecondFunction);\nelement.addEventListener(\"mouseout\", myThirdFunction); ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "addEventListener",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"mouseover\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "addEventListener",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"click\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "addEventListener",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"mouseout\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<em>element</em>.<span class=\"jspropertycolor\" style=\"color:black\">addEventListener</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"mouseover\"</span>, myFunction);<br/>\n<em>element</em>.<span class=\"jspropertycolor\" style=\"color:black\">addEventListener</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"click\"</span>, mySecondFunction);<br/>\n<em>element</em>.<span class=\"jspropertycolor\" style=\"color:black\">addEventListener</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"mouseout\"</span>, myThirdFunction); </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_add_many2",
      "syntax_highlighting_data": [
        {
          "text": "\nelement.addEventListener(\"mouseover\", myFunction);\nelement.addEventListener(\"click\", mySecondFunction);\nelement.addEventListener(\"mouseout\", myThirdFunction); ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "addEventListener",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"mouseover\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "addEventListener",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"click\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "addEventListener",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"mouseout\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Add an Event Handler to the window Object",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The addEventListener() method allows you to add event listeners on any HTML DOM object such as HTML elements, the HTML document, the window object, or other objects that support events, like the xmlHttpRequest object.",
      "html": "<p>The <code>addEventListener()</code> method allows you to add event listeners on any HTML \nDOM object such as HTML elements, the HTML document, the window object, or other \nobjects that support events, like the <code>xmlHttpRequest</code> object.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_dom",
        "syntaxHighlighting": [
          {
            "text": "\nwindow.addEventListener(\"resize\", function(){\n\u00a0\u00a0document.getElementById(\"demo\").innerHTML = sometext;\n});\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "addEventListener",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"resize\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"demo\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "window.addEventListener(\"resize\", function(){\ndocument.getElementById(\"demo\").innerHTML = sometext;\n});",
      "syntax_highlighting": [
        {
          "text": "\nwindow.addEventListener(\"resize\", function(){\n\u00a0\u00a0document.getElementById(\"demo\").innerHTML = sometext;\n});\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "addEventListener",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"resize\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"demo\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nwindow.<span class=\"jspropertycolor\" style=\"color:black\">addEventListener</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"resize\"</span>, <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span>(){<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0document.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"demo\"</span>).<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span> = <em>sometext</em>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>});<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_dom",
      "syntax_highlighting_data": [
        {
          "text": "\nwindow.addEventListener(\"resize\", function(){\n\u00a0\u00a0document.getElementById(\"demo\").innerHTML = sometext;\n});\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "addEventListener",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"resize\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"demo\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Passing Parameters",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When passing parameter values, use an \"anonymous function\" that calls the specified function with the parameters:",
      "html": "<p>When passing parameter values, use \nan \"anonymous function\" that calls the specified function with the parameters:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_parameters",
        "syntaxHighlighting": [
          {
            "text": "\nelement.addEventListener(\"click\", function(){ myFunction(p1, p2); });\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "addEventListener",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"click\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "element.addEventListener(\"click\", function(){ myFunction(p1, p2); });",
      "syntax_highlighting": [
        {
          "text": "\nelement.addEventListener(\"click\", function(){ myFunction(p1, p2); });\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "addEventListener",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"click\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<em>element</em>.<span class=\"jspropertycolor\" style=\"color:black\">addEventListener</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"click\"</span>, <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span>(){ myFunction(p1, p2); });<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_parameters",
      "syntax_highlighting_data": [
        {
          "text": "\nelement.addEventListener(\"click\", function(){ myFunction(p1, p2); });\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "addEventListener",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"click\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Event Bubbling or Event Capturing?",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "There are two ways of event propagation in the HTML DOM, bubbling and capturing.",
      "html": "<p>There are two ways of event propagation in the HTML DOM, bubbling and capturing.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Event propagation is a way of defining the element order when an event occurs. If you have a <p> element inside a <div> element, and the user clicks on the <p> element, which element's \"click\" event should be handled first?",
      "html": "<p>Event propagation is a way of defining the element order when an event occurs.\nIf you have a &lt;p&gt; element inside a &lt;div&gt; element, and the user clicks on the &lt;p&gt; element, which element's \n\"click\" event should be handled first?</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In bubbling the inner most element's event is handled first and then the outer: the <p> element's click event is handled first, then the <div> element's click event.",
      "html": "<p>In <em>bubbling </em>the inner most element's event is handled first and then the outer:\nthe &lt;p&gt; element's click event is handled first, then the &lt;div&gt; element's click event.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In capturing the outer most element's event is handled first and then the inner: the <div> element's click event will be handled first, then the <p> element's click event.",
      "html": "<p>In <em>capturing </em>the outer most element's event is handled first and then the inner:\nthe &lt;div&gt; element's click event will be handled first, then the &lt;p&gt; element's click event.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "With the addEventListener() method you can specify the propagation type by using the \"useCapture\" parameter:",
      "html": "<p>With the addEventListener() method you can specify the propagation type by using the \"useCapture\" parameter:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate\"><div>\naddEventListener(<em>event</em>, <em>function</em>, <span class=\"marked\"><em>useCapture</em></span>);</div></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The default value is false, which will use the bubbling propagation, when the value is set to true, the event uses the capturing propagation.",
      "html": "<p>The default value is false, which will use the bubbling propagation, when the value is set to true, the event uses the capturing propagation.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_usecapture",
        "syntaxHighlighting": [
          {
            "text": "\ndocument.getElementById(\"myP\").addEventListener(\"click\", myFunction, true);\ndocument.getElementById(\"myDiv\").addEventListener(\"click\", myFunction, true);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"myP\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "addEventListener",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"click\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "true",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"myDiv\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "addEventListener",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"click\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "true",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "document.getElementById(\"myP\").addEventListener(\"click\", myFunction, true);\ndocument.getElementById(\"myDiv\").addEventListener(\"click\", myFunction, true);",
      "syntax_highlighting": [
        {
          "text": "\ndocument.getElementById(\"myP\").addEventListener(\"click\", myFunction, true);\ndocument.getElementById(\"myDiv\").addEventListener(\"click\", myFunction, true);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"myP\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "addEventListener",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"click\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "true",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"myDiv\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "addEventListener",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"click\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "true",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\ndocument.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"myP\"</span>).<span class=\"jspropertycolor\" style=\"color:black\">addEventListener</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"click\"</span>, myFunction, <span class=\"jskeywordcolor\" style=\"color:#005cc5\">true</span>);<br/>\ndocument.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"myDiv\"</span>).<span class=\"jspropertycolor\" style=\"color:black\">addEventListener</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"click\"</span>, myFunction, <span class=\"jskeywordcolor\" style=\"color:#005cc5\">true</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_usecapture",
      "syntax_highlighting_data": [
        {
          "text": "\ndocument.getElementById(\"myP\").addEventListener(\"click\", myFunction, true);\ndocument.getElementById(\"myDiv\").addEventListener(\"click\", myFunction, true);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"myP\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "addEventListener",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"click\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "true",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"myDiv\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "addEventListener",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"click\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "true",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The removeEventListener() method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The removeEventListener() method removes event handlers that have been attached with the addEventListener() method:",
      "html": "<p>The <code>removeEventListener()</code> method removes event handlers that have been \nattached with the addEventListener() method:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_remove",
        "syntaxHighlighting": [
          {
            "text": "\nelement.removeEventListener(\"mousemove\", myFunction); ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "removeEventListener",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"mousemove\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "element.removeEventListener(\"mousemove\", myFunction);",
      "syntax_highlighting": [
        {
          "text": "\nelement.removeEventListener(\"mousemove\", myFunction); ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "removeEventListener",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"mousemove\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<em>element</em>.<span class=\"jspropertycolor\" style=\"color:black\">removeEventListener</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"mousemove\"</span>, myFunction); </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_remove",
      "syntax_highlighting_data": [
        {
          "text": "\nelement.removeEventListener(\"mousemove\", myFunction); ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "removeEventListener",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"mousemove\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "HTML DOM Event Object Reference",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "HTML DOM Event Object Reference",
          "href": "https://www.w3schools.com/jsref/dom_obj_event.asp",
          "title": ""
        }
      ],
      "text": "For a list of all HTML DOM events, look at our complete HTML DOM Event Object Reference .",
      "html": "<p>For a list of all HTML DOM events, look at our complete <a href=\"/jsref/dom_obj_event.asp\">HTML DOM Event Object Reference</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is a legal syntax for executing a function called 'myfunc' when the browser window resizes?",
      "html": "<p>What is a legal syntax for executing a function called 'myfunc' when the browser window resizes?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "What is a legal syntax for executing a function called 'myfunc' when the browser window resizes?",
        "options": [
          {
            "value": "0",
            "text": "window.listen('resize', myfunc);"
          },
          {
            "value": "1",
            "text": "window.addEventListener('resize', myfunc);"
          },
          {
            "value": "2",
            "text": "window.addEvent('resize', myfunc);"
          },
          {
            "value": "3",
            "text": "window.execute(myfunc, 'resize');"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_htmldom_eventlistener1"
      },
      "quiz_type": "quiz",
      "question": "What is a legal syntax for executing a function called 'myfunc' when the browser window resizes?",
      "options": [
        {
          "value": "0",
          "text": "window.listen('resize', myfunc);"
        },
        {
          "value": "1",
          "text": "window.addEventListener('resize', myfunc);"
        },
        {
          "value": "2",
          "text": "window.addEvent('resize', myfunc);"
        },
        {
          "value": "3",
          "text": "window.execute(myfunc, 'resize');"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_htmldom_eventlistener1",
      "html": "<form action=\"exercise.asp?x=xrcise_htmldom_eventlistener1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\"><code>window.listen('resize', myfunc);</code></label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\"><code>window.addEventListener('resize', myfunc);</code></label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\"><code>window.addEvent('resize', myfunc);</code></label></div><div class=\"quizoption\"><input id=\"quizoption3\" name=\"quizoption\" type=\"radio\" value=\"3\"/><label for=\"quizoption3\"><code>window.execute(myfunc, 'resize');</code></label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}