{
  "title": "JavaScript DOM Nodelist",
  "url": "https://www.w3schools.com/js/js_htmldom_nodelist.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "JavaScript HTML DOM Node Lists",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The HTML DOM NodeList Object",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A NodeList object is a list (collection) of nodes extracted from a document.",
      "html": "<p>A <code>NodeList</code> object is a list (collection) of nodes extracted from a \ndocument.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A NodeList object is almost the same as an HTMLCollection object.",
      "html": "<p>A <code>NodeList</code> object is almost the same as an <code>HTMLCollection</code> object.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Some (older) browsers return a NodeList object instead of an HTMLCollection for methods like getElementsByClassName() .",
      "html": "<p>Some (older) browsers return a NodeList object instead of an HTMLCollection \nfor methods like <code>getElementsByClassName()</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "All browsers return a NodeList object for the property childNodes .",
      "html": "<p>All browsers return a NodeList object for the property <code>childNodes</code>.\u00a0 </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Most browsers return a NodeList object for the method querySelectorAll() .",
      "html": "<p>Most browsers return a NodeList object for the method <code>querySelectorAll()</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The following code selects all <p> nodes in a document:",
      "html": "<p>The following code selects all <code>&lt;p&gt;</code> nodes in a document:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_dom_nodelist",
        "syntaxHighlighting": [
          {
            "text": "\nconst myNodeList = document.querySelectorAll(\"p\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "querySelectorAll",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"p\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const myNodeList = document.querySelectorAll(\"p\");",
      "syntax_highlighting": [
        {
          "text": "\nconst myNodeList = document.querySelectorAll(\"p\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "querySelectorAll",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"p\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> myNodeList = document.<span class=\"jspropertycolor\" style=\"color:black\">querySelectorAll</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"p\"</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_dom_nodelist",
      "syntax_highlighting_data": [
        {
          "text": "\nconst myNodeList = document.querySelectorAll(\"p\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "querySelectorAll",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"p\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: The index starts at 0.",
      "html": "<p><b>Note:</b> The index starts at 0.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "HTML DOM Node List Length",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The length property defines the number of nodes in a node list:",
      "html": "<p>The <code>length</code> property defines the number of nodes in a node list:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_dom_nodelist_length",
        "syntaxHighlighting": [
          {
            "text": "\nmyNodelist.length\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "length\n",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "myNodelist.length",
      "syntax_highlighting": [
        {
          "text": "\nmyNodelist.length\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "length\n",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nmyNodelist.<span class=\"jspropertycolor\" style=\"color:black\">length\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_dom_nodelist_length",
      "syntax_highlighting_data": [
        {
          "text": "\nmyNodelist.length\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "length\n",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The length property is useful when you want to loop through the nodes in a node list:",
      "html": "<p>The <code>length</code> property is useful when you want to loop through the nodes in a node \nlist:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_dom_nodelist_loop",
        "syntaxHighlighting": [
          {
            "text": "\nconst myNodelist = document.querySelectorAll(\"p\");\nfor (let i = 0; i < myNodelist.length; i++) {\n\u00a0 myNodelist[i].style.color = \"red\";\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "querySelectorAll",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"p\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "length",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "style",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "color",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"red\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const myNodelist = document.querySelectorAll(\"p\");\nfor (let i = 0; i < myNodelist.length; i++) {\nmyNodelist[i].style.color = \"red\";\n}",
      "syntax_highlighting": [
        {
          "text": "\nconst myNodelist = document.querySelectorAll(\"p\");\nfor (let i = 0; i < myNodelist.length; i++) {\n\u00a0 myNodelist[i].style.color = \"red\";\n}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "querySelectorAll",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"p\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "length",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "style",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "color",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"red\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> myNodelist = document.<span class=\"jspropertycolor\" style=\"color:black\">querySelectorAll</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"p\"</span>);<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">for</span> (<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> i = <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>; i &lt; myNodelist.<span class=\"jspropertycolor\" style=\"color:black\">length</span>; i++) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0 myNodelist[i].<span class=\"jspropertycolor\" style=\"color:black\">style</span>.<span class=\"jspropertycolor\" style=\"color:black\">color</span> = <span class=\"jsstringcolor\" style=\"color:green\">\"red\"</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_dom_nodelist_loop",
      "syntax_highlighting_data": [
        {
          "text": "\nconst myNodelist = document.querySelectorAll(\"p\");\nfor (let i = 0; i < myNodelist.length; i++) {\n\u00a0 myNodelist[i].style.color = \"red\";\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "querySelectorAll",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"p\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "length",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "style",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "color",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"red\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Difference Between an HTMLCollection and a NodeList",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A NodeList and an HTMLcollection is very much the same thing.",
      "html": "<p>A <b>NodeList</b> and an <b>HTMLcollection</b> is very much the same thing.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Both are array-like collections (lists) of nodes (elements) extracted from a document. The nodes can be accessed by index numbers. The index starts at 0.",
      "html": "<p>Both are array-like collections (lists) of nodes (elements) extracted from a \ndocument. The nodes can be accessed by index numbers. The index starts at 0.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Both have a length property that returns the number of elements in the list (collection).",
      "html": "<p>Both have a <b>length</b> property that returns the number of elements in the list (collection).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "An HTMLCollection is a collection of document elements .",
      "html": "<p>An HTMLCollection is a collection of <b>document elements</b>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A NodeList is a collection of document nodes (element nodes, attribute nodes, and text nodes).",
      "html": "<p>A NodeList is a collection of <b>document nodes</b> (element nodes, attribute nodes, and text nodes).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "HTMLCollection items can be accessed by their name, id, or index number.",
      "html": "<p>HTMLCollection items can be accessed by their name, id, or index number.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "NodeList items can only be accessed by their index number.",
      "html": "<p>NodeList items can only be accessed by their index number.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "An HTMLCollection is always a live collection. Example: If you add a <li> element to a list in the DOM, the list in the HTMLCollection will also change.",
      "html": "<p>An HTMLCollection is always a <b>live</b> collection. Example: If you add a &lt;li&gt; element to a list in the DOM, the list in the HTMLCollection will also change.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A NodeList is most often a static collection. Example: If you add a <li> element to a list in the DOM, the list in NodeList will not change.",
      "html": "<p>A NodeList is most often a <b>static</b> collection. Example: If you add a &lt;li&gt; element to a list in the DOM, the list in NodeList will not change.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The getElementsByClassName() and getElementsByTagName() methods return a live HTMLCollection.",
      "html": "<p>The <code>getElementsByClassName()</code> and <code>getElementsByTagName()</code>\nmethods return a live HTMLCollection.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The querySelectorAll() method returns a static NodeList.",
      "html": "<p>The <code>querySelectorAll()</code> method returns a static NodeList.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The childNodes property returns a live NodeList.",
      "html": "<p>The <code>childNodes</code> property returns a live NodeList.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Not an Array!",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A NodeList may look like an array, but it is not.",
      "html": "<p>A NodeList may look like an array, but it is not.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can loop through a NodeList and refer to its nodes by index.",
      "html": "<p>You can loop through a NodeList and refer to its nodes by index.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "But, you cannot use Array methods like push(), pop(), or join() on a NodeList.",
      "html": "<p>But, you cannot use Array methods like push(), pop(), or join() on a NodeList.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is a correct syntax for returning all <p> element?",
      "html": "<p>What is a correct syntax for returning all &lt;p&gt; element?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "What is a correct syntax for returning all <p> element?",
        "options": [
          {
            "value": "0",
            "text": "document.getElementsByTagName('p')"
          },
          {
            "value": "1",
            "text": "document.getElements('p')"
          },
          {
            "value": "2",
            "text": "document.all('p')"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_htmldom_nodelist1"
      },
      "quiz_type": "quiz",
      "question": "What is a correct syntax for returning all <p> element?",
      "options": [
        {
          "value": "0",
          "text": "document.getElementsByTagName('p')"
        },
        {
          "value": "1",
          "text": "document.getElements('p')"
        },
        {
          "value": "2",
          "text": "document.all('p')"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_htmldom_nodelist1",
      "html": "<form action=\"exercise.asp?x=xrcise_htmldom_nodelist1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\"><code>document.getElementsByTagName('p')</code></label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\"><code>document.getElements('p')</code></label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\"><code>document.all('p')</code></label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}