{
  "title": "JavaScript Object Definition",
  "url": "https://www.w3schools.com/js/js_object_definition.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "JavaScript Object Definition",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Methods for Defining JavaScript Objects",
      "level": "h3"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript Object Literal",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "An object literal is a list of property names:values inside curly braces {} .",
      "html": "<p>An object literal is a list of property <b>names:values</b> inside curly braces <b>{}</b>.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n{firstName:\"John\", lastName:\"Doe\", age:50, eyeColor:\"blue\"};\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"John\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Doe\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "50",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"blue\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "{firstName:\"John\", lastName:\"Doe\", age:50, eyeColor:\"blue\"};",
      "syntax_highlighting": [
        {
          "text": "\n{firstName:\"John\", lastName:\"Doe\", age:50, eyeColor:\"blue\"};\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"John\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Doe\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "50",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"blue\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>{firstName:<span class=\"jsstringcolor\" style=\"color:green\">\"John\"</span>, lastName:<span class=\"jsstringcolor\" style=\"color:green\">\"Doe\"</span>, age:<span class=\"jsnumbercolor\" style=\"color:#905\">50</span>, eyeColor:<span class=\"jsstringcolor\" style=\"color:green\">\"blue\"</span>};<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n{firstName:\"John\", lastName:\"Doe\", age:50, eyeColor:\"blue\"};\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"John\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Doe\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "50",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"blue\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Note:",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "An object literal is also called an object initializer .",
      "html": "<p>An <b>object literal</b> is also called an <b>object initializer</b>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Creating a JavaScript Object",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_object_create_empty",
        "syntaxHighlighting": [
          {
            "text": "\n// Create an Object\nconst person = {};\n\n// Add Properties\nperson.firstName = \"John\";\nperson.lastName = \"Doe\";\nperson.age = 50;\nperson.eyeColor = \"blue\";\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Create an Object",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Add Properties",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "firstName",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"John\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "lastName",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"Doe\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "age",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "50",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "eyeColor",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"blue\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Create an Object\nconst person = {};\n\n// Add Properties\nperson.firstName = \"John\";\nperson.lastName = \"Doe\";\nperson.age = 50;\nperson.eyeColor = \"blue\";",
      "syntax_highlighting": [
        {
          "text": "\n// Create an Object\nconst person = {};\n\n// Add Properties\nperson.firstName = \"John\";\nperson.lastName = \"Doe\";\nperson.age = 50;\nperson.eyeColor = \"blue\";\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Create an Object",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Add Properties",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "firstName",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"John\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "lastName",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"Doe\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "age",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "50",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "eyeColor",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"blue\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Create an Object<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> person = {};<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Add Properties<br/></span>\nperson.<span class=\"jspropertycolor\" style=\"color:black\">firstName</span> = <span class=\"jsstringcolor\" style=\"color:green\">\"John\"</span>;<br/>\nperson.<span class=\"jspropertycolor\" style=\"color:black\">lastName</span> = <span class=\"jsstringcolor\" style=\"color:green\">\"Doe\"</span>;<br/>\nperson.<span class=\"jspropertycolor\" style=\"color:black\">age</span> = <span class=\"jsnumbercolor\" style=\"color:#905\">50</span>;<br/>\nperson.<span class=\"jspropertycolor\" style=\"color:black\">eyeColor</span> = <span class=\"jsstringcolor\" style=\"color:green\">\"blue\"</span>;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_object_create_empty",
      "syntax_highlighting_data": [
        {
          "text": "\n// Create an Object\nconst person = {};\n\n// Add Properties\nperson.firstName = \"John\";\nperson.lastName = \"Doe\";\nperson.age = 50;\nperson.eyeColor = \"blue\";\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Create an Object",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Add Properties",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "firstName",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"John\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "lastName",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"Doe\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "age",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "50",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "eyeColor",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"blue\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Note:",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The examples above do exactly the same.",
      "html": "<p>The examples above do exactly the same.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "But, there is no need to use new Object() .",
      "html": "<p>But, there is no need to use <code>new Object()</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "For readability, simplicity and execution speed, use the object literal method.",
      "html": "<p>For readability, simplicity and execution speed, use the <b>object literal</b> method.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Object Constructor Functions",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Sometimes we need to create many objects of the same type .",
      "html": "<p>Sometimes we need to create many objects of the same <b>type</b>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To create an object type we use an object constructor function .",
      "html": "<p>To create an <b>object type</b> we use an <strong>object constructor function</strong>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It is considered good practice to name constructor functions with an upper-case first letter.",
      "html": "<p>It is considered good practice to name constructor functions with an upper-case first letter.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nfunction Person(first, last, age, eye) {\n\u00a0\u00a0this.firstName = first;\n\u00a0\u00a0this.lastName = last;\n\u00a0\u00a0this.age = age;\n\u00a0\u00a0this.eyeColor = eye;\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "firstName",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "lastName",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "age",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "eyeColor",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "function Person(first, last, age, eye) {\nthis.firstName = first;\nthis.lastName = last;\nthis.age = age;\nthis.eyeColor = eye;\n}",
      "syntax_highlighting": [
        {
          "text": "\nfunction Person(first, last, age, eye) {\n\u00a0\u00a0this.firstName = first;\n\u00a0\u00a0this.lastName = last;\n\u00a0\u00a0this.age = age;\n\u00a0\u00a0this.eyeColor = eye;\n}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "firstName",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "lastName",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "age",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "eyeColor",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> Person(first, last, age, eye) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">firstName</span> = first;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">lastName</span> = last;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">age</span> = age;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">eyeColor</span> = eye;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nfunction Person(first, last, age, eye) {\n\u00a0\u00a0this.firstName = first;\n\u00a0\u00a0this.lastName = last;\n\u00a0\u00a0this.age = age;\n\u00a0\u00a0this.eyeColor = eye;\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "firstName",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "lastName",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "age",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "eyeColor",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Note:",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the constructor function, this has no value.",
      "html": "<p>In the constructor function, <code>this</code> has no value.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The value of this will become the new object when a new object is created.",
      "html": "<p>The value of <code>this</code> will become the new object when \na new object is created.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "See Also:",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "The JavaScript this Tutorial",
          "href": "https://www.w3schools.com/js_this.asp",
          "title": ""
        }
      ],
      "text": "The JavaScript this Tutorial",
      "html": "<p><a href=\"js_this.asp\">The JavaScript <b>this</b> Tutorial</a></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Now we can use new Person() to create many new Person objects:",
      "html": "<p>Now we can use <code>new Person()</code>\nto create many new Person objects:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nconst myFather = new Person(\"John\", \"Doe\", 50, \"blue\");\nconst myMother = new Person(\"Sally\", \"Rally\", 48, \"green\");\nconst mySister = new Person(\"Anna\", \"Rally\", 18, \"green\");\n\nconst mySelf = new Person(\"Johnny\", \"Rally\", 22, \"green\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"John\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Doe\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "50",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"blue\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Sally\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Rally\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "48",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"green\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Anna\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Rally\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "18",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"green\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Johnny\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Rally\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "22",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"green\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const myFather = new Person(\"John\", \"Doe\", 50, \"blue\");\nconst myMother = new Person(\"Sally\", \"Rally\", 48, \"green\");\nconst mySister = new Person(\"Anna\", \"Rally\", 18, \"green\");\n\nconst mySelf = new Person(\"Johnny\", \"Rally\", 22, \"green\");",
      "syntax_highlighting": [
        {
          "text": "\nconst myFather = new Person(\"John\", \"Doe\", 50, \"blue\");\nconst myMother = new Person(\"Sally\", \"Rally\", 48, \"green\");\nconst mySister = new Person(\"Anna\", \"Rally\", 18, \"green\");\n\nconst mySelf = new Person(\"Johnny\", \"Rally\", 22, \"green\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"John\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Doe\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "50",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"blue\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Sally\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Rally\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "48",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"green\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Anna\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Rally\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "18",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"green\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Johnny\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Rally\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "22",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"green\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> myFather = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> Person(<span class=\"jsstringcolor\" style=\"color:green\">\"John\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Doe\"</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">50</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"blue\"</span>);<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> myMother = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> Person(<span class=\"jsstringcolor\" style=\"color:green\">\"Sally\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Rally\"</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">48</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"green\"</span>);<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> mySister = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> Person(<span class=\"jsstringcolor\" style=\"color:green\">\"Anna\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Rally\"</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">18</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"green\"</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> mySelf = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> Person(<span class=\"jsstringcolor\" style=\"color:green\">\"Johnny\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Rally\"</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">22</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"green\"</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nconst myFather = new Person(\"John\", \"Doe\", 50, \"blue\");\nconst myMother = new Person(\"Sally\", \"Rally\", 48, \"green\");\nconst mySister = new Person(\"Anna\", \"Rally\", 18, \"green\");\n\nconst mySelf = new Person(\"Johnny\", \"Rally\", 22, \"green\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"John\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Doe\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "50",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"blue\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Sally\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Rally\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "48",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"green\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Anna\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Rally\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "18",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"green\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Johnny\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Rally\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "22",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"green\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Property Default Values",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A value given to a property will be a default value for all objects created by the constructor:",
      "html": "<p>A <b>value</b> given to a property will be a <b>default value</b> for all objects\ncreated by the constructor:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_object_constructor5",
        "syntaxHighlighting": [
          {
            "text": "\nfunction Person(first, last, age, eyecolor) {\n  \u00a0\nthis.firstName = first;\n  \u00a0\nthis.lastName = last;\n  \u00a0\nthis.age = age;\n\u00a0\u00a0this.eyeColor = eyecolor;\u00a0\u00a0this.nationality = \"English\";\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "firstName",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "lastName",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "age",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "eyeColor",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "nationality",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"English\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "function Person(first, last, age, eyecolor) {\n\nthis.firstName = first;\n\nthis.lastName = last;\n\nthis.age = age;\nthis.eyeColor = eyecolor;\u00a0\u00a0this.nationality = \"English\";\n}",
      "syntax_highlighting": [
        {
          "text": "\nfunction Person(first, last, age, eyecolor) {\n  \u00a0\nthis.firstName = first;\n  \u00a0\nthis.lastName = last;\n  \u00a0\nthis.age = age;\n\u00a0\u00a0this.eyeColor = eyecolor;\u00a0\u00a0this.nationality = \"English\";\n}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "firstName",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "lastName",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "age",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "eyeColor",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "nationality",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"English\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> Person(first, last, age, eyecolor) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">firstName</span> = first;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">lastName</span> = last;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">age</span> = age;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">eyeColor</span> = eyecolor;<br/>\u00a0\u00a0<span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">nationality</span> = <span class=\"jsstringcolor\" style=\"color:green\">\"English\"</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_object_constructor5",
      "syntax_highlighting_data": [
        {
          "text": "\nfunction Person(first, last, age, eyecolor) {\n  \u00a0\nthis.firstName = first;\n  \u00a0\nthis.lastName = last;\n  \u00a0\nthis.age = age;\n\u00a0\u00a0this.eyeColor = eyecolor;\u00a0\u00a0this.nationality = \"English\";\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "firstName",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "lastName",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "age",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "eyeColor",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "nationality",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"English\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript Object Methods",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "JavaScript Object Methods can be grouped into:",
      "html": "<p>JavaScript Object Methods can be grouped into:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "General Methods",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n// Copies properties from a source object to a target object\nObject.assign(target, source)\n// Creates an object from an existing object\nObject.create(object)\n// Returns an array of the key/value pairs of an object\nObject.entries(object)\n// Creates an object from a list of keys/values\nObject.fromEntries()\n// Returns an array of the keys of an object\nObject.keys(object)\n// Returns an array of the property values of an object\nObject.values(object)\n// Groups object elements according to a function\nObject.groupBy(object, callback)\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Copies properties from a source object to a target object",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "assign",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Creates an object from an existing object",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "create",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Returns an array of the key/value pairs of an object",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "entries",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Creates an object from a list of keys/values",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "fromEntries",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Returns an array of the keys of an object",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "keys",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Returns an array of the property values of an object",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "values",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Groups object elements according to a function",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "groupBy",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Copies properties from a source object to a target object\nObject.assign(target, source)\n// Creates an object from an existing object\nObject.create(object)\n// Returns an array of the key/value pairs of an object\nObject.entries(object)\n// Creates an object from a list of keys/values\nObject.fromEntries()\n// Returns an array of the keys of an object\nObject.keys(object)\n// Returns an array of the property values of an object\nObject.values(object)\n// Groups object elements according to a function\nObject.groupBy(object, callback)",
      "syntax_highlighting": [
        {
          "text": "\n// Copies properties from a source object to a target object\nObject.assign(target, source)\n// Creates an object from an existing object\nObject.create(object)\n// Returns an array of the key/value pairs of an object\nObject.entries(object)\n// Creates an object from a list of keys/values\nObject.fromEntries()\n// Returns an array of the keys of an object\nObject.keys(object)\n// Returns an array of the property values of an object\nObject.values(object)\n// Groups object elements according to a function\nObject.groupBy(object, callback)\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Copies properties from a source object to a target object",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "assign",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Creates an object from an existing object",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "create",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Returns an array of the key/value pairs of an object",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "entries",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Creates an object from a list of keys/values",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "fromEntries",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Returns an array of the keys of an object",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "keys",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Returns an array of the property values of an object",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "values",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Groups object elements according to a function",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "groupBy",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Copies properties from a source object to a target object<br/></span>\nObject.<span class=\"jspropertycolor\" style=\"color:black\">assign</span>(target, source)<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Creates an object from an existing object<br/></span>\nObject.<span class=\"jspropertycolor\" style=\"color:black\">create</span>(object)<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Returns an array of the key/value pairs of an object<br/></span>\nObject.<span class=\"jspropertycolor\" style=\"color:black\">entries</span>(object)<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Creates an object from a list of keys/values<br/></span>\nObject.<span class=\"jspropertycolor\" style=\"color:black\">fromEntries</span>()<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Returns an array of the keys of an object<br/></span>\nObject.<span class=\"jspropertycolor\" style=\"color:black\">keys</span>(object)<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Returns an array of the property values of an object<br/></span>\nObject.<span class=\"jspropertycolor\" style=\"color:black\">values</span>(object)<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Groups object elements according to a function<br/></span>\nObject.<span class=\"jspropertycolor\" style=\"color:black\">groupBy</span>(object, callback)<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n// Copies properties from a source object to a target object\nObject.assign(target, source)\n// Creates an object from an existing object\nObject.create(object)\n// Returns an array of the key/value pairs of an object\nObject.entries(object)\n// Creates an object from a list of keys/values\nObject.fromEntries()\n// Returns an array of the keys of an object\nObject.keys(object)\n// Returns an array of the property values of an object\nObject.values(object)\n// Groups object elements according to a function\nObject.groupBy(object, callback)\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Copies properties from a source object to a target object",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "assign",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Creates an object from an existing object",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "create",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Returns an array of the key/value pairs of an object",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "entries",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Creates an object from a list of keys/values",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "fromEntries",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Returns an array of the keys of an object",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "keys",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Returns an array of the property values of an object",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "values",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Groups object elements according to a function",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "groupBy",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "JavaScript General Object Methods",
          "href": "https://www.w3schools.com/js_object_methods.asp",
          "title": ""
        }
      ],
      "text": "JavaScript General Object Methods",
      "html": "<p><a href=\"js_object_methods.asp\">JavaScript General Object Methods</a></p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Property Management Methods",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n// Adding or changing an object property\nObject.defineProperty(object, property, descriptor)\n// Adding or changing object properties\nObject.defineProperties(object, descriptors)\n// Accessing a Property\nObject.getOwnPropertyDescriptor(object, property)\n// Accessing Properties\nObject.getOwnPropertyDescriptors(object)\n// Returns all properties as an array\nObject.getOwnPropertyNames(object)\n// Accessing the prototype\nObject.getPrototypeOf(object)\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Adding or changing an object property",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "defineProperty",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Adding or changing object properties",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "defineProperties",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Accessing a Property",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "getOwnPropertyDescriptor",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Accessing Properties",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "getOwnPropertyDescriptors",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Returns all properties as an array",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "getOwnPropertyNames",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Accessing the prototype",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "getPrototypeOf",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Adding or changing an object property\nObject.defineProperty(object, property, descriptor)\n// Adding or changing object properties\nObject.defineProperties(object, descriptors)\n// Accessing a Property\nObject.getOwnPropertyDescriptor(object, property)\n// Accessing Properties\nObject.getOwnPropertyDescriptors(object)\n// Returns all properties as an array\nObject.getOwnPropertyNames(object)\n// Accessing the prototype\nObject.getPrototypeOf(object)",
      "syntax_highlighting": [
        {
          "text": "\n// Adding or changing an object property\nObject.defineProperty(object, property, descriptor)\n// Adding or changing object properties\nObject.defineProperties(object, descriptors)\n// Accessing a Property\nObject.getOwnPropertyDescriptor(object, property)\n// Accessing Properties\nObject.getOwnPropertyDescriptors(object)\n// Returns all properties as an array\nObject.getOwnPropertyNames(object)\n// Accessing the prototype\nObject.getPrototypeOf(object)\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Adding or changing an object property",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "defineProperty",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Adding or changing object properties",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "defineProperties",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Accessing a Property",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "getOwnPropertyDescriptor",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Accessing Properties",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "getOwnPropertyDescriptors",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Returns all properties as an array",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "getOwnPropertyNames",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Accessing the prototype",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "getPrototypeOf",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Adding or changing an object property<br/></span>\nObject.<span class=\"jspropertycolor\" style=\"color:black\">defineProperty</span>(object, property, descriptor)<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Adding or changing object properties<br/></span>\nObject.<span class=\"jspropertycolor\" style=\"color:black\">defineProperties</span>(object, descriptors)<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Accessing a Property<br/></span>\nObject.<span class=\"jspropertycolor\" style=\"color:black\">getOwnPropertyDescriptor</span>(object, property)<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Accessing Properties<br/></span>\nObject.<span class=\"jspropertycolor\" style=\"color:black\">getOwnPropertyDescriptors</span>(object)<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Returns all properties as an array<br/></span>\nObject.<span class=\"jspropertycolor\" style=\"color:black\">getOwnPropertyNames</span>(object)<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Accessing the prototype<br/></span>\nObject.<span class=\"jspropertycolor\" style=\"color:black\">getPrototypeOf</span>(object)<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n// Adding or changing an object property\nObject.defineProperty(object, property, descriptor)\n// Adding or changing object properties\nObject.defineProperties(object, descriptors)\n// Accessing a Property\nObject.getOwnPropertyDescriptor(object, property)\n// Accessing Properties\nObject.getOwnPropertyDescriptors(object)\n// Returns all properties as an array\nObject.getOwnPropertyNames(object)\n// Accessing the prototype\nObject.getPrototypeOf(object)\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Adding or changing an object property",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "defineProperty",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Adding or changing object properties",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "defineProperties",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Accessing a Property",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "getOwnPropertyDescriptor",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Accessing Properties",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "getOwnPropertyDescriptors",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Returns all properties as an array",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "getOwnPropertyNames",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Accessing the prototype",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "getPrototypeOf",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "JavaScript Property Management Methods",
          "href": "https://www.w3schools.com/js_object_properties.asp",
          "title": ""
        }
      ],
      "text": "JavaScript Property Management Methods",
      "html": "<p><a href=\"js_object_properties.asp\">JavaScript Property Management Methods</a></p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Object Protection Methods",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n// Prevents re-assignment\nconst car = {type:\"Fiat\", model:\"500\", color:\"white\"};\n\n// Prevents adding object properties\nObject.preventExtensions(object)\n// Returns true if properties can be added to an object\nObject.isExtensible(object)\n// Prevents adding and deleting object properties\nObject.seal(object)\n// Returns true if object is sealed\nObject.isSealed(object)\n// Prevents any changes to an object\nObject.freeze(object)\n// Returns true if object is frozen\nObject.isFrozen(object)\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Prevents re-assignment",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Fiat\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"500\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"white\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Prevents adding object properties",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "preventExtensions",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Returns true if properties can be added to an object",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "isExtensible",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Prevents adding and deleting object properties",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "seal",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Returns true if object is sealed",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "isSealed",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Prevents any changes to an object",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "freeze",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Returns true if object is frozen",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "isFrozen",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Prevents re-assignment\nconst car = {type:\"Fiat\", model:\"500\", color:\"white\"};\n\n// Prevents adding object properties\nObject.preventExtensions(object)\n// Returns true if properties can be added to an object\nObject.isExtensible(object)\n// Prevents adding and deleting object properties\nObject.seal(object)\n// Returns true if object is sealed\nObject.isSealed(object)\n// Prevents any changes to an object\nObject.freeze(object)\n// Returns true if object is frozen\nObject.isFrozen(object)",
      "syntax_highlighting": [
        {
          "text": "\n// Prevents re-assignment\nconst car = {type:\"Fiat\", model:\"500\", color:\"white\"};\n\n// Prevents adding object properties\nObject.preventExtensions(object)\n// Returns true if properties can be added to an object\nObject.isExtensible(object)\n// Prevents adding and deleting object properties\nObject.seal(object)\n// Returns true if object is sealed\nObject.isSealed(object)\n// Prevents any changes to an object\nObject.freeze(object)\n// Returns true if object is frozen\nObject.isFrozen(object)\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Prevents re-assignment",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Fiat\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"500\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"white\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Prevents adding object properties",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "preventExtensions",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Returns true if properties can be added to an object",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "isExtensible",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Prevents adding and deleting object properties",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "seal",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Returns true if object is sealed",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "isSealed",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Prevents any changes to an object",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "freeze",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Returns true if object is frozen",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "isFrozen",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Prevents re-assignment<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> car = {type:<span class=\"jsstringcolor\" style=\"color:green\">\"Fiat\"</span>, model:<span class=\"jsstringcolor\" style=\"color:green\">\"500\"</span>, color:<span class=\"jsstringcolor\" style=\"color:green\">\"white\"</span>};<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Prevents adding object properties<br/></span>\nObject.<span class=\"jspropertycolor\" style=\"color:black\">preventExtensions</span>(object)<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Returns true if properties can be added to an object<br/></span>\nObject.<span class=\"jspropertycolor\" style=\"color:black\">isExtensible</span>(object)<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Prevents adding and deleting object properties<br/></span>\nObject.<span class=\"jspropertycolor\" style=\"color:black\">seal</span>(object)<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Returns true if object is sealed<br/></span>\nObject.<span class=\"jspropertycolor\" style=\"color:black\">isSealed</span>(object)<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Prevents any changes to an object<br/></span>\nObject.<span class=\"jspropertycolor\" style=\"color:black\">freeze</span>(object)<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Returns true if object is frozen<br/></span>\nObject.<span class=\"jspropertycolor\" style=\"color:black\">isFrozen</span>(object)<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n// Prevents re-assignment\nconst car = {type:\"Fiat\", model:\"500\", color:\"white\"};\n\n// Prevents adding object properties\nObject.preventExtensions(object)\n// Returns true if properties can be added to an object\nObject.isExtensible(object)\n// Prevents adding and deleting object properties\nObject.seal(object)\n// Returns true if object is sealed\nObject.isSealed(object)\n// Prevents any changes to an object\nObject.freeze(object)\n// Returns true if object is frozen\nObject.isFrozen(object)\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Prevents re-assignment",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Fiat\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"500\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"white\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Prevents adding object properties",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "preventExtensions",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Returns true if properties can be added to an object",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "isExtensible",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Prevents adding and deleting object properties",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "seal",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Returns true if object is sealed",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "isSealed",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Prevents any changes to an object",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "freeze",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Returns true if object is frozen",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "isFrozen",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Using const",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The most common way to protect an object from being changed is by using the const keyword.",
      "html": "<p>The most common way to protect an object from being changed\nis by using the <code>const</code> keyword.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "With const you can not re-assign the object, but you can still change the value of a property, delete a property or create a new property.",
      "html": "<p>With <code>const</code> you can not re-assign the object,\nbut you can still change the value of a property, delete a property or create a new property.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "JavaScript Object Protection Methods",
          "href": "https://www.w3schools.com/js_object_protection.asp",
          "title": ""
        }
      ],
      "text": "JavaScript Object Protection Methods",
      "html": "<p><a href=\"js_object_protection.asp\">JavaScript Object Protection Methods</a></p>"
    }
  ]
}