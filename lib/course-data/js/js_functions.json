{
  "title": "JavaScript Functions",
  "url": "https://www.w3schools.com/js/js_functions.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "JavaScript Functions",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A JavaScript function is a block of code designed to perform a particular task.",
      "html": "<p>A JavaScript function is a block of code designed to perform a \nparticular task.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A JavaScript function is executed when \"something\" invokes it (calls it).",
      "html": "<p>A JavaScript function is executed when \n\"something\" invokes it (calls it).</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_functions",
        "syntaxHighlighting": [
          {
            "text": "\n//  Function to compute the product of p1 and p2\nfunction myFunction(p1, p2) {\n  \u00a0 return p1 * p2;\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "//  Function to compute the product of p1 and p2",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "//  Function to compute the product of p1 and p2\nfunction myFunction(p1, p2) {\nreturn p1 * p2;\n}",
      "syntax_highlighting": [
        {
          "text": "\n//  Function to compute the product of p1 and p2\nfunction myFunction(p1, p2) {\n  \u00a0 return p1 * p2;\n}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "//  Function to compute the product of p1 and p2",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">//  Function to compute the product of p1 and p2<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> myFunction(p1, p2) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">return</span> p1 * p2;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_functions",
      "syntax_highlighting_data": [
        {
          "text": "\n//  Function to compute the product of p1 and p2\nfunction myFunction(p1, p2) {\n  \u00a0 return p1 * p2;\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "//  Function to compute the product of p1 and p2",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript Function Syntax",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A JavaScript function is defined with the function keyword, followed by a name , followed by parentheses () .",
      "html": "<p>A JavaScript function is defined with the <code>function</code> keyword, \nfollowed by a <strong>name</strong>, followed by parentheses <strong>()</strong>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Function names can contain letters, digits, underscores, and dollar signs (same rules as variables).",
      "html": "<p>Function names can contain letters, digits, underscores, and dollar signs \n(same rules as variables).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The parentheses may include parameter names separated by commas: ( parameter1, parameter2, ... )",
      "html": "<p>The parentheses may include parameter names separated by commas:<br/>\n<strong>(<em>parameter1, parameter2, ...</em>)</strong></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The code to be executed, by the function, is placed inside curly brackets: {}",
      "html": "<p>The code to be executed, by the function, is placed inside curly brackets: <strong>{}</strong></p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nfunction\nname(parameter1, parameter2, parameter3) {\n  \u00a0 // code to be executed\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// code to be executed",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "function\nname(parameter1, parameter2, parameter3) {\n// code to be executed\n}",
      "syntax_highlighting": [
        {
          "text": "\nfunction\nname(parameter1, parameter2, parameter3) {\n  \u00a0 // code to be executed\n}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// code to be executed",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span>\n<em>name</em>(<em>parameter1, parameter2, parameter3</em>) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// <em>code to be executed</em><br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nfunction\nname(parameter1, parameter2, parameter3) {\n  \u00a0 // code to be executed\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// code to be executed",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Function parameters are listed inside the parentheses () in the function definition.",
      "html": "<p>Function <strong>parameters</strong> are listed inside the parentheses () in \nthe function definition.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Function arguments are the values received by the function when it is invoked.",
      "html": "<p>Function <strong>arguments</strong> are the <strong>values</strong> \nreceived by the function when it is invoked.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Inside the function, the arguments (the parameters) behave as local variables.",
      "html": "<p>Inside the function, the arguments (the parameters) behave as local variables.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Function Invocation",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The code inside the function will execute when \"something\" invokes (calls) the function:",
      "html": "<p>The code inside the function will execute when \"something\" <strong>invokes</strong> (calls) the \nfunction:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You will learn a lot more about function invocation later in this tutorial.",
      "html": "<p>You will learn a lot more about function invocation later in this \ntutorial.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Function Return",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When JavaScript reaches a return statement, the function will stop executing.",
      "html": "<p>When JavaScript reaches a <code>return</code> statement, \nthe function will stop executing.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the function was invoked from a statement, JavaScript will \"return\" to execute the code after the invoking statement.",
      "html": "<p>If the function was invoked from a statement, JavaScript will \n\"return\" to execute the code after the invoking statement.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Functions often compute a return value . The return value is \"returned\" back to the \"caller\":",
      "html": "<p>Functions often compute a <strong>return value</strong>. The return value is \n\"returned\" back to \nthe \"caller\":</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_function_return",
        "syntaxHighlighting": [
          {
            "text": "\n// Function is called, the return value will end up in x\nlet x = myFunction(4, 3);\n\nfunction myFunction(a, b) {\n// Function returns the product of a and b\n  \u00a0 return a * b;\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Function is called, the return value will end up in x",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "3",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Function returns the product of a and b",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "// Function is called, the return value will end up in x\nlet x = myFunction(4, 3);\n\nfunction myFunction(a, b) {\n// Function returns the product of a and b\nreturn a * b;\n}",
      "syntax_highlighting": [
        {
          "text": "\n// Function is called, the return value will end up in x\nlet x = myFunction(4, 3);\n\nfunction myFunction(a, b) {\n// Function returns the product of a and b\n  \u00a0 return a * b;\n}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Function is called, the return value will end up in x",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "3",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Function returns the product of a and b",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Function is called, the return value will end up in x<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = myFunction(<span class=\"jsnumbercolor\" style=\"color:#905\">4</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">3</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> myFunction(a, b) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// Function returns the product of a and b<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">return</span> a * b;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_function_return",
      "syntax_highlighting_data": [
        {
          "text": "\n// Function is called, the return value will end up in x\nlet x = myFunction(4, 3);\n\nfunction myFunction(a, b) {\n// Function returns the product of a and b\n  \u00a0 return a * b;\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Function is called, the return value will end up in x",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "3",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Function returns the product of a and b",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Why Functions?",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "With functions you can reuse code",
      "html": "<p>With functions you can reuse code</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can write code that can be used many times.",
      "html": "<p>You can write code that can be used many times.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can use the same code with different arguments, to produce different results.",
      "html": "<p>You can use the same code with different arguments, to produce different results.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The () Operator",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The () operator invokes (calls) the function:",
      "html": "<p>The () operator invokes (calls) the function:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_farenheit_to_celsius",
        "syntaxHighlighting": [
          {
            "text": "\nfunction toCelsius(fahrenheit) {\n  \u00a0 return (5/9) * (fahrenheit-32);\n}\n\nlet value = toCelsius(77);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "5",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "9",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "32",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "77",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "function toCelsius(fahrenheit) {\nreturn (5/9) * (fahrenheit-32);\n}\n\nlet value = toCelsius(77);",
      "syntax_highlighting": [
        {
          "text": "\nfunction toCelsius(fahrenheit) {\n  \u00a0 return (5/9) * (fahrenheit-32);\n}\n\nlet value = toCelsius(77);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "5",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "9",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "32",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "77",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> toCelsius(fahrenheit) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">return</span> (<span class=\"jsnumbercolor\" style=\"color:#905\">5</span>/<span class=\"jsnumbercolor\" style=\"color:#905\">9</span>) * (fahrenheit-<span class=\"jsnumbercolor\" style=\"color:#905\">32</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> value = toCelsius(<span class=\"jsnumbercolor\" style=\"color:#905\">77</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_farenheit_to_celsius",
      "syntax_highlighting_data": [
        {
          "text": "\nfunction toCelsius(fahrenheit) {\n  \u00a0 return (5/9) * (fahrenheit-32);\n}\n\nlet value = toCelsius(77);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "5",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "9",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "32",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "77",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Accessing a function with incorrect parameters can return an incorrect answer:",
      "html": "<p>Accessing a function with incorrect parameters can return an incorrect answer:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_farenheit_to_celsius_3",
        "syntaxHighlighting": [
          {
            "text": "\nfunction toCelsius(fahrenheit) {\n  \u00a0 return (5/9) * (fahrenheit-32);\n}\n\nlet value = toCelsius(); ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "5",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "9",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "32",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "function toCelsius(fahrenheit) {\nreturn (5/9) * (fahrenheit-32);\n}\n\nlet value = toCelsius();",
      "syntax_highlighting": [
        {
          "text": "\nfunction toCelsius(fahrenheit) {\n  \u00a0 return (5/9) * (fahrenheit-32);\n}\n\nlet value = toCelsius(); ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "5",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "9",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "32",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> toCelsius(fahrenheit) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">return</span> (<span class=\"jsnumbercolor\" style=\"color:#905\">5</span>/<span class=\"jsnumbercolor\" style=\"color:#905\">9</span>) * (fahrenheit-<span class=\"jsnumbercolor\" style=\"color:#905\">32</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> value = toCelsius(); </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_farenheit_to_celsius_3",
      "syntax_highlighting_data": [
        {
          "text": "\nfunction toCelsius(fahrenheit) {\n  \u00a0 return (5/9) * (fahrenheit-32);\n}\n\nlet value = toCelsius(); ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "5",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "9",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "32",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Accessing a function without () returns the function and not the function result:",
      "html": "<p>Accessing a function without () returns the function and not the function result:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_farenheit_to_celsius_2",
        "syntaxHighlighting": [
          {
            "text": "\nfunction toCelsius(fahrenheit) {\n  \u00a0 return (5/9) * (fahrenheit-32);\n}\n\nlet value = toCelsius; ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "5",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "9",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "32",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "function toCelsius(fahrenheit) {\nreturn (5/9) * (fahrenheit-32);\n}\n\nlet value = toCelsius;",
      "syntax_highlighting": [
        {
          "text": "\nfunction toCelsius(fahrenheit) {\n  \u00a0 return (5/9) * (fahrenheit-32);\n}\n\nlet value = toCelsius; ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "5",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "9",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "32",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> toCelsius(fahrenheit) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">return</span> (<span class=\"jsnumbercolor\" style=\"color:#905\">5</span>/<span class=\"jsnumbercolor\" style=\"color:#905\">9</span>) * (fahrenheit-<span class=\"jsnumbercolor\" style=\"color:#905\">32</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> value = toCelsius; </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_farenheit_to_celsius_2",
      "syntax_highlighting_data": [
        {
          "text": "\nfunction toCelsius(fahrenheit) {\n  \u00a0 return (5/9) * (fahrenheit-32);\n}\n\nlet value = toCelsius; ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "5",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "9",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "32",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Note",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "As you see from the examples above, toCelsius refers to the function object, and toCelsius() refers to the function result.",
      "html": "<p>As you see from the examples above, <code>toCelsius</code> refers to the function object, and \n<code>toCelsius()</code> refers to the function result.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Functions Used as Variable Values",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Functions can be used the same way as you use variables, in all types of formulas, assignments, and calculations.",
      "html": "<p>Functions can be used the same way as you use variables, in all types of formulas, assignments, and \ncalculations.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_function_variable",
        "syntaxHighlighting": [
          {
            "text": "\nlet x = toCelsius(77);\nlet text = \"The temperature is \" + x + \" Celsius\";\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "77",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"The temperature is \"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\" Celsius\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let x = toCelsius(77);\nlet text = \"The temperature is \" + x + \" Celsius\";",
      "syntax_highlighting": [
        {
          "text": "\nlet x = toCelsius(77);\nlet text = \"The temperature is \" + x + \" Celsius\";\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "77",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"The temperature is \"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\" Celsius\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = toCelsius(<span class=\"jsnumbercolor\" style=\"color:#905\">77</span>);<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"The temperature is \"</span> + x + <span class=\"jsstringcolor\" style=\"color:green\">\" Celsius\"</span>;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_function_variable",
      "syntax_highlighting_data": [
        {
          "text": "\nlet x = toCelsius(77);\nlet text = \"The temperature is \" + x + \" Celsius\";\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "77",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"The temperature is \"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\" Celsius\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You will learn a lot more about functions later in this tutorial.",
      "html": "<p>You will learn a lot more about functions later in this tutorial.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Local Variables",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Variables declared within a JavaScript function, become LOCAL to the function.",
      "html": "<p>Variables declared within a JavaScript function, become <strong>\nLOCAL</strong> to \nthe function.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Local variables can only be accessed from within the function.",
      "html": "<p>Local variables can only be accessed \nfrom within the function.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_function_scope",
        "syntaxHighlighting": [
          {
            "text": "\n// code here can NOT use carName\nfunction myFunction() {\n\u00a0\u00a0let carName = \"Volvo\";\n\u00a0\u00a0// code here CAN use carName\n}\n// code here can NOT use carName\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// code here can NOT use carName",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Volvo\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// code here CAN use carName",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// code here can NOT use carName\n ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "// code here can NOT use carName\nfunction myFunction() {\nlet carName = \"Volvo\";\n// code here CAN use carName\n}\n// code here can NOT use carName",
      "syntax_highlighting": [
        {
          "text": "\n// code here can NOT use carName\nfunction myFunction() {\n\u00a0\u00a0let carName = \"Volvo\";\n\u00a0\u00a0// code here CAN use carName\n}\n// code here can NOT use carName\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// code here can NOT use carName",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Volvo\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// code here CAN use carName",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// code here can NOT use carName\n ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// code here can NOT use carName<br/></span><br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> myFunction() {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> carName = <span class=\"jsstringcolor\" style=\"color:green\">\"Volvo\"</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// code here CAN use carName<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><span class=\"commentcolor\" style=\"color:slategray\">// code here can NOT use carName\n </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_function_scope",
      "syntax_highlighting_data": [
        {
          "text": "\n// code here can NOT use carName\nfunction myFunction() {\n\u00a0\u00a0let carName = \"Volvo\";\n\u00a0\u00a0// code here CAN use carName\n}\n// code here can NOT use carName\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// code here can NOT use carName",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Volvo\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// code here CAN use carName",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// code here can NOT use carName\n ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Since local variables are only recognized inside their functions, variables with the same name can be used in different functions.",
      "html": "<p>Since local variables are only recognized inside their functions, variables with the same name can be used in different functions.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Local variables are created when a function starts, and deleted when the function is completed.",
      "html": "<p>Local variables are created when a function starts, and deleted when the function is completed.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What keyword is used to define a function in JavaScript?",
      "html": "<p>What keyword is used to define a function in JavaScript?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "What keyword is used to define a function in JavaScript?",
        "options": [
          {
            "value": "0",
            "text": "def"
          },
          {
            "value": "1",
            "text": "func"
          },
          {
            "value": "2",
            "text": "function"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_functions1"
      },
      "quiz_type": "quiz",
      "question": "What keyword is used to define a function in JavaScript?",
      "options": [
        {
          "value": "0",
          "text": "def"
        },
        {
          "value": "1",
          "text": "func"
        },
        {
          "value": "2",
          "text": "function"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_functions1",
      "html": "<form action=\"exercise.asp?x=xrcise_functions1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\"><code>def</code></label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\"><code>func</code></label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\"><code>function</code></label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}