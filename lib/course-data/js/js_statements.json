{
  "title": "JavaScript Statements",
  "url": "https://www.w3schools.com/js/js_statements.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "JavaScript Statements",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Statements",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_statements",
        "syntaxHighlighting": [
          {
            "text": "\nlet x, y, z;\u00a0\u00a0\u00a0 // Statement 1\nx = 5;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Statement 2\ny = 6;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Statement 3\nz = x + y;\u00a0\u00a0\u00a0\u00a0\u00a0 //  Statement 4\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "// Statement 1",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "5",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Statement 2",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "6",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Statement 3",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "//  Statement 4",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let x, y, z;\u00a0\u00a0\u00a0 // Statement 1\nx = 5;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Statement 2\ny = 6;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Statement 3\nz = x + y;\u00a0\u00a0\u00a0\u00a0\u00a0 //  Statement 4",
      "syntax_highlighting": [
        {
          "text": "\nlet x, y, z;\u00a0\u00a0\u00a0 // Statement 1\nx = 5;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Statement 2\ny = 6;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Statement 3\nz = x + y;\u00a0\u00a0\u00a0\u00a0\u00a0 //  Statement 4\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "// Statement 1",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "5",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Statement 2",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "6",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Statement 3",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "//  Statement 4",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x, y, z;\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Statement 1<br/></span>\nx = <span class=\"jsnumbercolor\" style=\"color:#905\">5</span>;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Statement 2<br/></span>\ny = <span class=\"jsnumbercolor\" style=\"color:#905\">6</span>;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Statement 3<br/></span>\nz = x + y;\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">//  Statement 4<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_statements",
      "syntax_highlighting_data": [
        {
          "text": "\nlet x, y, z;\u00a0\u00a0\u00a0 // Statement 1\nx = 5;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Statement 2\ny = 6;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Statement 3\nz = x + y;\u00a0\u00a0\u00a0\u00a0\u00a0 //  Statement 4\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "// Statement 1",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "5",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Statement 2",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "6",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Statement 3",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "//  Statement 4",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript Programs",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A computer program is a list of \"instructions\" to be \"executed\" by a computer.",
      "html": "<p>A <strong>computer program</strong> is a list of \"instructions\" to be \n\"executed\" by a computer.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In a programming language, these programming instructions are called statements .",
      "html": "<p>In a programming language, these programming instructions are called <strong>statements</strong>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A JavaScript program is a list of programming statements .",
      "html": "<p>A <strong>JavaScript program</strong> is a list of programming <strong>statements</strong>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In HTML, JavaScript programs are executed by the web browser.",
      "html": "<p>In HTML, JavaScript programs are executed by the web browser.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript Statements",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "JavaScript statements are composed of:",
      "html": "<p>JavaScript statements are composed of:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Values, Operators, Expressions, Keywords, and Comments.",
      "html": "<p>Values, Operators, Expressions,\u00a0Keywords, \nand Comments.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This statement tells the browser to write \"Hello Dolly.\" inside an HTML element with id=\"demo\":",
      "html": "<p>This statement tells the browser to write \"Hello Dolly.\" \ninside an HTML element with id=\"demo\":</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_statement",
        "syntaxHighlighting": [
          {
            "text": "\ndocument.getElementById(\"demo\").innerHTML = \"Hello Dolly.\"; ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"demo\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"Hello Dolly.\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "document.getElementById(\"demo\").innerHTML = \"Hello Dolly.\";",
      "syntax_highlighting": [
        {
          "text": "\ndocument.getElementById(\"demo\").innerHTML = \"Hello Dolly.\"; ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"demo\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"Hello Dolly.\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\ndocument.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"demo\"</span>).<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span> = <span class=\"jsstringcolor\" style=\"color:green\">\"Hello Dolly.\"</span>; </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_statement",
      "syntax_highlighting_data": [
        {
          "text": "\ndocument.getElementById(\"demo\").innerHTML = \"Hello Dolly.\"; ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"demo\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"Hello Dolly.\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Most JavaScript programs contain many JavaScript statements.",
      "html": "<p>Most JavaScript \nprograms contain many JavaScript statements.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The statements are executed, one by one, in the same order as they are written.",
      "html": "<p>The statements are executed, one by one, in the \nsame order as they are written.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "JavaScript programs (and JavaScript statements) are often called JavaScript code.",
      "html": "<p>JavaScript programs (and JavaScript statements) are often called JavaScript code.\n</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Semicolons ;",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Semicolons separate JavaScript statements.",
      "html": "<p>Semicolons separate JavaScript statements.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Add a semicolon at the end of each executable statement:",
      "html": "<p>Add a semicolon at the end of each executable statement: </p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_statements_semicolon1",
        "syntaxHighlighting": [
          {
            "text": "\nlet a, b, c;\u00a0 // Declare 3 variables\na = 5;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Assign the value 5 to a\nb = 6;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Assign the \n  value 6 to b\nc = a + b;\u00a0\u00a0\u00a0 // Assign the sum of a and b to c\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "// Declare 3 variables",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "5",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Assign the value 5 to a",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "6",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Assign the \n  value 6 to b",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "// Assign the sum of a and b to c",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let a, b, c;\u00a0 // Declare 3 variables\na = 5;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Assign the value 5 to a\nb = 6;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Assign the\nvalue 6 to b\nc = a + b;\u00a0\u00a0\u00a0 // Assign the sum of a and b to c",
      "syntax_highlighting": [
        {
          "text": "\nlet a, b, c;\u00a0 // Declare 3 variables\na = 5;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Assign the value 5 to a\nb = 6;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Assign the \n  value 6 to b\nc = a + b;\u00a0\u00a0\u00a0 // Assign the sum of a and b to c\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "// Declare 3 variables",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "5",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Assign the value 5 to a",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "6",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Assign the \n  value 6 to b",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "// Assign the sum of a and b to c",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> a, b, c;\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Declare 3 variables<br/></span>\na = <span class=\"jsnumbercolor\" style=\"color:#905\">5</span>;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Assign the value 5 to a<br/></span>\nb = <span class=\"jsnumbercolor\" style=\"color:#905\">6</span>;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Assign the \n  value 6 to b<br/></span>\nc = a + b;\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Assign the sum of a and b to c<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_statements_semicolon1",
      "syntax_highlighting_data": [
        {
          "text": "\nlet a, b, c;\u00a0 // Declare 3 variables\na = 5;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Assign the value 5 to a\nb = 6;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Assign the \n  value 6 to b\nc = a + b;\u00a0\u00a0\u00a0 // Assign the sum of a and b to c\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "// Declare 3 variables",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "5",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Assign the value 5 to a",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "6",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Assign the \n  value 6 to b",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "// Assign the sum of a and b to c",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When separated by semicolons, multiple statements on one line are allowed:",
      "html": "<p>\nWhen separated by semicolons, multiple statements on one line are allowed:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_statements_semicolon2",
        "syntaxHighlighting": [
          {
            "text": "\na = 5; b = 6; c = a + b;\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "5",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "6",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "a = 5; b = 6; c = a + b;",
      "syntax_highlighting": [
        {
          "text": "\na = 5; b = 6; c = a + b;\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "5",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "6",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\na = <span class=\"jsnumbercolor\" style=\"color:#905\">5</span>; b = <span class=\"jsnumbercolor\" style=\"color:#905\">6</span>; c = a + b;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_statements_semicolon2",
      "syntax_highlighting_data": [
        {
          "text": "\na = 5; b = 6; c = a + b;\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "5",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "6",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "On the web, you might see examples without semicolons. Ending statements with semicolon is not required, but highly recommended.",
      "html": "<p>On the web, you might see examples without semicolons. <br/>\nEnding statements with semicolon is not required, but highly recommended.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript White Space",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "JavaScript ignores multiple spaces. You can add white space to your script to make it more readable.",
      "html": "<p>JavaScript ignores multiple spaces. You can add white space to your script to make it more readable.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The following lines are equivalent:",
      "html": "<p>The following lines are equivalent:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nlet person = \"Hege\";\nlet person=\"Hege\";\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Hege\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Hege\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let person = \"Hege\";\nlet person=\"Hege\";",
      "syntax_highlighting": [
        {
          "text": "\nlet person = \"Hege\";\nlet person=\"Hege\";\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Hege\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Hege\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> person = <span class=\"jsstringcolor\" style=\"color:green\">\"Hege\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> person=<span class=\"jsstringcolor\" style=\"color:green\">\"Hege\"</span>;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nlet person = \"Hege\";\nlet person=\"Hege\";\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Hege\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Hege\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A good practice is to put spaces around operators ( = + - * / ):",
      "html": "<p>A good practice is to put spaces around operators ( = + - * / ):</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nlet x = y + z; ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let x = y + z;",
      "syntax_highlighting": [
        {
          "text": "\nlet x = y + z; ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = y + z; </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nlet x = y + z; ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript Line Length and Line Breaks",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "For best readability, programmers often like to avoid code lines longer than 80 characters.",
      "html": "<p>For best readability, programmers often like to avoid code lines longer than 80 \ncharacters.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If a JavaScript statement does not fit on one line, the best place to break it is after an operator:",
      "html": "<p>If a JavaScript statement does not fit on one line, the best place to break \nit is after an operator:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_statements_linebreak",
        "syntaxHighlighting": [
          {
            "text": "\ndocument.getElementById(\"demo\").innerHTML =\"Hello Dolly!\"; ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"demo\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"Hello Dolly!\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "document.getElementById(\"demo\").innerHTML =\"Hello Dolly!\";",
      "syntax_highlighting": [
        {
          "text": "\ndocument.getElementById(\"demo\").innerHTML =\"Hello Dolly!\"; ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"demo\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"Hello Dolly!\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\ndocument.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"demo\"</span>).<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span> =<br/><span class=\"jsstringcolor\" style=\"color:green\">\"Hello Dolly!\"</span>; </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_statements_linebreak",
      "syntax_highlighting_data": [
        {
          "text": "\ndocument.getElementById(\"demo\").innerHTML =\"Hello Dolly!\"; ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"demo\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"Hello Dolly!\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript Code Blocks",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "JavaScript statements can be grouped together in code blocks, inside curly brackets {...}.",
      "html": "<p>JavaScript statements can be grouped together in code blocks, inside curly \nbrackets {...}.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The purpose of code blocks is to define statements to be executed together.",
      "html": "<p>The purpose of code blocks is to define statements to be executed together.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "One place you will find statements grouped together in blocks, is in JavaScript functions:",
      "html": "<p>One place you will find statements grouped together in blocks, is in \nJavaScript functions:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_statements_blocks",
        "syntaxHighlighting": [
          {
            "text": "\n function myFunction() {\n\u00a0\u00a0document.getElementById(\"demo1\").innerHTML = \"Hello Dolly!\";\n\u00a0\u00a0document.getElementById(\"demo2\").innerHTML = \"How are you?\";\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"demo1\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"Hello Dolly!\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"demo2\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"How are you?\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "function myFunction() {\ndocument.getElementById(\"demo1\").innerHTML = \"Hello Dolly!\";\ndocument.getElementById(\"demo2\").innerHTML = \"How are you?\";\n}",
      "syntax_highlighting": [
        {
          "text": "\n function myFunction() {\n\u00a0\u00a0document.getElementById(\"demo1\").innerHTML = \"Hello Dolly!\";\n\u00a0\u00a0document.getElementById(\"demo2\").innerHTML = \"How are you?\";\n}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"demo1\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"Hello Dolly!\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"demo2\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"How are you?\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> myFunction() {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0document.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"demo1\"</span>).<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span> = <span class=\"jsstringcolor\" style=\"color:green\">\"Hello Dolly!\"</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0document.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"demo2\"</span>).<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span> = <span class=\"jsstringcolor\" style=\"color:green\">\"How are you?\"</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>}<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_statements_blocks",
      "syntax_highlighting_data": [
        {
          "text": "\n function myFunction() {\n\u00a0\u00a0document.getElementById(\"demo1\").innerHTML = \"Hello Dolly!\";\n\u00a0\u00a0document.getElementById(\"demo2\").innerHTML = \"How are you?\";\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"demo1\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"Hello Dolly!\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"demo2\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"How are you?\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In this tutorial we use 2 spaces of indentation for code blocks. You will learn more about functions later in this tutorial.",
      "html": "<p>In this tutorial we use 2 spaces of indentation for code blocks.<br/>\nYou will learn more about functions later in this tutorial.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript Keywords",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "JavaScript statements often start with a keyword to identify the JavaScript action to be performed.",
      "html": "<p>JavaScript statements often start with a <strong>keyword</strong> \nto identify the JavaScript action to be performed.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Reserved Words Reference",
          "href": "https://www.w3schools.com/js_reserved.asp",
          "title": ""
        }
      ],
      "text": "Our Reserved Words Reference lists all JavaScript keywords.",
      "html": "<p>Our <a href=\"js_reserved.asp\">Reserved Words Reference</a> lists all JavaScript keywords.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Here is a list of some of the keywords you will learn about in this tutorial:",
      "html": "<p>Here is a list of some of the keywords you will learn about in \nthis tutorial: </p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "var",
      "language": "unknown",
      "code_html": "<td class=\"notranslate\">var</td>",
      "code_classes": [
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "let",
      "language": "unknown",
      "code_html": "<td class=\"notranslate\">let</td>",
      "code_classes": [
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "const",
      "language": "unknown",
      "code_html": "<td class=\"notranslate\">const</td>",
      "code_classes": [
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "if",
      "language": "unknown",
      "code_html": "<td class=\"notranslate\">if</td>",
      "code_classes": [
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "switch",
      "language": "unknown",
      "code_html": "<td class=\"notranslate\">switch</td>",
      "code_classes": [
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "for",
      "language": "unknown",
      "code_html": "<td class=\"notranslate\">for</td>",
      "code_classes": [
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "function",
      "language": "javascript",
      "code_html": "<td class=\"notranslate\">function</td>",
      "code_classes": [
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "return",
      "language": "unknown",
      "code_html": "<td class=\"notranslate\">return</td>",
      "code_classes": [
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "try",
      "language": "unknown",
      "code_html": "<td class=\"notranslate\">try</td>",
      "code_classes": [
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "JavaScript keywords are reserved words. Reserved words cannot be used as names for variables.",
      "html": "<p>JavaScript keywords are reserved words. Reserved words cannot be used as names for variables.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "How many statements can you find in this line of code: let a = 5; let b = 6; c = a + b;",
      "html": "<p>How many statements can you find in this line of code:<br/><code class=\"codeblock\">let a = 5; let b = 6; c = a + b;</code></p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "How many statements can you find in this line of code:let a = 5; let b = 6; c = a + b;",
        "options": [
          {
            "value": "0",
            "text": "1"
          },
          {
            "value": "1",
            "text": "2"
          },
          {
            "value": "2",
            "text": "3"
          },
          {
            "value": "3",
            "text": "4"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_statements1"
      },
      "quiz_type": "quiz",
      "question": "How many statements can you find in this line of code:let a = 5; let b = 6; c = a + b;",
      "options": [
        {
          "value": "0",
          "text": "1"
        },
        {
          "value": "1",
          "text": "2"
        },
        {
          "value": "2",
          "text": "3"
        },
        {
          "value": "3",
          "text": "4"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_statements1",
      "html": "<form action=\"exercise.asp?x=xrcise_statements1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">1</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">2</label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\">3</label></div><div class=\"quizoption\"><input id=\"quizoption3\" name=\"quizoption\" type=\"radio\" value=\"3\"/><label for=\"quizoption3\">4</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Video: JavaScript Statements",
      "level": "h2"
    }
  ]
}