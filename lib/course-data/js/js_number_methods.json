{
  "title": "JavaScript Number Methods",
  "url": "https://www.w3schools.com/js/js_number_methods.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "JavaScript Number Methods",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript Number Methods",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "These number methods can be used on all JavaScript numbers:",
      "html": "<p>These <b>number methods</b> can be used on all JavaScript numbers:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The toString() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The toString() method returns a number as a string.",
      "html": "<p>The <code>toString()</code> method returns a number as a string.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "All number methods can be used on any type of numbers (literals, variables, or expressions):",
      "html": "<p>All number methods can be used on any type of numbers (literals, variables, or expressions):</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_number_tostring",
        "syntaxHighlighting": [
          {
            "text": "\nlet x = 123;\nx.toString();\n(123).toString();\n(100 + 23).toString();\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "123",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "toString",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "123",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "toString",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "100",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "23",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "toString",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let x = 123;\nx.toString();\n(123).toString();\n(100 + 23).toString();",
      "syntax_highlighting": [
        {
          "text": "\nlet x = 123;\nx.toString();\n(123).toString();\n(100 + 23).toString();\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "123",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "toString",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "123",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "toString",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "100",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "23",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "toString",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = <span class=\"jsnumbercolor\" style=\"color:#905\">123</span>;<br/>\nx.<span class=\"jspropertycolor\" style=\"color:black\">toString</span>();<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">123</span>).<span class=\"jspropertycolor\" style=\"color:black\">toString</span>();<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">100</span> + <span class=\"jsnumbercolor\" style=\"color:#905\">23</span>).<span class=\"jspropertycolor\" style=\"color:black\">toString</span>();<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_number_tostring",
      "syntax_highlighting_data": [
        {
          "text": "\nlet x = 123;\nx.toString();\n(123).toString();\n(100 + 23).toString();\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "123",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "toString",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "123",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "toString",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "100",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "23",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "toString",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The toExponential() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "toExponential() returns a string, with a number rounded and written using exponential notation.",
      "html": "<p><code>toExponential()</code> returns a string, with a number rounded and written using exponential notation.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A parameter defines the number of characters behind the decimal point:",
      "html": "<p>A parameter defines the number of characters behind the decimal point:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nlet x = 9.656;\nx.toExponential(2);\nx.toExponential(4);\nx.toExponential(6);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "9.656",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "toExponential",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "toExponential",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "toExponential",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "6",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let x = 9.656;\nx.toExponential(2);\nx.toExponential(4);\nx.toExponential(6);",
      "syntax_highlighting": [
        {
          "text": "\nlet x = 9.656;\nx.toExponential(2);\nx.toExponential(4);\nx.toExponential(6);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "9.656",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "toExponential",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "toExponential",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "toExponential",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "6",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = <span class=\"jsnumbercolor\" style=\"color:#905\">9.656</span>;<br/>\nx.<span class=\"jspropertycolor\" style=\"color:black\">toExponential</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">2</span>);<br/>\nx.<span class=\"jspropertycolor\" style=\"color:black\">toExponential</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">4</span>);<br/>\nx.<span class=\"jspropertycolor\" style=\"color:black\">toExponential</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">6</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nlet x = 9.656;\nx.toExponential(2);\nx.toExponential(4);\nx.toExponential(6);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "9.656",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "toExponential",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "toExponential",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "toExponential",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "6",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The parameter is optional. If you don't specify it, JavaScript will not round the number.",
      "html": "<p>The parameter is optional. If you don't specify it, JavaScript will not round the number.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The toFixed() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "toFixed() returns a string, with the number written with a specified number of decimals:",
      "html": "<p><code>toFixed()</code> returns a string, with the number \nwritten with a specified number of \ndecimals:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nlet x = 9.656;\nx.toFixed(0);\nx.toFixed(2);\nx.toFixed(4);\nx.toFixed(6);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "9.656",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "toFixed",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "toFixed",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "toFixed",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "toFixed",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "6",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let x = 9.656;\nx.toFixed(0);\nx.toFixed(2);\nx.toFixed(4);\nx.toFixed(6);",
      "syntax_highlighting": [
        {
          "text": "\nlet x = 9.656;\nx.toFixed(0);\nx.toFixed(2);\nx.toFixed(4);\nx.toFixed(6);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "9.656",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "toFixed",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "toFixed",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "toFixed",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "toFixed",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "6",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = <span class=\"jsnumbercolor\" style=\"color:#905\">9.656</span>;<br/>\nx.<span class=\"jspropertycolor\" style=\"color:black\">toFixed</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>);<br/>\nx.<span class=\"jspropertycolor\" style=\"color:black\">toFixed</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">2</span>);<br/>\nx.<span class=\"jspropertycolor\" style=\"color:black\">toFixed</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">4</span>);<br/>\nx.<span class=\"jspropertycolor\" style=\"color:black\">toFixed</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">6</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nlet x = 9.656;\nx.toFixed(0);\nx.toFixed(2);\nx.toFixed(4);\nx.toFixed(6);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "9.656",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "toFixed",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "toFixed",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "toFixed",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "toFixed",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "6",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "toFixed(2) is perfect for working with money.",
      "html": "<p><code>toFixed(2)</code> is perfect for working with money.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The toPrecision() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "toPrecision() returns a string, with a number written with a specified length:",
      "html": "<p><code>toPrecision()</code> returns a string, with a number written with a \nspecified length:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_number_toprecision",
        "syntaxHighlighting": [
          {
            "text": "\nlet x = 9.656;\nx.toPrecision();\nx.toPrecision(2);\nx.toPrecision(4);\nx.toPrecision(6);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "9.656",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "toPrecision",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "toPrecision",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "toPrecision",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "toPrecision",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "6",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let x = 9.656;\nx.toPrecision();\nx.toPrecision(2);\nx.toPrecision(4);\nx.toPrecision(6);",
      "syntax_highlighting": [
        {
          "text": "\nlet x = 9.656;\nx.toPrecision();\nx.toPrecision(2);\nx.toPrecision(4);\nx.toPrecision(6);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "9.656",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "toPrecision",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "toPrecision",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "toPrecision",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "toPrecision",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "6",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = <span class=\"jsnumbercolor\" style=\"color:#905\">9.656</span>;<br/>\nx.<span class=\"jspropertycolor\" style=\"color:black\">toPrecision</span>();<br/>\nx.<span class=\"jspropertycolor\" style=\"color:black\">toPrecision</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">2</span>);<br/>\nx.<span class=\"jspropertycolor\" style=\"color:black\">toPrecision</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">4</span>);<br/>\nx.<span class=\"jspropertycolor\" style=\"color:black\">toPrecision</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">6</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_number_toprecision",
      "syntax_highlighting_data": [
        {
          "text": "\nlet x = 9.656;\nx.toPrecision();\nx.toPrecision(2);\nx.toPrecision(4);\nx.toPrecision(6);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "9.656",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "toPrecision",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "toPrecision",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "toPrecision",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "toPrecision",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "6",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The valueOf() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "valueOf() returns a number as a number.",
      "html": "<p><code>valueOf()</code> returns a number as a number.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_number_valueof",
        "syntaxHighlighting": [
          {
            "text": "\nlet x = 123;\nx.valueOf();\n(123).valueOf();\n(100 + 23).valueOf();\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "123",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "valueOf",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "123",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "valueOf",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "100",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "23",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "valueOf",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let x = 123;\nx.valueOf();\n(123).valueOf();\n(100 + 23).valueOf();",
      "syntax_highlighting": [
        {
          "text": "\nlet x = 123;\nx.valueOf();\n(123).valueOf();\n(100 + 23).valueOf();\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "123",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "valueOf",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "123",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "valueOf",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "100",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "23",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "valueOf",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> x = <span class=\"jsnumbercolor\" style=\"color:#905\">123</span>;<br/>\nx.<span class=\"jspropertycolor\" style=\"color:black\">valueOf</span>();<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">123</span>).<span class=\"jspropertycolor\" style=\"color:black\">valueOf</span>();<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">100</span> + <span class=\"jsnumbercolor\" style=\"color:#905\">23</span>).<span class=\"jspropertycolor\" style=\"color:black\">valueOf</span>();<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_number_valueof",
      "syntax_highlighting_data": [
        {
          "text": "\nlet x = 123;\nx.valueOf();\n(123).valueOf();\n(100 + 23).valueOf();\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "123",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "valueOf",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "123",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "valueOf",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "100",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "23",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "valueOf",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In JavaScript, a number can be a primitive value (typeof = number) or an object (typeof = object).",
      "html": "<p>In JavaScript, a number can be a primitive value (typeof = number) or an \nobject (typeof = object).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The valueOf() method is used internally in JavaScript to convert Number objects to primitive values.",
      "html": "<p>The <code>valueOf()</code> method is used internally in JavaScript to convert Number \nobjects to primitive values.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "There is no reason to use it in your code.",
      "html": "<p>There is no reason to use it in your code.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "All JavaScript data types have a valueOf() and a toString() method.",
      "html": "<p>All JavaScript data types have a <code>valueOf()</code> and a <code>toString()</code> method.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Converting Variables to Numbers",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "There are 3 JavaScript methods that can be used to convert a variable to a number:",
      "html": "<p>There are 3 JavaScript methods that can be used \nto convert a variable to a number:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The methods above are not number methods. They are global JavaScript methods.",
      "html": "<p>The methods above are not <strong>number</strong> methods. They are <strong>global</strong> JavaScript methods.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Number() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Number() method can be used to convert JavaScript variables to numbers:",
      "html": "<p>The <code>Number()</code> method can be used to convert JavaScript variables to numbers:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_global_number",
        "syntaxHighlighting": [
          {
            "text": "\nNumber(true);\nNumber(false);\nNumber(\"10\");\nNumber(\"\u00a0 10\");\nNumber(\"10\u00a0 \");\nNumber(\" 10\u00a0 \");\nNumber(\"10.33\");\nNumber(\"10,33\");\nNumber(\"10 33\");\nNumber(\"John\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "true",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "false",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"10\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"\u00a0 10\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"10\u00a0 \"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\" 10\u00a0 \"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"10.33\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"10,33\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"10 33\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"John\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Number(true);\nNumber(false);\nNumber(\"10\");\nNumber(\"\u00a0 10\");\nNumber(\"10\u00a0 \");\nNumber(\" 10\u00a0 \");\nNumber(\"10.33\");\nNumber(\"10,33\");\nNumber(\"10 33\");\nNumber(\"John\");",
      "syntax_highlighting": [
        {
          "text": "\nNumber(true);\nNumber(false);\nNumber(\"10\");\nNumber(\"\u00a0 10\");\nNumber(\"10\u00a0 \");\nNumber(\" 10\u00a0 \");\nNumber(\"10.33\");\nNumber(\"10,33\");\nNumber(\"10 33\");\nNumber(\"John\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "true",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "false",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"10\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"\u00a0 10\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"10\u00a0 \"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\" 10\u00a0 \"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"10.33\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"10,33\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"10 33\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"John\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nNumber(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">true</span>);<br/>\nNumber(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">false</span>);<br/>\nNumber(<span class=\"jsstringcolor\" style=\"color:green\">\"10\"</span>);<br/>\nNumber(<span class=\"jsstringcolor\" style=\"color:green\">\"\u00a0 10\"</span>);<br/>\nNumber(<span class=\"jsstringcolor\" style=\"color:green\">\"10\u00a0 \"</span>);<br/>\nNumber(<span class=\"jsstringcolor\" style=\"color:green\">\" 10\u00a0 \"</span>);<br/>\nNumber(<span class=\"jsstringcolor\" style=\"color:green\">\"10.33\"</span>);<br/>\nNumber(<span class=\"jsstringcolor\" style=\"color:green\">\"10,33\"</span>);<br/>\nNumber(<span class=\"jsstringcolor\" style=\"color:green\">\"10 33\"</span>);<br/>\nNumber(<span class=\"jsstringcolor\" style=\"color:green\">\"John\"</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_global_number",
      "syntax_highlighting_data": [
        {
          "text": "\nNumber(true);\nNumber(false);\nNumber(\"10\");\nNumber(\"\u00a0 10\");\nNumber(\"10\u00a0 \");\nNumber(\" 10\u00a0 \");\nNumber(\"10.33\");\nNumber(\"10,33\");\nNumber(\"10 33\");\nNumber(\"John\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "true",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "false",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"10\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"\u00a0 10\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"10\u00a0 \"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\" 10\u00a0 \"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"10.33\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"10,33\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"10 33\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"John\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the number cannot be converted, NaN (Not a Number) is returned.",
      "html": "<p>If the number cannot be converted, <code>NaN</code> (Not a Number) is returned.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Number() Method Used on Dates",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Number() can also convert a date to a number.",
      "html": "<p><code>Number()</code> can also convert a date to a number.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_global_number_date_0",
        "syntaxHighlighting": [
          {
            "text": "\nNumber(new Date(\"1970-01-01\"))\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"1970-01-01\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Number(new Date(\"1970-01-01\"))",
      "syntax_highlighting": [
        {
          "text": "\nNumber(new Date(\"1970-01-01\"))\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"1970-01-01\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nNumber(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> Date(<span class=\"jsstringcolor\" style=\"color:green\">\"1970-01-01\"</span>))<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_global_number_date_0",
      "syntax_highlighting_data": [
        {
          "text": "\nNumber(new Date(\"1970-01-01\"))\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"1970-01-01\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Note",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Date() method returns the number of milliseconds since 1.1.1970.",
      "html": "<p>The <code>Date()</code> method returns the number of milliseconds since 1.1.1970.\n</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The number of milliseconds between 1970-01-02 and 1970-01-01 is 86400000:",
      "html": "<p>The number of milliseconds between 1970-01-02 and 1970-01-01 is 86400000:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_global_number_date_1",
        "syntaxHighlighting": [
          {
            "text": "\nNumber(new Date(\"1970-01-02\"))\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"1970-01-02\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Number(new Date(\"1970-01-02\"))",
      "syntax_highlighting": [
        {
          "text": "\nNumber(new Date(\"1970-01-02\"))\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"1970-01-02\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nNumber(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> Date(<span class=\"jsstringcolor\" style=\"color:green\">\"1970-01-02\"</span>))<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_global_number_date_1",
      "syntax_highlighting_data": [
        {
          "text": "\nNumber(new Date(\"1970-01-02\"))\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"1970-01-02\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_global_number_date",
        "syntaxHighlighting": [
          {
            "text": "\nNumber(new Date(\"2017-09-30\"))\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"2017-09-30\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Number(new Date(\"2017-09-30\"))",
      "syntax_highlighting": [
        {
          "text": "\nNumber(new Date(\"2017-09-30\"))\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"2017-09-30\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nNumber(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> Date(<span class=\"jsstringcolor\" style=\"color:green\">\"2017-09-30\"</span>))<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_global_number_date",
      "syntax_highlighting_data": [
        {
          "text": "\nNumber(new Date(\"2017-09-30\"))\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"2017-09-30\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The parseInt() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "parseInt() parses a string and returns a whole number. Spaces are allowed. Only the first number is returned:",
      "html": "<p><code>parseInt()</code> parses a string and returns a whole number. Spaces are \nallowed. Only the first number is returned:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nparseInt(\"-10\");\nparseInt(\"-10.33\");\nparseInt(\"10\");\nparseInt(\"10.33\");\nparseInt(\"10 20 30\");\nparseInt(\"10 years\");\nparseInt(\"years 10\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\"-10\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"-10.33\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"10\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"10.33\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"10 20 30\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"10 years\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"years 10\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "parseInt(\"-10\");\nparseInt(\"-10.33\");\nparseInt(\"10\");\nparseInt(\"10.33\");\nparseInt(\"10 20 30\");\nparseInt(\"10 years\");\nparseInt(\"years 10\");",
      "syntax_highlighting": [
        {
          "text": "\nparseInt(\"-10\");\nparseInt(\"-10.33\");\nparseInt(\"10\");\nparseInt(\"10.33\");\nparseInt(\"10 20 30\");\nparseInt(\"10 years\");\nparseInt(\"years 10\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\"-10\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"-10.33\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"10\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"10.33\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"10 20 30\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"10 years\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"years 10\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nparseInt(<span class=\"jsstringcolor\" style=\"color:green\">\"-10\"</span>);<br/>\nparseInt(<span class=\"jsstringcolor\" style=\"color:green\">\"-10.33\"</span>);<br/>\nparseInt(<span class=\"jsstringcolor\" style=\"color:green\">\"10\"</span>);<br/>\nparseInt(<span class=\"jsstringcolor\" style=\"color:green\">\"10.33\"</span>);<br/>\nparseInt(<span class=\"jsstringcolor\" style=\"color:green\">\"10 20 30\"</span>);<br/>\nparseInt(<span class=\"jsstringcolor\" style=\"color:green\">\"10 years\"</span>);<br/>\nparseInt(<span class=\"jsstringcolor\" style=\"color:green\">\"years 10\"</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nparseInt(\"-10\");\nparseInt(\"-10.33\");\nparseInt(\"10\");\nparseInt(\"10.33\");\nparseInt(\"10 20 30\");\nparseInt(\"10 years\");\nparseInt(\"years 10\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\"-10\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"-10.33\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"10\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"10.33\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"10 20 30\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"10 years\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"years 10\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the number cannot be converted, NaN (Not a Number) is returned.",
      "html": "<p>If the number cannot be converted, <code>NaN</code> (Not a Number) is returned.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The parseFloat() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "parseFloat() parses a string and returns a number. Spaces are allowed. Only the first number is returned:",
      "html": "<p><code>parseFloat()</code> parses a string and returns a number. Spaces are \nallowed. Only the first number is returned:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nparseFloat(\"10\");\nparseFloat(\"10.33\");\nparseFloat(\"10 20 30\");\nparseFloat(\"10 years\");\nparseFloat(\"years 10\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\"10\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"10.33\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"10 20 30\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"10 years\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"years 10\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "parseFloat(\"10\");\nparseFloat(\"10.33\");\nparseFloat(\"10 20 30\");\nparseFloat(\"10 years\");\nparseFloat(\"years 10\");",
      "syntax_highlighting": [
        {
          "text": "\nparseFloat(\"10\");\nparseFloat(\"10.33\");\nparseFloat(\"10 20 30\");\nparseFloat(\"10 years\");\nparseFloat(\"years 10\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\"10\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"10.33\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"10 20 30\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"10 years\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"years 10\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nparseFloat(<span class=\"jsstringcolor\" style=\"color:green\">\"10\"</span>);<br/>\nparseFloat(<span class=\"jsstringcolor\" style=\"color:green\">\"10.33\"</span>);<br/>\nparseFloat(<span class=\"jsstringcolor\" style=\"color:green\">\"10 20 30\"</span>);<br/>\nparseFloat(<span class=\"jsstringcolor\" style=\"color:green\">\"10 years\"</span>);<br/>\nparseFloat(<span class=\"jsstringcolor\" style=\"color:green\">\"years 10\"</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nparseFloat(\"10\");\nparseFloat(\"10.33\");\nparseFloat(\"10 20 30\");\nparseFloat(\"10 years\");\nparseFloat(\"years 10\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\"10\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"10.33\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"10 20 30\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"10 years\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"years 10\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the number cannot be converted, NaN (Not a Number) is returned.",
      "html": "<p>If the number cannot be converted, <code>NaN</code> (Not a Number) is returned.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Number Object Methods",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "These object methods belong to the Number object:",
      "html": "<p>These <b>object methods</b> belong to the <b>Number</b> object:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Number Methods Cannot be Used on Variables",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The number methods above belong to the JavaScript Number Object .",
      "html": "<p>The number methods above belong to the JavaScript <b>Number Object</b>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "These methods can only be accessed like Number.isInteger() .",
      "html": "<p>These methods can only be accessed like <code>Number.isInteger()</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Using X.isInteger() where X is a variable, will result in an error:",
      "html": "<p>Using X.isInteger() where X is a variable, will result in an error:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "TypeError X.isInteger is not a function .",
      "html": "<p><code>TypeError X.isInteger is not a function</code>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Number.isInteger() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Number.isInteger() method returns true if the argument is an integer.",
      "html": "<p>The <code>Number.isInteger()</code> method returns <code>true</code> if the argument is an integer.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_isinteger",
        "syntaxHighlighting": [
          {
            "text": "\nNumber.isInteger(10);\nNumber.isInteger(10.5);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "isInteger",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "isInteger",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "10.5",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Number.isInteger(10);\nNumber.isInteger(10.5);",
      "syntax_highlighting": [
        {
          "text": "\nNumber.isInteger(10);\nNumber.isInteger(10.5);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "isInteger",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "isInteger",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "10.5",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">isInteger</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">10</span>);<br/>\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">isInteger</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">10.5</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_isinteger",
      "syntax_highlighting_data": [
        {
          "text": "\nNumber.isInteger(10);\nNumber.isInteger(10.5);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "isInteger",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "isInteger",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "10.5",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Number.isSafeInteger() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A safe integer is an integer that can be exactly represented as a double precision number.",
      "html": "<p>A safe integer is an integer that can be exactly represented as a double precision number.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Number.isSafeInteger() method returns true if the argument is a safe integer.",
      "html": "<p>The <code>Number.isSafeInteger()</code> method returns <code>true</code> if the argument is a safe integer.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_issafeinteger",
        "syntaxHighlighting": [
          {
            "text": "\nNumber.isSafeInteger(10);\nNumber.isSafeInteger(12345678901234567890);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "isSafeInteger",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "isSafeInteger",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "12345678901234567890",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Number.isSafeInteger(10);\nNumber.isSafeInteger(12345678901234567890);",
      "syntax_highlighting": [
        {
          "text": "\nNumber.isSafeInteger(10);\nNumber.isSafeInteger(12345678901234567890);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "isSafeInteger",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "isSafeInteger",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "12345678901234567890",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">isSafeInteger</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">10</span>);<br/>\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">isSafeInteger</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">12345678901234567890</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_es6_issafeinteger",
      "syntax_highlighting_data": [
        {
          "text": "\nNumber.isSafeInteger(10);\nNumber.isSafeInteger(12345678901234567890);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "isSafeInteger",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "isSafeInteger",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "12345678901234567890",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Safe integers are all integers from -(2 53 - 1) to +(2 53 - 1). This is safe: 9007199254740991. This is not safe: 9007199254740992.",
      "html": "<p>Safe integers are all integers from -(2<sup>53</sup> - 1) to +(2<sup>53</sup> - 1).<br/>\nThis is safe: 9007199254740991. This is not safe: 9007199254740992.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Number.parseFloat() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Number.parseFloat() parses a string and returns a number.",
      "html": "<p><code>Number.parseFloat()</code> parses a string and returns a number.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Spaces are allowed. Only the first number is returned:",
      "html": "<p>Spaces are allowed. Only the first number is returned:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nNumber.parseFloat(\"10\");\nNumber.parseFloat(\"10.33\");\nNumber.parseFloat(\"10 20 30\");\nNumber.parseFloat(\"10 years\");\nNumber.parseFloat(\"years 10\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "parseFloat",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"10\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "parseFloat",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"10.33\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "parseFloat",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"10 20 30\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "parseFloat",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"10 years\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "parseFloat",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"years 10\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Number.parseFloat(\"10\");\nNumber.parseFloat(\"10.33\");\nNumber.parseFloat(\"10 20 30\");\nNumber.parseFloat(\"10 years\");\nNumber.parseFloat(\"years 10\");",
      "syntax_highlighting": [
        {
          "text": "\nNumber.parseFloat(\"10\");\nNumber.parseFloat(\"10.33\");\nNumber.parseFloat(\"10 20 30\");\nNumber.parseFloat(\"10 years\");\nNumber.parseFloat(\"years 10\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "parseFloat",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"10\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "parseFloat",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"10.33\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "parseFloat",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"10 20 30\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "parseFloat",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"10 years\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "parseFloat",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"years 10\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">parseFloat</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"10\"</span>);<br/>\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">parseFloat</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"10.33\"</span>);<br/>\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">parseFloat</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"10 20 30\"</span>);<br/>\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">parseFloat</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"10 years\"</span>);<br/>\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">parseFloat</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"years 10\"</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nNumber.parseFloat(\"10\");\nNumber.parseFloat(\"10.33\");\nNumber.parseFloat(\"10 20 30\");\nNumber.parseFloat(\"10 years\");\nNumber.parseFloat(\"years 10\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "parseFloat",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"10\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "parseFloat",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"10.33\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "parseFloat",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"10 20 30\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "parseFloat",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"10 years\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "parseFloat",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"years 10\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the number cannot be converted, NaN (Not a Number) is returned.",
      "html": "<p>If the number cannot be converted, <code>NaN</code> (Not a Number) is returned.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Note",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Number methods Number.parseInt() and Number.parseFloat() are the same as the Global methods parseInt() and parseFloat() .",
      "html": "<p>The <b>Number</b> methods <code>Number.parseInt()</code>\nand <code>Number.parseFloat()</code><br/><br/>\nare the same as the<br/><br/>\n<b>Global</b> methods <code>parseInt()</code> and <code>parseFloat()</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The purpose is modularization of globals (to make it easier to use the same JavaScript code outside the browser).",
      "html": "<p>The purpose is modularization of globals (to make it easier to use the same JavaScript code outside the browser).</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Number.parseInt() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Number.parseInt() parses a string and returns a whole number.",
      "html": "<p><code>Number.parseInt()</code> parses a string and returns a whole number.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Spaces are allowed. Only the first number is returned:",
      "html": "<p>Spaces are allowed. Only the first number is returned:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nNumber.parseInt(\"-10\");\nNumber.parseInt(\"-10.33\");\nNumber.parseInt(\"10\");\nNumber.parseInt(\"10.33\");\nNumber.parseInt(\"10 20 30\");\nNumber.parseInt(\"10 years\");\nNumber.parseInt(\"years 10\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "parseInt",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"-10\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "parseInt",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"-10.33\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "parseInt",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"10\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "parseInt",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"10.33\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "parseInt",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"10 20 30\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "parseInt",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"10 years\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "parseInt",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"years 10\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "Number.parseInt(\"-10\");\nNumber.parseInt(\"-10.33\");\nNumber.parseInt(\"10\");\nNumber.parseInt(\"10.33\");\nNumber.parseInt(\"10 20 30\");\nNumber.parseInt(\"10 years\");\nNumber.parseInt(\"years 10\");",
      "syntax_highlighting": [
        {
          "text": "\nNumber.parseInt(\"-10\");\nNumber.parseInt(\"-10.33\");\nNumber.parseInt(\"10\");\nNumber.parseInt(\"10.33\");\nNumber.parseInt(\"10 20 30\");\nNumber.parseInt(\"10 years\");\nNumber.parseInt(\"years 10\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "parseInt",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"-10\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "parseInt",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"-10.33\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "parseInt",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"10\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "parseInt",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"10.33\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "parseInt",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"10 20 30\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "parseInt",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"10 years\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "parseInt",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"years 10\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">parseInt</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"-10\"</span>);<br/>\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">parseInt</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"-10.33\"</span>);<br/>\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">parseInt</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"10\"</span>);<br/>\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">parseInt</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"10.33\"</span>);<br/>\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">parseInt</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"10 20 30\"</span>);<br/>\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">parseInt</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"10 years\"</span>);<br/>\nNumber.<span class=\"jspropertycolor\" style=\"color:black\">parseInt</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"years 10\"</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nNumber.parseInt(\"-10\");\nNumber.parseInt(\"-10.33\");\nNumber.parseInt(\"10\");\nNumber.parseInt(\"10.33\");\nNumber.parseInt(\"10 20 30\");\nNumber.parseInt(\"10 years\");\nNumber.parseInt(\"years 10\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "parseInt",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"-10\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "parseInt",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"-10.33\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "parseInt",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"10\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "parseInt",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"10.33\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "parseInt",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"10 20 30\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "parseInt",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"10 years\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "parseInt",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"years 10\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the number cannot be converted, NaN (Not a Number) is returned.",
      "html": "<p>If the number cannot be converted, <code>NaN</code> (Not a Number) is returned.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Complete JavaScript Number Reference",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "For a complete Number reference, visit our:",
      "html": "<p>For a complete Number reference, visit our:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Complete JavaScript Number Reference",
          "href": "https://www.w3schools.com/jsref/jsref_obj_number.asp",
          "title": ""
        }
      ],
      "text": "Complete JavaScript Number Reference .",
      "html": "<p><a href=\"/jsref/jsref_obj_number.asp\">Complete JavaScript Number Reference</a>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The reference contains descriptions and examples of all Number properties and methods.",
      "html": "<p>The reference contains descriptions and examples of all Number  properties and methods.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is a legal JavaScript method for returning a number as a string?",
      "html": "<p>What is a legal JavaScript method for returning a number as a string?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "What is a legal JavaScript method for returning a number as a string?",
        "options": [
          {
            "value": "0",
            "text": "intToString()"
          },
          {
            "value": "1",
            "text": "toString()"
          },
          {
            "value": "2",
            "text": "stringify()"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_number_methods1"
      },
      "quiz_type": "quiz",
      "question": "What is a legal JavaScript method for returning a number as a string?",
      "options": [
        {
          "value": "0",
          "text": "intToString()"
        },
        {
          "value": "1",
          "text": "toString()"
        },
        {
          "value": "2",
          "text": "stringify()"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_number_methods1",
      "html": "<form action=\"exercise.asp?x=xrcise_number_methods1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\"><code>intToString()</code></label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\"><code>toString()</code></label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\"><code>stringify()</code></label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}