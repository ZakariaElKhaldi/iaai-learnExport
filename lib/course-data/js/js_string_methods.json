{
  "title": "JavaScript String Methods",
  "url": "https://www.w3schools.com/js/js_string_methods.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "JavaScript String Methods",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Basic String Methods",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Javascript strings are primitive and immutable: All string methods produce a new string without altering the original string.",
      "html": "<p>Javascript strings are primitive and immutable:\nAll string methods produce a new string without altering the original string.</p>"
    },
    {
      "type": "table",
      "metadata": {
        "data": [
          []
        ]
      },
      "data": [
        []
      ],
      "html": "<table>\n<tbody><tr>\n<td>\n<a href=\"#mark_length\">String length</a><br/>\n<a href=\"#mark_charat\">String charAt()</a><br/>\n<a href=\"#mark_charcodeat\">String charCodeAt()</a><br/>\n<a href=\"#mark_at\">String at()</a><br/>\n<a href=\"#mark_propertyaccess\">String [ ]</a><br/>\n<a href=\"#mark_slice\">String slice()</a><br/>\n<a href=\"#mark_substring\">String substring()</a><br/>\n<a href=\"#mark_substr\">String substr()</a><br/>\n<h2>See Also:</h2>\n<a href=\"js_string_search.asp\">String Search Methods</a><br/>\n<a href=\"js_string_templates.asp\">String Templates</a><br/>\n</td>\n<td>\n<a href=\"#mark_touppercase\">String toUpperCase()</a><br/>\n<a href=\"#mark_tolowercase\">String toLowerCase()</a><br/>\n<a href=\"#mark_concat\">String concat()</a><br/>\n<a href=\"#mark_trim\">String trim()</a><br/>\n<a href=\"#mark_trimstart\">String trimStart()</a><br/>\n<a href=\"#mark_trimend\">String trimEnd()</a><br/>\n<a href=\"#mark_padstart\">String padStart()</a><br/>\n<a href=\"#mark_padend\">String padEnd()</a><br/>\n<a href=\"#mark_repeat\">String repeat()</a><br/>\n<a href=\"#mark_replace\">String replace()</a><br/>\n<a href=\"#mark_replaceall\">String replaceAll()</a><br/>\n<a href=\"#mark_split\">String split()</a><br/>\n</td>\n</tr>\n</tbody></table>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript String Length",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The length property returns the length of a string:",
      "html": "<p>The <code>length</code> property returns the length of a string:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_length",
        "syntaxHighlighting": [
          {
            "text": "\nlet text = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nlet length = text.length;\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "length",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nlet length = text.length;",
      "syntax_highlighting": [
        {
          "text": "\nlet text = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nlet length = text.length;\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "length",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> length = text.<span class=\"jspropertycolor\" style=\"color:black\">length</span>;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_length",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nlet length = text.length;\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "length",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Extracting String Characters",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "There are 4 methods for extracting string characters:",
      "html": "<p>There are 4 methods for extracting string characters:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript String charAt()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The charAt() method returns the character at a specified index (position) in a string:",
      "html": "<p>The <code>charAt()</code> method returns the character at a specified \nindex (position) in a string:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_charat",
        "syntaxHighlighting": [
          {
            "text": "\nlet text = \"HELLO WORLD\";\nlet char = text.charAt(0);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"HELLO WORLD\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "char",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "charAt",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text = \"HELLO WORLD\";\nlet char = text.charAt(0);",
      "syntax_highlighting": [
        {
          "text": "\nlet text = \"HELLO WORLD\";\nlet char = text.charAt(0);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"HELLO WORLD\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "char",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "charAt",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"HELLO WORLD\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">char</span> = text.<span class=\"jspropertycolor\" style=\"color:black\">charAt</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_charat",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text = \"HELLO WORLD\";\nlet char = text.charAt(0);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"HELLO WORLD\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "char",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "charAt",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript String charCodeAt()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The charCodeAt() method returns the code of the character at a specified index in a string:",
      "html": "<p>The <code>charCodeAt()</code> method returns the code of the character \nat a specified index in a string:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The method returns a UTF-16 code (an integer between 0 and 65535).",
      "html": "<p>The method returns a UTF-16 code (an integer between 0 and 65535).</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_charcodeat",
        "syntaxHighlighting": [
          {
            "text": "\nlet text = \"HELLO WORLD\";\nlet char = text.charCodeAt(0);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"HELLO WORLD\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "char",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "charCodeAt",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text = \"HELLO WORLD\";\nlet char = text.charCodeAt(0);",
      "syntax_highlighting": [
        {
          "text": "\nlet text = \"HELLO WORLD\";\nlet char = text.charCodeAt(0);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"HELLO WORLD\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "char",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "charCodeAt",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"HELLO WORLD\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">char</span> = text.<span class=\"jspropertycolor\" style=\"color:black\">charCodeAt</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_charcodeat",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text = \"HELLO WORLD\";\nlet char = text.charCodeAt(0);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"HELLO WORLD\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "char",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "charCodeAt",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript String at()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "ES2022",
          "href": "https://www.w3schools.com/js_2022.asp",
          "title": ""
        }
      ],
      "text": "ES2022 introduced the string method at() :",
      "html": "<p><a href=\"js_2022.asp\">ES2022</a> introduced the string method <code>at()</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_at",
        "syntaxHighlighting": [
          {
            "text": "\nconst name = \"W3Schools\";\nlet letter = name.at(2);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"W3Schools\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "at",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const name = \"W3Schools\";\nlet letter = name.at(2);",
      "syntax_highlighting": [
        {
          "text": "\nconst name = \"W3Schools\";\nlet letter = name.at(2);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"W3Schools\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "at",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> name = <span class=\"jsstringcolor\" style=\"color:green\">\"W3Schools\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> letter = name.<span class=\"jspropertycolor\" style=\"color:black\">at</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">2</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_at",
      "syntax_highlighting_data": [
        {
          "text": "\nconst name = \"W3Schools\";\nlet letter = name.at(2);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"W3Schools\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "at",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The at() method returns the character at a specified index (position) in a string.",
      "html": "<p>The <code>at()</code> method returns the character at a specified index (position) in a string.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The at() method is supported in all modern browsers since March 2022:",
      "html": "<p>The <code>at()</code> method is supported in all modern browsers since March 2022:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Note",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The at() method is a new addition to JavaScript.",
      "html": "<p>The <code>at()</code> method is a new addition to JavaScript.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It allows the use of negative indexes while charAt() do not.",
      "html": "<p>It allows the use of negative indexes while <code>charAt()</code> do not.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Browser Support",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "at() is an ES2022 feature.",
      "html": "<p><code>at()</code> is an ES2022 feature.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "JavaScript 2022 (ES2022) is supported in all modern browsers since March 2023:",
      "html": "<p>JavaScript 2022 (ES2022) is supported in all modern browsers since March 2023:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "browserref",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"browserref notranslate\" style=\"font-size:14px\">\n<tbody><tr style=\"height:60px\">\n<th class=\"bsChrome\" style=\"width:19.9%;\" title=\"Chrome\"></th>\n<th class=\"bsEdge\" style=\"width:19.9%;\" title=\"Edge\"></th>\n<th class=\"bsFirefox\" style=\"width:19.9%;\" title=\"Firefox\"></th>\n<th class=\"bsSafari\" style=\"width:19.9%;\" title=\"Safari\"></th>\n<th class=\"bsOpera\" style=\"width:19.9%;\" title=\"Opera\"></th>\n</tr>\n<tr>\n<td>Chrome 94</td>\n<td>Edge 94</td>\n<td>Firefox 93</td>\n<td>Safari 16.4</td>\n<td>Opera 79</td>\n</tr>\n<tr>\n<td>Sep 2021</td>\n<td>Sep 2021</td>\n<td>Oct 2021</td>\n<td>Mar 2023</td>\n<td>Oct 2021</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "browserref",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "browserref",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Property Access [ ]",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_prop",
        "syntaxHighlighting": [
          {
            "text": "\nlet text = \"HELLO WORLD\";\nlet char = text[0];\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"HELLO WORLD\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "char",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text = \"HELLO WORLD\";\nlet char = text[0];",
      "syntax_highlighting": [
        {
          "text": "\nlet text = \"HELLO WORLD\";\nlet char = text[0];\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"HELLO WORLD\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "char",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"HELLO WORLD\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">char</span> = text[<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>];<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_prop",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text = \"HELLO WORLD\";\nlet char = text[0];\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"HELLO WORLD\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "char",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Note",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Property access might be a little unpredictable:",
      "html": "<p>Property access might be a little <strong>unpredictable:</strong> </p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_prop2",
        "syntaxHighlighting": [
          {
            "text": "\nlet text = \"HELLO WORLD\";\ntext[0] = \"A\";\u00a0\u00a0\u00a0\u00a0// Gives no error, but does not work\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"HELLO WORLD\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"A\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// Gives no error, but does not work",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text = \"HELLO WORLD\";\ntext[0] = \"A\";\u00a0\u00a0\u00a0\u00a0// Gives no error, but does not work",
      "syntax_highlighting": [
        {
          "text": "\nlet text = \"HELLO WORLD\";\ntext[0] = \"A\";\u00a0\u00a0\u00a0\u00a0// Gives no error, but does not work\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"HELLO WORLD\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"A\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// Gives no error, but does not work",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"HELLO WORLD\"</span>;<br/>\ntext[<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>] = <span class=\"jsstringcolor\" style=\"color:green\">\"A\"</span>;\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// Gives no error, but does not work<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_prop2",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text = \"HELLO WORLD\";\ntext[0] = \"A\";\u00a0\u00a0\u00a0\u00a0// Gives no error, but does not work\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"HELLO WORLD\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"A\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// Gives no error, but does not work",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Extracting String Parts",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "There are 3 methods for extracting a part of a string:",
      "html": "<p>There are 3 methods for extracting a part of a string:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript String slice()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "slice() extracts a part of a string and returns the extracted part in a new string.",
      "html": "<p><code>slice()</code> extracts a part of a string and returns the \nextracted part in a new string.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The method takes 2 parameters: start position, and end position (end not included).",
      "html": "<p>The method takes 2 parameters: start position, and end position (end not included).</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_slice",
        "syntaxHighlighting": [
          {
            "text": "\nlet text = \"Apple, Banana, Kiwi\";\nlet part = text.slice(7, 13);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Apple, Banana, Kiwi\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "slice",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "7",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "13",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text = \"Apple, Banana, Kiwi\";\nlet part = text.slice(7, 13);",
      "syntax_highlighting": [
        {
          "text": "\nlet text = \"Apple, Banana, Kiwi\";\nlet part = text.slice(7, 13);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Apple, Banana, Kiwi\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "slice",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "7",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "13",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"Apple, Banana, Kiwi\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> part = text.<span class=\"jspropertycolor\" style=\"color:black\">slice</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">7</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">13</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_slice",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text = \"Apple, Banana, Kiwi\";\nlet part = text.slice(7, 13);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Apple, Banana, Kiwi\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "slice",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "7",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "13",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Note",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "JavaScript counts positions from zero.",
      "html": "<p>JavaScript counts positions from zero.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "First position is 0.",
      "html": "<p>First position is 0.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Second position is 1.",
      "html": "<p>Second position is 1.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_slice_rest",
        "syntaxHighlighting": [
          {
            "text": "\nlet text = \"Apple, Banana, Kiwi\";\nlet part = text.slice(7);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Apple, Banana, Kiwi\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "slice",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "7",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text = \"Apple, Banana, Kiwi\";\nlet part = text.slice(7);",
      "syntax_highlighting": [
        {
          "text": "\nlet text = \"Apple, Banana, Kiwi\";\nlet part = text.slice(7);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Apple, Banana, Kiwi\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "slice",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "7",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"Apple, Banana, Kiwi\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> part = text.<span class=\"jspropertycolor\" style=\"color:black\">slice</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">7</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_slice_rest",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text = \"Apple, Banana, Kiwi\";\nlet part = text.slice(7);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Apple, Banana, Kiwi\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "slice",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "7",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript String substring()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "substring() is similar to slice() .",
      "html": "<p><code>substring()</code> is similar to <code>slice()</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The difference is that start and end values less than 0 are treated as 0 in substring() .",
      "html": "<p>The difference is that start and end values less than 0 are treated as 0 in\n<code>substring()</code>.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_substring",
        "syntaxHighlighting": [
          {
            "text": "\nlet str = \"Apple, Banana, Kiwi\";\nlet part = str.substring(7, 13);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Apple, Banana, Kiwi\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "substring",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "7",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "13",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let str = \"Apple, Banana, Kiwi\";\nlet part = str.substring(7, 13);",
      "syntax_highlighting": [
        {
          "text": "\nlet str = \"Apple, Banana, Kiwi\";\nlet part = str.substring(7, 13);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Apple, Banana, Kiwi\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "substring",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "7",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "13",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> str = <span class=\"jsstringcolor\" style=\"color:green\">\"Apple, Banana, Kiwi\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> part = str.<span class=\"jspropertycolor\" style=\"color:black\">substring</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">7</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">13</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_substring",
      "syntax_highlighting_data": [
        {
          "text": "\nlet str = \"Apple, Banana, Kiwi\";\nlet part = str.substring(7, 13);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Apple, Banana, Kiwi\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "substring",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "7",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "13",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you omit the second parameter, substring() will slice out the rest of the string.",
      "html": "<p>If you omit the second parameter, <code>substring()</code> will slice out the rest of the \nstring.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript String substr()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "substr() is similar to slice() .",
      "html": "<p><code>substr()</code> is similar to <code>slice()</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The difference is that the second parameter specifies the length of the extracted part.",
      "html": "<p>The difference is \nthat the second parameter specifies the <b>length</b> \nof the extracted part.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Warning",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The substr() method is removed (deprecated) in the latest JavaScript standard.",
      "html": "<p>The <code>substr()</code> method is removed (deprecated) in the latest JavaScript standard.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Use substring() or slice() instead.",
      "html": "<p>Use <code>substring()</code> or <code>slice()</code> instead.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_substr",
        "syntaxHighlighting": [
          {
            "text": "\nlet str = \"Apple, Banana, Kiwi\";\nlet part = str.substr(7, 6);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Apple, Banana, Kiwi\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "substr",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "7",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "6",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let str = \"Apple, Banana, Kiwi\";\nlet part = str.substr(7, 6);",
      "syntax_highlighting": [
        {
          "text": "\nlet str = \"Apple, Banana, Kiwi\";\nlet part = str.substr(7, 6);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Apple, Banana, Kiwi\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "substr",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "7",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "6",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> str = <span class=\"jsstringcolor\" style=\"color:green\">\"Apple, Banana, Kiwi\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> part = str.<span class=\"jspropertycolor\" style=\"color:black\">substr</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">7</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">6</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_substr",
      "syntax_highlighting_data": [
        {
          "text": "\nlet str = \"Apple, Banana, Kiwi\";\nlet part = str.substr(7, 6);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Apple, Banana, Kiwi\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "substr",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "7",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "6",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you omit the second parameter, substr() will slice out the rest of the string.",
      "html": "<p>If you omit the second parameter, <code>substr()</code> will slice out the rest of the \nstring.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_substr1",
        "syntaxHighlighting": [
          {
            "text": "\nlet str = \"Apple, Banana, Kiwi\";\nlet part = str.substr(7);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Apple, Banana, Kiwi\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "substr",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "7",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let str = \"Apple, Banana, Kiwi\";\nlet part = str.substr(7);",
      "syntax_highlighting": [
        {
          "text": "\nlet str = \"Apple, Banana, Kiwi\";\nlet part = str.substr(7);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Apple, Banana, Kiwi\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "substr",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "7",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> str = <span class=\"jsstringcolor\" style=\"color:green\">\"Apple, Banana, Kiwi\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> part = str.<span class=\"jspropertycolor\" style=\"color:black\">substr</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">7</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_substr1",
      "syntax_highlighting_data": [
        {
          "text": "\nlet str = \"Apple, Banana, Kiwi\";\nlet part = str.substr(7);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Apple, Banana, Kiwi\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "substr",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "7",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the first parameter is negative, the position counts from the end of the string.",
      "html": "<p>If the first parameter is negative, the position counts from the end of the \nstring.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_substr2",
        "syntaxHighlighting": [
          {
            "text": "\nlet str = \"Apple, Banana, Kiwi\";\nlet part = str.substr(-4);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Apple, Banana, Kiwi\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "substr",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let str = \"Apple, Banana, Kiwi\";\nlet part = str.substr(-4);",
      "syntax_highlighting": [
        {
          "text": "\nlet str = \"Apple, Banana, Kiwi\";\nlet part = str.substr(-4);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Apple, Banana, Kiwi\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "substr",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> str = <span class=\"jsstringcolor\" style=\"color:green\">\"Apple, Banana, Kiwi\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> part = str.<span class=\"jspropertycolor\" style=\"color:black\">substr</span>(-<span class=\"jsnumbercolor\" style=\"color:#905\">4</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_substr2",
      "syntax_highlighting_data": [
        {
          "text": "\nlet str = \"Apple, Banana, Kiwi\";\nlet part = str.substr(-4);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Apple, Banana, Kiwi\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "substr",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Converting to Upper and Lower Case",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A string is converted to upper case with toUpperCase() :",
      "html": "<p>A string is converted to upper case with <code>toUpperCase()</code>:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A string is converted to lower case with toLowerCase() :",
      "html": "<p>A string is converted to lower case with <code>toLowerCase()</code>:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript String toUpperCase()",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_toupper",
        "syntaxHighlighting": [
          {
            "text": "\nlet text1 = \"Hello World!\";\nlet text2 = text1.toUpperCase();\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Hello World!\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "toUpperCase",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text1 = \"Hello World!\";\nlet text2 = text1.toUpperCase();",
      "syntax_highlighting": [
        {
          "text": "\nlet text1 = \"Hello World!\";\nlet text2 = text1.toUpperCase();\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Hello World!\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "toUpperCase",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text1 = <span class=\"jsstringcolor\" style=\"color:green\">\"Hello World!\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text2 = text1.<span class=\"jspropertycolor\" style=\"color:black\">toUpperCase</span>();<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_toupper",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text1 = \"Hello World!\";\nlet text2 = text1.toUpperCase();\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Hello World!\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "toUpperCase",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript String toLowerCase()",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_tolower",
        "syntaxHighlighting": [
          {
            "text": "\nlet text1 = \"Hello World!\";\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // String\nlet text2 = text1.toLowerCase();\u00a0\u00a0// text2 is text1 \nconverted to lower\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Hello World!\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// String",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "toLowerCase",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "// text2 is text1 \nconverted to lower\n ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text1 = \"Hello World!\";\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // String\nlet text2 = text1.toLowerCase();\u00a0\u00a0// text2 is text1\nconverted to lower",
      "syntax_highlighting": [
        {
          "text": "\nlet text1 = \"Hello World!\";\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // String\nlet text2 = text1.toLowerCase();\u00a0\u00a0// text2 is text1 \nconverted to lower\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Hello World!\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// String",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "toLowerCase",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "// text2 is text1 \nconverted to lower\n ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text1 = <span class=\"jsstringcolor\" style=\"color:green\">\"Hello World!\"</span>;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// String<br/></span>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text2 = text1.<span class=\"jspropertycolor\" style=\"color:black\">toLowerCase</span>();\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// text2 is text1 \nconverted to lower\n </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_tolower",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text1 = \"Hello World!\";\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // String\nlet text2 = text1.toLowerCase();\u00a0\u00a0// text2 is text1 \nconverted to lower\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Hello World!\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// String",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "toLowerCase",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "// text2 is text1 \nconverted to lower\n ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript String concat()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "concat() joins two or more strings:",
      "html": "<p><code>concat()</code> joins two or more strings:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_concat",
        "syntaxHighlighting": [
          {
            "text": "\nlet text1 = \"Hello\";\nlet text2 = \"World\";\nlet text3 = text1.concat(\" \", text2);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Hello\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"World\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "concat",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\" \"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text1 = \"Hello\";\nlet text2 = \"World\";\nlet text3 = text1.concat(\" \", text2);",
      "syntax_highlighting": [
        {
          "text": "\nlet text1 = \"Hello\";\nlet text2 = \"World\";\nlet text3 = text1.concat(\" \", text2);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Hello\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"World\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "concat",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\" \"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text1 = <span class=\"jsstringcolor\" style=\"color:green\">\"Hello\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text2 = <span class=\"jsstringcolor\" style=\"color:green\">\"World\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text3 = text1.<span class=\"jspropertycolor\" style=\"color:black\">concat</span>(<span class=\"jsstringcolor\" style=\"color:green\">\" \"</span>, text2);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_concat",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text1 = \"Hello\";\nlet text2 = \"World\";\nlet text3 = text1.concat(\" \", text2);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Hello\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"World\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "concat",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\" \"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The concat() method can be used instead of the plus operator. These two lines do the same:",
      "html": "<p>The <code>concat()</code> method can be used instead of the plus operator. \nThese two lines do the same:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\ntext = \"Hello\" + \" \" + \"World!\";\ntext = \"Hello\".concat(\" \", \"World!\"); ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\"Hello\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\" \"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"World!\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Hello\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "concat",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\" \"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"World!\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "text = \"Hello\" + \" \" + \"World!\";\ntext = \"Hello\".concat(\" \", \"World!\");",
      "syntax_highlighting": [
        {
          "text": "\ntext = \"Hello\" + \" \" + \"World!\";\ntext = \"Hello\".concat(\" \", \"World!\"); ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\"Hello\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\" \"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"World!\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Hello\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "concat",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\" \"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"World!\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\ntext = <span class=\"jsstringcolor\" style=\"color:green\">\"Hello\"</span> + <span class=\"jsstringcolor\" style=\"color:green\">\" \"</span> + <span class=\"jsstringcolor\" style=\"color:green\">\"World!\"</span>;<br/>\ntext = <span class=\"jsstringcolor\" style=\"color:green\">\"Hello\"</span>.<span class=\"jspropertycolor\" style=\"color:black\">concat</span>(<span class=\"jsstringcolor\" style=\"color:green\">\" \"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"World!\"</span>); </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\ntext = \"Hello\" + \" \" + \"World!\";\ntext = \"Hello\".concat(\" \", \"World!\"); ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\"Hello\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\" \"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"World!\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Hello\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "concat",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\" \"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"World!\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Note",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "All string methods return a new string. They don't modify the original string.",
      "html": "<p>All string methods return a new string. They don't modify the original string.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Formally said:",
      "html": "<p>Formally said:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Strings are immutable: Strings cannot be changed, only replaced.",
      "html": "<p>Strings are immutable: Strings cannot be changed, only replaced.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript String trim()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The trim() method removes whitespace from both sides of a string:",
      "html": "<p>The <code>trim()</code> method removes whitespace from both sides of a string:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_trim",
        "syntaxHighlighting": [
          {
            "text": "\nlet text1 = \"\u00a0\u00a0\u00a0\u00a0\u00a0 Hello World! \u00a0\u00a0\u00a0\u00a0\u00a0\";\nlet text2 = text1.trim();\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"\u00a0\u00a0\u00a0\u00a0\u00a0 Hello World! \u00a0\u00a0\u00a0\u00a0\u00a0\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "trim",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text1 = \"\u00a0\u00a0\u00a0\u00a0\u00a0 Hello World! \u00a0\u00a0\u00a0\u00a0\u00a0\";\nlet text2 = text1.trim();",
      "syntax_highlighting": [
        {
          "text": "\nlet text1 = \"\u00a0\u00a0\u00a0\u00a0\u00a0 Hello World! \u00a0\u00a0\u00a0\u00a0\u00a0\";\nlet text2 = text1.trim();\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"\u00a0\u00a0\u00a0\u00a0\u00a0 Hello World! \u00a0\u00a0\u00a0\u00a0\u00a0\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "trim",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text1 = <span class=\"jsstringcolor\" style=\"color:green\">\"\u00a0\u00a0\u00a0\u00a0\u00a0 Hello World! \u00a0\u00a0\u00a0\u00a0\u00a0\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text2 = text1.<span class=\"jspropertycolor\" style=\"color:black\">trim</span>();<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_trim",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text1 = \"\u00a0\u00a0\u00a0\u00a0\u00a0 Hello World! \u00a0\u00a0\u00a0\u00a0\u00a0\";\nlet text2 = text1.trim();\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"\u00a0\u00a0\u00a0\u00a0\u00a0 Hello World! \u00a0\u00a0\u00a0\u00a0\u00a0\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "trim",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript String trimStart()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "ECMAScript 2019",
          "href": "https://www.w3schools.com/js_2019.asp",
          "title": ""
        }
      ],
      "text": "ECMAScript 2019 added the String method trimStart() to JavaScript.",
      "html": "<p><a href=\"js_2019.asp\">ECMAScript 2019</a> added the String method <code>trimStart()</code> to JavaScript.\n</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The trimStart() method works like trim() , but removes whitespace only from the start of a string.",
      "html": "<p>The <code>trimStart()</code> method works like <code>trim()</code>, but removes whitespace only from the start of a string.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_trimstart",
        "syntaxHighlighting": [
          {
            "text": "\nlet text1 = \"\u00a0\u00a0\u00a0\u00a0\u00a0Hello World!\u00a0\u00a0\u00a0\u00a0\u00a0\";\nlet text2 = text1.trimStart();\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"\u00a0\u00a0\u00a0\u00a0\u00a0Hello World!\u00a0\u00a0\u00a0\u00a0\u00a0\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "trimStart",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text1 = \"\u00a0\u00a0\u00a0\u00a0\u00a0Hello World!\u00a0\u00a0\u00a0\u00a0\u00a0\";\nlet text2 = text1.trimStart();",
      "syntax_highlighting": [
        {
          "text": "\nlet text1 = \"\u00a0\u00a0\u00a0\u00a0\u00a0Hello World!\u00a0\u00a0\u00a0\u00a0\u00a0\";\nlet text2 = text1.trimStart();\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"\u00a0\u00a0\u00a0\u00a0\u00a0Hello World!\u00a0\u00a0\u00a0\u00a0\u00a0\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "trimStart",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text1 = <span class=\"jsstringcolor\" style=\"color:green\">\"\u00a0\u00a0\u00a0\u00a0\u00a0Hello World!\u00a0\u00a0\u00a0\u00a0\u00a0\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text2 = text1.<span class=\"jspropertycolor\" style=\"color:black\">trimStart</span>();<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_trimstart",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text1 = \"\u00a0\u00a0\u00a0\u00a0\u00a0Hello World!\u00a0\u00a0\u00a0\u00a0\u00a0\";\nlet text2 = text1.trimStart();\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"\u00a0\u00a0\u00a0\u00a0\u00a0Hello World!\u00a0\u00a0\u00a0\u00a0\u00a0\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "trimStart",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "JavaScript String trimStart() is supported in all modern browsers since January 2020:",
      "html": "<p>JavaScript String <code>trimStart()</code> is supported in all modern browsers since January 2020:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "browserref",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"browserref notranslate\">\n<tbody><tr style=\"height:50px\">\n<th class=\"bsChrome\" style=\"width:20%;\" title=\"Chrome\"></th>\n<th class=\"bsEdge\" style=\"width:20%;\" title=\"Edge\"></th>\n<th class=\"bsFirefox\" style=\"width:20%;\" title=\"Firefox\"></th>\n<th class=\"bsSafari\" style=\"width:20%;\" title=\"Safari\"></th>\n<th class=\"bsOpera\" style=\"width:29%;\" title=\"Opera\"></th>\n</tr>\n<tr>\n<td>Chrome 66</td>\n<td>Edge 79</td>\n<td>Firefox 61</td>\n<td>Safari 12</td>\n<td>Opera 50</td>\n</tr>\n<tr>\n<td>Apr 2018</td>\n<td>Jan 2020</td>\n<td>Jun 2018</td>\n<td>Sep 2018</td>\n<td>May 2018</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "browserref",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "browserref",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript String trimEnd()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "ECMAScript 2019",
          "href": "https://www.w3schools.com/js_2019.asp",
          "title": ""
        }
      ],
      "text": "ECMAScript 2019 added the string method trimEnd() to JavaScript.",
      "html": "<p><a href=\"js_2019.asp\">ECMAScript 2019</a> added the string method <code>trimEnd()</code> to JavaScript.\n</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The trimEnd() method works like trim() , but removes whitespace only from the end of a string.",
      "html": "<p>The <code>trimEnd()</code> method works like <code>trim()</code>, but removes whitespace only from the end of a string.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_trimend",
        "syntaxHighlighting": [
          {
            "text": "\nlet text1 = \"\u00a0\u00a0\u00a0\u00a0\u00a0Hello World!\u00a0\u00a0\u00a0\u00a0\u00a0\";\nlet text2 = text1.trimEnd();\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"\u00a0\u00a0\u00a0\u00a0\u00a0Hello World!\u00a0\u00a0\u00a0\u00a0\u00a0\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "trimEnd",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text1 = \"\u00a0\u00a0\u00a0\u00a0\u00a0Hello World!\u00a0\u00a0\u00a0\u00a0\u00a0\";\nlet text2 = text1.trimEnd();",
      "syntax_highlighting": [
        {
          "text": "\nlet text1 = \"\u00a0\u00a0\u00a0\u00a0\u00a0Hello World!\u00a0\u00a0\u00a0\u00a0\u00a0\";\nlet text2 = text1.trimEnd();\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"\u00a0\u00a0\u00a0\u00a0\u00a0Hello World!\u00a0\u00a0\u00a0\u00a0\u00a0\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "trimEnd",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text1 = <span class=\"jsstringcolor\" style=\"color:green\">\"\u00a0\u00a0\u00a0\u00a0\u00a0Hello World!\u00a0\u00a0\u00a0\u00a0\u00a0\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text2 = text1.<span class=\"jspropertycolor\" style=\"color:black\">trimEnd</span>();<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_trimend",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text1 = \"\u00a0\u00a0\u00a0\u00a0\u00a0Hello World!\u00a0\u00a0\u00a0\u00a0\u00a0\";\nlet text2 = text1.trimEnd();\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"\u00a0\u00a0\u00a0\u00a0\u00a0Hello World!\u00a0\u00a0\u00a0\u00a0\u00a0\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "trimEnd",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "JavaScript String trimEnd() is supported in all modern browsers since January 2020:",
      "html": "<p>JavaScript String <code>trimEnd()</code> is supported in all modern browsers since January 2020:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "browserref",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"browserref notranslate\">\n<tbody><tr style=\"height:50px\">\n<th class=\"bsChrome\" style=\"width:20%;\" title=\"Chrome\"></th>\n<th class=\"bsEdge\" style=\"width:20%;\" title=\"Edge\"></th>\n<th class=\"bsFirefox\" style=\"width:20%;\" title=\"Firefox\"></th>\n<th class=\"bsSafari\" style=\"width:20%;\" title=\"Safari\"></th>\n<th class=\"bsOpera\" style=\"width:19%;\" title=\"Opera\"></th>\n</tr>\n<tr>\n<td>Chrome 66</td>\n<td>Edge 79</td>\n<td>Firefox 61</td>\n<td>Safari 12</td>\n<td>Opera 50</td>\n</tr>\n<tr>\n<td>Apr 2018</td>\n<td>Jan 2020</td>\n<td>Jun 2018</td>\n<td>Sep 2018</td>\n<td>May 2018</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "browserref",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "browserref",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript String Padding",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "ECMAScript 2017",
          "href": "https://www.w3schools.com/js_2017.asp",
          "title": ""
        }
      ],
      "text": "ECMAScript 2017 added two new string methods to JavaScript: padStart() and padEnd() to support padding at the beginning and at the end of a string.",
      "html": "<p><a href=\"js_2017.asp\">ECMAScript 2017</a> added two new string methods to JavaScript: <code>padStart()</code>\nand <code>padEnd()</code> to support padding at the beginning and at the end of a string.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript String padStart()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The padStart() method pads a string from the start.",
      "html": "<p>The <code>padStart()</code> method pads a string from the start.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It pads a string with another string (multiple times) until it reaches a given length.",
      "html": "<p>It pads a string with another string (multiple times) until it reaches a given length.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_padding1",
        "syntaxHighlighting": [
          {
            "text": "\nlet text = \"5\";\nlet padded = text.padStart(4,\"0\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"5\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "padStart",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"0\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text = \"5\";\nlet padded = text.padStart(4,\"0\");",
      "syntax_highlighting": [
        {
          "text": "\nlet text = \"5\";\nlet padded = text.padStart(4,\"0\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"5\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "padStart",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"0\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"5\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> padded = text.<span class=\"jspropertycolor\" style=\"color:black\">padStart</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">4</span>,<span class=\"jsstringcolor\" style=\"color:green\">\"0\"</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_padding1",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text = \"5\";\nlet padded = text.padStart(4,\"0\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"5\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "padStart",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"0\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Note",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The padStart() method is a string method.",
      "html": "<p>The <code>padStart()</code> method is a string method.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To pad a number, convert the number to a string first.",
      "html": "<p>To pad a number, convert the number to a string first.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "See the example below.",
      "html": "<p>See the example below.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_padding3",
        "syntaxHighlighting": [
          {
            "text": "\nlet numb = 5;\nlet text = numb.toString();\nlet padded = text.padStart(4,\"0\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "5",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "toString",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "padStart",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"0\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let numb = 5;\nlet text = numb.toString();\nlet padded = text.padStart(4,\"0\");",
      "syntax_highlighting": [
        {
          "text": "\nlet numb = 5;\nlet text = numb.toString();\nlet padded = text.padStart(4,\"0\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "5",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "toString",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "padStart",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"0\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> numb = <span class=\"jsnumbercolor\" style=\"color:#905\">5</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = numb.<span class=\"jspropertycolor\" style=\"color:black\">toString</span>();<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> padded = text.<span class=\"jspropertycolor\" style=\"color:black\">padStart</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">4</span>,<span class=\"jsstringcolor\" style=\"color:green\">\"0\"</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_padding3",
      "syntax_highlighting_data": [
        {
          "text": "\nlet numb = 5;\nlet text = numb.toString();\nlet padded = text.padStart(4,\"0\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "5",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "toString",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "padStart",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"0\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Browser Support",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "ECMAScript 2017",
          "href": "https://www.w3schools.com/js_2017.asp",
          "title": ""
        }
      ],
      "text": "padStart() is an ECMAScript 2017 feature.",
      "html": "<p><code>padStart()</code> is an <a href=\"js_2017.asp\">ECMAScript 2017</a> feature.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "ES2017 is supported in all modern browsers since September 2017:",
      "html": "<p>ES2017 is supported in all modern browsers since September 2017:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "browserref",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"browserref notranslate\">\n<tbody><tr style=\"height:60px\">\n<th class=\"bsChrome\" style=\"width:19.9%;\" title=\"Chrome\"></th>\n<th class=\"bsEdge\" style=\"width:19.9%;\" title=\"Edge\"></th>\n<th class=\"bsFirefox\" style=\"width:19.9%;\" title=\"Firefox\"></th>\n<th class=\"bsSafari\" style=\"width:19.9%;\" title=\"Safari\"></th>\n<th class=\"bsOpera\" style=\"width:19.9%;\" title=\"Opera\"></th>\n</tr>\n<tr>\n<td>Chrome 58</td>\n<td>Edge 15</td>\n<td>Firefox 52</td>\n<td>Safari 11</td>\n<td>Opera 45</td>\n</tr>\n<tr>\n<td>Apr 2017</td>\n<td>Apr 2017</td>\n<td>Mar 2017</td>\n<td>Sep 2017</td>\n<td>May 2017</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "browserref",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "browserref",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "padStart() is not supported in Internet Explorer.",
      "html": "<p><code>padStart()</code> is not supported in Internet Explorer.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript String padEnd()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The padEnd() method pads a string from the end.",
      "html": "<p>The <code>padEnd()</code> method pads a string from the end.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It pads a string with another string (multiple times) until it reaches a given length.",
      "html": "<p>It pads a string with another string (multiple times) until it reaches a given length.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_padding2",
        "syntaxHighlighting": [
          {
            "text": "\nlet text = \"5\";\nlet padded = text.padEnd(4,\"0\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"5\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "padEnd",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"0\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text = \"5\";\nlet padded = text.padEnd(4,\"0\");",
      "syntax_highlighting": [
        {
          "text": "\nlet text = \"5\";\nlet padded = text.padEnd(4,\"0\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"5\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "padEnd",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"0\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"5\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> padded = text.<span class=\"jspropertycolor\" style=\"color:black\">padEnd</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">4</span>,<span class=\"jsstringcolor\" style=\"color:green\">\"0\"</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_padding2",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text = \"5\";\nlet padded = text.padEnd(4,\"0\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"5\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "padEnd",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"0\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Note",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The padEnd() method is a string method.",
      "html": "<p>The <code>padEnd()</code> method is a string method.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To pad a number, convert the number to a string first.",
      "html": "<p>To pad a number, convert the number to a string first.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "See the example below.",
      "html": "<p>See the example below.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_padding5",
        "syntaxHighlighting": [
          {
            "text": "\nlet numb = 5;\nlet text = numb.toString();\nlet padded = text.padEnd(4,\"0\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "5",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "toString",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "padEnd",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"0\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let numb = 5;\nlet text = numb.toString();\nlet padded = text.padEnd(4,\"0\");",
      "syntax_highlighting": [
        {
          "text": "\nlet numb = 5;\nlet text = numb.toString();\nlet padded = text.padEnd(4,\"0\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "5",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "toString",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "padEnd",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"0\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> numb = <span class=\"jsnumbercolor\" style=\"color:#905\">5</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = numb.<span class=\"jspropertycolor\" style=\"color:black\">toString</span>();<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> padded = text.<span class=\"jspropertycolor\" style=\"color:black\">padEnd</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">4</span>,<span class=\"jsstringcolor\" style=\"color:green\">\"0\"</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_padding5",
      "syntax_highlighting_data": [
        {
          "text": "\nlet numb = 5;\nlet text = numb.toString();\nlet padded = text.padEnd(4,\"0\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "5",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "toString",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "padEnd",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"0\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Browser Support",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "ECMAScript 2017",
          "href": "https://www.w3schools.com/js_2017.asp",
          "title": ""
        }
      ],
      "text": "padEnd() is an ECMAScript 2017 feature.",
      "html": "<p><code>padEnd()</code> is an <a href=\"js_2017.asp\">ECMAScript 2017</a> feature.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "ES2017 is supported in all modern browsers since September 2017:",
      "html": "<p>ES2017 is supported in all modern browsers since September 2017:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "browserref",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"browserref notranslate\">\n<tbody><tr style=\"height:60px\">\n<th class=\"bsChrome\" style=\"width:19.9%;\" title=\"Chrome\"></th>\n<th class=\"bsEdge\" style=\"width:19.9%;\" title=\"Edge\"></th>\n<th class=\"bsFirefox\" style=\"width:19.9%;\" title=\"Firefox\"></th>\n<th class=\"bsSafari\" style=\"width:19.9%;\" title=\"Safari\"></th>\n<th class=\"bsOpera\" style=\"width:19.9%;\" title=\"Opera\"></th>\n</tr>\n<tr>\n<td>Chrome 58</td>\n<td>Edge 15</td>\n<td>Firefox 52</td>\n<td>Safari 11</td>\n<td>Opera 45</td>\n</tr>\n<tr>\n<td>Apr 2017</td>\n<td>Apr 2017</td>\n<td>Mar 2017</td>\n<td>Sep 2017</td>\n<td>May 2017</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "browserref",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "browserref",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "padEnd() is not supported in Internet Explorer.",
      "html": "<p><code>padEnd()</code> is not supported in Internet Explorer.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript String repeat()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The repeat() method returns a string with a number of copies of a string.",
      "html": "<p>The <code>repeat()</code> method returns a string with a number of copies of a string.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The repeat() method returns a new string.",
      "html": "<p>The <code>repeat()</code> method returns a new string.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The repeat() method does not change the original string.",
      "html": "<p>The <code>repeat()</code> method does not change the original string.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_repeat",
        "syntaxHighlighting": [
          {
            "text": "\nlet text = \"Hello world!\";\nlet result = text.repeat(2);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Hello world!\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "repeat",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text = \"Hello world!\";\nlet result = text.repeat(2);",
      "syntax_highlighting": [
        {
          "text": "\nlet text = \"Hello world!\";\nlet result = text.repeat(2);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Hello world!\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "repeat",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"Hello world!\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> result = text.<span class=\"jspropertycolor\" style=\"color:black\">repeat</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">2</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_repeat",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text = \"Hello world!\";\nlet result = text.repeat(2);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Hello world!\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "repeat",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Syntax",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate\"><div>\n<i>string</i>.repeat(<em>count</em>)</div></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Parameters",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr></tr>\n<tr>\n<td style=\"width:120px\">Parameter</td>\n<td>Description</td>\n</tr>\n<tr>\n<td><em>count</em></td><td>Required.<br/>\nThe number of copies wanted.</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Return Value",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Browser Support",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "ES6  feature",
          "href": "https://www.w3schools.com/js_es6.asp",
          "title": ""
        }
      ],
      "text": "repeat() is an ES6 feature (JavaScript 2015).",
      "html": "<p><code>repeat()</code> is an <a href=\"js_es6.asp\">ES6  feature</a> (JavaScript 2015).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "ES6 is fully supported in all modern browsers since June 2017:",
      "html": "<p>ES6 is fully supported in all modern browsers since June 2017:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "browserref",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"browserref notranslate\">\n<tbody><tr style=\"height:60px\">\n<th class=\"bsChrome\" style=\"width:20%;\" title=\"Chrome\"></th>\n<th class=\"bsEdge\" style=\"width:20%;\" title=\"Edge\"></th>\n<th class=\"bsFirefox\" style=\"width:20%;\" title=\"Firefox\"></th>\n<th class=\"bsSafari\" style=\"width:20%;\" title=\"Safari\"></th>\n<th class=\"bsOpera\" style=\"width:19.9%;\" title=\"Opera\"></th>\n</tr>\n<tr>\n<td>Chrome 51</td>\n<td>Edge 15</td>\n<td>Firefox 54</td>\n<td>Safari 10</td>\n<td>Opera 38</td>\n</tr>\n<tr>\n<td>May 2016</td>\n<td>Apr 2017</td>\n<td>Jun 2017</td>\n<td>Sep 2016</td>\n<td>Jun 2016</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "browserref",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "browserref",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "repeat() is not supported in Internet Explorer.",
      "html": "<p><code>repeat()</code> is not supported in Internet Explorer.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Replacing String Content",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The replace() method replaces a specified value with another value in a string:",
      "html": "<p>The <code>replace()</code> method replaces a specified value with another \nvalue in a string:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_replace",
        "syntaxHighlighting": [
          {
            "text": "\nlet text = \"Please visit Microsoft!\";\nlet newText = text.replace(\"Microsoft\", \"W3Schools\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Please visit Microsoft!\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "replace",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"Microsoft\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"W3Schools\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text = \"Please visit Microsoft!\";\nlet newText = text.replace(\"Microsoft\", \"W3Schools\");",
      "syntax_highlighting": [
        {
          "text": "\nlet text = \"Please visit Microsoft!\";\nlet newText = text.replace(\"Microsoft\", \"W3Schools\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Please visit Microsoft!\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "replace",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"Microsoft\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"W3Schools\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"Please visit Microsoft!\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> newText = text.<span class=\"jspropertycolor\" style=\"color:black\">replace</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"Microsoft\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"W3Schools\"</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_replace",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text = \"Please visit Microsoft!\";\nlet newText = text.replace(\"Microsoft\", \"W3Schools\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Please visit Microsoft!\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "replace",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"Microsoft\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"W3Schools\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Note",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The replace() method does not change the string it is called on.",
      "html": "<p>The <code>replace()</code> method does not change the string it is called on.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The replace() method returns a new string.",
      "html": "<p>The <code>replace()</code> method returns a new string.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The replace() method replaces only the first match",
      "html": "<p>The <code>replace()</code> method replaces <strong>only the first</strong> match</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you want to replace all matches, use a regular expression with the /g flag set. See examples below.",
      "html": "<p>If you want to replace all matches, use a regular expression with the /g flag set. See examples below.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "By default, the replace() method replaces only the first match:",
      "html": "<p>By default, the <code>replace()</code> method replaces <strong>only the first</strong> match:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_replace_first",
        "syntaxHighlighting": [
          {
            "text": "\nlet text = \"Please visit Microsoft and Microsoft!\";\nlet newText = text.replace(\"Microsoft\", \"W3Schools\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Please visit Microsoft and Microsoft!\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "replace",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"Microsoft\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"W3Schools\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text = \"Please visit Microsoft and Microsoft!\";\nlet newText = text.replace(\"Microsoft\", \"W3Schools\");",
      "syntax_highlighting": [
        {
          "text": "\nlet text = \"Please visit Microsoft and Microsoft!\";\nlet newText = text.replace(\"Microsoft\", \"W3Schools\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Please visit Microsoft and Microsoft!\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "replace",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"Microsoft\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"W3Schools\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"Please visit Microsoft and Microsoft!\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> newText = text.<span class=\"jspropertycolor\" style=\"color:black\">replace</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"Microsoft\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"W3Schools\"</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_replace_first",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text = \"Please visit Microsoft and Microsoft!\";\nlet newText = text.replace(\"Microsoft\", \"W3Schools\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Please visit Microsoft and Microsoft!\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "replace",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"Microsoft\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"W3Schools\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "By default, the replace() method is case sensitive. Writing MICROSOFT (with upper-case) will not work:",
      "html": "<p>By default, the <code>replace()</code> method is case sensitive. Writing MICROSOFT (with \nupper-case) will not work:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_replace_case",
        "syntaxHighlighting": [
          {
            "text": "\nlet text = \"Please visit Microsoft!\";\nlet newText = text.replace(\"MICROSOFT\", \"W3Schools\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Please visit Microsoft!\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "replace",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"MICROSOFT\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"W3Schools\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text = \"Please visit Microsoft!\";\nlet newText = text.replace(\"MICROSOFT\", \"W3Schools\");",
      "syntax_highlighting": [
        {
          "text": "\nlet text = \"Please visit Microsoft!\";\nlet newText = text.replace(\"MICROSOFT\", \"W3Schools\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Please visit Microsoft!\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "replace",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"MICROSOFT\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"W3Schools\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"Please visit Microsoft!\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> newText = text.<span class=\"jspropertycolor\" style=\"color:black\">replace</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"MICROSOFT\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"W3Schools\"</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_replace_case",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text = \"Please visit Microsoft!\";\nlet newText = text.replace(\"MICROSOFT\", \"W3Schools\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Please visit Microsoft!\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "replace",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"MICROSOFT\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"W3Schools\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To replace case insensitive, use a regular expression with an /i flag (insensitive):",
      "html": "<p>To replace case insensitive, use a <strong>regular expression</strong> with an <code>/i</code> flag (insensitive):</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_replace_insensitive",
        "syntaxHighlighting": [
          {
            "text": "\nlet text = \"Please visit Microsoft!\";\nlet newText = text.replace(/MICROSOFT/i, \"W3Schools\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Please visit Microsoft!\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "replace",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "/MICROSOFT/i",
            "color": "rgb(238, 153, 0)",
            "class": "jsregexpcolor"
          },
          {
            "text": "\"W3Schools\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text = \"Please visit Microsoft!\";\nlet newText = text.replace(/MICROSOFT/i, \"W3Schools\");",
      "syntax_highlighting": [
        {
          "text": "\nlet text = \"Please visit Microsoft!\";\nlet newText = text.replace(/MICROSOFT/i, \"W3Schools\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Please visit Microsoft!\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "replace",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "/MICROSOFT/i",
          "color": "#e90",
          "class": [
            "jsregexpcolor"
          ]
        },
        {
          "text": "\"W3Schools\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"Please visit Microsoft!\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> newText = text.<span class=\"jspropertycolor\" style=\"color:black\">replace</span>(<span class=\"jsregexpcolor\" style=\"color:#e90\">/MICROSOFT/i</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"W3Schools\"</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_replace_insensitive",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text = \"Please visit Microsoft!\";\nlet newText = text.replace(/MICROSOFT/i, \"W3Schools\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Please visit Microsoft!\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "replace",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "/MICROSOFT/i",
          "color": "rgb(238, 153, 0)",
          "class": "jsregexpcolor"
        },
        {
          "text": "\"W3Schools\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Note",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Regular expressions are written without quotes.",
      "html": "<p>Regular expressions are written without quotes.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To replace all matches, use a regular expression with a /g flag (global match):",
      "html": "<p>To replace all matches, use a <strong>regular expression</strong> with a <code>/g</code> flag (global match):</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_replace_global",
        "syntaxHighlighting": [
          {
            "text": "\nlet text = \"Please visit Microsoft and Microsoft!\";\nlet newText = text.replace(/Microsoft/g, \"W3Schools\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Please visit Microsoft and Microsoft!\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "replace",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "/Microsoft/g",
            "color": "rgb(238, 153, 0)",
            "class": "jsregexpcolor"
          },
          {
            "text": "\"W3Schools\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "let text = \"Please visit Microsoft and Microsoft!\";\nlet newText = text.replace(/Microsoft/g, \"W3Schools\");",
      "syntax_highlighting": [
        {
          "text": "\nlet text = \"Please visit Microsoft and Microsoft!\";\nlet newText = text.replace(/Microsoft/g, \"W3Schools\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Please visit Microsoft and Microsoft!\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "replace",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "/Microsoft/g",
          "color": "#e90",
          "class": [
            "jsregexpcolor"
          ]
        },
        {
          "text": "\"W3Schools\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> text = <span class=\"jsstringcolor\" style=\"color:green\">\"Please visit Microsoft and Microsoft!\"</span>;<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> newText = text.<span class=\"jspropertycolor\" style=\"color:black\">replace</span>(<span class=\"jsregexpcolor\" style=\"color:#e90\">/Microsoft/g</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"W3Schools\"</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_replace_global",
      "syntax_highlighting_data": [
        {
          "text": "\nlet text = \"Please visit Microsoft and Microsoft!\";\nlet newText = text.replace(/Microsoft/g, \"W3Schools\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Please visit Microsoft and Microsoft!\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "replace",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "/Microsoft/g",
          "color": "rgb(238, 153, 0)",
          "class": "jsregexpcolor"
        },
        {
          "text": "\"W3Schools\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Note",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "JavaScript Regular \nExpressions",
          "href": "https://www.w3schools.com/js_regexp.asp",
          "title": ""
        }
      ],
      "text": "You will learn a lot more about regular expressions in the chapter JavaScript Regular Expressions .",
      "html": "<p>You will learn a lot more about regular expressions in the chapter <a href=\"js_regexp.asp\">JavaScript Regular \nExpressions</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript String ReplaceAll()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In 2021, JavaScript introduced the string method replaceAll() :",
      "html": "<p>In 2021, JavaScript introduced the string method <code>replaceAll()</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_replaceall",
        "syntaxHighlighting": [
          {
            "text": "\ntext = text.replaceAll(\"Cats\",\"Dogs\");\ntext = text.replaceAll(\"cats\",\"dogs\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "replaceAll",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"Cats\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Dogs\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "replaceAll",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"cats\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"dogs\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "text = text.replaceAll(\"Cats\",\"Dogs\");\ntext = text.replaceAll(\"cats\",\"dogs\");",
      "syntax_highlighting": [
        {
          "text": "\ntext = text.replaceAll(\"Cats\",\"Dogs\");\ntext = text.replaceAll(\"cats\",\"dogs\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "replaceAll",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"Cats\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Dogs\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "replaceAll",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"cats\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"dogs\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\ntext = text.<span class=\"jspropertycolor\" style=\"color:black\">replaceAll</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"Cats\"</span>,<span class=\"jsstringcolor\" style=\"color:green\">\"Dogs\"</span>);<br/>\ntext = text.<span class=\"jspropertycolor\" style=\"color:black\">replaceAll</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"cats\"</span>,<span class=\"jsstringcolor\" style=\"color:green\">\"dogs\"</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_replaceall",
      "syntax_highlighting_data": [
        {
          "text": "\ntext = text.replaceAll(\"Cats\",\"Dogs\");\ntext = text.replaceAll(\"cats\",\"dogs\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "replaceAll",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"Cats\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Dogs\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "replaceAll",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"cats\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"dogs\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The replaceAll() method allows you to specify a regular expression instead of a string to be replaced.",
      "html": "<p>The <code>replaceAll()</code> method allows you to specify a\nregular expression instead of a string to be replaced.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the parameter is a regular expression, the global flag (g) must be set, otherwise a TypeError is thrown.",
      "html": "<p>If the parameter is a regular expression, the global flag (g) must be set, otherwise\na TypeError is thrown.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_replaceall2",
        "syntaxHighlighting": [
          {
            "text": "\ntext = text.replaceAll(/Cats/g,\"Dogs\");\ntext = text.replaceAll(/cats/g,\"dogs\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "replaceAll",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "/Cats/g",
            "color": "rgb(238, 153, 0)",
            "class": "jsregexpcolor"
          },
          {
            "text": "\"Dogs\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "replaceAll",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "/cats/g",
            "color": "rgb(238, 153, 0)",
            "class": "jsregexpcolor"
          },
          {
            "text": "\"dogs\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "text = text.replaceAll(/Cats/g,\"Dogs\");\ntext = text.replaceAll(/cats/g,\"dogs\");",
      "syntax_highlighting": [
        {
          "text": "\ntext = text.replaceAll(/Cats/g,\"Dogs\");\ntext = text.replaceAll(/cats/g,\"dogs\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "replaceAll",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "/Cats/g",
          "color": "#e90",
          "class": [
            "jsregexpcolor"
          ]
        },
        {
          "text": "\"Dogs\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "replaceAll",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "/cats/g",
          "color": "#e90",
          "class": [
            "jsregexpcolor"
          ]
        },
        {
          "text": "\"dogs\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\ntext = text.<span class=\"jspropertycolor\" style=\"color:black\">replaceAll</span>(<span class=\"jsregexpcolor\" style=\"color:#e90\">/Cats/g</span>,<span class=\"jsstringcolor\" style=\"color:green\">\"Dogs\"</span>);<br/>\ntext = text.<span class=\"jspropertycolor\" style=\"color:black\">replaceAll</span>(<span class=\"jsregexpcolor\" style=\"color:#e90\">/cats/g</span>,<span class=\"jsstringcolor\" style=\"color:green\">\"dogs\"</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_replaceall2",
      "syntax_highlighting_data": [
        {
          "text": "\ntext = text.replaceAll(/Cats/g,\"Dogs\");\ntext = text.replaceAll(/cats/g,\"dogs\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "replaceAll",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "/Cats/g",
          "color": "rgb(238, 153, 0)",
          "class": "jsregexpcolor"
        },
        {
          "text": "\"Dogs\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "replaceAll",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "/cats/g",
          "color": "rgb(238, 153, 0)",
          "class": "jsregexpcolor"
        },
        {
          "text": "\"dogs\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Note",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "ES2021",
          "href": "https://www.w3schools.com/js_2021.asp",
          "title": ""
        }
      ],
      "text": "replaceAll() is an ES2021 feature.",
      "html": "<p><code>replaceAll()</code> is an <a href=\"js_2021.asp\">ES2021</a> feature.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "replaceAll() does not work in Internet Explorer.",
      "html": "<p><code>replaceAll()</code> does not work in Internet Explorer.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Converting a String to an Array",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you want to work with a string as an array, you can convert it to an array.",
      "html": "<p>If you want to work with a string as an array, you can convert it to an array.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "JavaScript String split()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A string can be converted to an array with the split() method:",
      "html": "<p>A string can be converted to an array with the <code>split()</code> method:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_split",
        "syntaxHighlighting": [
          {
            "text": "\ntext.split(\",\")\u00a0\u00a0\u00a0\u00a0// Split on commas\ntext.split(\" \")\u00a0\u00a0\u00a0\u00a0// Split on spaces\ntext.split(\"|\")\u00a0\u00a0\u00a0\u00a0// Split on pipe\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "split",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\",\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// Split on commas",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "split",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\" \"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// Split on spaces",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "split",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"|\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// Split on pipe\n ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "text.split(\",\")\u00a0\u00a0\u00a0\u00a0// Split on commas\ntext.split(\" \")\u00a0\u00a0\u00a0\u00a0// Split on spaces\ntext.split(\"|\")\u00a0\u00a0\u00a0\u00a0// Split on pipe",
      "syntax_highlighting": [
        {
          "text": "\ntext.split(\",\")\u00a0\u00a0\u00a0\u00a0// Split on commas\ntext.split(\" \")\u00a0\u00a0\u00a0\u00a0// Split on spaces\ntext.split(\"|\")\u00a0\u00a0\u00a0\u00a0// Split on pipe\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "split",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\",\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// Split on commas",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "split",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\" \"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// Split on spaces",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "split",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"|\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// Split on pipe\n ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\ntext.<span class=\"jspropertycolor\" style=\"color:black\">split</span>(<span class=\"jsstringcolor\" style=\"color:green\">\",\"</span>)\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// Split on commas<br/></span>\ntext.<span class=\"jspropertycolor\" style=\"color:black\">split</span>(<span class=\"jsstringcolor\" style=\"color:green\">\" \"</span>)\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// Split on spaces<br/></span>\ntext.<span class=\"jspropertycolor\" style=\"color:black\">split</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"|\"</span>)\u00a0\u00a0\u00a0\u00a0<span class=\"commentcolor\" style=\"color:slategray\">// Split on pipe\n </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_split",
      "syntax_highlighting_data": [
        {
          "text": "\ntext.split(\",\")\u00a0\u00a0\u00a0\u00a0// Split on commas\ntext.split(\" \")\u00a0\u00a0\u00a0\u00a0// Split on spaces\ntext.split(\"|\")\u00a0\u00a0\u00a0\u00a0// Split on pipe\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "split",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\",\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// Split on commas",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "split",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\" \"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// Split on spaces",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "split",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"|\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// Split on pipe\n ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the separator is omitted, the returned array will contain the whole string in index [0].",
      "html": "<p>If the separator is omitted, the returned array will contain the whole string \nin index [0].</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the separator is \"\", the returned array will be an array of single characters:",
      "html": "<p>If the separator is \"\", the returned array will be an array of single \ncharacters:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_split_char",
        "syntaxHighlighting": [
          {
            "text": "\ntext.split(\"\")\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "split",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "text.split(\"\")",
      "syntax_highlighting": [
        {
          "text": "\ntext.split(\"\")\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "split",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\ntext.<span class=\"jspropertycolor\" style=\"color:black\">split</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"\"</span>)<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/js/tryit.asp?filename=tryjs_string_split_char",
      "syntax_highlighting_data": [
        {
          "text": "\ntext.split(\"\")\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "split",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Complete String Reference",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "For a complete String reference, go to our:",
      "html": "<p>For a complete String reference, go to our:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Complete JavaScript String Reference",
          "href": "https://www.w3schools.com/jsref/jsref_obj_string.asp",
          "title": ""
        }
      ],
      "text": "Complete JavaScript String Reference .",
      "html": "<p><a href=\"/jsref/jsref_obj_string.asp\">Complete JavaScript String Reference</a>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The reference contains descriptions and examples of all string properties and methods.",
      "html": "<p>The reference contains descriptions and examples of all string properties and methods.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Consider the following string: let x = 'Having fun?'; Which one of the following statements returns 'fun'?",
      "html": "<p>Consider the following string:<br/><code class=\"codeblock\">let x = 'Having fun?';</code><br/>Which one of the following statements returns 'fun'?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "Consider the following string:let x = 'Having fun?';Which one of the following statements returns 'fun'?",
        "options": [
          {
            "value": "0",
            "text": "x.slice(7, 10)"
          },
          {
            "value": "1",
            "text": "x.substring(7, 9)"
          },
          {
            "value": "2",
            "text": "x.substr(7, 10)"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_string_methods1"
      },
      "quiz_type": "quiz",
      "question": "Consider the following string:let x = 'Having fun?';Which one of the following statements returns 'fun'?",
      "options": [
        {
          "value": "0",
          "text": "x.slice(7, 10)"
        },
        {
          "value": "1",
          "text": "x.substring(7, 9)"
        },
        {
          "value": "2",
          "text": "x.substr(7, 10)"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_string_methods1",
      "html": "<form action=\"exercise.asp?x=xrcise_string_methods1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\"><code>x.slice(7, 10)</code></label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\"><code>x.substring(7, 9)</code></label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\"><code>x.substr(7, 10)</code></label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}