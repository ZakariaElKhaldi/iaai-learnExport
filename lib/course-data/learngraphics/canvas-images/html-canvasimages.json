{
  "id": "ba393bb2-ea74-42e8-a6be-81568ee324cd",
  "title": "HTML CanvasImages",
  "slug": "html-canvasimages",
  "metadata": {
    "description": "Learn about HTML CanvasImages with clear explanations and practical examples.",
    "keywords": [
      "c",
      "image",
      "canvas",
      "drawimage",
      "source",
      "const",
      "dwidth",
      "dheight",
      "draw",
      "script",
      "document"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnGraphics",
    "subcategory": "Canvas Images"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "HTML Canvas\nImages",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "HTML Canvas - Draw Image\nThe\ndrawImage()\nmethod draws an image onto \nthe canvas.\nThe\ndrawImage()\nmethod can be used with three different syntaxes:\ndrawImage(image, dx, dy)\ndrawImage(image, dx, dy, dwidth, dheight)\ndrawImage(image, sx, sy, swidth, sheight, dx, dy, dwidth, dheight)\nThe examples below explain the three different syntaxes.\ndrawImage(image, dx, dy)\nThe\ndrawImage(image, dx, dy)\nsyntax positions the image on the canvas.\nExample\nDraw image in position (10, 10) on the canvas:\nYour browser does not support the HTML5 canvas tag.\n<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = \n  canvas.getContext(\"2d\");\nconst image = document.getElementById(\"scream\");\nimage.addEventListener(\"load\", (e) => {\nctx.drawImage(image, 10, \n  10);\n});\n</script>\n\ndrawImage(image, dx, dy, dwidth, dheight)\nThe\ndrawImage(image, dx, dy, dwidth, dheight)\nsyntax positions the image on the canvas, and specifies \nthe width and height of the image on the canvas.\nExample\nDraw image in position (10, 10) on the canvas, with a width and height of 80 \npixels:\nYour browser does not support the HTML5 canvas tag.\n<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = \n  canvas.getContext(\"2d\");\nconst image = document.getElementById(\"scream\");\nimage.addEventListener(\"load\", (e) => {\nctx.drawImage(image, 10, \n  10, 80, 80);\n});\n</script>\n\ndrawImage(image, sx, sy, swidth, sheight, dx, dy, dwidth, dheight)\nThe\ndrawImage(image, sx, sy, swidth, sheight, dx, dy, dwidth, dheight)\nsyntax \nis used to clip the source image, before it is placed on the canvas.\nExample\nHere we clip the source image from position (90, 130), with a width of 50 and \na height of 60, and then position the clipped part on the canvas in position (10, 10), with a width and height of \n150 and 160 pixels (so the clipped source image will also be scaled/stretched:\nYour browser does not support the HTML5 canvas tag.\n<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = \n  canvas.getContext(\"2d\");\nconst image = document.getElementById(\"scream\");\nimage.addEventListener(\"load\", (e) => {\nctx.drawImage(image, \n  90, 130, 50, 60, 10, 10, 150, 160);\n});\n</script>\n\nHere are the parameters of the\ndrawImage()\nmethod:\nParameter\nDescription\nimage\nRequired. The image to draw into the context\nsx\nOptional. The x-coordinate of the top-left corner of the source image \n    (for clipping the source image)\nsy\nOptional. The y-coordinate of the top-left corner of the source image \n    (for clipping the source image)\nswidth\nOptional. The width of the clipping of the source image, in pixels\nsheight\nOptional. The height of the clipping of the source image, in pixels\ndx\nThe x-coordinate in the canvas where to place the top-left corner of the \n    source image\ndy\nThe y-coordinate in the canvas where to place the top-left corner of the \n    source image\ndwidth\nOptional. The width to draw the image in the destination canvas. This allows \n    scaling of the image\ndheight\nOptional. The height to draw the image in the destination canvas. This allows \n    scaling of the image\nSee Also:\n' Full Canvas Reference\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = \n  canvas.getContext(\"2d\");\nconst image = document.getElementById(\"scream\");\nimage.addEventListener(\"load\", (e) => {\nctx.drawImage(image, 10, \n  10);\n});\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = \n  canvas.getContext(\"2d\");\nconst image = document.getElementById(\"scream\");\nimage.addEventListener(\"load\", (e) => {\nctx.drawImage(image, 10, \n  10, 80, 80);\n});\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = \n  canvas.getContext(\"2d\");\nconst image = document.getElementById(\"scream\");\nimage.addEventListener(\"load\", (e) => {\nctx.drawImage(image, \n  90, 130, 50, 60, 10, 10, 150, 160);\n});\n</script>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<script>\n# TODO: Complete this line\nconst ctx = \n  canvas.getContext(\"2d\");\nconst image = document.getElementById(\"scream\");\nimage.addEventListener(\"load\", (e) => {\nctx.drawImage(image, 10, \n  10);\n});\n</script>",
      "solution": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = \n  canvas.getContext(\"2d\");\nconst image = document.getElementById(\"scream\");\nimage.addEventListener(\"load\", (e) => {\nctx.drawImage(image, 10, \n  10);\n});\n</script>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<script>\n# TODO: Complete this line\nconst ctx = \n  canvas.getContext(\"2d\");\nconst image = document.getElementById(\"scream\");\nimage.addEventListener(\"load\", (e) => {\nctx.drawImage(image, 10, \n  10, 80, 80);\n});\n</script>",
      "solution": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = \n  canvas.getContext(\"2d\");\nconst image = document.getElementById(\"scream\");\nimage.addEventListener(\"load\", (e) => {\nctx.drawImage(image, 10, \n  10, 80, 80);\n});\n</script>"
    }
  ],
  "related_topics": [
    {
      "id": "4f8047a6-f9bf-4a6b-876b-75f36464450e",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "95038ec8-894b-45fb-9d6e-79efb313e073",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "c03f263d-9fe4-4da1-9c26-a104579520fa",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is syntax?",
      "options": [
        "the parameters of the\ndrawImage()\nmethod:\nParameter\nDescription\nimage\nRequired",
        "used to clip the source image",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of syntax is 'used to clip the source image'."
    },
    {
      "question": "What is Here?",
      "options": [
        "the parameters of the\ndrawImage()\nmethod:\nParameter\nDescription\nimage\nRequired",
        "used to clip the source image",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of Here is 'the parameters of the\ndrawImage()\nmethod:\nParameter\nDescription\nimage\nRequired'."
    }
  ],
  "summary": "This tutorial covers HTML CanvasImages concepts and techniques. You'll learn how to use HTML CanvasImages effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of HTML CanvasImages and how to apply it in your projects."
}