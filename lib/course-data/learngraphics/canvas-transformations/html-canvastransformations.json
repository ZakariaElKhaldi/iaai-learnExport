{
  "id": "3574023b-bea0-4d9b-b065-ed95d9819376",
  "title": "HTML CanvasTransformations",
  "slug": "html-canvastransformations",
  "metadata": {
    "description": "Learn about HTML CanvasTransformations with clear explanations and practical examples.",
    "keywords": [
      "c",
      "canvas",
      "rectangle",
      "method",
      "script",
      "const",
      "draw",
      "translate",
      "transformation",
      "scale",
      "fillstyle"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 6,
    "category": "LearnGraphics",
    "subcategory": "Canvas Transformations"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "HTML Canvas\nTransformations",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "HTML Canvas Transformations\nWith transformations we can translate the origin to \na different position, rotate and scale it.\nThe six methods for transformations are:\ntranslate()\n- moves elements on the canvas to a new point in the grid\nrotate()\n- rotates elements on the canvas clockwise or counter-clockwise\nscale()\n- scales elements on the canvas up or down\ntransform()\n- multiplies the current transformation with the arguments described\nresetTransform()\n- resets the the current transformation to the identity matrix\nsetTransform()\n- resets the the current transformation to the identity matrix, and then runs a transformation \n  described by the arguments\nThe translate() Method\nThe\ntranslate()\nmethod is used to move an object/element by\nx\nand\ny\n.\nThe\ntranslate()\nmethod has the following parameters:\nParameter\nDescription\nx\nDistance to move in horizontal direction (left and right)\ny\nDistance to move in vertical direction (up and down)\nAssume one object is placed in position (10,10). Then, we use translate(70,70). \nThe \nsecond object will be placed at x-position 80 (70 + 10) and at y-position 80 (70 + 10).\nLet's look at some examples:\nExample\nFirst, draw one rectangle in position (10,10), then set translate() to (70,70) (This \nwill be the new start point). Then draw another rectangle in position (10,10). Notice that the \nsecond rectangle \nnow starts in position (80,80):\nYour browser does not support the HTML5 canvas tag.\n<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"red\";\nctx.fillRect(10, 10, 100, 50);\nctx.translate(70, 70);\nctx.fillStyle = \"blue\";\nctx.fillRect(10, 10, 100, 50);\n</script>\n\nExample\nFirst, draw one rectangle in position (10,10), then set translate() to (70,70) (This \nwill be the new start point). Then draw another rectangle in position (10,10). Notice that the \nsecond rectangle \nnow starts in position (80,80) (70+10, 70+10). Then set translate() to (80,-65) (This will be \nthe new start point). Then draw a third rectangle in position (10,10). Notice \nthat the third rectangle now starts in position (160,15) (80+80, 80-65). Notice \nthat each time you call translate(), it builds on the \nYour browser does not support the HTML5 canvas tag.\n<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"red\";\nctx.fillRect(10, 10, 100, 50);\nctx.translate(70, 70);\nctx.fillStyle = \"blue\";\nctx.fillRect(10, 10, 100, 50);\nctx.translate(80, -65);\nctx.fillStyle = \"yellow\";\nctx.fillRect(10, \n  10, 100, 50);\n</script>\n\nThe rotate() Method\nThe\nrotate()\nmethod rotates a shape by an angle.\nThe\nrotate()\nmethod has the following parameter:\nParameter\nDescription\nangle\nThe rotation angle (clockwise)\nTip:\nAngles are in radians, not degrees. Use\n(Math.PI/180)*degree\nto convert.\nExample\nRotate the rectangle by 20 degrees:\nYour browser does not support the HTML5 canvas tag.\n<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.rotate((Math.PI/180)*20);\nctx.fillStyle = \"red\";\nctx.fillRect(50, 10, 100, 50);\n</script>\n\nExample\nHere we add one more rectangle. Both the rectangles will be rotated by 20 degrees:\nYour browser does not support the HTML5 canvas tag.\n<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.rotate((Math.PI/180)*20);\nctx.fillStyle = \"red\";\nctx.fillRect(50, 10, 100, 50);\nctx.strokeStyle = \"blue\";\nctx.strokeRect(70, 30, 100, 50);\n</script>\n\nThe scale() Method\nThe\nscale()\nmethod scales elements on the \ncanvas up or down.\nThe\nscale()\nmethod has the following parameters:\nParameter\nDescription\nx\nHorizontal scaling factor (the width)\ny\nVertical scaling factor (the height)\nOne unit on the canvas is one pixel. If we set the scaling factor to 2, one unit becomes two pixels, \nand shapes will be drawn twice as large. If we set a scaling factor to 0.5, one unit becomes \n0.5 pixels, and shapes will be drawn at half size.\nExample\nDraw a rectangle. Scale to 200%, then draw a new rectangle:\nYour browser does not support the HTML5 canvas tag.\n<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.strokeRect(5, 5, 25, \n  25);\nctx.scale(2, 2);\nctx.strokeStyle = \"blue\";\nctx.strokeRect(5, 5, 25, 25);\n</script>\n\nExample\nDraw a rectangle. Scale to 50%, then draw a new rectangle:\nYour browser does not support the HTML5 canvas tag.\n<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.strokeRect(15, 15, 25, \n  25);\nctx.scale(0.5, 0.5);\nctx.strokeStyle = \"blue\";\nctx.strokeRect(15, 15, 25, 25);\n</script>\n\nExample\nDraw a rectangle. Scale width to 200% and height to 300%, then draw a new rectangle:\nYour browser does not support the HTML5 canvas tag.\n<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.strokeRect(5, 5, 25, \n  25);\nctx.scale(2, 3);\nctx.strokeStyle = \"blue\";\nctx.strokeRect(5, 5, 25, 25);\n</script>\n\nThe transform() Method\nThe\ntransform()\nmethod multiplies the \ncurrent transformation with the matrix described by the arguments of this \nmethod. This lets you scale, rotate, translate (move), and skew the context.\nThe\ntransform()\nmethod replaces the \ntransformation matrix, and multiplies it with a matrix described by:\na c e\nb d f\n0 0 1\nThe\ntransform()\nmethod has the following parameters:\nParameter\nDescription\na\nHorizontal scaling\nb\nHorizontal skewing\nc\nVertically skewing\nd\nVertically scaling\ne\nHorizontal moving\nf\nVertically moving\nExample\nDraw a yellow rectangle, run new transformation matrix with\ntransform()\n. \nDraw a red \nrectangle, run new transformation matrix, then draw a blue rectangle. \nNotice that each time you call\ntransform()\n, it builds on the \ntransformation matrix:\nYour browser does not support the HTML5 canvas tag.\n<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"yellow\";\nctx.fillRect(10, 10, 200, 100)\nctx.transform(1, 0.5, -0.5, 1, 30, 10);\nctx.fillStyle = \"red\";\nctx.fillRect(10, 10, 200, 100);\nctx.transform(1, 0.5, -0.5, 1, 30, 10);\nctx.fillStyle = \"blue\";\nctx.fillRect(10, 10, 200, 100);\n</script>\n\nThe resetTransform() Method\nThe\nresetTransform()\nmethod resets the current \ntransformation to the identity matrix.\nThis is equal to calling:\nctx.setTransform(1,0,0,1,0,0)\n.\nThe setTransform() Method\nThe\nsetTransform()\nmethod resets the current \ntransformation to the identity matrix, and then runs a transformation \ndescribed by the arguments. This lets you scale, rotate, \ntranslate (move), and skew the context.\nThe\nsetTransform()\nmethod has the following parameters:\nParameter\nDescription\na\nHorizontal scaling\nb\nHorizontal skewing\nc\nVertically skewing\nd\nVertically scaling\ne\nHorizontal moving\nf\nVertically moving\nExample\nDraw a yellow rectangle, reset and run new transformation matrix with\nsetTransform()\n. \nDraw a red \nrectangle, reset and run a new transformation matrix, then draw a blue rectangle. \nNotice that in this example, the red rectangle is not shown because it is under \nthe blue rectangle:\nYour browser does not support the HTML5 canvas tag.\n<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"yellow\";\nctx.fillRect(10, 10, 200, 100)\nctx.setTransform(1, 0.5, -0.5, 1, 30, 10);\nctx.fillStyle = \"red\";\nctx.fillRect(10, 10, 200, 100);\nctx.setTransform(1, 0.5, -0.5, 1, 30, 10);\nctx.fillStyle = \"blue\";\nctx.fillRect(10, 10, 200, 100);\n</script>\n\nSee Also:\n' Full Canvas Reference\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"red\";\nctx.fillRect(10, 10, 100, 50);\nctx.translate(70, 70);\nctx.fillStyle = \"blue\";\nctx.fillRect(10, 10, 100, 50);\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"red\";\nctx.fillRect(10, 10, 100, 50);\nctx.translate(70, 70);\nctx.fillStyle = \"blue\";\nctx.fillRect(10, 10, 100, 50);\nctx.translate(80, -65);\nctx.fillStyle = \"yellow\";\nctx.fillRect(10, \n  10, 100, 50);\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.rotate((Math.PI/180)*20);\nctx.fillStyle = \"red\";\nctx.fillRect(50, 10, 100, 50);\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.rotate((Math.PI/180)*20);\nctx.fillStyle = \"red\";\nctx.fillRect(50, 10, 100, 50);\nctx.strokeStyle = \"blue\";\nctx.strokeRect(70, 30, 100, 50);\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.strokeRect(5, 5, 25, \n  25);\nctx.scale(2, 2);\nctx.strokeStyle = \"blue\";\nctx.strokeRect(5, 5, 25, 25);\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.strokeRect(15, 15, 25, \n  25);\nctx.scale(0.5, 0.5);\nctx.strokeStyle = \"blue\";\nctx.strokeRect(15, 15, 25, 25);\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.strokeRect(5, 5, 25, \n  25);\nctx.scale(2, 3);\nctx.strokeStyle = \"blue\";\nctx.strokeRect(5, 5, 25, 25);\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"yellow\";\nctx.fillRect(10, 10, 200, 100)\nctx.transform(1, 0.5, -0.5, 1, 30, 10);\nctx.fillStyle = \"red\";\nctx.fillRect(10, 10, 200, 100);\nctx.transform(1, 0.5, -0.5, 1, 30, 10);\nctx.fillStyle = \"blue\";\nctx.fillRect(10, 10, 200, 100);\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"yellow\";\nctx.fillRect(10, 10, 200, 100)\nctx.setTransform(1, 0.5, -0.5, 1, 30, 10);\nctx.fillStyle = \"red\";\nctx.fillRect(10, 10, 200, 100);\nctx.setTransform(1, 0.5, -0.5, 1, 30, 10);\nctx.fillStyle = \"blue\";\nctx.fillRect(10, 10, 200, 100);\n</script>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<script>\n# TODO: Complete this line\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"red\";\nctx.fillRect(10, 10, 100, 50);\nctx.translate(70, 70);\nctx.fillStyle = \"blue\";\nctx.fillRect(10, 10, 100, 50);\n</script>",
      "solution": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"red\";\nctx.fillRect(10, 10, 100, 50);\nctx.translate(70, 70);\nctx.fillStyle = \"blue\";\nctx.fillRect(10, 10, 100, 50);\n</script>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"red\";\nctx.fillRect(10, 10, 100, 50);\nctx.translate(70, 70);\nctx.fillStyle = \"blue\";\n# TODO: Complete this line\nctx.translate(80, -65);\nctx.fillStyle = \"yellow\";\nctx.fillRect(10, \n  10, 100, 50);\n</script>",
      "solution": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"red\";\nctx.fillRect(10, 10, 100, 50);\nctx.translate(70, 70);\nctx.fillStyle = \"blue\";\nctx.fillRect(10, 10, 100, 50);\nctx.translate(80, -65);\nctx.fillStyle = \"yellow\";\nctx.fillRect(10, \n  10, 100, 50);\n</script>"
    }
  ],
  "related_topics": [
    {
      "id": "97160d8c-5314-4a2d-944e-f08d9c00186d",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "ed0c45b3-6f3c-4b94-a5c1-8438975a09d4",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "6b0ce6b3-b7b7-46ce-8795-881cae91fb70",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is method?",
      "options": [
        "used to move an object/element by\nx\nand\ny",
        "None of the above.",
        "placed in position (10",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of method is 'used to move an object/element by\nx\nand\ny'."
    },
    {
      "question": "What is Assume one object?",
      "options": [
        "None of the above.",
        "None of the above.",
        "used to move an object/element by\nx\nand\ny",
        "placed in position (10"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Assume one object is 'placed in position (10'."
    }
  ],
  "summary": "This tutorial covers HTML CanvasTransformations concepts and techniques. You'll learn how to use HTML CanvasTransformations effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of HTML CanvasTransformations and how to apply it in your projects."
}