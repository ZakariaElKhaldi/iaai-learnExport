{
  "id": "b6e35894-cd34-49d0-bd84-9b72e5110648",
  "title": "CanvasClock Start",
  "slug": "canvasclock-start",
  "metadata": {
    "description": "Learn about CanvasClock Start with clear explanations and practical examples.",
    "keywords": [
      "c",
      "canvas",
      "drawclock",
      "clock",
      "radius",
      "start",
      "intervals",
      "call",
      "function",
      "const",
      "setinterval"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnGraphics",
    "subcategory": "Clock Start"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Canvas\nClock Start",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "In these chapters we build an analog clock using HTML Canvas.\nPart V - Start the Clock\nTo start the clock, call the drawClock function at intervals:\nJavaScript:\nconst canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nlet radius = canvas.height / 2;\nctx.translate(radius, radius);\nradius = radius * 0.90\n//drawClock();\nsetInterval(drawClock, 1000);\n\nExample Explained\nThe only thing you have to do (to start the clock) is to call the drawClock \nfunction at intervals.\nSubstitute:\ndrawClock();\nWith:\nsetInterval(drawClock, 1000);\nNote\nIntervals are in milliseconds. drawClock() will be called for each 1000 \nmilliseconds.\nSee Also:\n' Full Canvas Reference\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "JavaScript:",
      "content": "",
      "order": 3,
      "code": "const canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nlet radius = canvas.height / 2;\nctx.translate(radius, radius);\nradius = radius * 0.90\n//drawClock();\nsetInterval(drawClock, 1000);",
      "language": "javascript",
      "explanation": "Example of javascript:"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "drawClock();",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "setInterval(drawClock, 1000);",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "const canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nlet radius = canvas.height / 2;\nctx.translate(radius, radius);\nradius = radius * 0.90\n//drawClock();\n# TODO: Complete this line",
      "solution": "const canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nlet radius = canvas.height / 2;\nctx.translate(radius, radius);\nradius = radius * 0.90\n//drawClock();\nsetInterval(drawClock, 1000);"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "drawClock();"
    }
  ],
  "related_topics": [
    {
      "id": "8370dc09-df55-4822-8553-86373e21d304",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "a4d33e6e-d2b7-4e0b-b35c-22db7cc9b557",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "66d45bed-7d31-45f1-a7ea-c9d93191e8ee",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Note\nIntervals?",
      "options": [
        "None of the above.",
        "in milliseconds",
        "Not a Note\nIntervals.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Note\nIntervals is 'in milliseconds'."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers CanvasClock Start concepts and techniques. You'll learn how to use CanvasClock Start effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of CanvasClock Start and how to apply it in your projects."
}