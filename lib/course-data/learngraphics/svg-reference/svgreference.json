{
  "id": "4d895147-3e34-4d91-a770-fe33f8691eb3",
  "title": "SVGReference",
  "slug": "svgreference",
  "metadata": {
    "description": "Learn about SVGReference with clear explanations and practical examples.",
    "keywords": [
      "default",
      "filter",
      "examples",
      "text",
      "position",
      "width",
      "element",
      "primitive",
      "height",
      "gradient"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 13,
    "category": "LearnGraphics",
    "subcategory": "SVG Reference"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "SVG\nReference",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "SVG Elements\nElement\nDescription\nAttributes\nTutorial\n<a>\nCreates a hyperlink around an element\nhref=\"The URL to go to\"\ndownload=\"Tells the browser to download the \n    URL instead of go to it\"\nhreflang=\"The language of the page the link \n    points to\"\nreferrerpolicy=\"The referrer to send when fetching the URL\"\nrel=\"The relationship of the target object to the link object\"\ntarget=\"Where to open the link. Can be _self, _parent, _top, _blank, or a \n    name\"\ntype=\"The MIME type for the linked URL\"\nExamples\n<animate>\nAnimates an attribute of an element over time\nattributeName=\"name of target attribute\"\nby=\"a relative offset value\"\nfrom=\"starting value\"\nto=\"ending value\"\ndur=\"the duration\"\nrepeatCount=\"the number of time the animation will take place\"\nExamples\n<animateMotion>\nSets how an element moves along a motion path\ncalcMode=\"the interpolation mode for the animation. Can be 'discrete', 'linear', 'paced', 'spline'\"\npath=\"the motion path\"\nkeyPoints=\"how far along the motion path the object shall move at the moment in time\"\nrotate=\"applies a rotation transformation\"\nExamples\n<animateTransform>\nAnimates a transformation attribute on the target element\nby=\"a relative offset value\"\nfrom=\"the starting value\"\nto=\"the ending value\"\ntype=\"the type of transformation which is to have its values change over time. Can be 'translate', 'scale', 'rotate', 'skewX', 'skewY'\"\nExamples\n<circle>\nDefines a circle\nr=\"The radius of the circle\". Required\ncx=\"the x-axis center of the circle\"\ncy=\"the y-axis center of the circle\"\nExamples\n<clipPath>\nSpecifies a clipping path, to be used by the clip-path property\nclipPathUnits=\"'userSpaceOnUse' or 'objectBoundingBox'. The second value makes units of children a fraction of the object bounding box which uses the mask (default: 'userSpaceOnUse')\"\nExamples\n<defs>\nA container for referenced elements\n<desc>\nA text-only description for container elements or graphic elements\n<ellipse>\nDefines an ellipse\nrx=\"the x radius of the ellipse\". Required.\nry=\"the y radius of the ellipse\". Required.\ncx=\"the x-axis center of the ellipse\"\ncy=\"the y-axis center of the ellipse\"\nExamples\n<feBlend>\nSVG filter. Combines two graphics together by a certain blending mode\nmode=\"the image blending modes: normal|multiply|screen|darken|lighten\"\nin=\"input for the given filter primitive: SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | <filter-primitive-reference>\"\nin2=\"the second input image to the blending operation\"\nExamples\n<feColorMatrix>\nSVG filter. Changes colors based on a transformation matrix\nin=\"input for the given filter primitive: SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | <filter-primitive-reference>\"\ntype=\"matrix | saturate | hueRotate | luminanceToAlpha\"\nvalues=\"the value \n    for matrix type set in type attribute\"\nExamples\n<feComponentTransfer>\nSVG filter. Performs component-wise remapping of data for each pixel. Can adjust \n    brightness, contrast, color balance, etc\nin=\"input for the given filter primitive: SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | <filter-primitive-reference>\"\n<feComposite>\nSVG filter. Performs combination of two input images pixel-wise in image space using \n    a compositing operation\nin=\"input for the given filter primitive: SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | <filter-primitive-reference>\"\nin2=\"the second input image to the blending operation\"\noperator=\"over | in | out | atop | xor | lighter | arithmetic\"\n<feConvolveMatrix>\nSVG filter. Applies a matrix convolution filter effect (this includes blurring, edge \n    detection, sharpening, embossing and beveling)\n<feDiffuseLighting>\nSVG filter. Lights a graphic by using the alpha channel as a bump map\n<feDisplacementMap>\nSVG filter. Uses pixels values from the graphic from in2 attribute to displace the image from \n    the in attribute\n<feDistantLight>\nSVG filter. Specifies a distant light source to be used inside a lighting filter \n    primitive: <feDiffuseLighting> or <feSpecularLighting>\nazimuth\nelevation\n<feDropShadow>\nSVG filter. Creates a drop shadow of the graphic\ndx=\"the x offset of the drop shadow\"\ndy=\"the y offset of the drop \n    shadow\"\nstdDeviation=\"the amount of the blur in the drop shadow\"\nExamples\n<feFlood>\nSVG filter. Fills the filter subregion with the color and opacity \n    defined by flood-color and flood-opacity attributes\nflood-color\nflood-opacity\n<feFuncA>\nSVG filter. Sub-element to feComponentTransfer\n<feFuncB>\nSVG filter. Sub-element to feComponentTransfer\n<feFuncG>\nSVG filter. Sub-element to feComponentTransfer\n<feFuncR>\nSVG filter. Sub-element to feComponentTransfer\n<feGaussianBlur>\nSVG filter. Blurs the graphic\nin=\"input for the given filter primitive: SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | <filter-primitive-reference>\"\nstdDeviation\nedgeMode\nExamples\n<feImage>\nSVG filter. Gets graphic data from an external source and provides the pixel data as \n    output\ncrossorigin\npreserveAspectRatio\n<feMerge>\nSVG filter. Blends input graphic layers (applies filter effects concurrently instead \n    of sequentially)\n<feMergeNode>\nSVG filter. Takes the result of another filter to be processed by its parent <feMerge>\nin=\"input for the given filter primitive: SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | <filter-primitive-reference>\"\n<feMorphology>\nSVG filter. Erodes or dilates the graphic (for fattening or thinning effects)\nin=\"input for the given filter primitive: SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | <filter-primitive-reference>\"\noperator=\"erode | dilate\"\nradius\n<feOffset>\nSVG filter. Offsets the input graphic\nin=\"input for the given filter primitive: SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | <filter-primitive-reference>\"\ndx\ndy\nExamples\n<fePointLight>\nSVG filter. Specifies a light source that allows creating a point light effect\nx\ny\nz\n<feSpecularLighting>\nSVG filter. Lights a source graphic by using the alpha channel as a bump map\nin=\"input for the given filter primitive: SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | <filter-primitive-reference>\"\n<feSpotLight>\nSVG filter. Specifies a light source that allows creating a spotlight effect\nx\ny\nz\npointsAtX\npointsAtY\npointsAtZ\nspecularExponent\nlimitingConeAngle\n<feTile>\nSVG filter. Fills a target rectangle with a repeated pattern of an input graphic\nin=\"input for the given filter primitive: SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | <filter-primitive-reference>\"\n<feTurbulence>\nSVG filter. Creates a graphic with the Perlin turbulence function\nbaseFrequency\nnumOctaves\nseed\nstitchTiles\ntype\n<filter>\nA container for filter effects\nx\ny\nwidth\nheight\nfilterUnits\nprimitiveUnits\nExamples\n<foreignObject>\nIncludes elements from a different XML namespace\nheight\nwidth\nx\ny\n<g>\nA container for grouping other SVG elements\nid=\"a unique name for the group\"\n<image>\nIncludes an image in SVG (must be .jpeg, .png, or other SVG files)\nhref=\"the url to the image\". Required.\nwidth=\"the width of the image\". Required.\nheight=\"the height of the image\". Required.\nx=\"the x position of top-left corner of image\"\ny=\"the y position of top-left corner of the image\"\npreserveAspectRatio=\"how the image is scaled\"\ncrossorigin=\"value of the \n    credentials flag for CORS requests\"\ndecoding=\"sync | async | auto\"\nExamples\n<line>\nCreates a line\nx1=\"The start of the line on the x-axis\"\ny1=\"The start of the line on the y-axis\"\nx2=\"The end of the line on the x-axis\"\ny2=\"The end of the line on the y-axis\"\nExamples\n<linearGradient>\nDefines a linear gradient\nid=\"a unique id for the gradient\". Required\nx1=\"The x position \n    of the starting point of the gradient\". Default is 0%\nx2=\"The x position \n    of the ending point of the gradient\". Default is 100%\ny1=\"The y position \n    of the starting point of the gradient\". Default is 0%\ny2=\"The y position \n    of the ending point of the gradient\". Default is 0%\nspreadMethod=\"The \n    spread method of the gradient\". Possible values: \"pad\", \"reflect\", \"repeat\". \n    Default is \"pad\"\nhref=\"A reference to another <linearGradient> element \n    that will be used as a template\"\ngradientUnits=\"the coordinate system for \n    x1, x2, y1, y2\". Possible values: \"userSpaceOnUse\" and \"objectBoundingBox\". \n    Default is \"objectBoundingBox\"\ngradientTransform=\"additional \n    transformation to the gradient coordinate system\"\nExamples\n<marker>\nDefines a graphic that is used to draw arrowheads or polymarkers on a \n    specific <path>, <line>, <polyline> or <polygon> element\nmarkerUnits=\"'strokeWidth' or 'userSpaceOnUse'. If 'strokeWidth' is used then one unit equals one stroke width. Otherwise, the marker does not scale and uses the the same view units as the referencing element (default 'strokeWidth')\"\nrefX=\"the position where the marker connects with the vertex (default 0)\"\nrefY=\"the position where the marker connects with the vertex (default 0)\"\norient=\"'auto' or an angle to always show the marker at. 'auto' will compute an angle that makes the x-axis a tangent of the vertex (default 0)\"\nmarkerWidth=\"the width of the marker (default 3)\"\nmarkerHeight=\"the height of the marker (default 3)\"\nviewBox=\"the points \"seen\" in this SVG drawing area. 4 values separated by white space or commas. (min x, min y, width, height)\"\nExamples\n<mask>\nDefines an alpha mask for compositing the current object into the \n    background. Masking is a combination of opacity values and clipping. Like clipping you can use shapes, text or paths to define sections of the mask. The default state of a mask is fully transparent which is the opposite of clipping plane. The graphics in a mask sets how opaque portions of the mask are\nmaskUnits=\"'userSpaceOnUse' or 'objectBoundingBox'. Set whether the clipping plane is relative the full view port or object (default: 'objectBoundingBox')\"\nmaskContentUnits=\"Use the second with percentages to make mask graphic positions relative the object. 'userSpaceOnUse' or 'objectBoundingBox' (default: 'userSpaceOnUse')\"\nx=\"the clipping plane of the mask (default: -10%)\"\ny=\"the clipping plane of the mask (default: -10%)\"\nwidth=\"the clipping plane of the mask (default: 120%)\"\nheight=\"the clipping plane of the mask (default: 120%)\"\nExamples\n<metadata>\nApplies metadata to SVG content\n<mpath>\nA sub-element for the <animateMotion> element which provides the ability \n    to reference an external <path> element as the definition of a motion path\n<path>\nDefines a shape\nd=\"sets the shape of the path\"\npathLength=\"the total length for the path\"\nExamples\n<pattern>\nDefines an object that can be redrawn at repeated x- and y-coordinate \n    intervals\nid=\"the unique id used to reference this pattern.\" Required.\npatternUnits=\"'userSpaceOnUse' or 'objectBoundingBox'. The second value makes units of x, y, width, height a fraction (or %) of the object bounding box which uses the pattern.\"\npatternContentUnits=\"'userSpaceOnUse' or 'objectBoundingBox'\"\npatternTransform=\"allows the whole pattern to be transformed\"\nx=\"pattern's offset from the top-left corner (default 0)\"\ny=\"pattern's offset from the top-left corner. (default 0)\"\nwidth=\"the width of the pattern tile (default 0)\"\nheight=\"the height of the pattern tile (default 0)\"\nviewBox=\"the points \"seen\" in this SVG drawing area. 4 values separated by white space or commas. (min x, min y, width, height)\"\nhref\npreserveAspectRatio\nExamples\n<polygon>\nCreates a graphic that contains at least three sides. Polygons are made \n    of straight lines, and the shape is \"closed\"\npoints=\"The list of points of the polygon. Each point must contain \n    an x-\u00a0 and a y-coordinate\". Required.\nExamples\n<polyline>\nDefines any shape that consists of only straight lines. The shape is \n    open\npoints=\"The list of points of the polygon. Each point must contain \n    an x coordinate and a y coordinate\". Required.\nExamples\n<radialGradient>\nDefines a radial gradient\nid=\"a unique id for the gradient\". Required\ncx=\"The x \n    position of the end circle of the radial gradient\". Default is 50%\ncy=\"The y position of the end circle of the radial gradient\". Default is 50%\nfr=\"The radius of the start circle of the radial gradient\". Default is 0%\nfx=\"The x position of the start circle of the radial gradient\". Default is \n    50%\nfy=\"The y position of the start circle of the radial gradient\". \n    Default is 50%\nr=\"The radius of the end circle of the radial gradient\". \n    Default is 50%\nspreadMethod=\"Defines the spread method of the gradient\". \n    Possible values: \"pad\", \"reflect\", \"repeat\". Default is \"pad\"\nhref=\"Defines \n    a reference to another <radialGradient> element that will be used as a \n    template\"\ngradientUnits=\"Defines the coordinate system for cx, cy, r, fx, \n    fy, fr\". Possible values: \"userSpaceOnUse\" and \"objectBoundingBox\". Default \n    is \"objectBoundingBox\"\ngradientTransform=\"Defines additional \n    transformation to the gradient coordinate system\"\nExamples\n<rect>\nDefines a rectangle\nwidth=\"the width of the rectangle\". Required.\nheight=\"the height of the rectangle\" Required.\nx=\"the \n    x-position for the top-left corner of the rectangle\"\ny=\"the y-position for the top-left corner of the rectangle\"\nrx=\"The x radius of the corners of the rectangle (used to round the corners)\". \n    Default is 0\nry=\"The y radius of the corners of the rectangle (used to round the corners)\". \n    Default is 0\npathLength=\"the total length for the rectangle's \n    perimeter\"\nExamples\n<script>\nContainer for scripts in SVG\ncrossorigin=\"Defines CORS settings as define for the HTML <script> \n    element\"\nhref=\"The URL to the script to load\"\ntype=\"The type of script \n    language to use\". Default is application/ecmascript\nExamples\n<set>\nSets the value of an \n    attribute for a specified duration\nattributeName=\"the attribute to change\"\nto=\"the new value for \n    the attribute\"\nbegin=\"when the effect should start\"\n<stop>\nThe stops for a linear or radial gradient\noffset=\"the offset for this stop (0 to 1/0% to 100%)\". Required.\nstop-color=\"the color of this stop\"\nstop-opacity=\"the opacity of this stop (0 to 1)\". Default is 1\nExamples\n<style>\nAllows style sheets to be embedded directly within SVG\ntype=\"The type of the style sheet language to use\". Default is text/css.\nmedia =\"To which media the style applies\". Default is all\ntitle=\"The \n    title of the style sheet (can be used to switch between alternate style \n    sheets)\"\n<svg>\nA container for SVG graphics\nxmlns=\"\"\nx=\"The x position of the SVG \n    container\". Default is 0\ny=\"The y position of the SVG container\". \n    Default is 0\nwidth=\"The width of the SVG container\". Default is auto\nheight=\"The height of the SVG container\". Default is auto\nviewBox=\"The SVG viewport coordinates for the current SVG fragment\". \n    Contains 4 values separated by white space or commas. (min x, min y, width, height)\"\npreserveAspectRatio=\"How the svg fragment is deformed if it is displayed \n    with a different aspect ratio\". Can be none| xMinYMin| xMidYMin| xMaxYMin| \n    xMinYMid| xMidYMid| xMaxYMid| xMinYMax| xMidYMax| xMaxYMax. Default is \n    xMidYMid\n<switch>\n<symbol>\nDefine graphical template objects which can be instantiated by a <use> \n    element\n<text>\nDefines a text\nx=\"The x position of the start of the text\". Default is 0\ny=\"The y \n    position of the start of the text\". Default is 0\ndx=\"The horizontal shift \n    position for text (from \ndy=\"The vertical shift \n    position for text (from \nrotate=\"The rotation (in \n    degrees) applied to each letter of text\"\ntextLength=\"The width that the \n    text must fit in\"\nlengthAdjust\"How the text should be compressed or \n    stretched to fit the width defined by the textLength attribute\". Can be \n    spacing| spacingAndGlyphs. Default is spacing\nExamples\n<textPath>\nRenders text along the shape of a path\nhref=\"The URL to the path to render the text\"\nlengthAdjust\"How the text should be compressed \n    or stretched to fit the width defined by the textLength attribute\". Can be \n    spacing| spacingAndGlyphs. Default is spacing\nmethod=\"How to render the \n    glyphs along the path.\" Can be align|stretch. Default is align\nspacing=\"The space between glyphs\". Can be auto|exact. Default is exact\nstartOffset=\"How far the beginning of the text should be offset from the \n    beginning of the path\". Can be a length, percentage or a number\ntextLength=\"The width of the text along the path\". Can be \n    a length, percentage or a number. Default is auto\nExamples\n<title>\nA text description for elements in SVG - not displayed as part of the \n    graphics. Browsers usually display the text \n    as a tooltip\nnone\n<tspan>\nDefines a subtext within a <text> element\nx=\"The x position of the start of the text\". Default is 0\ny=\"The y \n    position of the start of the text\". Default is 0\ndx=\"The horizontal shift \n    position for text (from \ndy=\"The vertical shift \n    position for text (from \nrotate=\"The rotation (in \n    degrees) applied to each letter of text\"\ntextLength=\"The width that the \n    text must fit in\"\nlengthAdjust\"How the text should be compressed or \n    stretched to fit the width defined by the textLength attribute\". Can be \n    spacing| spacingAndGlyphs. Default is spacing\nExamples\n<use>\nTakes a node within the SVG document, and duplicates it somewhere else.\nx=\"The x position of top-left corner of the cloned element\"\ny=\"The y position of top-left corner of the cloned element\"\nwidth=\"the width of the cloned element\"\nheight=\"the height of the cloned element\"\nhref=\"the URL to the element that is to be duplicated\"\n<view>\nHow to view the graphic (zoom level or detail view)\nviewBox=\"The position and dimension, in user space, of an SVG viewport. \n    Contains 4 values separated by white space or commas. (min x, min y, width, height)\"\npreserveAspectRatio=\"How an element with a viewBox providing a given aspect \n    ratio must fit into a viewport with a different aspect ratio\"\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "d1f2136a-50e3-4476-b9ba-694d0691feb2",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "719088a1-38ea-45d1-accf-82a4af0ee481",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "86443f10-cf4c-481e-9ce7-5497f7e7a93c",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is the type of transformation which?",
      "options": [
        "None of the above.",
        "scaled\"\ncrossorigin=\"value of the \n    credentials flag for CORS requests\"\ndecoding=\"sync | async | auto\"\nExamples\n<line>\nCreates a line\nx1=\"The start of the line on the x-axis\"\ny1=\"The start of the line on the y-axis\"\nx2=\"The end of the line on the x-axis\"\ny2=\"The end of the line on the y-axis\"\nExamples\n<linearGradient>\nDefines a linear gradient\nid=\"a unique id for the gradient\"",
        "None of the above.",
        "to have its values change over time"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of the type of transformation which is 'to have its values change over time'."
    },
    {
      "question": "What is how the image?",
      "options": [
        "None of the above.",
        "None of the above.",
        "scaled\"\ncrossorigin=\"value of the \n    credentials flag for CORS requests\"\ndecoding=\"sync | async | auto\"\nExamples\n<line>\nCreates a line\nx1=\"The start of the line on the x-axis\"\ny1=\"The start of the line on the y-axis\"\nx2=\"The end of the line on the x-axis\"\ny2=\"The end of the line on the y-axis\"\nExamples\n<linearGradient>\nDefines a linear gradient\nid=\"a unique id for the gradient\"",
        "to have its values change over time"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of how the image is 'scaled\"\ncrossorigin=\"value of the \n    credentials flag for CORS requests\"\ndecoding=\"sync | async | auto\"\nExamples\n<line>\nCreates a line\nx1=\"The start of the line on the x-axis\"\ny1=\"The start of the line on the y-axis\"\nx2=\"The end of the line on the x-axis\"\ny2=\"The end of the line on the y-axis\"\nExamples\n<linearGradient>\nDefines a linear gradient\nid=\"a unique id for the gradient\"'."
    }
  ],
  "summary": "This tutorial covers SVGReference concepts and techniques. You'll learn how to use SVGReference effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of SVGReference and how to apply it in your projects."
}