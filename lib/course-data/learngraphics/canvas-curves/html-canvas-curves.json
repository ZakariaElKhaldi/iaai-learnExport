{
  "id": "1fe65d69-be50-4cdb-916f-b50510e2fae4",
  "title": "HTML Canvas Curves",
  "slug": "html-canvas-curves",
  "metadata": {
    "description": "Learn about HTML Canvas Curves with clear explanations and practical examples.",
    "keywords": [
      "c",
      "point",
      "canvas",
      "curve",
      "method",
      "control",
      "required",
      "coordinate",
      "bezier",
      "moveto",
      "quadraticcurveto"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnGraphics",
    "subcategory": "Canvas Curves"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "HTML Canvas Curves",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "HTML Canvas Curves\nThe three most used methods for drawing curves in canvas are:\nThe\narc()\nmethod (described in\nCanvas Circles\nchapter)\nThe\nquadraticCurveTo()\nmethod\nThe\nbezierCurveTo()\nmethod\nThe quadraticCurveTo() Method\nThe\nquadraticCurveTo()\nmethod is used to define a \nquadratic Bezier curve.\nThe\nquadraticCurveTo()\nmethod has the following parameters:\nParameter\nDescription\ncpx\nRequired. The x-coordinate of the control point\ncpy\nRequired. The y-coordinate of the control point\nx\nRequired. The x-coordinate of the end point\ny\nRequired. The y-coordinate of the end point\nThe\nquadraticCurveTo()\nmethod requires two \npoints: One control point and one end point. The starting point is the latest \npoint in the current path, which can be changed using\nmoveTo()\nbefore creating the quadratic Bezier curve.\nTo draw the curve on the canvas, use the following methods:\nbeginPath()\n- Begin a path\nmoveTo()\n- Define the start position\nquadraticCurveTo()\n- Define the \n  quadratic Bezier curve\nstroke()\n- Draw it\nExample\nThis quadratic Bezier curve begins at the point specified by moveTo(): (10, 100). The control \n  point is placed at (250, 170). The curve ends at (230, 20):\nYour browser does not support the HTML5 canvas tag.\n<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.beginPath();\nctx.moveTo(10, 100);\nctx.quadraticCurveTo(250, 170, \n  230, 20);\nctx.stroke();\n</script>\n\nThe bezierCurveTo() Method\nThe\nbezierCurveTo()\nmethod is used to define a cubic Bezier curve.\nThe\nbezierCurveTo()\nmethod has the following parameters:\nParameter\nDescription\ncp1x\nRequired. The x-coordinate of the first control point\ncp1y\nRequired. The y-coordinate of the first control point\ncp2x\nRequired. The x-coordinate of the second control point\ncp2y\nRequired. The y-coordinate of the second control point\nx\nRequired. The x-coordinate of the end point\ny\nRequired. The y-coordinate of the end point\nThe\nbezierCurveTo()\nmethod requires three \npoints: Two control points and one end point. The starting point is the latest \npoint in the current path, which can be changed using\nmoveTo()\nbefore creating the cubic Bezier curve.\nTo draw the curve on the canvas, use the following methods:\nbeginPath()\n- Begin a path\nmoveTo()\n- Define the start position\nbezierCurveTo()\n- Define the cubic \n  Bezier curve\nstroke()\n- Draw it\nExample\nThis cubic Bezier curve begins at the point specified by moveTo(): (20, 20). The \n  first control \n  point is placed at (110, 150). The second control \n  point is placed at (180, 10). The curve ends at (210, 140):\nYour browser does not support the HTML5 canvas tag.\n<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.beginPath();\nctx.moveTo(20, 20);\nctx.bezierCurveTo(110, 150, 180, \n  10, 210, 140);\nctx.stroke();\n</script>\n\nSee Also:\n' Full Canvas Reference\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.beginPath();\nctx.moveTo(10, 100);\nctx.quadraticCurveTo(250, 170, \n  230, 20);\nctx.stroke();\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.beginPath();\nctx.moveTo(20, 20);\nctx.bezierCurveTo(110, 150, 180, \n  10, 210, 140);\nctx.stroke();\n</script>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<script>\n# TODO: Complete this line\nconst ctx = canvas.getContext(\"2d\");\nctx.beginPath();\nctx.moveTo(10, 100);\nctx.quadraticCurveTo(250, 170, \n  230, 20);\nctx.stroke();\n</script>",
      "solution": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.beginPath();\nctx.moveTo(10, 100);\nctx.quadraticCurveTo(250, 170, \n  230, 20);\nctx.stroke();\n</script>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\n# TODO: Complete this line\nctx.beginPath();\nctx.moveTo(20, 20);\nctx.bezierCurveTo(110, 150, 180, \n  10, 210, 140);\nctx.stroke();\n</script>",
      "solution": "<script>\nconst canvas = document.getElementById(\"myCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.beginPath();\nctx.moveTo(20, 20);\nctx.bezierCurveTo(110, 150, 180, \n  10, 210, 140);\nctx.stroke();\n</script>"
    }
  ],
  "related_topics": [
    {
      "id": "db8d5371-63c7-47e3-bf45-c93851dbddc0",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "f2100791-a507-4bd8-b95d-506a791eab2a",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "f6105589-d1d0-4ebe-8d5c-6c7f855a6695",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is method?",
      "options": [
        "used to define a \nquadratic Bezier curve",
        "None of the above.",
        "None of the above.",
        "the latest \npoint in the current path"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of method is 'used to define a \nquadratic Bezier curve'."
    },
    {
      "question": "What is The starting point?",
      "options": [
        "None of the above.",
        "the latest \npoint in the current path",
        "None of the above.",
        "used to define a \nquadratic Bezier curve"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of The starting point is 'the latest \npoint in the current path'."
    }
  ],
  "summary": "This tutorial covers HTML Canvas Curves concepts and techniques. You'll learn how to use HTML Canvas Curves effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of HTML Canvas Curves and how to apply it in your projects."
}