{
  "title": "Python File Write",
  "url": "https://www.w3schools.com/python/python_file_write.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Python File Write",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Write to an Existing File",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To write to an existing file, you must add a parameter to the open() function:",
      "html": "<p>To write to an existing file, you must add a parameter to the\n<code>open()</code> function:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "\"a\" - Append - will append to the end of the file",
      "html": "<p><code>\"a\"</code> - Append - will append to the end of the file</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "\"w\" - Write - will overwrite any existing content",
      "html": "<p><code>\"w\"</code> - Write - will overwrite any existing content</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  with open(\"demofile.txt\", \"a\") as f:\u00a0 f.write(\"Now the file has more content!\")\n  #open and read the file after the appending:with open(\"demofile.txt\") \n  as f:\u00a0 print(f.read()) ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "with",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "open",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\"demofile.txt\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\"a\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "as",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\"Now the file has more content!\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "#open and read the file after the appending:",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "with",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "open",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\"demofile.txt\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "as",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "with open(\"demofile.txt\", \"a\") as f:\u00a0 f.write(\"Now the file has more content!\")\n#open and read the file after the appending:with open(\"demofile.txt\")\nas f:\u00a0 print(f.read())",
      "syntax_highlighting": [
        {
          "text": "\n with open(\"demofile.txt\", \"a\") as f:\u00a0 f.write(\"Now the file has more content!\")\n #open and read the file after the appending:with open(\"demofile.txt\") \n as f:\u00a0 print(f.read()) ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "with",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "open",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\"demofile.txt\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\"a\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "as",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\"Now the file has more content!\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "#open and read the file after the appending:",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "with",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "open",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\"demofile.txt\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "as",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">with</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">open</span>(<span class=\"pythonstringcolor\" style=\"color:green\">\"demofile.txt\"</span>, <span class=\"pythonstringcolor\" style=\"color:green\">\"a\"</span>) <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> f:<br/>\u00a0 f.write(<span class=\"pythonstringcolor\" style=\"color:green\">\"Now the file has more content!\"</span>)<br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <br/><span class=\"commentcolor\" style=\"color:slategray\">#open and read the file after the appending:<br/></span><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">with</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">open</span>(<span class=\"pythonstringcolor\" style=\"color:green\">\"demofile.txt\"</span>) <span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> f:<br/>\u00a0 <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(f.read()) </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  with open(\"demofile.txt\", \"a\") as f:\u00a0 f.write(\"Now the file has more content!\")\n  #open and read the file after the appending:with open(\"demofile.txt\") \n  as f:\u00a0 print(f.read()) ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "with",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "open",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\"demofile.txt\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\"a\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "as",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\"Now the file has more content!\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "#open and read the file after the appending:",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "with",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "open",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\"demofile.txt\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "as",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Overwrite Existing Content",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To overwrite the existing content to the file, use the w parameter:",
      "html": "<p>To overwrite the existing content to the file, use the <code>w</code> parameter:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  with open(\"demofile.txt\", \"w\") as f:\n  \u00a0\n  f.write(\"Woops! I have deleted the content!\")\n  #open and read the file after the overwriting:with open(\"demofile.txt\") \n  as f:\n  \u00a0\n  print(f.read()) ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "with",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "open",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\"demofile.txt\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\"w\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "as",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\"Woops! I have deleted the content!\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "#open and read the file after the overwriting:",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "with",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "open",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\"demofile.txt\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "as",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "with open(\"demofile.txt\", \"w\") as f:\n\nf.write(\"Woops! I have deleted the content!\")\n#open and read the file after the overwriting:with open(\"demofile.txt\")\nas f:\n\nprint(f.read())",
      "syntax_highlighting": [
        {
          "text": "\n with open(\"demofile.txt\", \"w\") as f:\n  \u00a0\n  f.write(\"Woops! I have deleted the content!\")\n #open and read the file after the overwriting:with open(\"demofile.txt\") \n as f:\n  \u00a0\n print(f.read()) ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "with",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "open",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\"demofile.txt\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\"w\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "as",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\"Woops! I have deleted the content!\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "#open and read the file after the overwriting:",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "with",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "open",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\"demofile.txt\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "as",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">with</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">open</span>(<span class=\"pythonstringcolor\" style=\"color:green\">\"demofile.txt\"</span>, <span class=\"pythonstringcolor\" style=\"color:green\">\"w\"</span>) <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> f:<br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  \u00a0<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  f.write(<span class=\"pythonstringcolor\" style=\"color:green\">\"Woops! I have deleted the content!\"</span>)<br/><br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">#open and read the file after the overwriting:<br/></span><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">with</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">open</span>(<span class=\"pythonstringcolor\" style=\"color:green\">\"demofile.txt\"</span>) <span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> f:<br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  \u00a0<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(f.read()) </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  with open(\"demofile.txt\", \"w\") as f:\n  \u00a0\n  f.write(\"Woops! I have deleted the content!\")\n  #open and read the file after the overwriting:with open(\"demofile.txt\") \n  as f:\n  \u00a0\n  print(f.read()) ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "with",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "open",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\"demofile.txt\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\"w\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "as",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\"Woops! I have deleted the content!\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "#open and read the file after the overwriting:",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "with",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "open",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\"demofile.txt\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "as",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: the \"w\" method will overwrite the entire file.",
      "html": "<p><strong>Note:</strong> the \"w\" method will overwrite the entire file.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Create a New File",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To create a new file in Python, use the open() method, with one of the following parameters:",
      "html": "<p>To create a new file in Python, use the <code>open()</code> method, \nwith one of the following parameters:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "\"x\" - Create - will create a file, returns an error if the file exists",
      "html": "<p><code>\"x\"</code> - Create - will create a file, returns \nan error if the file exists</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "\"a\" - Append - will create a file if the specified file does not exists",
      "html": "<p><code>\"a\"</code> - Append - will create a file if the \nspecified file does not exists</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "\"w\" - Write - will create a file if the specified file does not exists",
      "html": "<p><code>\"w\"</code> - Write - will create a file if the \nspecified file does not exists</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nf = open(\"myfile.txt\", \"x\")\n ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "open",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\"myfile.txt\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\"x\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "f = open(\"myfile.txt\", \"x\")",
      "syntax_highlighting": [
        {
          "text": "\nf = open(\"myfile.txt\", \"x\")\n ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "open",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\"myfile.txt\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\"x\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\">\nf = <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">open</span>(<span class=\"pythonstringcolor\" style=\"color:green\">\"myfile.txt\"</span>, <span class=\"pythonstringcolor\" style=\"color:green\">\"x\"</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nf = open(\"myfile.txt\", \"x\")\n ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "open",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\"myfile.txt\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\"x\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Result: a new empty file is created.",
      "html": "<p>Result: a new empty file is created.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: If the file already exist, an error will be raised.",
      "html": "<p><strong>Note:</strong> If the file already exist, an error will be raised.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What happens to the original file content if you open a file like this: open('demofile3.txt', 'w')",
      "html": "<p>What happens to the original file content if you open a file like this:<br/><code class=\"codeblock\">open('demofile3.txt', 'w')</code></p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "What happens to the original file content if you open a file like this:open('demofile3.txt', 'w')",
        "options": [
          {
            "value": "0",
            "text": "The original content will be overwritten"
          },
          {
            "value": "1",
            "text": "Any new content will be added after the original content"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_file_write1"
      },
      "quiz_type": "quiz",
      "question": "What happens to the original file content if you open a file like this:open('demofile3.txt', 'w')",
      "options": [
        {
          "value": "0",
          "text": "The original content will be overwritten"
        },
        {
          "value": "1",
          "text": "Any new content will be added after the original content"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_file_write1",
      "html": "<form action=\"exercise.asp?x=xrcise_file_write1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">The original content will be overwritten</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">Any new content will be added after the original content</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}