{
  "title": "Python Machine Learning Scaling",
  "url": "https://www.w3schools.com/python/python_ml_scale.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Machine Learning - Scale",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Scale Features",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When your data has different values, and even different measurement units, it can be difficult to compare them. What is kilograms compared to meters? Or altitude compared to time?",
      "html": "<p>When your data has different values, and even different measurement units, it can be difficult to \ncompare them. What is kilograms compared to meters? Or altitude compared to time?</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The answer to this problem is scaling. We can scale data into new values that are easier to compare.",
      "html": "<p>The answer to this problem is scaling. We can scale data into new values that are easier to \ncompare.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "multiple regression chapter",
          "href": "https://www.w3schools.com/python_ml_multiple_regression.asp",
          "title": ""
        }
      ],
      "text": "Take a look at the table below, it is the same data set that we used in the multiple regression chapter , but this time the volume column contains values in liters instead of cm 3 (1.0 instead of 1000).",
      "html": "<p>Take a look at the table below, it is the same data set that we used in the \n<a href=\"python_ml_multiple_regression.asp\">multiple regression chapter</a>, but this time the <strong>volume</strong> column \ncontains values in<em> liters</em> instead of <em>cm<sup>3</sup></em> (1.0 instead of 1000).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It can be difficult to compare the volume 1.0 with the weight 790, but if we scale them both into comparable values, we can easily see how much one value is compared to the other.",
      "html": "<p>It can be difficult to compare the volume 1.0 with the weight 790, but if we \nscale them both into comparable values, we can easily see how much one value \nis compared to the other.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "There are different methods for scaling data, in this tutorial we will use a method called standardization.",
      "html": "<p>There are different methods for scaling data, in this tutorial we will use a \nmethod called standardization.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The standardization method uses this formula:",
      "html": "<p>The standardization method  \nuses this formula:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "z = (x - u) / s",
      "html": "<p><code>z = (x - u) / s</code></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Where z is the new value, x is the original value, u is the mean and s is the standard deviation.",
      "html": "<p>Where <code>z</code> is the new value, \n<code>x</code> is the original value, \n<code>u</code> is the mean and <code>s</code> is the \nstandard deviation.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you take the weight column from the data set above, the first value is 790, and the scaled value will be:",
      "html": "<p>If you take the <strong>weight</strong> column from the data set above, the first value \nis 790, and the scaled value will be:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you take the volume column from the data set above, the first value is 1.0, and the scaled value will be:",
      "html": "<p>If you take the <strong>volume</strong> column from the data set above, the first value \nis 1.0, and the scaled value \nwill be:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "1.61",
          "href": "https://www.w3schools.com/trypandas.asp?filename=demo_ml_scale_mean2",
          "title": ""
        },
        {
          "text": "0.38",
          "href": "https://www.w3schools.com/trypandas.asp?filename=demo_ml_scale_std2",
          "title": ""
        }
      ],
      "text": "(1.0 - 1.61 ) / 0.38 = -1.59",
      "html": "<p><code>(1.0 - <a href=\"trypandas.asp?filename=demo_ml_scale_mean2\" target=\"_blank\">1.61</a>) / <a href=\"trypandas.asp?filename=demo_ml_scale_std2\" target=\"_blank\">0.38</a> = -1.59</code></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Now you can compare -2.1 with -1.59 instead of comparing 790 with 1.0.",
      "html": "<p>Now you can compare -2.1 with -1.59 instead of comparing 790 with 1.0.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You do not have to do this manually, the Python sklearn module has a method called StandardScaler() which returns a Scaler object with methods for transforming data sets.",
      "html": "<p>You do not have to do this manually,\nthe Python sklearn module has a method called <code>StandardScaler()</code>\nwhich returns a Scaler object with methods for transforming data sets.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  import pandasfrom sklearn import linear_modelfrom \n  sklearn.preprocessing import StandardScalerscale = StandardScaler()\n  df = pandas.read_csv(\"data.csv\")X = df[['Weight', 'Volume']]\n  scaledX = scale.fit_transform(X)\n  print(scaledX) ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "import",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "from",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "import",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "from",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "import",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\"data.csv\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "'Weight'",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "'Volume'",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "import pandasfrom sklearn import linear_modelfrom\nsklearn.preprocessing import StandardScalerscale = StandardScaler()\ndf = pandas.read_csv(\"data.csv\")X = df[['Weight', 'Volume']]\nscaledX = scale.fit_transform(X)\nprint(scaledX)",
      "syntax_highlighting": [
        {
          "text": "\n import pandasfrom sklearn import linear_modelfrom \n  sklearn.preprocessing import StandardScalerscale = StandardScaler()\n df = pandas.read_csv(\"data.csv\")X = df[['Weight', 'Volume']]\n scaledX = scale.fit_transform(X)\n print(scaledX) ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "import",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "from",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "import",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "from",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "import",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\"data.csv\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "'Weight'",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "'Volume'",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> pandas<br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">from</span> sklearn <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> linear_model<br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">from</span> <span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  sklearn.preprocessing <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> StandardScaler<br/>scale = StandardScaler()<br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <br/>df = pandas.read_csv(<span class=\"pythonstringcolor\" style=\"color:green\">\"data.csv\"</span>)<br/><br/>X = df[[<span class=\"pythonstringcolor\" style=\"color:green\">'Weight'</span>, <span class=\"pythonstringcolor\" style=\"color:green\">'Volume'</span>]]<br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <br/>scaledX = scale.fit_transform(X)<br/><br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(scaledX) </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  import pandasfrom sklearn import linear_modelfrom \n  sklearn.preprocessing import StandardScalerscale = StandardScaler()\n  df = pandas.read_csv(\"data.csv\")X = df[['Weight', 'Volume']]\n  scaledX = scale.fit_transform(X)\n  print(scaledX) ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "import",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "from",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "import",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "from",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "import",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\"data.csv\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "'Weight'",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "'Volume'",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Predict CO2 Values",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Multiple Regression chapter",
          "href": "https://www.w3schools.com/python_ml_multiple_regression.asp",
          "title": ""
        }
      ],
      "text": "The task in the Multiple Regression chapter was to predict the CO2 emission from a car when you only knew its weight and volume.",
      "html": "<p>The task in the <a href=\"python_ml_multiple_regression.asp\">Multiple Regression chapter</a> was to predict the CO2 emission from a car \nwhen you only knew its weight and volume.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When the data set is scaled, you will have to use the scale when you predict values:",
      "html": "<p>When the data set is scaled, you will have to use the scale when you predict values:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  import pandasfrom sklearn import linear_modelfrom \n  sklearn.preprocessing import StandardScalerscale = StandardScaler()\n  df = pandas.read_csv(\"data.csv\")X = df[['Weight', 'Volume']]\n  y = df['CO2']\n  scaledX = scale.fit_transform(X)\n  regr = linear_model.LinearRegression()regr.fit(scaledX, y)scaled = \n  scale.transform([[2300, 1.3]])predictedCO2 = regr.predict([scaled[0]])\n  print(predictedCO2) ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "import",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "from",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "import",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "from",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "import",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\"data.csv\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "'Weight'",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "'Volume'",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "'CO2'",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "2300",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "1.3",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "import pandasfrom sklearn import linear_modelfrom\nsklearn.preprocessing import StandardScalerscale = StandardScaler()\ndf = pandas.read_csv(\"data.csv\")X = df[['Weight', 'Volume']]\ny = df['CO2']\nscaledX = scale.fit_transform(X)\nregr = linear_model.LinearRegression()regr.fit(scaledX, y)scaled =\nscale.transform([[2300, 1.3]])predictedCO2 = regr.predict([scaled[0]])\nprint(predictedCO2)",
      "syntax_highlighting": [
        {
          "text": "\n import pandasfrom sklearn import linear_modelfrom \n  sklearn.preprocessing import StandardScalerscale = StandardScaler()\n df = pandas.read_csv(\"data.csv\")X = df[['Weight', 'Volume']]\n  y = df['CO2']\n scaledX = scale.fit_transform(X)\n  regr = linear_model.LinearRegression()regr.fit(scaledX, y)scaled = \n  scale.transform([[2300, 1.3]])predictedCO2 = regr.predict([scaled[0]])\n print(predictedCO2) ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "import",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "from",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "import",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "from",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "import",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\"data.csv\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "'Weight'",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "'Volume'",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "'CO2'",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "2300",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "1.3",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> pandas<br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">from</span> sklearn <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> linear_model<br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">from</span> <span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  sklearn.preprocessing <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> StandardScaler<br/>scale = StandardScaler()<br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <br/>df = pandas.read_csv(<span class=\"pythonstringcolor\" style=\"color:green\">\"data.csv\"</span>)<br/><br/>X = df[[<span class=\"pythonstringcolor\" style=\"color:green\">'Weight'</span>, <span class=\"pythonstringcolor\" style=\"color:green\">'Volume'</span>]]<br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  y = df[<span class=\"pythonstringcolor\" style=\"color:green\">'CO2'</span>]<br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <br/>scaledX = scale.fit_transform(X)<br/><br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  regr = linear_model.LinearRegression()<br/>regr.fit(scaledX, y)<br/><br/>scaled = <span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  scale.transform([[<span class=\"pythonnumbercolor\" style=\"color:#905\">2300</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">1.3</span>]])<br/><br/>predictedCO2 = regr.predict([scaled[<span class=\"pythonnumbercolor\" style=\"color:#905\">0</span>]])<br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(predictedCO2) </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  import pandasfrom sklearn import linear_modelfrom \n  sklearn.preprocessing import StandardScalerscale = StandardScaler()\n  df = pandas.read_csv(\"data.csv\")X = df[['Weight', 'Volume']]\n  y = df['CO2']\n  scaledX = scale.fit_transform(X)\n  regr = linear_model.LinearRegression()regr.fit(scaledX, y)scaled = \n  scale.transform([[2300, 1.3]])predictedCO2 = regr.predict([scaled[0]])\n  print(predictedCO2) ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "import",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "from",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "import",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "from",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "import",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\"data.csv\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "'Weight'",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "'Volume'",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "'CO2'",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "2300",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "1.3",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    }
  ]
}