{
  "title": "Python String Formatting",
  "url": "https://www.w3schools.com/python/python_string_formatting.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Python String Formatting",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "F-String was introduced in Python 3.6, and is now the preferred way of formatting strings.",
      "html": "<p class=\"intro\">F-String was introduced in Python 3.6,\nand is now the preferred way of formatting strings.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Before Python 3.6 we had to use the format() method.",
      "html": "<p class=\"intro\">Before Python 3.6 we had to use the <code>format()</code> method.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "F-Strings",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "F-string allows you to format selected parts of a string.",
      "html": "<p>F-string allows you to format selected parts of a string.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To specify a string as an f-string, simply put an f in front of the string literal, like this:",
      "html": "<p>To specify a string as an f-string, simply put an <code>f</code> in front of the string \nliteral, like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring",
        "syntaxHighlighting": [
          {
            "text": "\ntxt = f\"The price is 49 dollars\"\n\nprint(txt)\n ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\"The price is 49 dollars\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "txt = f\"The price is 49 dollars\"\n\nprint(txt)",
      "syntax_highlighting": [
        {
          "text": "\ntxt = f\"The price is 49 dollars\"\n\nprint(txt)\n ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\"The price is 49 dollars\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\">\ntxt = f<span class=\"pythonstringcolor\" style=\"color:green\">\"The price is 49 dollars\"</span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span><br/>\n<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(txt)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring",
      "syntax_highlighting_data": [
        {
          "text": "\ntxt = f\"The price is 49 dollars\"\n\nprint(txt)\n ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\"The price is 49 dollars\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Placeholders and Modifiers",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To format values in an f-string, add placeholders {} , a placeholder can contain variables, operations, functions, and modifiers to format the value.",
      "html": "<p>To format values in an f-string, add placeholders <code>{}</code>, \na placeholder can contain variables,\noperations, functions, and modifiers to format the value.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring_placeholder",
        "syntaxHighlighting": [
          {
            "text": "\nprice = 59\n\ntxt = f\"The price is {price} dollars\"\n\nprint(txt)\n ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "59\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\"The price is {price} dollars\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "price = 59\n\ntxt = f\"The price is {price} dollars\"\n\nprint(txt)",
      "syntax_highlighting": [
        {
          "text": "\nprice = 59\n\ntxt = f\"The price is {price} dollars\"\n\nprint(txt)\n ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "59\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\"The price is {price} dollars\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\">\nprice = <span class=\"pythonnumbercolor\" style=\"color:#905\">59\n</span><br/>\ntxt = f<span class=\"pythonstringcolor\" style=\"color:green\">\"The price is {price} dollars\"</span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span><br/>\n<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(txt)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring_placeholder",
      "syntax_highlighting_data": [
        {
          "text": "\nprice = 59\n\ntxt = f\"The price is {price} dollars\"\n\nprint(txt)\n ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "59\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\"The price is {price} dollars\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A placeholder can also include a modifier to format the value.",
      "html": "<p>A placeholder can also include a <em>modifier </em>to format the value.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A modifier is included by adding a colon : followed by a legal formatting type, like .2f which means fixed point number with 2 decimals:",
      "html": "<p>A modifier is included by adding a colon <code>:</code> followed by a legal formatting type, like \n<code>.2f</code> which means fixed point number with 2 decimals:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring_modifier",
        "syntaxHighlighting": [
          {
            "text": "\nprice = 59\n\ntxt = f\"The price is {price:.2f} dollars\"\n\nprint(txt)\n ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "59\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\"The price is {price:.2f} dollars\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "price = 59\n\ntxt = f\"The price is {price:.2f} dollars\"\n\nprint(txt)",
      "syntax_highlighting": [
        {
          "text": "\nprice = 59\n\ntxt = f\"The price is {price:.2f} dollars\"\n\nprint(txt)\n ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "59\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\"The price is {price:.2f} dollars\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\">\nprice = <span class=\"pythonnumbercolor\" style=\"color:#905\">59\n</span><br/>\ntxt = f<span class=\"pythonstringcolor\" style=\"color:green\">\"The price is {price:.2f} dollars\"</span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span><br/>\n<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(txt)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring_modifier",
      "syntax_highlighting_data": [
        {
          "text": "\nprice = 59\n\ntxt = f\"The price is {price:.2f} dollars\"\n\nprint(txt)\n ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "59\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\"The price is {price:.2f} dollars\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also format a value directly without keeping it in a variable:",
      "html": "<p>You can also format a value directly without keeping it in a variable:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring_modifier_novar",
        "syntaxHighlighting": [
          {
            "text": "\ntxt = f\"The price is {95:.2f} dollars\"\n\nprint(txt)\n ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\"The price is {95:.2f} dollars\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "txt = f\"The price is {95:.2f} dollars\"\n\nprint(txt)",
      "syntax_highlighting": [
        {
          "text": "\ntxt = f\"The price is {95:.2f} dollars\"\n\nprint(txt)\n ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\"The price is {95:.2f} dollars\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\">\ntxt = f<span class=\"pythonstringcolor\" style=\"color:green\">\"The price is {95:.2f} dollars\"</span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span><br/>\n<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(txt)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring_modifier_novar",
      "syntax_highlighting_data": [
        {
          "text": "\ntxt = f\"The price is {95:.2f} dollars\"\n\nprint(txt)\n ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\"The price is {95:.2f} dollars\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Perform Operations in F-Strings",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can perform Python operations inside the placeholders.",
      "html": "<p>You can perform Python operations inside the placeholders.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can do math operations:",
      "html": "<p>You can do math operations:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring_operation",
        "syntaxHighlighting": [
          {
            "text": "\ntxt = f\"The price is {20 * 59} dollars\"\n\nprint(txt)\n ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\"The price is {20 * 59} dollars\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "txt = f\"The price is {20 * 59} dollars\"\n\nprint(txt)",
      "syntax_highlighting": [
        {
          "text": "\ntxt = f\"The price is {20 * 59} dollars\"\n\nprint(txt)\n ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\"The price is {20 * 59} dollars\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\">\ntxt = f<span class=\"pythonstringcolor\" style=\"color:green\">\"The price is {20 * 59} dollars\"</span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span><br/>\n<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(txt)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring_operation",
      "syntax_highlighting_data": [
        {
          "text": "\ntxt = f\"The price is {20 * 59} dollars\"\n\nprint(txt)\n ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\"The price is {20 * 59} dollars\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can perform math operations on variables:",
      "html": "<p>You can perform math operations on variables:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring_operation2",
        "syntaxHighlighting": [
          {
            "text": "\nprice = 59\ntax = 0.25\ntxt = f\"The price is {price + (price * tax)} dollars\"\n\nprint(txt)\n ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "59",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "0.25",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\"The price is {price + (price * tax)} dollars\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "price = 59\ntax = 0.25\ntxt = f\"The price is {price + (price * tax)} dollars\"\n\nprint(txt)",
      "syntax_highlighting": [
        {
          "text": "\nprice = 59\ntax = 0.25\ntxt = f\"The price is {price + (price * tax)} dollars\"\n\nprint(txt)\n ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "59",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "0.25",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\"The price is {price + (price * tax)} dollars\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\">\nprice = <span class=\"pythonnumbercolor\" style=\"color:#905\">59</span><br/>\ntax = <span class=\"pythonnumbercolor\" style=\"color:#905\">0.25</span><br/>\ntxt = f<span class=\"pythonstringcolor\" style=\"color:green\">\"The price is {price + (price * tax)} dollars\"</span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span><br/>\n<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(txt)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring_operation2",
      "syntax_highlighting_data": [
        {
          "text": "\nprice = 59\ntax = 0.25\ntxt = f\"The price is {price + (price * tax)} dollars\"\n\nprint(txt)\n ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "59",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "0.25",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\"The price is {price + (price * tax)} dollars\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can perform if...else statements inside the placeholders:",
      "html": "<p>You can perform <code>if...else</code> statements inside the placeholders:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring_ifelse",
        "syntaxHighlighting": [
          {
            "text": "\nprice = 49\ntxt = f\"It is very {'Expensive' if price>50 else 'Cheap'}\"\n\nprint(txt)\n ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "49",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\"It is very {'Expensive' if price>50 else 'Cheap'}\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "price = 49\ntxt = f\"It is very {'Expensive' if price>50 else 'Cheap'}\"\n\nprint(txt)",
      "syntax_highlighting": [
        {
          "text": "\nprice = 49\ntxt = f\"It is very {'Expensive' if price>50 else 'Cheap'}\"\n\nprint(txt)\n ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "49",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\"It is very {'Expensive' if price>50 else 'Cheap'}\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\">\nprice = <span class=\"pythonnumbercolor\" style=\"color:#905\">49</span><br/>\ntxt = f<span class=\"pythonstringcolor\" style=\"color:green\">\"It is very {'Expensive' if price&gt;50 else 'Cheap'}\"</span><br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span><br/>\n<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(txt)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring_ifelse",
      "syntax_highlighting_data": [
        {
          "text": "\nprice = 49\ntxt = f\"It is very {'Expensive' if price>50 else 'Cheap'}\"\n\nprint(txt)\n ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "49",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\"It is very {'Expensive' if price>50 else 'Cheap'}\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Execute Functions in F-Strings",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can execute functions inside the placeholder:",
      "html": "<p>You can execute functions inside the placeholder:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring_functions",
        "syntaxHighlighting": [
          {
            "text": "\nfruit = \"apples\"\ntxt = f\"I love {fruit.upper()}\"\n\nprint(txt)\n ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\"apples\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\"I love {fruit.upper()}\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "fruit = \"apples\"\ntxt = f\"I love {fruit.upper()}\"\n\nprint(txt)",
      "syntax_highlighting": [
        {
          "text": "\nfruit = \"apples\"\ntxt = f\"I love {fruit.upper()}\"\n\nprint(txt)\n ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\"apples\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\"I love {fruit.upper()}\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\">\nfruit = <span class=\"pythonstringcolor\" style=\"color:green\">\"apples\"</span><br/>\ntxt = f<span class=\"pythonstringcolor\" style=\"color:green\">\"I love {fruit.upper()}\"</span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span><br/>\n<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(txt)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring_functions",
      "syntax_highlighting_data": [
        {
          "text": "\nfruit = \"apples\"\ntxt = f\"I love {fruit.upper()}\"\n\nprint(txt)\n ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\"apples\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\"I love {fruit.upper()}\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The function does not have to be a built-in Python method, you can create your own functions and use them:",
      "html": "<p>The function does not have to be a built-in Python method, you can create your own functions and use them:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring_functions2",
        "syntaxHighlighting": [
          {
            "text": "\ndef myconverter(x):\n\u00a0\u00a0return x * 0.3048\n \ntxt = f\"The plane is flying at a {myconverter(30000)} meter altitude\"\n\nprint(txt)\n ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "def",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "0.3048",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\"The plane is flying at a {myconverter(30000)} meter altitude\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "def myconverter(x):\nreturn x * 0.3048\n\ntxt = f\"The plane is flying at a {myconverter(30000)} meter altitude\"\n\nprint(txt)",
      "syntax_highlighting": [
        {
          "text": "\ndef myconverter(x):\n\u00a0\u00a0return x * 0.3048\n \ntxt = f\"The plane is flying at a {myconverter(30000)} meter altitude\"\n\nprint(txt)\n ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "def",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "0.3048",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\"The plane is flying at a {myconverter(30000)} meter altitude\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\">\n<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">def</span> myconverter(x):<br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">return</span> x * <span class=\"pythonnumbercolor\" style=\"color:#905\">0.3048</span><br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span><br/> \ntxt = f<span class=\"pythonstringcolor\" style=\"color:green\">\"The plane is flying at a {myconverter(30000)} meter altitude\"</span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span><br/>\n<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(txt)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring_functions2",
      "syntax_highlighting_data": [
        {
          "text": "\ndef myconverter(x):\n\u00a0\u00a0return x * 0.3048\n \ntxt = f\"The plane is flying at a {myconverter(30000)} meter altitude\"\n\nprint(txt)\n ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "def",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "0.3048",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\"The plane is flying at a {myconverter(30000)} meter altitude\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "More Modifiers",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "At the beginning of this chapter we explained how to use the .2f modifier to format a number into a fixed point number with 2 decimals.",
      "html": "<p>At the beginning of this chapter we explained how to use the <code>.2f</code> modifier to \nformat a number into a fixed point number with 2 decimals.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "There are several other modifiers that can be used to format values:",
      "html": "<p>There are several other modifiers that can be used to format values:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring_modifier_comma",
        "syntaxHighlighting": [
          {
            "text": "\nprice = 59000\n\ntxt = f\"The price is {price:,} dollars\"\n\nprint(txt)\n ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "59000\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\"The price is {price:,} dollars\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "price = 59000\n\ntxt = f\"The price is {price:,} dollars\"\n\nprint(txt)",
      "syntax_highlighting": [
        {
          "text": "\nprice = 59000\n\ntxt = f\"The price is {price:,} dollars\"\n\nprint(txt)\n ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "59000\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\"The price is {price:,} dollars\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\">\nprice = <span class=\"pythonnumbercolor\" style=\"color:#905\">59000\n</span><br/>\ntxt = f<span class=\"pythonstringcolor\" style=\"color:green\">\"The price is {price:,} dollars\"</span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span><br/>\n<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(txt)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring_modifier_comma",
      "syntax_highlighting_data": [
        {
          "text": "\nprice = 59000\n\ntxt = f\"The price is {price:,} dollars\"\n\nprint(txt)\n ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "59000\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\"The price is {price:,} dollars\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Here is a list of all the formatting types.",
      "html": "<p>Here is a list of all the formatting types.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring_modifier1",
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody>\n<tr><th colspan=\"3\">Formatting Types</th></tr>\n<tr>\n<td><code class=\"w3-codespan\">:&lt;</code></td>\n<td><a class=\"w3-btn btnsmall\" href=\"trypython.asp?filename=demo_fstring_modifier1\" target=\"_blank\">Try it</a></td>\n<td>Left aligns the result (within the available space)</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:&gt;</code></td>\n<td><a class=\"w3-btn btnsmall\" href=\"trypython.asp?filename=demo_fstring_modifier2\" target=\"_blank\">Try it</a></td>\n<td>Right aligns the result (within the available space)</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:^</code></td>\n<td><a class=\"w3-btn btnsmall\" href=\"trypython.asp?filename=demo_fstring_modifier3\" target=\"_blank\">Try it</a></td>\n<td>Center aligns the result (within the available space)</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:=</code></td>\n<td><a class=\"w3-btn btnsmall\" href=\"trypython.asp?filename=demo_fstring_modifier4\" target=\"_blank\">Try it</a></td>\n<td>Places the sign to the left most position</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:+</code></td>\n<td><a class=\"w3-btn btnsmall\" href=\"trypython.asp?filename=demo_fstring_modifier5\" target=\"_blank\">Try it</a></td>\n<td>Use a plus sign to indicate if the result is positive or negative</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:-</code></td>\n<td><a class=\"w3-btn btnsmall\" href=\"trypython.asp?filename=demo_fstring_modifier6\" target=\"_blank\">Try it</a></td>\n<td>Use a minus sign for negative values only</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:\u00a0</code></td>\n<td><a class=\"w3-btn btnsmall\" href=\"trypython.asp?filename=demo_fstring_modifier7\" target=\"_blank\">Try it</a></td>\n<td>Use a space to insert an extra space before positive numbers (and a minus sign \n  before negative numbers)</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:,</code></td>\n<td><a class=\"w3-btn btnsmall\" href=\"trypython.asp?filename=demo_fstring_modifier8\" target=\"_blank\">Try it</a></td>\n<td>Use a comma as a thousand separator</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:_</code></td>\n<td><a class=\"w3-btn btnsmall\" href=\"trypython.asp?filename=demo_fstring_modifier9\" target=\"_blank\">Try it</a></td>\n<td>Use a underscore as a thousand separator</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:b</code></td>\n<td><a class=\"w3-btn btnsmall\" href=\"trypython.asp?filename=demo_fstring_modifier10\" target=\"_blank\">Try it</a></td>\n<td>Binary format</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:c</code></td>\n<td></td>\n<td>Converts the value into the corresponding Unicode character</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:d</code></td>\n<td><a class=\"w3-btn btnsmall\" href=\"trypython.asp?filename=demo_fstring_modifier12\" target=\"_blank\">Try it</a></td>\n<td>Decimal format</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:e</code></td>\n<td><a class=\"w3-btn btnsmall\" href=\"trypython.asp?filename=demo_fstring_modifier13\" target=\"_blank\">Try it</a></td>\n<td>Scientific format, with a lower case e</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:E</code></td>\n<td><a class=\"w3-btn btnsmall\" href=\"trypython.asp?filename=demo_fstring_modifier14\" target=\"_blank\">Try it</a></td>\n<td>Scientific format, with an upper case E</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:f</code></td>\n<td><a class=\"w3-btn btnsmall\" href=\"trypython.asp?filename=demo_fstring_modifier15\" target=\"_blank\">Try it</a></td>\n<td>Fix point number format</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:F</code></td>\n<td><a class=\"w3-btn btnsmall\" href=\"trypython.asp?filename=demo_fstring_modifier16\" target=\"_blank\">Try it</a></td>\n<td>Fix point number format, in uppercase format (show\n  <code class=\"w3-codespan\">inf</code> and\n  <code class=\"w3-codespan\">nan</code> as <code class=\"w3-codespan\">INF</code> \n  and <code class=\"w3-codespan\">NAN</code>)</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:g</code></td>\n<td></td>\n<td>General format</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:G</code></td>\n<td></td>\n<td>General format (using a upper case E for scientific notations)</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:o</code></td>\n<td><a class=\"w3-btn btnsmall\" href=\"trypython.asp?filename=demo_fstring_modifier19\" target=\"_blank\">Try it</a></td>\n<td>Octal format</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:x</code></td>\n<td><a class=\"w3-btn btnsmall\" href=\"trypython.asp?filename=demo_fstring_modifier20\" target=\"_blank\">Try it</a></td>\n<td>Hex format, lower case</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:X</code></td>\n<td><a class=\"w3-btn btnsmall\" href=\"trypython.asp?filename=demo_fstring_modifier21\" target=\"_blank\">Try it</a></td>\n<td>Hex format, upper case</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:n</code></td>\n<td></td>\n<td>Number format</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">:%</code></td>\n<td><a class=\"w3-btn btnsmall\" href=\"trypython.asp?filename=demo_fstring_modifier23\" target=\"_blank\">Try it</a></td>\n<td>Percentage format</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_fstring_modifier1",
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "String format()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Before Python 3.6 we used the format() method to format strings.",
      "html": "<p>Before Python 3.6 we used the <code>format()</code> method to format strings.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The format() method can still be used, but f-strings are faster and the preferred way to format strings.",
      "html": "<p>The <code>format()</code> method can still be used,\nbut f-strings are faster and the preferred way to format strings.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The next examples in this page demonstrates how to format strings with the format() method.",
      "html": "<p>The next examples in this page demonstrates how to format strings with the\n<code>format()</code> method.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The format() method also uses curly brackets as placeholders {} , but the syntax is slightly different:",
      "html": "<p>The <code>format()</code> method also uses curly brackets as placeholders\n<code>{}</code>, but the syntax is slightly different:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_string_formatting1",
        "syntaxHighlighting": [
          {
            "text": "\n  price = 49txt = \"The price is {} dollars\"print(txt.format(price))\n ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "49",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\"The price is {} dollars\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "format",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "price = 49txt = \"The price is {} dollars\"print(txt.format(price))",
      "syntax_highlighting": [
        {
          "text": "\n  price = 49txt = \"The price is {} dollars\"print(txt.format(price))\n ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "49",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\"The price is {} dollars\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "format",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  price = <span class=\"pythonnumbercolor\" style=\"color:#905\">49</span><br/>txt = <span class=\"pythonstringcolor\" style=\"color:green\">\"The price is {} dollars\"</span><br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(txt.<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">format</span>(price))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_string_formatting1",
      "syntax_highlighting_data": [
        {
          "text": "\n  price = 49txt = \"The price is {} dollars\"print(txt.format(price))\n ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "49",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\"The price is {} dollars\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "format",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can add parameters inside the curly brackets to specify how to convert the value:",
      "html": "<p>You can add parameters inside the curly brackets to specify how to convert \nthe value:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_string_formatting2",
        "syntaxHighlighting": [
          {
            "text": "\n  txt = \"The price is {:.2f} dollars\"\n ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\"The price is {:.2f} dollars\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "txt = \"The price is {:.2f} dollars\"",
      "syntax_highlighting": [
        {
          "text": "\n  txt = \"The price is {:.2f} dollars\"\n ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\"The price is {:.2f} dollars\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  txt = <span class=\"pythonstringcolor\" style=\"color:green\">\"The price is {:.2f} dollars\"</span><br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_string_formatting2",
      "syntax_highlighting_data": [
        {
          "text": "\n  txt = \"The price is {:.2f} dollars\"\n ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\"The price is {:.2f} dollars\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "String format() Reference",
          "href": "https://www.w3schools.com/ref_string_format.asp",
          "title": ""
        }
      ],
      "text": "Check out all formatting types in our String format() Reference .",
      "html": "<p>Check out all formatting types in our <a href=\"ref_string_format.asp\">String format() Reference</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Multiple Values",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you want to use more values, just add more values to the format() method:",
      "html": "<p>If you want to use more values, just add more values to the format() method:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nprint(txt.format(price, itemno, count))\n ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "format",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "print(txt.format(price, itemno, count))",
      "syntax_highlighting": [
        {
          "text": "\nprint(txt.format(price, itemno, count))\n ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "format",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\">\n<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(txt.<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">format</span>(price, itemno, count))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nprint(txt.format(price, itemno, count))\n ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "format",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "And add more placeholders:",
      "html": "<p>And add more placeholders:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_string_formatting3",
        "syntaxHighlighting": [
          {
            "text": "\n  quantity = 3itemno = 567price = 49myorder = \"I want {} pieces of \n  item number {} for {:.2f} dollars.\"print(myorder.format(quantity, itemno, price))\n ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "3",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "567",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "49",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\"I want {} pieces of \n  item number {} for {:.2f} dollars.\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "format",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "quantity = 3itemno = 567price = 49myorder = \"I want {} pieces of\nitem number {} for {:.2f} dollars.\"print(myorder.format(quantity, itemno, price))",
      "syntax_highlighting": [
        {
          "text": "\n  quantity = 3itemno = 567price = 49myorder = \"I want {} pieces of \n  item number {} for {:.2f} dollars.\"print(myorder.format(quantity, itemno, price))\n ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "3",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "567",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "49",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\"I want {} pieces of \n  item number {} for {:.2f} dollars.\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "format",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  quantity = <span class=\"pythonnumbercolor\" style=\"color:#905\">3</span><br/>itemno = <span class=\"pythonnumbercolor\" style=\"color:#905\">567</span><br/>price = <span class=\"pythonnumbercolor\" style=\"color:#905\">49</span><br/>myorder = <span class=\"pythonstringcolor\" style=\"color:green\">\"I want {} pieces of \n  item number {} for {:.2f} dollars.\"</span><br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(myorder.<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">format</span>(quantity, itemno, price))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_string_formatting3",
      "syntax_highlighting_data": [
        {
          "text": "\n  quantity = 3itemno = 567price = 49myorder = \"I want {} pieces of \n  item number {} for {:.2f} dollars.\"print(myorder.format(quantity, itemno, price))\n ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "3",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "567",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "49",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\"I want {} pieces of \n  item number {} for {:.2f} dollars.\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "format",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Index Numbers",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can use index numbers (a number inside the curly brackets {0} ) to be sure the values are placed in the correct placeholders:",
      "html": "<p>You can use index numbers (a number inside the curly brackets <code>{0}</code>) to be sure the \nvalues are placed \nin the correct placeholders:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_string_formatting4",
        "syntaxHighlighting": [
          {
            "text": "\n  quantity = 3itemno = 567price = 49myorder = \"I want {0} pieces of \n  item number {1} for {2:.2f} dollars.\"print(myorder.format(quantity, itemno, price))\n ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "3",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "567",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "49",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\"I want {0} pieces of \n  item number {1} for {2:.2f} dollars.\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "format",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "quantity = 3itemno = 567price = 49myorder = \"I want {0} pieces of\nitem number {1} for {2:.2f} dollars.\"print(myorder.format(quantity, itemno, price))",
      "syntax_highlighting": [
        {
          "text": "\n  quantity = 3itemno = 567price = 49myorder = \"I want {0} pieces of \n  item number {1} for {2:.2f} dollars.\"print(myorder.format(quantity, itemno, price))\n ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "3",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "567",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "49",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\"I want {0} pieces of \n  item number {1} for {2:.2f} dollars.\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "format",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  quantity = <span class=\"pythonnumbercolor\" style=\"color:#905\">3</span><br/>itemno = <span class=\"pythonnumbercolor\" style=\"color:#905\">567</span><br/>price = <span class=\"pythonnumbercolor\" style=\"color:#905\">49</span><br/>myorder = <span class=\"pythonstringcolor\" style=\"color:green\">\"I want {0} pieces of \n  item number {1} for {2:.2f} dollars.\"</span><br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(myorder.<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">format</span>(quantity, itemno, price))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_string_formatting4",
      "syntax_highlighting_data": [
        {
          "text": "\n  quantity = 3itemno = 567price = 49myorder = \"I want {0} pieces of \n  item number {1} for {2:.2f} dollars.\"print(myorder.format(quantity, itemno, price))\n ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "3",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "567",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "49",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\"I want {0} pieces of \n  item number {1} for {2:.2f} dollars.\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "format",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Also, if you want to refer to the same value more than once, use the index number:",
      "html": "<p>Also, if you want to refer to the same value more than once, use the index number:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_string_formatting5",
        "syntaxHighlighting": [
          {
            "text": "\n  age = 36name = \"John\"txt = \"His name is {1}. {1} is {0} years old.\"print(txt.format(age, \n  name))\n ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "36",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\"John\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\"His name is {1}. {1} is {0} years old.\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "format",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "age = 36name = \"John\"txt = \"His name is {1}. {1} is {0} years old.\"print(txt.format(age,\nname))",
      "syntax_highlighting": [
        {
          "text": "\n  age = 36name = \"John\"txt = \"His name is {1}. {1} is {0} years old.\"print(txt.format(age, \n  name))\n ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "36",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\"John\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\"His name is {1}. {1} is {0} years old.\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "format",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  age = <span class=\"pythonnumbercolor\" style=\"color:#905\">36</span><br/>name = <span class=\"pythonstringcolor\" style=\"color:green\">\"John\"</span><br/>txt = <span class=\"pythonstringcolor\" style=\"color:green\">\"His name is {1}. {1} is {0} years old.\"</span><br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(txt.<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">format</span>(age, <span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  name))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_string_formatting5",
      "syntax_highlighting_data": [
        {
          "text": "\n  age = 36name = \"John\"txt = \"His name is {1}. {1} is {0} years old.\"print(txt.format(age, \n  name))\n ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "36",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\"John\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\"His name is {1}. {1} is {0} years old.\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "format",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Named Indexes",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also use named indexes by entering a name inside the curly brackets {carname} , but then you must use names when you pass the parameter values txt.format(carname = \"Ford\") :",
      "html": "<p>You can also use named indexes by entering a name inside the curly brackets <code>{carname}</code>, \nbut then you must use names when you pass the parameter values\n<code>txt.format(carname = \"Ford\")</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_string_formatting6",
        "syntaxHighlighting": [
          {
            "text": "\n  myorder = \"I have a {carname}, it is a {model}.\"print(myorder.format(carname \n  = \"Ford\", model = \"Mustang\"))\n ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\"I have a {carname}, it is a {model}.\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "format",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\"Mustang\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "myorder = \"I have a {carname}, it is a {model}.\"print(myorder.format(carname\n= \"Ford\", model = \"Mustang\"))",
      "syntax_highlighting": [
        {
          "text": "\n  myorder = \"I have a {carname}, it is a {model}.\"print(myorder.format(carname \n  = \"Ford\", model = \"Mustang\"))\n ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\"I have a {carname}, it is a {model}.\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "format",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\"Mustang\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  myorder = <span class=\"pythonstringcolor\" style=\"color:green\">\"I have a {carname}, it is a {model}.\"</span><br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(myorder.<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">format</span>(carname <span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  = <span class=\"pythonstringcolor\" style=\"color:green\">\"Ford\"</span>, model = <span class=\"pythonstringcolor\" style=\"color:green\">\"Mustang\"</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/python/trypython.asp?filename=demo_string_formatting6",
      "syntax_highlighting_data": [
        {
          "text": "\n  myorder = \"I have a {carname}, it is a {model}.\"print(myorder.format(carname \n  = \"Ford\", model = \"Mustang\"))\n ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\"I have a {carname}, it is a {model}.\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "format",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\"Mustang\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What placeholders are used when dealing with f-strings?",
      "html": "<p>What placeholders are used when dealing with f-strings?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "What placeholders are used when dealing with f-strings?",
        "options": [
          {
            "value": "0",
            "text": "[]"
          },
          {
            "value": "1",
            "text": "()"
          },
          {
            "value": "2",
            "text": "{}"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_string_formatting1"
      },
      "quiz_type": "quiz",
      "question": "What placeholders are used when dealing with f-strings?",
      "options": [
        {
          "value": "0",
          "text": "[]"
        },
        {
          "value": "1",
          "text": "()"
        },
        {
          "value": "2",
          "text": "{}"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_string_formatting1",
      "html": "<form action=\"exercise.asp?x=xrcise_string_formatting1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\"><code>[]</code></label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\"><code>()</code></label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\"><code>{}</code></label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}