{
  "title": "TypeScript Object Types",
  "url": "https://www.w3schools.com/typescript/typescript_object_types.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "TypeScript Object Types",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "TypeScript has a specific syntax for typing objects.",
      "html": "<p>TypeScript has a specific syntax for typing objects.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "JavaScript Objects chapter",
          "href": "https://www.w3schools.com/js/js_objects.asp",
          "title": ""
        }
      ],
      "text": "Read more about objects in our JavaScript Objects chapter .",
      "html": "<p>Read more about objects in our <a href=\"/js/js_objects.asp\" target=\"_blank\">JavaScript Objects chapter</a>.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/typescript/trytypescript.php?filename=demo_object_types_ex",
        "syntaxHighlighting": [
          {
            "text": "\n      const car: { type: string, model: string, year: number } = {\n      \u00a0\u00a0type: \"Toyota\",\n      \u00a0\u00a0model: \"Corolla\",\n      \u00a0\u00a0year: 2009\n      };\n     ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"Toyota\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"Corolla\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "2009",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const car: { type: string, model: string, year: number } = {\ntype: \"Toyota\",\nmodel: \"Corolla\",\nyear: 2009\n};",
      "syntax_highlighting": [
        {
          "text": "\n const car: { type: string, model: string, year: number } = {\n      \u00a0\u00a0type: \"Toyota\",\n      \u00a0\u00a0model: \"Corolla\",\n      \u00a0\u00a0year: 2009\n      };\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"Toyota\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"Corolla\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "2009",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> car: { type: string, model: string, year: number } = {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      \u00a0\u00a0type: <span class=\"jsstringcolor\" style=\"color:green\">\"Toyota\"</span>,<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      \u00a0\u00a0model: <span class=\"jsstringcolor\" style=\"color:green\">\"Corolla\"</span>,<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      \u00a0\u00a0year: <span class=\"jsnumbercolor\" style=\"color:#905\">2009</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      };<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/typescript/trytypescript.php?filename=demo_object_types_ex",
      "syntax_highlighting_data": [
        {
          "text": "\n      const car: { type: string, model: string, year: number } = {\n      \u00a0\u00a0type: \"Toyota\",\n      \u00a0\u00a0model: \"Corolla\",\n      \u00a0\u00a0year: 2009\n      };\n     ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"Toyota\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"Corolla\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "2009",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "interfaces",
          "href": "https://www.w3schools.com/typescript_aliases_and_interfaces.php",
          "title": ""
        }
      ],
      "text": "Object types like this can also be written separately, and even be reused, look at interfaces for more details.",
      "html": "<p>Object types like this can also be written separately, and even be reused, look at <a href=\"typescript_aliases_and_interfaces.php\">interfaces</a> for more details.\n    </p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Type Inference",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "TypeScript can infer the types of properties based on their values.",
      "html": "<p>TypeScript can infer the types of properties based on their values.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/typescript/trytypescript.php?filename=demo_object_types_infer",
        "syntaxHighlighting": [
          {
            "text": "\n      const car = {\n      \u00a0\u00a0type: \"Toyota\",\n      };\n      car.type = \"Ford\"; // no error\n      car.type = 2; // Error: Type 'number' is not assignable to type 'string'.\n     ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"Toyota\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "type",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"Ford\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// no error",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "type",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Error: Type 'number' is not assignable to type 'string'.",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const car = {\ntype: \"Toyota\",\n};\ncar.type = \"Ford\"; // no error\ncar.type = 2; // Error: Type 'number' is not assignable to type 'string'.",
      "syntax_highlighting": [
        {
          "text": "\n const car = {\n      \u00a0\u00a0type: \"Toyota\",\n      };\n      car.type = \"Ford\"; // no error\n      car.type = 2; // Error: Type 'number' is not assignable to type 'string'.\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"Toyota\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "type",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"Ford\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// no error",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "type",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Error: Type 'number' is not assignable to type 'string'.",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> car = {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      \u00a0\u00a0type: <span class=\"jsstringcolor\" style=\"color:green\">\"Toyota\"</span>,<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      };<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      car.<span class=\"jspropertycolor\" style=\"color:black\">type</span> = <span class=\"jsstringcolor\" style=\"color:green\">\"Ford\"</span>; <span class=\"commentcolor\" style=\"color:slategray\">// no error<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      car.<span class=\"jspropertycolor\" style=\"color:black\">type</span> = <span class=\"jsnumbercolor\" style=\"color:#905\">2</span>; <span class=\"commentcolor\" style=\"color:slategray\">// Error: Type 'number' is not assignable to type 'string'.<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/typescript/trytypescript.php?filename=demo_object_types_infer",
      "syntax_highlighting_data": [
        {
          "text": "\n      const car = {\n      \u00a0\u00a0type: \"Toyota\",\n      };\n      car.type = \"Ford\"; // no error\n      car.type = 2; // Error: Type 'number' is not assignable to type 'string'.\n     ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"Toyota\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "type",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"Ford\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// no error",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "type",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Error: Type 'number' is not assignable to type 'string'.",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Optional Properties",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Optional properties are properties that don't have to be defined in the object definition.",
      "html": "<p>Optional properties are properties that don't have to be defined in the object definition.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n      const car: { type: string, mileage: number } = { // Error: Property 'mileage' is missing in type '{ type: string;\n      }' but required in type '{ type: string; mileage: number; }'.\n      \u00a0\u00a0type: \"Toyota\",\n      };\n      car.mileage = 2000;\n     ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "// Error: Property 'mileage' is missing in type '{ type: string;\n      }' but required in type '{ type: string; mileage: number; }'.",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"Toyota\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "mileage",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "2000",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const car: { type: string, mileage: number } = { // Error: Property 'mileage' is missing in type '{ type: string;\n}' but required in type '{ type: string; mileage: number; }'.\ntype: \"Toyota\",\n};\ncar.mileage = 2000;",
      "syntax_highlighting": [
        {
          "text": "\n const car: { type: string, mileage: number } = { // Error: Property 'mileage' is missing in type '{ type: string;\n      }' but required in type '{ type: string; mileage: number; }'.\n      \u00a0\u00a0type: \"Toyota\",\n      };\n      car.mileage = 2000;\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "// Error: Property 'mileage' is missing in type '{ type: string;\n      }' but required in type '{ type: string; mileage: number; }'.",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"Toyota\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "mileage",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "2000",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> car: { type: string, mileage: number } = { <span class=\"commentcolor\" style=\"color:slategray\">// Error: Property 'mileage' is missing in type '{ type: string;\n      }' but required in type '{ type: string; mileage: number; }'.<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      \u00a0\u00a0type: <span class=\"jsstringcolor\" style=\"color:green\">\"Toyota\"</span>,<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      };<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      car.<span class=\"jspropertycolor\" style=\"color:black\">mileage</span> = <span class=\"jsnumbercolor\" style=\"color:#905\">2000</span>;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n      const car: { type: string, mileage: number } = { // Error: Property 'mileage' is missing in type '{ type: string;\n      }' but required in type '{ type: string; mileage: number; }'.\n      \u00a0\u00a0type: \"Toyota\",\n      };\n      car.mileage = 2000;\n     ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "// Error: Property 'mileage' is missing in type '{ type: string;\n      }' but required in type '{ type: string; mileage: number; }'.",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"Toyota\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "mileage",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "2000",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/typescript/trytypescript.php?filename=demo_object_types_optional",
        "syntaxHighlighting": [
          {
            "text": "\n      const car: { type: string, mileage?: number } = { // no error\n      \u00a0\u00a0type: \"Toyota\"\n      };\n      car.mileage = 2000;\n     ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "// no error",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"Toyota\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "mileage",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "2000",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const car: { type: string, mileage?: number } = { // no error\ntype: \"Toyota\"\n};\ncar.mileage = 2000;",
      "syntax_highlighting": [
        {
          "text": "\n const car: { type: string, mileage?: number } = { // no error\n      \u00a0\u00a0type: \"Toyota\"\n      };\n      car.mileage = 2000;\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "// no error",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"Toyota\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "mileage",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "2000",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> car: { type: string, mileage?: number } = { <span class=\"commentcolor\" style=\"color:slategray\">// no error<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      \u00a0\u00a0type: <span class=\"jsstringcolor\" style=\"color:green\">\"Toyota\"</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      };<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      car.<span class=\"jspropertycolor\" style=\"color:black\">mileage</span> = <span class=\"jsnumbercolor\" style=\"color:#905\">2000</span>;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/typescript/trytypescript.php?filename=demo_object_types_optional",
      "syntax_highlighting_data": [
        {
          "text": "\n      const car: { type: string, mileage?: number } = { // no error\n      \u00a0\u00a0type: \"Toyota\"\n      };\n      car.mileage = 2000;\n     ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "// no error",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"Toyota\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "mileage",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "2000",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Index Signatures",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Index signatures can be used for objects without a defined list of properties.",
      "html": "<p>Index signatures can be used for objects without a defined list of properties.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/typescript/trytypescript.php?filename=demo_object_types_undefined_props",
        "syntaxHighlighting": [
          {
            "text": "\n      const nameAgeMap: { [index: string]: number } = {};\n      nameAgeMap.Jack = 25; // no error\n      nameAgeMap.Mark = \"Fifty\"; // Error: Type 'string' is not assignable to type 'number'.\n     ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "Jack",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "25",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// no error",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "Mark",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"Fifty\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// Error: Type 'string' is not assignable to type 'number'.\n     ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const nameAgeMap: { [index: string]: number } = {};\nnameAgeMap.Jack = 25; // no error\nnameAgeMap.Mark = \"Fifty\"; // Error: Type 'string' is not assignable to type 'number'.",
      "syntax_highlighting": [
        {
          "text": "\n const nameAgeMap: { [index: string]: number } = {};\n      nameAgeMap.Jack = 25; // no error\n      nameAgeMap.Mark = \"Fifty\"; // Error: Type 'string' is not assignable to type 'number'.\n     ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "Jack",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "25",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// no error",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "Mark",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"Fifty\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// Error: Type 'string' is not assignable to type 'number'.\n     ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> nameAgeMap: { [index: string]: number } = {};<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      nameAgeMap.<span class=\"jspropertycolor\" style=\"color:black\">Jack</span> = <span class=\"jsnumbercolor\" style=\"color:#905\">25</span>; <span class=\"commentcolor\" style=\"color:slategray\">// no error<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      nameAgeMap.<span class=\"jspropertycolor\" style=\"color:black\">Mark</span> = <span class=\"jsstringcolor\" style=\"color:green\">\"Fifty\"</span>; <span class=\"commentcolor\" style=\"color:slategray\">// Error: Type 'string' is not assignable to type 'number'.\n     </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/typescript/trytypescript.php?filename=demo_object_types_undefined_props",
      "syntax_highlighting_data": [
        {
          "text": "\n      const nameAgeMap: { [index: string]: number } = {};\n      nameAgeMap.Jack = 25; // no error\n      nameAgeMap.Mark = \"Fifty\"; // Error: Type 'string' is not assignable to type 'number'.\n     ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "Jack",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "25",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// no error",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "Mark",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"Fifty\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// Error: Type 'string' is not assignable to type 'number'.\n     ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Index signatures like this one can also be expressed with utility types like Record <string, number> .",
      "html": "<p>Index signatures like this one can also be expressed with utility types like <code>Record&lt;string, number&gt;</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "TypeScript Utility Types",
          "href": "https://www.w3schools.com/typescript_utility_types.php",
          "title": ""
        }
      ],
      "text": "Learn more about utility types like this in our TypeScript Utility Types chapter.",
      "html": "<p>Learn more about utility types like this in our <a href=\"typescript_utility_types.php\">TypeScript Utility Types</a> chapter.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "TypeScript Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Test Yourself With Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise:",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Add the correct types for the object below:",
      "html": "<p>Add the correct types for the object below:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "const car: { type:\n, model:\n, year:\n} = {\ntype: \"Toyota\",\nmodel: \"Corolla\",\nyear: 2009\n};",
      "language": "javascript",
      "code_html": "<pre style=\"overflow: auto;\">const car: { type: <input maxlength=\"6\" name=\"ex1\" style=\"width: 70px;\"/>, model: <input maxlength=\"6\" name=\"ex2\" style=\"width: 70px;\"/>, year: <input maxlength=\"6\" name=\"ex3\" style=\"width: 70px;\"/> } = {\n  type: \"Toyota\",\n  model: \"Corolla\",\n  year: 2009\n};\n\n        </pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Start the Exercise",
          "href": "https://www.w3schools.com/exercise.php?filename=exercise_object_types1",
          "title": ""
        }
      ],
      "text": "Start the Exercise",
      "html": "<p><a href=\"exercise.php?filename=exercise_object_types1\" target=\"_blank\">Start the Exercise</a></p>"
    }
  ]
}