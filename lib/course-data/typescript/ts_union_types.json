{
  "title": "TypeScript Union Types",
  "url": "https://www.w3schools.com/typescript/typescript_union_types.php",
  "metadata": {
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "TypeScript Union Types",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Union types are used when a value can be more than a single type.",
      "html": "<p><strong>Union types</strong> are used when a value can be more than a single type.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Such as when a property would be string or number .",
      "html": "<p>Such as when a property would be <code>string</code> or <code>number</code>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Union | (OR)",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Using the | we are saying our parameter is a string or number :",
      "html": "<p>Using the <code>|</code> we are saying our parameter is a <code>string</code> or <code>number</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/typescript/trytypescript.php?filename=demo_or",
        "syntaxHighlighting": [
          {
            "text": "\n            function printStatusCode(code: string | number) {\n            \u00a0\u00a0console.log(`My status code is ${code}.`)\n            }\n            printStatusCode(404);\n            printStatusCode('404');\n         ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "log",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "`My status code is ${code}.`",
            "color": "rgb(255, 85, 0)",
            "class": "jsstringtempcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "404",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "'404'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "function printStatusCode(code: string | number) {\nconsole.log(`My status code is ${code}.`)\n}\nprintStatusCode(404);\nprintStatusCode('404');",
      "syntax_highlighting": [
        {
          "text": "\n function printStatusCode(code: string | number) {\n            \u00a0\u00a0console.log(`My status code is ${code}.`)\n            }\n            printStatusCode(404);\n            printStatusCode('404');\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "log",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "`My status code is ${code}.`",
          "color": "#f50",
          "class": [
            "jsstringtempcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "404",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "'404'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> printStatusCode(code: string | number) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>            \u00a0\u00a0console.<span class=\"jspropertycolor\" style=\"color:black\">log</span>(<span class=\"jsstringtempcolor\" style=\"color:#f50\">`My status code is ${code}.`</span>)<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>            }<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>            printStatusCode(<span class=\"jsnumbercolor\" style=\"color:#905\">404</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>            printStatusCode(<span class=\"jsstringcolor\" style=\"color:green\">'404'</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/typescript/trytypescript.php?filename=demo_or",
      "syntax_highlighting_data": [
        {
          "text": "\n            function printStatusCode(code: string | number) {\n            \u00a0\u00a0console.log(`My status code is ${code}.`)\n            }\n            printStatusCode(404);\n            printStatusCode('404');\n         ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "log",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "`My status code is ${code}.`",
          "color": "rgb(255, 85, 0)",
          "class": "jsstringtempcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "404",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "'404'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Union Type Errors",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: you need to know what your type is when union types are being used to avoid type errors:",
      "html": "<p><strong>Note:</strong> you need to know what your type is when union types are being used to avoid type errors:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/typescript/trytypescript.php?filename=demo_or_error",
        "syntaxHighlighting": [
          {
            "text": "\n            function printStatusCode(code: string | number) {\n            \u00a0\u00a0console.log(`My status code is ${code.toUpperCase()}.`) // error: Property 'toUpperCase' does not exist ontype 'string | number'.\n            \u00a0\u00a0Property 'toUpperCase' does not exist on type 'number'\n            }\n         ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "log",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "`My status code is ${code.toUpperCase()}.`",
            "color": "rgb(255, 85, 0)",
            "class": "jsstringtempcolor"
          },
          {
            "text": "// error: Property 'toUpperCase' does not exist ontype 'string | number'.",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "'toUpperCase'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "'number'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "function printStatusCode(code: string | number) {\nconsole.log(`My status code is ${code.toUpperCase()}.`) // error: Property 'toUpperCase' does not exist ontype 'string | number'.\nProperty 'toUpperCase' does not exist on type 'number'\n}",
      "syntax_highlighting": [
        {
          "text": "\n function printStatusCode(code: string | number) {\n            \u00a0\u00a0console.log(`My status code is ${code.toUpperCase()}.`) // error: Property 'toUpperCase' does not exist ontype 'string | number'.\n            \u00a0\u00a0Property 'toUpperCase' does not exist on type 'number'\n            }\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "log",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "`My status code is ${code.toUpperCase()}.`",
          "color": "#f50",
          "class": [
            "jsstringtempcolor"
          ]
        },
        {
          "text": "// error: Property 'toUpperCase' does not exist ontype 'string | number'.",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "'toUpperCase'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "'number'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> printStatusCode(code: string | number) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>            \u00a0\u00a0console.<span class=\"jspropertycolor\" style=\"color:black\">log</span>(<span class=\"jsstringtempcolor\" style=\"color:#f50\">`My status code is ${code.toUpperCase()}.`</span>) <span class=\"commentcolor\" style=\"color:slategray\">// error: Property 'toUpperCase' does not exist ontype 'string | number'.<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>            \u00a0\u00a0Property <span class=\"jsstringcolor\" style=\"color:green\">'toUpperCase'</span> does not exist on type <span class=\"jsstringcolor\" style=\"color:green\">'number'</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>            }<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/typescript/trytypescript.php?filename=demo_or_error",
      "syntax_highlighting_data": [
        {
          "text": "\n            function printStatusCode(code: string | number) {\n            \u00a0\u00a0console.log(`My status code is ${code.toUpperCase()}.`) // error: Property 'toUpperCase' does not exist ontype 'string | number'.\n            \u00a0\u00a0Property 'toUpperCase' does not exist on type 'number'\n            }\n         ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "log",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "`My status code is ${code.toUpperCase()}.`",
          "color": "rgb(255, 85, 0)",
          "class": "jsstringtempcolor"
        },
        {
          "text": "// error: Property 'toUpperCase' does not exist ontype 'string | number'.",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "'toUpperCase'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "'number'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "TypeScript Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Test Yourself With Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise:",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Specify that the parameter \"myVar\" for the function can be either string or number:",
      "html": "<p>Specify that the parameter \"myVar\" for the function can be either string or number:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "function myFunc(myVar:\n\n\n) {\nconsole.log(myVar)\n}",
      "language": "javascript",
      "code_html": "<pre style=\"overflow: auto;\">function myFunc(myVar: <input maxlength=\"6\" name=\"ex1\" style=\"width: 70px;\"/> <input maxlength=\"1\" name=\"ex2\" style=\"width: 20px;\"/> <input maxlength=\"6\" name=\"ex3\" style=\"width: 70px;\"/>) {\n  console.log(myVar)\n}\n</pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Start the Exercise",
          "href": "https://www.w3schools.com/exercise.php?filename=exercise_union_types1",
          "title": ""
        }
      ],
      "text": "Start the Exercise",
      "html": "<p><a href=\"exercise.php?filename=exercise_union_types1\" target=\"_blank\">Start the Exercise</a></p>"
    }
  ]
}