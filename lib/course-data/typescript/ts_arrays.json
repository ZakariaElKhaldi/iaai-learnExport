{
  "title": "TypeScript Arrays",
  "url": "https://www.w3schools.com/typescript/typescript_arrays.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "TypeScript Arrays",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "TypeScript has a specific syntax for typing arrays.",
      "html": "<p>TypeScript has a specific syntax for typing arrays.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "JavaScript Array chapter",
          "href": "https://www.w3schools.com/js/js_arrays.asp",
          "title": ""
        }
      ],
      "text": "Read more about arrays in our JavaScript Array chapter .",
      "html": "<p>Read more about arrays in our <a href=\"/js/js_arrays.asp\" target=\"_blank\">JavaScript Array chapter</a>.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/typescript/trytypescript.php?filename=demo_arrays_typed",
        "syntaxHighlighting": [
          {
            "text": "\n      const names: string[] = [];\n      names.push(\"Dylan\"); // no error\n      // names.push(3); // Error: Argument of type 'number' is not assignable to parameter of type 'string'.\n     ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"Dylan\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// no error",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// names.push(3); // Error: Argument of type 'number' is not assignable to parameter of type 'string'.\n     ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const names: string[] = [];\nnames.push(\"Dylan\"); // no error\n// names.push(3); // Error: Argument of type 'number' is not assignable to parameter of type 'string'.",
      "syntax_highlighting": [
        {
          "text": "\n const names: string[] = [];\n      names.push(\"Dylan\"); // no error\n // names.push(3); // Error: Argument of type 'number' is not assignable to parameter of type 'string'.\n     ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"Dylan\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// no error",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// names.push(3); // Error: Argument of type 'number' is not assignable to parameter of type 'string'.\n     ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> names: string[] = [];<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      names.<span class=\"jspropertycolor\" style=\"color:black\">push</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"Dylan\"</span>); <span class=\"commentcolor\" style=\"color:slategray\">// no error<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// names.push(3); // Error: Argument of type 'number' is not assignable to parameter of type 'string'.\n     </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/typescript/trytypescript.php?filename=demo_arrays_typed",
      "syntax_highlighting_data": [
        {
          "text": "\n      const names: string[] = [];\n      names.push(\"Dylan\"); // no error\n      // names.push(3); // Error: Argument of type 'number' is not assignable to parameter of type 'string'.\n     ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"Dylan\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// no error",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// names.push(3); // Error: Argument of type 'number' is not assignable to parameter of type 'string'.\n     ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Readonly",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The readonly keyword can prevent arrays from being changed.",
      "html": "<p>The <code>readonly</code> keyword can prevent arrays from being changed.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/typescript/trytypescript.php?filename=demo_arrays_readonly",
        "syntaxHighlighting": [
          {
            "text": "\n      const names: readonly string[] = [\"Dylan\"];\n      names.push(\"Jack\"); // Error: Property 'push' does not exist on type 'readonly string[]'. \n      // try removing the readonly modifier and see if it works?\n     ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"Dylan\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"Jack\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// Error: Property 'push' does not exist on type 'readonly string[]'. ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// try removing the readonly modifier and see if it works?\n     ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const names: readonly string[] = [\"Dylan\"];\nnames.push(\"Jack\"); // Error: Property 'push' does not exist on type 'readonly string[]'.\n// try removing the readonly modifier and see if it works?",
      "syntax_highlighting": [
        {
          "text": "\n const names: readonly string[] = [\"Dylan\"];\n      names.push(\"Jack\"); // Error: Property 'push' does not exist on type 'readonly string[]'. \n // try removing the readonly modifier and see if it works?\n     ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"Dylan\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"Jack\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// Error: Property 'push' does not exist on type 'readonly string[]'. ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// try removing the readonly modifier and see if it works?\n     ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> names: readonly string[] = [<span class=\"jsstringcolor\" style=\"color:green\">\"Dylan\"</span>];<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      names.<span class=\"jspropertycolor\" style=\"color:black\">push</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"Jack\"</span>); <span class=\"commentcolor\" style=\"color:slategray\">// Error: Property 'push' does not exist on type 'readonly string[]'. <br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// try removing the readonly modifier and see if it works?\n     </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/typescript/trytypescript.php?filename=demo_arrays_readonly",
      "syntax_highlighting_data": [
        {
          "text": "\n      const names: readonly string[] = [\"Dylan\"];\n      names.push(\"Jack\"); // Error: Property 'push' does not exist on type 'readonly string[]'. \n      // try removing the readonly modifier and see if it works?\n     ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"Dylan\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"Jack\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// Error: Property 'push' does not exist on type 'readonly string[]'. ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// try removing the readonly modifier and see if it works?\n     ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Type Inference",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "TypeScript can infer the type of an array if it has values.",
      "html": "<p>TypeScript can infer the type of an array if it has values.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/typescript/trytypescript.php?filename=demo_arrays_inferred",
        "syntaxHighlighting": [
          {
            "text": "\n      const numbers = [1, 2, 3]; // inferred to type number[]\n      numbers.push(4); // no error\n      // comment line below out to see the successful assignment \n      numbers.push(\"2\"); // Error: Argument of type 'string' is not assignable to parameter of type 'number'.\n      let head: number = numbers[0]; // no error\n     ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "3",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// inferred to type number[]",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "4",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// no error",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// comment line below out to see the successful assignment ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"2\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// Error: Argument of type 'string' is not assignable to parameter of type 'number'.",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// no error\n     ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const numbers = [1, 2, 3]; // inferred to type number[]\nnumbers.push(4); // no error\n// comment line below out to see the successful assignment\nnumbers.push(\"2\"); // Error: Argument of type 'string' is not assignable to parameter of type 'number'.\nlet head: number = numbers[0]; // no error",
      "syntax_highlighting": [
        {
          "text": "\n const numbers = [1, 2, 3]; // inferred to type number[]\n      numbers.push(4); // no error\n // comment line below out to see the successful assignment \n      numbers.push(\"2\"); // Error: Argument of type 'string' is not assignable to parameter of type 'number'.\n let head: number = numbers[0]; // no error\n     ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "3",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// inferred to type number[]",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "4",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// no error",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// comment line below out to see the successful assignment ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"2\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// Error: Argument of type 'string' is not assignable to parameter of type 'number'.",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// no error\n     ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> numbers = [<span class=\"jsnumbercolor\" style=\"color:#905\">1</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">2</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">3</span>]; <span class=\"commentcolor\" style=\"color:slategray\">// inferred to type number[]<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      numbers.<span class=\"jspropertycolor\" style=\"color:black\">push</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">4</span>); <span class=\"commentcolor\" style=\"color:slategray\">// no error<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// comment line below out to see the successful assignment <br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>      numbers.<span class=\"jspropertycolor\" style=\"color:black\">push</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"2\"</span>); <span class=\"commentcolor\" style=\"color:slategray\">// Error: Argument of type 'string' is not assignable to parameter of type 'number'.<br/></span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> head: number = numbers[<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>]; <span class=\"commentcolor\" style=\"color:slategray\">// no error\n     </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/typescript/trytypescript.php?filename=demo_arrays_inferred",
      "syntax_highlighting_data": [
        {
          "text": "\n      const numbers = [1, 2, 3]; // inferred to type number[]\n      numbers.push(4); // no error\n      // comment line below out to see the successful assignment \n      numbers.push(\"2\"); // Error: Argument of type 'string' is not assignable to parameter of type 'number'.\n      let head: number = numbers[0]; // no error\n     ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "3",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// inferred to type number[]",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "4",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// no error",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// comment line below out to see the successful assignment ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"2\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// Error: Argument of type 'string' is not assignable to parameter of type 'number'.",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// no error\n     ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "TypeScript Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Test Yourself With Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise:",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Prevent the array from being changed:",
      "html": "<p>Prevent the array from being changed:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "const names:\nstring[] = [\"Dylan\"];",
      "language": "javascript",
      "code_html": "<pre style=\"overflow: auto;\">const names: <input maxlength=\"8\" name=\"ex1\" style=\"width: 90px;\"/> string[] = [\"Dylan\"];\n        </pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Start the Exercise",
          "href": "https://www.w3schools.com/exercise.php?filename=exercise_arrays1",
          "title": ""
        }
      ],
      "text": "Start the Exercise",
      "html": "<p><a href=\"exercise.php?filename=exercise_arrays1\" target=\"_blank\">Start the Exercise</a></p>"
    }
  ]
}