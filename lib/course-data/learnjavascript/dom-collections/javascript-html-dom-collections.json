{
  "id": "75b4eb7b-dc52-45f8-a960-f23a22083378",
  "title": "JavaScript HTML DOM Collections",
  "slug": "javascript-html-dom-collections",
  "metadata": {
    "description": "Learn about JavaScript HTML DOM Collections with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "htmlcollection",
      "elements",
      "mycollection",
      "array",
      "length",
      "like",
      "object",
      "getelementsbytagname",
      "collection",
      "document"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJavaScript",
    "subcategory": "DOM Collections"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JavaScript H\nTML DOM Collections",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The HTMLCollection Object\nThe\ngetElementsByTagName()\nmethod returns an\nHTMLCollection\nobject.\nAn\nHTMLCollection\nobject is \nan array-like list (collection) of HTML elements.\nThe following code selects all\n<p>\nelements in a document:\nExample\nconst myCollection = document.getElementsByTagName(\"p\");\nThe elements in the collection can be accessed by an index number.\nTo access the \nsecond <p> element you can write:\nmyCollection[1]\n\nNote:\nThe index starts at 0.\nHTML HTMLCollection Length\nThe\nlength\nproperty defines the number of elements in an\nHTMLCollection\n:\nExample\nmyCollection.length\n\nThe\nlength\nproperty is useful when you want to loop through the elements in a \ncollection:\nExample\nChange the text color of all <p> elements:\nconst myCollection = document.getElementsByTagName(\"p\");\nfor (let i = 0; i < myCollection.length; i++) {\nmyCollection[i].style.color = \"red\";\n}\n\nAn HTMLCollection is NOT an array!\nAn HTMLCollection may look \nlike an array, but it is not.\nYou can loop through the list and refer to \nthe elements with a number (just like an array).\nHowever, you cannot use array methods like valueOf(), pop(), push(), \nor join() on an HTMLCollection.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "const myCollection = document.getElementsByTagName(\"p\");",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "myCollection.length",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "const myCollection = document.getElementsByTagName(\"p\");\nfor (let i = 0; i < myCollection.length; i++) {\nmyCollection[i].style.color = \"red\";\n}",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "const myCollection = document.getElementsByTagName(\"p\");"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "myCollection.length"
    }
  ],
  "related_topics": [
    {
      "id": "becc3e7c-5035-4091-9d8c-551dd4b9eedd",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "9f7c4d34-0980-46ff-bcf1-0b1c4605259d",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "db555a7c-02fe-4cff-8d3e-599909bafc3c",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is An\nHTMLCollection\nobject?",
      "options": [
        "useful when you want to loop through the elements in a \ncollection:\nExample\nChange the text color of all <p> elements:\nconst myCollection = document",
        "None of the above.",
        "None of the above.",
        "an array-like list (collection) of HTML elements"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of An\nHTMLCollection\nobject is 'an array-like list (collection) of HTML elements'."
    },
    {
      "question": "What is length\n\nThe\nlength\nproperty?",
      "options": [
        "None of the above.",
        "None of the above.",
        "useful when you want to loop through the elements in a \ncollection:\nExample\nChange the text color of all <p> elements:\nconst myCollection = document",
        "an array-like list (collection) of HTML elements"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of length\n\nThe\nlength\nproperty is 'useful when you want to loop through the elements in a \ncollection:\nExample\nChange the text color of all <p> elements:\nconst myCollection = document'."
    }
  ],
  "summary": "This tutorial covers JavaScript HTML DOM Collections concepts and techniques. You'll learn how to use JavaScript HTML DOM Collections effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaScript HTML DOM Collections and how to apply it in your projects."
}