{
  "id": "1352e619-75ed-4cc2-a818-b2b0e1ab0787",
  "title": "JavaScript Static Methods",
  "slug": "javascript-static-methods",
  "metadata": {
    "description": "Learn about JavaScript Static Methods with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "hello",
      "name",
      "static",
      "class",
      "mycar",
      "object",
      "document",
      "getelementbyid",
      "demo",
      "innerhtml"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJavaScript",
    "subcategory": "Class Static"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JavaScript Static Methods",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Static class methods are defined on the class itself.\nYou cannot call a\nstatic\nmethod on an object, only on an object class.\nExample\nclass Car {\nconstructor(name) {\nthis.name = \n  name;\n}\nstatic hello() {\nreturn \"Hello!!\";\n}\n}\nconst myCar = new Car(\"Ford\");\n// You can call 'hello()' on \n  the Car Class:\ndocument.getElementById(\"demo\").innerHTML \n  = Car.hello();\n// But NOT on a Car Object:\n// document.getElementById(\"demo\").innerHTML \n  = myCar.hello();\n// this will raise an error.\n\nIf you want to use the myCar object inside the\nstatic\nmethod, you can send it \nas a parameter:\nExample\nclass Car {\nconstructor(name) {\nthis.name = \n  name;\n}\nstatic hello(x) {\nreturn \"Hello \" + \n  x.name;\n}\n}\nconst myCar = new Car(\"Ford\");\ndocument.getElementById(\"demo\").innerHTML \n  = Car.hello(myCar);\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "class Car {\nconstructor(name) {\nthis.name = \n  name;\n}\nstatic hello() {\nreturn \"Hello!!\";\n}\n}\nconst myCar = new Car(\"Ford\");\n// You can call 'hello()' on \n  the Car Class:\ndocument.getElementById(\"demo\").innerHTML \n  = Car.hello();\n// But NOT on a Car Object:\n// document.getElementById(\"demo\").innerHTML \n  = myCar.hello();\n// this will raise an error.",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "class Car {\nconstructor(name) {\nthis.name = \n  name;\n}\nstatic hello(x) {\nreturn \"Hello \" + \n  x.name;\n}\n}\nconst myCar = new Car(\"Ford\");\ndocument.getElementById(\"demo\").innerHTML \n  = Car.hello(myCar);",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "class Car {\nconstructor(name) {\nthis.name = \n  name;\n}\nstatic hello() {\nreturn \"Hello!!\";\n}\n}\nconst myCar = new Car(\"Ford\");\n// You can call 'hello()' on \n  the Car Class:\ndocument.getElementById(\"demo\").innerHTML \n  = Car.hello();\n# TODO: Complete this line\n// document.getElementById(\"demo\").innerHTML \n  = myCar.hello();\n// this will raise an error.",
      "solution": "class Car {\nconstructor(name) {\nthis.name = \n  name;\n}\nstatic hello() {\nreturn \"Hello!!\";\n}\n}\nconst myCar = new Car(\"Ford\");\n// You can call 'hello()' on \n  the Car Class:\ndocument.getElementById(\"demo\").innerHTML \n  = Car.hello();\n// But NOT on a Car Object:\n// document.getElementById(\"demo\").innerHTML \n  = myCar.hello();\n// this will raise an error."
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "class Car {\nconstructor(name) {\nthis.name = \n  name;\n}\nstatic hello(x) {\nreturn \"Hello \" + \n# TODO: Complete this line\n}\n}\nconst myCar = new Car(\"Ford\");\ndocument.getElementById(\"demo\").innerHTML \n  = Car.hello(myCar);",
      "solution": "class Car {\nconstructor(name) {\nthis.name = \n  name;\n}\nstatic hello(x) {\nreturn \"Hello \" + \n  x.name;\n}\n}\nconst myCar = new Car(\"Ford\");\ndocument.getElementById(\"demo\").innerHTML \n  = Car.hello(myCar);"
    }
  ],
  "related_topics": [
    {
      "id": "ce5c4ca8-8d3e-44ac-88ea-915c14c670bd",
      "title": "Advanced Javascript Techniques",
      "relationship": "next_topic"
    },
    {
      "id": "c270c2ea-656e-41be-9bb5-1604e1c6dc2f",
      "title": "Javascript Project: Build a Real-World Application",
      "relationship": "suggested_next"
    },
    {
      "id": "05fec0ee-4bd0-40fe-bf30-e5e906f5fddc",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is JavaScript Static Methods\n\nStatic class methods?",
      "options": [
        "None of the above.",
        "defined on the class itself",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of JavaScript Static Methods\n\nStatic class methods is 'defined on the class itself'."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers JavaScript Static Methods concepts and techniques. You'll learn how to use JavaScript Static Methods effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaScript Static Methods and how to apply it in your projects."
}