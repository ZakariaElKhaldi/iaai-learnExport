{
  "id": "553b5861-89ab-4377-80dc-cdbb57cc0b8a",
  "title": "JavaScriptForms",
  "slug": "javascriptforms",
  "metadata": {
    "description": "Learn about JavaScriptForms with clear explanations and practical examples.",
    "keywords": [
      "input",
      "validation",
      "form",
      "html",
      "constraint",
      "required",
      "javascript",
      "value",
      "type",
      "specifies"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJavaScript",
    "subcategory": "DOM Forms"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JavaScript\nForms",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "JavaScript Form Validation\nHTML form validation can be done by JavaScript.\nIf a form field (fname) is empty, this function alerts a message, and returns \nfalse, to prevent the form from being submitted:\nJavaScript Example\nfunction validateForm() {\nlet\nx = document.forms[\"myForm\"][\"fname\"].value;\nif (x == \"\") {\nalert(\"Name must be filled out\");\nreturn false;\n}\n}\nThe function can be called when the form is submitted:\nHTML Form Example\n<form name=\"myForm\" action=\"/action_page.php\"\nonsubmit=\"return validateForm()\"\nmethod=\"post\">\nName: <input type=\"text\" name=\"fname\">\n<input type=\"submit\" value=\"Submit\">\n</form>\n\nJavaScript Can Validate Numeric Input\nJavaScript is often used to validate numeric input:\nPlease input a number between 1 and 10\nSubmit\n\nAutomatic HTML Form Validation\nHTML form validation can be performed automatically by the browser:\nIf a form field (fname) is empty, the\nrequired\nattribute prevents this form from being \nsubmitted:\nHTML Form Example\n<form action=\"/action_page.php\" method=\"post\">\n<input type=\"text\" name=\"fname\"\nrequired\n>\n<input type=\"submit\" value=\"Submit\">\n</form>\n\nAutomatic HTML form validation does not work in Internet Explorer 9 or earlier.\nData Validation\nData validation is the process of ensuring that user input is clean, \ncorrect, and useful.\nTypical validation tasks are:\nhas the user filled in all required fields?\nhas the user entered a valid date?\nhas the user entered text in a numeric field?\nMost often, the purpose of data validation is to ensure correct user input.\nValidation can be defined by many different methods, and deployed in many \ndifferent ways.\nServer side validation\nis performed by a web server, after input has been sent to the \nserver.\nClient side validation\nis performed by a web browser, before input is sent to a web server.\nHTML Constraint Validation\nHTML5 introduced a new HTML validation concept called\nconstraint \nvalidation\n.\nHTML constraint validation is based on:\nConstraint validation\nHTML\nInput Attributes\nConstraint validation\nCSS Pseudo Selectors\nConstraint validation\nDOM Properties and Methods\nConstraint Validation HTML Input Attributes\nAttribute\nDescription\ndisabled\nSpecifies that the input element should be disabled\nmax\nSpecifies the maximum value of an input element\nmin\nSpecifies the minimum value of an input element\npattern\nSpecifies the value pattern of an input element\nrequired\nSpecifies that the input field requires an element\ntype\nSpecifies the type of an input element\nFor a full list, go to\nHTML \nInput Attributes\n.\nConstraint Validation CSS Pseudo Selectors\nSelector\nDescription\n:disabled\nSelects input elements with the \"disabled\" attribute specified\n:invalid\nSelects input elements with invalid values\n:optional\nSelects input elements with no \"required\" attribute specified\n:required\nSelects input elements with the \"required\" attribute specified\n:valid\nSelects input elements with valid values\nFor a full list, go to\nCSS \nPseudo Classes\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "JavaScript Example",
      "content": "",
      "order": 3,
      "code": "function validateForm() {\nlet\nx = document.forms[\"myForm\"][\"fname\"].value;\nif (x == \"\") {\nalert(\"Name must be filled out\");\nreturn false;\n}\n}",
      "language": "javascript",
      "explanation": "Example of javascript example"
    },
    {
      "type": "code_example",
      "title": "HTML Form Example",
      "content": "",
      "order": 4,
      "code": "<form name=\"myForm\" action=\"/action_page.php\"\nonsubmit=\"return validateForm()\"\nmethod=\"post\">\nName: <input type=\"text\" name=\"fname\">\n<input type=\"submit\" value=\"Submit\">\n</form>",
      "language": "html",
      "explanation": "Example of html form example"
    },
    {
      "type": "code_example",
      "title": "HTML Form Example",
      "content": "",
      "order": 5,
      "code": "<form action=\"/action_page.php\" method=\"post\">\n<input type=\"text\" name=\"fname\"\nrequired\n>\n<input type=\"submit\" value=\"Submit\">\n</form>",
      "language": "html",
      "explanation": "Example of html form example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "function validateForm() {\nlet\nx = document.forms[\"myForm\"][\"fname\"].value;\nif (x == \"\") {\nalert(\"Name must be filled out\");\nreturn false;\n}\n# TODO: Complete this line",
      "solution": "function validateForm() {\nlet\nx = document.forms[\"myForm\"][\"fname\"].value;\nif (x == \"\") {\nalert(\"Name must be filled out\");\nreturn false;\n}\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<form name=\"myForm\" action=\"/action_page.php\"\nonsubmit=\"return validateForm()\"\nmethod=\"post\">\n# TODO: Complete this line\n<input type=\"submit\" value=\"Submit\">\n</form>",
      "solution": "<form name=\"myForm\" action=\"/action_page.php\"\nonsubmit=\"return validateForm()\"\nmethod=\"post\">\nName: <input type=\"text\" name=\"fname\">\n<input type=\"submit\" value=\"Submit\">\n</form>"
    }
  ],
  "related_topics": [
    {
      "id": "300f97b0-9a23-4510-a157-da4266c5be47",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "6fcb32fe-ca95-4b8a-9a9a-420066d01b5f",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "e818fc36-0f0f-4990-a5b1-d71f0897ed4e",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The function can be called when the form?",
      "options": [
        "Not a The function can be called when the form.",
        "None of the above.",
        "submitted:\nHTML Form Example\n<form name=\"myForm\" action=\"/action_page",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of The function can be called when the form is 'submitted:\nHTML Form Example\n<form name=\"myForm\" action=\"/action_page'."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers JavaScriptForms concepts and techniques. You'll learn how to use JavaScriptForms effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaScriptForms and how to apply it in your projects."
}