{
  "id": "5d9ce3ef-dd15-4f69-97d6-49bea79f2d97",
  "title": "Chart.js",
  "slug": "chartjs",
  "metadata": {
    "description": "Learn about Chart.js with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "chart",
      "data",
      "const",
      "type",
      "mychart",
      "xvalues",
      "rgba",
      "line",
      "options",
      "yvalues"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJavaScript",
    "subcategory": "JS Chart.js"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Chart.js",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Chart.js\nis an free JavaScript library for making HTML-based charts.\nIt is one of the simplest visualization libraries for JavaScript, and \ncomes with the many built-in chart types:\nScatter Plot\nLine Chart\nBar Chart\nPie Chart\nDonut Chart\nBubble Chart\nArea Chart\nRadar Chart\nMixed Chart\nHow to Use Chart.js?\n1.\nAdd a link to the providing CDN (Content Delivery Network):\n<script\nsrc=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js\">\n</script>\n2.\nAdd a <canvas> to where in the HTML you want to draw the chart:\n<canvas id=\"myChart\" style=\"width:100%;max-width:700px\"></canvas>\nThe canvas element must have a unique id.\nTypical Bar Chart Syntax:\nconst myChart = new Chart(\"myChart\", {\ntype: \"bar\",\ndata: {},\noptions: {}\n});\nTypical Line Chart Syntax:\nconst myChart = new Chart(\"myChart\", {\ntype: \"line\",\ndata: {},\noptions: {}\n});\nBar Charts\nSource Code\nconst xValues = [\"Italy\", \"France\", \"Spain\", \"USA\", \"Argentina\"];\nconst yValues = [55, 49, 44, 24, 15];\nconst barColors = [\"red\", \"green\",\"blue\",\"orange\",\"brown\"];\nnew Chart(\"myChart\", {\ntype: \"bar\",\ndata: {\nlabels: xValues,\ndatasets: [{\nbackgroundColor: barColors,\ndata: yValues\n}]\n},\noptions: {...}\n});\n\nColor only one bar:\nconst barColors = [\"blue\"];\n\nSame color all bars:\nconst barColors =\"red\";\n\nColor Shades:\nconst barColors = [\n\"rgba(0,0,255,1.0)\",\n\"rgba(0,0,255,0.8)\",\n\"rgba(0,0,255,0.6)\",\n\"rgba(0,0,255,0.4)\",\n\"rgba(0,0,255,0.2)\",\n];\n\nHorizontal Bars\nJust change type from \"bar\" to \"horizontalBar\":\ntype: \"horizontalBar\",\n\nPie Charts\nExample\nnew Chart(\"myChart\", {\ntype: \"pie\",\ndata: {\nlabels: xValues,\ndatasets: [{\nbackgroundColor: barColors,\ndata: yValues\n}]\n},\noptions: {\ntitle: {\ndisplay: true,\ntext: \"World Wide Wine Production\"\n}\n}\n});\n\nDoughnut Charts\nJust change type from \"pie\" to \"doughnut\":\ntype: \"doughnut\";\n\nScatter Plots\nHouse Prices vs. Size\nSource Code\nconst xyValues = [\n{x:50, y:7},\n{x:60, y:8},\n{x:70, y:8},\n{x:80, y:9},\n{x:90, y:9},\n{x:100, y:9},\n{x:110, y:10},\n{x:120, y:11},\n{x:130, y:14},\n{x:140, y:14},\n{x:150, y:15}\n];\nnew Chart(\"myChart\", {\ntype: \"scatter\",\ndata: {\ndatasets: [{\npointRadius: 4,\npointBackgroundColor: \"rgba(0,0,255,1)\",\ndata: xyValues\n}]\n},\noptions:{...}\n});\n\nLine Graphs\nHouse Prices vs. Size\nSource Code\nconst xValues = [50,60,70,80,90,100,110,120,130,140,150];\nconst yValues = [7,8,8,9,9,9,10,11,14,14,15];\nnew Chart(\"myChart\", {\ntype: \"line\",\ndata: {\nlabels: xValues,\ndatasets: [{\nbackgroundColor:\"rgba(0,0,255,1.0)\",\nborderColor: \"rgba(0,0,255,0.1)\",\ndata: yValues\n}]\n},\noptions:{...}\n});\n\nIf you set the borderColor to zero, you can\nscatter plot\nthe line graph:\nborderColor: \"rgba(0,0,0,0)\",\n\nMultiple Lines\nSource Code\nconst xValues = [100,200,300,400,500,600,700,800,900,1000];\nnew Chart(\"myChart\", {\ntype: \"line\",\ndata: {\nlabels: xValues,\ndatasets: [{\ndata: [860,1140,1060,1060,1070,1110,1330,2210,7830,2478],\nborderColor: \"red\",\nfill: false\n},{\ndata: [1600,1700,1700,1900,2000,2700,4000,5000,6000,7000],\nborderColor: \"green\",\nfill: false\n},{\ndata: [300,700,2000,5000,6000,4000,2000,1000,200,100],\nborderColor: \"blue\",\nfill: false\n}]\n},\noptions: {\nlegend: {display: false}\n}\n});\n\nLinear Graphs\nSource Code\nconst xValues = [];\nconst yValues = [];\ngenerateData(\"x * 2 + 7\", 0, 10, 0.5);\nnew Chart(\"myChart\", {\ntype: \"line\",\ndata: {\nlabels: xValues,\ndatasets: [{\nfill: false,\npointRadius: 1,\nborderColor: \"rgba(255,0,0,0.5)\",\ndata: yValues\n}]\n},\noptions: {...}\n});\nfunction generateData(value, i1, i2, step = 1) {\nfor (let x = i1; x <= i2; x += step) {\nyValues.push(eval(value));\nxValues.push(x);\n}\n}\n\nFunction Graphs\nSame as Linear Graph. Just change the generateData parameter(s):\ngenerateData(\"Math.sin(x)\", 0, 10, 0.5);\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<script\nsrc=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js\">\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<canvas id=\"myChart\" style=\"width:100%;max-width:700px\"></canvas>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "const myChart = new Chart(\"myChart\", {\ntype: \"bar\",\ndata: {},\noptions: {}\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Source Code",
      "content": "",
      "order": 6,
      "code": "const xValues = [\"Italy\", \"France\", \"Spain\", \"USA\", \"Argentina\"];\nconst yValues = [55, 49, 44, 24, 15];\nconst barColors = [\"red\", \"green\",\"blue\",\"orange\",\"brown\"];\nnew Chart(\"myChart\", {\ntype: \"bar\",\ndata: {\nlabels: xValues,\ndatasets: [{\nbackgroundColor: barColors,\ndata: yValues\n}]\n},\noptions: {...}\n});",
      "language": "javascript",
      "explanation": "Example of source code"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "const barColors = [\"blue\"];",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "const barColors =\"red\";",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "const barColors = [\n\"rgba(0,0,255,1.0)\",\n\"rgba(0,0,255,0.8)\",\n\"rgba(0,0,255,0.6)\",\n\"rgba(0,0,255,0.4)\",\n\"rgba(0,0,255,0.2)\",\n];",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Horizontal Bars",
      "content": "",
      "order": 10,
      "code": "type: \"horizontalBar\",",
      "language": "javascript",
      "explanation": "Example of horizontal bars"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "new Chart(\"myChart\", {\ntype: \"pie\",\ndata: {\nlabels: xValues,\ndatasets: [{\nbackgroundColor: barColors,\ndata: yValues\n}]\n},\noptions: {\ntitle: {\ndisplay: true,\ntext: \"World Wide Wine Production\"\n}\n}\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": "type: \"doughnut\";",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Source Code",
      "content": "",
      "order": 13,
      "code": "const xyValues = [\n{x:50, y:7},\n{x:60, y:8},\n{x:70, y:8},\n{x:80, y:9},\n{x:90, y:9},\n{x:100, y:9},\n{x:110, y:10},\n{x:120, y:11},\n{x:130, y:14},\n{x:140, y:14},\n{x:150, y:15}\n];\nnew Chart(\"myChart\", {\ntype: \"scatter\",\ndata: {\ndatasets: [{\npointRadius: 4,\npointBackgroundColor: \"rgba(0,0,255,1)\",\ndata: xyValues\n}]\n},\noptions:{...}\n});",
      "language": "javascript",
      "explanation": "Example of source code"
    },
    {
      "type": "code_example",
      "title": "Source Code",
      "content": "",
      "order": 14,
      "code": "const xValues = [50,60,70,80,90,100,110,120,130,140,150];\nconst yValues = [7,8,8,9,9,9,10,11,14,14,15];\nnew Chart(\"myChart\", {\ntype: \"line\",\ndata: {\nlabels: xValues,\ndatasets: [{\nbackgroundColor:\"rgba(0,0,255,1.0)\",\nborderColor: \"rgba(0,0,255,0.1)\",\ndata: yValues\n}]\n},\noptions:{...}\n});",
      "language": "javascript",
      "explanation": "Example of source code"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 15,
      "code": "borderColor: \"rgba(0,0,0,0)\",",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Source Code",
      "content": "",
      "order": 16,
      "code": "const xValues = [100,200,300,400,500,600,700,800,900,1000];\nnew Chart(\"myChart\", {\ntype: \"line\",\ndata: {\nlabels: xValues,\ndatasets: [{\ndata: [860,1140,1060,1060,1070,1110,1330,2210,7830,2478],\nborderColor: \"red\",\nfill: false\n},{\ndata: [1600,1700,1700,1900,2000,2700,4000,5000,6000,7000],\nborderColor: \"green\",\nfill: false\n},{\ndata: [300,700,2000,5000,6000,4000,2000,1000,200,100],\nborderColor: \"blue\",\nfill: false\n}]\n},\noptions: {\nlegend: {display: false}\n}\n});",
      "language": "javascript",
      "explanation": "Example of source code"
    },
    {
      "type": "code_example",
      "title": "Source Code",
      "content": "",
      "order": 17,
      "code": "const xValues = [];\nconst yValues = [];\ngenerateData(\"x * 2 + 7\", 0, 10, 0.5);\nnew Chart(\"myChart\", {\ntype: \"line\",\ndata: {\nlabels: xValues,\ndatasets: [{\nfill: false,\npointRadius: 1,\nborderColor: \"rgba(255,0,0,0.5)\",\ndata: yValues\n}]\n},\noptions: {...}\n});\nfunction generateData(value, i1, i2, step = 1) {\nfor (let x = i1; x <= i2; x += step) {\nyValues.push(eval(value));\nxValues.push(x);\n}\n}",
      "language": "javascript",
      "explanation": "Example of source code"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 18,
      "code": "generateData(\"Math.sin(x)\", 0, 10, 0.5);",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<script\n# TODO: Complete this line\n</script>",
      "solution": "<script\nsrc=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js\">\n</script>"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your html code here",
      "solution": "<canvas id=\"myChart\" style=\"width:100%;max-width:700px\"></canvas>"
    }
  ],
  "related_topics": [
    {
      "id": "cef5e28e-113e-4ede-8f5f-f9d04fe69a88",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "471a79ad-0fbe-4ca7-84b2-46f6ac69da90",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "2370b884-0be8-4435-ae23-4f1e9fe1696f",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is js?",
      "options": [
        "None of the above.",
        "an free JavaScript library for making HTML-based charts",
        "one of the simplest visualization libraries for JavaScript",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of js is 'an free JavaScript library for making HTML-based charts'."
    },
    {
      "question": "What is It?",
      "options": [
        "None of the above.",
        "one of the simplest visualization libraries for JavaScript",
        "None of the above.",
        "an free JavaScript library for making HTML-based charts"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of It is 'one of the simplest visualization libraries for JavaScript'."
    }
  ],
  "summary": "This tutorial covers Chart.js concepts and techniques. You'll learn how to use Chart.js effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Chart.js and how to apply it in your projects."
}