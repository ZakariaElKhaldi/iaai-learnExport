{
  "id": "13690d98-b840-4166-83e8-7d776c9b8930",
  "title": "JavaScriptObject Methods",
  "slug": "javascriptobject-methods",
  "metadata": {
    "description": "Learn about JavaScriptObject Methods with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "object",
      "firstname",
      "lastname",
      "person",
      "function",
      "example",
      "property",
      "fullname",
      "methods",
      "method"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJavaScript",
    "subcategory": "JS Object Methods"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JavaScript\nObject Methods",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "JavaScript\nObject Methods\n\nObject methods\nare actions that can be performed on objects",
      "content": ".\nA method is a\nfunction definition\nstored as a\nproperty value\n.\nProperty\nValue\nfirstName\nJohn\nlastName\nDoe\nage\n50\neyeColor\nblue\nfullName\nfunction() {return this.firstName + \" \" + this.lastName;}",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Example\nconst\nperson",
      "content": "= {\nfirstName: \"John\",\nlastName: \"Doe\",\nid: 5566,\nfullName: function() {\nreturn\nthis\n.firstName + \" \" +\nthis\n.lastName;\n}\n};\n\nIn the example above,\nthis\nrefers to the\nperson object\n:\nthis.firstName\nmeans the\nfirstName\nproperty of\nperson\n.\nthis.lastName\nmeans the\nlastName\nproperty of\nperson\n.\nAccessing Object Methods\nYou access an object method with the following syntax:\nobjectName.methodName()\nIf you invoke the\nfullName property\nwith (), it will execute as a\nfunction\n:\nExample\nname = person.fullName();\n\nIf you access the\nfullName property\nwithout (), it \nwill return the\nfunction definition\n:\nExample\nname = person.fullName;\n\nAdding a Method to an Object\nAdding a new method to an object is easy:\nExample\nperson.name = function () {\nreturn this.firstName + \" \" + this.lastName;\n};\n\nUsing JavaScript Methods\nThis example uses the JavaScript\ntoUpperCase()\nmethod to convert a text \nto uppercase:\nExample\nperson.name = function () {\nreturn (this.firstName + \" \" + this.lastName).toUpperCase();\n};\n\nComplete Object Reference\nFor a complete reference, go to our:\nComplete JavaScript Object Reference\n.\nThe reference contains descriptions and examples of all Object Properties and Methods.\n\n\u2605\n+1",
      "order": 3,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "const\nperson\n= {\nfirstName: \"John\",\nlastName: \"Doe\",\nid: 5566,\nfullName: function() {\nreturn\nthis\n.firstName + \" \" +\nthis\n.lastName;\n}\n};",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "name = person.fullName();",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "name = person.fullName;",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "person.name = function () {\nreturn this.firstName + \" \" + this.lastName;\n};",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "person.name = function () {\nreturn (this.firstName + \" \" + this.lastName).toUpperCase();\n};",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "const\n# TODO: Complete this line\n= {\nfirstName: \"John\",\nlastName: \"Doe\",\nid: 5566,\nfullName: function() {\nreturn\nthis\n.firstName + \" \" +\nthis\n.lastName;\n}\n};",
      "solution": "const\nperson\n= {\nfirstName: \"John\",\nlastName: \"Doe\",\nid: 5566,\nfullName: function() {\nreturn\nthis\n.firstName + \" \" +\nthis\n.lastName;\n}\n};"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your unknown code here",
      "solution": "name = person.fullName();"
    }
  ],
  "related_topics": [
    {
      "id": "b5baad7d-eede-4ee0-84f3-4fc5a38c0867",
      "title": "Advanced Javascript Techniques",
      "relationship": "next_topic"
    },
    {
      "id": "daa6db90-f5c4-4cf2-b0a9-63d008e56e0e",
      "title": "Javascript Project: Build a Real-World Application",
      "relationship": "suggested_next"
    },
    {
      "id": "d56a9a0f-a189-4c14-8ade-7b516176fc24",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is JavaScript\nObject Methods\n\nObject methods?",
      "options": [
        "a\nfunction definition\nstored as a\nproperty value",
        "None of the above.",
        "None of the above.",
        "actions that can be performed on objects"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of JavaScript\nObject Methods\n\nObject methods is 'actions that can be performed on objects'."
    },
    {
      "question": "What is A method?",
      "options": [
        "a\nfunction definition\nstored as a\nproperty value",
        "None of the above.",
        "actions that can be performed on objects",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of A method is 'a\nfunction definition\nstored as a\nproperty value'."
    }
  ],
  "summary": "This tutorial covers JavaScriptObject Methods concepts and techniques. You'll learn how to use JavaScriptObject Methods effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaScriptObject Methods and how to apply it in your projects."
}