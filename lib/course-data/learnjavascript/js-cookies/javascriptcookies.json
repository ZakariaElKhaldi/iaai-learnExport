{
  "id": "a41ef2e7-da76-4f65-b23d-30475791de22",
  "title": "JavaScriptCookies",
  "slug": "javascriptcookies",
  "metadata": {
    "description": "Learn about JavaScriptCookies with clear explanations and practical examples.",
    "keywords": [
      "cookie",
      "function",
      "name",
      "value",
      "username",
      "document",
      "cookies",
      "javascript",
      "user",
      "expires"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJavaScript",
    "subcategory": "JS Cookies"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JavaScript\nCookies",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Cookies let you store user information in web pages.\nWhat are Cookies?\nCookies are data, stored in small text files, on your computer.\nWhen a web server has sent a web page to a browser, the connection is \nshut down, and the server forgets everything about the user.\nCookies were invented to solve the problem \"how to remember information about \nthe user\":\nWhen a user visits a web page, his/her name can be stored in a cookie.\n\nCookies are saved in name-value pairs like:\nusername = John Doe\nWhen a browser requests a web page from a server, cookies belonging to the page are added to the request. This way the server \ngets the necessary data to \"remember\" information about users.\nNone of the examples below will work if your browser has local cookies support turned off.\nCreate a Cookie with JavaScript\nJavaScript can create, read, and delete cookies with the\ndocument.cookie\nproperty.\nWith JavaScript, a cookie can be created like this:\ndocument.cookie = \"username=John Doe\";\nYou can also add an expiry date (in UTC time).\nBy default, the cookie is deleted when the browser is closed:\ndocument.cookie = \"username=John Doe; expires=Thu, 18 Dec 2013 12:00:00 UTC\";\nWith a path parameter, you can tell the browser what path the cookie belongs to.\nBy default, the cookie belongs to the current page.\ndocument.cookie = \"username=John Doe; expires=Thu, 18 Dec 2013 12:00:00 UTC; path=/\";\nRead a Cookie with JavaScript\nWith JavaScript, cookies can be read like this:\nlet x = document.cookie;\ndocument.cookie\nwill return all cookies in one string much like: cookie1=value; cookie2=value; cookie3=value;\nChange a Cookie with JavaScript\nWith JavaScript, you can change a cookie the same way as you create it:\ndocument.cookie = \"username=John Smith; expires=Thu, 18 Dec 2013 12:00:00 UTC; path=/\";\nThe old cookie is overwritten.\nDelete a Cookie with JavaScript\nDeleting a cookie is very simple.\nYou don't have to specify a cookie value when you delete a cookie.\nJust set the expires parameter to a past date:\ndocument.cookie = \"username=; expires=Thu, 01 \nJan 1970 00:00:00 UTC; path=/;\";\nYou should define the cookie path to ensure that you delete the right cookie.\nSome browsers will not let you delete a cookie if you don't specify the path.\nThe Cookie String\nThe\ndocument.cookie\nproperty looks like a normal text string. But it is not.\nEven if you write a whole cookie string to document.cookie, when you read it out again, you can only see the \nname-value pair of it.\nIf you set a new cookie, older cookies are not overwritten.\nThe new cookie is added to document.cookie, so if you read document.cookie \nagain you will get something like:\ncookie1 = value; cookie2 = value;\nDisplay All Cookies\nCreate Cookie 1\nCreate Cookie 2\nDelete Cookie 1\nDelete Cookie 2\nIf you want to find the value of one specified cookie, you must write a JavaScript \nfunction that searches for the cookie value in the cookie string.\nJavaScript Cookie Example\nIn the example to follow, we will create a cookie that stores the name of a visitor.\nThe first time a visitor arrives to the web page, he/she will be asked to fill in his/her name. The name is then stored in a cookie.\nThe \nFor the example we will create 3 JavaScript functions:\nA function to set a cookie value\nA function to get a cookie value\nA function to check a cookie value\nA Function to Set a Cookie\nFirst, we create a\nfunction\nthat stores the name of the visitor in a cookie variable:\nExample\nfunction setCookie(cname, cvalue, exdays) {\nconst d = new Date();\nd.setTime(d.getTime() + (exdays*24*60*60*1000));\nlet expires = \"expires=\"+ d.toUTCString();\ndocument.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}\nExample explained:\nThe parameters of the function above are the name of the cookie (cname), the value of the cookie \n(cvalue), and the number of days until the cookie should expire (exdays).\nThe function sets a cookie by adding together the cookiename, the cookie \nvalue, and the expires string.\nA Function to Get a Cookie\nThen, we create a\nfunction\nthat returns the value of a specified cookie:\nExample\nfunction getCookie(cname) {\nlet name = cname + \"=\";\nlet decodedCookie = decodeURIComponent(document.cookie);\nlet ca = decodedCookie.split(';');\nfor(let i = 0; i <ca.length; i++) {\nlet c = ca[i];\nwhile (c.charAt(0) == ' ') {\nc = c.substring(1);\n}\nif (c.indexOf(name) == 0) {\nreturn c.substring(name.length, c.length);\n}\n}\nreturn \"\";\n}\nFunction explained:\nTake the cookiename as parameter (cname).\nCreate a variable (name) with the text to search for (cname + \"=\").\nDecode the cookie string, to handle cookies with special characters, e.g. '$'\nSplit document.cookie on semicolons into an array called ca (ca = \ndecodedCookie.split(';')).\nLoop through the ca array (i = 0; i < ca.length; i++), and read out each value \nc = ca[i]).\nIf the cookie is found (c.indexOf(name) == 0), return the value of the cookie \n(c.substring(name.length, c.length).\nIf the cookie is not found, return \"\".\nA Function to Check a Cookie\nLast, we create the function that checks if a cookie is set.\nIf the cookie is set it will display a greeting.\nIf the cookie is not set, it will display a prompt box, asking for the name of the user,\nand stores the username cookie for 365 days, by calling the\nsetCookie\nfunction:\nExample\nfunction checkCookie() {\nlet \nusername = getCookie(\"username\");\nif (username != \"\") {\nalert(\"Welcome again \" + username);\n} else {\nusername = prompt(\"Please enter your name:\", \"\");\nif (username != \"\" \n&& username != null) {\nsetCookie(\"username\", username, 365);\n}\n}\n}\nAll Together Now\nExample\nfunction setCookie(cname, cvalue, exdays) {\nconst d = new Date();\nd.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\nlet expires = \"expires=\"+d.toUTCString();\ndocument.cookie = cname + \"=\" + cvalue + \n\";\" + expires + \";path=/\";\n}\nfunction getCookie(cname) {\nlet name = cname + \"=\";\nlet ca \n= document.cookie.split(';');\nfor(let i = 0; i < ca.length; i++) \n{\nlet c = ca[i];\nwhile (c.charAt(0) == ' \n') {\nc = c.substring(1);\n}\nif (c.indexOf(name) \n == 0) {\nreturn c.substring(name.length, c.length);\n}\n}\nreturn \"\";\n}\nfunction \ncheckCookie() {\nlet user = getCookie(\"username\");\nif (user != \"\") \n{\nalert(\"Welcome again \" + user);\n} else {\nuser = prompt(\"Please enter your name:\", \"\");\nif (user != \"\" && \nuser != null) {\nsetCookie(\"username\", user, 365);\n}\n}\n}\n\nThe example above runs the\ncheckCookie()\nfunction when the page loads.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "username = John Doe",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "document.cookie = \"username=John Doe\";",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "document.cookie = \"username=John Doe; expires=Thu, 18 Dec 2013 12:00:00 UTC\";",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "document.cookie = \"username=John Doe; expires=Thu, 18 Dec 2013 12:00:00 UTC; path=/\";",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "let x = document.cookie;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "document.cookie = \"username=John Smith; expires=Thu, 18 Dec 2013 12:00:00 UTC; path=/\";",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "document.cookie = \"username=; expires=Thu, 01 \nJan 1970 00:00:00 UTC; path=/;\";",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "function setCookie(cname, cvalue, exdays) {\nconst d = new Date();\nd.setTime(d.getTime() + (exdays*24*60*60*1000));\nlet expires = \"expires=\"+ d.toUTCString();\ndocument.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "function getCookie(cname) {\nlet name = cname + \"=\";\nlet decodedCookie = decodeURIComponent(document.cookie);\nlet ca = decodedCookie.split(';');\nfor(let i = 0; i <ca.length; i++) {\nlet c = ca[i];\nwhile (c.charAt(0) == ' ') {\nc = c.substring(1);\n}\nif (c.indexOf(name) == 0) {\nreturn c.substring(name.length, c.length);\n}\n}\nreturn \"\";\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": "function checkCookie() {\nlet \nusername = getCookie(\"username\");\nif (username != \"\") {\nalert(\"Welcome again \" + username);\n} else {\nusername = prompt(\"Please enter your name:\", \"\");\nif (username != \"\" \n&& username != null) {\nsetCookie(\"username\", username, 365);\n}\n}\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 13,
      "code": "function setCookie(cname, cvalue, exdays) {\nconst d = new Date();\nd.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\nlet expires = \"expires=\"+d.toUTCString();\ndocument.cookie = cname + \"=\" + cvalue + \n\";\" + expires + \";path=/\";\n}\nfunction getCookie(cname) {\nlet name = cname + \"=\";\nlet ca \n= document.cookie.split(';');\nfor(let i = 0; i < ca.length; i++) \n{\nlet c = ca[i];\nwhile (c.charAt(0) == ' \n') {\nc = c.substring(1);\n}\nif (c.indexOf(name) \n == 0) {\nreturn c.substring(name.length, c.length);\n}\n}\nreturn \"\";\n}\nfunction \ncheckCookie() {\nlet user = getCookie(\"username\");\nif (user != \"\") \n{\nalert(\"Welcome again \" + user);\n} else {\nuser = prompt(\"Please enter your name:\", \"\");\nif (user != \"\" && \nuser != null) {\nsetCookie(\"username\", user, 365);\n}\n}\n}",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "username = John Doe"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "document.cookie = \"username=John Doe\";"
    }
  ],
  "related_topics": [
    {
      "id": "44051b89-b979-40a6-822e-42fff890650f",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "6a39051c-0cd8-4627-8265-55fd67a6abce",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "2191809a-56a8-491a-9fc5-344be6a4ce5c",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is What?",
      "options": [
        "None of the above.",
        "data",
        "None of the above.",
        "Cookies"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of What is 'Cookies'."
    },
    {
      "question": "What is Cookies?",
      "options": [
        "None of the above.",
        "None of the above.",
        "Cookies",
        "data"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Cookies is 'data'."
    }
  ],
  "summary": "This tutorial covers JavaScriptCookies concepts and techniques. You'll learn how to use JavaScriptCookies effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaScriptCookies and how to apply it in your projects."
}