{
  "id": "b6a9706c-b16d-4176-b057-6c722baa0a9c",
  "title": "JavaScript Maps",
  "slug": "javascript-maps",
  "metadata": {
    "description": "Learn about JavaScript Maps with clear explanations and practical examples.",
    "keywords": [
      "fruits",
      "keys",
      "javascript",
      "create",
      "method",
      "example",
      "returns",
      "maps",
      "apples",
      "reference"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJavaScript",
    "subcategory": "JS Maps"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JavaScript Maps",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "A Map holds key-value pairs where the keys can be any datatype.\nA Map remembers the original insertion order of the keys.\nHow to Create a Map\nYou can create a JavaScript Map by:\nPassing an Array to\nnew Map()\nCreate a Map and use\nMap.set()\nThe new Map() Method\nYou can create a Map by passing an Array to the\nnew Map()\nconstructor:\nExample\n// Create a Map\nconst fruits = new Map([\n[\"apples\", 500],\n[\"bananas\", 300],\n[\"oranges\", 200]\n]);\n\nThe set() Method\nYou can add elements to a Map with the\nset()\nmethod:\nExample\n// Create a Map\nconst fruits = new Map();\n// Set Map Values\nfruits.set(\"apples\", 500);\nfruits.set(\"bananas\", 300);\nfruits.set(\"oranges\", 200);\n\nThe\nset()\nmethod can also be used to change existing Map values:\nExample\nfruits.set(\"apples\", 200);\n\nThe get() Method\nThe\nget()\nmethod gets the value of a key in a Map:\nExample\nfruits.get(\"apples\");\u00a0\u00a0\u00a0\u00a0// Returns 500\n\nMaps are Objects\ntypeof\nreturns object:\nExample\n// Returns object:\ntypeof fruits;\n\ninstanceof\nMap returns true:\nExample\n// Returns true:\nfruits instanceof Map;\n\nJavaScript Objects vs Maps\nDifferences between JavaScript Objects and Maps:\nObject\nMap\nNot directly iterable\nDirectly iterable\nDo not have a size property\nHave a size property\nKeys must be Strings (or Symbols)\nKeys can be any datatype\nKeys are not well ordered\nKeys are ordered by insertion\nHave default keys\nDo not have default keys\nComplete Map Reference\nFor a complete reference, go to our:\nComplete JavaScript Map Reference\n.\nThe reference contains descriptions and examples of all Map Properties and Methods.\nBrowser Support\nMap\nis an\nES6  feature\n(JavaScript 2015).\nES6 is fully supported in all modern browsers since June 2017:\nChrome 51\nEdge 15\nFirefox 54\nSafari 10\nOpera 38\nMay 2016\nApr 2017\nJun 2017\nSep 2016\nJun 2016\nMap\nis not supported in Internet Explorer.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "// Create a Map\nconst fruits = new Map([\n[\"apples\", 500],\n[\"bananas\", 300],\n[\"oranges\", 200]\n]);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "// Create a Map\nconst fruits = new Map();\n// Set Map Values\nfruits.set(\"apples\", 500);\nfruits.set(\"bananas\", 300);\nfruits.set(\"oranges\", 200);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "fruits.set(\"apples\", 200);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "fruits.get(\"apples\");\u00a0\u00a0\u00a0\u00a0// Returns 500",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "// Returns object:\ntypeof fruits;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "// Returns true:\nfruits instanceof Map;",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "// Create a Map\nconst fruits = new Map([\n[\"apples\", 500],\n[\"bananas\", 300],\n[\"oranges\", 200]\n# TODO: Complete this line",
      "solution": "// Create a Map\nconst fruits = new Map([\n[\"apples\", 500],\n[\"bananas\", 300],\n[\"oranges\", 200]\n]);"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "// Create a Map\nconst fruits = new Map();\n# TODO: Complete this line\nfruits.set(\"apples\", 500);\nfruits.set(\"bananas\", 300);\nfruits.set(\"oranges\", 200);",
      "solution": "// Create a Map\nconst fruits = new Map();\n// Set Map Values\nfruits.set(\"apples\", 500);\nfruits.set(\"bananas\", 300);\nfruits.set(\"oranges\", 200);"
    }
  ],
  "related_topics": [
    {
      "id": "072ca7e3-6a7b-491d-86b9-05dfc2a9626d",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "edbf7256-f280-49ac-a8cd-78cb57e11ed4",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "3a72d276-d5ad-45c3-a163-83695684a806",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Maps?",
      "options": [
        "an\nES6  feature\n(JavaScript 2015)",
        "None of the above.",
        "None of the above.",
        "Objects\ntypeof\nreturns object:\nExample\n// Returns object:\ntypeof fruits;\n\ninstanceof\nMap returns true:\nExample\n// Returns true:\nfruits instanceof Map;\n\nJavaScript Objects vs Maps\nDifferences between JavaScript Objects and Maps:\nObject\nMap\nNot directly iterable\nDirectly iterable\nDo not have a size property\nHave a size property\nKeys must be Strings (or Symbols)\nKeys can be any datatype\nKeys are not well ordered\nKeys are ordered by insertion\nHave default keys\nDo not have default keys\nComplete Map Reference\nFor a complete reference"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Maps is 'Objects\ntypeof\nreturns object:\nExample\n// Returns object:\ntypeof fruits;\n\ninstanceof\nMap returns true:\nExample\n// Returns true:\nfruits instanceof Map;\n\nJavaScript Objects vs Maps\nDifferences between JavaScript Objects and Maps:\nObject\nMap\nNot directly iterable\nDirectly iterable\nDo not have a size property\nHave a size property\nKeys must be Strings (or Symbols)\nKeys can be any datatype\nKeys are not well ordered\nKeys are ordered by insertion\nHave default keys\nDo not have default keys\nComplete Map Reference\nFor a complete reference'."
    },
    {
      "question": "What is Browser Support\nMap?",
      "options": [
        "an\nES6  feature\n(JavaScript 2015)",
        "Objects\ntypeof\nreturns object:\nExample\n// Returns object:\ntypeof fruits;\n\ninstanceof\nMap returns true:\nExample\n// Returns true:\nfruits instanceof Map;\n\nJavaScript Objects vs Maps\nDifferences between JavaScript Objects and Maps:\nObject\nMap\nNot directly iterable\nDirectly iterable\nDo not have a size property\nHave a size property\nKeys must be Strings (or Symbols)\nKeys can be any datatype\nKeys are not well ordered\nKeys are ordered by insertion\nHave default keys\nDo not have default keys\nComplete Map Reference\nFor a complete reference",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of Browser Support\nMap is 'an\nES6  feature\n(JavaScript 2015)'."
    }
  ],
  "summary": "This tutorial covers JavaScript Maps concepts and techniques. You'll learn how to use JavaScript Maps effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaScript Maps and how to apply it in your projects."
}