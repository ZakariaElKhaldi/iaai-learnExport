{
  "id": "c7e3216e-96a1-44d7-a341-1c0dab599260",
  "title": "JavaScript Fetch API",
  "slug": "javascript-fetch-api",
  "metadata": {
    "description": "Learn about JavaScript Fetch API with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "fetch",
      "example",
      "file",
      "await",
      "browser",
      "text",
      "mydisplay",
      "async",
      "support",
      "function"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJavaScript",
    "subcategory": "Web Fetch API"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JavaScript Fetch API",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The Fetch API interface allows web browser to make HTTP requests to web servers.\n\ud83d\ude00\nNo need for XMLHttpRequest anymore.\nBrowser Support\nThe numbers in the table specify the first browser versions that fully support Fetch API:\nChrome 42\nEdge 14\nFirefox 40\nSafari 10.1\nOpera 29\nApr 2015\nAug 2016\nAug 2015\nMar 2017\nApr 2015\nA Fetch API Example\nThe example below fetches a file and displays the content:\nExample\nfetch(file)\n.then(x => x.text())\n.then(y => myDisplay(y));\n\nSince Fetch is based on async and await, the example above might be easier to understand like this:\nExample\nasync function getText(file) {\nlet x = await fetch(file);\nlet y = await x.text();\nmyDisplay(y);\n}\n\nOr even better: Use understandable names instead of x and y:\nExample\nasync function getText(file) {\nlet myObject = await fetch(file);\nlet myText = await myObject.text();\nmyDisplay(myText);\n}\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "fetch(file)\n.then(x => x.text())\n.then(y => myDisplay(y));",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "async function getText(file) {\nlet x = await fetch(file);\nlet y = await x.text();\nmyDisplay(y);\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "async function getText(file) {\nlet myObject = await fetch(file);\nlet myText = await myObject.text();\nmyDisplay(myText);\n}",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "fetch(file)\n.then(x => x.text())\n# TODO: Complete this line",
      "solution": "fetch(file)\n.then(x => x.text())\n.then(y => myDisplay(y));"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "async function getText(file) {\nlet x = await fetch(file);\nlet y = await x.text();\nmyDisplay(y);\n# TODO: Complete this line",
      "solution": "async function getText(file) {\nlet x = await fetch(file);\nlet y = await x.text();\nmyDisplay(y);\n}"
    }
  ],
  "related_topics": [
    {
      "id": "6fb951cf-d051-44fe-96eb-27105157e7d1",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "223bb4eb-88e5-4b97-afea-818b5fddaf76",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "a404366a-4139-439f-9dd4-2cd6ddee9e5b",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Since Fetch?",
      "options": [
        "based on async and await",
        "None of the above.",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of Since Fetch is 'based on async and await'."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers JavaScript Fetch API concepts and techniques. You'll learn how to use JavaScript Fetch API effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaScript Fetch API and how to apply it in your projects."
}