{
  "id": "9f1098a9-a991-4d39-b42f-1bf5bbc98654",
  "title": "Vue $refs Object",
  "slug": "vue-refs-object",
  "metadata": {
    "description": "Learn about Vue $refs Object with clear explanations and practical examples.",
    "keywords": [
      "refs",
      "example",
      "object",
      "template",
      "button",
      "element",
      "script",
      "inside",
      "text",
      "innerhtml"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnVue",
    "subcategory": "$refs"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Vue $refs Object",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Vue Component Instance Reference\n\nExample\nUsing the\n$refs\nobject inside a method to change the text inside a\n<p>\ntag.\nmethods: {\n  changeVal() {\n    this.$refs.pEl.innerHTML = \"Hello!\";\n  }\n}\nRun Example \u00bb\nDefinition and Usage\nDOM elements marked with the built-in\nref\nattribute are stored in the\n$refs\nobject.\nElements inside the\n$refs\nobject can be reached with the\nthis\nkeyword.\nThe\n$refs\nobject is used to reach DOM elements to read or manipulate them in a similar way as\nquerySelector()\nand\ngetElementById()\nare used in plain JavaScript.\nMore Examples\nExample 1\nThe text from the first\n<p>\ntag is copied into the second\n<p>\ntag.\n<template>\n  <h1>Example</h1>\n  <p ref=\"p1\">Click the button to copy this text into the paragraph below.</p>\n  <button @click=\"transferText\">Transfer text</button>\n  <p ref=\"p2\">...</p>\n</template>\n\n<script>\n  export default {\n    methods: {\n      transferText() { \n        this.$refs.p2.innerHTML = this.$refs.p1.innerHTML;\n      }\n    }\n  };\n</script>\nRun Example \u00bb\nExample 2\nA\n<p>\nelement gets the same content as what's being written in the input field.\n<template>\n  <h1>Example</h1>\n  <p>Start writing inside the input element, and the text will be copied into the last paragraph by the use of the '$refs' object.</p>\n  <input ref=\"inputEl\" @input=\"getRefs\" placeholder=\"Write something..\">\n  <p ref=\"pEl\"></p>\n</template>\n\n<script>\n  export default {\n    methods: {\n      getRefs() { \n        this.$refs.pEl.innerHTML = this.$refs.inputEl.value;\n      }\n    }\n  };\n</script>\nRun Example \u00bb\nExample 3\nThe button reveals the the third list element stored as an array element inside the\n$refs\nobject.\n<template>\n  <h1>Example</h1>\n  <p>Click the button to reveal the 3rd list element stored as an array element in the $refs object.</p>\n  <button @click=\"getValue\">Get the 3rd list element</button><br>\n  <ul>\n    <li v-for=\"x in liTexts\" ref=\"liEl\">{{ x }}</li>\n  </ul>\n  <pre>{{ thirdEl }}</pre>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        thirdEl: ' ',\n        liTexts: ['Apple','Banana','Kiwi','Tomato','Lichi']\n      }\n    },\n    methods: {\n      getValue() { \n        this.thirdEl = this.$refs.liEl[2].innerHTML;\n        console.log(\"this.$refs.liEl = \",this.$refs.liEl);\n      }\n    }\n  };\n</script>\n\n<style>\npre {\n  background-color: lightgreen;\n  display: inline-block;\n}\n</style>\nRun Example \u00bb\nRelated Pages\nVue Tutorial:\nVue Template Refs\nVue Reference:\nVue 'ref' Attribute\n\nVue Component Instance Reference\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "59aa105d-c0e5-40c9-b28e-b3f5424dc4f6",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "5b0803db-86fb-4403-b836-6bfe3291c63b",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "e8e5100e-b38d-4905-b5c7-dd1cd5ebfe0f",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is in\nref\nattribute?",
      "options": [
        "used to reach DOM elements to read or manipulate them in a similar way as\nquerySelector()\nand\ngetElementById()\nare used in plain JavaScript",
        "stored in the\n$refs\nobject",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of in\nref\nattribute is 'stored in the\n$refs\nobject'."
    },
    {
      "question": "What is refs\nobject?",
      "options": [
        "stored in the\n$refs\nobject",
        "None of the above.",
        "used to reach DOM elements to read or manipulate them in a similar way as\nquerySelector()\nand\ngetElementById()\nare used in plain JavaScript",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of refs\nobject is 'used to reach DOM elements to read or manipulate them in a similar way as\nquerySelector()\nand\ngetElementById()\nare used in plain JavaScript'."
    }
  ],
  "summary": "This tutorial covers Vue $refs Object concepts and techniques. You'll learn how to use Vue $refs Object effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Vue $refs Object and how to apply it in your projects."
}