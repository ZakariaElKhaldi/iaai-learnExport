{
  "id": "af4cb954-602c-4e94-9308-522b65e46c16",
  "title": "Vue $el Object",
  "slug": "vue-el-object",
  "metadata": {
    "description": "Learn about Vue $el Object with clear explanations and practical examples.",
    "keywords": [
      "object",
      "example",
      "root",
      "template",
      "element",
      "using",
      "change",
      "changecolor",
      "script",
      "background"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnVue",
    "subcategory": "$el"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Vue $el Object",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Vue Component Instance Reference\n\nExample\nUsing the\n$el\nobject to change the background color of a\n<div>\ntag on root level.\nmethods: {\n  changeColor() {\n    this.$el.style.backgroundColor = 'lightgreen';\n  }\n}\nRun Example \u00bb\nSee more examples below.\nDefinition and Usage\nThe\n$el\nobject represents the root DOM node of the Vue component.\nThe\n$el\nobject does not exist until the Vue application is mounted.\nIf there is only one\nHTML root element in the\n<template>\n:\nthe\n$el\nobject will be that root element.\nthe DOM can be manipulated directly using the\n$el\nobject (see the example above), but it is not recommended.\nit is better to use the Vue\nref\nattribute and other Vue functionality to change the DOM declaratively, because it leads to code that is more consistent and easier to maintain (see Example 1 below).\nIf there is more than one\nHTML root element in the\n<template>\n:\nthe\n$el\nobject will just be a placeholder DOM text node that Vue uses internally (not the actual DOM element).\nthe DOM\ncannot\nbe manipulated using the\n$el\nobject when there are multiple root elements (see Example 2 below).\nNote:\nIn Vue 3's Composition API, the\n$el\nproperty is not accessible in\n<script setup>\n(using the\nsetup\nfunction).\nMore Examples\nExample 1\nUsing the\nref\nattribute to change the background color of a\n<div>\ntag declaratively as recommended, instead of using the\n$el\nobject.\n<template>\n  <div ref=\"rootDiv\">\n    <h2>Example $el Object</h2>\n    <p>It is recommended, and more consistent, to use the ref attribute instead of the $el object to change the background color root DIV tag.</p>\n    <button v-on:click=\"changeColor\">Click here</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    changeColor() {\n      this.$refs.rootDiv.style.backgroundColor = 'lightgreen';\n    }\n  }\n}\n</script>\nRun Example \u00bb\nExample 2\nWith more than one element in the root of the\n<template>\n, the\n$el\nobject will just be a text node representation (not the actual DOM element) of the first element of the root elements, used internally by Vue.\nWe cannot manipulate the DOM with the\n$el\nobject is such cases.\n<template>\n  <div>\n    <h2>Example $el Object</h2>\n    <p>We are not able to use the $el object to change the background color of the root DIV tag when there are other tags on the root level. Open browser console to see the error generated.</p>\n    <button v-on:click=\"changeColor\">Click here</button>\n  </div>\n  <p>With this extra p-tag there are two tags on the root level.</p>\n</template>\n\n<script>\nexport default {\n  methods: {\n    changeColor() {\n      this.$el.style.backgroundColor = 'lightgreen';\n    }\n  }\n}\n</script>\n\n<style>\n#app > div, #app > p {\n  border: solid black 1px;\n  padding: 10px;\n}\n</style>\nRun Example \u00bb\nExample 3\nUsing the\n$el\nobject to change the background color of a\n<h2>\nchild element.\n<template>\n  <div>\n    <h2>Example $el Object</h2>\n    <p>Using the $el object to change the background color of the H2 child element.</p>\n    <button v-on:click=\"changeColor\">Click here</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    changeColor() {\n      this.$el.children[0].style.backgroundColor = 'lightblue';\n    }\n  }\n}\n</script>\nRun Example \u00bb\nRelated Pages\nVue Tutorial:\nVue Template Refs\nVue Tutorial:\nVue Methods\nVue Reference:\nVue 'ref' Attribute\nVue Reference:\nVue $refs Object\n\nVue Component Instance Reference\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "86675d13-8029-4531-91f9-d4dee31dcccd",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "627d35b0-111f-4b1a-aa84-c2e370497f53",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "3b762a2c-c03b-4f41-bbfc-72afccf5ff40",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is el\nobject does not exist until the Vue application?",
      "options": [
        "None of the above.",
        "None of the above.",
        "only one\nHTML root element in the\n<template>\n:\nthe\n$el\nobject will be that root element",
        "mounted"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of el\nobject does not exist until the Vue application is 'mounted'."
    },
    {
      "question": "What is If there?",
      "options": [
        "None of the above.",
        "only one\nHTML root element in the\n<template>\n:\nthe\n$el\nobject will be that root element",
        "mounted",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of If there is 'only one\nHTML root element in the\n<template>\n:\nthe\n$el\nobject will be that root element'."
    }
  ],
  "summary": "This tutorial covers Vue $el Object concepts and techniques. You'll learn how to use Vue $el Object effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Vue $el Object and how to apply it in your projects."
}