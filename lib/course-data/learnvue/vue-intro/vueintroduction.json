{
  "id": "d54a0cb2-c7c2-42a8-af66-84979ba06712",
  "title": "VueIntroduction",
  "slug": "vueintroduction",
  "metadata": {
    "description": "Learn about VueIntroduction with clear explanations and practical examples.",
    "keywords": [
      "c",
      "script",
      "html",
      "message",
      "page",
      "javascript",
      "data",
      "text",
      "code",
      "instance",
      "inside"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnVue",
    "subcategory": "Vue Intro"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Vue\nIntroduction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Vue is a\nJavaScript framework\n. It can be added to an HTML page with a <script> tag.\nVue extends HTML attributes with\nDirectives\n, and binds data to HTML with\nExpressions\n.\nVue is a JavaScript Framework\nVue is a front-end JavaScript framework written in JavaScript.\nSimilar frameworks to Vue are React and Angular, but Vue is more lightweight and easier to start with.\nVue is distributed as a JavaScript file, and can be added to a web page with a script tag:\n<script\nsrc=\"https://unpkg.com/vue@3/dist/vue.global.js\">\n</script>\nWhy Learn Vue?\nIt is simple and easy to use.\nIt is able to handle both simple and complex projects.\nIts growing popularity and open-source community support.\nIn normal JavaScript we need to write\nHOW\nHTML and JavaScript is connected, but in Vue we simply need to make sure that there\nIS\na connection and let Vue take care of the rest.\nIt allows for a more efficient development process with a template-based syntax, two-way data binding, and a centralized state management.\nIf some of these points are hard to understand, don't worry, you will understand at the end of the tutorial.\nThe Options API\nThere are two different ways to write code in Vue: The Options API and The Composition API.\nThe underlying concepts are the same for both the Options API and Composition API, so after learning one, you can easily switch to the other.\nThe Options API is what is written in this tutorial because it is considered to be more beginner-friendly, with a more recognizable structure.\nTake a look at\nthis page\nat the end of this tutorial to learn more about the differences between the Options API and the Composition API.\nMy first page\nWe will now learn how we can create our very first Vue web page, in 5 basic steps:\nStart with a basic HTML file.\nAdd a\n<div>\ntag with\nid=\"app\"\nfor Vue to connect with.\nTell the browser how to handle Vue code by adding a\n<script>\ntag with a link to Vue.\nAdd a\n<script>\ntag with the Vue instance inside.\nConnect the Vue instance to the\n<div id=\"app\">\ntag.\nThese steps are described in detail below, with the full code in a '\nStep 1: HTML page\nStart with a simple HTML page:\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<title>My first Vue page</title>\n</head>\n<body>\n</body>\n</html>\nStep 2: Add a <div>\nVue needs an HTML element on your page to connect to.\nPut a\n<div>\ntag inside the\n<body>\ntag and give it an id:\n<body>\n<div id=\"app\"></div>\n</body>\nStep 3: Add a link to Vue\nTo help our browser to interpret our Vue code, add this\n<script>\ntag:\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\nStep 4: Add the Vue instance\nNow we need to add our Vue code.\nThis is called the\nVue instance\nand can contain data and methods and other things, but now it just contains a message.\nOn the last line in this\n<script>\ntag our Vue instance is connected to the\n<div id=\"app\">\ntag:\n<div id=\"app\"></div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nmessage: \"Hello World!\"\n}\n}\n})\napp.mount('#app')\n</script>\nStep 5: Display 'message' with Text Interpolation\nFinally, we can use\ntext interpolation\n, a Vue syntax with double curly braces\n{{ }}\nas a placeholder for data.\n<div id=\"app\"> {{ message }} </div>\nThe browser will exchange\n{{ message }}\nwith the text stored in the 'message' property inside the Vue instance.\nHere is our very first Vue page:\nExample: My first Vue page!\nTest this code with the '\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<title>My first Vue page</title>\n</head>\n<body>\n<div id=\"app\">\n{{ message }}\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nmessage: \"Hello World!\"\n}\n}\n})\napp.mount('#app')\n</script>\n</body>\n</html>\n\nText Interpolation\nText interpolation is when text is taken from the Vue instance to show on the web page.\nThe browser receives the page with this code inside:\n<div id=\"app\"> {{ message }} </div>\nThen the browser finds the text inside the 'message' property of the Vue instance and translates the Vue code into this:\n<div id=\"app\">Hello World!</div>\nJavaScript in Text Interpolation\nSimple\nJavaScript expressions\ncan also be written inside the double curly braces\n{{ }}\n.\nExample\nUse JavaScript syntax to add a random number to the message inside the div element:\n<div id=\"app\">\n{{ message }} <br>\n{{'Random number: ' + Math.ceil(Math.random()*6) }}\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nmessage: \"Hello World!\"\n}\n}\n})\napp.mount('#app')\n</script>\n\nGet Started\nThis tutorial will teach you the basics of Vue.\nYou need basic prior experience with\nHTML\n,\nCSS\nand\nJavaScript\nto follow this tutorial.\nClick the '\nVue Exercises\nTest Yourself With Exercises\nExercise:\nUse text interpolation to display the 'message' data property value.\n<div id=\"app\">\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\n  const app = Vue.createApp({\n    data() {\n      return {\n        message: \"Hello World!\"\n      }\n    }\n  })\n  app.mount('#app')\n</script>\nSubmit Answer \u00bb\nStart the Exercise\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<script\nsrc=\"https://unpkg.com/vue@3/dist/vue.global.js\">\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<title>My first Vue page</title>\n</head>\n<body>\n</body>\n</html>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<body>\n<div id=\"app\"></div>\n</body>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "<div id=\"app\"></div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nmessage: \"Hello World!\"\n}\n}\n})\napp.mount('#app')\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "<div id=\"app\"> {{ message }} </div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example: My first Vue page!",
      "content": "",
      "order": 9,
      "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<title>My first Vue page</title>\n</head>\n<body>\n<div id=\"app\">\n{{ message }}\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nmessage: \"Hello World!\"\n}\n}\n})\napp.mount('#app')\n</script>\n</body>\n</html>",
      "language": "html",
      "explanation": "Example of example: my first vue page!"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "<div id=\"app\"> {{ message }} </div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "<div id=\"app\">Hello World!</div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": "<div id=\"app\">\n{{ message }} <br>\n{{'Random number: ' + Math.ceil(Math.random()*6) }}\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nmessage: \"Hello World!\"\n}\n}\n})\napp.mount('#app')\n</script>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<script\n# TODO: Complete this line\n</script>",
      "solution": "<script\nsrc=\"https://unpkg.com/vue@3/dist/vue.global.js\">\n</script>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<title>My first Vue page</title>\n</head>\n<body>\n</body>\n# TODO: Complete this line",
      "solution": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<title>My first Vue page</title>\n</head>\n<body>\n</body>\n</html>"
    }
  ],
  "related_topics": [
    {
      "id": "44e177a6-8cdb-4144-af5d-b928b7528dae",
      "title": "C Functions and Methods",
      "relationship": "next_topic"
    },
    {
      "id": "36848a27-ba33-4167-993a-ca4c345dbdb6",
      "title": "C Data Structures",
      "relationship": "suggested_next"
    }
  ],
  "quiz": [
    {
      "question": "What is Vue\nIntroduction\n\nVue?",
      "options": [
        "None of the above.",
        "a\nJavaScript framework",
        "None of the above.",
        "a front-end JavaScript framework written in JavaScript"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Vue\nIntroduction\n\nVue is 'a\nJavaScript framework'."
    },
    {
      "question": "What is Vue is a JavaScript Framework\nVue?",
      "options": [
        "a front-end JavaScript framework written in JavaScript",
        "None of the above.",
        "a\nJavaScript framework",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of Vue is a JavaScript Framework\nVue is 'a front-end JavaScript framework written in JavaScript'."
    }
  ],
  "summary": "This tutorial covers VueIntroduction concepts and techniques. You'll learn how to use VueIntroduction effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of VueIntroduction and how to apply it in your projects."
}