{
  "id": "dec01892-322b-457e-87ad-73da6873ba1d",
  "title": "Vuev-bindDirective",
  "slug": "vuev-binddirective",
  "metadata": {
    "description": "Learn about Vuev-bindDirective with clear explanations and practical examples.",
    "keywords": [
      "c",
      "bind",
      "class",
      "example",
      "property",
      "value",
      "size",
      "data",
      "directive",
      "attribute",
      "style"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnVue",
    "subcategory": "Vue v-bind"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Vue\nv-bind\nDirective",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "You have already seen that a basic Vue setup consists of a Vue instance and that we can access it from the\n<div id=\"app\">\ntag with\n{{ }}\nor the\nv-bind\ndirective.\nOn this page we will explain the\nv-bind\ndirective in more detail.\nThe\nv-bind\nDirective\nThe\nv-bind\ndirective lets us bind an HTML attribute to data in the Vue instance. This makes it easy to change the attribute value dynamically.\nSyntax\n<div v-bind:[\nattribute\n]=\"[\nVue data\n]\"></div>\nExample\nThe\nsrc\nattribute value of an\n<img>\ntag is taken from the Vue instance data property 'url':\n<img v-bind:src=\"url\">\n\nCSS Binding\nWe can use the\nv-bind\ndirective to do in-line styling and modify classes dynamically. We will show you briefly how to do that in this section, and later in this tutorial, on the\nCSS Binding page\n, we will explain this in more detail.\nBind style\nIn-line styling with Vue is done by binding the style attribute to Vue with\nv-bind\n.\nAs a value to the v-bind directive, we can write a JavaScript object with the CSS property and value:\nExample\nThe font size depends on the Vue data property 'size'.\n<div v-bind:style=\"{ fontSize: size }\">\nText example\n</div>\n\nWe can also separate the font size number value from the font size unit if we want to, like this:\nExample\nThe font size number value is stored the Vue data property 'size'.\n<div v-bind:style=\"{ fontSize: size + 'px' }\">\nText example\n</div>\n\nWe could also write the CSS property name with CSS syntax (kebab-case) in hyphens, but it is not recommended:\nExample\nThe CSS property fontSize is referred to as 'font-size'.\n<div v-bind:style=\"{\n'font-size'\n: size + 'px' }\">\nText example\n</div>\n\nExample\nThe background color depends on the 'bgVal' data property value inside the Vue instance.\n<div v-bind:style=\"{ backgroundColor: 'hsl('+bgVal+',80%,80%)' }\">\nNotice the background color on this div tag.\n</div>\n\nExample\nThe background color is set with a\nJavaScript conditional (ternary) expression\ndepending on whether the 'isImportant' data property value is 'true' or 'false'.\n<div v-bind:style=\"{ backgroundColor: isImportant ? 'lightcoral' : 'lightgray' }\">\nConditional background color\n</div>\n\nBind class\nWe can use\nv-bind\nto change the class attribute.\nThe value of\nv-bind:class\ncan be a variable:\nExample\nThe\nclass\nname is taken from the 'className' Vue data property:\n<div v-bind:class=\"className\">\nThe class is set with Vue\n</div>\n\nThe value of\nv-bind:class\ncan also be an object, where the class name will only take effect if it is set to 'true':\nExample\nThe\nclass\nattribute is assigned or not depending on if the class 'myClass' is set to 'true' or 'false':\n<div v-bind:class=\"{ myClass: true }\">\nThe class is set conditionally to change the background color\n</div>\n\nWhen the value of\nv-bind:class\nis an object, the class can be assigned depending on a Vue property:\nExample\nThe\nclass\nattribute is assigned depending on the 'isImportant' property, if it is 'true' or 'false':\n<div v-bind:class=\"{ myClass: isImportant }\">\nThe class is set conditionally to change the background color\n</div>\n\nShorthand for\nv-bind\nThe shorthand for '\nv-bind:\n' is simply '\n:\n'.\nExample\nHere we just write '\n:\n' instead of '\nv-bind:\n':\n<div\n:class\n=\"{ impClass: isImportant }\">\nThe class is set conditionally to change the background color\n</div>\n\nWe will continue to use\nv-bind:\nsyntax in this tutorial to avoid confusion.\nVue Exercises\nTest Yourself With Exercises\nExercise:\nProvide the missing code so that the class is set equal to the 'className' data property, using a Vue directive shorthand.\n<div\n=\"className\">\n  The class is set with Vue\n</div>\nSubmit Answer \u00bb\nStart the Exercise\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Syntax",
      "content": "",
      "order": 3,
      "code": "<div v-bind:[\nattribute\n]=\"[\nVue data\n]\"></div>",
      "language": "html",
      "explanation": "Example of syntax"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<img v-bind:src=\"url\">",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<div v-bind:style=\"{ fontSize: size }\">\nText example\n</div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<div v-bind:style=\"{ fontSize: size + 'px' }\">\nText example\n</div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "<div v-bind:style=\"{\n'font-size'\n: size + 'px' }\">\nText example\n</div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "<div v-bind:style=\"{ backgroundColor: 'hsl('+bgVal+',80%,80%)' }\">\nNotice the background color on this div tag.\n</div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "<div v-bind:style=\"{ backgroundColor: isImportant ? 'lightcoral' : 'lightgray' }\">\nConditional background color\n</div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "<div v-bind:class=\"className\">\nThe class is set with Vue\n</div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "<div v-bind:class=\"{ myClass: true }\">\nThe class is set conditionally to change the background color\n</div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": "<div v-bind:class=\"{ myClass: isImportant }\">\nThe class is set conditionally to change the background color\n</div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 13,
      "code": "<div\n:class\n=\"{ impClass: isImportant }\">\nThe class is set conditionally to change the background color\n</div>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<div v-bind:[\nattribute\n# TODO: Complete this line\nVue data\n]\"></div>",
      "solution": "<div v-bind:[\nattribute\n]=\"[\nVue data\n]\"></div>"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your html code here",
      "solution": "<img v-bind:src=\"url\">"
    }
  ],
  "related_topics": [
    {
      "id": "6b9cf8b7-f1c1-42f9-8db4-bf82a42f0a94",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "d0380921-2952-4d10-b7c4-bcfb44da6038",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "e6219418-73cd-4c95-b755-f3986ab02c9c",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is tag?",
      "options": [
        "taken from the Vue instance data property 'url':\n<img v-bind:src=\"url\">\n\nCSS Binding\nWe can use the\nv-bind\ndirective to do in-line styling and modify classes dynamically",
        "None of the above.",
        "done by binding the style attribute to Vue with\nv-bind",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of tag is 'taken from the Vue instance data property 'url':\n<img v-bind:src=\"url\">\n\nCSS Binding\nWe can use the\nv-bind\ndirective to do in-line styling and modify classes dynamically'."
    },
    {
      "question": "What is line styling with Vue?",
      "options": [
        "taken from the Vue instance data property 'url':\n<img v-bind:src=\"url\">\n\nCSS Binding\nWe can use the\nv-bind\ndirective to do in-line styling and modify classes dynamically",
        "None of the above.",
        "done by binding the style attribute to Vue with\nv-bind",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of line styling with Vue is 'done by binding the style attribute to Vue with\nv-bind'."
    }
  ],
  "summary": "This tutorial covers Vuev-bindDirective concepts and techniques. You'll learn how to use Vuev-bindDirective effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Vuev-bindDirective and how to apply it in your projects."
}