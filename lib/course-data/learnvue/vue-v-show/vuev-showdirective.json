{
  "id": "1347f04b-6407-4079-8e11-0203f3eabdba",
  "title": "Vuev-showDirective",
  "slug": "vuev-showdirective",
  "metadata": {
    "description": "Learn about Vuev-showDirective with clear explanations and practical examples.",
    "keywords": [
      "c",
      "show",
      "script",
      "showdiv",
      "property",
      "element",
      "true",
      "false",
      "display",
      "data",
      "example"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnVue",
    "subcategory": "Vue v-show"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Vue\nv-show\nDirective",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Learn how to make an element visible or not with\nv-show\n.\nv-show\nis easy to use because the condition is written right in the HTML tag attribute.\nConditional Visibility\nThe\nv-show\ndirective hides an element when the condition is 'false' by setting the CSS 'display' property value to 'none'.\nAfter writing\nv-show\nas an HTML attribute we must give a conditon to decide to have the tag visible or not.\nSyntax\n<div v-show=\"showDiv\">This div tag can be hidden</div>\nIn the code above, 'showDiv' represents a boolean Vue data property with either 'true' or 'false' as property value. If 'showDiv' is 'true' the div tag is shown, and if it is 'false' the tag is not shown.\nExample\nDisplay the <div> element only if the showDiv property is set to 'true'.\n<div id=\"app\">\n<div v-show=\"showDiv\">This div tag can be hidden</div>\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nshowDiv: true\n}\n}\n})\napp.mount('#app')\n</script>\n\nv-show\nvs.\nv-if\nThe difference between\nv-show\nand\nv-if\nis that\nv-if\ncreates (renders) the element depending on the condition, but with\nv-show\nthe element is already created,\nv-show\nonly changes its visibility.\nTherefore, it is better to use\nv-show\nwhen switching visibility of an object, because it is easier for the browser to do, and it can lead to a faster response and better user experience.\nA reason for using\nv-if\nover\nv-show\nis that\nv-if\ncan be used with\nv-else-if\nand\nv-else\n.\nIn the example below\nv-show\nand\nv-if\nare used separately  on two different <div> elements, but based on the same Vue property. You can open the example and inspect the code to see that\nv-show\nkeeps the <div> element, and only sets the CSS display property to 'none', but\nv-if\nactually destroys the <div> element.\nExample\nDisplay the two <div> elements only if the showDiv property is set to 'true'. If the showDiv property is set to 'false' and we inspect the example page with the browser we can see that the <div> element with\nv-if\nis destroyed, but the <div> element with\nv-show\nhas just CSS display property set to 'none'.\n<div id=\"app\">\n<div v-show=\"showDiv\">Div tag with v-show</div>\n<div v-if=\"showDiv\">Div tag with v-if</div>\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nshowDiv: true\n}\n}\n})\napp.mount('#app')\n</script>\n\nVue Exercises\nTest Yourself With Exercises\nExercise:\nFill in the missing part so that Vue toggles the visibility of the <div> tag below for us, depending on the 'lightOn' boolean data property.\n<div id=\"app\">\n  <div id=\"lightDiv\">\n    <div\n=\"lightOn\"></div>\n    <img src=\"img_lightBulb.svg\">\n  </div>\n  <button v-on:click=\" lightOn =! lightOn \">Switch light</button>\n</div>\n\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\n  const app = Vue.createApp({\n    data() {\n      return {\n        lightOn: false\n      }\n    }\n  })\n  app.mount('#app')\n</script>\nSubmit Answer \u00bb\nStart the Exercise\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Syntax",
      "content": "",
      "order": 3,
      "code": "<div v-show=\"showDiv\">This div tag can be hidden</div>",
      "language": "html",
      "explanation": "Example of syntax"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<div id=\"app\">\n<div v-show=\"showDiv\">This div tag can be hidden</div>\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nshowDiv: true\n}\n}\n})\napp.mount('#app')\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<div id=\"app\">\n<div v-show=\"showDiv\">Div tag with v-show</div>\n<div v-if=\"showDiv\">Div tag with v-if</div>\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nshowDiv: true\n}\n}\n})\napp.mount('#app')\n</script>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your html code here",
      "solution": "<div v-show=\"showDiv\">This div tag can be hidden</div>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<div id=\"app\">\n<div v-show=\"showDiv\">This div tag can be hidden</div>\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\n# TODO: Complete this line\nshowDiv: true\n}\n}\n})\napp.mount('#app')\n</script>",
      "solution": "<div id=\"app\">\n<div v-show=\"showDiv\">This div tag can be hidden</div>\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nshowDiv: true\n}\n}\n})\napp.mount('#app')\n</script>"
    }
  ],
  "related_topics": [
    {
      "id": "2acb03ea-b810-427b-a172-53e0928a608a",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "0ad17628-88ff-4a2e-8735-186441beadbf",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "90ffb389-a937-472f-b85c-d36108ee50b1",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is show\nis easy to use because the condition?",
      "options": [
        "written right in the HTML tag attribute",
        "None of the above.",
        "'false' by setting the CSS 'display' property value to 'none'",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of show\nis easy to use because the condition is 'written right in the HTML tag attribute'."
    },
    {
      "question": "What is show\ndirective hides an element when the condition?",
      "options": [
        "None of the above.",
        "'false' by setting the CSS 'display' property value to 'none'",
        "written right in the HTML tag attribute",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of show\ndirective hides an element when the condition is ''false' by setting the CSS 'display' property value to 'none''."
    }
  ],
  "summary": "This tutorial covers Vuev-showDirective concepts and techniques. You'll learn how to use Vuev-showDirective effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Vuev-showDirective and how to apply it in your projects."
}