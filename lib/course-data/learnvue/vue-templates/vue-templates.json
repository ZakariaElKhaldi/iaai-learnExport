{
  "id": "4070ec81-ad55-4778-ad8a-6522c3dc9c79",
  "title": "Vue Templates",
  "slug": "vue-templates",
  "metadata": {
    "description": "Learn about Vue Templates with clear explanations and practical examples.",
    "keywords": [
      "template",
      "html",
      "code",
      "inside",
      "script",
      "files",
      "configuration",
      "option",
      "example",
      "part"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnVue",
    "subcategory": "Vue Templates"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Vue Templates",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "A\ntemplate\nin Vue is what we call the HTML part of our Vue application.\nThe\n<template>\ntag will later be used in *.vue files to structure our code in a better way.\nIt is possible to use\ntemplate\nas a configuration option in the Vue instance, and put the HTML code inside.\nThe Vue Template\nLet's look at an example where we use 'template' as a configuration option. This is a simple example where we have just moved the HTML part into the configuration option 'template':\nExample\nThe HTML content from inside the\n<div id=\"app\">\nis moved to the configuration option 'template', encapsulated in backtick quotes\n`...`\n. We can write many lines of HTML inside a \n  back tick quote.\n<div id=\"app\"></div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ntemplate:\n`<h1>{{ message }}</h1>\n<p>This is a second line of HTML code, inside \n    back tick quotes</p>`,\ndata() {\nreturn {\nmessage: \"Hello World!\"\n}\n}\n})\napp.mount('#app')\n</script>\n\nSingle File Components (SFCs)\nAs you can see in the code example above, also the HTML part of our Vue application can be gathered inside the Vue instance, but this does not make it easier to get an overview in the HTML file.\nTo get a better overview, to make it easier to handle larger projects, and to get a better development environment, we will now switch to write our Vue code in SFCs, or *.vue files.\nAll *.vue files only consist of three parts:\n<template>\nwhere the HTML content is.\n<script>\nfor our Vue code.\n<style>\nwhere we write the CSS styling.\nBut before we can use *.vue files in our project we need to set up our computer in a different way. The\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<div id=\"app\"></div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ntemplate:\n`<h1>{{ message }}</h1>\n<p>This is a second line of HTML code, inside \n    back tick quotes</p>`,\ndata() {\nreturn {\nmessage: \"Hello World!\"\n}\n}\n})\napp.mount('#app')\n</script>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<div id=\"app\"></div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ntemplate:\n`<h1>{{ message }}</h1>\n<p>This is a second line of HTML code, inside \n    back tick quotes</p>`,\ndata() {\n# TODO: Complete this line\nmessage: \"Hello World!\"\n}\n}\n})\napp.mount('#app')\n</script>",
      "solution": "<div id=\"app\"></div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ntemplate:\n`<h1>{{ message }}</h1>\n<p>This is a second line of HTML code, inside \n    back tick quotes</p>`,\ndata() {\nreturn {\nmessage: \"Hello World!\"\n}\n}\n})\napp.mount('#app')\n</script>"
    },
    {
      "title": "Create a Layout",
      "description": "Build a simple layout using the techniques from this tutorial.",
      "difficulty": "easy",
      "starter_code": "<!-- Add your code here -->",
      "solution": "<!-- Example solution would go here -->"
    }
  ],
  "related_topics": [
    {
      "id": "725eb082-0155-45b8-af9e-a1f8b7108a0a",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "523fc153-1eb0-42ba-8fe4-c689ee1a35ab",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "686638c3-c87f-4122-b0bd-b7ee5edafdc2",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Vue Templates\n\nA\ntemplate\nin Vue?",
      "options": [
        "None of the above.",
        "None of the above.",
        "what we call the HTML part of our Vue application",
        "possible to use\ntemplate\nas a configuration option in the Vue instance"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Vue Templates\n\nA\ntemplate\nin Vue is 'what we call the HTML part of our Vue application'."
    },
    {
      "question": "What is It?",
      "options": [
        "possible to use\ntemplate\nas a configuration option in the Vue instance",
        "what we call the HTML part of our Vue application",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of It is 'possible to use\ntemplate\nas a configuration option in the Vue instance'."
    }
  ],
  "summary": "This tutorial covers Vue Templates concepts and techniques. You'll learn how to use Vue Templates effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Vue Templates and how to apply it in your projects."
}