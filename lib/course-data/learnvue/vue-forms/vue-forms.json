{
  "id": "a077777d-7b9e-4d99-8e2c-bf32038c805c",
  "title": "Vue Forms",
  "slug": "vue-forms",
  "metadata": {
    "description": "Learn about Vue Forms with clear explanations and practical examples.",
    "keywords": [
      "item",
      "form",
      "model",
      "name",
      "number",
      "type",
      "shopping",
      "list",
      "input",
      "itemname"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnVue",
    "subcategory": "Vue Forms"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Vue Forms",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Vue gives us an easy way to improve the user experience with forms by adding extra functionality like responsiveness and form validation.\nVue uses the\nv-model\ndirective when handling forms.\nOur First Form with Vue\nLets start with a simple shopping list example to see how Vue can be used when creating a form.\nFor more information about forms in HTML, with related tags and attributes, see\nour HTML Forms tutorial\n.\n1. Add standard HTML form elements:\n<form>\n<p>Add item</p>\n<p>Item name: <input type=\"text\" required></p>\n<p>How many: <input type=\"number\"></p>\n<button type=\"submit\">Add item</button>\n</form>\n2. Create the Vue instance with the current item name, number and the shopping list, and use\nv-model\nto connect our inputs to it.\n<div id=\"app\">\n<form>\n<p>Add item</p>\n<p>Item name: <input type=\"text\" required v-model=\"itemName\"></p>\n<p>How many: <input type=\"number\" v-model=\"itemNumber\"></p>\n<button type=\"submit\">Add item</button>\n</form>\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nitemName: null,\nitemNumber: null,\nshoppingList: [\n{ name: 'Tomatoes', number: 5 }\n]\n}\n}\n})\napp.mount('#app')\n</script>\n3. Call the method to add an item to the shopping list, and prevent the default browser refresh on submit.\n<form v-on:submit.prevent=\"addItem\">\n4. Create the method that adds the item to the shopping list, and clears the form:\nmethods: {\naddItem() {\nlet item = {\nname: this.itemName,\nnumber: this.itemNumber\n}\nthis.shoppingList.push(item);\nthis.itemName = null\nthis.itemNumber = null\n}\n}\n5. Use\nv-for\nto show an automatically updated shopping list below the form:\n<p>Shopping list:</p>\n<ul>\n<li v-for=\"item in shoppingList\">{{item.name}}, {{item.number}}</li>\n</ul>\nBelow is the final code for our first Vue form.\nExample\nIn this example we can add new items to a shopping list.\n<div id=\"app\">\n<form v-on:submit.prevent=\"addItem\">\n<p>Add item</p>\n<p>Item name: <input type=\"text\" required v-model=\"itemName\"></p>\n<p>How many: <input type=\"number\" v-model=\"itemNumber\"></p>\n<button type=\"submit\">Add item</button>\n</form>\n<p>Shopping list:</p>\n<ul>\n<li v-for=\"item in shoppingList\">{{item.name}}, {{item.number}}</li>\n</ul>\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nitemName: null,\nitemNumber: null,\nshoppingList: [\n{ name: 'Tomatoes', number: 5 }\n]\n}\n},\nmethods: {\naddItem() {\nlet item = {\nname: this.itemName,\nnumber: this.itemNumber\n}\nthis.shoppingList.push(item)\nthis.itemName = null\nthis.itemNumber = null\n}\n}\n})\napp.mount('#app')\n</script>\n\nNotice the two-way binding\nv-model\nprovides in the example above:\nv-model\nupdates the Vue instance data when the HTML input change\nv-model\nalso updates the HTML input when the Vue instance data changes\nTo learn more about\nv-model\nand see more form examples, click '\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<form>\n<p>Add item</p>\n<p>Item name: <input type=\"text\" required></p>\n<p>How many: <input type=\"number\"></p>\n<button type=\"submit\">Add item</button>\n</form>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<div id=\"app\">\n<form>\n<p>Add item</p>\n<p>Item name: <input type=\"text\" required v-model=\"itemName\"></p>\n<p>How many: <input type=\"number\" v-model=\"itemNumber\"></p>\n<button type=\"submit\">Add item</button>\n</form>\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nitemName: null,\nitemNumber: null,\nshoppingList: [\n{ name: 'Tomatoes', number: 5 }\n]\n}\n}\n})\napp.mount('#app')\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<form v-on:submit.prevent=\"addItem\">",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "methods: {\naddItem() {\nlet item = {\nname: this.itemName,\nnumber: this.itemNumber\n}\nthis.shoppingList.push(item);\nthis.itemName = null\nthis.itemNumber = null\n}\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "<p>Shopping list:</p>\n<ul>\n<li v-for=\"item in shoppingList\">{{item.name}}, {{item.number}}</li>\n</ul>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "<div id=\"app\">\n<form v-on:submit.prevent=\"addItem\">\n<p>Add item</p>\n<p>Item name: <input type=\"text\" required v-model=\"itemName\"></p>\n<p>How many: <input type=\"number\" v-model=\"itemNumber\"></p>\n<button type=\"submit\">Add item</button>\n</form>\n<p>Shopping list:</p>\n<ul>\n<li v-for=\"item in shoppingList\">{{item.name}}, {{item.number}}</li>\n</ul>\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nitemName: null,\nitemNumber: null,\nshoppingList: [\n{ name: 'Tomatoes', number: 5 }\n]\n}\n},\nmethods: {\naddItem() {\nlet item = {\nname: this.itemName,\nnumber: this.itemNumber\n}\nthis.shoppingList.push(item)\nthis.itemName = null\nthis.itemNumber = null\n}\n}\n})\napp.mount('#app')\n</script>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<form>\n<p>Add item</p>\n# TODO: Complete this line\n<p>How many: <input type=\"number\"></p>\n<button type=\"submit\">Add item</button>\n</form>",
      "solution": "<form>\n<p>Add item</p>\n<p>Item name: <input type=\"text\" required></p>\n<p>How many: <input type=\"number\"></p>\n<button type=\"submit\">Add item</button>\n</form>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<div id=\"app\">\n<form>\n<p>Add item</p>\n<p>Item name: <input type=\"text\" required v-model=\"itemName\"></p>\n<p>How many: <input type=\"number\" v-model=\"itemNumber\"></p>\n<button type=\"submit\">Add item</button>\n</form>\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\n# TODO: Complete this line\nitemName: null,\nitemNumber: null,\nshoppingList: [\n{ name: 'Tomatoes', number: 5 }\n]\n}\n}\n})\napp.mount('#app')\n</script>",
      "solution": "<div id=\"app\">\n<form>\n<p>Add item</p>\n<p>Item name: <input type=\"text\" required v-model=\"itemName\"></p>\n<p>How many: <input type=\"number\" v-model=\"itemNumber\"></p>\n<button type=\"submit\">Add item</button>\n</form>\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nitemName: null,\nitemNumber: null,\nshoppingList: [\n{ name: 'Tomatoes', number: 5 }\n]\n}\n}\n})\napp.mount('#app')\n</script>"
    }
  ],
  "related_topics": [
    {
      "id": "14c516f4-a73d-4a57-899b-fdd40514dda0",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "b5744356-ccb1-42bd-bde9-ba56fb43f305",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "7ff46179-6785-4334-9ebe-7d3e2b92f192",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Below?",
      "options": [
        "the final code for our first Vue form",
        "None of the above.",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of Below is 'the final code for our first Vue form'."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers Vue Forms concepts and techniques. You'll learn how to use Vue Forms effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Vue Forms and how to apply it in your projects."
}