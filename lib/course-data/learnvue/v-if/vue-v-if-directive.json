{
  "id": "51ec9e34-8e21-4636-aaa0-f22583097d8e",
  "title": "Vue v-if Directive",
  "slug": "vue-v-if-directive",
  "metadata": {
    "description": "Learn about Vue v-if Directive with clear explanations and practical examples.",
    "keywords": [
      "c",
      "else",
      "data",
      "example",
      "using",
      "component",
      "element",
      "used",
      "mounted",
      "template",
      "script"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnVue",
    "subcategory": "v-if"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Vue v-if Directive",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Vue Directives Reference\n\nExample\nUsing the\nv-if\ndirective to create a\n<div>\nelement if the condition is 'true'.\n<div v-if=\"createImgDiv\">\n  <img src=\"/img_apple.svg\" alt=\"apple\">\n  <p>This is an apple.</p>\n</div>\nRun Example \u00bb\nSee more examples below.\nDefinition and Usage\nThe\nv-if\ndirective is used to render an element conditionally.\nWhen\nv-if\nis used on an element, it must be followed by an expression:\nIf the expression evaluates to 'true', the element and all its content is created in the DOM.\nIf the expression evaluates to 'false' the element is destroyed.\nWhen an element is toggled using\nv-if\n:\nWe can use the built-in\n<Transition>\ncomponent to animate when the element enters and leaves the DOM.\nLifecycle hooks such as 'mounted' and 'unmounted' are triggered.\nNote:\nIt is not recommended to use\nv-if\nand\nv-for\non the same tag. If both directives are used on the same tag,\nv-if\nwill not have access to the variables used by\nv-for\n, because\nv-if\nhas higher priority than\nv-for\n.\nDirectives for Conditional Rendering\nThis overview describes how the different Vue directives used for conditional rendering are used together.\nDirective\nDetails\nv-if\nCan be used alone, or with\nv-else-if\nand/or\nv-else\n. If the condition inside\nv-if\nis 'true',\nv-else-if\nor\nv-else\nare not considered.\nv-else-if\nMust be used after\nv-if\nor another\nv-else-if\n. If the condition inside\nv-else-if\nis 'true',\nv-else-if\nor\nv-else\nthat comes after are not considered.\nv-else\nThis part will happen if the first part of the if-statement is false. Must be placed at the very end of the if-statement, after\nv-if\nand\nv-else-if\n.\nMore Examples\nExample 1\nUsing\nv-if\nwith a data property as the conditional expression, together with\nv-else\n.\n<p v-if=\"typewritersInStock\">\nin stock\n</p>\n<p v-else>\nnot in stock\n</p>\n\nExample 2\nUsing\nv-if\nwith a comparison check as the conditional expression, together with\nv-else\n.\n<p v-if=\"typewriterCount > 0\">\nin stock\n</p>\n<p v-else>\nnot in stock\n</p>\n\nExample 3\nUsing\nv-if\ntogether with\nv-else-if\nand\nv-else\nto display a status message based on the number of typewriters in storage.\n<p v-if=\"typewriterCount>3\">\nIn stock\n</p>\n<p v-else-if=\"typewriterCount>0\">\nVery few left!\n</p>\n<p v-else>\nNot in stock\n</p>\n\nExample 4\nUsing\nv-if\nwith a native JavaScript method as the conditional expression, together with\nv-else\n.\n<div id=\"app\">\n<p v-if=\"text.includes('pizza')\">The text includes the word 'pizza'</p>\n<p v-else>The word 'pizza' is not found in the text</p>\n</div>\ndata() {\nreturn {\ntext: 'I like taco, pizza, Thai beef salad, pho soup and tagine.'\n}\n}\n\nExample 5\nUsing\nv-if\nto render a\n<div>\ntag when data is received from the API.\n<template>\n  <h1>Example</h1>\n  <p>Click the button to fetch data with an HTTP request.</p>\n  <p>Each click generates an object with a random user from <a href=\"https://random-data-api.com/\" target=\"_blank\">https://random-data-api.com/</a>.</p>\n  <p>The robot avatars are lovingly delivered by <a href=\"http://Robohash.org\" target=\"_blank\">RoboHash</a>.</p>\n  <button @click=\"fetchData\">Fetch data</button>\n  <div v-if=\"data\" id=\"dataDiv\">\n    <img :src=\"data.avatar\" alt=\"avatar\">\n    <pre>{{ data.first_name + \" \" + data.last_name }}</pre>\n    <p>\"{{ data.employment.title }}\"</p>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        data: null,\n      };\n    },\n    methods: {\n      async fetchData() {      \n        const response = await fetch(\"https://random-data-api.com/api/v2/users\"); \n        this.data = await response.json();\n      },    \n    }\n  };\n</script>\n\n<style>\n#dataDiv {\n  width: 240px;\n  background-color: aquamarine;\n  border: solid black 1px;\n  margin-top: 10px;\n  padding: 10px;\n}\n#dataDiv > img {\n  width: 100%;\n}\npre {\n  font-size: larger;\n  font-weight: bold;\n}\n</style>\nRun Example \u00bb\nExample 6\nUsing\nv-if\nto create a component so that the\nmounted\nlifecycle hook is triggered.\nCompOne.vue\n:\n<template>\n    <h2>Component</h2>\n    <p>Right after this component is added to the DOM, the mounted() function is called and we can add code to that mounted() function. In this example, an alert popup box appears after this component is mounted.</p>\n    <p><strong>Note:</strong> The reason that the alert is visible before the component is visible is because the alert is called before the browser gets to render the component to the screen.</p>\n  </template>\n\n<script>\n  export default {\n    mounted() {\n      alert(\"The component is mounted!\");\n    }\n  }\n  </script>\nApp.vue\n:\n<template>\n  <h1>The 'mounted' Lifecycle Hook</h1>\n  <button @click=\"this.activeComp = !this.activeComp\">Create component</button>\n  <div>\n    <comp-one v-if=\"activeComp\"></comp-one>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      activeComp: false\n    }\n  }\n}\n</script>\n\n<style scoped>\n  div {\n    border: dashed black 1px;\n    border-radius: 10px;\n    padding: 20px;\n    margin: 10px;\n    width: 400px;\n    background-color: lightgreen;\n  }\n</style>\nRun Example \u00bb\nExample 7\nUsing\nv-if\nto toggle a\n<p>\nelement so that animations are triggered.\n<template>\n  <h1>Add/Remove <p> Tag</h1>\n  <button @click=\"this.exists = !this.exists\">{{btnText}}</button><br>\n  <Transition>\n    <p v-if=\"exists\">Hello World!</p>\n  </Transition>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      exists: false\n    }\n  },\n  computed: {\n    btnText() {\n      if(this.exists) {\n        return 'Remove';\n      }\n      else {\n        return 'Add';\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .v-enter-from {\n    opacity: 0;\n    translate: -100px 0;\n  }\n  .v-enter-to {\n    opacity: 1;\n    translate: 0 0;\n  }\n  .v-leave-from {\n    opacity: 1;\n    translate: 0 0;\n  }\n  .v-leave-to {\n    opacity: 0;\n    translate: 100px 0;\n  }\n  p {\n    background-color: lightgreen;\n    display: inline-block;\n    padding: 10px;\n    transition: all 0.5s;\n  }\n</style>\nRun Example \u00bb\nRelated Pages\nVue Tutorial:\nVue v-if Directive\nVue Reference:\nVue v-else-if Directive\nVue Reference:\nVue v-else Directive\nVue Tutorial:\nVue Animations\nVue Tutorial:\nVue Lifecycle Hooks\n\nVue Directives Reference\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example 1",
      "content": "",
      "order": 3,
      "code": "<p v-if=\"typewritersInStock\">\nin stock\n</p>\n<p v-else>\nnot in stock\n</p>",
      "language": "html",
      "explanation": "Example of example 1"
    },
    {
      "type": "code_example",
      "title": "Example 2",
      "content": "",
      "order": 4,
      "code": "<p v-if=\"typewriterCount > 0\">\nin stock\n</p>\n<p v-else>\nnot in stock\n</p>",
      "language": "html",
      "explanation": "Example of example 2"
    },
    {
      "type": "code_example",
      "title": "Example 3",
      "content": "",
      "order": 5,
      "code": "<p v-if=\"typewriterCount>3\">\nIn stock\n</p>\n<p v-else-if=\"typewriterCount>0\">\nVery few left!\n</p>\n<p v-else>\nNot in stock\n</p>",
      "language": "html",
      "explanation": "Example of example 3"
    },
    {
      "type": "code_example",
      "title": "Example 4",
      "content": "",
      "order": 6,
      "code": "<div id=\"app\">\n<p v-if=\"text.includes('pizza')\">The text includes the word 'pizza'</p>\n<p v-else>The word 'pizza' is not found in the text</p>\n</div>",
      "language": "html",
      "explanation": "Example of example 4"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<p v-if=\"typewritersInStock\">\nin stock\n# TODO: Complete this line\n<p v-else>\nnot in stock\n</p>",
      "solution": "<p v-if=\"typewritersInStock\">\nin stock\n</p>\n<p v-else>\nnot in stock\n</p>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<p v-if=\"typewriterCount > 0\">\nin stock\n# TODO: Complete this line\n<p v-else>\nnot in stock\n</p>",
      "solution": "<p v-if=\"typewriterCount > 0\">\nin stock\n</p>\n<p v-else>\nnot in stock\n</p>"
    }
  ],
  "related_topics": [
    {
      "id": "8bf7378f-bc4d-439a-a0b6-2dde91a3df85",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "214a072a-8bfd-41ef-a16c-8cae35d0ae4f",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "cd66899a-bc89-49ee-9651-765c4e55f434",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is element if the condition?",
      "options": [
        "None of the above.",
        "'true'",
        "an apple",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of element if the condition is ''true''."
    },
    {
      "question": "What is This?",
      "options": [
        "None of the above.",
        "an apple",
        "None of the above.",
        "'true'"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of This is 'an apple'."
    }
  ],
  "summary": "This tutorial covers Vue v-if Directive concepts and techniques. You'll learn how to use Vue v-if Directive effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Vue v-if Directive and how to apply it in your projects."
}