{
  "id": "ca91778d-2d5b-4335-96fa-5c13516f0e76",
  "title": "Vue 'expose' Option",
  "slug": "vue-expose-option",
  "metadata": {
    "description": "Learn about Vue 'expose' Option with clear explanations and practical examples.",
    "keywords": [
      "component",
      "message",
      "expose",
      "child",
      "option",
      "childcomp",
      "parent",
      "template",
      "example",
      "refs"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnVue",
    "subcategory": "expose"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Vue 'expose' Option",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Vue Instance Options Reference\n\nExample\nUsing the\nexpose\noption to make a method available for the parent component to use.\nexport default {\n  expose: ['createMessage'],\n  data() {\n    return {\n      message: ' '\n    }\n  },\n  methods: {\n    createMessage(msg) {\n      this.message += msg + ' '\n    }\n  }\n}\nRun Example \u00bb\nSee more examples below\nDefinition and Usage\nThe\nexpose\noption is used to list which properties that are available to a parent component through template refs.\nBy default, all child component properties are available to a parent component through the use of template refs.\nThis means that if the child component has no\nexpose\noption, and the parent component uses the built-in attribute\nref=\"childComp\"\non the child component, the parent component can access a data property 'message' in the child component with the code\nthis.$refs.childComp.message\n. (See Example 1)\nBut, when using the\nexpose\noption, only the properties listed in the\nexpose\noption are available to the parent. (See Example 2)\nMore Examples\nExample 1\nThe\nexpose\noption is not used in the child component, so all properties in the child component are available to the parent component.\nChildComp.vue\n:\n<template>\n  <div>\n    <h3>ChildComp.vue</h3>\n    <p>Message from parent component:</p>\n    <p id=\"pEl\">{{ message }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      message: ' '\n    }\n  },\n  methods: {\n    createAlert() {\n      alert('This is an alert, from the child component')\n    }\n  }\n}\n</script>\n\n<style scoped>\ndiv {\n  border: solid black 1px;\n  padding: 10px;\n  max-width: 350px;\n  margin-top: 20px;\n}\n#pEl {\n  background-color: lightgreen;\n  font-family: 'Courier New', Courier, monospace;\n}\n</style>\nApp.vue\n:\n<template>\n  <h2>Example expose Option</h2>\n  <p>The 'expose' option is not used, so all child properties are available to the parent by default, both the 'message' data property, and the 'createAlert()' method:</p>\n  <button v-on:click=\"{ this.$refs.childComp.message += 'Hello! '; }\">Write 'Hello!'</button>\n  <button v-on:click=\"{ this.$refs.childComp.createAlert(); }\">Create alert</button>\n  <child-comp ref=\"childComp\"/>\n</template>\nRun Example \u00bb\nExample 2\nUsing the 'createMessage' method in the child component from the parent component does not work, because only the 'message' data property is listed in the\nexpose\noption of the child component.\nChildComp.vue\n:\n<template>\n  <div>\n    <h3>ChildComp.vue</h3>\n    <p>Message from parent component:</p>\n    <p id=\"pEl\">{{ message }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  expose: ['message'],\n  data() {\n    return {\n      message: ' '\n    }\n  },\n  methods: {\n    createMessage(msg) {\n      this.message += msg + ' '\n    }\n  }\n}\n</script>\n\n<style scoped>\ndiv {\n  border: solid black 1px;\n  padding: 10px;\n  max-width: 350px;\n  margin-top: 20px;\n}\n#pEl {\n  background-color: lightgreen;\n  font-family: 'Courier New', Courier, monospace;\n}\n</style>\nApp.vue\n(highlighted line does not work):\n<template>\n  <h2>Example expose Option</h2>\n  <p>Only the 'message' data property is listed in the 'expose' option, so the 'createMessage' method from the child component is not available, and will not work:</p>\n  <input type=\"text\" v-model=\"inpText\" placeholder=\"Write something\">\n  <button v-on:click=\"useMet\">Use exposed method</button>\n  <child-comp ref=\"childComp\"/>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      inpText: ''\n    }\n  },\n  methods: {\n    useMet() {\n      this.$refs.childComp.createMessage(this.inpText);\n    }\n  },\n  mounted() {\n    this.$refs.childComp.message = 'Initial message!';\n  }\n}\n</script>\nRun Example \u00bb\nRelated Pages\nVue Tutorial:\nVue Template Refs\nVue Tutorial:\nVue Components\nVue Reference:\nVue 'ref' Attribute\nVue Reference:\nVue $refs Object\n\nVue Instance Options Reference\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "ef80c038-97a7-4135-8970-00cc7d461876",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "22fdf759-09cb-4c63-a36a-99cc6a704eca",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "18c6ca55-3cdb-4040-b7dc-1371a4c0a502",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is See more examples below\nDefinition and Usage\nThe\nexpose\noption is used to list which properties that?",
      "options": [
        "available to a parent component through the use of template refs",
        "available to a parent component through template refs",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of See more examples below\nDefinition and Usage\nThe\nexpose\noption is used to list which properties that is 'available to a parent component through template refs'."
    },
    {
      "question": "What is all child component properties?",
      "options": [
        "available to a parent component through template refs",
        "available to a parent component through the use of template refs",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of all child component properties is 'available to a parent component through the use of template refs'."
    }
  ],
  "summary": "This tutorial covers Vue 'expose' Option concepts and techniques. You'll learn how to use Vue 'expose' Option effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Vue 'expose' Option and how to apply it in your projects."
}