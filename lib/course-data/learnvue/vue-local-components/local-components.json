{
  "id": "9b9559ad-9219-4f5e-879e-48255c5bb932",
  "title": "Local Components",
  "slug": "local-components",
  "metadata": {
    "description": "Learn about Local Components with clear explanations and practical examples.",
    "keywords": [
      "compone",
      "components",
      "component",
      "import",
      "comp",
      "comptwo",
      "local",
      "accessible",
      "inside",
      "main"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnVue",
    "subcategory": "Vue Local Components"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Local Components",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The way we have included components so far makes them accessible from all\n*.vue\nfiles in a project.\nComponents can be made to be local\n, meaning that they are only accessible inside a specific\n*.vue\nfile.\nGlobal Components\nThe way we have included components inside\nmain.js\nso far make the components accessible inside the\n<template>\nof all other\n*.vue\nfiles in that project.\nExample\nWe use the\nCompOne.vue\ncomponent inside both\nCompTwo.vue\nand\nApp.vue\nto show that components are accessible to each other with our current\nmain.js\nsetup.\nmain.js\n:\nimport { createApp } from 'vue'\n\nimport App from './App.vue'\nimport CompOne from './components/CompOne.vue'\nimport CompTwo from './components/CompTwo.vue'\n\nconst app = createApp(App)\napp.component('comp-one', CompOne)\napp.component('comp-two', CompTwo)\napp.mount('#app')\nRun Example \u00bb\nLocal Components\nWe can include a component directly in the\n<script>\ntag in a\n*.vue\nfile instead of including it in\nmain.js\n.\nIf we include a component directly in a\n*.vue\nfile, the component \nbecomes accessible only locally in that file.\nExample\nTo make\nCompOne.vue\nlocal to\nApp.vue\n, and only accessible there, we remove it from\nmain.js\n.\nmain.js\n:\nimport { createApp } from 'vue'\n\nimport App from './App.vue'\nimport CompOne from './components/CompOne.vue'\nimport CompTwo from './components/CompTwo.vue'\n\nconst app = createApp(App)\napp.component('comp-one', CompOne)\napp.component('comp-two', CompTwo)\napp.mount('#app')\nAnd include\nCompOne.vue\ndirectly in the\n<script>\ntag of\nApp.vue\ninstead.\nApp.vue\n:\n<template>\n\u00a0 <h3>Local Component</h3>\n\u00a0 <p>The CompOne.vue component is a local component and can only be used inside App.vue.</p>\n\u00a0 <comp-one />\n\u00a0 <comp-two />\n</template>\n\n<script>\nimport CompOne from './components/CompOne.vue';\n\nexport default {\n\u00a0 \u00a0 components: {\n\u00a0 \u00a0 \u00a0 'comp-one': CompOne\n\u00a0 \u00a0 }\n\u00a0 }\n</script>\nRun Example \u00bb\nThe\nCompOne.vue\ncomponent is now only available in\nApp.vue\n.\nIf you run the application in development mode and try to use\nCompOne.vue\nfrom inside\nCompTwo.vue\nyou get a warning:\nVue Exercises\nTest Yourself With Exercises\nExercise:\nHow can we make the 'comp-one' component available locally, only to one component?\n<script>\nCompOne from './components/CompOne.vue';\n\nexport default {\n: {\n      'comp-one':\n}\n  }\n</script>\nSubmit Answer \u00bb\nStart the Exercise\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "c1ace1bb-7073-4947-a593-99c11e2b4cf0",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "09985b03-b2f8-4368-bf42-823115954e51",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "b7a509f1-8a8e-4dc4-9d7d-ffcf6bc4b977",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is meaning that they?",
      "options": [
        "accessible to each other with our current\nmain",
        "None of the above.",
        "only accessible inside a specific\n*",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of meaning that they is 'only accessible inside a specific\n*'."
    },
    {
      "question": "What is vue\nto show that components?",
      "options": [
        "None of the above.",
        "accessible to each other with our current\nmain",
        "None of the above.",
        "only accessible inside a specific\n*"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of vue\nto show that components is 'accessible to each other with our current\nmain'."
    }
  ],
  "summary": "This tutorial covers Local Components concepts and techniques. You'll learn how to use Local Components effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Local Components and how to apply it in your projects."
}