{
  "id": "85f5835c-024b-4fa5-8195-438fb1711776",
  "title": "Vue v-show Directive",
  "slug": "vue-v-show-directive",
  "metadata": {
    "description": "Learn about Vue v-show Directive with clear explanations and practical examples.",
    "keywords": [
      "c",
      "show",
      "element",
      "transition",
      "directive",
      "script",
      "example",
      "visibility",
      "showdiv",
      "used",
      "enter"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnVue",
    "subcategory": "v-show"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Vue v-show Directive",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Vue Directives Reference\n\nExample\nUsing the\nv-show\ndirective to conditionally toggle the visibility of a\n<div>\nelement, depending on the value of 'showDiv'.\n<div v-show=\"showDiv\">This div tag can be hidden</div>\n\nSee more examples below.\nDefinition and Usage\nThe\nv-show\ndirective is used to conditionally toggle the visibility of an element.\nWhen the expression used by\nv-show\nevaluates to 'false', the CSS\ndisplay\nproperty is set to 'none', and otherwise the CSS\ndisplay\nproperty falls back to the default value.\nAn element with\nv-show\nis mounted once and remain in the DOM, only its visibility is toggled with\nv-show\n.\nv-show\ntriggers transition classes and events when used with the built-in\n<Transition>\ncomponent.\nLifecycle hooks like\nmounted\n/\nunmounted\n, or\nactivated\n/\ndeactivated\nare\nnot\ntriggered when the visibility of an object is toggled with\nv-show\n.\nv-show vs. v-if\nThe\nv-show\nand\nv-if\ndirectives are apparently quite similar, because they can both toggle an element so that it is displayed or not, but here are some differences:\nv-show\nv-if\nCreates and destroys an element in the DOM when it is toggled?\nno\nyes\nTriggers lifecycle hooks\nmounted\n/\nunmounted\nwhen an element is toggled?\nno\nyes\nTriggers transition events and classes for leaving and entering when used with the built-in\n<Transition>\ncomponent?\nyes\nyes\nWorks with the built-in\n<template>\nelement?\nno\nyes\nWorks with\nv-else-if\nand\nv-else\n?\nno\nyes\nMore Examples\nExample\nThe\nv-show\nand\nv-if\ndirectives are used side-by-side to conditionally toggle the visibility of a\n<div>\nelement.\nOpen the example, set the condition to 'false', then right-click and inspect the page to see that the element with\nv-show\nstill exists in the DOM.\n<div id=\"app\">\n<div v-show=\"showDiv\">Div tag with v-show</div>\n<div v-if=\"showDiv\">Div tag with v-if</div>\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nshowDiv: true\n}\n}\n})\napp.mount('#app')\n</script>\n\nExample\nA\n<p>\nelement becomes visible with\nv-show\nand triggers the\nafter-enter\nevent.\n<template>\n  <h1>JavaScript Transition Hooks</h1>\n  <p>This code hooks into \"after-enter\" so that after the initial animation is done, a method runs that displays a red div.</p>\n  <button @click=\"pVisible=true\">Create p-tag!</button><br>\n  <Transition @after-enter=\"onAfterEnter\">\n    <p v-show=\"pVisible\" id=\"p1\">Hello World!</p>\n  </Transition>\n  <br>\n  <div v-show=\"divVisible\">This appears after the \"enter-active\" phase of the transition.</div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      pVisible: false,\n      divVisible: false\n    }\n  },\n  methods: {\n    onAfterEnter() {\n      this.divVisible = true;\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .v-enter-active {\n    animation: swirlAdded 1s;\n  }\n  @keyframes swirlAdded {\n    from {\n      opacity: 0;\n      rotate: 0;\n      scale: 0.1;\n    }\n    to {\n      opacity: 1;\n      rotate: 360deg;\n      scale: 1;\n    }\n  }\n  #p1, div {\n    display: inline-block;\n    padding: 10px;\n    border: dashed black 1px;\n  }\n  #p1 {\n    background-color: lightgreen;\n  }\n  div {\n    background-color: lightcoral;\n  }\n</style>\nRun Example \u00bb\nRelated Pages\nVue Tutorial:\nVue v-show Directive\nVue Tutorial:\nVue v-if Directive\nVue Tutorial:\nVue Animations\nVue Reference:\nVue <Transition> Component\nVue Reference:\nVue v-if Directive\n\nVue Directives Reference\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<div v-show=\"showDiv\">This div tag can be hidden</div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<div id=\"app\">\n<div v-show=\"showDiv\">Div tag with v-show</div>\n<div v-if=\"showDiv\">Div tag with v-if</div>\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nshowDiv: true\n}\n}\n})\napp.mount('#app')\n</script>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your html code here",
      "solution": "<div v-show=\"showDiv\">This div tag can be hidden</div>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<div id=\"app\">\n<div v-show=\"showDiv\">Div tag with v-show</div>\n<div v-if=\"showDiv\">Div tag with v-if</div>\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\n# TODO: Complete this line\ndata() {\nreturn {\nshowDiv: true\n}\n}\n})\napp.mount('#app')\n</script>",
      "solution": "<div id=\"app\">\n<div v-show=\"showDiv\">Div tag with v-show</div>\n<div v-if=\"showDiv\">Div tag with v-if</div>\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\ndata() {\nreturn {\nshowDiv: true\n}\n}\n})\napp.mount('#app')\n</script>"
    }
  ],
  "related_topics": [
    {
      "id": "bb42a722-d241-4c8e-a9de-7fe4ad4a1288",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "248e43c8-6ce4-4f40-91ac-05a34f986494",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "23fb5126-5f4c-4cb3-876f-dea839ca9783",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is show\ndirective?",
      "options": [
        "set to 'none'",
        "used to conditionally toggle the visibility of an element",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of show\ndirective is 'used to conditionally toggle the visibility of an element'."
    },
    {
      "question": "What is the CSS\ndisplay\nproperty?",
      "options": [
        "None of the above.",
        "None of the above.",
        "set to 'none'",
        "used to conditionally toggle the visibility of an element"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of the CSS\ndisplay\nproperty is 'set to 'none''."
    }
  ],
  "summary": "This tutorial covers Vue v-show Directive concepts and techniques. You'll learn how to use Vue v-show Directive effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Vue v-show Directive and how to apply it in your projects."
}