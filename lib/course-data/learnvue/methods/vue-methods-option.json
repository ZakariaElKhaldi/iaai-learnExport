{
  "id": "ab0c1a23-c42e-45e3-978f-09fbf5d96da7",
  "title": "Vue 'methods' Option",
  "slug": "vue-methods-option",
  "metadata": {
    "description": "Learn about Vue 'methods' Option with clear explanations and practical examples.",
    "keywords": [
      "methods",
      "instance",
      "method",
      "example",
      "option",
      "using",
      "showmsg",
      "keyword",
      "options",
      "reference"
    ],
    "difficulty": "intermediate",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnVue",
    "subcategory": "methods"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Vue 'methods' Option",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Vue Instance Options Reference\n\nExample\nUsing a method inside the\nmethods\noption to toggle a message.\nexport default {\n  data() {\n    return {\n      msg: 'Hello World!',\n      showMsg: false\n    };\n  },\n  methods: {\n    toggleMsg() {\n      this.showMsg = !this.showMsg;\n    }\n  }\n};\nRun Example \u00bb\nDefinition and Usage\nThe\nmethods\noption is an object with all the methods that are declared on the Vue instance.\nMethods can be called directly (without the\nthis\nkeyword) from the\n<template>\nof a Vue application, like for example when a method is set to run when an event happens, using the\nv-on\ndirective.\nThe\nthis\nkeyword must be used to call a method from within the Vue instance, like when a method is called by another method for example.\nNote:\nArrow functions should be avoided when declaring methods because the Vue instance cannot be reached from inside such a function using the\nthis\nkeyword.\nRelated Pages\nVue Tutorial:\nVue Methods\nVue Tutorial:\nVue v-on Directive\n\nVue Instance Options Reference\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "3dddb87f-b017-415d-ba60-e6a3f2be3f1a",
      "title": "Advanced Unknown Techniques",
      "relationship": "next_topic"
    },
    {
      "id": "cd68dd0d-1588-4b4f-9098-0694709e2437",
      "title": "Unknown Project: Build a Real-World Application",
      "relationship": "suggested_next"
    },
    {
      "id": "606cf1e9-6282-4b1a-9c33-e04b0fb858ff",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Definition and Usage\nThe\nmethods\noption is an object with all the methods that?",
      "options": [
        "None of the above.",
        "None of the above.",
        "declared on the Vue instance",
        "set to run when an event happens"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Definition and Usage\nThe\nmethods\noption is an object with all the methods that is 'declared on the Vue instance'."
    },
    {
      "question": "What is like for example when a method?",
      "options": [
        "None of the above.",
        "declared on the Vue instance",
        "None of the above.",
        "set to run when an event happens"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of like for example when a method is 'set to run when an event happens'."
    }
  ],
  "summary": "This tutorial covers Vue 'methods' Option concepts and techniques. You'll learn how to use Vue 'methods' Option effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Vue 'methods' Option and how to apply it in your projects."
}