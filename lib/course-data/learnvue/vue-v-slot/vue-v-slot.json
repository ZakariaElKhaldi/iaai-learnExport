{
  "id": "efeb282a-3c0a-4273-9bfc-ac75d6184e0f",
  "title": "Vue v-slot",
  "slug": "vue-v-slot",
  "metadata": {
    "description": "Learn about Vue v-slot with clear explanations and practical examples.",
    "keywords": [
      "slot",
      "component",
      "comp",
      "slots",
      "example",
      "name",
      "content",
      "template",
      "default",
      "bottomslot"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnVue",
    "subcategory": "Vue v-slot"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Vue v-slot",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "We need the\nv-slot\ndirective to refer to\nnamed slots\n.\nNamed slots\nallow for more control over where the content is placed within the child component's template.\nNamed slots\ncan be used to create more flexible and reusable components.\nBefore using\nv-slot\nand named slots, let's see what happens if we use two slots in the component:\nExample\nApp.vue\n:\n<h1>App.vue</h1>\n<p>The component has two div tags with one slot in each.</p>\n<slot-comp>'Hello!'</slot-comp>\nSlotComp.vue\n:\n<h3>Component</h3>\n<div>\n\u00a0 <slot></slot>\n</div>\n<div>\n\u00a0 <slot></slot>\n</div>\nRun Example \u00bb\nWith two slots in a component, we can see that the content simply appears both places.\nv-slot and Named Slots\nIf we have more than one\n<slot>\nin a component, but we want to control in which\n<slot>\nthe content should appear, we need to name the slots and use\nv-slot\nto send the content to the right place.\nExample\nTo be able to differentiate the slots we give the slots different names.\nSlotComp.vue\n:\n<h3>Component</h3>\n<div>\n\u00a0 <slot\nname=\"topSlot\"\n></slot>\n</div>\n<div>\n\u00a0 <slot\nname=\"bottomSlot\"\n></slot>\n</div>\nAnd now we can use\nv-slot\nin\nApp.vue\nto direct the content to the right slot.\nApp.vue\n:\n<h1>App.vue</h1>\n<p>The component has two div tags with one slot in each.</p>\n<slot-comp\nv-slot:bottomSlot\n>'Hello!'</slot-comp>\nRun Example \u00bb\nDefault Slots\nIf you have a\n<slot>\nwith no name, that\n<slot>\nwill be default for components marked with\nv-slot:default\n, or components that are not marked with\nv-slot\n.\nTo see how this works we just need to make two small changes in our \nExample\nSlotComp.vue\n:\n<h3>Component</h3>\n<div>\n\u00a0 <slot\nname=\"topSlot\"\n></slot>\n</div>\n<div>\n\u00a0 <slot name=\"bottomSlot\"></slot>\n</div>\nApp.vue\n:\n<h1>App.vue</h1>\n<p>The component has two div tags with one slot in each.</p>\n<slot-comp\nv-slot:bottomSlot\n>'Hello!'</slot-comp>\nRun Example \u00bb\nAs already mentioned, we can mark content with the default value\nv-slot:default\nto make it even more clear that the content belongs to the default slot.\nExample\nSlotComp.vue\n:\n<h3>Component</h3>\n<div>\n\u00a0 <slot></slot>\n</div>\n<div>\n\u00a0 <slot name=\"bottomSlot\"></slot>\n</div>\nApp.vue\n:\n<h1>App.vue</h1>\n<p>The component has two div tags with one slot in each.</p>\n<slot-comp\nv-slot:default\n>'Default slot'</slot-comp>\nRun Example \u00bb\nv-slot in <template>\nAs you have seen the\nv-slot\ndirective can be used as an attribute in the component tag.\nv-slot\ncan also be used in a\n<template>\ntag to direct larger parts of content to a certain\n<slot>\n.\nExample\nApp.vue\n:\n<h1>App.vue</h1>\n<p>The component has two div tags with one slot in each.</p>\n<slot-comp>\n<template v-slot:bottomSlot>\n<h4>To the bottom slot!</h4>\n\u00a0 \u00a0 <p>This p tag and the h4 tag above are directed to the bottom slot with the v-slot directive used on the template tag.</p>\n\u00a0 </template>\n\u00a0 <p>This goes into the default slot</p>\n</slot-comp>\nSlotComp.vue\n:\n<h3>Component</h3>\n<div>\n\u00a0 <slot></slot>\n</div>\n<div>\n\u00a0 <slot name=\"bottomSlot\"></slot>\n</div>\nRun Example \u00bb\nWe use the\n<template>\ntag to direct some content to a certain\n<slot>\nbecause the\n<template>\ntag is not rendered, it is just a placeholder for the content. You can see this by inspecting the built page: you will not find the template tag there.\nv-slot Shorthand #\nThe shorthand for\nv-slot:\nis\n#\n.\nThis means that:\n<slot-comp\nv-slot:topSlot\n>'Hello!'</slot-comp>\nCan be written as:\n<slot-comp\n#topSlot\n>'Hello!'</slot-comp>\nExample\nApp.vue\n:\n<h1>App.vue</h1>\n<p>The component has two div tags with one slot in each.</p>\n<slot-comp\n#topSlot\n>'Hello!'</slot-comp>\nSlotComp.vue\n:\n<h3>Component</h3>\n<div>\n\u00a0 <slot name=\"topSlot\"></slot>\n</div>\n<div>\n\u00a0 <slot name=\"bottomSlot\"></slot>\n</div>\nRun Example \u00bb\nVue Exercises\nTest Yourself With Exercises\nExercise:\nIf a component 'CompOne' has two slots, like this:\n<slot name=\"headerSlot\"></slot>\n<slot name=\"mainSlot\"></slot>\nHow can we, from App.vue, direct the text 'Animals are interesting!' into the slot 'mainSlot' in 'CompOne'?\n<slot-comp\n>\n    Animals are interesting!\n</slot-comp>\nSubmit Answer \u00bb\nStart the Exercise\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "19fe1dee-6ab0-4ce1-bc37-947cc8e2db70",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "97b309d7-b39a-4ab7-ac18-3193edb9277e",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "5f7f48e6-ecc6-44b7-8eb4-16c8c578fddd",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Named slots\nallow for more control over where the content?",
      "options": [
        "not marked with\nv-slot",
        "placed within the child component's template",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Named slots\nallow for more control over where the content is 'placed within the child component's template'."
    },
    {
      "question": "What is or components that?",
      "options": [
        "placed within the child component's template",
        "not marked with\nv-slot",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of or components that is 'not marked with\nv-slot'."
    }
  ],
  "summary": "This tutorial covers Vue v-slot concepts and techniques. You'll learn how to use Vue v-slot effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Vue v-slot and how to apply it in your projects."
}