{
  "title": "Rust Enums",
  "url": "https://www.w3schools.com/rust/rust_enums.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Rust Enums",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Enums",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "An enum (short for \"enumeration\") is a way to define a type that can be one of a few different values.",
      "html": "<p>An <strong>enum</strong> (short for \"enumeration\") is a way to define a type that can be one of a few different values.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Each value in the enum is called a variant .",
      "html": "<p>Each value in the enum is called a <strong>variant</strong>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Enums are useful when you want to represent a value that can only be one of a set of options - like days of the week, directions, or results like success and error.",
      "html": "<p>Enums are useful when you want to represent a value that can only be one of a set of options - like days of the week, directions, or results like success and error.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Create an Enum",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To create an enum, use the enum keyword and add a set of named values (variants) separated by commas:",
      "html": "<p>To create an enum, use the <code>enum</code> keyword and add a set of named values (variants) separated by commas:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nenum Direction {\n\u00a0\u00a0Up,\n\u00a0\u00a0Down,\n\u00a0\u00a0Left,\n\u00a0\u00a0Right,\n}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "enum",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "enum Direction {\nUp,\nDown,\nLeft,\nRight,\n}",
      "syntax_highlighting": [
        {
          "text": "\nenum Direction {\n\u00a0\u00a0Up,\n\u00a0\u00a0Down,\n\u00a0\u00a0Left,\n\u00a0\u00a0Right,\n}\n ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "enum",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\">\n<span class=\"javakeywordcolor\" style=\"color:#005cc5\">enum</span> Direction {<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0Up,<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0Down,<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0Left,<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>\u00a0\u00a0Right,<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>}<span class=\"javanumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nenum Direction {\n\u00a0\u00a0Up,\n\u00a0\u00a0Down,\n\u00a0\u00a0Left,\n\u00a0\u00a0Right,\n}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "enum",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To use the enum, create a variable and assign it one of the enum's variants (use :: to access a variant):",
      "html": "<p>To use the enum, create a variable and assign it one of the enum's variants (use <code>::</code> to access a variant):</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/rust/tryrust.php?filename=demo_enums",
        "syntaxHighlighting": [
          {
            "text": "\n  enum Direction {\u00a0 Up,\u00a0 Down,\u00a0 Left,\u00a0 \n  Right,}fn main() {\u00a0 \n  let my_direction = Direction::Up;\u00a0 println!(\"We are going up!\");} ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "enum",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\"We are going up!\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "enum Direction {\u00a0 Up,\u00a0 Down,\u00a0 Left,\nRight,}fn main() {\nlet my_direction = Direction::Up;\u00a0 println!(\"We are going up!\");}",
      "syntax_highlighting": [
        {
          "text": "\n enum Direction {\u00a0 Up,\u00a0 Down,\u00a0 Left,\u00a0 \n  Right,}fn main() {\u00a0 \n let my_direction = Direction::Up;\u00a0 println!(\"We are going up!\");} ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "enum",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\"We are going up!\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javakeywordcolor\" style=\"color:#005cc5\">enum</span> Direction {<br/>\u00a0 Up,<br/>\u00a0 Down,<br/>\u00a0 Left,<br/>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  Right,<br/>}<br/><br/>fn main() {<br/>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javakeywordcolor\" style=\"color:#005cc5\">let</span> my_direction = Direction::Up;<br/>\u00a0 println!(<span class=\"javastringcolor\" style=\"color:green\">\"We are going up!\"</span>);<br/>} </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/rust/tryrust.php?filename=demo_enums",
      "syntax_highlighting_data": [
        {
          "text": "\n  enum Direction {\u00a0 Up,\u00a0 Down,\u00a0 Left,\u00a0 \n  Right,}fn main() {\u00a0 \n  let my_direction = Direction::Up;\u00a0 println!(\"We are going up!\");} ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "enum",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\"We are going up!\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Match on Enum Values",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Enums work great with the match statement. You can run different code depending on which variant is used:",
      "html": "<p>Enums work great with the <code>match</code> statement.  \nYou can run different code depending on which variant is used:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/rust/tryrust.php?filename=demo_enums_match",
        "syntaxHighlighting": [
          {
            "text": "\n  enum Direction {\u00a0 Up,\u00a0 Down,\u00a0 Left,\u00a0 \n  Right,}fn main() {\u00a0 \n  let my_direction = Direction::Left;\u00a0 match my_direction {\u00a0\u00a0\u00a0 \n  Direction::Up => println!(\"Going up\"),\u00a0\u00a0\u00a0 Direction::Down \n  => println!(\"Going down\"),\u00a0\u00a0\u00a0 Direction::Left => \n  println!(\"Going left\"),\u00a0\u00a0\u00a0 Direction::Right => \n  println!(\"Going right\"),\u00a0 }} ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "enum",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Going up\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Going down\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Going left\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Going right\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "enum Direction {\u00a0 Up,\u00a0 Down,\u00a0 Left,\nRight,}fn main() {\nlet my_direction = Direction::Left;\u00a0 match my_direction {\nDirection::Up => println!(\"Going up\"),\u00a0\u00a0\u00a0 Direction::Down\n=> println!(\"Going down\"),\u00a0\u00a0\u00a0 Direction::Left =>\nprintln!(\"Going left\"),\u00a0\u00a0\u00a0 Direction::Right =>\nprintln!(\"Going right\"),\u00a0 }}",
      "syntax_highlighting": [
        {
          "text": "\n enum Direction {\u00a0 Up,\u00a0 Down,\u00a0 Left,\u00a0 \n  Right,}fn main() {\u00a0 \n let my_direction = Direction::Left;\u00a0 match my_direction {\u00a0\u00a0\u00a0 \n  Direction::Up => println!(\"Going up\"),\u00a0\u00a0\u00a0 Direction::Down \n  => println!(\"Going down\"),\u00a0\u00a0\u00a0 Direction::Left => \n  println!(\"Going left\"),\u00a0\u00a0\u00a0 Direction::Right => \n  println!(\"Going right\"),\u00a0 }} ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "enum",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Going up\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Going down\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Going left\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Going right\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javakeywordcolor\" style=\"color:#005cc5\">enum</span> Direction {<br/>\u00a0 Up,<br/>\u00a0 Down,<br/>\u00a0 Left,<br/>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  Right,<br/>}<br/><br/>fn main() {<br/>\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javakeywordcolor\" style=\"color:#005cc5\">let</span> my_direction = Direction::Left;<br/><br/>\u00a0 match my_direction {<br/>\u00a0\u00a0\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  Direction::Up =&gt; println!(<span class=\"javastringcolor\" style=\"color:green\">\"Going up\"</span>),<br/>\u00a0\u00a0\u00a0 Direction::Down <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  =&gt; println!(<span class=\"javastringcolor\" style=\"color:green\">\"Going down\"</span>),<br/>\u00a0\u00a0\u00a0 Direction::Left =&gt; <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  println!(<span class=\"javastringcolor\" style=\"color:green\">\"Going left\"</span>),<br/>\u00a0\u00a0\u00a0 Direction::Right =&gt; <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  println!(<span class=\"javastringcolor\" style=\"color:green\">\"Going right\"</span>),<br/>\u00a0 }<br/>} </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/rust/tryrust.php?filename=demo_enums_match",
      "syntax_highlighting_data": [
        {
          "text": "\n  enum Direction {\u00a0 Up,\u00a0 Down,\u00a0 Left,\u00a0 \n  Right,}fn main() {\u00a0 \n  let my_direction = Direction::Left;\u00a0 match my_direction {\u00a0\u00a0\u00a0 \n  Direction::Up => println!(\"Going up\"),\u00a0\u00a0\u00a0 Direction::Down \n  => println!(\"Going down\"),\u00a0\u00a0\u00a0 Direction::Left => \n  println!(\"Going left\"),\u00a0\u00a0\u00a0 Direction::Right => \n  println!(\"Going right\"),\u00a0 }} ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "enum",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Going up\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Going down\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Going left\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Going right\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Enums with Data",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Enum variants can also hold data. This is useful when each variant needs to store extra information:",
      "html": "<p>Enum variants can also hold data. This is useful when each variant needs to \nstore extra information:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/rust/tryrust.php?filename=demo_enums_data",
        "syntaxHighlighting": [
          {
            "text": "\n  enum LoginStatus {\u00a0 Success(String),\u00a0 Error(String),}fn \n  main() {\u00a0 let result1 = LoginStatus::Success(String::from(\"Welcome, \n  John!\"));\u00a0 let result2 = LoginStatus::Error(String::from(\"Incorrect \n  password\"));\u00a0 match result1 {\u00a0\u00a0\u00a0 \n  LoginStatus::Success(message) => println!(\"Success: {}\", message),\u00a0\u00a0\u00a0 \n  LoginStatus::Error(message) => println!(\"Error: {}\", message),\u00a0 }\n  } ",
            "color": "rgb(0, 0, 0)",
            "class": "javacolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "enum",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "String",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "String",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "String",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\"Welcome, \n  John!\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "String",
            "color": "rgb(0, 92, 197)",
            "class": "javakeywordcolor"
          },
          {
            "text": "\"Incorrect \n  password\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Success: {}\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          },
          {
            "text": "\"Error: {}\"",
            "color": "rgb(0, 128, 0)",
            "class": "javastringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "javanumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "javaHigh"
        ],
        "isNotranslate": true
      },
      "code": "enum LoginStatus {\u00a0 Success(String),\u00a0 Error(String),}fn\nmain() {\u00a0 let result1 = LoginStatus::Success(String::from(\"Welcome,\nJohn!\"));\u00a0 let result2 = LoginStatus::Error(String::from(\"Incorrect\npassword\"));\u00a0 match result1 {\nLoginStatus::Success(message) => println!(\"Success: {}\", message),\nLoginStatus::Error(message) => println!(\"Error: {}\", message),\u00a0 }\n}",
      "syntax_highlighting": [
        {
          "text": "\n enum LoginStatus {\u00a0 Success(String),\u00a0 Error(String),}fn \n  main() {\u00a0 let result1 = LoginStatus::Success(String::from(\"Welcome, \n  John!\"));\u00a0 let result2 = LoginStatus::Error(String::from(\"Incorrect \n  password\"));\u00a0 match result1 {\u00a0\u00a0\u00a0 \n  LoginStatus::Success(message) => println!(\"Success: {}\", message),\u00a0\u00a0\u00a0 \n  LoginStatus::Error(message) => println!(\"Error: {}\", message),\u00a0 }\n  } ",
          "color": "black",
          "class": [
            "javacolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "enum",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "String",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "String",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "String",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\"Welcome, \n  John!\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "String",
          "color": "#005cc5",
          "class": [
            "javakeywordcolor"
          ]
        },
        {
          "text": "\"Incorrect \n  password\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Success: {}\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        },
        {
          "text": "\"Error: {}\"",
          "color": "green",
          "class": [
            "javastringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "javanumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate javaHigh\"><span class=\"javacolor\" style=\"color:black\"><span class=\"javanumbercolor\" style=\"color:#905\">\n</span> <span class=\"javakeywordcolor\" style=\"color:#005cc5\">enum</span> LoginStatus {<br/>\u00a0 Success(<span class=\"javakeywordcolor\" style=\"color:#005cc5\">String</span>),<br/>\u00a0 Error(<span class=\"javakeywordcolor\" style=\"color:#005cc5\">String</span>),<br/>}<br/><br/>fn <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  main() {<br/>\u00a0 <span class=\"javakeywordcolor\" style=\"color:#005cc5\">let</span> result1 = LoginStatus::Success(<span class=\"javakeywordcolor\" style=\"color:#005cc5\">String</span>::from(<span class=\"javastringcolor\" style=\"color:green\">\"Welcome, \n  John!\"</span>));<br/>\u00a0 <span class=\"javakeywordcolor\" style=\"color:#005cc5\">let</span> result2 = LoginStatus::Error(<span class=\"javakeywordcolor\" style=\"color:#005cc5\">String</span>::from(<span class=\"javastringcolor\" style=\"color:green\">\"Incorrect \n  password\"</span>));<br/><br/>\u00a0 match result1 {<br/>\u00a0\u00a0\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  LoginStatus::Success(message) =&gt; println!(<span class=\"javastringcolor\" style=\"color:green\">\"Success: {}\"</span>, message),<br/>\u00a0\u00a0\u00a0 <span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  LoginStatus::Error(message) =&gt; println!(<span class=\"javastringcolor\" style=\"color:green\">\"Error: {}\"</span>, message),<br/>\u00a0 }<br/><span class=\"javanumbercolor\" style=\"color:#905\">\n</span>  } </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "tryItLink": "https://www.w3schools.com/rust/tryrust.php?filename=demo_enums_data",
      "syntax_highlighting_data": [
        {
          "text": "\n  enum LoginStatus {\u00a0 Success(String),\u00a0 Error(String),}fn \n  main() {\u00a0 let result1 = LoginStatus::Success(String::from(\"Welcome, \n  John!\"));\u00a0 let result2 = LoginStatus::Error(String::from(\"Incorrect \n  password\"));\u00a0 match result1 {\u00a0\u00a0\u00a0 \n  LoginStatus::Success(message) => println!(\"Success: {}\", message),\u00a0\u00a0\u00a0 \n  LoginStatus::Error(message) => println!(\"Error: {}\", message),\u00a0 }\n  } ",
          "color": "rgb(0, 0, 0)",
          "class": "javacolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "enum",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "String",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "String",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "String",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\"Welcome, \n  John!\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "String",
          "color": "rgb(0, 92, 197)",
          "class": "javakeywordcolor"
        },
        {
          "text": "\"Incorrect \n  password\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Success: {}\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        },
        {
          "text": "\"Error: {}\"",
          "color": "rgb(0, 128, 0)",
          "class": "javastringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "javanumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "javaHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Why Use Enums?",
      "level": "h3"
    }
  ]
}