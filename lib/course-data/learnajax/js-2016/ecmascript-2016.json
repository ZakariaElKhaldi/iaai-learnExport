{
  "id": "1527ee3a-cd9b-4e15-abb9-fcf88ef9fd58",
  "title": "ECMAScript 2016",
  "slug": "ecmascript-2016",
  "metadata": {
    "description": "Learn about ECMAScript 2016 with clear explanations and practical examples.",
    "keywords": [
      "c",
      "exponentiation",
      "ecmascript",
      "javascript",
      "array",
      "includes",
      "supported",
      "operator",
      "example",
      "assignment",
      "modern"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnAJAX",
    "subcategory": "JS 2016"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "ECMAScript 2016",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "JavaScript Version Numbers\nOld ECMAScript versions was named by numbers: ES5 and ES6.\nFrom 2016, versions are named by year: ES2016, 2018, 2020 ...\nNew Features in ECMAScript 2016\nThis chapter introduces the new features in ECMAScript 2016:\nJavaScript Exponentiation (**)\nJavaScript Exponentiation assignment (**=)\nJavaScript Array includes()\nBrowser Support\nES 2016 is fully supported in all modern browsers since March 2017:\nChrome 52\nEdge 15\nFirefox 52\nSafari 10.1\nOpera 39\nJul 2016\nApr 2017\nMar 2017\nMay 2017\nAug 2016\nES 2016 is not supported in Internet Explorer.\nExponentiation Operator\nThe\nexponentiation\noperator (\n**\n) raises the first operand to the power of the second operand.\nExample\nlet x = 5;\nlet z = x ** 2;\n\nx ** y\nproduces the same result as\nMath.pow(x, y)\n:\nExample\nlet x = 5;\nlet z = Math.pow(x,2);\n\nExponentiation Assignment\nThe\nexponentiation assignment\noperator (\n**=\n) raises the value of a variable to the power of the right operand.\nExample\nlet x = 5;\nx **= 2;\n\nThe Exponentiation Operator is supported in all modern browsers since March 2017:\nChrome 52\nEdge 14\nFirefox 52\nSafari 10.1\nOpera 39\nJul 2016\nAug 2016\nMar 2017\nMar 2017\nAug 2016\nJavaScript Array includes()\nECMAScript 2016 introduced\nArray.includes\nto arrays.\nThis allows us to check if an element is present in an array:\nExample\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\nfruits.includes(\"Mango\");\n\nArray.includes\nis supported in all modern browsers since August 2016:\nChrome 47\nEdge 14\nFirefox 43\nSafari 9\nOpera 34\nDec 2015\nAug 2016\nDec 2015\nOct 2015\nDec 2015\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "let x = 5;\nlet z = x ** 2;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "let x = 5;\nlet z = Math.pow(x,2);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "let x = 5;\nx **= 2;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "const fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\nfruits.includes(\"Mango\");",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "let x = 5;\nlet z = x ** 2;"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "let x = 5;\nlet z = Math.pow(x,2);"
    }
  ],
  "related_topics": [
    {
      "id": "820046f4-782f-40b7-820e-84c2987f2681",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "d934ce2d-bdf7-4ae7-ade0-90c20d7330fb",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "a2654a96-ac18-468c-9a72-1be1a62393d9",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is versions?",
      "options": [
        "Not a versions.",
        "None of the above.",
        "named by year: ES2016",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of versions is 'named by year: ES2016'."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers ECMAScript 2016 concepts and techniques. You'll learn how to use ECMAScript 2016 effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of ECMAScript 2016 and how to apply it in your projects."
}