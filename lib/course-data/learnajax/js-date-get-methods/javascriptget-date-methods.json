{
  "id": "a5c47ffa-06f9-49b6-9bc0-34584b5515c6",
  "title": "JavaScriptGet Date Methods",
  "slug": "javascriptget-date-methods",
  "metadata": {
    "description": "Learn about JavaScriptGet Date Methods with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "date",
      "const",
      "method",
      "returns",
      "time",
      "number",
      "examples",
      "getday",
      "getmonth",
      "month"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnAJAX",
    "subcategory": "JS Date Get Methods"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JavaScript\nGet Date Methods",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The new Date() Constructor\nIn JavaScript, date objects are created with\nnew Date()\n.\nnew Date()\nreturns a date object with the current date and time.\nGet the Current Time\nconst date = new Date();\n\nDate Get Methods\nMethod\nDescription\ngetFullYear()\nGet\nyear\nas a four digit number (yyyy)\ngetMonth()\nGet\nmonth\nas a number (0-11)\ngetDate()\nGet\nday\nas a number (1-31)\ngetDay()\nGet\nweekday\nas a number (0-6)\ngetHours()\nGet\nhour\n(0-23)\ngetMinutes()\nGet\nminute\n(0-59)\ngetSeconds()\nGet\nsecond\n(0-59)\ngetMilliseconds()\nGet\nmillisecond\n(0-999)\ngetTime()\nGet\ntime\n(milliseconds since January 1, 1970)\nNote 1\nThe get methods above return\nLocal time\n.\nUniversal time\n(UTC) is documented at the bottom of this page.\nNote 2\nThe get methods return information from existing date objects.\nIn a date object, the time is static. The \"clock\" is not \"running\".\nThe time in a date object is NOT the same as current time.\nThe getFullYear() Method\nThe\ngetFullYear()\nmethod returns the year of a date as a four digit number:\nExamples\nconst d = new Date(\"2021-03-25\");\nd.getFullYear();\n\nconst d = new Date();\nd.getFullYear();\n\nWarning !\nOld JavaScript code might use the non-standard method getYear().\ngetYear() is supposed to return a 2-digit year.\ngetYear() is deprecated. Do not use it!\nThe getMonth() Method\nThe\ngetMonth()\nmethod returns the month of a date as a number (0-11).\nNote\nIn JavaScript, January is month number 0, February is number 1, ...\nFinally, December is month number 11.\nExamples\nconst d = new Date(\"2021-03-25\");\nd.getMonth();\n\nconst d = new Date();\nd.getMonth();\n\nNote\nYou can use an array of names to return the month as a name:\nExamples\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\",\n\"June\", \"July\", \"August\", \"September\", \"October\",\n\"November\", \"December\"];\nconst d = new Date(\"2021-03-25\");\nlet month = months[d.getMonth()];\n\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\",\n\"June\", \"July\", \"August\", \"September\", \"October\",\n\"November\", \"December\"];\nconst d = new Date();\nlet month = months[d.getMonth()];\n\nThe getDate() Method\nThe\ngetDate()\nmethod returns the day of a date as a number (1-31):\nExamples\nconst d = new Date(\"2021-03-25\");\nd.getDate();\n\nconst d = new Date();\nd.getDate();\n\nThe getHours() Method\nThe\ngetHours()\nmethod returns the hours of a date as a number (0-23):\nExamples\nconst d = new Date(\"2021-03-25\");\nd.getHours();\n\nconst d = new Date();\nd.getHours();\n\nThe getMinutes() Method\nThe\ngetMinutes()\nmethod returns the minutes of a date as a number (0-59):\nExamples\nconst d = new Date(\"2021-03-25\");\nd.getMinutes();\n\nconst d = new Date();\nd.getMinutes();\n\nThe getSeconds() Method\nThe\ngetSeconds()\nmethod returns the seconds of a date as a number (0-59):\nExamples\nconst d = new Date(\"2021-03-25\");\nd.getSeconds();\n\nconst d = new Date();\nd.getSeconds();\n\nThe getMilliseconds() Method\nThe\ngetMilliseconds()\nmethod returns the milliseconds of a date as a number (0-999):\nExamples\nconst d = new Date(\"2021-03-25\");\nd.getMilliseconds();\n\nconst d = new Date();\nd.getMilliseconds();\n\nThe getDay() Method\nThe\ngetDay()\nmethod returns the weekday of a date as a number (0-6).\nNote\nIn JavaScript, the first day of the week (day 0) is Sunday.\nSome countries in the world consider the first day of the week to be Monday.\nExamples\nconst d = new Date(\"2021-03-25\");\nd.getDay();\n\nconst d = new Date();\nd.getDay();\n\nNote\nYou can use an array of names, and\ngetDay()\nto return weekday as a name:\nExamples\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n\"Thursday\", \"Friday\", \"Saturday\"];\nconst d = new Date(\"2021-03-25\");\nlet day = days[d.getDay()];\n\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n\"Thursday\", \"Friday\", \"Saturday\"];\nconst d = new Date();\nlet day = days[d.getDay()];\n\nThe getTime() Method\nThe\ngetTime()\nmethod returns the number of milliseconds since January 1, 1970:\nExamples\nconst d = new Date(\"1970-01-01\");\nd.getTime();\n\nconst d = new Date(\"2021-03-25\");\nd.getTime();\n\nconst d = new Date();\nd.getTime();\n\nThe Date.now() Method\nDate.now()\nreturns the number of milliseconds since January 1, 1970.\nExamples\nlet ms = Date.now();\n\nCalculate the number of years since 1970/01/01:\nconst minute = 1000 * 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst year = day * 365;\nlet years = Math.round(Date.now() / year);\n\nDate.now()\nis a static method of the Date object.\nYou cannot use it on a date object like\nmyDate.now()\n.\nThe syntax is always\nDate.now()\n.\nUTC Date Get Methods\nMethod\nSame As\nDescription\ngetUTCDate()\ngetDate()\nReturns the UTC date\ngetUTCFullYear()\ngetFullYear()\nReturns the UTC year\ngetUTCMonth()\ngetMonth()\nReturns the UTC month\ngetUTCDay()\ngetDay()\nReturns the UTC day\ngetUTCHours()\ngetHours()\nReturns the UTC hour\ngetUTCMinutes()\ngetMinutes()\nReturns the UTC minutes\ngetUTCSeconds()\ngetSeconds()\nReturns the UTC seconds\ngetUTCMilliseconds()\ngetMilliseconds()\nReturns the UTC milliseconds\nUTC methods use UTC time (Coordinated Universal Time).\nUTC time is the same as GMT (Greenwich Mean Time).\nThe difference between Local time and UTC time can be up to 24 hours.\nLocal Time?\nUTC Time?\nThe getTimezoneOffset() Method\nThe\ngetTimezoneOffset()\nmethod returns the difference (in minutes)\nbetween local time an UTC time:\nExample\nlet diff = d.getTimezoneOffset();\n\nComplete JavaScript Date Reference\nFor a complete Date reference, go to our:\nComplete JavaScript Date Reference\n.\nThe reference contains descriptions and examples of all Date properties and \nmethods.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Get the Current Time",
      "content": "",
      "order": 3,
      "code": "const date = new Date();",
      "language": "javascript",
      "explanation": "Example of get the current time"
    },
    {
      "type": "code_example",
      "title": "Examples",
      "content": "",
      "order": 4,
      "code": "const d = new Date(\"2021-03-25\");\nd.getFullYear();",
      "language": "javascript",
      "explanation": "Example of examples"
    },
    {
      "type": "code_example",
      "title": "Examples",
      "content": "",
      "order": 5,
      "code": "const d = new Date(\"2021-03-25\");\nd.getMonth();",
      "language": "javascript",
      "explanation": "Example of examples"
    },
    {
      "type": "code_example",
      "title": "Examples",
      "content": "",
      "order": 6,
      "code": "const months = [\"January\", \"February\", \"March\", \"April\", \"May\",\n\"June\", \"July\", \"August\", \"September\", \"October\",\n\"November\", \"December\"];\nconst d = new Date(\"2021-03-25\");\nlet month = months[d.getMonth()];",
      "language": "javascript",
      "explanation": "Example of examples"
    },
    {
      "type": "code_example",
      "title": "Examples",
      "content": "",
      "order": 7,
      "code": "const d = new Date(\"2021-03-25\");\nd.getDate();",
      "language": "javascript",
      "explanation": "Example of examples"
    },
    {
      "type": "code_example",
      "title": "Examples",
      "content": "",
      "order": 8,
      "code": "const d = new Date(\"2021-03-25\");\nd.getHours();",
      "language": "javascript",
      "explanation": "Example of examples"
    },
    {
      "type": "code_example",
      "title": "Examples",
      "content": "",
      "order": 9,
      "code": "const d = new Date(\"2021-03-25\");\nd.getMinutes();",
      "language": "javascript",
      "explanation": "Example of examples"
    },
    {
      "type": "code_example",
      "title": "Examples",
      "content": "",
      "order": 10,
      "code": "const d = new Date(\"2021-03-25\");\nd.getSeconds();",
      "language": "javascript",
      "explanation": "Example of examples"
    },
    {
      "type": "code_example",
      "title": "Examples",
      "content": "",
      "order": 11,
      "code": "const d = new Date(\"2021-03-25\");\nd.getMilliseconds();",
      "language": "javascript",
      "explanation": "Example of examples"
    },
    {
      "type": "code_example",
      "title": "Examples",
      "content": "",
      "order": 12,
      "code": "const d = new Date(\"2021-03-25\");\nd.getDay();",
      "language": "javascript",
      "explanation": "Example of examples"
    },
    {
      "type": "code_example",
      "title": "Examples",
      "content": "",
      "order": 13,
      "code": "const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n\"Thursday\", \"Friday\", \"Saturday\"];\nconst d = new Date(\"2021-03-25\");\nlet day = days[d.getDay()];",
      "language": "javascript",
      "explanation": "Example of examples"
    },
    {
      "type": "code_example",
      "title": "Examples",
      "content": "",
      "order": 14,
      "code": "const d = new Date(\"1970-01-01\");\nd.getTime();",
      "language": "javascript",
      "explanation": "Example of examples"
    },
    {
      "type": "code_example",
      "title": "Examples",
      "content": "",
      "order": 15,
      "code": "let ms = Date.now();",
      "language": "javascript",
      "explanation": "Example of examples"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 16,
      "code": "let diff = d.getTimezoneOffset();",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "const date = new Date();"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "const d = new Date(\"2021-03-25\");\nd.getFullYear();"
    }
  ],
  "related_topics": [
    {
      "id": "4c3b056e-6faf-4b5c-9711-fe8d7978a8d3",
      "title": "Advanced Javascript Techniques",
      "relationship": "next_topic"
    },
    {
      "id": "f774f90d-3ca1-4b2f-afcb-db1b7e6f047c",
      "title": "Javascript Project: Build a Real-World Application",
      "relationship": "suggested_next"
    },
    {
      "id": "ae0e9b5e-2c35-472c-8a12-0467cd60bdf5",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is date objects?",
      "options": [
        "None of the above.",
        "Not a date objects.",
        "None of the above.",
        "created with\nnew Date()"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of date objects is 'created with\nnew Date()'."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers JavaScriptGet Date Methods concepts and techniques. You'll learn how to use JavaScriptGet Date Methods effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaScriptGet Date Methods and how to apply it in your projects."
}