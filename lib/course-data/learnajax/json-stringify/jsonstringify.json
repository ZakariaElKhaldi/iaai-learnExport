{
  "id": "72defb05-c92b-44ba-9350-ac5102a1bf10",
  "title": "JSON.stringify()",
  "slug": "jsonstringify",
  "metadata": {
    "description": "Learn about JSON.stringify() with clear explanations and practical examples.",
    "keywords": [
      "json",
      "stringify",
      "const",
      "myjson",
      "string",
      "javascript",
      "data",
      "convert",
      "john",
      "function"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnAJAX",
    "subcategory": "JSON Stringify"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JSON\n.stringify()",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "A common use of JSON is to exchange data to/from a web server.\nWhen sending data to a web server, the data has to be \na string.\nYou can convert any JavaScript datatype into a string with\nJSON.stringify()\n.\nStringify a JavaScript Object\nImagine we have this object in JavaScript:\nconst obj = {name: \"John\", age: 30, city: \"New York\"};\nUse the JavaScript function\nJSON.stringify()\nto convert it into a string.\nconst myJSON = JSON.stringify(obj);\nThe result will be a string following the JSON notation.\nmyJSON\nis now a string, and ready to be sent to a server:\nExample\nconst obj = {name: \"John\", age: 30, city: \"New York\"};\nconst myJSON = \n  JSON.stringify(obj);\n\nYou will learn how to send JSON to a server in the \nStringify a JavaScript Array\nIt is also possible to stringify JavaScript arrays:\nImagine we have this array in JavaScript:\nconst arr = [\"John\", \"Peter\", \"Sally\", \"Jane\"];\nUse the JavaScript function\nJSON.stringify()\nto convert it into a string.\nconst myJSON = JSON.stringify(arr);\nThe result will be a string following the JSON notation.\nmyJSON\nis now a string, and ready to be sent to a server:\nExample\nconst arr = [\"John\", \"Peter\", \"Sally\", \"Jane\"];\nconst myJSON = \n  JSON.stringify(arr);\n\nYou will learn how to send a JSON string to a server in the \nStoring Data\nWhen storing data, the data has to be a certain format, and regardless of where you choose to store it,\ntext\nis always one of the legal formats.\nJSON makes it possible to store JavaScript objects as text.\nExample\nStoring data in local storage\n// Storing data:\nconst myObj = {name: \"John\", \n  age: 31, city: \"New York\"};\nconst myJSON = \n  JSON.stringify(myObj);\nlocalStorage.setItem(\"testJSON\", myJSON);\n// Retrieving data:\nlet text = localStorage.getItem(\"testJSON\");\nlet obj = \n  JSON.parse(text);\ndocument.getElementById(\"demo\").innerHTML = obj.name;\n\nAll Data Types\nJSON.stringify() can not only convert objects and arrays into JSON strings,\nit can convert any JavaScript value into a string.\nExample\nStringify a Number\nconst num = 123e-5;\nconst myJSON = JSON.stringify(num);\n\nExample\nStringify a Boolean\nlet bool = new Boolean(1);\nconst myJSON = JSON.stringify(bool);\n\nStringify  a Date\nIn JSON, date objects are not allowed. The\nJSON.stringify()\nfunction\nwill convert any Date objects into strings.\nExample\nconst obj = {name: \"John\", today: new Date(), city : \"New York\"};\nconst myJSON = JSON.stringify(obj);\n\nYou can convert the string back into a date object at the receiver.\nStringify a Function\nIn JSON, functions are not allowed as object values.\nThe\nJSON.stringify()\nfunction will remove any functions from a JavaScript \nobject, both the key and the value:\nExample\nconst obj = {name: \"John\", age: function () {return 30;}, city: \"New York\"};\nconst myJSON = JSON.stringify(obj);\n\nThis can be omitted if you convert your functions into strings before running \nthe\nJSON.stringify()\nfunction.\nExample\nconst obj = {name: \"John\", age: function () {return 30;}, city: \"New York\"};\nobj.age = obj.age.toString();\nconst myJSON = JSON.stringify(obj);\n\nIf you send functions using JSON, the functions will lose their scope, and the receiver \nwould have to use eval() to convert them back into functions.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "const obj = {name: \"John\", age: 30, city: \"New York\"};",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "const myJSON = JSON.stringify(obj);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "const obj = {name: \"John\", age: 30, city: \"New York\"};\nconst myJSON = \n  JSON.stringify(obj);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "const arr = [\"John\", \"Peter\", \"Sally\", \"Jane\"];",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "const myJSON = JSON.stringify(arr);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "const arr = [\"John\", \"Peter\", \"Sally\", \"Jane\"];\nconst myJSON = \n  JSON.stringify(arr);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "// Storing data:\nconst myObj = {name: \"John\", \n  age: 31, city: \"New York\"};\nconst myJSON = \n  JSON.stringify(myObj);\nlocalStorage.setItem(\"testJSON\", myJSON);\n// Retrieving data:\nlet text = localStorage.getItem(\"testJSON\");\nlet obj = \n  JSON.parse(text);\ndocument.getElementById(\"demo\").innerHTML = obj.name;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "const num = 123e-5;\nconst myJSON = JSON.stringify(num);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "let bool = new Boolean(1);\nconst myJSON = JSON.stringify(bool);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": "const obj = {name: \"John\", today: new Date(), city : \"New York\"};\nconst myJSON = JSON.stringify(obj);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 13,
      "code": "const obj = {name: \"John\", age: function () {return 30;}, city: \"New York\"};\nconst myJSON = JSON.stringify(obj);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 14,
      "code": "const obj = {name: \"John\", age: function () {return 30;}, city: \"New York\"};\nobj.age = obj.age.toString();\nconst myJSON = JSON.stringify(obj);",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "const obj = {name: \"John\", age: 30, city: \"New York\"};"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "const myJSON = JSON.stringify(obj);"
    }
  ],
  "related_topics": [
    {
      "id": "d4906aa2-e9ae-4d67-aee0-c93beae28073",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "d0d0a5a8-c1e7-46f3-97c9-a69eb2eedf5a",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "be954a92-68a5-49fd-8de7-dbcf85814260",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is A common use of JSON?",
      "options": [
        "to exchange data to/from a web server",
        "None of the above.",
        "None of the above.",
        "now a string"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of A common use of JSON is 'to exchange data to/from a web server'."
    },
    {
      "question": "What is myJSON?",
      "options": [
        "to exchange data to/from a web server",
        "None of the above.",
        "None of the above.",
        "now a string"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of myJSON is 'now a string'."
    }
  ],
  "summary": "This tutorial covers JSON.stringify() concepts and techniques. You'll learn how to use JSON.stringify() effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JSON.stringify() and how to apply it in your projects."
}