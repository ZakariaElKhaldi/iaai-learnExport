{
  "id": "93510597-1bc8-45a8-bc1b-e3af497cef4c",
  "title": "JavaScript Date Objects",
  "slug": "javascript-date-objects",
  "metadata": {
    "description": "Learn about JavaScript Date Objects with clear explanations and practical examples.",
    "keywords": [
      "date",
      "const",
      "month",
      "year",
      "example",
      "milliseconds",
      "javascript",
      "time",
      "string",
      "january"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnAJAX",
    "subcategory": "JS Dates"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JavaScript Date Objects",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "JavaScript\nDate Objects\nlet us work with dates:\nYear:\nMonth:\nDay:\nHours:\nMinutes:\nSeconds:\nExamples\nconst d = new Date();\n\nconst d = new Date(\"2022-03-25\");\n\nNote\nDate objects are static. The \"clock\" is not \"running\".\nThe computer clock is ticking, date objects are not.\nJavaScript Date Output\nBy default, JavaScript will use the browser's time zone and display a date as a full text string:\nYou will learn much more about how to display dates, later in this tutorial.\nCreating Date Objects\nDate objects are created with the\nnew Date()\nconstructor.\nThere are\n9 ways\nto create a new date object:\nnew Date()\nnew Date(\ndate string\n)\nnew Date(\nyear,month\n)\nnew Date(\nyear,month,day\n)\nnew Date(\nyear,month,day,hours\n)\nnew Date(\nyear,month,day,hours,minutes\n)\nnew Date(\nyear,month,day,hours,minutes,seconds\n)\nnew Date(\nyear,month,day,hours,minutes,seconds,ms\n)\nnew Date(\nmilliseconds\n)\nJavaScript new Date()\nnew Date()\ncreates a date object with the\ncurrent date and time\n:\nExample\nconst d = new Date();\n\nnew Date(\ndate string\n)\nnew Date(\ndate string\n)\ncreates a date object from a\ndate string\n:\nExamples\nconst d = new Date(\"October 13, 2014 11:13:00\");\n\nconst d = new Date(\"2022-03-25\");\n\nDate string formats are described in the \nnew Date(\nyear, month, ...\n)\nnew Date(\nyear, month, ...\n)\ncreates a date object with a\nspecified date and time\n.\n7 numbers specify year, month, day, hour, minute, second, and millisecond (in that order):\nExample\nconst d = new Date(2018, 11, 24, 10, 33, 30, 0);\n\nNote\nJavaScript counts months from\n0\nto\n11\n:\nJanuary = 0\n.\nDecember = 11\n.\nSpecifying a month higher than 11, will not result in an error but add the overflow to the \nSpecifying:\nconst d = new Date(2018, 15, 24, 10, 33, 30);\n\nIs the same as:\nconst d = new Date(2019, 3, 24, 10, 33, 30);\n\nSpecifying a day higher than max, will not result in an error but add the overflow to the \nSpecifying:\nconst d = new Date(2018, 5, 35, 10, 33, 30);\nIs the same as:\nconst d = new Date(2018, 6, 5, 10, 33, 30);\n\nUsing 6, 4, 3, or 2 Numbers\n6 numbers specify year, month, day, hour, minute, second:\nExample\nconst d = new Date(2018, 11, 24, 10, 33, 30);\n\n5 numbers specify year, month, day, hour, and minute:\nExample\nconst d = new Date(2018, 11, 24, 10, 33);\n\n4 numbers specify year, month, day, and hour:\nExample\nconst d = new Date(2018, 11, 24, 10);\n\n3 numbers specify year, month, and day:\nExample\nconst d = new Date(2018, 11, 24);\n\n2 numbers specify year and month:\nExample\nconst d = new Date(2018, 11);\n\nYou cannot omit month. If you supply only one parameter it will be treated as milliseconds.\nExample\nconst d = new Date(2018);\n\nOne and two digit years will be interpreted as 19xx:\nExample\nconst d = new Date(99, 11, 24);\n\nExample\nconst d = new Date(9, 11, 24);\n\nJavaScript Stores Dates as Milliseconds\nJavaScript stores dates as number of milliseconds since January 01, 1970.\nZero time is January 01, 1970 00:00:00 UTC\n.\nOne day (24 hours) is 86 400 000 milliseconds.\nNow the time is:\nmilliseconds past January 01, 1970\nnew Date(\nmilliseconds\n)\nnew Date(\nmilliseconds\n)\ncreates a new date object as\nmilliseconds\nplus zero time:\nExamples\n01 January 1970\nplus\n100 000 000 000 milliseconds is:\nconst d = new Date(100000000000);\n\nJanuary 01 1970\nminus\n100 000 000 000 milliseconds is:\nconst d = new Date(-100000000000);\n\nJanuary 01 1970\nplus\n24 hours is:\nconst d = new Date(24 * 60 * 60 * 1000);\n// or\nconst d = new Date(86400000);\n\n01 January 1970\nplus\n0 milliseconds is:\nconst d = new Date(0);\n\nDate Methods\nWhen a date object is created, a number of\nmethods\nallow you to operate on \nit.\nDate methods allow you to get and set the year, month, day, hour, \nminute, second, and millisecond of date objects, using either local time or UTC \n(universal, or GMT) time.\nDate methods and time zones are covered in the \nDisplaying Dates\nJavaScript will (by default) output dates using the\ntoString()\nmethod.\nThis is a string representation of the date, including the time zone.\nThe format is specified in the ECMAScript specification:\nExample\n\nWhen you display a date object in HTML, it is automatically converted to a \nstring, with the\ntoString()\nmethod.\nExample\nconst d = new Date();\nd.toString();\n\nThe\ntoDateString()\nmethod converts a date to a more readable \nformat:\nExample\nconst d = new Date();\nd.toDateString();\n\nThe\ntoUTCString()\nmethod converts a date to a string using the UTC standard:\nExample\nconst d = new Date();\nd.toUTCString();\n\nThe\ntoISOString()\nmethod converts a date to a string using the ISO standard:\nExample\nconst d = new Date();\nd.toISOString();\n\nComplete JavaScript Date Reference\nFor a complete Date reference, go to our:\nComplete JavaScript Date Reference\n.\nThe reference contains descriptions and examples of all Date properties and \nmethods.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Examples",
      "content": "",
      "order": 3,
      "code": "const d = new Date();",
      "language": "javascript",
      "explanation": "Example of examples"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "new Date()\nnew Date(\ndate string\n)\nnew Date(\nyear,month\n)\nnew Date(\nyear,month,day\n)\nnew Date(\nyear,month,day,hours\n)\nnew Date(\nyear,month,day,hours,minutes\n)\nnew Date(\nyear,month,day,hours,minutes,seconds\n)\nnew Date(\nyear,month,day,hours,minutes,seconds,ms\n)\nnew Date(\nmilliseconds\n)",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "const d = new Date();",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Examples",
      "content": "",
      "order": 6,
      "code": "const d = new Date(\"October 13, 2014 11:13:00\");",
      "language": "javascript",
      "explanation": "Example of examples"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "const d = new Date(2018, 11, 24, 10, 33, 30, 0);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "const d = new Date(2018, 15, 24, 10, 33, 30);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "const d = new Date(2018, 5, 35, 10, 33, 30);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "const d = new Date(2018, 11, 24, 10, 33, 30);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "const d = new Date(2018, 11, 24, 10, 33);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": "const d = new Date(2018, 11, 24, 10);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 13,
      "code": "const d = new Date(2018, 11, 24);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 14,
      "code": "const d = new Date(2018, 11);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 15,
      "code": "const d = new Date(2018);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 16,
      "code": "const d = new Date(99, 11, 24);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 17,
      "code": "const d = new Date(9, 11, 24);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Examples",
      "content": "",
      "order": 18,
      "code": "const d = new Date(100000000000);",
      "language": "javascript",
      "explanation": "Example of examples"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 19,
      "code": "",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 20,
      "code": "const d = new Date();\nd.toString();",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 21,
      "code": "const d = new Date();\nd.toDateString();",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 22,
      "code": "const d = new Date();\nd.toUTCString();",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 23,
      "code": "const d = new Date();\nd.toISOString();",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "const d = new Date();"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "new Date()\nnew Date(\ndate string\n)\nnew Date(\nyear,month\n)\nnew Date(\nyear,month,day\n)\nnew Date(\nyear,month,day,hours\n)\nnew Date(\nyear,month,day,hours,minutes\n)\nnew Date(\nyear,month,day,hours,minutes,seconds\n# TODO: Complete this line\nnew Date(\nyear,month,day,hours,minutes,seconds,ms\n)\nnew Date(\nmilliseconds\n)",
      "solution": "new Date()\nnew Date(\ndate string\n)\nnew Date(\nyear,month\n)\nnew Date(\nyear,month,day\n)\nnew Date(\nyear,month,day,hours\n)\nnew Date(\nyear,month,day,hours,minutes\n)\nnew Date(\nyear,month,day,hours,minutes,seconds\n)\nnew Date(\nyear,month,day,hours,minutes,seconds,ms\n)\nnew Date(\nmilliseconds\n)"
    }
  ],
  "related_topics": [
    {
      "id": "e20e70bc-744e-457d-abb3-53c418cf0546",
      "title": "Advanced Javascript Techniques",
      "relationship": "next_topic"
    },
    {
      "id": "17be2168-0bc3-46c4-bbba-6a515869dc22",
      "title": "Javascript Project: Build a Real-World Application",
      "relationship": "suggested_next"
    },
    {
      "id": "98e0818c-8aa8-471a-abfa-b35ddccd8187",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Note\nDate objects?",
      "options": [
        "None of the above.",
        "None of the above.",
        "static",
        "Not a Note\nDate objects."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Note\nDate objects is 'static'."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers JavaScript Date Objects concepts and techniques. You'll learn how to use JavaScript Date Objects effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaScript Date Objects and how to apply it in your projects."
}