{
  "id": "e76cd002-746d-4494-bb29-d87b5328f3c1",
  "title": "JavaScript Array Search",
  "slug": "javascript-array-search",
  "metadata": {
    "description": "Learn about JavaScript Array Search with clear explanations and practical examples.",
    "keywords": [
      "array",
      "item",
      "javascript",
      "search",
      "value",
      "indexof",
      "element",
      "position",
      "first",
      "example"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnAJAX",
    "subcategory": "JS Array Search"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JavaScript Array Search",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Array Find and Search Methods\nArray indexOf()\nArray lastIndexOf()\nArray includes()\nSee Also:\nBasic Methods\nSort Methods\nIteration Methods\nArray find()\nArray findIndex()\nArray findLast()\nArray findLastIndex()\nJavaScript Array indexOf()\nThe\nindexOf()\nmethod searches an array for an element value and returns its position.\nNote:\nThe first item has position 0, the second item has position 1, and so on.\nExample\nSearch an array for the item \"Apple\":\nconst fruits = [\"Apple\", \"Orange\", \"Apple\", \"Mango\"];\nlet position = fruits.indexOf(\"Apple\") + 1;\n\nSyntax\narray\n.indexOf(\nitem\n,\nstart\n)\nitem\nRequired. The item to search for.\nstart\nOptional. Where to start the search. Negative values will start at the given position counting from the end, and search to the end.\nArray.indexOf()\nreturns -1 if the item is not found.\nIf the item is present more than once, it returns the position of the first \noccurrence.\nJavaScript Array lastIndexOf()\nArray.lastIndexOf()\nis the same as\nArray.indexOf()\n, but \nreturns the position of the last occurrence of the specified element.\nExample\nSearch an array for the item \"Apple\":\nconst fruits = [\"Apple\", \"Orange\", \"Apple\", \"Mango\"];\nlet position = fruits.lastIndexOf(\"Apple\") + 1;\n\nSyntax\narray\n.lastIndexOf(\nitem\n,\nstart\n)\nitem\nRequired. The item to search for\nstart\nOptional. Where to start the search. Negative values will start at the given position counting from the end, and search to the beginning\nJavaScript Array includes()\nECMAScript 2016 introduced\nArray.includes()\nto arrays.\nThis allows us to check if an element is present in an array (including NaN, unlike indexOf).\nExample\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\nfruits.includes(\"Mango\"); // is true\n\nSyntax\narray\n.includes(\nsearch-item\n)\nArray.includes() allows to check for NaN values. Unlike Array.indexOf().\nBrowser Support\nincludes()\nis an\nECMAScript 2016\nfeature.\nES 2016 is fully supported in all modern browsers since March 2017:\nChrome 52\nEdge 15\nFirefox 52\nSafari 10.1\nOpera 39\nJul 2016\nApr 2017\nMar 2017\nMay 2017\nAug 2016\nincludes()\nis not supported in Internet Explorer.\nJavaScript Array find()\nThe\nfind()\nmethod returns the value of the first array element that passes a \ntest function.\nThis example finds (returns the value of) the first element that is larger \nthan 18:\nExample\nconst numbers = [4, 9, 16, 25, 29];\nlet first = \n  numbers.find(myFunction);\nfunction myFunction(value, index, array) {\nreturn \n  value > 18;\n}\n\nNote that the function takes 3 arguments:\nThe item value\nThe item index\nThe array itself\nBrowser Support\nfind()\nis an\nES6  feature\n(JavaScript 2015).\nES6 is fully supported in all modern browsers since June 2017:\nChrome 51\nEdge 15\nFirefox 54\nSafari 10\nOpera 38\nMay 2016\nApr 2017\nJun 2017\nSep 2016\nJun 2016\nfind()\nis not supported in Internet Explorer.\nJavaScript Array findIndex()\nThe\nfindIndex()\nmethod returns the index of the first array element that \npasses a test function.\nThis example finds the index of the first element that is larger than 18:\nExample\nconst numbers = [4, 9, 16, 25, 29];\nlet first = \n  numbers.findIndex(myFunction);\nfunction myFunction(value, index, array) {\nreturn \n  value > 18;\n}\n\nNote that the function takes 3 arguments:\nThe item value\nThe item index\nThe array itself\nBrowser Support\nfindIndex()\nis an\nES6  feature\n(JavaScript 2015).\nES6 is fully supported in all modern browsers since June 2017:\nChrome 51\nEdge 15\nFirefox 54\nSafari 10\nOpera 38\nMay 2016\nApr 2017\nJun 2017\nSep 2016\nJun 2016\nfindIndex()\nis not supported in Internet Explorer.\nJavaScript Array findLast() Method\nES2023 added the findLast() method that will start from the end of an array and return\nthe value of the first element that satisfies a condition.\nExample\nconst temp = [27, 28, 30, 40, 42, 35, 30];\nlet high = temp.findLast(x => x > 40);\n\nBrowser Support\nfindLast()\nis an ES2023 feature.\nIt is supported in all modern browsers since July 2023:\nChrome 110\nEdge 110\nFirefox 115\nSafari 16.4\nOpera 96\nFeb 2023\nFeb 2023\nJul 2023\nMar 2023\nMay 2023\nJavaScript Array findLastIndex() Method\nThe findLastIndex() method finds the index of the last element that satisfies a condition.\nExample\nconst temp = [27, 28, 30, 40, 42, 35, 30];\nlet pos = temp.findLastIndex(x => x > 40);\n\nBrowser Support\nfindLastIndex()\nis an ES2023 feature.\nIt is supported in all modern browsers since July 2023:\nChrome 110\nEdge 110\nFirefox 115\nSafari 16.4\nOpera 96\nFeb 2023\nFeb 2023\nJul 2023\nMar 2023\nMay 2023\nComplete Array Reference\nFor a complete Array reference, go to our:\nComplete JavaScript Array Reference\n.\nThe reference contains descriptions and examples of all Array \nproperties and methods.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "const fruits = [\"Apple\", \"Orange\", \"Apple\", \"Mango\"];\nlet position = fruits.indexOf(\"Apple\") + 1;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "const fruits = [\"Apple\", \"Orange\", \"Apple\", \"Mango\"];\nlet position = fruits.lastIndexOf(\"Apple\") + 1;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "const fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\nfruits.includes(\"Mango\"); // is true",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "const numbers = [4, 9, 16, 25, 29];\nlet first = \n  numbers.find(myFunction);\nfunction myFunction(value, index, array) {\nreturn \n  value > 18;\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "const numbers = [4, 9, 16, 25, 29];\nlet first = \n  numbers.findIndex(myFunction);\nfunction myFunction(value, index, array) {\nreturn \n  value > 18;\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "const temp = [27, 28, 30, 40, 42, 35, 30];\nlet high = temp.findLast(x => x > 40);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "const temp = [27, 28, 30, 40, 42, 35, 30];\nlet pos = temp.findLastIndex(x => x > 40);",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "const fruits = [\"Apple\", \"Orange\", \"Apple\", \"Mango\"];\nlet position = fruits.indexOf(\"Apple\") + 1;"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "const fruits = [\"Apple\", \"Orange\", \"Apple\", \"Mango\"];\nlet position = fruits.lastIndexOf(\"Apple\") + 1;"
    }
  ],
  "related_topics": [
    {
      "id": "b30b07ba-8bc8-4b1b-8727-de62854c4867",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "0bc766b2-0422-467d-8067-698a44fd347e",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "ca80cb49-a898-408c-8e73-d557c7a7e653",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is if the item?",
      "options": [
        "present more than once",
        "not found",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of if the item is 'not found'."
    },
    {
      "question": "What is If the item?",
      "options": [
        "present more than once",
        "None of the above.",
        "not found",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of If the item is 'present more than once'."
    }
  ],
  "summary": "This tutorial covers JavaScript Array Search concepts and techniques. You'll learn how to use JavaScript Array Search effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaScript Array Search and how to apply it in your projects."
}