{
  "id": "138cfbf1-4454-4761-b9c9-1c51ad24f86e",
  "title": "JSONHTML",
  "slug": "jsonhtml",
  "metadata": {
    "description": "Learn about JSONHTML with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "xmlhttp",
      "text",
      "option",
      "table",
      "json",
      "myobj",
      "html",
      "const",
      "dbparam",
      "value"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnAJAX",
    "subcategory": "JSON HTML"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JSON\nHTML",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "JSON can very easily be translated into JavaScript.\nJavaScript can be used to make HTML in your web pages.\nHTML Table\nMake an HTML table with data received as JSON:\nExample\nconst dbParam = JSON.stringify({table:\"customers\",limit:20});\nconst xmlhttp = new XMLHttpRequest();\nxmlhttp.onload = function() {\nmyObj = JSON.parse(this.responseText);\nlet text = \"<table border='1'>\"\nfor (let x in myObj) {\ntext += \"<tr><td>\" + myObj[x].name + \"</td></tr>\";\n}\ntext += \"</table>\"\ndocument.getElementById(\"demo\").innerHTML   = text;\n}\nxmlhttp.open(\"POST\", \"json_demo_html_table.php\");\nxmlhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\nxmlhttp.send(\"x=\" + dbParam);\n\nDynamic HTML Table\nMake the HTML table based on the value of a drop down menu:\nChoose an option:\nCustomers\nProducts\nSuppliers\nExample\n<select id=\"myselect\" onchange=\"change_myselect(this.value)\">\n<option value=\"\">Choose an option:</option>\n<option \nvalue=\"customers\">Customers</option>\n<option \nvalue=\"products\">Products</option>\n<option \nvalue=\"suppliers\">Suppliers</option>\n</select>\n<script>\nfunction change_myselect(sel) {\nconst dbParam = JSON.stringify({table:sel,limit:20});\nconst xmlhttp = new XMLHttpRequest();\nxmlhttp.onload = function() {\nconst myObj = JSON.parse(this.responseText);\nlet text = \"<table border='1'>\"\nfor (let x in myObj) {\ntext += \"<tr><td>\" + myObj[x].name + \"</td></tr>\";\n}\ntext += \"</table>\"\ndocument.getElementById(\"demo\").innerHTML = text;\n}\nxmlhttp.open(\"POST\", \"json_demo_html_table.php\");\nxmlhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\nxmlhttp.send(\"x=\" + dbParam);\n}\n</script>\n\nHTML Drop Down List\nMake an HTML drop down list with data received as JSON:\nExample\nconst dbParam = JSON.stringify({table:\"customers\",limit:20});\nconst xmlhttp = new XMLHttpRequest();\nxmlhttp.onload = function() {\nconst myObj = JSON.parse(this.responseText);\nlet text = \"<select>\"\nfor (let x in myObj) {\ntext += \"<option>\" + myObj[x].name + \"</option>\";\n}\ntext += \"</select>\"\ndocument.getElementById(\"demo\").innerHTML = text;\n}\n}\nxmlhttp.open(\"POST\", \"json_demo_html_table.php\", true);\nxmlhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\nxmlhttp.send(\"x=\" + dbParam);\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "const dbParam = JSON.stringify({table:\"customers\",limit:20});\nconst xmlhttp = new XMLHttpRequest();\nxmlhttp.onload = function() {\nmyObj = JSON.parse(this.responseText);\nlet text = \"<table border='1'>\"\nfor (let x in myObj) {\ntext += \"<tr><td>\" + myObj[x].name + \"</td></tr>\";\n}\ntext += \"</table>\"\ndocument.getElementById(\"demo\").innerHTML   = text;\n}\nxmlhttp.open(\"POST\", \"json_demo_html_table.php\");\nxmlhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\nxmlhttp.send(\"x=\" + dbParam);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<select id=\"myselect\" onchange=\"change_myselect(this.value)\">\n<option value=\"\">Choose an option:</option>\n<option \nvalue=\"customers\">Customers</option>\n<option \nvalue=\"products\">Products</option>\n<option \nvalue=\"suppliers\">Suppliers</option>\n</select>\n<script>\nfunction change_myselect(sel) {\nconst dbParam = JSON.stringify({table:sel,limit:20});\nconst xmlhttp = new XMLHttpRequest();\nxmlhttp.onload = function() {\nconst myObj = JSON.parse(this.responseText);\nlet text = \"<table border='1'>\"\nfor (let x in myObj) {\ntext += \"<tr><td>\" + myObj[x].name + \"</td></tr>\";\n}\ntext += \"</table>\"\ndocument.getElementById(\"demo\").innerHTML = text;\n}\nxmlhttp.open(\"POST\", \"json_demo_html_table.php\");\nxmlhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\nxmlhttp.send(\"x=\" + dbParam);\n}\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "const dbParam = JSON.stringify({table:\"customers\",limit:20});\nconst xmlhttp = new XMLHttpRequest();\nxmlhttp.onload = function() {\nconst myObj = JSON.parse(this.responseText);\nlet text = \"<select>\"\nfor (let x in myObj) {\ntext += \"<option>\" + myObj[x].name + \"</option>\";\n}\ntext += \"</select>\"\ndocument.getElementById(\"demo\").innerHTML = text;\n}\n}\nxmlhttp.open(\"POST\", \"json_demo_html_table.php\", true);\nxmlhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\nxmlhttp.send(\"x=\" + dbParam);",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "const dbParam = JSON.stringify({table:\"customers\",limit:20});\nconst xmlhttp = new XMLHttpRequest();\nxmlhttp.onload = function() {\nmyObj = JSON.parse(this.responseText);\nlet text = \"<table border='1'>\"\nfor (let x in myObj) {\ntext += \"<tr><td>\" + myObj[x].name + \"</td></tr>\";\n}\ntext += \"</table>\"\n# TODO: Complete this line\n}\nxmlhttp.open(\"POST\", \"json_demo_html_table.php\");\nxmlhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\nxmlhttp.send(\"x=\" + dbParam);",
      "solution": "const dbParam = JSON.stringify({table:\"customers\",limit:20});\nconst xmlhttp = new XMLHttpRequest();\nxmlhttp.onload = function() {\nmyObj = JSON.parse(this.responseText);\nlet text = \"<table border='1'>\"\nfor (let x in myObj) {\ntext += \"<tr><td>\" + myObj[x].name + \"</td></tr>\";\n}\ntext += \"</table>\"\ndocument.getElementById(\"demo\").innerHTML   = text;\n}\nxmlhttp.open(\"POST\", \"json_demo_html_table.php\");\nxmlhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\nxmlhttp.send(\"x=\" + dbParam);"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<select id=\"myselect\" onchange=\"change_myselect(this.value)\">\n<option value=\"\">Choose an option:</option>\n<option \nvalue=\"customers\">Customers</option>\n<option \nvalue=\"products\">Products</option>\n<option \nvalue=\"suppliers\">Suppliers</option>\n# TODO: Complete this line\n<script>\nfunction change_myselect(sel) {\nconst dbParam = JSON.stringify({table:sel,limit:20});\nconst xmlhttp = new XMLHttpRequest();\nxmlhttp.onload = function() {\nconst myObj = JSON.parse(this.responseText);\nlet text = \"<table border='1'>\"\nfor (let x in myObj) {\ntext += \"<tr><td>\" + myObj[x].name + \"</td></tr>\";\n}\ntext += \"</table>\"\ndocument.getElementById(\"demo\").innerHTML = text;\n}\nxmlhttp.open(\"POST\", \"json_demo_html_table.php\");\nxmlhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\nxmlhttp.send(\"x=\" + dbParam);\n}\n</script>",
      "solution": "<select id=\"myselect\" onchange=\"change_myselect(this.value)\">\n<option value=\"\">Choose an option:</option>\n<option \nvalue=\"customers\">Customers</option>\n<option \nvalue=\"products\">Products</option>\n<option \nvalue=\"suppliers\">Suppliers</option>\n</select>\n<script>\nfunction change_myselect(sel) {\nconst dbParam = JSON.stringify({table:sel,limit:20});\nconst xmlhttp = new XMLHttpRequest();\nxmlhttp.onload = function() {\nconst myObj = JSON.parse(this.responseText);\nlet text = \"<table border='1'>\"\nfor (let x in myObj) {\ntext += \"<tr><td>\" + myObj[x].name + \"</td></tr>\";\n}\ntext += \"</table>\"\ndocument.getElementById(\"demo\").innerHTML = text;\n}\nxmlhttp.open(\"POST\", \"json_demo_html_table.php\");\nxmlhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\nxmlhttp.send(\"x=\" + dbParam);\n}\n</script>"
    }
  ],
  "related_topics": [
    {
      "id": "7cecc0a4-da00-490c-be4b-76505b913dac",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "aad315bf-ce44-4f92-8fce-5ee6a1ed459d",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "23f58128-7bce-44a9-9c8e-07605950981e",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers JSONHTML concepts and techniques. You'll learn how to use JSONHTML effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JSONHTML and how to apply it in your projects."
}