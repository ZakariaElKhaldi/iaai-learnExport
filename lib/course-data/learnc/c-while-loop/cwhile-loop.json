{
  "id": "1288d7af-9394-49cd-850d-93a33ae8956e",
  "title": "C#While Loop",
  "slug": "cwhile-loop",
  "metadata": {
    "description": "Learn about C#While Loop with clear explanations and practical examples.",
    "keywords": [
      "loop",
      "condition",
      "code",
      "block",
      "loops",
      "long",
      "executed",
      "example",
      "true",
      "variable"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Csharp Basics"
    ],
    "estimated_time": 5,
    "category": "LearnC#",
    "subcategory": "C# While Loop"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "C#\nWhile Loop",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Loops\nLoops can execute a block of code as long as a specified condition is reached.\nLoops are handy because they save time, reduce errors, and they make code more readable.\nC# While Loop\nThe\nwhile\nloop loops through a block of code as long as a specified condition is\nTrue\n:\nSyntax\nwhile (\ncondition\n) \n{\n// code block to be executed\n}\nIn the example below, the code in the loop will run, over and over again, as long as \na variable (i) is less than 5:\nExample\nint i = 0;\nwhile (i < 5) \n{\n  Console.WriteLine(i);\n  i++;\n}\n\nNote:\nDo not forget to increase the variable used in the condition, otherwise \nthe loop will never end!\nThe Do/While Loop\nThe\ndo/while\nloop is a variant of the\nwhile\nloop. This loop will \nexecute the code block once, before checking if the condition is true, then it will\nrepeat the loop as long as the condition is true.\nSyntax\ndo \n{\n// code block to be executed\n}\nwhile (\ncondition\n);\nThe example below uses a\ndo/while\nloop. The loop will always be \nexecuted at least once, even if the condition is false, because the code block \nis executed before the condition is tested:\nExample\nint i = 0;\ndo \n{\n\u00a0\u00a0Console.WriteLine(i);\n\u00a0\u00a0i++;\n}\nwhile (i < 5);\n\nDo not forget to increase the variable used in the condition, otherwise \nthe loop will never end!\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "baf64a91-b74e-46a0-9dd4-e9337ae0029c",
      "title": "Csharp Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "4196119b-3a36-41f8-90ef-061dff498cec",
      "title": "Csharp Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "54950ec4-6e62-46d9-b082-0d5950975eeb",
      "title": "Csharp Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is While Loop\n\nLoops\nLoops can execute a block of code as long as a specified condition?",
      "options": [
        "handy because they save time",
        "None of the above.",
        "reached",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of While Loop\n\nLoops\nLoops can execute a block of code as long as a specified condition is 'reached'."
    },
    {
      "question": "What is Loops?",
      "options": [
        "handy because they save time",
        "reached",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of Loops is 'handy because they save time'."
    }
  ],
  "summary": "This tutorial covers C#While Loop concepts and techniques. You'll learn how to use C#While Loop effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of C#While Loop and how to apply it in your projects."
}