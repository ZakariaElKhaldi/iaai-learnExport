{
  "id": "401433c4-3404-4ed7-8a40-04d97c884a4f",
  "title": "CVariables",
  "slug": "cvariables",
  "metadata": {
    "description": "Learn about CVariables with clear explanations and practical examples.",
    "keywords": [
      "c",
      "variable",
      "value",
      "variables",
      "example",
      "mynum",
      "assign",
      "type",
      "output",
      "numbers",
      "characters"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnC#",
    "subcategory": "Create Variables"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "C\nVariables",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "C\nVariables\n\nVariables are containers for storing data values",
      "content": ", like numbers and \ncharacters.\nIn C, there are different\ntypes\nof variables (defined with different keywords), for example:\nint\n- stores integers (whole numbers), without decimals, such as\n123\nor\n-123\nfloat\n- stores floating point numbers, with decimals, such as\n19.99\nor\n-19.99\nchar\n- stores single characters, such as\n'a'\nor\n'B'\n. \n Characters are surrounded by\nsingle quotes\nDeclaring (Creating) Variables\nTo create a variable, specify the\ntype\nand assign it a\nvalue\n:",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Syntax\ntype\nvariableName",
      "content": "=\nvalue\n;\nWhere\ntype\nis one of C types (such as\nint\n), and\nvariableName\nis the name of the variable (such as\nx\nor\nmyName\n). The\nequal sign\nis used to assign a value to the variable.\nSo, to create a variable that should\nstore a number\n, look at the following example:\nExample\nCreate a variable called\nmyNum\nof type\nint\nand assign the value\n15\nto it:\nint myNum = 15;\nYou can also declare a variable without assigning the value, and assign the value later:\nExample\n// Declare a variable\nint myNum;\n// Assign a value to the variable\nmyNum = 15;\nOutput Variables\nYou learned from the\noutput chapter\nthat you can output values/print text with the\nprintf()\nfunction:\nExample\nprintf(\"Hello World!\");\n\nIn many other programming languages (like\nPython\n,\nJava\n, and\nC++\n), you would normally use a\nprint function\nto display the value of a variable. However, this is not possible in C:\nExample\nint myNum = 15;\nprintf(myNum);\u00a0 // Nothing happens\n\nTo output variables in C, you must get familiar with something called \"\nformat specifiers\n\", which you will learn about in the \n\n\u2605\n+1",
      "order": 3,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Syntax",
      "content": "",
      "order": 4,
      "code": "type\nvariableName\n=\nvalue\n;",
      "language": "java",
      "explanation": "Example of syntax"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "int myNum = 15;",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "// Declare a variable\nint myNum;\n// Assign a value to the variable\nmyNum = 15;",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "printf(\"Hello World!\");",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "int myNum = 15;\nprintf(myNum);\u00a0 // Nothing happens",
      "language": "java",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "type\n# TODO: Complete this line\n=\nvalue\n;",
      "solution": "type\nvariableName\n=\nvalue\n;"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your java code here",
      "solution": "int myNum = 15;"
    }
  ],
  "related_topics": [
    {
      "id": "69b70a46-5da0-47c7-854a-95a386ca19a1",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "51eb0580-43f0-4009-b9f4-2b4cd0bf1d37",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "759385a6-bdde-4583-9db3-36deae7564e6",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is C\nVariables\n\nVariables?",
      "options": [
        "different\ntypes\nof variables (defined with different keywords)",
        "None of the above.",
        "containers for storing data values",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of C\nVariables\n\nVariables is 'containers for storing data values'."
    },
    {
      "question": "What is there?",
      "options": [
        "containers for storing data values",
        "None of the above.",
        "different\ntypes\nof variables (defined with different keywords)",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of there is 'different\ntypes\nof variables (defined with different keywords)'."
    }
  ],
  "summary": "This tutorial covers CVariables concepts and techniques. You'll learn how to use CVariables effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of CVariables and how to apply it in your projects."
}