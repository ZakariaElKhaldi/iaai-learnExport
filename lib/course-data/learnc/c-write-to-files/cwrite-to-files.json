{
  "id": "a989abd9-aa27-4446-b426-2ca63149fdbf",
  "title": "CWrite To Files",
  "slug": "cwrite-to-files",
  "metadata": {
    "description": "Learn about CWrite To Files with clear explanations and practical examples.",
    "keywords": [
      "c",
      "file",
      "fptr",
      "content",
      "mode",
      "example",
      "write",
      "text",
      "open",
      "fprintf",
      "result"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnC#",
    "subcategory": "C Write To Files"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "C\nWrite To Files",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Write To a File\nLet's use the\nw\nmode from the \nchapter again, and write something to the file we just created.\nThe\nw\nmode means that the file is opened for\nwriting\n. To insert content to it, you can use the\nfprintf()\nfunction and add the pointer variable (\nfptr\nin our example) and some text:\nExample\nFILE *fptr;\n// Open a file in writing mode\nfptr = fopen(\"filename.txt\", \"w\");\n// Write some text to the file\nfprintf(fptr, \"Some text\");\n// Close the file\nfclose(fptr);\nAs a result, when we open the file on our computer, it looks like this:\nRun example \u00bb\nNote:\nIf you write to a file that already exists, the old content is deleted, and the new content is inserted. This is important to know, as you might accidentally erase \nexisting content.\nFor example:\nExample\nfprintf(fptr, \"Hello \n    World!\");\nAs a result, when we open the file on our computer, it says \"Hello World!\" \n  instead of \"Some text\":\nRun example \u00bb\nAppend Content To a File\nIf you want to add content to a file without deleting the old content, you can use the\na\nmode.\nThe\na\nmode appends content at the end of the file:\nExample\nFILE *fptr;\n// Open a file in append mode\nfptr = fopen(\"filename.txt\", \"a\");\n// Append some text to the file\nfprintf(fptr, \"\\nHi everybody!\");\n// Close the file\nfclose(fptr);\nAs a result, when we open the file on our computer, it looks like this:\nRun example \u00bb\nNote:\nJust like with the\nw\nmode; if the file does not exist, the\na\nmode will create a new file with the \"appended\" content.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "FILE *fptr;\n// Open a file in writing mode\nfptr = fopen(\"filename.txt\", \"w\");\n// Write some text to the file\nfprintf(fptr, \"Some text\");\n// Close the file\nfclose(fptr);",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "fprintf(fptr, \"Hello \n    World!\");",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "FILE *fptr;\n// Open a file in append mode\nfptr = fopen(\"filename.txt\", \"a\");\n// Append some text to the file\nfprintf(fptr, \"\\nHi everybody!\");\n// Close the file\nfclose(fptr);",
      "language": "java",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "FILE *fptr;\n// Open a file in writing mode\n# TODO: Complete this line\n// Write some text to the file\nfprintf(fptr, \"Some text\");\n// Close the file\nfclose(fptr);",
      "solution": "FILE *fptr;\n// Open a file in writing mode\nfptr = fopen(\"filename.txt\", \"w\");\n// Write some text to the file\nfprintf(fptr, \"Some text\");\n// Close the file\nfclose(fptr);"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your java code here",
      "solution": "fprintf(fptr, \"Hello \n    World!\");"
    }
  ],
  "related_topics": [
    {
      "id": "dc0c6a8d-d424-4a16-9469-ba3fbeacc84b",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "6aa45f10-6802-4365-afb1-32f7524805dd",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "3ec97384-f686-43e4-92dc-196f285ac5e7",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The\nw\nmode means that the file?",
      "options": [
        "opened for\nwriting",
        "None of the above.",
        "None of the above.",
        "deleted"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of The\nw\nmode means that the file is 'opened for\nwriting'."
    },
    {
      "question": "What is the old content?",
      "options": [
        "deleted",
        "None of the above.",
        "None of the above.",
        "opened for\nwriting"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of the old content is 'deleted'."
    }
  ],
  "summary": "This tutorial covers CWrite To Files concepts and techniques. You'll learn how to use CWrite To Files effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of CWrite To Files and how to apply it in your projects."
}