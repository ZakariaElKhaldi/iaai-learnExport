{
  "id": "ef7da769-8c5a-414b-85a2-c5ab43209d16",
  "title": "C#Switch",
  "slug": "cswitch",
  "metadata": {
    "description": "Learn about C#Switch with clear explanations and practical examples.",
    "keywords": [
      "break",
      "case",
      "console",
      "writeline",
      "switch",
      "code",
      "block",
      "default",
      "keyword",
      "expression"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Csharp Basics"
    ],
    "estimated_time": 5,
    "category": "LearnC#",
    "subcategory": "C# Switch"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "C#\nSwitch",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "C# Switch Statements\nUse the\nswitch\nstatement to select one of many code blocks to be executed.\nSyntax\nswitch(\nexpression\n) \n{\n\u00a0 case x:\n// code block\nbreak;\n\u00a0 case y:\n// code block\nbreak;\n\u00a0 default:\n// code block\nbreak;\n}\nThis is how it works:\nThe\nswitch\nexpression is evaluated once\nThe value of the expression is compared with the values of each\ncase\nIf there is a match, the associated block of code is executed\nThe\nbreak\nand\ndefault\nkeywords will be described later in this chapter\nThe example below uses the weekday number to calculate the weekday name:\nExample\nint day = 4;\nswitch (day) \n{\n\u00a0 case 1:\n\u00a0\u00a0\u00a0 Console.WriteLine(\"Monday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 2:\n\u00a0\u00a0\u00a0 Console.WriteLine(\"Tuesday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 3:\n\u00a0\u00a0\u00a0 Console.WriteLine(\"Wednesday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 4:\n\u00a0\u00a0\u00a0 Console.WriteLine(\"Thursday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 5:\n\u00a0\u00a0\u00a0 Console.WriteLine(\"Friday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 6:\n\u00a0\u00a0\u00a0 Console.WriteLine(\"Saturday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 7:\n\u00a0\u00a0\u00a0 Console.WriteLine(\"Sunday\");\n\u00a0\u00a0\u00a0 break;\n}\n// Outputs \"Thursday\" (day 4)\n\nThe break Keyword\nWhen C# reaches a\nbreak\nkeyword, it breaks out of the switch block.\nThis will stop the execution of more code and case testing inside \nthe block.\nWhen a match is found, and the job is done, it's time for a break. There is no need for more testing.\nA break can save a lot of execution time because it \"ignores\" the execution \nof all the rest of the code in the switch block.\nThe default Keyword\nThe\ndefault\nkeyword is optional and specifies some code to run if there is no \ncase match:\nExample\nint day = 4;\nswitch (day) \n{\n\u00a0 case 6:\n\u00a0\u00a0\u00a0 Console.WriteLine(\"Today is Saturday.\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 7:\n\u00a0\u00a0\u00a0 Console.WriteLine(\"Today is Sunday.\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 default:\n\u00a0\u00a0\u00a0 Console.WriteLine(\"Looking forward to the Weekend.\");\n\u00a0\u00a0\u00a0 break;\n}\n// Outputs \"Looking forward to the Weekend.\"\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "5f389b8e-3306-403c-8499-f473fa112ffb",
      "title": "Csharp Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "02c5b453-719b-469a-8974-f35ac0035716",
      "title": "Csharp Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "33364472-3dcc-482f-a5a8-4a0cbb6b1ed9",
      "title": "Csharp Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is This?",
      "options": [
        "found",
        "None of the above.",
        "None of the above.",
        "how it works:\nThe\nswitch\nexpression is evaluated once\nThe value of the expression is compared with the values of each\ncase\nIf there is a match"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of This is 'how it works:\nThe\nswitch\nexpression is evaluated once\nThe value of the expression is compared with the values of each\ncase\nIf there is a match'."
    },
    {
      "question": "What is When a match?",
      "options": [
        "None of the above.",
        "found",
        "how it works:\nThe\nswitch\nexpression is evaluated once\nThe value of the expression is compared with the values of each\ncase\nIf there is a match",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of When a match is 'found'."
    }
  ],
  "summary": "This tutorial covers C#Switch concepts and techniques. You'll learn how to use C#Switch effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of C#Switch and how to apply it in your projects."
}