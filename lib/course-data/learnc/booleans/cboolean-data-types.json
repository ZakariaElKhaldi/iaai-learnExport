{
  "id": "0568aea5-e628-4b2d-9b13-b58a2a4332ad",
  "title": "C++Boolean Data Types",
  "slug": "cboolean-data-types",
  "metadata": {
    "description": "Learn about C++Boolean Data Types with clear explanations and practical examples.",
    "keywords": [
      "cpp",
      "boolean",
      "true",
      "false",
      "bool",
      "data",
      "types",
      "values",
      "iscodingfun",
      "isfishtasty",
      "cout"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Cpp Basics"
    ],
    "estimated_time": 5,
    "category": "LearnC#",
    "subcategory": "Booleans"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "C++\nBoolean Data Types",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Boolean Types\nA boolean data type is declared with the\nbool\nkeyword and can only take the values\ntrue\nor\nfalse\n.\nWhen the value is returned,\ntrue\n=\n1\nand\nfalse\n=\n0\n.\nExample\nbool isCodingFun = true;\nbool isFishTasty = false;\ncout << isCodingFun;\u00a0 \n  // Outputs 1 (true)\ncout << isFishTasty;\u00a0 // Outputs 0 (false)\n\nBoolean values are mostly used for conditional testing, which you will learn more about in a later chapter.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "bool isCodingFun = true;\nbool isFishTasty = false;\ncout << isCodingFun;\u00a0 \n  // Outputs 1 (true)\ncout << isFishTasty;\u00a0 // Outputs 0 (false)",
      "language": "java",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "bool isCodingFun = true;\n# TODO: Complete this line\ncout << isCodingFun;\u00a0 \n  // Outputs 1 (true)\ncout << isFishTasty;\u00a0 // Outputs 0 (false)",
      "solution": "bool isCodingFun = true;\nbool isFishTasty = false;\ncout << isCodingFun;\u00a0 \n  // Outputs 1 (true)\ncout << isFishTasty;\u00a0 // Outputs 0 (false)"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "143bea9d-999f-4a11-a63a-686f957ba03f",
      "title": "Cpp Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "83e12e0a-c171-4c4f-a47b-219e94190eec",
      "title": "Cpp Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "641e9fe9-ebc4-46c4-80d8-cb781445d94b",
      "title": "Cpp Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Boolean Data Types\n\nBoolean Types\nA boolean data type?",
      "options": [
        "declared with the\nbool\nkeyword and can only take the values\ntrue\nor\nfalse",
        "returned",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of Boolean Data Types\n\nBoolean Types\nA boolean data type is 'declared with the\nbool\nkeyword and can only take the values\ntrue\nor\nfalse'."
    },
    {
      "question": "What is When the value?",
      "options": [
        "None of the above.",
        "declared with the\nbool\nkeyword and can only take the values\ntrue\nor\nfalse",
        "returned",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of When the value is 'returned'."
    }
  ],
  "summary": "This tutorial covers C++Boolean Data Types concepts and techniques. You'll learn how to use C++Boolean Data Types effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of C++Boolean Data Types and how to apply it in your projects."
}