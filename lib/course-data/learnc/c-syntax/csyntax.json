{
  "id": "da4c0679-5958-4be2-9624-e6480a192747",
  "title": "C#Syntax",
  "slug": "csyntax",
  "metadata": {
    "description": "Learn about C#Syntax with clear explanations and practical examples.",
    "keywords": [
      "line",
      "system",
      "class",
      "program",
      "using",
      "namespace",
      "code",
      "hello",
      "world",
      "example"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "Csharp Basics"
    ],
    "estimated_time": 5,
    "category": "LearnC#",
    "subcategory": "C# Syntax"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "C#\nSyntax",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "C# Syntax\nIn the \nProgram.cs\nusing System;\n\nnamespace HelloWorld\n{\n  class Program\n  {\n    static void Main(string[] args)\n    {\n      Console.WriteLine(\"Hello World!\");    \n    }\n  }\n}\nResult:\nHello World!\n\nExample explained\nLine 1:\nusing System\nmeans \nthat we can use classes from the\nSystem\nnamespace.\nLine 2:\nA blank line. C# ignores white space. However, multiple lines makes the code more readable.\nLine 3:\nnamespace\nis used to organize your code, and it is a container for classes and other namespaces.\nLine 4:\nThe curly braces\n{}\nmarks the beginning and the end of a block of code.\nLine 5:\nclass\nis a \ncontainer for data and methods, which brings functionality to your program. Every line of code that runs in C# must be inside a class. In our example, we named the class Program.\nDon't worry if you don't understand how\nusing \nSystem\n,\nnamespace\nand\nclass\nworks. Just think of it as something that (almost) always appears in your program, and that you will learn more about them in a later chapter.\nLine 7:\nAnother thing that always appear in a C# program is \nthe\nMain\nmethod. Any code inside its curly brackets\n{}\nwill be executed.\nYou don't have to understand the keywords before and after Main. You will get to \nknow them bit by bit while reading this tutorial.\nLine 9:\nConsole\nis a class of the\nSystem\nnamespace, which \nhas a\nWriteLine()\nmethod that is used to output/print text. In our example, it will output \"Hello World!\".\nIf you omit the\nusing System\nline, you would have to write\nSystem.Console.WriteLine()\nto print/output text.\nNote:\nEvery C# statement ends with a semicolon\n;\n.\nNote:\nC# is case-sensitive; \"MyClass\" and \"myclass\" \nhave \ndifferent meaning.\nNote:\nUnlike\nJava\n, the name of the C# file does not have to match the class name, but they often do (for better organization).\nWhen saving the file, save it using a proper name and add \".cs\" to the end of \nthe filename. To run the example above on your computer, make sure that C# is \nproperly installed: Go to the\nGet Started Chapter\nfor how to install C#. The output should be:\nHello World!\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "03327da6-4cc5-45f3-a965-4889e8d04e78",
      "title": "Csharp Functions and Methods",
      "relationship": "next_topic"
    },
    {
      "id": "1314d799-d066-4a9c-ac7e-9a0b3c99e413",
      "title": "Csharp Data Structures",
      "relationship": "suggested_next"
    }
  ],
  "quiz": [
    {
      "question": "What is using System?",
      "options": [
        "None of the above.",
        "None of the above.",
        "used to organize your code",
        "that we can use classes from the\nSystem\nnamespace"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of using System is 'that we can use classes from the\nSystem\nnamespace'."
    },
    {
      "question": "What is namespace?",
      "options": [
        "None of the above.",
        "used to organize your code",
        "None of the above.",
        "that we can use classes from the\nSystem\nnamespace"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of namespace is 'used to organize your code'."
    }
  ],
  "summary": "This tutorial covers C#Syntax concepts and techniques. You'll learn how to use C#Syntax effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of C#Syntax and how to apply it in your projects."
}