{
  "id": "879f0b89-b205-4fbc-aab3-dc094e19984f",
  "title": "C#Variables",
  "slug": "cvariables",
  "metadata": {
    "description": "Learn about C#Variables with clear explanations and practical examples.",
    "keywords": [
      "mynum",
      "variable",
      "example",
      "value",
      "variables",
      "string",
      "type",
      "assign",
      "values",
      "stores"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Csharp Basics"
    ],
    "estimated_time": 5,
    "category": "LearnC#",
    "subcategory": "Variables"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Section 1",
      "content": "C#\nVariables\n\nC# Variables\nVariables are containers for storing data values.\nIn C#, there are different\ntypes\nof variables (defined with different keywords), for example:\nint\n- stores integers (whole numbers), without decimals, such as 123 or -123\ndouble\n- stores floating point numbers, with decimals, such as 19.99 or -19.99\nchar\n- stores single characters, such as 'a' or 'B'.",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Char values are surrounded by single quotes\nstring",
      "content": "- stores text, such as \"Hello World\".",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "String values are surrounded by double quotes\nbool",
      "content": "- stores values with two states: \n true or false\nDeclaring (Creating) Variables\nTo create a variable, specify the\ntype\nand assign it a\nvalue\n:\nSyntax\ntype variableName = value;\nWhere\ntype\nis a C# type (such as\nint\nor\nstring\n), and\nvariableName\nis the name of the variable (such as\nx\nor\nname\n). The\nequal sign\nis used to assign values to the variable.\nTo create a variable that should store text, look at the following example:\nExample\nCreate a variable called\nname\nof type\nstring\nand assign it the value \"\nJohn\n\":\nstring name = \"John\";\nConsole.WriteLine(name);\n\nTo create a variable that should store a number, look at the following example:\nExample\nCreate a variable called\nmyNum\nof type\nint\nand assign it the value\n15\n:\nint myNum = 15;\nConsole.WriteLine(myNum);\n\nYou can also declare a variable without assigning the value, and assign the value later:\nExample\nint myNum;\nmyNum = 15;\nConsole.WriteLine(myNum);\n\nNote that if you assign a new value to an existing variable, it will overwrite the \nExample\nChange the value of\nmyNum\nto 20:\nint myNum = 15;\nmyNum = 20; // myNum is now 20\nConsole.WriteLine(myNum);\n\nOther Types\nA demonstration of how to declare variables of other types:\nExample\nint myNum = 5;\ndouble myDoubleNum = 5.99D;\nchar myLetter = 'D';\nbool myBool = true;\nstring myText = \"Hello\";\nYou will learn more about\ndata types\nin a later chapter.\n\n\u2605\n+1",
      "order": 3,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "dff19d5f-9b42-40b2-b4a9-629bda710b62",
      "title": "Csharp Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "d46d910d-7dd1-4106-9b51-2ff072afc200",
      "title": "Csharp Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "c5b09317-d2be-422a-8906-fa9a6a5d2282",
      "title": "Csharp Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Variables\nVariables?",
      "options": [
        "None of the above.",
        "containers for storing data values",
        "None of the above.",
        "different\ntypes\nof variables (defined with different keywords)"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Variables\nVariables is 'containers for storing data values'."
    },
    {
      "question": "What is there?",
      "options": [
        "None of the above.",
        "different\ntypes\nof variables (defined with different keywords)",
        "containers for storing data values",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of there is 'different\ntypes\nof variables (defined with different keywords)'."
    }
  ],
  "summary": "This tutorial covers C#Variables concepts and techniques. You'll learn how to use C#Variables effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of C#Variables and how to apply it in your projects."
}