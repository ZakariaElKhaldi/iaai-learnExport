{
  "id": "743607e3-36d7-4d5f-a263-1ef6f3b8451a",
  "title": "C++Inheritance Access",
  "slug": "cinheritance-access",
  "metadata": {
    "description": "Learn about C++Inheritance Access with clear explanations and practical examples.",
    "keywords": [
      "cpp",
      "class",
      "myobj",
      "access",
      "salary",
      "bonus",
      "specifiers",
      "public",
      "protected",
      "members",
      "private"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Cpp Basics"
    ],
    "estimated_time": 5,
    "category": "LearnC#",
    "subcategory": "Access Specifiers"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "C++\nInheritance Access",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Access Specifiers\nYou learned from the\nAccess Specifiers\nchapter that there are three \nspecifiers available in C++. Until now, we have only used\npublic\n(members of a \nclass are accessible from outside the class) and\nprivate\n(members can only be \naccessed within the class). The third specifier,\nprotected\n, is similar to\nprivate\n, but it can also be accessed in the\ninherited\nclass:\nExample\n// Base class\nclass \n    Employee {\nprotected: // Protected access specifier\nint salary;\n};\n// Derived class\nclass Programmer: public Employee {\npublic:\nint bonus;\nvoid \n    setSalary(int s) {\nsalary = s;\n}\nint getSalary() {\nreturn salary;\n}\n};\nint main() {\nProgrammer myObj;\nmyObj.setSalary(50000);\nmyObj.bonus = \n    15000;\ncout << \n    \"Salary: \" << myObj.getSalary() << \"\\n\";\ncout << \"Bonus: \" << \n    myObj.bonus << \"\\n\";\nreturn 0;\n}\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "// Base class\nclass \n    Employee {\nprotected: // Protected access specifier\nint salary;\n};\n// Derived class\nclass Programmer: public Employee {\npublic:\nint bonus;\nvoid \n    setSalary(int s) {\nsalary = s;\n}\nint getSalary() {\nreturn salary;\n}\n};\nint main() {\nProgrammer myObj;\nmyObj.setSalary(50000);\nmyObj.bonus = \n    15000;\ncout << \n    \"Salary: \" << myObj.getSalary() << \"\\n\";\ncout << \"Bonus: \" << \n    myObj.bonus << \"\\n\";\nreturn 0;\n}",
      "language": "java",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "// Base class\nclass \n    Employee {\nprotected: // Protected access specifier\n# TODO: Complete this line\n};\n// Derived class\nclass Programmer: public Employee {\npublic:\nint bonus;\nvoid \n    setSalary(int s) {\nsalary = s;\n}\nint getSalary() {\nreturn salary;\n}\n};\nint main() {\nProgrammer myObj;\nmyObj.setSalary(50000);\nmyObj.bonus = \n    15000;\ncout << \n    \"Salary: \" << myObj.getSalary() << \"\\n\";\ncout << \"Bonus: \" << \n    myObj.bonus << \"\\n\";\nreturn 0;\n}",
      "solution": "// Base class\nclass \n    Employee {\nprotected: // Protected access specifier\nint salary;\n};\n// Derived class\nclass Programmer: public Employee {\npublic:\nint bonus;\nvoid \n    setSalary(int s) {\nsalary = s;\n}\nint getSalary() {\nreturn salary;\n}\n};\nint main() {\nProgrammer myObj;\nmyObj.setSalary(50000);\nmyObj.bonus = \n    15000;\ncout << \n    \"Salary: \" << myObj.getSalary() << \"\\n\";\ncout << \"Bonus: \" << \n    myObj.bonus << \"\\n\";\nreturn 0;\n}"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "07ee63e1-fe8d-4b46-9c24-b12fd87da730",
      "title": "Cpp Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "3fca3ec5-538b-4af0-aae9-6347c83a77a7",
      "title": "Cpp Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "3a01842a-d03e-4a58-bb6e-810cad835338",
      "title": "Cpp Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Inheritance Access\n\nAccess Specifiers\nYou learned from the\nAccess Specifiers\nchapter that there?",
      "options": [
        "None of the above.",
        "accessible from outside the class) and\nprivate\n(members can only be \naccessed within the class)",
        "None of the above.",
        "three \nspecifiers available in C++"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Inheritance Access\n\nAccess Specifiers\nYou learned from the\nAccess Specifiers\nchapter that there is 'three \nspecifiers available in C++'."
    },
    {
      "question": "What is members of a \nclass?",
      "options": [
        "None of the above.",
        "None of the above.",
        "three \nspecifiers available in C++",
        "accessible from outside the class) and\nprivate\n(members can only be \naccessed within the class)"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of members of a \nclass is 'accessible from outside the class) and\nprivate\n(members can only be \naccessed within the class)'."
    }
  ],
  "summary": "This tutorial covers C++Inheritance Access concepts and techniques. You'll learn how to use C++Inheritance Access effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of C++Inheritance Access and how to apply it in your projects."
}