{
  "id": "03338b53-0396-40ff-b294-028fa4308737",
  "title": "C++Nested Loops",
  "slug": "cnested-loops",
  "metadata": {
    "description": "Learn about C++Nested Loops with clear explanations and practical examples.",
    "keywords": [
      "cpp",
      "loop",
      "nested",
      "inner",
      "outer",
      "loops",
      "cout",
      "executes",
      "times",
      "also",
      "possible"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Cpp Basics"
    ],
    "estimated_time": 5,
    "category": "LearnC#",
    "subcategory": "Nested Loops"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "C++\nNested Loops",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Nested Loops\nIt is also possible to place a loop inside another loop. This is called a\nnested loop\n.\nThe \"inner loop\" will be executed one time for each iteration of the \"outer loop\":\nExample\n// Outer loop\nfor (int i = 1; i <= 2; ++i) {\ncout << \"Outer: \" << i << \"\\n\"; // Executes 2 times\n// Inner \n  loop\nfor (int j = 1; j <= 3; ++j) {\ncout << \" \n  Inner: \" << j << \"\\n\"; // Executes 6 times (2 * 3)\n}\n}\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "// Outer loop\nfor (int i = 1; i <= 2; ++i) {\ncout << \"Outer: \" << i << \"\\n\"; // Executes 2 times\n// Inner \n  loop\nfor (int j = 1; j <= 3; ++j) {\ncout << \" \n  Inner: \" << j << \"\\n\"; // Executes 6 times (2 * 3)\n}\n}",
      "language": "java",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "// Outer loop\nfor (int i = 1; i <= 2; ++i) {\ncout << \"Outer: \" << i << \"\\n\"; // Executes 2 times\n// Inner \n  loop\nfor (int j = 1; j <= 3; ++j) {\ncout << \" \n# TODO: Complete this line\n}\n}",
      "solution": "// Outer loop\nfor (int i = 1; i <= 2; ++i) {\ncout << \"Outer: \" << i << \"\\n\"; // Executes 2 times\n// Inner \n  loop\nfor (int j = 1; j <= 3; ++j) {\ncout << \" \n  Inner: \" << j << \"\\n\"; // Executes 6 times (2 * 3)\n}\n}"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "631ebf4a-f50d-4925-9f8e-63f6bffc1008",
      "title": "Cpp Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "25911a81-c332-4989-abdf-97076b7a04e0",
      "title": "Cpp Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "7ab03712-dc90-40a2-a26e-8a63ecd3c6cc",
      "title": "Cpp Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Nested Loops\n\nNested Loops\nIt?",
      "options": [
        "also possible to place a loop inside another loop",
        "None of the above.",
        "None of the above.",
        "called a\nnested loop"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of Nested Loops\n\nNested Loops\nIt is 'also possible to place a loop inside another loop'."
    },
    {
      "question": "What is This?",
      "options": [
        "called a\nnested loop",
        "None of the above.",
        "also possible to place a loop inside another loop",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of This is 'called a\nnested loop'."
    }
  ],
  "summary": "This tutorial covers C++Nested Loops concepts and techniques. You'll learn how to use C++Nested Loops effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of C++Nested Loops and how to apply it in your projects."
}