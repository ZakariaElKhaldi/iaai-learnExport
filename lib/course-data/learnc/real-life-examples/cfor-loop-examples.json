{
  "id": "8fe965fd-c6ec-4ced-bd46-3abf7ad96662",
  "title": "C++For Loop Examples",
  "slug": "cfor-loop-examples",
  "metadata": {
    "description": "Learn about C++For Loop Examples with clear explanations and practical examples.",
    "keywords": [
      "cpp",
      "example",
      "cout",
      "number",
      "print",
      "create",
      "program",
      "loop",
      "numbers",
      "multiplication",
      "table"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Cpp Basics"
    ],
    "estimated_time": 5,
    "category": "LearnC#",
    "subcategory": "Real-Life Examples"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "C++\nFor Loop Examples",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Real Life Example\nTo demonstrate a practical example of the for loop, let's create a program that counts to 100 by tens:\nExample\nfor (int i = 0; i <= 100; i += 10) {\ncout << i << \"\\n\";\n}\n\nIn this example, we create a program that only print even numbers between 0 and 10 (inclusive):\nExample\nfor (int i = 0; i <= 10; i = i + 2) {\ncout << i << \"\\n\";\n}\n\nHere we only print odd numbers:\nExample\nfor (int i = 1; i <= 10; i = i + 2) {\ncout << i << \"\\n\";\n}\n\nIn this example we print the powers of 2 up to 512:\nExample\nfor (int i = 2; i <= 512; i *= 2) {\ncout << i << \"\\n\";\n}\n\nAnd in this example, we create a program that prints the multiplication table for a specified number:\nExample\nint number = 2;\nint i;\n// Print the multiplication table for the \n  number 2\nfor (i = 1; i <= 10; i++) {\ncout << number << \" x \" << i \n  << \" = \" << number * i << \"\\n\";\n}\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "for (int i = 0; i <= 100; i += 10) {\ncout << i << \"\\n\";\n}",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "for (int i = 0; i <= 10; i = i + 2) {\ncout << i << \"\\n\";\n}",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "for (int i = 1; i <= 10; i = i + 2) {\ncout << i << \"\\n\";\n}",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "for (int i = 2; i <= 512; i *= 2) {\ncout << i << \"\\n\";\n}",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "int number = 2;\nint i;\n// Print the multiplication table for the \n  number 2\nfor (i = 1; i <= 10; i++) {\ncout << number << \" x \" << i \n  << \" = \" << number * i << \"\\n\";\n}",
      "language": "java",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "for (int i = 0; i <= 100; i += 10) {\n# TODO: Complete this line\n}",
      "solution": "for (int i = 0; i <= 100; i += 10) {\ncout << i << \"\\n\";\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "for (int i = 0; i <= 10; i = i + 2) {\ncout << i << \"\\n\";\n# TODO: Complete this line",
      "solution": "for (int i = 0; i <= 10; i = i + 2) {\ncout << i << \"\\n\";\n}"
    }
  ],
  "related_topics": [
    {
      "id": "df74dfca-4fdb-42c8-9723-22d231dedbb9",
      "title": "Cpp Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "9dc17ce4-280f-450a-aad4-22efa25cd1d7",
      "title": "Cpp Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "46d3d352-12a4-4833-b288-13fc17f68bb1",
      "title": "Cpp Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this cpp feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this cpp feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers C++For Loop Examples concepts and techniques. You'll learn how to use C++For Loop Examples effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of C++For Loop Examples and how to apply it in your projects."
}