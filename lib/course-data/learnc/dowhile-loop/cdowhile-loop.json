{
  "id": "a4612571-5dc8-465d-bdd8-9bdec4d66c5b",
  "title": "C++Do/While Loop",
  "slug": "cdowhile-loop",
  "metadata": {
    "description": "Learn about C++Do/While Loop with clear explanations and practical examples.",
    "keywords": [
      "cpp",
      "loop",
      "condition",
      "code",
      "block",
      "executed",
      "true",
      "example",
      "variant",
      "execute",
      "checking"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Cpp Basics"
    ],
    "estimated_time": 5,
    "category": "LearnC#",
    "subcategory": "Do/While Loop"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "C++\nDo/While Loop",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The Do/While Loop\nThe\ndo/while\nloop is a variant of the\nwhile\nloop. This loop will \nexecute the code block once, before checking if the condition is true, then it will\nrepeat the loop as long as the condition is true.\nSyntax\ndo {\n// code block to be executed\n}\nwhile (\ncondition\n);\nThe example below uses a\ndo/while\nloop. The loop will always be \nexecuted at least once, even if the condition is false, because the code block \nis executed before the condition is tested:\nExample\nint i = 0;\ndo {\ncout << i << \"\\n\";\ni++;\n}\nwhile (i < 5);\n\nDo not forget to increase the variable used in the condition, otherwise \nthe loop will never end!\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Syntax",
      "content": "",
      "order": 3,
      "code": "do {\n// code block to be executed\n}\nwhile (\ncondition\n);",
      "language": "java",
      "explanation": "Example of syntax"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "int i = 0;\ndo {\ncout << i << \"\\n\";\ni++;\n}\nwhile (i < 5);",
      "language": "java",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "do {\n# TODO: Complete this line\n}\nwhile (\ncondition\n);",
      "solution": "do {\n// code block to be executed\n}\nwhile (\ncondition\n);"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "int i = 0;\ndo {\n# TODO: Complete this line\ni++;\n}\nwhile (i < 5);",
      "solution": "int i = 0;\ndo {\ncout << i << \"\\n\";\ni++;\n}\nwhile (i < 5);"
    }
  ],
  "related_topics": [
    {
      "id": "7ae9c178-3100-4d04-9cf3-8fd7d57bb6c8",
      "title": "Cpp Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "d3c40969-3775-49c5-aa9e-67566bb450c4",
      "title": "Cpp Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "c5bfd8a9-6f93-4624-a996-79fc32108168",
      "title": "Cpp Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is while\nloop?",
      "options": [
        "true",
        "None of the above.",
        "None of the above.",
        "a variant of the\nwhile\nloop"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of while\nloop is 'a variant of the\nwhile\nloop'."
    },
    {
      "question": "What is before checking if the condition?",
      "options": [
        "true",
        "a variant of the\nwhile\nloop",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of before checking if the condition is 'true'."
    }
  ],
  "summary": "This tutorial covers C++Do/While Loop concepts and techniques. You'll learn how to use C++Do/While Loop effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of C++Do/While Loop and how to apply it in your projects."
}