{
  "id": "63dd0635-6d54-4afd-9850-4774361ec41b",
  "title": "C++Functions - Pass By Reference",
  "slug": "cfunctions-pass-by-reference",
  "metadata": {
    "description": "Learn about C++Functions - Pass By Reference with clear explanations and practical examples.",
    "keywords": [
      "cpp",
      "pass",
      "reference",
      "firstnum",
      "secondnum",
      "cout",
      "function",
      "string",
      "greeting",
      "change",
      "example"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Cpp Basics"
    ],
    "estimated_time": 5,
    "category": "LearnC#",
    "subcategory": "Pass By Reference"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "C++\nFunctions - Pass By Reference",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Pass By Reference\nIn the examples from the \na function.\nYou can also pass a\nreference\nto \nthe function.\nThis can be useful when you need to change the value of the arguments:\nExample\nPass integers by reference:\nvoid swapNums(int &x, int &y) {\nint z = x;\nx = y;\ny = z;\n}\nint main() {\nint firstNum = 10;\nint secondNum = 20;\ncout << \n    \"Before swap: \" << \"\\n\";\ncout << firstNum << secondNum << \"\\n\";\n// Call the function, which will change the values of firstNum \n    and secondNum\nswapNums(firstNum, secondNum);\ncout << \"After swap: \n    \" << \"\\n\";\ncout << firstNum << secondNum << \"\\n\";\nreturn 0;\n}\n\nExample\nPass a string by reference:\nvoid modifyStr(string &str) {\nstr += \" World!\";\n}\nint main() {\nstring greeting = \"Hello\";\nmodifyStr(greeting);\ncout << \n    greeting;\nreturn 0;\n}\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "void swapNums(int &x, int &y) {\nint z = x;\nx = y;\ny = z;\n}\nint main() {\nint firstNum = 10;\nint secondNum = 20;\ncout << \n    \"Before swap: \" << \"\\n\";\ncout << firstNum << secondNum << \"\\n\";\n// Call the function, which will change the values of firstNum \n    and secondNum\nswapNums(firstNum, secondNum);\ncout << \"After swap: \n    \" << \"\\n\";\ncout << firstNum << secondNum << \"\\n\";\nreturn 0;\n}",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "void modifyStr(string &str) {\nstr += \" World!\";\n}\nint main() {\nstring greeting = \"Hello\";\nmodifyStr(greeting);\ncout << \n    greeting;\nreturn 0;\n}",
      "language": "java",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "void swapNums(int &x, int &y) {\nint z = x;\nx = y;\ny = z;\n}\nint main() {\nint firstNum = 10;\nint secondNum = 20;\ncout << \n    \"Before swap: \" << \"\\n\";\ncout << firstNum << secondNum << \"\\n\";\n// Call the function, which will change the values of firstNum \n    and secondNum\nswapNums(firstNum, secondNum);\ncout << \"After swap: \n# TODO: Complete this line\ncout << firstNum << secondNum << \"\\n\";\nreturn 0;\n}",
      "solution": "void swapNums(int &x, int &y) {\nint z = x;\nx = y;\ny = z;\n}\nint main() {\nint firstNum = 10;\nint secondNum = 20;\ncout << \n    \"Before swap: \" << \"\\n\";\ncout << firstNum << secondNum << \"\\n\";\n// Call the function, which will change the values of firstNum \n    and secondNum\nswapNums(firstNum, secondNum);\ncout << \"After swap: \n    \" << \"\\n\";\ncout << firstNum << secondNum << \"\\n\";\nreturn 0;\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "void modifyStr(string &str) {\nstr += \" World!\";\n# TODO: Complete this line\nint main() {\nstring greeting = \"Hello\";\nmodifyStr(greeting);\ncout << \n    greeting;\nreturn 0;\n}",
      "solution": "void modifyStr(string &str) {\nstr += \" World!\";\n}\nint main() {\nstring greeting = \"Hello\";\nmodifyStr(greeting);\ncout << \n    greeting;\nreturn 0;\n}"
    }
  ],
  "related_topics": [
    {
      "id": "e1f6152e-dbae-428c-9ef8-8f6306a21ec0",
      "title": "Advanced Cpp Techniques",
      "relationship": "next_topic"
    },
    {
      "id": "d8e8877b-6c47-47b8-b98a-f7ffa82f1947",
      "title": "Cpp Project: Build a Real-World Application",
      "relationship": "suggested_next"
    },
    {
      "id": "75c5049b-dcdc-4315-9c4a-17eb28ca2c93",
      "title": "Cpp Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this cpp feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this cpp feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers C++Functions - Pass By Reference concepts and techniques. You'll learn how to use C++Functions - Pass By Reference effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of C++Functions - Pass By Reference and how to apply it in your projects."
}