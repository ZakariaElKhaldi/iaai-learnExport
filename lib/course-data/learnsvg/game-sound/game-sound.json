{
  "id": "b8ef14cf-0404-4cd4-81a7-86a9c9efd039",
  "title": "Game Sound",
  "slug": "game-sound",
  "metadata": {
    "description": "Learn about Game Sound with clear explanations and practical examples.",
    "keywords": [
      "sound",
      "function",
      "play",
      "mygamepiece",
      "mysound",
      "myobstacles",
      "start",
      "game",
      "music",
      "object"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnSVG",
    "subcategory": "Game Sound"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Game Sound",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Turn up the volume. Do you hear a \"dunk\" when the red square hits an obstacle?\nUP\nLEFT\nRIGHT\nDOWN\nHow to Add Sounds?\nUse the HTML5 <audio> element to add sound and music to your games.\nIn our examples, we create a new object constructor to handle sound objects:\nExample\nfunction sound(src) {\nthis.sound = document.createElement(\"audio\");\nthis.sound.src = src;\nthis.sound.setAttribute(\"preload\", \"auto\");\nthis.sound.setAttribute(\"controls\", \"none\");\nthis.sound.style.display = \"none\";\ndocument.body.appendChild(this.sound);\nthis.play = function(){\nthis.sound.play();\n}\nthis.stop = function(){\nthis.sound.pause();\n}\n}\nTo create a new sound object use the\nsound\nconstructor, and when \nthe red square hits an obstacle, play the sound:\nExample\nvar myGamePiece;\nvar myObstacles = [];\nvar mySound;\nfunction startGame() {\nmyGamePiece = new component(30, 30, \"red\", 10, 120);\nmySound = new sound(\"bounce.mp3\");\nmyGameArea.start();\n}\nfunction updateGameArea() {\nvar x, height, gap, minHeight, maxHeight, minGap, maxGap;\nfor (i = 0; i < myObstacles.length; i += 1) {\nif (myGamePiece.crashWith(myObstacles[i])) {\nmySound.play();\nmyGameArea.stop();\nreturn;\n}\n}\n...\n}\n\nBackground Music\nTo add background music to your game, add a new sound object, and start \nplaying when you start the game:\nExample\nvar myGamePiece;\nvar myObstacles = [];\nvar mySound;\nvar myMusic;\nfunction startGame() {\nmyGamePiece = new component(30, 30, \"red\", 10, 120);\nmySound = new sound(\"bounce.mp3\");\nmyMusic = new sound(\"gametheme.mp3\");\nmyMusic.play();\nmyGameArea.start();\n}\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "function sound(src) {\nthis.sound = document.createElement(\"audio\");\nthis.sound.src = src;\nthis.sound.setAttribute(\"preload\", \"auto\");\nthis.sound.setAttribute(\"controls\", \"none\");\nthis.sound.style.display = \"none\";\ndocument.body.appendChild(this.sound);\nthis.play = function(){\nthis.sound.play();\n}\nthis.stop = function(){\nthis.sound.pause();\n}\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "var myGamePiece;\nvar myObstacles = [];\nvar mySound;\nfunction startGame() {\nmyGamePiece = new component(30, 30, \"red\", 10, 120);\nmySound = new sound(\"bounce.mp3\");\nmyGameArea.start();\n}\nfunction updateGameArea() {\nvar x, height, gap, minHeight, maxHeight, minGap, maxGap;\nfor (i = 0; i < myObstacles.length; i += 1) {\nif (myGamePiece.crashWith(myObstacles[i])) {\nmySound.play();\nmyGameArea.stop();\nreturn;\n}\n}\n...\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "var myGamePiece;\nvar myObstacles = [];\nvar mySound;\nvar myMusic;\nfunction startGame() {\nmyGamePiece = new component(30, 30, \"red\", 10, 120);\nmySound = new sound(\"bounce.mp3\");\nmyMusic = new sound(\"gametheme.mp3\");\nmyMusic.play();\nmyGameArea.start();\n}",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "function sound(src) {\nthis.sound = document.createElement(\"audio\");\nthis.sound.src = src;\nthis.sound.setAttribute(\"preload\", \"auto\");\nthis.sound.setAttribute(\"controls\", \"none\");\n# TODO: Complete this line\ndocument.body.appendChild(this.sound);\nthis.play = function(){\nthis.sound.play();\n}\nthis.stop = function(){\nthis.sound.pause();\n}\n}",
      "solution": "function sound(src) {\nthis.sound = document.createElement(\"audio\");\nthis.sound.src = src;\nthis.sound.setAttribute(\"preload\", \"auto\");\nthis.sound.setAttribute(\"controls\", \"none\");\nthis.sound.style.display = \"none\";\ndocument.body.appendChild(this.sound);\nthis.play = function(){\nthis.sound.play();\n}\nthis.stop = function(){\nthis.sound.pause();\n}\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "var myGamePiece;\nvar myObstacles = [];\nvar mySound;\nfunction startGame() {\n# TODO: Complete this line\nmySound = new sound(\"bounce.mp3\");\nmyGameArea.start();\n}\nfunction updateGameArea() {\nvar x, height, gap, minHeight, maxHeight, minGap, maxGap;\nfor (i = 0; i < myObstacles.length; i += 1) {\nif (myGamePiece.crashWith(myObstacles[i])) {\nmySound.play();\nmyGameArea.stop();\nreturn;\n}\n}\n...\n}",
      "solution": "var myGamePiece;\nvar myObstacles = [];\nvar mySound;\nfunction startGame() {\nmyGamePiece = new component(30, 30, \"red\", 10, 120);\nmySound = new sound(\"bounce.mp3\");\nmyGameArea.start();\n}\nfunction updateGameArea() {\nvar x, height, gap, minHeight, maxHeight, minGap, maxGap;\nfor (i = 0; i < myObstacles.length; i += 1) {\nif (myGamePiece.crashWith(myObstacles[i])) {\nmySound.play();\nmyGameArea.stop();\nreturn;\n}\n}\n...\n}"
    }
  ],
  "related_topics": [
    {
      "id": "73134992-9008-4489-beb2-50dc7f132341",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "ead5ae18-9570-4315-a1cf-3cfea87b8f4d",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "36f3ea14-0780-4631-a215-82cb0add3ef6",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers Game Sound concepts and techniques. You'll learn how to use Game Sound effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Game Sound and how to apply it in your projects."
}