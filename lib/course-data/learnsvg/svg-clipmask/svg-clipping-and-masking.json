{
  "id": "886cd62b-37da-4c03-ba8e-4fb348187707",
  "title": "SVG Clipping and Masking",
  "slug": "svg-clipping-and-masking",
  "metadata": {
    "description": "Learn about SVG Clipping and Masking with clear explanations and practical examples.",
    "keywords": [
      "c",
      "mask",
      "element",
      "fill",
      "rect",
      "width",
      "height",
      "example",
      "defs",
      "circle",
      "color"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnSVG",
    "subcategory": "SVG Clip/Mask"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "SVG Clipping and Masking",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "SVG Clipping and Masking\nSVG elements can be clipped and masked.\nThe\n<clipPath>\nelement is used to clip an SVG element.\nThe\n<mask>\nelement is used to apply a mask to an SVG element.\nSVG Clipping\nClipping is when you remove a part from an element.\nFor clipping, we use the\n<clipPath>\nelement.\nEvery path/element inside a\n<clipPath>\nelement is inspected and \nevaluated. Then every \npart of the target that lies OUTSIDE of this area will NOT be rendered. In other \nwords: Anything outside the path is hidden and anything inside is shown!\nThe\n<clipPath>\nelement is usually placed in a\n<defs>\nsection.\nLet's look at some examples:\nIn this example, we create a red circle centered at (50,50), with radius 50:\nSorry, your browser does not support inline SVG.\nHere is the SVG code:\nExample\n<svg width=\"200\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n<circle cx=\"100\" cy=\"100\" r=\"100\" \n  fill=\"red\" \n  />\n</svg>\nNow we add a\n<clipPath>\nelement with a single\n<rect>\nelement. This\n<rect>\nelement would cover the UPPER HALF of the \ncircle. The\n<rect>\nwill NOT be drawn; Instead, its size and position will be used to determine which \npixels of the circle that will be shown. Since the rectangle \ncovers only the upper half of the circle, the lower half of the circle will \nvanish:\nSorry, your browser does not support inline SVG.\nHere is the SVG code:\nExample\n<svg width=\"200\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n<defs>\n<clipPath id=\"cut-bottom\">\n<rect x=\"0\" y=\"0\" width=\"200\" height=\"50\" />\n</clipPath>\n</defs>\n<circle cx=\"100\" cy=\"100\" r=\"100\" \n  fill=\"red\" clip-path=\"url(#cut-bottom)\" \n  />\n</svg>\n\nSVG Masking\nFor masking, we use the\n<mask>\nelement.\nThe\n<mask>\nelement is used to apply a mask to an SVG element.\nA mask is referenced with the\nmask\nattribute.\nHere is a simple mask example:\nSorry, your browser does not support inline SVG.\nHere is the SVG code:\nExample\n<svg width=\"200\" height=\"120\" xmlns=\"http://www.w3.org/2000/svg\">\n<defs>\n<mask id=\"mask1\">\n<rect x=\"0\" y=\"0\" \n  width=\"100\" height=\"50\" fill=\"white\" />\n</mask>\n</defs>\n<rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" \n  fill=\"red\" \n  mask=\"url(#mask1)\" />\n<rect x=\"0\" y=\"0\" width=\"100\" \n  height=\"100\" fill=\"none\" stroke=\"black\" />\n</svg>\n\nThe example above defines a mask with\nid=\"mask1\"\n. Inside the\n<mask>\nelement there is a\n<rect>\nelement. This\n<rect>\nelement defines the shape of the mask.\nThe example also defines a\n<rect>\nelement \nwhich uses the mask. The mask is referenced with the\nmask\nattribute.\nThe red rectangle should be 100 pixels high, but \nonly the \nfirst 50 pixels vertically are visible. This is because the mask rectangle is \nonly 50 pixels high. The rectangle is only visible in the parts covered by the mask rectangle.\nThe last\n<rect>\nelement is just to \nshow the size of the rectangle without the mask.\nHere is another example that uses a\n<circle>\nelement \nto define the shape of the mask:\nSorry, your browser does not support inline SVG.\nHere is the SVG code:\nExample\n<svg width=\"200\" height=\"120\" xmlns=\"http://www.w3.org/2000/svg\">\n<defs>\n<mask id=\"mask2\">\n<circle cx=\"50\" cy=\"50\" \n  r=\"30\" fill=\"white\" />\n</mask>\n</defs>\n<rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" fill=\"red\" mask=\"url(#mask2)\" />\n<rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" stroke=\"black\" fill=\"none\"/>\n</svg>\n\nFill Color and Opacity\nThe fill color of the elements inside the\n<mask>\nelement defines the opacity of the fill color of the element that refers to the \nmask.\nIn the examples above we have only used fill=\"white\". In a mask, white is \ntreated as an area that will be shown, and black is treated as an area to be \nmasked.\nA mask will be more opaque the closer the color is to #ffffff (white) and \nmore transparent the closer the color is to #000000 (black):\nSorry, your browser does not support inline SVG.\nHere is the SVG code:\nExample\n<svg width=\"200\" height=\"120\" xmlns=\"http://www.w3.org/2000/svg\">\n<defs>\n<mask id=\"mask3\">\n<rect \n  x=\"0\" y=\"0\" width=\"100\" height=\"30\" fill=\"#232323\" />\n<rect x=\"0\" y=\"30\" width=\"100\" height=\"40\" fill=\"#454545\" />\n<rect x=\"0\" y=\"70\" width=\"100\" height=\"30\" fill=\"#878787\" />\n</mask>\n</defs>\n<rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" \n  fill=\"red\" mask=\" url(#mask3)\"/>\n</svg>\n\nGradients in Masks\nIn this example the mask shape uses a gradient \nas a fill color:\nSorry, your browser does not support inline SVG.\nHere is the SVG code:\nExample\n<svg width=\"200\" height=\"120\" xmlns=\"http://www.w3.org/2000/svg\">\n<defs>\n<linearGradient id=\"gradient1\">\n<stop \n  offset=\"0%\" stop-color=\"#ffffff\" />\n<stop \n  offset=\"100%\" stop-color=\"#000000\" />\n</linearGradient>\n<mask id=\"mask4\">\n<rect x=\"0\" y=\"0\" \n  width=\"100\" height=\"100\" fill=\"url(#gradient1)\" />\n</mask>\n</defs>\n<rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" \n  fill=\"red\" mask=\" url(#mask4)\"/>\n</svg>\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<svg width=\"200\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n<circle cx=\"100\" cy=\"100\" r=\"100\" \n  fill=\"red\" \n  />\n</svg>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<svg width=\"200\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n<defs>\n<clipPath id=\"cut-bottom\">\n<rect x=\"0\" y=\"0\" width=\"200\" height=\"50\" />\n</clipPath>\n</defs>\n<circle cx=\"100\" cy=\"100\" r=\"100\" \n  fill=\"red\" clip-path=\"url(#cut-bottom)\" \n  />\n</svg>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<svg width=\"200\" height=\"120\" xmlns=\"http://www.w3.org/2000/svg\">\n<defs>\n<mask id=\"mask1\">\n<rect x=\"0\" y=\"0\" \n  width=\"100\" height=\"50\" fill=\"white\" />\n</mask>\n</defs>\n<rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" \n  fill=\"red\" \n  mask=\"url(#mask1)\" />\n<rect x=\"0\" y=\"0\" width=\"100\" \n  height=\"100\" fill=\"none\" stroke=\"black\" />\n</svg>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<svg width=\"200\" height=\"120\" xmlns=\"http://www.w3.org/2000/svg\">\n<defs>\n<mask id=\"mask2\">\n<circle cx=\"50\" cy=\"50\" \n  r=\"30\" fill=\"white\" />\n</mask>\n</defs>\n<rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" fill=\"red\" mask=\"url(#mask2)\" />\n<rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" stroke=\"black\" fill=\"none\"/>\n</svg>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "<svg width=\"200\" height=\"120\" xmlns=\"http://www.w3.org/2000/svg\">\n<defs>\n<mask id=\"mask3\">\n<rect \n  x=\"0\" y=\"0\" width=\"100\" height=\"30\" fill=\"#232323\" />\n<rect x=\"0\" y=\"30\" width=\"100\" height=\"40\" fill=\"#454545\" />\n<rect x=\"0\" y=\"70\" width=\"100\" height=\"30\" fill=\"#878787\" />\n</mask>\n</defs>\n<rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" \n  fill=\"red\" mask=\" url(#mask3)\"/>\n</svg>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "<svg width=\"200\" height=\"120\" xmlns=\"http://www.w3.org/2000/svg\">\n<defs>\n<linearGradient id=\"gradient1\">\n<stop \n  offset=\"0%\" stop-color=\"#ffffff\" />\n<stop \n  offset=\"100%\" stop-color=\"#000000\" />\n</linearGradient>\n<mask id=\"mask4\">\n<rect x=\"0\" y=\"0\" \n  width=\"100\" height=\"100\" fill=\"url(#gradient1)\" />\n</mask>\n</defs>\n<rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" \n  fill=\"red\" mask=\" url(#mask4)\"/>\n</svg>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<svg width=\"200\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n<circle cx=\"100\" cy=\"100\" r=\"100\" \n  fill=\"red\" \n  />\n# TODO: Complete this line",
      "solution": "<svg width=\"200\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n<circle cx=\"100\" cy=\"100\" r=\"100\" \n  fill=\"red\" \n  />\n</svg>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<svg width=\"200\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n# TODO: Complete this line\n<clipPath id=\"cut-bottom\">\n<rect x=\"0\" y=\"0\" width=\"200\" height=\"50\" />\n</clipPath>\n</defs>\n<circle cx=\"100\" cy=\"100\" r=\"100\" \n  fill=\"red\" clip-path=\"url(#cut-bottom)\" \n  />\n</svg>",
      "solution": "<svg width=\"200\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n<defs>\n<clipPath id=\"cut-bottom\">\n<rect x=\"0\" y=\"0\" width=\"200\" height=\"50\" />\n</clipPath>\n</defs>\n<circle cx=\"100\" cy=\"100\" r=\"100\" \n  fill=\"red\" clip-path=\"url(#cut-bottom)\" \n  />\n</svg>"
    }
  ],
  "related_topics": [
    {
      "id": "748f5929-55ed-44fc-854f-12cc298caa61",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "5f24da0c-973c-4bb0-9535-a1a79df1590e",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "4dec038f-c1cf-460e-99aa-835dd94740b5",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is element?",
      "options": [
        "used to clip an SVG element",
        "None of the above.",
        "None of the above.",
        "used to apply a mask to an SVG element"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of element is 'used to clip an SVG element'."
    },
    {
      "question": "What is element?",
      "options": [
        "None of the above.",
        "None of the above.",
        "used to clip an SVG element",
        "used to apply a mask to an SVG element"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of element is 'used to apply a mask to an SVG element'."
    }
  ],
  "summary": "This tutorial covers SVG Clipping and Masking concepts and techniques. You'll learn how to use SVG Clipping and Masking effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of SVG Clipping and Masking and how to apply it in your projects."
}