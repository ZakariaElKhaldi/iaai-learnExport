{
  "id": "f507bbcf-7382-41d0-869d-bcb93edd4ef3",
  "title": "HTML Game Example",
  "slug": "html-game-example",
  "metadata": {
    "description": "Learn about HTML Game Example with clear explanations and practical examples.",
    "keywords": [
      "canvas",
      "function",
      "document",
      "html",
      "example",
      "mygamepiece",
      "component",
      "mygamearea",
      "start",
      "width"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Html Basics"
    ],
    "estimated_time": 5,
    "category": "LearnSVG",
    "subcategory": "Game Intro"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "HTML Game Example",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Learn how to make games, using nothing but HTML and JavaScript.\nPush the buttons to move the red square:\nRestart\nUP\nLEFT\nRIGHT\nDOWN\n\nWith our online editor, you can edit the code, and click on a button to view the result.\nExample\nfunction startGame() {\nmyGamePiece = new component(30, 30, \"red\", 10, 120);\nmyGamePiece.gravity = 0.05;\nmyScore = new component(\"30px\", \"Consolas\", \"black\", 280, 40, \"text\");\nmyGameArea.start();\n}\nvar myGameArea = {\ncanvas : document.createElement(\"canvas\"),\nstart : function() {\nthis.canvas.width = 480;\nthis.canvas.height = 270;\nthis.context = this.canvas.getContext(\"2d\");\ndocument.body.insertBefore(this.canvas, document.body.childNodes[0]);\nthis.frameNo = 0;\n},\nclear : function() {\nthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n}\n}\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "function startGame() {\nmyGamePiece = new component(30, 30, \"red\", 10, 120);\nmyGamePiece.gravity = 0.05;\nmyScore = new component(\"30px\", \"Consolas\", \"black\", 280, 40, \"text\");\nmyGameArea.start();\n}\nvar myGameArea = {\ncanvas : document.createElement(\"canvas\"),\nstart : function() {\nthis.canvas.width = 480;\nthis.canvas.height = 270;\nthis.context = this.canvas.getContext(\"2d\");\ndocument.body.insertBefore(this.canvas, document.body.childNodes[0]);\nthis.frameNo = 0;\n},\nclear : function() {\nthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n}\n}",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "function startGame() {\nmyGamePiece = new component(30, 30, \"red\", 10, 120);\nmyGamePiece.gravity = 0.05;\nmyScore = new component(\"30px\", \"Consolas\", \"black\", 280, 40, \"text\");\nmyGameArea.start();\n}\nvar myGameArea = {\ncanvas : document.createElement(\"canvas\"),\n# TODO: Complete this line\nthis.canvas.width = 480;\nthis.canvas.height = 270;\nthis.context = this.canvas.getContext(\"2d\");\ndocument.body.insertBefore(this.canvas, document.body.childNodes[0]);\nthis.frameNo = 0;\n},\nclear : function() {\nthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n}\n}",
      "solution": "function startGame() {\nmyGamePiece = new component(30, 30, \"red\", 10, 120);\nmyGamePiece.gravity = 0.05;\nmyScore = new component(\"30px\", \"Consolas\", \"black\", 280, 40, \"text\");\nmyGameArea.start();\n}\nvar myGameArea = {\ncanvas : document.createElement(\"canvas\"),\nstart : function() {\nthis.canvas.width = 480;\nthis.canvas.height = 270;\nthis.context = this.canvas.getContext(\"2d\");\ndocument.body.insertBefore(this.canvas, document.body.childNodes[0]);\nthis.frameNo = 0;\n},\nclear : function() {\nthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n}\n}"
    },
    {
      "title": "Create a Layout",
      "description": "Build a simple layout using the techniques from this tutorial.",
      "difficulty": "easy",
      "starter_code": "<!-- Add your code here -->",
      "solution": "<!-- Example solution would go here -->"
    }
  ],
  "related_topics": [
    {
      "id": "52a0f847-0146-44e5-b60e-3939ce758936",
      "title": "Html Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "32cbc267-d8af-4388-ac0e-80fa85e98273",
      "title": "Html Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "4a37395d-e7ed-4c87-a055-35bafbb1512e",
      "title": "Html Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers HTML Game Example concepts and techniques. You'll learn how to use HTML Game Example effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of HTML Game Example and how to apply it in your projects."
}