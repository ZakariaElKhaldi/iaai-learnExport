{
  "id": "63e9f370-7149-4ab9-a4a0-4bb1f0f3b34c",
  "title": "Game Canvas",
  "slug": "game-canvas",
  "metadata": {
    "description": "Learn about Game Canvas with clear explanations and practical examples.",
    "keywords": [
      "c",
      "canvas",
      "element",
      "object",
      "start",
      "getcontext",
      "mygamearea",
      "html",
      "function",
      "document",
      "body"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnSVG",
    "subcategory": "Game Canvas"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Game Canvas",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The HTML\n<canvas>\nelement is displayed as a rectangular object on a web page:\nHTML Canvas\nThe\n<canvas>\nelement is perfect for making games in HTML.\nThe\n<canvas>\nelement offers all the functionality you need for making games.\nUse JavaScript to draw, write, insert images, and more, onto the\n<canvas>\n.\n.getContext(\"2d\")\nThe\n<canvas>\nelement has a built-in object, called the\ngetContext(\"2d\")\nobject, with methods and properties for drawing.\nYou can learn more about the\n<canvas>\nelement, and the\ngetContext(\"2d\")\nobject, in our\nCanvas \nTutorial\n.\nGet Started\nTo make a game, start by creating a gaming area, and make it ready for \ndrawing:\nExample\nfunction startGame() {\nmyGameArea.start();\n}\nvar myGameArea = {\ncanvas : document.createElement(\"canvas\"),\nstart : function() {\nthis.canvas.width = 480;\nthis.canvas.height = 270;\nthis.context = this.canvas.getContext(\"2d\");\ndocument.body.insertBefore(this.canvas, document.body.childNodes[0]);\n}\n}\n\nThe object\nmyGameArea\nwill have \nmore properties and methods later in this tutorial.\nThe function\nstartGame()\ninvokes the method\nstart()\nof the\nmyGameArea\nobject.\nThe\nstart()\nmethod creates a\n<canvas>\nelement and inserts \nit as the first childnode of the\n<body>\nelement.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "function startGame() {\nmyGameArea.start();\n}\nvar myGameArea = {\ncanvas : document.createElement(\"canvas\"),\nstart : function() {\nthis.canvas.width = 480;\nthis.canvas.height = 270;\nthis.context = this.canvas.getContext(\"2d\");\ndocument.body.insertBefore(this.canvas, document.body.childNodes[0]);\n}\n}",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "function startGame() {\nmyGameArea.start();\n# TODO: Complete this line\nvar myGameArea = {\ncanvas : document.createElement(\"canvas\"),\nstart : function() {\nthis.canvas.width = 480;\nthis.canvas.height = 270;\nthis.context = this.canvas.getContext(\"2d\");\ndocument.body.insertBefore(this.canvas, document.body.childNodes[0]);\n}\n}",
      "solution": "function startGame() {\nmyGameArea.start();\n}\nvar myGameArea = {\ncanvas : document.createElement(\"canvas\"),\nstart : function() {\nthis.canvas.width = 480;\nthis.canvas.height = 270;\nthis.context = this.canvas.getContext(\"2d\");\ndocument.body.insertBefore(this.canvas, document.body.childNodes[0]);\n}\n}"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "59185c48-efc4-49ea-aecd-e7b48dab04d7",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "1a04b0f6-6491-4b7c-b7c3-8af3a0926567",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "bc6d5c29-0234-4aa2-a3c7-6a7880059267",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is element?",
      "options": [
        "None of the above.",
        "None of the above.",
        "displayed as a rectangular object on a web page:\nHTML Canvas\nThe\n<canvas>\nelement is perfect for making games in HTML",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of element is 'displayed as a rectangular object on a web page:\nHTML Canvas\nThe\n<canvas>\nelement is perfect for making games in HTML'."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers Game Canvas concepts and techniques. You'll learn how to use Game Canvas effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Game Canvas and how to apply it in your projects."
}