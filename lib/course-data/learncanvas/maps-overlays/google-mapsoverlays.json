{
  "id": "99b345fc-3f62-4315-ac26-e8a27b688d96",
  "title": "Google MapsOverlays",
  "slug": "google-mapsoverlays",
  "metadata": {
    "description": "Learn about Google MapsOverlays with clear explanations and practical examples.",
    "keywords": [
      "go",
      "marker",
      "google",
      "maps",
      "specifies",
      "line",
      "circle",
      "example",
      "color",
      "polyline",
      "strokecolor"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Go Basics"
    ],
    "estimated_time": 5,
    "category": "LearnCanvas",
    "subcategory": "Maps Overlays"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Google Maps\nOverlays",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Google Maps - Overlays\nOverlays are objects on the map that are bound to latitude/longitude \ncoordinates.\nGoogle Maps has several types of overlays:\nMarker - Single locations on a map. Markers can also display custom icon images\nPolyline - Series of straight lines on a map\nPolygon - Series of straight lines on a map, and the shape is \"closed\"\nCircle and Rectangle\nInfo Windows - Displays content within a popup balloon on top of a map\nCustom overlays\nGoogle Maps - Add a Marker\nThe Marker constructor creates a marker. Note that the position property \nmust be set for the marker to display.\nAdd the marker to the map by using the setMap() \nmethod:\nExample\nvar marker = new google.maps.Marker({position: myCenter});\nmarker.setMap(map);\nGoogle Maps - Animate the Marker\nThe example below shows how to animate the marker with the animation property:\nExample\nvar\nmarker = new google.maps.Marker({\nposition:myCenter,\nanimation:google.maps.Animation.BOUNCE\n});\nmarker.setMap(map);\nGoogle Maps - Icon Instead of Marker\nThe example below specifies an image (icon) to use instead of the default marker:\nExample\nvar marker = new google.maps.Marker({\nposition:myCenter,\nicon:'pinkball.png'\n});\nmarker.setMap(map);\nGoogle Maps - Polyline\nA Polyline is a line that is drawn through a series of coordinates in an ordered sequence.\nA polyline supports the following properties:\npath - specifies several latitude/longitude coordinates for the line\nstrokeColor - specifies a hexadecimal color for the line (format: \"#FFFFFF\")\nstrokeOpacity - specifies the opacity of the line (a value between 0.0 and 1.0)\nstrokeWeight - specifies the weight of the line's stroke in pixels\neditable - defines whether the line is editable by users (true/false)\nExample\nvar myTrip = [stavanger,amsterdam,london];\nvar flightPath = new google.maps.Polyline({\npath:myTrip,\nstrokeColor:\"#0000FF\",\nstrokeOpacity:0.8,\nstrokeWeight:2\n});\nGoogle Maps - Polygon\nA Polygon is similar to a Polyline in that it consists of a \nseries of coordinates in an ordered sequence. However, polygons are designed to define regions within a closed loop.\nPolygons are made of straight lines, and the shape is \"closed\" (all the lines \nconnect up).\nA polygon supports the following properties:\npath - specifies several LatLng coordinates for the line (first and last coordinate are equal)\nstrokeColor - specifies a hexadecimal color for the line (format: \"#FFFFFF\")\nstrokeOpacity - specifies the opacity of the line (a value between 0.0 and 1.0)\nstrokeWeight - specifies the weight of the line's stroke in pixels\nfillColor - specifies a hexadecimal color for the area within the enclosed region (format: \"#FFFFFF\")\nfillOpacity - specifies the opacity of the fill color (a value between 0.0 and 1.0)\neditable - defines whether the line is editable by users (true/false)\nExample\nvar myTrip = [stavanger,amsterdam,london,stavanger];\nvar flightPath = new google.maps.Polygon({\npath:myTrip,\nstrokeColor:\"#0000FF\",\nstrokeOpacity:0.8,\nstrokeWeight:2,\nfillColor:\"#0000FF\",\nfillOpacity:0.4\n});\nGoogle Maps - Circle\nA circle supports the following properties:\ncenter - specifies the google.maps.LatLng of the center of the circle\nradius - specifies the radius of the circle, in meters\nstrokeColor - specifies a hexadecimal color for the line around the circle (format: \"#FFFFFF\")\nstrokeOpacity - specifies the opacity of the stroke color (a value between 0.0 and 1.0)\nstrokeWeight - specifies the weight of the line's stroke in pixels\nfillColor - specifies a hexadecimal color for the area within the circle (format: \"#FFFFFF\")\nfillOpacity - specifies the opacity of the fill color (a value between 0.0 and 1.0)\neditable - defines whether the circle is editable by users (true/false)\nExample\nvar myCity = new google.maps.Circle({\ncenter:amsterdam,\nradius:20000,\nstrokeColor:\"#0000FF\",\nstrokeOpacity:0.8,\nstrokeWeight:2,\nfillColor:\"#0000FF\",\nfillOpacity:0.4\n});\nGoogle Maps - InfoWindow\nShow an InfoWindow with some text content for a marker:\nExample\nvar infowindow = new google.maps.InfoWindow({\ncontent:\"Hello World!\"\n});\ninfowindow.open(map,marker);\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "var marker = new google.maps.Marker({position: myCenter});\nmarker.setMap(map);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "var\nmarker = new google.maps.Marker({\nposition:myCenter,\nanimation:google.maps.Animation.BOUNCE\n});\nmarker.setMap(map);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "var marker = new google.maps.Marker({\nposition:myCenter,\nicon:'pinkball.png'\n});\nmarker.setMap(map);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "var myTrip = [stavanger,amsterdam,london];\nvar flightPath = new google.maps.Polyline({\npath:myTrip,\nstrokeColor:\"#0000FF\",\nstrokeOpacity:0.8,\nstrokeWeight:2\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "var myTrip = [stavanger,amsterdam,london,stavanger];\nvar flightPath = new google.maps.Polygon({\npath:myTrip,\nstrokeColor:\"#0000FF\",\nstrokeOpacity:0.8,\nstrokeWeight:2,\nfillColor:\"#0000FF\",\nfillOpacity:0.4\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "var myCity = new google.maps.Circle({\ncenter:amsterdam,\nradius:20000,\nstrokeColor:\"#0000FF\",\nstrokeOpacity:0.8,\nstrokeWeight:2,\nfillColor:\"#0000FF\",\nfillOpacity:0.4\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "var infowindow = new google.maps.InfoWindow({\ncontent:\"Hello World!\"\n});\ninfowindow.open(map,marker);",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "var marker = new google.maps.Marker({position: myCenter});\nmarker.setMap(map);"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "var\nmarker = new google.maps.Marker({\nposition:myCenter,\nanimation:google.maps.Animation.BOUNCE\n# TODO: Complete this line\nmarker.setMap(map);",
      "solution": "var\nmarker = new google.maps.Marker({\nposition:myCenter,\nanimation:google.maps.Animation.BOUNCE\n});\nmarker.setMap(map);"
    }
  ],
  "related_topics": [
    {
      "id": "51fb5e97-1db6-4dcf-be02-65ae93725968",
      "title": "Go Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "7567467c-9fa1-48f9-bb74-2ba94fba9588",
      "title": "Go Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "d762b3dc-8f3d-44d0-bf56-4eb87b7700f1",
      "title": "Go Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Overlays\nOverlays are objects on the map that?",
      "options": [
        "\"closed\"\nCircle and Rectangle\nInfo Windows - Displays content within a popup balloon on top of a map\nCustom overlays\nGoogle Maps - Add a Marker\nThe Marker constructor creates a marker",
        "bound to latitude/longitude \ncoordinates",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Overlays\nOverlays are objects on the map that is 'bound to latitude/longitude \ncoordinates'."
    },
    {
      "question": "What is and the shape?",
      "options": [
        "\"closed\"\nCircle and Rectangle\nInfo Windows - Displays content within a popup balloon on top of a map\nCustom overlays\nGoogle Maps - Add a Marker\nThe Marker constructor creates a marker",
        "bound to latitude/longitude \ncoordinates",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of and the shape is '\"closed\"\nCircle and Rectangle\nInfo Windows - Displays content within a popup balloon on top of a map\nCustom overlays\nGoogle Maps - Add a Marker\nThe Marker constructor creates a marker'."
    }
  ],
  "summary": "This tutorial covers Google MapsOverlays concepts and techniques. You'll learn how to use Google MapsOverlays effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Google MapsOverlays and how to apply it in your projects."
}