{
  "id": "e470968c-a9dd-42fb-bc14-977d4a96bc21",
  "title": "AngularJS AJAX - $http",
  "slug": "angularjs-ajax-http",
  "metadata": {
    "description": "Learn about AngularJS AJAX - $http with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "http",
      "response",
      "scope",
      "function",
      "data",
      "controller",
      "object",
      "example",
      "json",
      "myapp"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnAngularJS",
    "subcategory": "AngularJS Http"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "AngularJS AJAX - $http",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "$http\nis an AngularJS service for reading data \nfrom remote servers.\nAngularJS $http\nThe AngularJS\n$http\nservice makes a request to the server, and \nreturns a response.\nExample\nMake a simple request to the server, and display the result in a header:\n<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n<p>Today's welcome \n    message is:</p>\n<h1>{{myWelcome}}</h1>\n</div>\n<script>\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', \n    function($scope, $http) {\n$http.get(\"welcome.htm\")\n.then(function(response) {\n$scope.myWelcome \n    = response.data;\n});\n});\n</script>\n\nMethods\nThe example above uses the\n.get\nmethod of the\n$http\nservice.\nThe .get method is a shortcut method of the $http service. There are several \nshortcut methods:\n.delete()\n.get()\n.head()\n.jsonp()\n.patch()\n.post()\n.put()\nThe methods above are all shortcuts of calling the $http service:\nExample\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', \n    function($scope, $http) {\n$http({\nmethod : \"GET\",\nurl : \"welcome.htm\"\n}).then(function mySuccess(response) {\n$scope.myWelcome = response.data;\n}, function myError(response) \n    {\n$scope.myWelcome = \n    response.statusText;\n});\n});\n\nThe example above executes the $http service with an object as an argument. \nThe object is \nspecifying the HTTP method, the url, what to do on success, and what to do on \nfailure.\nProperties\nThe response from the server is an object with these properties:\n.config\nthe object used to generate the request.\n.data\na string, or an object, carrying the response from \n    the server.\n.headers\na function to use to get header information.\n.status\na number defining the HTTP status.\n.statusText\na string defining the HTTP status.\nExample\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', \n    function($scope, $http) {\n$http.get(\"welcome.htm\")\n.then(function(response) {\n$scope.content \n    = response.data;\n$scope.statuscode \n    = response.status;\n$scope.statustext \n    = response.statusText;\n});\n});\n\nTo handle errors, add one more functions to the\n.then\nmethod:\nExample\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', \n    function($scope, $http) {\n$http.get(\"wrongfilename.htm\")\n.then(function(response) {\n// First function handles success\n$scope.content \n    = response.data;\n}, function(response) {\n// Second function handles error\n$scope.content = \"Something went wrong\";\n});\n});\n\nJSON\nThe data you get from the response is expected to be in JSON format.\nJSON is a great way of transporting data, and it is easy to use within \n    AngularJS, or any other JavaScript.\nExample: On the server we have a file that returns a JSON object containing \n15 customers, all wrapped in array called\nrecords\n.\nClick here to take a look at the JSON object.\n\u00d7\ncustomers.php\n{{data | json}}\nExample\nThe\nng-repeat\ndirective is perfect for looping through an \n    array:\n<div ng-app=\"myApp\" ng-controller=\"customersCtrl\">\n<ul>\n<li \nng-repeat=\"x in myData\">\n{{ x.Name + ', ' + x.Country }}\n</li>\n</ul>\n</div>\n<script>\nvar app = angular.module('myApp', \n []);\napp.controller('customersCtrl', \n function($scope, $http) {\n$http.get(\"customers.php\").then(function(response) {\n$scope.myData \n= response.data.records;\n});\n});\n</script>\n\nApplication explained:\nThe application defines the\ncustomersCtrl\ncontroller, with a\n$scope\nand\n$http\nobject.\n$http\nis an\nXMLHttpRequest object\nfor requesting \nexternal data.\n$http.get()\nreads\nJSON data\nfrom\nhttps://www..com/angular/customers.php\n.\nOn success, the controller creates a property,\nmyData\n, \nin the scope, with JSON \ndata from the server.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n<p>Today's welcome \n    message is:</p>\n<h1>{{myWelcome}}</h1>\n</div>\n<script>\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', \n    function($scope, $http) {\n$http.get(\"welcome.htm\")\n.then(function(response) {\n$scope.myWelcome \n    = response.data;\n});\n});\n</script>",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "var app = angular.module('myApp', []);\napp.controller('myCtrl', \n    function($scope, $http) {\n$http({\nmethod : \"GET\",\nurl : \"welcome.htm\"\n}).then(function mySuccess(response) {\n$scope.myWelcome = response.data;\n}, function myError(response) \n    {\n$scope.myWelcome = \n    response.statusText;\n});\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "var app = angular.module('myApp', []);\napp.controller('myCtrl', \n    function($scope, $http) {\n$http.get(\"welcome.htm\")\n.then(function(response) {\n$scope.content \n    = response.data;\n$scope.statuscode \n    = response.status;\n$scope.statustext \n    = response.statusText;\n});\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "var app = angular.module('myApp', []);\napp.controller('myCtrl', \n    function($scope, $http) {\n$http.get(\"wrongfilename.htm\")\n.then(function(response) {\n// First function handles success\n$scope.content \n    = response.data;\n}, function(response) {\n// Second function handles error\n$scope.content = \"Something went wrong\";\n});\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "<div ng-app=\"myApp\" ng-controller=\"customersCtrl\">\n<ul>\n<li \nng-repeat=\"x in myData\">\n{{ x.Name + ', ' + x.Country }}\n</li>\n</ul>\n</div>\n<script>\nvar app = angular.module('myApp', \n []);\napp.controller('customersCtrl', \n function($scope, $http) {\n$http.get(\"customers.php\").then(function(response) {\n$scope.myData \n= response.data.records;\n});\n});\n</script>",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n<p>Today's welcome \n    message is:</p>\n<h1>{{myWelcome}}</h1>\n</div>\n<script>\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', \n    function($scope, $http) {\n# TODO: Complete this line\n.then(function(response) {\n$scope.myWelcome \n    = response.data;\n});\n});\n</script>",
      "solution": "<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n<p>Today's welcome \n    message is:</p>\n<h1>{{myWelcome}}</h1>\n</div>\n<script>\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', \n    function($scope, $http) {\n$http.get(\"welcome.htm\")\n.then(function(response) {\n$scope.myWelcome \n    = response.data;\n});\n});\n</script>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "var app = angular.module('myApp', []);\n# TODO: Complete this line\n    function($scope, $http) {\n$http({\nmethod : \"GET\",\nurl : \"welcome.htm\"\n}).then(function mySuccess(response) {\n$scope.myWelcome = response.data;\n}, function myError(response) \n    {\n$scope.myWelcome = \n    response.statusText;\n});\n});",
      "solution": "var app = angular.module('myApp', []);\napp.controller('myCtrl', \n    function($scope, $http) {\n$http({\nmethod : \"GET\",\nurl : \"welcome.htm\"\n}).then(function mySuccess(response) {\n$scope.myWelcome = response.data;\n}, function myError(response) \n    {\n$scope.myWelcome = \n    response.statusText;\n});\n});"
    }
  ],
  "related_topics": [
    {
      "id": "2dfbf8d6-014a-48ef-bbcd-fc9cbf41f34d",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "ab2865b4-b4ee-477b-b60b-9c1440de396f",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "b7edf973-ac49-4ee8-8f33-2a3d824bb80d",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is http?",
      "options": [
        "None of the above.",
        "None of the above.",
        "Not a http.",
        "an AngularJS service for reading data \nfrom remote servers"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of http is 'an AngularJS service for reading data \nfrom remote servers'."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers AngularJS AJAX - $http concepts and techniques. You'll learn how to use AngularJS AJAX - $http effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of AngularJS AJAX - $http and how to apply it in your projects."
}