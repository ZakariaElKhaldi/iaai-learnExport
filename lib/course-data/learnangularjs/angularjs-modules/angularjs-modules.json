{
  "id": "78128a2a-4d5c-4939-98bc-4d0d871ceea6",
  "title": "AngularJS Modules",
  "slug": "angularjs-modules",
  "metadata": {
    "description": "Learn about AngularJS Modules with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "module",
      "script",
      "myapp",
      "angularjs",
      "controller",
      "angular",
      "myctrl",
      "scope",
      "application",
      "html"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnAngularJS",
    "subcategory": "AngularJS Modules"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "AngularJS Modules",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "An AngularJS module defines an\u00a0application.\nThe module is a container for the different parts of an \napplication.\nThe module is a container for the application controllers.\nControllers always belong to a module.\nCreating a Module\nA module is created by using the AngularJS function\nangular.module\n<div ng-app=\"myApp\">...</div>\n<script>\nvar app = angular.module(\"myApp\", []);\n</script>\nThe \"myApp\" parameter refers to an HTML element in which the application will \nrun.\nNow you can add controllers, directives, filters, and more, to your AngularJS application.\nAdding a Controller\nAdd a controller to your application, and refer to the controller with the\nng-controller\ndirective:\nExample\n<div ng-app=\"\nmyApp\n\" ng-controller=\n\"myCtrl\"\n>\n{{ firstName + \" \" + lastName }}\n</div>\n<script>\nvar \n    app \n    = angular.module(\n\"myApp\"\n, \n    []);\napp.controller(\n\"myCtrl\"\n, function($scope) {\n$scope.firstName \n    = \"John\";\n$scope.lastName \n    = \"Doe\";\n});\n</script>\n\nYou will learn more about controllers later in this tutorial.\nAdding a Directive\nAngularJS has a set of built-in directives which you can use to add functionality \nto your application.\nFor a full reference, visit our\nAngularJS directive reference\n.\nIn addition you can use the module to add your own directives to your \napplications:\nExample\n<div ng-app=\"myApp\" w3-test-directive></div>\n<script>\nvar app = \n    angular.module(\"myApp\", []);\napp.directive(\"w3TestDirective\", \n    function() {\nreturn {\ntemplate : \"I was made in a directive constructor!\"\n};\n});\n</script>\n\nYou will learn more about directives later in this tutorial.\nModules and Controllers in Files\nIt is common in AngularJS applications to put the module and the controllers \nin JavaScript files.\nIn this example, \"myApp.js\" contains an application module definition, \nwhile \"myCtrl.js\" \ncontains the controller:\nExample\n<!DOCTYPE html>\n<html>\n<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"></script>\n<body>\n<div ng-app=\"\nmyApp\n\" \n    ng-controller=\"\nmyCtrl\n\">\n{{ firstName + \" \" + lastName }}\n</div>\n<script src=\"\nmyApp.js\n\"></script>\n<script src=\"\nmyCtrl.js\n\"></script>\n</body>\n</html>\n\nmyApp.js\nvar app = angular.module(\n\"myApp\"\n, []);\nThe [] parameter in the module definition can be used to define dependent \nmodules.\nWithout the [] parameter, you are not\ncreating\na new module, but\nretrieving\nan existing one.\nmyCtrl.js\napp.controller(\n\"myCtrl\"\n, function($scope) {\n$scope.firstName    = \"John\";\n$scope.lastName= \"Doe\";\n});\nFunctions can Pollute the Global Namespace\nGlobal functions should be avoided in JavaScript. They can easily be overwritten or destroyed by other scripts.\nAngularJS modules reduces this problem, by keeping all functions local to the \nmodule.\nWhen to Load the Library\nWhile it is common in HTML applications to place scripts at the end of the\n<body>\nelement, it is recommended that you load the AngularJS library either in \nthe\n<head>\nor at the start of the\n<body>\n.\nThis is because  \ncalls to\nangular.module\ncan only be compiled after the library has been loaded.\nExample\n<!DOCTYPE html>\n<html>\n<body>\n<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"></script>\n<div ng-app=\"myApp\" \nng-controller=\"myCtrl\">\n{{ firstName + \" \" + lastName }}\n</div>\n<script>\nvar app = angular.module(\"myApp\", \n[]);\napp.controller(\"myCtrl\", function($scope) {\n$scope.firstName \n= \"John\";\n$scope.lastName \n= \"Doe\";\n});\n</script>\n</body>\n</html>\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<div ng-app=\"myApp\">...</div>\n<script>\nvar app = angular.module(\"myApp\", []);\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<div ng-app=\"\nmyApp\n\" ng-controller=\n\"myCtrl\"\n>\n{{ firstName + \" \" + lastName }}\n</div>\n<script>\nvar \n    app \n    = angular.module(\n\"myApp\"\n, \n    []);\napp.controller(\n\"myCtrl\"\n, function($scope) {\n$scope.firstName \n    = \"John\";\n$scope.lastName \n    = \"Doe\";\n});\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<div ng-app=\"myApp\" w3-test-directive></div>\n<script>\nvar app = \n    angular.module(\"myApp\", []);\napp.directive(\"w3TestDirective\", \n    function() {\nreturn {\ntemplate : \"I was made in a directive constructor!\"\n};\n});\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<!DOCTYPE html>\n<html>\n<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"></script>\n<body>\n<div ng-app=\"\nmyApp\n\" \n    ng-controller=\"\nmyCtrl\n\">\n{{ firstName + \" \" + lastName }}\n</div>\n<script src=\"\nmyApp.js\n\"></script>\n<script src=\"\nmyCtrl.js\n\"></script>\n</body>\n</html>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "myApp.js",
      "content": "",
      "order": 7,
      "code": "var app = angular.module(\n\"myApp\"\n, []);",
      "language": "unknown",
      "explanation": "Example of myapp.js"
    },
    {
      "type": "code_example",
      "title": "myCtrl.js",
      "content": "",
      "order": 8,
      "code": "app.controller(\n\"myCtrl\"\n, function($scope) {\n$scope.firstName    = \"John\";\n$scope.lastName= \"Doe\";\n});",
      "language": "unknown",
      "explanation": "Example of myctrl.js"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "<!DOCTYPE html>\n<html>\n<body>\n<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"></script>\n<div ng-app=\"myApp\" \nng-controller=\"myCtrl\">\n{{ firstName + \" \" + lastName }}\n</div>\n<script>\nvar app = angular.module(\"myApp\", \n[]);\napp.controller(\"myCtrl\", function($scope) {\n$scope.firstName \n= \"John\";\n$scope.lastName \n= \"Doe\";\n});\n</script>\n</body>\n</html>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<div ng-app=\"myApp\">...</div>\n# TODO: Complete this line\nvar app = angular.module(\"myApp\", []);\n</script>",
      "solution": "<div ng-app=\"myApp\">...</div>\n<script>\nvar app = angular.module(\"myApp\", []);\n</script>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<div ng-app=\"\nmyApp\n\" ng-controller=\n\"myCtrl\"\n>\n{{ firstName + \" \" + lastName }}\n</div>\n<script>\nvar \n    app \n    = angular.module(\n\"myApp\"\n, \n    []);\napp.controller(\n\"myCtrl\"\n, function($scope) {\n$scope.firstName \n    = \"John\";\n$scope.lastName \n# TODO: Complete this line\n});\n</script>",
      "solution": "<div ng-app=\"\nmyApp\n\" ng-controller=\n\"myCtrl\"\n>\n{{ firstName + \" \" + lastName }}\n</div>\n<script>\nvar \n    app \n    = angular.module(\n\"myApp\"\n, \n    []);\napp.controller(\n\"myCtrl\"\n, function($scope) {\n$scope.firstName \n    = \"John\";\n$scope.lastName \n    = \"Doe\";\n});\n</script>"
    }
  ],
  "related_topics": [
    {
      "id": "9021fafe-04a5-4973-a09c-4773b424020a",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "50f3fa58-421e-4c24-aab5-71ba0dbaf840",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "a9ea4ce4-bd44-4ada-b848-da8bc858f6bd",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The module?",
      "options": [
        "None of the above.",
        "a container for the application controllers",
        "a container for the different parts of an \napplication",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of The module is 'a container for the different parts of an \napplication'."
    },
    {
      "question": "What is The module?",
      "options": [
        "None of the above.",
        "None of the above.",
        "a container for the different parts of an \napplication",
        "a container for the application controllers"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of The module is 'a container for the application controllers'."
    }
  ],
  "summary": "This tutorial covers AngularJS Modules concepts and techniques. You'll learn how to use AngularJS Modules effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of AngularJS Modules and how to apply it in your projects."
}