{
  "id": "5581368b-6d57-455c-bc79-a5aecc107cd1",
  "title": "AngularJS Includes",
  "slug": "angularjs-includes",
  "metadata": {
    "description": "Learn about AngularJS Includes with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "include",
      "angularjs",
      "body",
      "file",
      "code",
      "files",
      "myapp",
      "script",
      "function",
      "html"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnAngularJS",
    "subcategory": "AngularJS Includes"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "AngularJS Includes",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "With AngularJS, you can include HTML from an external file.\nAngularJS Includes\nWith AngularJS, you can include HTML content using the\nng-include\ndirective:\nExample\n<body ng-app=\"\">\n<div ng-include=\"'myFile.htm'\"></div>\n</body>\n\nInclude AngularJS Code\nThe HTML files you include with the ng-include directive, can also contain \nAngularJS code:\nmyTable.htm:\n<table>\n<tr ng-repeat=\"x in \n    names\">\n<td>{{ x.Name }}</td>\n<td>{{ x.Country }}</td>\n</tr>\n</table>\nInclude the file \"myTable.htm\" in your web page, and all AngularJS code will be \nexecuted, even the code inside the included file:\nExample\n<body>\n<div ng-app=\"myApp\" ng-controller=\"customersCtrl\">\n<div ng-include=\"'myTable.htm'\"></div>\n</div>\n<script>\nvar app = angular.module('myApp', []);\napp.controller('customersCtrl', function($scope, $http) {\n$http.get(\"customers.php\").then(function (response) {\n$scope.names = response.data.records;\n});\n});\n</script>\n\nInclude Cross Domains\nBy default, the ng-include directive does not allow you to include files from other domains.\nTo include files from another domain, you can add a whitelist of legal files \nand/or domains in the config function of your application:\nExample:\n<body ng-app=\"myApp\">\n<div ng-include=\"'https://tryit..com/angular_include.php'\"></div>\n<script>\nvar app = angular.module('myApp', [])\napp.config(function($sceDelegateProvider) \n    {\n$sceDelegateProvider.resourceUrlWhitelist([\n'https://tryit..com/**'\n]);\n});\n</script>\n</body>\n\nBe sure that the server on the destination allows cross domain file access.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<body ng-app=\"\">\n<div ng-include=\"'myFile.htm'\"></div>\n</body>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "myTable.htm:",
      "content": "",
      "order": 4,
      "code": "<table>\n<tr ng-repeat=\"x in \n    names\">\n<td>{{ x.Name }}</td>\n<td>{{ x.Country }}</td>\n</tr>\n</table>",
      "language": "html",
      "explanation": "Example of mytable.htm:"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<body>\n<div ng-app=\"myApp\" ng-controller=\"customersCtrl\">\n<div ng-include=\"'myTable.htm'\"></div>\n</div>\n<script>\nvar app = angular.module('myApp', []);\napp.controller('customersCtrl', function($scope, $http) {\n$http.get(\"customers.php\").then(function (response) {\n$scope.names = response.data.records;\n});\n});\n</script>",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example:",
      "content": "",
      "order": 6,
      "code": "<body ng-app=\"myApp\">\n<div ng-include=\"'https://tryit.w3schools.com/angular_include.php'\"></div>\n<script>\nvar app = angular.module('myApp', [])\napp.config(function($sceDelegateProvider) \n    {\n$sceDelegateProvider.resourceUrlWhitelist([\n'https://tryit.w3schools.com/**'\n]);\n});\n</script>\n</body>",
      "language": "unknown",
      "explanation": "Example of example:"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<body ng-app=\"\">\n<div ng-include=\"'myFile.htm'\"></div>\n# TODO: Complete this line",
      "solution": "<body ng-app=\"\">\n<div ng-include=\"'myFile.htm'\"></div>\n</body>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<table>\n<tr ng-repeat=\"x in \n    names\">\n<td>{{ x.Name }}</td>\n<td>{{ x.Country }}</td>\n</tr>\n# TODO: Complete this line",
      "solution": "<table>\n<tr ng-repeat=\"x in \n    names\">\n<td>{{ x.Name }}</td>\n<td>{{ x.Country }}</td>\n</tr>\n</table>"
    }
  ],
  "related_topics": [
    {
      "id": "ee315184-48d1-476c-87fb-3370a32f3b36",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "0ac0b6e7-ba05-45c9-b9c5-c44533f760b6",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "8bdd1eb7-77b6-464a-a059-be6ba9f04758",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers AngularJS Includes concepts and techniques. You'll learn how to use AngularJS Includes effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of AngularJS Includes and how to apply it in your projects."
}