{
  "id": "32f1f1dc-77a6-48ee-b8e1-f819077042b9",
  "title": "AngularJS Events",
  "slug": "angularjs-events",
  "metadata": {
    "description": "Learn about AngularJS Events with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "scope",
      "count",
      "click",
      "function",
      "button",
      "myapp",
      "controller",
      "myctrl",
      "script",
      "event"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnAngularJS",
    "subcategory": "AngularJS Events"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "AngularJS Events",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "AngularJS has its own HTML events directives.\nAngularJS Events\nYou can add AngularJS event listeners to your HTML elements by using one or \nmore of these directives:\nng-blur\nng-change\nng-click\nng-copy\nng-cut\nng-dblclick\nng-focus\nng-keydown\nng-keypress\nng-keyup\nng-mousedown\nng-mouseenter\nng-mouseleave\nng-mousemove\nng-mouseover\nng-mouseup\nng-paste\nThe event directives allows us to run AngularJS functions at certain user \nevents.\nAn AngularJS event will not overwrite an HTML event, both events will be \nexecuted.\nMouse Events\nMouse events occur when the cursor moves over an element, in this order:\nng-mouseover\nng-mouseenter\nng-mousemove\nng-mouseleave\nOr when a mouse button is clicked on an element, in this order:\nng-mousedown\nng-mouseup\nng-click\nYou can add mouse events on any HTML element.\nExample\nIncrease the count variable when the mouse moves over the H1 element:\n<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n<h1 ng-mousemove=\"count \n= count + 1\">Mouse over me!</h1>\n<h2>{{ count }}</h2>\n</div>\n<script>\nvar app = \n angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n$scope.count = 0;\n});\n</script>\n\nThe ng-click Directive\nThe\nng-click\ndirective defines AngularJS code that will be executed when the element is being \nclicked.\nExample\n<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n<button ng-click=\"count \n= count + 1\">Click me!</button>\n<p>{{ count }}</p>\n</div>\n<script>\nvar app = \n angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n$scope.count = 0;\n});\n</script>\n\nYou can also refer to a function:\nExample\n<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n<button ng-click=\"myFunction()\">Click me!</button>\n<p>{{ count }}</p>\n</div>\n<script>\nvar app = \n angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n$scope.count = 0;\n$scope.myFunction = function() {\n$scope.count++;\n}\n});\n</script>\n\nToggle, True/False\nIf you want to show a section of HTML code when a button is clicked, and hide when the button is clicked again, like a dropdown menu, make \nthe button behave like a toggle switch:\nClick Me\nMenu:\nPizza\nPasta\nPesce\nExample\n<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n<button ng-click=\"myFunc()\">Click \n    Me!</button>\n<div ng-show=\"showMe\">\n<h1>Menu:</h1>\n<div>Pizza</div>\n<div>Pasta</div>\n<div>Pesce</div>\n</div>\n</div>\n<script>\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n$scope.showMe = false;\n$scope.myFunc \n    = function() {\n$scope.showMe = !$scope.showMe;\n}\n});\n</script>\n\nThe\nshowMe\nvariable starts out as the Boolean value\nfalse\n.\nThe\nmyFunc\nfunction sets the\nshowMe\nvariable to the \nopposite of what it is, by using the\n!\n(not) operator.\n$event Object\nYou can pass the\n$event\nobject as an argument when calling the \nfunction.\nThe\n$event\nobject contains the browser's event object:\nExample\n<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n<h1 ng-mousemove=\"myFunc($event)\">Mouse \n    Over Me!</h1>\n<p>Coordinates: {{x + ', ' + y}}</p>\n</div>\n<script>\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', \n    function($scope) {\n$scope.myFunc = function(myE) {\n$scope.x = myE.clientX;\n$scope.y \n    = myE.clientY;\n}\n});\n</script>\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n<h1 ng-mousemove=\"count \n= count + 1\">Mouse over me!</h1>\n<h2>{{ count }}</h2>\n</div>\n<script>\nvar app = \n angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n$scope.count = 0;\n});\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n<button ng-click=\"count \n= count + 1\">Click me!</button>\n<p>{{ count }}</p>\n</div>\n<script>\nvar app = \n angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n$scope.count = 0;\n});\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n<button ng-click=\"myFunction()\">Click me!</button>\n<p>{{ count }}</p>\n</div>\n<script>\nvar app = \n angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n$scope.count = 0;\n$scope.myFunction = function() {\n$scope.count++;\n}\n});\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n<button ng-click=\"myFunc()\">Click \n    Me!</button>\n<div ng-show=\"showMe\">\n<h1>Menu:</h1>\n<div>Pizza</div>\n<div>Pasta</div>\n<div>Pesce</div>\n</div>\n</div>\n<script>\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n$scope.showMe = false;\n$scope.myFunc \n    = function() {\n$scope.showMe = !$scope.showMe;\n}\n});\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n<h1 ng-mousemove=\"myFunc($event)\">Mouse \n    Over Me!</h1>\n<p>Coordinates: {{x + ', ' + y}}</p>\n</div>\n<script>\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', \n    function($scope) {\n$scope.myFunc = function(myE) {\n$scope.x = myE.clientX;\n$scope.y \n    = myE.clientY;\n}\n});\n</script>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n<h1 ng-mousemove=\"count \n= count + 1\">Mouse over me!</h1>\n# TODO: Complete this line\n</div>\n<script>\nvar app = \n angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n$scope.count = 0;\n});\n</script>",
      "solution": "<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n<h1 ng-mousemove=\"count \n= count + 1\">Mouse over me!</h1>\n<h2>{{ count }}</h2>\n</div>\n<script>\nvar app = \n angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n$scope.count = 0;\n});\n</script>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n<button ng-click=\"count \n= count + 1\">Click me!</button>\n<p>{{ count }}</p>\n</div>\n# TODO: Complete this line\nvar app = \n angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n$scope.count = 0;\n});\n</script>",
      "solution": "<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n<button ng-click=\"count \n= count + 1\">Click me!</button>\n<p>{{ count }}</p>\n</div>\n<script>\nvar app = \n angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n$scope.count = 0;\n});\n</script>"
    }
  ],
  "related_topics": [
    {
      "id": "d1060d55-1de4-44d6-afcd-b33e5e174f75",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "ac8dfad3-4d28-497e-8c52-291261d336b8",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "bb27654a-ebf9-4521-96e1-0b42f4e5b434",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is mouseleave\nOr when a mouse button?",
      "options": [
        "None of the above.",
        "None of the above.",
        "being \nclicked",
        "clicked on an element"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of mouseleave\nOr when a mouse button is 'clicked on an element'."
    },
    {
      "question": "What is click\ndirective defines AngularJS code that will be executed when the element?",
      "options": [
        "None of the above.",
        "clicked on an element",
        "None of the above.",
        "being \nclicked"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of click\ndirective defines AngularJS code that will be executed when the element is 'being \nclicked'."
    }
  ],
  "summary": "This tutorial covers AngularJS Events concepts and techniques. You'll learn how to use AngularJS Events effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of AngularJS Events and how to apply it in your projects."
}