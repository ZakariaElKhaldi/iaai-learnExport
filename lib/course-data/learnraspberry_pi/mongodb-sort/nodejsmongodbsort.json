{
  "id": "e4c6508c-ea83-479f-9ce4-68cfee892e30",
  "title": "Node.jsMongoDBSort",
  "slug": "nodejsmongodbsort",
  "metadata": {
    "description": "Learn about Node.jsMongoDBSort with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "name",
      "address",
      "sort",
      "result",
      "mongoclient",
      "mongodb",
      "descending",
      "example",
      "function",
      "throw"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnRaspberry Pi",
    "subcategory": "MongoDB Sort"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Node.js\nMongoDB\nSort",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Sort the Result\nUse the\nsort()\nmethod to sort the result in ascending or descending order.\nThe\nsort()\nmethod takes one parameter, an \nobject defining the sorting order.\nExample\nSort the result alphabetically by name:\nvar MongoClient = require('mongodb').MongoClient;\nvar url = \"mongodb://localhost:27017/\";\nMongoClient.connect(url, function(err, db) {\nif (err) throw err;\nvar dbo = db.db(\"mydb\");\nvar mysort = { name: 1 };\ndbo.collection(\"customers\").find()\n.sort(mysort)\n.toArray(function(err, result) {\nif (err) throw err;\nconsole.log(result);\ndb.close();\n});\n});\nRun example \u00bb\nSave the code above in a file called \"demo_sort.js\" and run the file:\nRun \"demo_sort.js\"\nC:\\Users\\\nYour Name\n>node demo_sort.js\nWhich will give you this result:\n[\n{ \n  _id: 58fdbf5c0ef8a50b4cdd9a86, name: 'Amy', \n  address: 'Apple st 652'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a8e, name: 'Ben', address: 'Park Lane 38'},\n{ \n  _id: 58fdbf5c0ef8a50b4cdd9a8a, \n  name: 'Betty', address: 'Green Grass 1'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a90, name: 'Chuck', address: \n  'Main Road 989'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a87, name: 'Hannah', address: \n  'Mountain 21'},\n{ _id: \n  58fdbf5c0ef8a50b4cdd9a84, name: 'John', address: 'Highway 71'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a88, name: 'Michael', address: 'Valley 345'},\n{ _id: \n  58fdbf5c0ef8a50b4cdd9a85, name: 'Peter', address: 'Lowstreet 4'},\n{ _id: \n  58fdbf5c0ef8a50b4cdd9a8b, name: 'Richard', \n  address: 'Sky st 331'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a89, name: 'Sandy', address: 'Ocean blvd 2'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a8c, name: 'Susan', address: 'One way \n  98'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a8d, name: 'Vicky', address: 'Yellow Garden 2'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a91, name: 'Viola', address: 'Sideway \n  1633'},\n{ \n  _id: 58fdbf5c0ef8a50b4cdd9a8f, name: 'William', \n  address: 'Central st 954'}\n]\nSort Descending\nUse the value -1 in the sort object to sort descending.\n{ name: 1 } // ascending\n{ name: -1 } // descending\nExample\nSort the result reverse alphabetically by name:\nvar MongoClient = require('mongodb').MongoClient;\nvar url = \"mongodb://localhost:27017/\";\nMongoClient.connect(url, function(err, db) {\nif (err) throw err;\nvar dbo = db.db(\"mydb\");\nvar mysort = { name: -1 };\ndbo.collection(\"customers\").find()\n.sort(mysort)\n.toArray(function(err, result) {\nif (err) throw err;\nconsole.log(result);\ndb.close();\n});\n});\nRun example \u00bb\nSave the code above in a file called \"demo_sort_desc.js\" and run the file:\nRun \"demo_sort_desc.js\"\nC:\\Users\\\nYour Name\n>node demo_sort_desc.js\nWhich will give you this result:\n[\n{ \n  _id: 58fdbf5c0ef8a50b4cdd9a8f, name: 'William', \n  address: 'Central st 954'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a91, name: 'Viola', address: 'Sideway \n  1633'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a8d, name: 'Vicky', address: 'Yellow Garden 2'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a8c, name: 'Susan', address: 'One way \n  98'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a89, name: 'Sandy', address: 'Ocean blvd 2'},\n{ _id: \n  58fdbf5c0ef8a50b4cdd9a8b, name: 'Richard', \n  address: 'Sky st 331'},\n{ _id: \n  58fdbf5c0ef8a50b4cdd9a85, name: 'Peter', address: 'Lowstreet 4'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a88, name: 'Michael', address: 'Valley 345'},\n{ _id: \n  58fdbf5c0ef8a50b4cdd9a84, name: 'John', address: 'Highway 71'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a87, name: 'Hannah', address: \n  'Mountain 21'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a90, name: 'Chuck', address: \n  'Main Road 989'},\n{ \n  _id: 58fdbf5c0ef8a50b4cdd9a8a, \n  name: 'Betty', address: 'Green Grass 1'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a8e, name: 'Ben', address: 'Park Lane 38'},\n{ \n  _id: 58fdbf5c0ef8a50b4cdd9a86, name: 'Amy', \n  address: 'Apple st 652'}\n]\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "var MongoClient = require('mongodb').MongoClient;\nvar url = \"mongodb://localhost:27017/\";\nMongoClient.connect(url, function(err, db) {\nif (err) throw err;\nvar dbo = db.db(\"mydb\");\nvar mysort = { name: 1 };\ndbo.collection(\"customers\").find()\n.sort(mysort)\n.toArray(function(err, result) {\nif (err) throw err;\nconsole.log(result);\ndb.close();\n});\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "C:\\Users\\\nYour Name\n>node demo_sort.js",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "[\n{ \n  _id: 58fdbf5c0ef8a50b4cdd9a86, name: 'Amy', \n  address: 'Apple st 652'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a8e, name: 'Ben', address: 'Park Lane 38'},\n{ \n  _id: 58fdbf5c0ef8a50b4cdd9a8a, \n  name: 'Betty', address: 'Green Grass 1'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a90, name: 'Chuck', address: \n  'Main Road 989'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a87, name: 'Hannah', address: \n  'Mountain 21'},\n{ _id: \n  58fdbf5c0ef8a50b4cdd9a84, name: 'John', address: 'Highway 71'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a88, name: 'Michael', address: 'Valley 345'},\n{ _id: \n  58fdbf5c0ef8a50b4cdd9a85, name: 'Peter', address: 'Lowstreet 4'},\n{ _id: \n  58fdbf5c0ef8a50b4cdd9a8b, name: 'Richard', \n  address: 'Sky st 331'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a89, name: 'Sandy', address: 'Ocean blvd 2'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a8c, name: 'Susan', address: 'One way \n  98'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a8d, name: 'Vicky', address: 'Yellow Garden 2'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a91, name: 'Viola', address: 'Sideway \n  1633'},\n{ \n  _id: 58fdbf5c0ef8a50b4cdd9a8f, name: 'William', \n  address: 'Central st 954'}\n]",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "var MongoClient = require('mongodb').MongoClient;\nvar url = \"mongodb://localhost:27017/\";\nMongoClient.connect(url, function(err, db) {\nif (err) throw err;\nvar dbo = db.db(\"mydb\");\nvar mysort = { name: -1 };\ndbo.collection(\"customers\").find()\n.sort(mysort)\n.toArray(function(err, result) {\nif (err) throw err;\nconsole.log(result);\ndb.close();\n});\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "C:\\Users\\\nYour Name\n>node demo_sort_desc.js",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "[\n{ \n  _id: 58fdbf5c0ef8a50b4cdd9a8f, name: 'William', \n  address: 'Central st 954'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a91, name: 'Viola', address: 'Sideway \n  1633'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a8d, name: 'Vicky', address: 'Yellow Garden 2'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a8c, name: 'Susan', address: 'One way \n  98'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a89, name: 'Sandy', address: 'Ocean blvd 2'},\n{ _id: \n  58fdbf5c0ef8a50b4cdd9a8b, name: 'Richard', \n  address: 'Sky st 331'},\n{ _id: \n  58fdbf5c0ef8a50b4cdd9a85, name: 'Peter', address: 'Lowstreet 4'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a88, name: 'Michael', address: 'Valley 345'},\n{ _id: \n  58fdbf5c0ef8a50b4cdd9a84, name: 'John', address: 'Highway 71'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a87, name: 'Hannah', address: \n  'Mountain 21'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a90, name: 'Chuck', address: \n  'Main Road 989'},\n{ \n  _id: 58fdbf5c0ef8a50b4cdd9a8a, \n  name: 'Betty', address: 'Green Grass 1'},\n{ _id: 58fdbf5c0ef8a50b4cdd9a8e, name: 'Ben', address: 'Park Lane 38'},\n{ \n  _id: 58fdbf5c0ef8a50b4cdd9a86, name: 'Amy', \n  address: 'Apple st 652'}\n]",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "var MongoClient = require('mongodb').MongoClient;\n# TODO: Complete this line\nMongoClient.connect(url, function(err, db) {\nif (err) throw err;\nvar dbo = db.db(\"mydb\");\nvar mysort = { name: 1 };\ndbo.collection(\"customers\").find()\n.sort(mysort)\n.toArray(function(err, result) {\nif (err) throw err;\nconsole.log(result);\ndb.close();\n});\n});",
      "solution": "var MongoClient = require('mongodb').MongoClient;\nvar url = \"mongodb://localhost:27017/\";\nMongoClient.connect(url, function(err, db) {\nif (err) throw err;\nvar dbo = db.db(\"mydb\");\nvar mysort = { name: 1 };\ndbo.collection(\"customers\").find()\n.sort(mysort)\n.toArray(function(err, result) {\nif (err) throw err;\nconsole.log(result);\ndb.close();\n});\n});"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "C:\\Users\\\n# TODO: Complete this line\n>node demo_sort.js",
      "solution": "C:\\Users\\\nYour Name\n>node demo_sort.js"
    }
  ],
  "related_topics": [
    {
      "id": "0627b600-17db-410f-9296-75223951e1cc",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "a804c837-4556-41fb-8e1f-2b7afdbf86d1",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "33b54fc6-b7ed-4d61-8780-3171c360fa99",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers Node.jsMongoDBSort concepts and techniques. You'll learn how to use Node.jsMongoDBSort effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Node.jsMongoDBSort and how to apply it in your projects."
}