{
  "id": "49929310-63f7-462a-b98e-87b3954403ae",
  "title": "Node.jsMySQLOrder By",
  "slug": "nodejsmysqlorder-by",
  "metadata": {
    "description": "Learn about Node.jsMySQLOrder By with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "name",
      "address",
      "result",
      "order",
      "mysql",
      "sort",
      "desc",
      "example",
      "function",
      "throw"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnRaspberry Pi",
    "subcategory": "MySQL Order By"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Node.js\nMySQL\nOrder By",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Sort the Result\nUse the ORDER BY statement to sort the result in ascending or descending \norder.\nThe ORDER BY keyword sorts the result ascending by default. To sort the \nresult in descending order, use the DESC keyword.\nExample\nSort the result alphabetically by name:\nvar mysql = require('mysql');\nvar con = mysql.createConnection({\nhost: \"localhost\",\nuser: \"yourusername\",\npassword: \"yourpassword\",\ndatabase: \"mydb\"\n});\ncon.connect(function(err) {\nif (err) throw err;\ncon.query(\"SELECT * FROM customers\nORDER BY name\n\", function (err, result) {\nif (err) throw err;\nconsole.log(result);\n});\n});\nRun example \u00bb\nSave the code above in a file called \"demo_db_orderby.js\" and run the file:\nRun \"demo_db_orderby.js\"\nC:\\Users\\\nYour Name\n>node demo_db_orderby.js\nWhich will give you this result:\n[\n{ id: 3, name: 'Amy', \n  address: 'Apple st 652'},\n{ id: 11, name: 'Ben', address: 'Park Lane 38'},\n{ id: 7, \n  name: 'Betty', address: 'Green Grass 1'},\n{ id: 13, name: 'Chuck', address: \n  'Main Road 989'},\n{ id: 4, name: 'Hannah', address: \n  'Mountain 21'},\n{ id: 1, name: 'John', address: 'Higheay 71'},\n{ id: 5, name: 'Michael', address: 'Valley 345'},\n{ id: \n  2, name: 'Peter', address: 'Lowstreet 4'},\n{ id: 8, name: 'Richard', \n  address: 'Sky st 331'},\n{ id: 6, name: 'Sandy', address: 'Ocean blvd 2'},\n{ id: 9, name: 'Susan', address: 'One way \n  98'},\n{ id: 10, name: 'Vicky', address: 'Yellow Garden 2'},\n{ id: 14, name: 'Viola', address: 'Sideway \n  1633'},\n{ id: 12, name: 'William', \n  address: 'Central st 954'}\n]\nORDER BY DESC\nUse the DESC keyword to sort the result in a descending order.\nExample\nSort the result reverse alphabetically by name:\nvar mysql = require('mysql');\nvar con = mysql.createConnection({\nhost: \"localhost\",\nuser: \"yourusername\",\npassword: \"yourpassword\",\ndatabase: \"mydb\"\n});\ncon.connect(function(err) {\nif (err) throw err;\ncon.query(\"SELECT * FROM customers\nORDER BY name DESC\n\", function (err, result) {\nif (err) throw err;\nconsole.log(result);\n});\n});\nRun example \u00bb\nSave the code above in a file called \"demo_db_orderby_desc.js\" and run the file:\nRun \"demo_db_orderby_desc.js\"\nC:\\Users\\\nYour Name\n>node demo_db_orderby_desc.js\nWhich will give you this result:\n[\n{ id: 12, name: 'William', \n  address: 'Central st 954'},\n{ id: 14, name: 'Viola', address: 'Sideway \n  1633'},\n{ id: 10, name: 'Vicky', address: 'Yellow Garden 2'},\n{ id: 9, name: 'Susan', address: 'One way \n  98'},\n{ id: 6, name: 'Sandy', address: 'Ocean blvd 2'},\n{ id: 8, name: 'Richard', \n  address: 'Sky st 331'},\n{ id: \n  2, name: 'Peter', address: 'Lowstreet 4'},\n{ id: 5, name: 'Michael', address: 'Valley 345'},\n{ id: 1, name: 'John', address: 'Higheay 71'},\n{ id: 4, name: 'Hannah', address: \n  'Mountain 21'},\n{ id: 13, name: 'Chuck', address: \n  'Main Road 989'},\n{ id: 7, \n  name: 'Betty', address: 'Green Grass 1'},\n{ id: 11, name: 'Ben', address: 'Park Lane 38'},\n{ id: 3, name: 'Amy', \n  address: 'Apple st 652'}\n]\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "var mysql = require('mysql');\nvar con = mysql.createConnection({\nhost: \"localhost\",\nuser: \"yourusername\",\npassword: \"yourpassword\",\ndatabase: \"mydb\"\n});\ncon.connect(function(err) {\nif (err) throw err;\ncon.query(\"SELECT * FROM customers\nORDER BY name\n\", function (err, result) {\nif (err) throw err;\nconsole.log(result);\n});\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "C:\\Users\\\nYour Name\n>node demo_db_orderby.js",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "[\n{ id: 3, name: 'Amy', \n  address: 'Apple st 652'},\n{ id: 11, name: 'Ben', address: 'Park Lane 38'},\n{ id: 7, \n  name: 'Betty', address: 'Green Grass 1'},\n{ id: 13, name: 'Chuck', address: \n  'Main Road 989'},\n{ id: 4, name: 'Hannah', address: \n  'Mountain 21'},\n{ id: 1, name: 'John', address: 'Higheay 71'},\n{ id: 5, name: 'Michael', address: 'Valley 345'},\n{ id: \n  2, name: 'Peter', address: 'Lowstreet 4'},\n{ id: 8, name: 'Richard', \n  address: 'Sky st 331'},\n{ id: 6, name: 'Sandy', address: 'Ocean blvd 2'},\n{ id: 9, name: 'Susan', address: 'One way \n  98'},\n{ id: 10, name: 'Vicky', address: 'Yellow Garden 2'},\n{ id: 14, name: 'Viola', address: 'Sideway \n  1633'},\n{ id: 12, name: 'William', \n  address: 'Central st 954'}\n]",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "var mysql = require('mysql');\nvar con = mysql.createConnection({\nhost: \"localhost\",\nuser: \"yourusername\",\npassword: \"yourpassword\",\ndatabase: \"mydb\"\n});\ncon.connect(function(err) {\nif (err) throw err;\ncon.query(\"SELECT * FROM customers\nORDER BY name DESC\n\", function (err, result) {\nif (err) throw err;\nconsole.log(result);\n});\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "C:\\Users\\\nYour Name\n>node demo_db_orderby_desc.js",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "[\n{ id: 12, name: 'William', \n  address: 'Central st 954'},\n{ id: 14, name: 'Viola', address: 'Sideway \n  1633'},\n{ id: 10, name: 'Vicky', address: 'Yellow Garden 2'},\n{ id: 9, name: 'Susan', address: 'One way \n  98'},\n{ id: 6, name: 'Sandy', address: 'Ocean blvd 2'},\n{ id: 8, name: 'Richard', \n  address: 'Sky st 331'},\n{ id: \n  2, name: 'Peter', address: 'Lowstreet 4'},\n{ id: 5, name: 'Michael', address: 'Valley 345'},\n{ id: 1, name: 'John', address: 'Higheay 71'},\n{ id: 4, name: 'Hannah', address: \n  'Mountain 21'},\n{ id: 13, name: 'Chuck', address: \n  'Main Road 989'},\n{ id: 7, \n  name: 'Betty', address: 'Green Grass 1'},\n{ id: 11, name: 'Ben', address: 'Park Lane 38'},\n{ id: 3, name: 'Amy', \n  address: 'Apple st 652'}\n]",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "var mysql = require('mysql');\nvar con = mysql.createConnection({\nhost: \"localhost\",\nuser: \"yourusername\",\npassword: \"yourpassword\",\ndatabase: \"mydb\"\n});\ncon.connect(function(err) {\nif (err) throw err;\ncon.query(\"SELECT * FROM customers\nORDER BY name\n# TODO: Complete this line\nif (err) throw err;\nconsole.log(result);\n});\n});",
      "solution": "var mysql = require('mysql');\nvar con = mysql.createConnection({\nhost: \"localhost\",\nuser: \"yourusername\",\npassword: \"yourpassword\",\ndatabase: \"mydb\"\n});\ncon.connect(function(err) {\nif (err) throw err;\ncon.query(\"SELECT * FROM customers\nORDER BY name\n\", function (err, result) {\nif (err) throw err;\nconsole.log(result);\n});\n});"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "C:\\Users\\\nYour Name\n# TODO: Complete this line",
      "solution": "C:\\Users\\\nYour Name\n>node demo_db_orderby.js"
    }
  ],
  "related_topics": [
    {
      "id": "6cdd922b-667d-4f95-ba12-20e99de3d1bf",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "01f0f223-40c1-49c5-9ced-e1505544ac2d",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "e0726235-8fca-4e74-a661-48a73e8ec029",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers Node.jsMySQLOrder By concepts and techniques. You'll learn how to use Node.jsMySQLOrder By effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Node.jsMySQLOrder By and how to apply it in your projects."
}