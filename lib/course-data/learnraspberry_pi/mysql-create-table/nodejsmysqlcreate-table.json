{
  "id": "e2cfab6b-6bc6-4f09-b5c4-53d65b858311",
  "title": "Node.jsMySQLCreate Table",
  "slug": "nodejsmysqlcreate-table",
  "metadata": {
    "description": "Learn about Node.jsMySQLCreate Table with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "table",
      "mysql",
      "create",
      "example",
      "function",
      "throw",
      "console",
      "primary",
      "name",
      "database"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnRaspberry Pi",
    "subcategory": "MySQL Create Table"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Node.js\nMySQL\nCreate Table",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Creating a Table\nTo create a table in MySQL, use the \"CREATE TABLE\" statement.\nMake sure you define the name of the database when you create the connection:\nExample\nCreate a table named \"customers\":\nvar mysql = require('mysql');\nvar con = mysql.createConnection({\nhost: \"localhost\",\nuser: \"\nyourusername\n\",\npassword: \"\nyourpassword\n\",\ndatabase: \"mydb\"\n});\ncon.connect(function(err) {\nif (err) throw err;\nconsole.log(\"Connected!\");\nvar sql = \"\nCREATE TABLE customers (name VARCHAR(255), \n  address VARCHAR(255)\n)\";\ncon.query(sql, function (err, result) {\nif (err) \n  throw err;\nconsole.log(\"Table created\");\n});\n});\nRun example \u00bb\nSave the code above in a file called \"demo_create_table.js\" and run the file:\nRun \"demo_create_table.js\"\nC:\\Users\\\nYour Name\n>node demo_create_table.js\nWhich will give you this result:\nConnected!\nTable created\nPrimary Key\nWhen creating a table, you should also create a column with a unique key for each \nrecord.\nThis can be done by defining a column as \"INT AUTO_INCREMENT PRIMARY KEY\" which will insert a \nunique number for each record. Starting at 1, and increased by one for each \nrecord.\nExample\nCreate primary key when creating the table:\nvar mysql = require('mysql');\nvar con = mysql.createConnection({\nhost: \"localhost\",\nuser: \"\nyourusername\n\",\npassword: \"\nyourpassword\n\",\ndatabase: \"mydb\"\n});\ncon.connect(function(err) {\nif (err) throw err;\nconsole.log(\"Connected!\");\nvar sql = \"CREATE TABLE customers (\nid INT AUTO_INCREMENT PRIMARY \n  KEY\n, name VARCHAR(255), \n  address VARCHAR(255))\";\ncon.query(sql, function (err, result) {\nif (err) \n  throw err;\nconsole.log(\"Table created\");\n});\n});\nRun example \u00bb\nIf the table already exists, use the ALTER TABLE keyword:\nExample\nCreate primary key on an existing table:\nvar mysql = require('mysql');\nvar con = mysql.createConnection({\nhost: \"localhost\",\nuser: \"\nyourusername\n\",\npassword: \"\nyourpassword\n\",\ndatabase: \"mydb\"\n});\ncon.connect(function(err) {\nif (err) throw err;\nconsole.log(\"Connected!\");\nvar sql = \"\nALTER TABLE customers ADD COLUMN id INT AUTO_INCREMENT \n  PRIMARY KEY\n\";\ncon.query(sql, function (err, result) {\nif (err) \n  throw err;\nconsole.log(\"Table altered\");\n});\n});\nRun example \u00bb\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "var mysql = require('mysql');\nvar con = mysql.createConnection({\nhost: \"localhost\",\nuser: \"\nyourusername\n\",\npassword: \"\nyourpassword\n\",\ndatabase: \"mydb\"\n});\ncon.connect(function(err) {\nif (err) throw err;\nconsole.log(\"Connected!\");\nvar sql = \"\nCREATE TABLE customers (name VARCHAR(255), \n  address VARCHAR(255)\n)\";\ncon.query(sql, function (err, result) {\nif (err) \n  throw err;\nconsole.log(\"Table created\");\n});\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "C:\\Users\\\nYour Name\n>node demo_create_table.js",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "Connected!\nTable created",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "var mysql = require('mysql');\nvar con = mysql.createConnection({\nhost: \"localhost\",\nuser: \"\nyourusername\n\",\npassword: \"\nyourpassword\n\",\ndatabase: \"mydb\"\n});\ncon.connect(function(err) {\nif (err) throw err;\nconsole.log(\"Connected!\");\nvar sql = \"CREATE TABLE customers (\nid INT AUTO_INCREMENT PRIMARY \n  KEY\n, name VARCHAR(255), \n  address VARCHAR(255))\";\ncon.query(sql, function (err, result) {\nif (err) \n  throw err;\nconsole.log(\"Table created\");\n});\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "var mysql = require('mysql');\nvar con = mysql.createConnection({\nhost: \"localhost\",\nuser: \"\nyourusername\n\",\npassword: \"\nyourpassword\n\",\ndatabase: \"mydb\"\n});\ncon.connect(function(err) {\nif (err) throw err;\nconsole.log(\"Connected!\");\nvar sql = \"\nALTER TABLE customers ADD COLUMN id INT AUTO_INCREMENT \n  PRIMARY KEY\n\";\ncon.query(sql, function (err, result) {\nif (err) \n  throw err;\nconsole.log(\"Table altered\");\n});\n});",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "var mysql = require('mysql');\nvar con = mysql.createConnection({\nhost: \"localhost\",\nuser: \"\nyourusername\n\",\npassword: \"\nyourpassword\n\",\n# TODO: Complete this line\n});\ncon.connect(function(err) {\nif (err) throw err;\nconsole.log(\"Connected!\");\nvar sql = \"\nCREATE TABLE customers (name VARCHAR(255), \n  address VARCHAR(255)\n)\";\ncon.query(sql, function (err, result) {\nif (err) \n  throw err;\nconsole.log(\"Table created\");\n});\n});",
      "solution": "var mysql = require('mysql');\nvar con = mysql.createConnection({\nhost: \"localhost\",\nuser: \"\nyourusername\n\",\npassword: \"\nyourpassword\n\",\ndatabase: \"mydb\"\n});\ncon.connect(function(err) {\nif (err) throw err;\nconsole.log(\"Connected!\");\nvar sql = \"\nCREATE TABLE customers (name VARCHAR(255), \n  address VARCHAR(255)\n)\";\ncon.query(sql, function (err, result) {\nif (err) \n  throw err;\nconsole.log(\"Table created\");\n});\n});"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "C:\\Users\\\n# TODO: Complete this line\n>node demo_create_table.js",
      "solution": "C:\\Users\\\nYour Name\n>node demo_create_table.js"
    }
  ],
  "related_topics": [
    {
      "id": "9b4198fa-eefe-4c96-89a0-23c3fe162836",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "e25ff824-a03e-4792-ae22-5cb1c81917c3",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "b1a54900-afde-4f82-9892-d2a21c7da5db",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers Node.jsMySQLCreate Table concepts and techniques. You'll learn how to use Node.jsMySQLCreate Table effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Node.jsMySQLCreate Table and how to apply it in your projects."
}