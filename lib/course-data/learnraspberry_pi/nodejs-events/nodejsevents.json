{
  "id": "b0a388dd-7a4f-46db-b179-23df664f8117",
  "title": "Node.jsEvents",
  "slug": "nodejsevents",
  "metadata": {
    "description": "Learn about Node.jsEvents with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "events",
      "event",
      "eventemitter",
      "node",
      "object",
      "example",
      "scream",
      "fire",
      "require",
      "file"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnRaspberry Pi",
    "subcategory": "Node.js Events"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Node.js\nEvents",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Node.js is perfect for event-driven applications.\nEvents in Node.js\nEvery action on a computer is an event. Like when a connection is made or a \nfile is opened.\nObjects in Node.js can fire events, like the readStream object fires \nevents when opening and closing a file:\nExample\nvar fs = require('fs');\nvar rs = fs.createReadStream('./demofile.txt');\nrs.on('open', function () {\nconsole.log('The file is open');\n});\nRun example \u00bb\nEvents Module\nNode.js has a \nbuilt-in module, called \"Events\", where you can create-, fire-, and listen for- your own \nevents.\nTo include the built-in Events module use the\nrequire()\nmethod. In addition, all event properties and methods are an instance of an \nEventEmitter object. To be able to access these properties and methods, create \nan EventEmitter object:\nvar events = require('events');\nvar eventEmitter = new events.EventEmitter();\nThe EventEmitter Object\nYou can assign event handlers to your own events with the EventEmitter \nobject.\nIn the example below we have created a function that will be \nexecuted when a \"scream\" event is fired.\nTo fire an event, use the\nemit()\nmethod.\nExample\nvar events = require('events');\nvar eventEmitter = new events.EventEmitter();\n//Create an event handler:\nvar myEventHandler = function () {\nconsole.log('I hear a scream!');\n}\n//Assign the event handler to an \n  event:\neventEmitter.on('scream', myEventHandler);\n//Fire the \n  'scream' event:\neventEmitter.emit('scream');\nRun example \u00bb\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "var fs = require('fs');\nvar rs = fs.createReadStream('./demofile.txt');\nrs.on('open', function () {\nconsole.log('The file is open');\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "var events = require('events');\nvar eventEmitter = new events.EventEmitter();",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "var events = require('events');\nvar eventEmitter = new events.EventEmitter();\n//Create an event handler:\nvar myEventHandler = function () {\nconsole.log('I hear a scream!');\n}\n//Assign the event handler to an \n  event:\neventEmitter.on('scream', myEventHandler);\n//Fire the \n  'scream' event:\neventEmitter.emit('scream');",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "var fs = require('fs');\nvar rs = fs.createReadStream('./demofile.txt');\n# TODO: Complete this line\nconsole.log('The file is open');\n});",
      "solution": "var fs = require('fs');\nvar rs = fs.createReadStream('./demofile.txt');\nrs.on('open', function () {\nconsole.log('The file is open');\n});"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "var events = require('events');\nvar eventEmitter = new events.EventEmitter();"
    }
  ],
  "related_topics": [
    {
      "id": "93a83fd5-0d33-4af2-901c-83fb34544f17",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "87a8e34c-9e55-4c62-b0e3-973ae1c985c7",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "5e182f10-aca3-49e6-8eca-15b66f747973",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is js?",
      "options": [
        "perfect for event-driven applications",
        "None of the above.",
        "None of the above.",
        "an event"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of js is 'perfect for event-driven applications'."
    },
    {
      "question": "What is js\nEvery action on a computer?",
      "options": [
        "perfect for event-driven applications",
        "None of the above.",
        "None of the above.",
        "an event"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of js\nEvery action on a computer is 'an event'."
    }
  ],
  "summary": "This tutorial covers Node.jsEvents concepts and techniques. You'll learn how to use Node.jsEvents effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Node.jsEvents and how to apply it in your projects."
}