{
  "id": "935403f8-9120-48ed-9dd6-b7332110e273",
  "title": "HTMLAttributeReference",
  "slug": "htmlattributereference",
  "metadata": {
    "description": "Learn about HTMLAttributeReference with clear explanations and practical examples.",
    "keywords": [
      "specifies",
      "script",
      "element",
      "input",
      "video",
      "audio",
      "visible",
      "elements",
      "form",
      "attributes"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 13,
    "category": "LearnHTML",
    "subcategory": "HTML Attributes"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "HTML\nAttribute\nReference",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "HTML Attribute Reference\nThe table below lists all HTML attributes and what elements they can be used within:\nAttribute\nBelongs to\nDescription\naccept\n<input>\nSpecifies the types of files that the server accepts (only for type=\"file\")\naccept-charset\n<form>\nSpecifies the character encodings that are to be used for the form \nsubmission\naccesskey\nGlobal Attributes\nSpecifies a shortcut key to activate/focus an element\naction\n<form>\nSpecifies where to send the form-data when a form is submitted\nalign\nNot supported in HTML 5.\nSpecifies the alignment according to surrounding elements. Use CSS instead\nalt\n<area>\n,\n<img>\n,\n<input>\nSpecifies an alternate text when the original element fails to display\nasync\n<script>\nSpecifies that the script is executed asynchronously (only for external \nscripts)\nautocomplete\n<form>\n,\n<input>\nSpecifies whether the <form> or the <input> element should have autocomplete \nenabled\nautofocus\n<button>\n,\n<input>\n,\n<select>\n,\n<textarea>\nSpecifies that the element should automatically get focus when the page \nloads\nautoplay\n<audio>\n,\n<video>\nSpecifies that the audio/video will start playing as soon as it is ready\nbgcolor\nNot supported in HTML 5.\nSpecifies the background color of an element. Use CSS instead\nborder\nNot supported in HTML 5.\nSpecifies the width of the border of an element. Use CSS instead\ncharset\n<meta>\n,\n<script>\nSpecifies the character encoding\nchecked\n<input>\nSpecifies that an <input> element should be pre-selected when the page loads \n(for type=\"checkbox\" or type=\"radio\")\ncite\n<blockquote>,\n<del>\n,\n<ins>\n, <q>\nSpecifies a URL which explains the quote/deleted/inserted text\nclass\nGlobal Attributes\nSpecifies one or more class names for an element (refers to a class in a \nstyle sheet)\ncolor\nNot supported in HTML 5.\nSpecifies the text color of an element. Use CSS instead\ncols\n<textarea>\nSpecifies the visible width of a text area\ncolspan\n<td>\n,\n<th>\nSpecifies the number of columns a table cell should span\ncontent\n<meta>\nGives the value associated with the http-equiv or name attribute\ncontenteditable\nGlobal Attributes\nSpecifies whether the content of an element is editable or not\ncontrols\n<audio>\n,\n<video>\nSpecifies that audio/video controls should be displayed (such as a \nplay/pause button etc.)\ncoords\n<area>\nSpecifies the coordinates of the area\ndata\n<object>\nSpecifies the URL of the resource to be used by the object\ndata-*\nGlobal Attributes\nUsed to store custom data private to the page or application\ndatetime\n<del>\n,\n<ins>\n,\n<time>\nSpecifies the date and time\ndefault\n<track>\nSpecifies that the track is to be enabled if the user's preferences do not \nindicate that another track would be more appropriate\ndefer\n<script>\nSpecifies that the script is executed when the page has finished parsing \n(only for external scripts)\ndir\nGlobal Attributes\nSpecifies the text direction for the content in an element\ndirname\n<input>\n,\n<textarea>\nSpecifies that the text direction will be submitted\ndisabled\n<button>\n,\n<fieldset>\n,\n<input>\n, <optgroup>,\n<option>\n,\n<select>\n,\n<textarea>\nSpecifies that the specified element/group of elements should be disabled\ndownload\n<a>\n,\n<area>\nSpecifies that the target will be downloaded when a user clicks on the \nhyperlink\ndraggable\nGlobal Attributes\nSpecifies whether an element is draggable or not\nenctype\n<form>\nSpecifies how the form-data should be encoded when submitting it to the \nserver (only for method=\"post\")\nenterkeyhint\nGlobal Attributes\nSpecifies the text of the enter-key on a virtual keyboard\nfor\n<label>,\n<output>\nSpecifies which form element(s) a label/calculation is bound to\nform\n<button>\n,\n<fieldset>\n,\n<input>\n, <label>,\n<meter>\n,\n<object>\n,\n<output>\n,\n<select>\n,\n<textarea>\nSpecifies the name of the form the element belongs to\nformaction\n<button>\n,\n<input>\nSpecifies where to send the form-data when a form is submitted. Only for \ntype=\"submit\"\nheaders\n<td>\n,\n<th>\nSpecifies one or more headers cells a cell is related to\nheight\n<canvas>,\n<embed>\n,\n<iframe>\n,\n<img>\n,\n<input>\n,\n<object>\n,\n<video>\nSpecifies the height of the element\nhidden\nGlobal Attributes\nSpecifies that an element is not yet, or is no longer, relevant\nhigh\n<meter>\nSpecifies the range that is considered to be a high value\nhref\n<a>\n,\n<area>\n,\n<base>\n,\n<link>\nSpecifies the URL of the page the link goes to\nhreflang\n<a>\n,\n<area>\n,\n<link>\nSpecifies the language of the linked document\nhttp-equiv\n<meta>\nProvides an HTTP header for the information/value of the content attribute\nid\nGlobal Attributes\nSpecifies a unique id for an element\ninert\nGlobal Attributes\nSpecifies that the browser should ignore this section\ninputmode\nGlobal Attributes\nSpecifies the mode of a virtual keyboard\nismap\n<img>\nSpecifies an image as a server-side image map\nkind\n<track>\nSpecifies the kind of text track\nlabel\n<track>\n,\n<option>\n,\n<optgroup>\nSpecifies the title of the text track\nlang\nGlobal Attributes\nSpecifies the language of the element's content\nlist\n<input>\nRefers to a <datalist> element that contains pre-defined options for an <input> \nelement\nloop\n<audio>\n,\n<video>\nSpecifies that the audio/video will start over again, every time it is \nfinished\nlow\n<meter>\nSpecifies the range that is considered to be a low value\nmax\n<input>\n,\n<meter>\n,\n<progress>\nSpecifies the maximum value\nmaxlength\n<input>\n,\n<textarea>\nSpecifies the maximum number of characters allowed in an element\nmedia\n<a>\n,\n<area>\n,\n<link>\n,\n<source>\n,\n<style>\nSpecifies what media/device the linked document is optimized for\nmethod\n<form>\nSpecifies the HTTP method to use when sending form-data\nmin\n<input>\n,\n<meter>\nSpecifies a minimum value\nmultiple\n<input>\n,\n<select>\nSpecifies that a user can enter more than one value\nmuted\n<video>\n,\n<audio>\nSpecifies that the audio output of the video should be muted\nname\n<button>\n,\n<fieldset>\n,\n<form>\n,\n<iframe>\n,\n<input>\n,\n<map>\n,\n<meta>\n,\n<object>\n,\n<output>\n,\n<param>\n,\n<select>\n,\n<textarea>\nSpecifies the name of the element\nnovalidate\n<form>\nSpecifies that the form should not be validated when submitted\nonabort\n<audio>\n,\n<embed>\n,\n<img>\n,\n<object>\n,\n<video>\nScript to be run on abort\nonafterprint\n<body>\nScript to be run after the document is printed\nonbeforeprint\n<body>\nScript to be run before the document is printed\nonbeforeunload\n<body>\nScript to be run when the document is about to be unloaded\nonblur\nAll visible elements.\nScript to be run when the element loses focus\noncanplay\n<audio>\n,\n<embed>\n,\n<object>\n,\n<video>\nScript to be run when a file is ready to start playing (when it has buffered \nenough to begin)\noncanplaythrough\n<audio>\n,\n<video>\nScript to be run when a file can be played all the way to the end without \npausing for buffering\nonchange\nAll visible elements.\nScript to be run when the value of the element is changed\nonclick\nAll visible elements.\nScript to be run when the element is being clicked\noncontextmenu\nAll visible elements.\nScript to be run when a context menu is triggered\noncopy\nAll visible elements.\nScript to be run when the content of the element is being copied\noncuechange\n<track>\nScript to be run when the cue changes in a\n<track>\nelement\noncut\nAll visible elements.\nScript to be run when the content of the element is being cut\nondblclick\nAll visible elements.\nScript to be run when the element is being double-clicked\nondrag\nAll visible elements.\nScript to be run when the element is being dragged\nondragend\nAll visible elements.\nScript to be run at the end of a drag operation\nondragenter\nAll visible elements.\nScript to be run when an element has been dragged to a valid drop target\nondragleave\nAll visible elements.\nScript to be run when an element leaves a valid drop target\nondragover\nAll visible elements.\nScript to be run when an element is being dragged over a valid drop target\nondragstart\nAll visible elements.\nScript to be run at the start of a drag operation\nondrop\nAll visible elements.\nScript to be run when dragged element is being dropped\nondurationchange\n<audio>\n,\n<video>\nScript to be run when the length of the media changes\nonemptied\n<audio>\n,\n<video>\nScript to be run when something bad happens and the file is suddenly \nunavailable (like unexpectedly disconnects)\nonended\n<audio>\n,\n<video>\nScript to be run when the media has reach the end (a useful event for \nmessages like \"thanks for listening\")\nonerror\n<audio>\n,\n<body>\n,\n<embed>\n,\n<img>\n,\n<object>\n,\n<script>\n,\n<style>\n,\n<video>\nScript to be run when an error occurs\nonfocus\nAll visible elements.\nScript to be run when the element gets focus\nonhashchange\n<body>\nScript to be run when there has been changes to the anchor part of the a URL\noninput\nAll visible elements.\nScript to be run when the element gets user input\noninvalid\nAll visible elements.\nScript to be run when the element is invalid\nonkeydown\nAll visible elements.\nScript to be run when a user is pressing a key\nonkeypress\nAll visible elements.\nScript to be run when a user presses a key\nonkeyup\nAll visible elements.\nScript to be run when a user releases a key\nonload\n<body>\n,\n<iframe>\n,\n<img>\n,\n<input>\n,\n<link>\n,\n<script>\n,\n<style>\nScript to be run when the element is finished loading\nonloadeddata\n<audio>\n,\n<video>\nScript to be run when media data is loaded\nonloadedmetadata\n<audio>\n,\n<video>\nScript to be run when meta data (like dimensions and duration) are loaded\nonloadstart\n<audio>\n,\n<video>\nScript to be run just as the file begins to load before anything is actually \nloaded\nonmousedown\nAll visible elements.\nScript to be run when a mouse button is pressed down on an element\nonmousemove\nAll visible elements.\nScript to be run as long as the\u00a0 mouse pointer is moving over an element\nonmouseout\nAll visible elements.\nScript to be run when a mouse pointer moves out of an element\nonmouseover\nAll visible elements.\nScript to be run when a mouse pointer moves over an element\nonmouseup\nAll visible elements.\nScript to be run when a mouse button is released over an element\nonmousewheel\nAll visible elements.\nScript to be run when a mouse wheel is being scrolled over an element\nonoffline\n<body>\nScript to be run when the browser starts to work offline\nononline\n<body>\nScript to be run when the browser starts to work online\nonpagehide\n<body>\nScript to be run when a user navigates away from a page\nonpageshow\n<body>\nScript to be run when a user navigates to a page\nonpaste\nAll visible elements.\nScript to be run when the user pastes some content in an element\nonpause\n<audio>\n,\n<video>\nScript to be run when the media is paused either by the user or \nprogrammatically\nonplay\n<audio>\n,\n<video>\nScript to be run when the media has started playing\nonplaying\n<audio>\n,\n<video>\nScript to be run when the media has started playing\nonpopstate\n<body>\nScript to be run when the window's history changes.\nonprogress\n<audio>\n,\n<video>\nScript to be run when the browser is in the process of getting the media \ndata\nonratechange\n<audio>\n,\n<video>\nScript to be run each time the playback rate changes (like when a user \nswitches to a slow motion or fast forward mode).\nonreset\n<form>\nScript to be run when a reset button in a form is clicked.\nonresize\n<body>\nScript to be run when the browser window is being resized.\nonscroll\nAll visible elements.\nScript to be run when an element's scrollbar is being scrolled\nonsearch\n<input>\nScript to be run when the user writes something in a search field (for \n<input type=\"search\">)\nonseeked\n<audio>\n,\n<video>\nScript to be run when the seeking attribute is set to false indicating that \nseeking has ended\nonseeking\n<audio>\n,\n<video>\nScript to be run when the seeking attribute is set to true indicating that \nseeking is active\nonselect\nAll visible elements.\nScript to be run when the element gets selected\nonstalled\n<audio>\n,\n<video>\nScript to be run when the browser is unable to fetch the media data for \nwhatever reason\nonstorage\n<body>\nScript to be run when a Web Storage area is updated\nonsubmit\n<form>\nScript to be run when a form is submitted\nonsuspend\n<audio>\n,\n<video>\nScript to be run when fetching the media data is stopped before it is \ncompletely loaded for whatever reason\nontimeupdate\n<audio>\n,\n<video>\nScript to be run when the playing position has changed (like when the user \nfast forwards to a different point in the media)\nontoggle\n<details>\nScript to be run when the user opens or closes the <details> element\nonunload\n<body>\nScript to be run when a page has unloaded (or the browser window has been \nclosed)\nonvolumechange\n<audio>\n,\n<video>\nScript to be run each time the volume of a video/audio has been changed\nonwaiting\n<audio>\n,\n<video>\nScript to be run when the media has paused but is expected to resume (like \nwhen the media pauses to buffer more data)\nonwheel\nAll visible elements.\nScript to be run when the mouse wheel rolls up or down over an element\nopen\n<details>\nSpecifies that the details should be visible (open) to the user\noptimum\n<meter>\nSpecifies what value is the optimal value for the gauge\npattern\n<input>\nSpecifies a regular expression that an <input> element's value is checked \nagainst\nplaceholder\n<input>\n,\n<textarea>\nSpecifies a short hint that describes the expected value of the element\npopover\nGlobal Attributes\nSpecifies a popover element\npopovertarget\n<button>\n,\n<input>\nSpecifies which popover element to invoked\npopovertargetaction\n<button>\n,\n<input>\nSpecifies what happens to the popover element when the button is clicked\nposter\n<video>\nSpecifies an image to be shown while the video is downloading, or until the \nuser hits the play button\npreload\n<audio>\n,\n<video>\nSpecifies if and how the author thinks the audio/video should be loaded when \nthe page loads\nreadonly\n<input>\n,\n<textarea>\nSpecifies that the element is read-only\nrel\n<a>\n,\n<area>\n,\n<form>\n,\n<link>\nSpecifies the relationship between the current document and the linked \ndocument\nrequired\n<input>\n,\n<select>\n,\n<textarea>\nSpecifies that the element must be filled out before submitting the form\nreversed\n<ol>\nSpecifies that the list order should be descending (9,8,7...)\nrows\n<textarea>\nSpecifies the visible number of lines in a text area\nrowspan\n<td>\n,\n<th>\nSpecifies the number of rows a table cell should span\nsandbox\n<iframe>\nEnables an extra set of restrictions for the content in an <iframe>\nscope\n<th>\nSpecifies whether a header cell is a header for a column, row, or group of \ncolumns or rows\nselected\n<option>\nSpecifies that an option should be pre-selected when the page loads\nshape\n<area>\nSpecifies the shape of the area\nsize\n<input>\n,\n<select>\nSpecifies the width, in characters (for <input>) or specifies the number of \nvisible options (for <select>)\nsizes\n<img>\n,\n<link>\n,\n<source>\nSpecifies the size of the linked resource\nspan\n<col>\n,\n<colgroup>\nSpecifies the number of columns to span\nspellcheck\nGlobal Attributes\nSpecifies whether the element is to have its spelling and grammar checked or \nnot\nsrc\n<audio>\n,\n<embed>\n,\n<iframe>\n,\n<img>\n,\n<input>\n,\n<script>\n,\n<source>\n,\n<track>\n,\n<video>\nSpecifies the URL of the media file\nsrcdoc\n<iframe>\nSpecifies the HTML content of the page to show in the <iframe>\nsrclang\n<track>\nSpecifies the language of the track text data (required if kind=\"subtitles\")\nsrcset\n<img>\n,\n<source>\nSpecifies the URL of the image to use in different situations\nstart\n<ol>\nSpecifies the start value of an ordered list\nstep\n<input>\nSpecifies the legal number intervals for an input field\nstyle\nGlobal Attributes\nSpecifies an inline CSS style for an element\ntabindex\nGlobal Attributes\nSpecifies the tabbing order of an element\ntarget\n<a>\n,\n<area>\n,\n<base>\n,\n<form>\nSpecifies the target for where to open the linked document or where to \nsubmit the form\ntitle\nGlobal Attributes\nSpecifies extra information about an element\ntranslate\nGlobal Attributes\nSpecifies whether the content of an element should be translated or not\ntype\n<a>\n,\n<button>\n,\n<embed>\n,\n<input>\n,\n<link>\n,\n<menu>\n,\n<object>\n,\n<script>\n,\n<source>\n,\n<style>\nSpecifies the type of element\nusemap\n<img>\n,\n<object>\nSpecifies an image as a client-side image map\nvalue\n<button>\n,\n<input>\n,\n<li>\n,\n<option>\n,\n<meter>\n,\n<progress>\n,\n<param>\nSpecifies the value of the element\nwidth\n<canvas>,\n<embed>\n,\n<iframe>\n,\n<img>\n,\n<input>\n,\n<object>\n,\n<video>\nSpecifies the width of the element\nwrap\n<textarea>\nSpecifies how the text in a text area is to be wrapped when submitted in a \nform\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "aab26009-5d10-4b70-906f-82bc57cb586c",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "49f61b20-d5db-4879-abd8-41298866140f",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "cc2a2093-45b2-4629-a5f7-07be1ba74437",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Specifies the character encodings that?",
      "options": [
        "None of the above.",
        "None of the above.",
        "to be used for the form \nsubmission\naccesskey\nGlobal Attributes\nSpecifies a shortcut key to activate/focus an element\naction\n<form>\nSpecifies where to send the form-data when a form is submitted\nalign\nNot supported in HTML 5",
        "executed asynchronously (only for external \nscripts)\nautocomplete\n<form>"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Specifies the character encodings that is 'to be used for the form \nsubmission\naccesskey\nGlobal Attributes\nSpecifies a shortcut key to activate/focus an element\naction\n<form>\nSpecifies where to send the form-data when a form is submitted\nalign\nNot supported in HTML 5'."
    },
    {
      "question": "What is Specifies that the script?",
      "options": [
        "None of the above.",
        "None of the above.",
        "to be used for the form \nsubmission\naccesskey\nGlobal Attributes\nSpecifies a shortcut key to activate/focus an element\naction\n<form>\nSpecifies where to send the form-data when a form is submitted\nalign\nNot supported in HTML 5",
        "executed asynchronously (only for external \nscripts)\nautocomplete\n<form>"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Specifies that the script is 'executed asynchronously (only for external \nscripts)\nautocomplete\n<form>'."
    }
  ],
  "summary": "This tutorial covers HTMLAttributeReference concepts and techniques. You'll learn how to use HTMLAttributeReference effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of HTMLAttributeReference and how to apply it in your projects."
}