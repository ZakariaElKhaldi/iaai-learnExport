{
  "id": "bf71f039-184e-449a-a630-5c4e3e763d02",
  "title": "HTMLEntities",
  "slug": "htmlentities",
  "metadata": {
    "description": "Learn about HTMLEntities with clear explanations and practical examples.",
    "keywords": [
      "html",
      "entity",
      "breaking",
      "character",
      "space",
      "used",
      "entities",
      "characters",
      "less",
      "names"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Html Basics"
    ],
    "estimated_time": 5,
    "category": "LearnHTML",
    "subcategory": "HTML Entities"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "HTML\nEntities",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Reserved characters in HTML must be replaced with entities:\n< (less than) =\n&lt;\n> (greater than) =\n&gt;\nHTML Character Entities\nSome characters are reserved in HTML.\nIf you use the less than (<) or greater than (>) signs in your HTML text, the browser might mix them with tags.\nEntity names or entity numbers can be used to display reserved HTML characters.\nEntity names look like this:\n&\nentity_name\n;\nEntity numbers look like this:\n&#\nentity_number\n;\nTo display a less than sign (<) we must write:\n&lt;\nor\n&#60;\nEntity names\nare easier to remember than entity numbers.\nNon-breaking Space\nA commonly used HTML entity is the non-breaking space:\n&nbsp;\nA non-breaking space is a space that will not break into a new line.\nTwo words \nseparated by a non-breaking space will stick together (not break into a new \nline). This \nis handy when breaking the words might be disruptive.\nExamples:\n\u00a7 10\n10 km/h\n10 PM\nAnother common use of the non-breaking space is to prevent browsers from truncating spaces in HTML pages.\nIf you write 10 spaces in your text, the browser will remove 9 of them. To add real spaces to your text, \nyou can use the\n&nbsp;\ncharacter entity.\nThe non-breaking hyphen (\n&#8209;\n) \nis used to define a hyphen character (\u2011) that does not break into a new \nline.\nSome Useful HTML Character Entities\nResult\nDescription\nName\nNumber\nnon-breaking space\n&nbsp;\n&#160;\nTry it \u00bb\n<\nless than\n&lt;\n&#60;\nTry it \u00bb\n>\ngreater than\n&gt;\n&#62;\nTry it \u00bb\n&\nampersand\n&amp;\n&#38;\nTry it \u00bb\n\"\ndouble quotation mark\n&quot;\n&#34;\nTry it \u00bb\n'\nsingle quotation mark\n&apos;\n&#39;\nTry it \u00bb\n\u00a2\ncent\n&cent;\n&#162;\nTry it \u00bb\n\u00a3\npound\n&pound;\n&#163;\nTry it \u00bb\n\u00a5\nyen\n&yen;\n&#165;\nTry it \u00bb\n\u20ac\neuro\n&euro;\n&#8364;\nTry it \u00bb\n\u00a9\ncopyright\n&copy;\n&#169;\nTry it \u00bb\n\u00ae\nregistered trademark\n&reg;\n&#174;\nTry it \u00bb\n\u2122\ntrademark\n&trade;\n&#8482;\nTry it \u00bb\nNote\nEntity names are case sensitive.\nCombining Diacritical Marks\nA diacritical mark is a \"glyph\" added to a letter.\nSome diacritical marks, like grave (\u00a0 \u0300) and acute (\u00a0 \u0301) are called accents.\nDiacritical marks can be used in combination with alphanumeric characters to produce a character that is not present in \nthe character set (encoding) used in the page.\nHere are some examples:\nMark\nCharacter\nConstruct\nResult\n\u0300\na\na&#768;\na\u0300\nTry it \u00bb\n\u0301\na\na&#769;\na\u0301\nTry it \u00bb\n\u0302\na\na&#770;\na\u0302\nTry it \u00bb\n\u0303\na\na&#771;\na\u0303\nTry it \u00bb\n\u0300\nO\nO&#768;\nO\u0300\nTry it \u00bb\n\u0301\nO\nO&#769;\nO\u0301\nTry it \u00bb\n\u0302\nO\nO&#770;\nO\u0302\nTry it \u00bb\n\u0303\nO\nO&#771;\nO\u0303\nTry it \u00bb\nThere are more examples in the\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "&\nentity_name\n;",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "&#\nentity_number\n;",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "&\n# TODO: Complete this line\n;",
      "solution": "&\nentity_name\n;"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "&#\nentity_number\n# TODO: Complete this line",
      "solution": "&#\nentity_number\n;"
    }
  ],
  "related_topics": [
    {
      "id": "06975269-50d0-478b-a78d-0c7727e5510b",
      "title": "Html Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "560d3e54-ff71-4897-86e2-95f132b84f89",
      "title": "Html Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "7948f1c3-2ffd-4a37-83d7-abb6ad5b90f5",
      "title": "Html Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is HTML Character Entities\nSome characters?",
      "options": [
        "None of the above.",
        "reserved in HTML",
        "None of the above.",
        "easier to remember than entity numbers"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of HTML Character Entities\nSome characters is 'reserved in HTML'."
    },
    {
      "question": "What is Entity names?",
      "options": [
        "reserved in HTML",
        "easier to remember than entity numbers",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Entity names is 'easier to remember than entity numbers'."
    }
  ],
  "summary": "This tutorial covers HTMLEntities concepts and techniques. You'll learn how to use HTMLEntities effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of HTMLEntities and how to apply it in your projects."
}