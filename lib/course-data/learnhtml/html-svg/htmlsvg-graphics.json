{
  "id": "37f088b3-7839-4356-adc5-2e2e19c177ca",
  "title": "HTMLSVG Graphics",
  "slug": "htmlsvg-graphics",
  "metadata": {
    "description": "Learn about HTMLSVG Graphics with clear explanations and practical examples.",
    "keywords": [
      "c",
      "graphics",
      "width",
      "browser",
      "support",
      "stroke",
      "sorry",
      "inline",
      "height",
      "fill",
      "canvas"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnHTML",
    "subcategory": "HTML SVG"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "HTML\nSVG Graphics",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "SVG (Scalable Vector Graphics)\nSVG defines vector-based graphics in XML\n, which can be directly embedded in HTML pages.\nSVG graphics are scalable, and do not lose any quality if they are zoomed or resized:\n\ufffd\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\ufffd\ufffd\ufffd\nSVG\nSorry, your browser does not support inline SVG.\nSVG is supported by all major browsers.\nWhat is SVG?\nSVG stands for Scalable Vector Graphics\nSVG is used to define vector-based graphics for the Web\nSVG defines graphics in XML format\nEach element and attribute in SVG files can be animated\nSVG is a W3C recommendation\nSVG integrates with other standards, such as CSS, DOM, XSL and JavaScript\nThe <svg> Element\nThe HTML\n<svg>\nelement is a container for SVG graphics.\nSVG has several methods for drawing paths, rectangles, circles, polygons, text, and \nmuch more.\nSVG Circle\nSorry, your browser does not support inline SVG.\nExample\n<!DOCTYPE html>\n<html>\n<body>\n<svg \n width=\"100\" height=\"100\">\n<circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"green\" \n stroke-width=\"4\" fill=\"yellow\" />\n</svg>\n</body>\n</html>\n\nSVG Rectangle\nSorry, your browser does not support inline SVG.\nExample\n<svg width=\"400\" height=\"120\">\n<rect \n  x=\"10\" y=\"10\" width=\"200\" height=\"100\" \n  stroke=\"red\" stroke-width=\"6\" fill=\"blue\" \n />\n</svg>\n\nSVG Rectangle with Opacity and Rounded Corners\nSorry, your browser does not support inline SVG.\nExample\n<svg width=\"400\" height=\"180\">\n<rect x=\"50\" y=\"20\" rx=\"20\" ry=\"20\" \n width=\"150\" height=\"150\"\nstyle=\"fill:red;stroke:black;stroke-width:5;opacity:0.5\" />\n</svg>\n\nSVG Star\nSorry, your browser does not support inline SVG.\nExample\n<svg width=\"300\" height=\"200\">\n<polygon points=\"100,10 40,198 190,78 10,78 160,198\"\nstyle=\"fill:lime;stroke:purple;stroke-width:5;fill-rule:evenodd;\" />\n</svg>\n\nSVG Gradient Ellipse and Text\n\ufffd\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\ufffd\ufffd\ufffd\nSVG\nSorry, your browser does not support inline SVG.\nExample\n<svg height=\"130\" width=\"500\">\n<defs>\n<linearGradient id=\"grad1\">\n<stop offset=\"0%\" stop-color=\"yellow\" \n />\n<stop offset=\"100%\" stop-color=\"red\" />\n</linearGradient>\n</defs>\n<ellipse cx=\"100\" cy=\"70\" rx=\"85\" ry=\"55\" \n fill=\"url(#grad1)\" />\n<text fill=\"#ffffff\" font-size=\"45\" \n font-family=\"Verdana\" x=\"50\" y=\"86\">SVG</text>\nSorry, your browser does not \n support inline SVG.\n</svg>\n\nDifferences Between SVG and Canvas\nSVG is a language for describing 2D graphics in XML, while Canvas draws 2D graphics, on the fly (with JavaScript).\nSVG is XML based, which means that every element is available within the SVG \nDOM. You can attach JavaScript event handlers to SVG graphics.\nIn SVG, each drawn shape is remembered as an object. If attributes of an SVG \nobject are changed, the browser can automatically re-render the shape.\nCanvas is rendered pixel by pixel. In canvas, once the graphic is drawn, it is forgotten by the browser. If its \nposition should be changed, the entire scene needs to be redrawn, including any \nobjects that might have been covered by the graphic.\nComparison of SVG and Canvas\nThe table below shows some important differences between Canvas and SVG:\nSVG\nCanvas\nResolution independent\nSupport for event handlers\nGood text rendering capabilities\nSlow rendering if complex\nNot suited for game applications\nResolution dependent\nNo support for event handlers\nPoor text rendering capabilities\nYou can save the resulting image as .png or .jpg\nWell suited for graphic-intensive games\nSVG Tutorial\nTo learn more about SVG, please read our\nSVG Tutorial\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<!DOCTYPE html>\n<html>\n<body>\n<svg \n width=\"100\" height=\"100\">\n<circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"green\" \n stroke-width=\"4\" fill=\"yellow\" />\n</svg>\n</body>\n</html>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<svg width=\"400\" height=\"120\">\n<rect \n  x=\"10\" y=\"10\" width=\"200\" height=\"100\" \n  stroke=\"red\" stroke-width=\"6\" fill=\"blue\" \n />\n</svg>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<svg width=\"400\" height=\"180\">\n<rect x=\"50\" y=\"20\" rx=\"20\" ry=\"20\" \n width=\"150\" height=\"150\"\nstyle=\"fill:red;stroke:black;stroke-width:5;opacity:0.5\" />\n</svg>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<svg width=\"300\" height=\"200\">\n<polygon points=\"100,10 40,198 190,78 10,78 160,198\"\nstyle=\"fill:lime;stroke:purple;stroke-width:5;fill-rule:evenodd;\" />\n</svg>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "<svg height=\"130\" width=\"500\">\n<defs>\n<linearGradient id=\"grad1\">\n<stop offset=\"0%\" stop-color=\"yellow\" \n />\n<stop offset=\"100%\" stop-color=\"red\" />\n</linearGradient>\n</defs>\n<ellipse cx=\"100\" cy=\"70\" rx=\"85\" ry=\"55\" \n fill=\"url(#grad1)\" />\n<text fill=\"#ffffff\" font-size=\"45\" \n font-family=\"Verdana\" x=\"50\" y=\"86\">SVG</text>\nSorry, your browser does not \n support inline SVG.\n</svg>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<!DOCTYPE html>\n<html>\n<body>\n<svg \n width=\"100\" height=\"100\">\n<circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"green\" \n# TODO: Complete this line\n</svg>\n</body>\n</html>",
      "solution": "<!DOCTYPE html>\n<html>\n<body>\n<svg \n width=\"100\" height=\"100\">\n<circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"green\" \n stroke-width=\"4\" fill=\"yellow\" />\n</svg>\n</body>\n</html>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<svg width=\"400\" height=\"120\">\n<rect \n  x=\"10\" y=\"10\" width=\"200\" height=\"100\" \n  stroke=\"red\" stroke-width=\"6\" fill=\"blue\" \n />\n# TODO: Complete this line",
      "solution": "<svg width=\"400\" height=\"120\">\n<rect \n  x=\"10\" y=\"10\" width=\"200\" height=\"100\" \n  stroke=\"red\" stroke-width=\"6\" fill=\"blue\" \n />\n</svg>"
    }
  ],
  "related_topics": [
    {
      "id": "85be6d14-77cb-468f-8842-e009b420d6ea",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "8fd51b91-1850-455d-a15c-d497bd41a4a5",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "a92f68b2-0ab1-4c98-aa2b-0904ea9e2315",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is SVG graphics?",
      "options": [
        "None of the above.",
        "None of the above.",
        "supported by all major browsers",
        "scalable"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of SVG graphics is 'scalable'."
    },
    {
      "question": "What is SVG?",
      "options": [
        "None of the above.",
        "supported by all major browsers",
        "scalable",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of SVG is 'supported by all major browsers'."
    }
  ],
  "summary": "This tutorial covers HTMLSVG Graphics concepts and techniques. You'll learn how to use HTMLSVG Graphics effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of HTMLSVG Graphics and how to apply it in your projects."
}