{
  "id": "913e0733-7cf2-4845-89b8-ca2e520a7ab0",
  "title": "HTMLWeb Storage API",
  "slug": "htmlweb-storage-api",
  "metadata": {
    "description": "Learn about HTMLWeb Storage API with clear explanations and practical examples.",
    "keywords": [
      "html",
      "storage",
      "localstorage",
      "data",
      "browser",
      "sessionstorage",
      "clickcount",
      "support",
      "script",
      "innerhtml",
      "example"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "Html Basics"
    ],
    "estimated_time": 5,
    "category": "LearnHTML",
    "subcategory": "HTML Web Storage"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "HTML\nWeb Storage API",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "HTML Web Storage API; better than cookies.\nWhat is HTML Web Storage?\nWith web storage, applications can store data locally within the user's browser.\nBefore HTML5, application data had to be stored in cookies, included in every server request. Web storage is more secure, and large amounts of data \ncan be stored locally, without affecting website performance.\nUnlike cookies, the storage limit is far larger (at least 5MB) and information is never transferred to the server.\nWeb storage is per origin (per domain and protocol). All pages, from one origin, can store and access the same data.\nWeb Storage API Objects\nWeb storage provides two objects for storing data in the browser:\nwindow.localStorage\n- stores data with no expiration date \n  (data is not lost when the browser tab is closed)\nwindow.sessionStorage\n- stores data for one session (data is lost when the browser tab is closed)\nBrowser Support\nThe numbers in the table specify the first browser version that fully supports \nWeb Storage.\nAPI\nlocalStorage\n4.0\n8.0\n3.5\n4.0\n11.5\nsessionStorage\n4.0\n8.0\n3.5\n4.0\n11.5\nTest Web Storage API Support\nBefore using web storage, we can quickly check browser support for localStorage and sessionStorage:\nExample\nTest browser support:\n<script>\nconst x = document.getElementById(\"result\");\nif (typeof(Storage) \n  !== \"undefined\") {\nx.innerHTML = \"Your browser supports Web \n  storage!\";\n} else {\nx.innerHTML = \"Sorry, no Web storage \n  support!\";\n}\n</script>\n\nThe localStorage Object\nThe\nlocalStorage\nobject stores the data with no expiration date. The data \nwill not be lost when the browser is closed, and will be available the \nExample\nUse\nlocalStorage\nto set and retrieve name \n  and value pairs:\n<script>\nconst x = document.getElementById(\"result\");\nif (typeof(Storage) \n  !== \"undefined\") {\n// Store\nlocalStorage.setItem(\"lastname\", \n  \"Smith\");\nlocalStorage.setItem(\"bgcolor\", \"yellow\");\n// \n  Retrieve\nx.innerHTML = localStorage.getItem(\"lastname\");\nx.style.backgroundColor = localStorage.getItem(\"bgcolor\");\n} else {\nx.innerHTML = \"Sorry, no Web storage support!\";\n}\n</script>\n\nExample explained:\nUse the\nlocalStorage.setItem()\nmethod to \n  create name/value pairs\nUse the\nlocalStorage.getItem()\nmethod to \n  retrieve the values set\nRetrieve the value of \"lastname\" and insert it into an element with id=\"result\"\nRetrieve the value of \"bgcolor\" and insert it into the style \n  backgroundColor of the element with id=\"result\"\nThe syntax for removing the \"lastname\" localStorage item is as follows:\nlocalStorage.removeItem(\"lastname\");\nNote:\nName/value pairs are always stored as strings. \nRemember to convert them to another format when needed!\nCounting Clicks with localStorage\nThe following example counts the number of times a user has clicked a button. \nIn this code the value string is converted to a number to be able to increase the counter:\nExample\n<script>\nfunction clickCounter() {\nconst x = \n  document.getElementById(\"result\");\nif (typeof(Storage) !== \n  \"undefined\") {\nif (localStorage.clickcount) {\nlocalStorage.clickcount = Number(localStorage.clickcount)+1;\n} else {\nlocalStorage.clickcount = 1;\n}\nx.innerHTML = \"You have clicked the button \" + \n  localStorage.clickcount + \" time(s)!\";\n} else {\nx.innerHTML = \"Sorry, no Web storage support!\";\n}\n}\n</script>\n\nThe sessionStorage Object\nThe\nsessionStorage\nobject is equal to the\nlocalStorage\nobject,\nexcept\nthat it stores the data for only one session! The data is deleted when the user closes the \nspecific browser tab.\nCounting Clicks with sessionStorage\nThe following example counts the number of times a user has clicked a button, in the current session:\nExample\n<script>\nfunction clickCounter() {\nconst x = \n  document.getElementById(\"result\");\nif (typeof(Storage) !== \n  \"undefined\") {\nif (sessionStorage.clickcount) {\nsessionStorage.clickcount = Number(sessionStorage.clickcount)+1;\n} else {\nsessionStorage.clickcount = 1;\n}\nx.innerHTML = \"You have clicked the button \" + \n  sessionStorage.clickcount + \" time(s) in this session!\";\n} else {\nx.innerHTML = \"Sorry, no Web storage support!\";\n}\n}\n</script>\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<script>\nconst x = document.getElementById(\"result\");\nif (typeof(Storage) \n  !== \"undefined\") {\nx.innerHTML = \"Your browser supports Web \n  storage!\";\n} else {\nx.innerHTML = \"Sorry, no Web storage \n  support!\";\n}\n</script>",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<script>\nconst x = document.getElementById(\"result\");\nif (typeof(Storage) \n  !== \"undefined\") {\n// Store\nlocalStorage.setItem(\"lastname\", \n  \"Smith\");\nlocalStorage.setItem(\"bgcolor\", \"yellow\");\n// \n  Retrieve\nx.innerHTML = localStorage.getItem(\"lastname\");\nx.style.backgroundColor = localStorage.getItem(\"bgcolor\");\n} else {\nx.innerHTML = \"Sorry, no Web storage support!\";\n}\n</script>",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<script>\nfunction clickCounter() {\nconst x = \n  document.getElementById(\"result\");\nif (typeof(Storage) !== \n  \"undefined\") {\nif (localStorage.clickcount) {\nlocalStorage.clickcount = Number(localStorage.clickcount)+1;\n} else {\nlocalStorage.clickcount = 1;\n}\nx.innerHTML = \"You have clicked the button \" + \n  localStorage.clickcount + \" time(s)!\";\n} else {\nx.innerHTML = \"Sorry, no Web storage support!\";\n}\n}\n</script>",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<script>\nfunction clickCounter() {\nconst x = \n  document.getElementById(\"result\");\nif (typeof(Storage) !== \n  \"undefined\") {\nif (sessionStorage.clickcount) {\nsessionStorage.clickcount = Number(sessionStorage.clickcount)+1;\n} else {\nsessionStorage.clickcount = 1;\n}\nx.innerHTML = \"You have clicked the button \" + \n  sessionStorage.clickcount + \" time(s) in this session!\";\n} else {\nx.innerHTML = \"Sorry, no Web storage support!\";\n}\n}\n</script>",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<script>\nconst x = document.getElementById(\"result\");\nif (typeof(Storage) \n  !== \"undefined\") {\nx.innerHTML = \"Your browser supports Web \n  storage!\";\n# TODO: Complete this line\nx.innerHTML = \"Sorry, no Web storage \n  support!\";\n}\n</script>",
      "solution": "<script>\nconst x = document.getElementById(\"result\");\nif (typeof(Storage) \n  !== \"undefined\") {\nx.innerHTML = \"Your browser supports Web \n  storage!\";\n} else {\nx.innerHTML = \"Sorry, no Web storage \n  support!\";\n}\n</script>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<script>\nconst x = document.getElementById(\"result\");\nif (typeof(Storage) \n  !== \"undefined\") {\n// Store\nlocalStorage.setItem(\"lastname\", \n  \"Smith\");\n# TODO: Complete this line\n// \n  Retrieve\nx.innerHTML = localStorage.getItem(\"lastname\");\nx.style.backgroundColor = localStorage.getItem(\"bgcolor\");\n} else {\nx.innerHTML = \"Sorry, no Web storage support!\";\n}\n</script>",
      "solution": "<script>\nconst x = document.getElementById(\"result\");\nif (typeof(Storage) \n  !== \"undefined\") {\n// Store\nlocalStorage.setItem(\"lastname\", \n  \"Smith\");\nlocalStorage.setItem(\"bgcolor\", \"yellow\");\n// \n  Retrieve\nx.innerHTML = localStorage.getItem(\"lastname\");\nx.style.backgroundColor = localStorage.getItem(\"bgcolor\");\n} else {\nx.innerHTML = \"Sorry, no Web storage support!\";\n}\n</script>"
    }
  ],
  "related_topics": [
    {
      "id": "87d24820-2450-4bf8-a023-fd7568cc8fe6",
      "title": "Html Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "d63f7c43-05c9-4f01-a52b-cb799ba00982",
      "title": "Html Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "b995e2eb-5291-41de-b7e9-b2e7c50d344b",
      "title": "Html Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is What?",
      "options": [
        "None of the above.",
        "None of the above.",
        "HTML Web Storage",
        "more secure"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of What is 'HTML Web Storage'."
    },
    {
      "question": "What is Web storage?",
      "options": [
        "None of the above.",
        "HTML Web Storage",
        "more secure",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Web storage is 'more secure'."
    }
  ],
  "summary": "This tutorial covers HTMLWeb Storage API concepts and techniques. You'll learn how to use HTMLWeb Storage API effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of HTMLWeb Storage API and how to apply it in your projects."
}