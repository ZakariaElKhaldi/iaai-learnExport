{
  "id": "81c3765f-499e-4b22-a0ae-f714f42aab56",
  "title": "HTMLDrag and Drop API",
  "slug": "htmldrag-and-drop-api",
  "metadata": {
    "description": "Learn about HTMLDrag and Drop API with clear explanations and practical examples.",
    "keywords": [
      "html",
      "data",
      "drop",
      "element",
      "drag",
      "function",
      "event",
      "dragged",
      "example",
      "datatransfer",
      "text"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Html Basics"
    ],
    "estimated_time": 5,
    "category": "LearnHTML",
    "subcategory": "HTML Drag and Drop"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "HTML\nDrag and Drop API",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The HTML Drag and Drop API enables an element to be dragged and dropped.\nExample\nDrag the  image into the second rectangle.\nDrag and Drop\nDrag and drop is a very common feature. It is when you \"grab\" an object and drag it to a different location.\nBrowser Support\nThe numbers in the table specify the first browser version that fully supports Drag and Drop.\nAPI\nDrag and Drop\n4.0\n9.0\n3.5\n6.0\n12.0\nHTML Drag and Drop API Example\nThe example below is a simple drag and drop example:\nExample\n<!DOCTYPE HTML>\n<html>\n<head>\n<script>\nfunction dragstartHandler(ev) {\nev.dataTransfer.setData(\"text\", \n  ev.target.id);\n}\nfunction dragoverHandler(ev) {\nev.preventDefault();\n}\nfunction dropHandler(ev) {\nev.preventDefault();\nconst data = ev.dataTransfer.getData(\"text\");\nev.target.appendChild(document.getElementById(data));\n}\n</script>\n</head>\n<body>\n<div id=\"div1\" ondrop=\"dropHandler(event)\" \n  ondragover=\"dragoverHandler(event)\"></div>\n<img id=\"img1\" src=\"img_logo.gif\" \n  draggable=\"true\" ondragstart=\"dragstartHandler(event)\" width=\"336\" \n  height=\"69\">\n</body>\n</html>\n\nIt might seem complicated, but lets go through all the different parts of a drag and drop event.\nMake an Element Draggable\nFirst of all: To make an element draggable, set the\ndraggable\nattribute to true:\n<img id=\"img1\" draggable=\"true\">\nor:\n<p \n  id=\"p1\" draggable=\"true\">Draggable text</p>\nWhat to Drag - ondragstart and setData()\nThen, specify what should happen when the element is dragged.\nIn the example above, the\nondragstart\nattribute \nof the <img> element calls a function (dragstartHandler(ev)), \nthat specifies what data to be dragged.\nThe\ndataTransfer.setData()\nmethod sets the data type and the value of the \ndragged data:\nfunction dragstartHandler(ev) {\nev.dataTransfer.setData(\"text\", \n  ev.target.id);\n}\nIn this case, the data type is \"text\" and the value is the id of the draggable element (\"img1\").\nWhere to Drop - ondragover\nThe\nondragover\nattrribute of the <div> \nelement calls a function (dragoverHandler(ev)), that specifies where the dragged data can be dropped.\nBy default, data/elements cannot be dropped in other elements. To allow a drop, \nwe must prevent the default handling of the element.\nThis is done by calling the\npreventDefault()\nmethod for the ondragover event:\nfunction dragoverHandler(ev) {\nev.preventDefault();\n}\nDo the Drop - ondrop\nWhen the dragged data is dropped, a drop event occurs.\nIn the example above, the ondrop attribute of the <div> element calls a function, dropHandler(event):\nfunction dropHandler(ev) {\nev.preventDefault();\nconst \n   data = ev.dataTransfer.getData(\"text\");\nev.target.appendChild(document.getElementById(data));\n}\nCode explained:\nCall\npreventDefault()\nto prevent the browser default handling of the data (default is open as link on drop)\nGet the dragged data with the\ndataTransfer.getData()\nmethod. This method will return any data that was set to the same type in the\nsetData()\nmethod\nThe dragged data is the id of the dragged element (\"img1\")\nAppend the dragged element into the drop element\nMore Examples\nExample\nHow to drag and drop an <h1> element to a <div> element:\n<script>\nfunction dragstartHandler(ev) {\nev.dataTransfer.setData(\"text\", \n  ev.target.id);\n}\nfunction dragoverHandler(ev) {\nev.preventDefault();\n}\nfunction dropHandler(ev) {\nev.preventDefault();\nconst data = \n  ev.dataTransfer.getData(\"text\");\nev.target.appendChild(document.getElementById(data));\n}\n</script>\n</head>\n<body>\n<div id=\"div1\" ondrop=\"dropHandler(event)\" \n  ondragover=\"dragoverHandler(event)\"></div>\n<h1 id=\"h1\" \n  draggable=\"true\" ondragstart=\"dragstartHandler(event)\">.com</h1>\n\nExample\nHow to drag and drop an <a> element to a <div> element:\n<script>\nfunction dragstartHandler(ev) {\nev.dataTransfer.setData(\"text\", \n  ev.target.id);\n}\nfunction dragoverHandler(ev) {\nev.preventDefault();\n}\nfunction dropHandler(ev) {\nev.preventDefault();\nconst data = \n  ev.dataTransfer.getData(\"text\");\nev.target.appendChild(document.getElementById(data));\n}\n</script>\n</head>\n<body>\n<div id=\"div1\" ondrop=\"dropHandler(event)\" \n  ondragover=\"dragoverHandler(event)\"></div>\n<a \n  id=\"link1\" href=\"https://.com\" draggable=\"true\" ondragstart=\"dragstartHandler(event)\">.com</a>\n\nExample\nHow to drag and drop an image back and forth between two <div> elements:\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<!DOCTYPE HTML>\n<html>\n<head>\n<script>\nfunction dragstartHandler(ev) {\nev.dataTransfer.setData(\"text\", \n  ev.target.id);\n}\nfunction dragoverHandler(ev) {\nev.preventDefault();\n}\nfunction dropHandler(ev) {\nev.preventDefault();\nconst data = ev.dataTransfer.getData(\"text\");\nev.target.appendChild(document.getElementById(data));\n}\n</script>\n</head>\n<body>\n<div id=\"div1\" ondrop=\"dropHandler(event)\" \n  ondragover=\"dragoverHandler(event)\"></div>\n<img id=\"img1\" src=\"img_logo.gif\" \n  draggable=\"true\" ondragstart=\"dragstartHandler(event)\" width=\"336\" \n  height=\"69\">\n</body>\n</html>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<script>\nfunction dragstartHandler(ev) {\nev.dataTransfer.setData(\"text\", \n  ev.target.id);\n}\nfunction dragoverHandler(ev) {\nev.preventDefault();\n}\nfunction dropHandler(ev) {\nev.preventDefault();\nconst data = \n  ev.dataTransfer.getData(\"text\");\nev.target.appendChild(document.getElementById(data));\n}\n</script>\n</head>\n<body>\n<div id=\"div1\" ondrop=\"dropHandler(event)\" \n  ondragover=\"dragoverHandler(event)\"></div>\n<h1 id=\"h1\" \n  draggable=\"true\" ondragstart=\"dragstartHandler(event)\">W3Schools.com</h1>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<script>\nfunction dragstartHandler(ev) {\nev.dataTransfer.setData(\"text\", \n  ev.target.id);\n}\nfunction dragoverHandler(ev) {\nev.preventDefault();\n}\nfunction dropHandler(ev) {\nev.preventDefault();\nconst data = \n  ev.dataTransfer.getData(\"text\");\nev.target.appendChild(document.getElementById(data));\n}\n</script>\n</head>\n<body>\n<div id=\"div1\" ondrop=\"dropHandler(event)\" \n  ondragover=\"dragoverHandler(event)\"></div>\n<a \n  id=\"link1\" href=\"https://w3schools.com\" draggable=\"true\" ondragstart=\"dragstartHandler(event)\">W3Schools.com</a>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<!DOCTYPE HTML>\n<html>\n<head>\n<script>\nfunction dragstartHandler(ev) {\nev.dataTransfer.setData(\"text\", \n  ev.target.id);\n}\nfunction dragoverHandler(ev) {\nev.preventDefault();\n}\nfunction dropHandler(ev) {\nev.preventDefault();\nconst data = ev.dataTransfer.getData(\"text\");\nev.target.appendChild(document.getElementById(data));\n}\n</script>\n</head>\n<body>\n# TODO: Complete this line\n  ondragover=\"dragoverHandler(event)\"></div>\n<img id=\"img1\" src=\"img_logo.gif\" \n  draggable=\"true\" ondragstart=\"dragstartHandler(event)\" width=\"336\" \n  height=\"69\">\n</body>\n</html>",
      "solution": "<!DOCTYPE HTML>\n<html>\n<head>\n<script>\nfunction dragstartHandler(ev) {\nev.dataTransfer.setData(\"text\", \n  ev.target.id);\n}\nfunction dragoverHandler(ev) {\nev.preventDefault();\n}\nfunction dropHandler(ev) {\nev.preventDefault();\nconst data = ev.dataTransfer.getData(\"text\");\nev.target.appendChild(document.getElementById(data));\n}\n</script>\n</head>\n<body>\n<div id=\"div1\" ondrop=\"dropHandler(event)\" \n  ondragover=\"dragoverHandler(event)\"></div>\n<img id=\"img1\" src=\"img_logo.gif\" \n  draggable=\"true\" ondragstart=\"dragstartHandler(event)\" width=\"336\" \n  height=\"69\">\n</body>\n</html>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<script>\nfunction dragstartHandler(ev) {\nev.dataTransfer.setData(\"text\", \n  ev.target.id);\n}\nfunction dragoverHandler(ev) {\nev.preventDefault();\n}\nfunction dropHandler(ev) {\nev.preventDefault();\nconst data = \n  ev.dataTransfer.getData(\"text\");\nev.target.appendChild(document.getElementById(data));\n}\n</script>\n</head>\n# TODO: Complete this line\n<div id=\"div1\" ondrop=\"dropHandler(event)\" \n  ondragover=\"dragoverHandler(event)\"></div>\n<h1 id=\"h1\" \n  draggable=\"true\" ondragstart=\"dragstartHandler(event)\">W3Schools.com</h1>",
      "solution": "<script>\nfunction dragstartHandler(ev) {\nev.dataTransfer.setData(\"text\", \n  ev.target.id);\n}\nfunction dragoverHandler(ev) {\nev.preventDefault();\n}\nfunction dropHandler(ev) {\nev.preventDefault();\nconst data = \n  ev.dataTransfer.getData(\"text\");\nev.target.appendChild(document.getElementById(data));\n}\n</script>\n</head>\n<body>\n<div id=\"div1\" ondrop=\"dropHandler(event)\" \n  ondragover=\"dragoverHandler(event)\"></div>\n<h1 id=\"h1\" \n  draggable=\"true\" ondragstart=\"dragstartHandler(event)\">W3Schools.com</h1>"
    }
  ],
  "related_topics": [
    {
      "id": "5c426099-3dca-41dc-b0fe-71476e6be40c",
      "title": "Html Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "342cc254-b215-4a3e-8d3d-df979beac1fd",
      "title": "Html Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "a30e5463-5298-482b-a3bf-1611b69cae29",
      "title": "Html Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Drag and Drop\nDrag and drop?",
      "options": [
        "None of the above.",
        "when you \"grab\" an object and drag it to a different location",
        "a very common feature",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Drag and Drop\nDrag and drop is 'a very common feature'."
    },
    {
      "question": "What is It?",
      "options": [
        "None of the above.",
        "a very common feature",
        "None of the above.",
        "when you \"grab\" an object and drag it to a different location"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of It is 'when you \"grab\" an object and drag it to a different location'."
    }
  ],
  "summary": "This tutorial covers HTMLDrag and Drop API concepts and techniques. You'll learn how to use HTMLDrag and Drop API effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of HTMLDrag and Drop API and how to apply it in your projects."
}