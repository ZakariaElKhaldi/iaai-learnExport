{
  "id": "7251003c-3c65-41b0-83d6-79d4f78ce27d",
  "title": "HTMLGeolocation API",
  "slug": "htmlgeolocation-api",
  "metadata": {
    "description": "Learn about HTMLGeolocation API with clear explanations and practical examples.",
    "keywords": [
      "c",
      "geolocation",
      "error",
      "user",
      "location",
      "innerhtml",
      "coords",
      "position",
      "available",
      "function",
      "returned"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnHTML",
    "subcategory": "HTML Geolocation"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "HTML\nGeolocation API",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The Geolocation API is used to get the user's current location.\nLocate the User's Position\nThe Geolocation API is used to access the user's current location.\nSince this can compromise privacy, the location is not available unless the user approves it.\nTry It\nNote:\nThe Geolocation API is only available on secure contexts such as HTTPS.\nTip:\nThe Geolocation API is most accurate for devices with GPS, like smartphones or smartwatches.\nBrowser Support\nThe numbers in the table specify the first browser version that fully supports \nGeolocation.\nAPI\nGeolocation\n5.0\n12.0\n3.5\n5.0\n10.6\nUsing HTML Geolocation API\nThe Geolocation API is accessed via a call to\nnavigator.geolocation\n. This will cause the browser to ask the user for \npermission to access their location data. If the user accept, the browser will \nsearch for the best available functionality on the device to access this \ninformation (for example GPS).\nThe\ngetCurrentPosition()\nmethod is used to return the user's \ncurrent location.\nThe example below returns the latitude and longitude of the user's current \nlocation:\nExample\n<script>\nconst x = document.getElementById(\"demo\");\nfunction getLocation() {\nif (navigator.geolocation) {\nnavigator.geolocation.getCurrentPosition(success, error);\n} else {\nx.innerHTML = \"Geolocation is not supported by this browser.\";\n}\n}\nfunction success(position) {\nx.innerHTML = \"Latitude: \" + position.coords.latitude +\n\"<br>Longitude: \" + position.coords.longitude;\n}\nfunction error() {\nalert(\"Sorry, no position available.\");\n}\n</script>\n\nExample explained:\nCheck if Geolocation is supported\nIf Geolocation is supported, run the\ngetCurrentPosition()\nmethod. If not, display a message to the user\nThe success() function outputs the user's location in latitude and longitude\nThe error() function alerts a text if the browser retrieves an error in\ngetCurrentPosition()\nError Handling and Rejections\nThe second parameter of the\ngetCurrentPosition()\nmethod is used to handle \nerrors. It specifies a function to run if it fails to get the user's location.\nHere is an example of a more specific error handling:\nExample\nfunction error(error) {\nswitch(error.code) {\ncase error.PERMISSION_DENIED:\nx.innerHTML = \"User denied the request for Geolocation.\"\nbreak;\ncase error.POSITION_UNAVAILABLE:\nx.innerHTML = \"Location information is unavailable.\"\nbreak;\ncase error.TIMEOUT:\nx.innerHTML = \"The request to get user location timed out.\"\nbreak;\ncase error.UNKNOWN_ERROR:\nx.innerHTML = \"An unknown error occurred.\"\nbreak;\n}\n}\n\nLocation-specific Information\nGeolocation is also very useful for location-specific information, like:\nUp-to-date local information\nShowing Points-of-interest near the user\nTurn-by-turn navigation (GPS)\nThe getCurrentPosition() Method - Return Data\nThe\ngetCurrentPosition()\nmethod returns an object on success. The latitude, \nlongitude and accuracy properties are always returned. The other properties are returned \nif available:\nProperty\nReturns\ncoords.latitude\nThe latitude as a decimal number (always returned)\ncoords.longitude\nThe longitude as a decimal number (always returned)\ncoords.accuracy\nThe accuracy of position (always returned)\ncoords.altitude\nThe altitude in meters above the mean sea level (returned if available)\ncoords.altitudeAccuracy\nThe altitude accuracy of position (returned if available)\ncoords.heading\nThe heading as degrees clockwise from North (returned if available)\ncoords.speed\nThe speed in meters per second (returned if available)\ntimestamp\nThe date/time of the response (returned if available)\nGeolocation Object - Other interesting Methods\nThe Geolocation object also has other interesting methods:\nwatchPosition()\n- Returns the current \n  location of the user and continues to \nreturn updated location as the user moves (like the GPS in a car).\nclearWatch()\n- Stops the\nwatchPosition()\nmethod.\nThe example below shows the\nwatchPosition()\nmethod. You need an accurate GPS device to test this (like \na \nsmartphone):\nExample\n<script>\nconst x = document.getElementById(\"demo\");\nfunction getLocation() {\nif (navigator.geolocation) {\nnavigator.geolocation.watchPosition(success, \n  error);\n} else {\nx.innerHTML = \"Geolocation is not supported by this browser.\";\n}\n}\nfunction success(position) {\nx.innerHTML = \"Latitude: \" + position.coords.latitude +\n\"<br>Longitude: \" + position.coords.longitude;\n}\nfunction error(error) {\nswitch(error.code) {\ncase error.PERMISSION_DENIED:\nx.innerHTML = \n  \"User denied the request for Geolocation.\"\nbreak;\ncase error.POSITION_UNAVAILABLE:\nx.innerHTML = \"Location information is unavailable.\"\nbreak;\ncase error.TIMEOUT:\nx.innerHTML = \"The request to get user location timed out.\"\nbreak;\ncase error.UNKNOWN_ERROR:\nx.innerHTML = \"An unknown error occurred.\"\nbreak;\n}\n}\n</script>\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<script>\nconst x = document.getElementById(\"demo\");\nfunction getLocation() {\nif (navigator.geolocation) {\nnavigator.geolocation.getCurrentPosition(success, error);\n} else {\nx.innerHTML = \"Geolocation is not supported by this browser.\";\n}\n}\nfunction success(position) {\nx.innerHTML = \"Latitude: \" + position.coords.latitude +\n\"<br>Longitude: \" + position.coords.longitude;\n}\nfunction error() {\nalert(\"Sorry, no position available.\");\n}\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "function error(error) {\nswitch(error.code) {\ncase error.PERMISSION_DENIED:\nx.innerHTML = \"User denied the request for Geolocation.\"\nbreak;\ncase error.POSITION_UNAVAILABLE:\nx.innerHTML = \"Location information is unavailable.\"\nbreak;\ncase error.TIMEOUT:\nx.innerHTML = \"The request to get user location timed out.\"\nbreak;\ncase error.UNKNOWN_ERROR:\nx.innerHTML = \"An unknown error occurred.\"\nbreak;\n}\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<script>\nconst x = document.getElementById(\"demo\");\nfunction getLocation() {\nif (navigator.geolocation) {\nnavigator.geolocation.watchPosition(success, \n  error);\n} else {\nx.innerHTML = \"Geolocation is not supported by this browser.\";\n}\n}\nfunction success(position) {\nx.innerHTML = \"Latitude: \" + position.coords.latitude +\n\"<br>Longitude: \" + position.coords.longitude;\n}\nfunction error(error) {\nswitch(error.code) {\ncase error.PERMISSION_DENIED:\nx.innerHTML = \n  \"User denied the request for Geolocation.\"\nbreak;\ncase error.POSITION_UNAVAILABLE:\nx.innerHTML = \"Location information is unavailable.\"\nbreak;\ncase error.TIMEOUT:\nx.innerHTML = \"The request to get user location timed out.\"\nbreak;\ncase error.UNKNOWN_ERROR:\nx.innerHTML = \"An unknown error occurred.\"\nbreak;\n}\n}\n</script>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<script>\nconst x = document.getElementById(\"demo\");\nfunction getLocation() {\nif (navigator.geolocation) {\nnavigator.geolocation.getCurrentPosition(success, error);\n} else {\nx.innerHTML = \"Geolocation is not supported by this browser.\";\n}\n}\nfunction success(position) {\n# TODO: Complete this line\n\"<br>Longitude: \" + position.coords.longitude;\n}\nfunction error() {\nalert(\"Sorry, no position available.\");\n}\n</script>",
      "solution": "<script>\nconst x = document.getElementById(\"demo\");\nfunction getLocation() {\nif (navigator.geolocation) {\nnavigator.geolocation.getCurrentPosition(success, error);\n} else {\nx.innerHTML = \"Geolocation is not supported by this browser.\";\n}\n}\nfunction success(position) {\nx.innerHTML = \"Latitude: \" + position.coords.latitude +\n\"<br>Longitude: \" + position.coords.longitude;\n}\nfunction error() {\nalert(\"Sorry, no position available.\");\n}\n</script>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "function error(error) {\nswitch(error.code) {\ncase error.PERMISSION_DENIED:\n# TODO: Complete this line\nbreak;\ncase error.POSITION_UNAVAILABLE:\nx.innerHTML = \"Location information is unavailable.\"\nbreak;\ncase error.TIMEOUT:\nx.innerHTML = \"The request to get user location timed out.\"\nbreak;\ncase error.UNKNOWN_ERROR:\nx.innerHTML = \"An unknown error occurred.\"\nbreak;\n}\n}",
      "solution": "function error(error) {\nswitch(error.code) {\ncase error.PERMISSION_DENIED:\nx.innerHTML = \"User denied the request for Geolocation.\"\nbreak;\ncase error.POSITION_UNAVAILABLE:\nx.innerHTML = \"Location information is unavailable.\"\nbreak;\ncase error.TIMEOUT:\nx.innerHTML = \"The request to get user location timed out.\"\nbreak;\ncase error.UNKNOWN_ERROR:\nx.innerHTML = \"An unknown error occurred.\"\nbreak;\n}\n}"
    }
  ],
  "related_topics": [
    {
      "id": "b66a8f71-1455-4f3f-a356-d4821fe2ccad",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "27c01522-1d5d-4197-a1ee-e46ba99befce",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "d910c4e8-3897-4e97-9532-dec689afc240",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is HTML\nGeolocation API\n\nThe Geolocation API?",
      "options": [
        "None of the above.",
        "used to get the user's current location",
        "used to access the user's current location",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of HTML\nGeolocation API\n\nThe Geolocation API is 'used to get the user's current location'."
    },
    {
      "question": "What is s Position\nThe Geolocation API?",
      "options": [
        "None of the above.",
        "used to get the user's current location",
        "used to access the user's current location",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of s Position\nThe Geolocation API is 'used to access the user's current location'."
    }
  ],
  "summary": "This tutorial covers HTMLGeolocation API concepts and techniques. You'll learn how to use HTMLGeolocation API effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of HTMLGeolocation API and how to apply it in your projects."
}