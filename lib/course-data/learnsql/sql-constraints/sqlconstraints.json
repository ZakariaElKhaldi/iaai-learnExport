{
  "id": "de257e11-36e0-4eb7-b347-84e7530e8d67",
  "title": "SQLConstraints",
  "slug": "sqlconstraints",
  "metadata": {
    "description": "Learn about SQLConstraints with clear explanations and practical examples.",
    "keywords": [
      "c",
      "table",
      "constraints",
      "column",
      "data",
      "used",
      "create",
      "constraint",
      "ensures",
      "level",
      "datatype"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnSQL",
    "subcategory": "SQL Constraints"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "SQL\nConstraints",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "SQL\nConstraints\n\nSQL constraints are used to specify rules for data in a table",
      "content": ".\nSQL Create Constraints\nConstraints can be specified when the table is created with the\nCREATE TABLE\nstatement, or after the table is created \nwith the\nALTER TABLE\nstatement.\nSyntax\nCREATE TABLE\ntable_name\n(\ncolumn1 datatype\nconstraint\n,\ncolumn2 datatype\nconstraint\n,\ncolumn3 datatype\nconstraint\n,\n....\n);\nSQL Constraints\nSQL constraints are used to specify rules for the data in a table.\nConstraints are used to limit the type of data that can go into a table. This \nensures the accuracy and reliability of the data in the table. If there is any violation between the constraint and the data action, \nthe action is aborted.\nConstraints can be column level or table level. Column level constraints \napply to a column, and table level constraints apply to the whole table.\nThe following constraints are commonly used in SQL:",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "NOT NULL",
      "content": "- Ensures that a column cannot have a NULL value",
      "order": 3,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "UNIQUE",
      "content": "- Ensures that all values in a column are \n  different",
      "order": 4,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "PRIMARY KEY",
      "content": "- A combination of a\nNOT NULL\nand\nUNIQUE\n.",
      "order": 5,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "FOREIGN KEY",
      "content": "- Prevents actions that would destroy links between tables",
      "order": 6,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "CHECK",
      "content": "- Ensures that \n  the values in a column satisfies a specific condition",
      "order": 7,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "DEFAULT",
      "content": "- Sets a default value for a column \n  if no value \n  is specified",
      "order": 8,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "CREATE INDEX",
      "content": "- Used to create and retrieve data from the database \n  very quickly\n\n\u2605\n+1",
      "order": 9,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "CREATE TABLE\ntable_name\n(\ncolumn1 datatype\nconstraint\n,\ncolumn2 datatype\nconstraint\n,\ncolumn3 datatype\nconstraint\n,\n....\n);",
      "language": "sql",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "CREATE TABLE\ntable_name\n(\ncolumn1 datatype\n# TODO: Complete this line\n,\ncolumn2 datatype\nconstraint\n,\ncolumn3 datatype\nconstraint\n,\n....\n);",
      "solution": "CREATE TABLE\ntable_name\n(\ncolumn1 datatype\nconstraint\n,\ncolumn2 datatype\nconstraint\n,\ncolumn3 datatype\nconstraint\n,\n....\n);"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "f5f6832c-e8cb-4cff-869e-d70510906d0a",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "1466a8c2-70a4-414f-9d20-95df7c172f1a",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "4514608e-3aba-41b8-bc7d-0b1df1654030",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is SQL\nConstraints\n\nSQL constraints?",
      "options": [
        "None of the above.",
        "used to specify rules for data in a table",
        "created with the\nCREATE TABLE\nstatement",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of SQL\nConstraints\n\nSQL constraints is 'used to specify rules for data in a table'."
    },
    {
      "question": "What is SQL Create Constraints\nConstraints can be specified when the table?",
      "options": [
        "used to specify rules for data in a table",
        "None of the above.",
        "None of the above.",
        "created with the\nCREATE TABLE\nstatement"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of SQL Create Constraints\nConstraints can be specified when the table is 'created with the\nCREATE TABLE\nstatement'."
    }
  ],
  "summary": "This tutorial covers SQLConstraints concepts and techniques. You'll learn how to use SQLConstraints effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of SQLConstraints and how to apply it in your projects."
}