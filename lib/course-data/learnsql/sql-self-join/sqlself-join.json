{
  "id": "ffd4c354-3f0f-4e4d-9c73-374994ed1a3d",
  "title": "SQLSelf Join",
  "slug": "sqlself-join",
  "metadata": {
    "description": "Learn about SQLSelf Join with clear explanations and practical examples.",
    "keywords": [
      "sql",
      "join",
      "city",
      "self",
      "table",
      "customers",
      "customerid",
      "customername",
      "select",
      "database",
      "trujillo"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Sql Basics"
    ],
    "estimated_time": 5,
    "category": "LearnSQL",
    "subcategory": "SQL Self Join"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "SQL\nSelf Join",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "SQL Self Join\nA self join is a regular join, but the table is joined with itself.\nSelf Join Syntax\nSELECT\ncolumn_name(s)\nFROM\ntable1 T1, table1 T2\nWHERE\ncondition\n;\nT1\nand\nT2\nare different table aliases for the same table.\nDemo Database\nIn this tutorial we will use the well-known Northwind sample database.\nBelow is a selection from the \"Customers\" table:\nCustomerID\nCustomerName\nContactName\nAddress\nCity\nPostalCode\nCountry\n1\nAlfreds Futterkiste\nMaria Anders\nObere Str. 57\nBerlin\n12209\nGermany\n2\nAna Trujillo Emparedados y helados\nAna Trujillo\nAvda. de la Constituci\u00f3n 2222\nM\u00e9xico D.F.\n05021\nMexico\n3\nAntonio Moreno Taquer\u00eda\nAntonio Moreno\nMataderos 2312\nM\u00e9xico D.F.\n05023\nMexico\nSQL Self Join Example\nThe following SQL statement matches customers that are from the same city:\nExample\nSELECT A.CustomerName AS CustomerName1, B.CustomerName AS CustomerName2, \n  A.City\nFROM Customers A, Customers B\nWHERE A.CustomerID <> B.CustomerID\nAND A.City = B.City\nORDER BY A.City;\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "SELECT\ncolumn_name(s)\nFROM\ntable1 T1, table1 T2\nWHERE\ncondition\n;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "SELECT A.CustomerName AS CustomerName1, B.CustomerName AS CustomerName2, \n  A.City\nFROM Customers A, Customers B\nWHERE A.CustomerID <> B.CustomerID\nAND A.City = B.City\nORDER BY A.City;",
      "language": "sql",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "SELECT\ncolumn_name(s)\n# TODO: Complete this line\ntable1 T1, table1 T2\nWHERE\ncondition\n;",
      "solution": "SELECT\ncolumn_name(s)\nFROM\ntable1 T1, table1 T2\nWHERE\ncondition\n;"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "SELECT A.CustomerName AS CustomerName1, B.CustomerName AS CustomerName2, \n  A.City\nFROM Customers A, Customers B\n# TODO: Complete this line\nAND A.City = B.City\nORDER BY A.City;",
      "solution": "SELECT A.CustomerName AS CustomerName1, B.CustomerName AS CustomerName2, \n  A.City\nFROM Customers A, Customers B\nWHERE A.CustomerID <> B.CustomerID\nAND A.City = B.City\nORDER BY A.City;"
    }
  ],
  "related_topics": [
    {
      "id": "b6d69fec-cbf2-4d09-8bba-3e9f805369fa",
      "title": "Sql Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "c6923f01-bd18-4cfc-992b-2d3e892bffad",
      "title": "Sql Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "a465005e-5e81-405e-9e79-6fc1f0f70bd9",
      "title": "Sql Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is SQL\nSelf Join\n\nSQL Self Join\nA self join?",
      "options": [
        "Not a SQL\nSelf Join\n\nSQL Self Join\nA self join.",
        "None of the above.",
        "None of the above.",
        "a regular join"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of SQL\nSelf Join\n\nSQL Self Join\nA self join is 'a regular join'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers SQLSelf Join concepts and techniques. You'll learn how to use SQLSelf Join effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of SQLSelf Join and how to apply it in your projects."
}