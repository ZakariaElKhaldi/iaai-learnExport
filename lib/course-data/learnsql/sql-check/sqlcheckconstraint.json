{
  "id": "621879ff-f08d-47fe-b7c1-9b11ab613f4d",
  "title": "SQLCHECKConstraint",
  "slug": "sqlcheckconstraint",
  "metadata": {
    "description": "Learn about SQLCHECKConstraint with clear explanations and practical examples.",
    "keywords": [
      "c",
      "check",
      "constraint",
      "table",
      "persons",
      "varchar",
      "null",
      "column",
      "create",
      "following",
      "mysql"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnSQL",
    "subcategory": "SQL Check"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "SQL\nCHECK\nConstraint",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "SQL CHECK Constraint\nThe\nCHECK\nconstraint is used to limit the value range that can be placed in a column.\nIf you define a\nCHECK\nconstraint on a column it \nwill allow only certain values for this column.\nIf you define a\nCHECK\nconstraint on a table it can limit the values in certain columns based on values in other columns in the row.\nSQL CHECK on CREATE TABLE\nThe following SQL creates a\nCHECK\nconstraint on the \"Age\" column when the \"Persons\" table is created.\nThe\nCHECK\nconstraint ensures that the age of a person must be 18, or older:\nMySQL:\nCREATE TABLE Persons\n(\nID int NOT NULL,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\nAge int,\nCHECK (Age>=18)\n);\nSQL Server / Oracle / MS Access:\nCREATE TABLE Persons\n(\nID int NOT NULL,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\nAge int\u00a0CHECK (Age>=18)\n);\nTo allow naming of a\nCHECK\nconstraint, and for defining a\nCHECK\nconstraint on multiple columns, use the following SQL syntax:\nMySQL / SQL Server / Oracle / MS Access:\nCREATE TABLE Persons\n(\nID int NOT NULL,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\nAge int,\nCity varchar(255),\nCONSTRAINT CHK_Person CHECK (Age>=18 AND City='Sandnes')\n);\nSQL CHECK on ALTER TABLE\nTo create a\nCHECK\nconstraint on the \"Age\" column when the table is already created, use the following SQL:\nMySQL / SQL Server / Oracle / MS Access:\nALTER TABLE Persons\nADD CHECK (Age>=18);\nTo allow naming of a\nCHECK\nconstraint, and for defining a\nCHECK\nconstraint on multiple columns, use the following SQL syntax:\nMySQL / SQL Server / Oracle / MS Access:\nALTER TABLE Persons\nADD CONSTRAINT CHK_PersonAge CHECK (Age>=18 AND City='Sandnes');\nDROP a CHECK Constraint\nTo drop a\nCHECK\nconstraint, use the following SQL:\nSQL Server / Oracle / MS Access:\nALTER TABLE Persons\nDROP CONSTRAINT CHK_PersonAge;\nMySQL:\nALTER TABLE Persons\nDROP CHECK CHK_PersonAge;\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "CREATE TABLE Persons\n(\nID int NOT NULL,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\nAge int,\nCHECK (Age>=18)\n);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "CREATE TABLE Persons\n(\nID int NOT NULL,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\nAge int\u00a0CHECK (Age>=18)\n);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "CREATE TABLE Persons\n(\nID int NOT NULL,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\nAge int,\nCity varchar(255),\nCONSTRAINT CHK_Person CHECK (Age>=18 AND City='Sandnes')\n);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "ALTER TABLE Persons\nADD CHECK (Age>=18);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "ALTER TABLE Persons\nADD CONSTRAINT CHK_PersonAge CHECK (Age>=18 AND City='Sandnes');",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "ALTER TABLE Persons\nDROP CONSTRAINT CHK_PersonAge;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "ALTER TABLE Persons\nDROP CHECK CHK_PersonAge;",
      "language": "sql",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "CREATE TABLE Persons\n(\nID int NOT NULL,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\nAge int,\nCHECK (Age>=18)\n# TODO: Complete this line",
      "solution": "CREATE TABLE Persons\n(\nID int NOT NULL,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\nAge int,\nCHECK (Age>=18)\n);"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "CREATE TABLE Persons\n(\nID int NOT NULL,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\n# TODO: Complete this line\n);",
      "solution": "CREATE TABLE Persons\n(\nID int NOT NULL,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\nAge int\u00a0CHECK (Age>=18)\n);"
    }
  ],
  "related_topics": [
    {
      "id": "b07e79b1-68f7-4130-8050-39b35c7e0d77",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "f6ee1c15-d84b-49e9-8102-a96c03a7a842",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "b200ba6e-9c8f-4d9a-9562-75b7d53b9451",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is SQL\nCHECK\nConstraint\n\nSQL CHECK Constraint\nThe\nCHECK\nconstraint?",
      "options": [
        "None of the above.",
        "used to limit the value range that can be placed in a column",
        "None of the above.",
        "created"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of SQL\nCHECK\nConstraint\n\nSQL CHECK Constraint\nThe\nCHECK\nconstraint is 'used to limit the value range that can be placed in a column'."
    },
    {
      "question": "What is table?",
      "options": [
        "None of the above.",
        "created",
        "None of the above.",
        "used to limit the value range that can be placed in a column"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of table is 'created'."
    }
  ],
  "summary": "This tutorial covers SQLCHECKConstraint concepts and techniques. You'll learn how to use SQLCHECKConstraint effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of SQLCHECKConstraint and how to apply it in your projects."
}