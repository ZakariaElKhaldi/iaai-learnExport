{
  "id": "b3fedef2-b39a-4253-aee3-193d4da97e32",
  "title": "SQLCHECK Keyword",
  "slug": "sqlcheck-keyword",
  "metadata": {
    "description": "Learn about SQLCHECK Keyword with clear explanations and practical examples.",
    "keywords": [
      "c",
      "check",
      "constraint",
      "table",
      "persons",
      "create",
      "following",
      "mysql",
      "server",
      "oracle",
      "access"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnSQL",
    "subcategory": "CHECK"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "SQL\nCHECK Keyword",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Reference\n\n\u276f\nCHECK\nThe\nCHECK\nconstraint limits the value that can be placed in a \ncolumn.\nSQL CHECK on CREATE TABLE\nThe following SQL creates a CHECK constraint on the \"Age\" column when the \"Persons\" table is created.\nThe CHECK constraint ensures that you can not have any person below 18 years:\nMySQL:\nCREATE TABLE Persons\n(\nAge int,\nCHECK (Age>=18)\n);\nSQL Server / Oracle / MS Access:\nCREATE TABLE Persons\n(\nAge int\u00a0CHECK (Age>=18)\n);\nTo allow naming of a CHECK constraint, and for defining a CHECK constraint on multiple columns, use the following SQL syntax:\nMySQL / SQL Server / Oracle / MS Access:\nCREATE TABLE Persons\n(\nAge int,\nCity varchar(255),\nCONSTRAINT CHK_Person CHECK (Age>=18 AND City='Sandnes')\n);\nSQL CHECK on ALTER TABLE\nTo create a CHECK constraint on the \"Age\" column when the table is already created, use the following SQL:\nMySQL / SQL Server / Oracle / MS Access:\nALTER TABLE Persons\nADD CHECK (Age>=18);\nTo allow naming of a CHECK constraint, and for defining a CHECK constraint on multiple columns, use the following SQL syntax:\nMySQL / SQL Server / Oracle / MS Access:\nALTER TABLE Persons\nADD CONSTRAINT CHK_PersonAge CHECK (Age>=18 AND City='Sandnes');\nDROP a CHECK Constraint\nTo drop a CHECK constraint, use the following SQL:\nSQL Server / Oracle / MS Access:\nALTER TABLE Persons\nDROP CONSTRAINT CHK_PersonAge;\nMySQL:\nALTER TABLE Persons\nDROP CHECK CHK_PersonAge;\n\nReference\n\n\u276f\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "CREATE TABLE Persons\n(\nAge int,\nCHECK (Age>=18)\n);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "CREATE TABLE Persons\n(\nAge int\u00a0CHECK (Age>=18)\n);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "CREATE TABLE Persons\n(\nAge int,\nCity varchar(255),\nCONSTRAINT CHK_Person CHECK (Age>=18 AND City='Sandnes')\n);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "ALTER TABLE Persons\nADD CHECK (Age>=18);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "ALTER TABLE Persons\nADD CONSTRAINT CHK_PersonAge CHECK (Age>=18 AND City='Sandnes');",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "ALTER TABLE Persons\nDROP CONSTRAINT CHK_PersonAge;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "ALTER TABLE Persons\nDROP CHECK CHK_PersonAge;",
      "language": "sql",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "CREATE TABLE Persons\n(\n# TODO: Complete this line\nCHECK (Age>=18)\n);",
      "solution": "CREATE TABLE Persons\n(\nAge int,\nCHECK (Age>=18)\n);"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "CREATE TABLE Persons\n(\nAge int\u00a0CHECK (Age>=18)\n# TODO: Complete this line",
      "solution": "CREATE TABLE Persons\n(\nAge int\u00a0CHECK (Age>=18)\n);"
    }
  ],
  "related_topics": [
    {
      "id": "8b403da9-8f29-457b-a35c-273bd082d7e5",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "ffdf279d-5787-49ed-ab48-be415a65eb3c",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "0564d421-1f80-4c61-8c07-746a4a4ab781",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is table?",
      "options": [
        "already created",
        "created",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of table is 'created'."
    },
    {
      "question": "What is column when the table?",
      "options": [
        "None of the above.",
        "None of the above.",
        "already created",
        "created"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of column when the table is 'already created'."
    }
  ],
  "summary": "This tutorial covers SQLCHECK Keyword concepts and techniques. You'll learn how to use SQLCHECK Keyword effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of SQLCHECK Keyword and how to apply it in your projects."
}