{
  "id": "4e21358d-c686-4bed-8285-7171d64f410f",
  "title": "SQLLEFT JOINKeyword",
  "slug": "sqlleft-joinkeyword",
  "metadata": {
    "description": "Learn about SQLLEFT JOINKeyword with clear explanations and practical examples.",
    "keywords": [
      "sql",
      "left",
      "join",
      "customers",
      "table",
      "orders",
      "keyword",
      "records",
      "customerid",
      "right",
      "select"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Sql Basics"
    ],
    "estimated_time": 5,
    "category": "LearnSQL",
    "subcategory": "SQL Left Join"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "SQL\nLEFT JOIN\nKeyword",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "SQL LEFT JOIN Keyword\nThe\nLEFT JOIN\nkeyword returns all records from the left table (table1), and the \nmatching records from the right table (table2). The result is 0 records from the right side, \nif there is no match.\nLEFT JOIN Syntax\nSELECT\ncolumn_name(s)\nFROM\ntable1\nLEFT JOIN\ntable2\nON\ntable1.column_name\n=\ntable2.column_name\n;\nNote:\nIn some databases LEFT JOIN is called LEFT OUTER JOIN.\nDemo Database\nIn this tutorial we will use the well-known Northwind sample database.\nBelow is a selection from the \"Customers\" table:\nCustomerID\nCustomerName\nContactName\nAddress\nCity\nPostalCode\nCountry\n1\nAlfreds Futterkiste\nMaria Anders\nObere Str. 57\nBerlin\n12209\nGermany\n2\nAna Trujillo Emparedados y helados\nAna Trujillo\nAvda. de la Constituci\u00f3n 2222\nM\u00e9xico D.F.\n05021\nMexico\n3\nAntonio Moreno Taquer\u00eda\nAntonio Moreno\nMataderos 2312\nM\u00e9xico D.F.\n05023\nMexico\nAnd a selection from the \"Orders\" table:\nOrderID\nCustomerID\nEmployeeID\nOrderDate\nShipperID\n10308\n2\n7\n1996-09-18\n3\n10309\n37\n3\n1996-09-19\n1\n10310\n77\n8\n1996-09-20\n2\nSQL LEFT JOIN Example\nThe following SQL statement will select all customers, and any orders they \nmight have:\nExample\nSELECT Customers.CustomerName, Orders.OrderID\nFROM Customers\nLEFT JOIN Orders\n ON Customers.CustomerID = Orders.CustomerID\nORDER BY Customers.CustomerName;\n\nNote:\nThe\nLEFT JOIN\nkeyword returns all records from the \nleft table (Customers), even if there are no matches in the right table \n(Orders).\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "SELECT\ncolumn_name(s)\nFROM\ntable1\nLEFT JOIN\ntable2\nON\ntable1.column_name\n=\ntable2.column_name\n;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "SELECT Customers.CustomerName, Orders.OrderID\nFROM Customers\nLEFT JOIN Orders\n ON Customers.CustomerID = Orders.CustomerID\nORDER BY Customers.CustomerName;",
      "language": "sql",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "SELECT\n# TODO: Complete this line\nFROM\ntable1\nLEFT JOIN\ntable2\nON\ntable1.column_name\n=\ntable2.column_name\n;",
      "solution": "SELECT\ncolumn_name(s)\nFROM\ntable1\nLEFT JOIN\ntable2\nON\ntable1.column_name\n=\ntable2.column_name\n;"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "SELECT Customers.CustomerName, Orders.OrderID\nFROM Customers\n# TODO: Complete this line\n ON Customers.CustomerID = Orders.CustomerID\nORDER BY Customers.CustomerName;",
      "solution": "SELECT Customers.CustomerName, Orders.OrderID\nFROM Customers\nLEFT JOIN Orders\n ON Customers.CustomerID = Orders.CustomerID\nORDER BY Customers.CustomerName;"
    }
  ],
  "related_topics": [
    {
      "id": "9ed036fa-f2e8-435f-8dc7-25edb150b3dc",
      "title": "Sql Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "6956acb9-f362-4418-963d-55ddcd030cfd",
      "title": "Sql Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "172457d8-9cf3-4329-99bc-b2868075abb4",
      "title": "Sql Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The result?",
      "options": [
        "None of the above.",
        "None of the above.",
        "0 records from the right side",
        "called LEFT OUTER JOIN"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of The result is '0 records from the right side'."
    },
    {
      "question": "What is In some databases LEFT JOIN?",
      "options": [
        "None of the above.",
        "0 records from the right side",
        "None of the above.",
        "called LEFT OUTER JOIN"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of In some databases LEFT JOIN is 'called LEFT OUTER JOIN'."
    }
  ],
  "summary": "This tutorial covers SQLLEFT JOINKeyword concepts and techniques. You'll learn how to use SQLLEFT JOINKeyword effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of SQLLEFT JOINKeyword and how to apply it in your projects."
}