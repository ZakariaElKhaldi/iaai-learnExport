{
  "id": "50d20ef7-c20c-46c6-afc6-c4648d1e9456",
  "title": "SQLJoins",
  "slug": "sqljoins",
  "metadata": {
    "description": "Learn about SQLJoins with clear explanations and practical examples.",
    "keywords": [
      "sql",
      "table",
      "join",
      "customerid",
      "records",
      "orders",
      "customers",
      "tables",
      "returns",
      "left",
      "right"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Sql Basics"
    ],
    "estimated_time": 5,
    "category": "LearnSQL",
    "subcategory": "SQL Joins"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "SQL\nJoins",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "SQL JOIN\nA\nJOIN\nclause is used to combine rows from two or more tables, based on \na related column between them.\nLet's look at a selection from the \"Orders\" table:\nOrderID\nCustomerID\nOrderDate\n10308\n2\n1996-09-18\n10309\n37\n1996-09-19\n10310\n77\n1996-09-20\nThen, look at a selection from the \"Customers\" table:\nCustomerID\nCustomerName\nContactName\nCountry\n1\nAlfreds Futterkiste\nMaria Anders\nGermany\n2\nAna Trujillo Emparedados y helados\nAna Trujillo\nMexico\n3\nAntonio Moreno Taquer\u00eda\nAntonio Moreno\nMexico\nNotice that the \"CustomerID\" column in the \"Orders\" table refers to the \n\"CustomerID\" in the \"Customers\" table. The relationship between the two tables above \nis the \"CustomerID\" column.\nThen, we can create the following SQL statement (that contains an\nINNER JOIN\n), \nthat selects records that have matching values in both tables:\nExample\nSELECT Orders.OrderID, Customers.CustomerName, Orders.OrderDate\nFROM Orders\nINNER JOIN Customers ON Orders.CustomerID=Customers.CustomerID;\n\nand it will produce something like this:\nOrderID\nCustomerName\nOrderDate\n10308\nAna Trujillo Emparedados y helados\n9/18/1996\n10365\nAntonio Moreno Taquer\u00eda\n11/27/1996\n10383\nAround the Horn\n12/16/1996\n10355\nAround the Horn\n11/15/1996\n10278\nBerglunds snabbk\u00f6p\n8/12/1996\nDifferent Types of SQL JOINs\nHere are the different types of the JOINs in SQL:\n(INNER) JOIN\n: Returns records that have matching values in both tables\nLEFT (OUTER) JOIN\n: Returns all records from the left table, and the matched records from the right table\nRIGHT (OUTER) JOIN\n: Returns all records from the right table, and the matched \n  records from the left table\nFULL (OUTER) JOIN\n: Returns all records when there is a match in either left \n  or right table\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "SELECT Orders.OrderID, Customers.CustomerName, Orders.OrderDate\nFROM Orders\nINNER JOIN Customers ON Orders.CustomerID=Customers.CustomerID;",
      "language": "sql",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "SELECT Orders.OrderID, Customers.CustomerName, Orders.OrderDate\n# TODO: Complete this line\nINNER JOIN Customers ON Orders.CustomerID=Customers.CustomerID;",
      "solution": "SELECT Orders.OrderID, Customers.CustomerName, Orders.OrderDate\nFROM Orders\nINNER JOIN Customers ON Orders.CustomerID=Customers.CustomerID;"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "49f660ce-3e86-4869-a6ac-fe982c2c11c0",
      "title": "Sql Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "ab0f7f60-ed9f-4dab-9943-c0217708eccc",
      "title": "Sql Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "80c07e68-61f8-4b2c-9085-a71f6295a25e",
      "title": "Sql Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is SQL\nJoins\n\nSQL JOIN\nA\nJOIN\nclause?",
      "options": [
        "the \"CustomerID\" column",
        "used to combine rows from two or more tables",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of SQL\nJoins\n\nSQL JOIN\nA\nJOIN\nclause is 'used to combine rows from two or more tables'."
    },
    {
      "question": "What is The relationship between the two tables above?",
      "options": [
        "None of the above.",
        "used to combine rows from two or more tables",
        "the \"CustomerID\" column",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of The relationship between the two tables above is 'the \"CustomerID\" column'."
    }
  ],
  "summary": "This tutorial covers SQLJoins concepts and techniques. You'll learn how to use SQLJoins effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of SQLJoins and how to apply it in your projects."
}