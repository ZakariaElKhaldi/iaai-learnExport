{
  "id": "fd1aaf08-a8bf-4d59-9e12-699871e5f6d6",
  "title": "SQLFOREIGN KEYConstraint",
  "slug": "sqlforeign-keyconstraint",
  "metadata": {
    "description": "Learn about SQLFOREIGN KEYConstraint with clear explanations and practical examples.",
    "keywords": [
      "c",
      "table",
      "foreign",
      "personid",
      "constraint",
      "orders",
      "persons",
      "column",
      "primary",
      "following",
      "orderid"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnSQL",
    "subcategory": "SQL Foreign Key"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "SQL\nFOREIGN KEY\nConstraint",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "SQL FOREIGN KEY Constraint\nThe\nFOREIGN KEY\nconstraint is used to prevent actions that would destroy links between tables.\nA\nFOREIGN KEY\nis a field (or collection of fields) in one table, that refers to \nthe\nPRIMARY KEY\nin another table.\nThe table with the foreign key is called the child table, and the table \nwith the primary key is called the referenced or parent table.\nLook at the following two tables:\nPersons Table\nPersonID\nLastName\nFirstName\nAge\n1\nHansen\nOla\n30\n2\nSvendson\nTove\n23\n3\nPettersen\nKari\n20\nOrders Table\nOrderID\nOrderNumber\nPersonID\n1\n77895\n3\n2\n44678\n3\n3\n22456\n2\n4\n24562\n1\nNotice that the \"PersonID\" column in the \"Orders\" table points to the \"PersonID\" column in the \"Persons\" table.\nThe \"PersonID\" column in the \"Persons\" table is the\nPRIMARY KEY\nin the \"Persons\" table.\nThe \"PersonID\" column in the \"Orders\" table is a\nFOREIGN KEY\nin the \"Orders\" table.\nThe\nFOREIGN KEY\nconstraint prevents invalid data from being inserted into the foreign key column,\nbecause it has to be one of the values contained in the parent table.\nSQL FOREIGN KEY on CREATE TABLE\nThe following SQL creates a\nFOREIGN KEY\non the \"PersonID\" column when the \"Orders\" table is created:\nMySQL:\nCREATE TABLE Orders\n(\nOrderID int NOT NULL,\nOrderNumber int NOT NULL,\nPersonID int,\nPRIMARY KEY (OrderID),\nFOREIGN KEY (PersonID) REFERENCES Persons(PersonID)\n);\nSQL Server / Oracle / MS Access:\nCREATE TABLE Orders\n(\nOrderID int NOT NULL PRIMARY KEY,\nOrderNumber int NOT NULL,\nPersonID int FOREIGN KEY REFERENCES Persons(PersonID)\n);\nTo allow naming of a\nFOREIGN KEY\nconstraint, and for defining a\nFOREIGN KEY\nconstraint on multiple columns, use the following SQL syntax:\nMySQL / SQL Server / Oracle / MS Access:\nCREATE TABLE Orders\n(\nOrderID int NOT NULL,\nOrderNumber int NOT NULL,\nPersonID int,\nPRIMARY KEY (OrderID),\nCONSTRAINT FK_PersonOrder FOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID)\n);\nSQL FOREIGN KEY on ALTER TABLE\nTo create a\nFOREIGN KEY\nconstraint on the \"PersonID\" column when the \"Orders\" table is already created, use the following SQL:\nMySQL / SQL Server / Oracle / MS Access:\nALTER TABLE Orders\nADD FOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID);\nTo allow naming of a\nFOREIGN KEY\nconstraint, and for defining a\nFOREIGN KEY\nconstraint on multiple columns, use the following SQL syntax:\nMySQL / SQL Server / Oracle / MS Access:\nALTER TABLE Orders\nADD CONSTRAINT FK_PersonOrder\nFOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID);\nDROP a FOREIGN KEY Constraint\nTo drop a\nFOREIGN KEY\nconstraint, use the following SQL:\nMySQL:\nALTER TABLE Orders\nDROP FOREIGN KEY FK_PersonOrder;\nSQL Server / Oracle / MS Access:\nALTER TABLE Orders\nDROP CONSTRAINT FK_PersonOrder;\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "CREATE TABLE Orders\n(\nOrderID int NOT NULL,\nOrderNumber int NOT NULL,\nPersonID int,\nPRIMARY KEY (OrderID),\nFOREIGN KEY (PersonID) REFERENCES Persons(PersonID)\n);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "CREATE TABLE Orders\n(\nOrderID int NOT NULL PRIMARY KEY,\nOrderNumber int NOT NULL,\nPersonID int FOREIGN KEY REFERENCES Persons(PersonID)\n);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "CREATE TABLE Orders\n(\nOrderID int NOT NULL,\nOrderNumber int NOT NULL,\nPersonID int,\nPRIMARY KEY (OrderID),\nCONSTRAINT FK_PersonOrder FOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID)\n);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "ALTER TABLE Orders\nADD FOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "ALTER TABLE Orders\nADD CONSTRAINT FK_PersonOrder\nFOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "ALTER TABLE Orders\nDROP FOREIGN KEY FK_PersonOrder;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "ALTER TABLE Orders\nDROP CONSTRAINT FK_PersonOrder;",
      "language": "sql",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "CREATE TABLE Orders\n(\nOrderID int NOT NULL,\nOrderNumber int NOT NULL,\nPersonID int,\n# TODO: Complete this line\nFOREIGN KEY (PersonID) REFERENCES Persons(PersonID)\n);",
      "solution": "CREATE TABLE Orders\n(\nOrderID int NOT NULL,\nOrderNumber int NOT NULL,\nPersonID int,\nPRIMARY KEY (OrderID),\nFOREIGN KEY (PersonID) REFERENCES Persons(PersonID)\n);"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "CREATE TABLE Orders\n# TODO: Complete this line\nOrderID int NOT NULL PRIMARY KEY,\nOrderNumber int NOT NULL,\nPersonID int FOREIGN KEY REFERENCES Persons(PersonID)\n);",
      "solution": "CREATE TABLE Orders\n(\nOrderID int NOT NULL PRIMARY KEY,\nOrderNumber int NOT NULL,\nPersonID int FOREIGN KEY REFERENCES Persons(PersonID)\n);"
    }
  ],
  "related_topics": [
    {
      "id": "3548fb27-c107-4771-85d1-3893d90d3e4c",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "d31d2611-802b-480e-8ca9-6a985540f526",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "0541b4c2-0df9-4f58-9c98-0b8e6170aa9c",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is SQL\nFOREIGN KEY\nConstraint\n\nSQL FOREIGN KEY Constraint\nThe\nFOREIGN KEY\nconstraint?",
      "options": [
        "used to prevent actions that would destroy links between tables",
        "a field (or collection of fields) in one table",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of SQL\nFOREIGN KEY\nConstraint\n\nSQL FOREIGN KEY Constraint\nThe\nFOREIGN KEY\nconstraint is 'used to prevent actions that would destroy links between tables'."
    },
    {
      "question": "What is A\nFOREIGN KEY?",
      "options": [
        "a field (or collection of fields) in one table",
        "None of the above.",
        "used to prevent actions that would destroy links between tables",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of A\nFOREIGN KEY is 'a field (or collection of fields) in one table'."
    }
  ],
  "summary": "This tutorial covers SQLFOREIGN KEYConstraint concepts and techniques. You'll learn how to use SQLFOREIGN KEYConstraint effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of SQLFOREIGN KEYConstraint and how to apply it in your projects."
}