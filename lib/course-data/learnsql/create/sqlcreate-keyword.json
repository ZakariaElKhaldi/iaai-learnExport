{
  "id": "e15f305b-ad2c-4295-b116-10c20385f1ab",
  "title": "SQLCREATE Keyword",
  "slug": "sqlcreate-keyword",
  "metadata": {
    "description": "Learn about SQLCREATE Keyword with clear explanations and practical examples.",
    "keywords": [
      "c",
      "create",
      "table",
      "view",
      "customers",
      "index",
      "database",
      "creates",
      "following",
      "command",
      "example"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnSQL",
    "subcategory": "CREATE"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "SQL\nCREATE Keyword",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Reference\n\n\u276f\nCREATE DATABASE\nThe\nCREATE DATABASE\ncommand is used is to \ncreate a new SQL database.\nThe following SQL creates a database called \"testDB\":\nExample\nCREATE DATABASE testDB;\nTip:\nMake sure you have admin privilege before creating any database. Once a \ndatabase is created, you can check it in the list of databases with the \nfollowing SQL command: SHOW DATABASES;\nCREATE TABLE\nThe\nCREATE TABLE\ncommand creates a new table \nin the database.\nThe following SQL creates a table called \"Persons\" that contains five columns: PersonID, LastName, FirstName, \nAddress, and City:\nExample\nCREATE TABLE Persons\n(\nPersonID int,\nLastName varchar(255),\nFirstName varchar(255),\nAddress varchar(255),\nCity varchar(255)\n);\nCREATE TABLE Using Another Table\nThe following SQL creates a new table called \"TestTables\" (which is \na copy of two columns of the \"Customers\" table):\nExample\nCREATE TABLE TestTable AS\nSELECT customername, contactname\nFROM customers;\nCREATE INDEX\nThe\nCREATE INDEX\ncommand is used to \ncreate indexes in tables (allows duplicate values).\nIndexes are used to retrieve data from the database very fast. The users cannot see the indexes, they are just used to speed up searches/queries.\nThe following SQL creates an index named \"idx_lastname\" on the \"LastName\" column in the \"Persons\" table:\nCREATE INDEX idx_lastname\nON Persons (LastName);\nIf you want to create an index on a combination of columns, you can list the column names within the parentheses, separated by commas:\nCREATE INDEX idx_pname\nON Persons (LastName, FirstName);\nNote:\nThe syntax for creating indexes varies among different databases. Therefore: Check the syntax for creating indexes in your database.\nNote:\nUpdating a table with indexes takes more time than updating a table without (because the indexes also need an update).\nSo, only create indexes on columns that will be frequently searched against.\nCREATE UNIQUE INDEX\nThe\nCREATE UNIQUE INDEX\ncommand creates a unique index on a table (no duplicate values \nallowed)\nThe following SQL creates an index named \"uidx_pid\" on the \"PersonID\" column in the \"Persons\" table:\nCREATE UNIQUE INDEX uidx_pid\nON Persons (PersonID);\nCREATE VIEW\nThe\nCREATE VIEW\ncommand creates a view.\nA view is a virtual table based on the result set of an SQL statement.\nThe following SQL creates a view that selects all customers from Brazil:\nExample\nCREATE VIEW [Brazil Customers] AS\nSELECT CustomerName, ContactName\nFROM Customers\nWHERE Country = \"Brazil\";\nCREATE OR REPLACE VIEW\nThe\nCREATE OR REPLACE VIEW\ncommand updates a view.\nThe following SQL adds the \"City\" column to the \"Brazil Customers\" view:\nExample\nCREATE OR REPLACE VIEW [Brazil Customers] AS\nSELECT CustomerName, ContactName, City\nFROM Customers\nWHERE Country = \"Brazil\";\nQuery The View\nWe can query the view above as follows:\nExample\nSELECT * FROM [Brazil \n  Customers];\nCREATE PROCEDURE\nThe\nCREATE PROCEDURE\ncommand is used to \ncreate a stored procedure.\nA stored procedure is a prepared SQL code that you can save, so the \ncode can be reused over and over again.\nThe following SQL creates a stored procedure named \"SelectAllCustomers\" \nthat selects all records from the \"Customers\" table:\nExample\nCREATE PROCEDURE SelectAllCustomers\nAS\nSELECT * FROM Customers\nGO;\nExecute the stored procedure above as follows:\nExample\nEXEC SelectAllCustomers;\n\nReference\n\n\u276f\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "CREATE DATABASE testDB;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "CREATE TABLE Persons\n(\nPersonID int,\nLastName varchar(255),\nFirstName varchar(255),\nAddress varchar(255),\nCity varchar(255)\n);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "CREATE TABLE TestTable AS\nSELECT customername, contactname\nFROM customers;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "CREATE INDEX idx_lastname\nON Persons (LastName);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "CREATE INDEX idx_pname\nON Persons (LastName, FirstName);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "CREATE UNIQUE INDEX uidx_pid\nON Persons (PersonID);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "CREATE VIEW [Brazil Customers] AS\nSELECT CustomerName, ContactName\nFROM Customers\nWHERE Country = \"Brazil\";",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "CREATE OR REPLACE VIEW [Brazil Customers] AS\nSELECT CustomerName, ContactName, City\nFROM Customers\nWHERE Country = \"Brazil\";",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "SELECT * FROM [Brazil \n  Customers];",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": "CREATE PROCEDURE SelectAllCustomers\nAS\nSELECT * FROM Customers\nGO;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 13,
      "code": "EXEC SelectAllCustomers;",
      "language": "sql",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your sql code here",
      "solution": "CREATE DATABASE testDB;"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "CREATE TABLE Persons\n(\nPersonID int,\nLastName varchar(255),\nFirstName varchar(255),\nAddress varchar(255),\n# TODO: Complete this line\n);",
      "solution": "CREATE TABLE Persons\n(\nPersonID int,\nLastName varchar(255),\nFirstName varchar(255),\nAddress varchar(255),\nCity varchar(255)\n);"
    }
  ],
  "related_topics": [
    {
      "id": "e5881f12-8e62-4dfb-a113-2ac8126f8000",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "9832e60a-d740-4bb2-b8c5-89bd3a055a89",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "0ae6dc8f-5c92-458a-bdda-8ca961e1439f",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is CREATE DATABASE\nThe\nCREATE DATABASE\ncommand is used?",
      "options": [
        "created",
        "None of the above.",
        "to \ncreate a new SQL database",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of CREATE DATABASE\nThe\nCREATE DATABASE\ncommand is used is 'to \ncreate a new SQL database'."
    },
    {
      "question": "What is Once a \ndatabase?",
      "options": [
        "to \ncreate a new SQL database",
        "None of the above.",
        "None of the above.",
        "created"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Once a \ndatabase is 'created'."
    }
  ],
  "summary": "This tutorial covers SQLCREATE Keyword concepts and techniques. You'll learn how to use SQLCREATE Keyword effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of SQLCREATE Keyword and how to apply it in your projects."
}