{
  "id": "dabebbc2-5fd3-4791-81a1-99943d85c38b",
  "title": "SQLLEFT JOIN Keyword",
  "slug": "sqlleft-join-keyword",
  "metadata": {
    "description": "Learn about SQLLEFT JOIN Keyword with clear explanations and practical examples.",
    "keywords": [
      "sql",
      "left",
      "customers",
      "join",
      "orders",
      "table",
      "right",
      "keyword",
      "reference",
      "returns",
      "rows"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Sql Basics"
    ],
    "estimated_time": 5,
    "category": "LearnSQL",
    "subcategory": "LEFT JOIN"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "SQL\nLEFT JOIN Keyword",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Reference\n\n\u276f\nLEFT JOIN\nThe\nLEFT JOIN\ncommand returns all rows from \nthe left table, and the matching rows from the right table. The result is NULL \nfrom the right side, if there is no match.\nThe following SQL will select all customers, and any orders they \nmight have:\nExample\nSELECT Customers.CustomerName, Orders.OrderID\nFROM Customers\nLEFT JOIN Orders\n ON Customers.CustomerID = Orders.CustomerID\nORDER BY Customers.CustomerName;\n\nNote:\nThe\nLEFT JOIN\nkeyword returns all records from the \nleft table (Customers), even if there are no matches in the right table \n(Orders).\n\nReference\n\n\u276f\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "SELECT Customers.CustomerName, Orders.OrderID\nFROM Customers\nLEFT JOIN Orders\n ON Customers.CustomerID = Orders.CustomerID\nORDER BY Customers.CustomerName;",
      "language": "sql",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "SELECT Customers.CustomerName, Orders.OrderID\nFROM Customers\nLEFT JOIN Orders\n ON Customers.CustomerID = Orders.CustomerID\n# TODO: Complete this line",
      "solution": "SELECT Customers.CustomerName, Orders.OrderID\nFROM Customers\nLEFT JOIN Orders\n ON Customers.CustomerID = Orders.CustomerID\nORDER BY Customers.CustomerName;"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "9d60d8d2-99d4-4903-ba39-37923093417f",
      "title": "Sql Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "138008ef-8044-4816-9cff-2c6d3bbcb27c",
      "title": "Sql Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "e4010aaa-607c-4157-b85c-f8dcaafb2748",
      "title": "Sql Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The result?",
      "options": [
        "no matches in the right table \n(Orders)",
        "None of the above.",
        "NULL \nfrom the right side",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of The result is 'NULL \nfrom the right side'."
    },
    {
      "question": "What is even if there?",
      "options": [
        "None of the above.",
        "NULL \nfrom the right side",
        "None of the above.",
        "no matches in the right table \n(Orders)"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of even if there is 'no matches in the right table \n(Orders)'."
    }
  ],
  "summary": "This tutorial covers SQLLEFT JOIN Keyword concepts and techniques. You'll learn how to use SQLLEFT JOIN Keyword effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of SQLLEFT JOIN Keyword and how to apply it in your projects."
}