{
  "id": "4bbcb15d-b89a-4bca-a9cf-be6dc3c6dfed",
  "title": "SQLSELECT INTOStatement",
  "slug": "sqlselect-intostatement",
  "metadata": {
    "description": "Learn about SQLSELECT INTOStatement with clear explanations and practical examples.",
    "keywords": [
      "c",
      "select",
      "table",
      "customers",
      "statement",
      "following",
      "copies",
      "copy",
      "data",
      "columns",
      "newtable"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnSQL",
    "subcategory": "SQL Select Into"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "SQL\nSELECT INTO\nStatement",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The SQL SELECT INTO Statement\nThe\nSELECT INTO\nstatement copies data from one table into a new table.\nSELECT INTO Syntax\nCopy all columns into a new table:\nSELECT *\nINTO\nnewtable\n[IN\nexternaldb\n]\nFROM\noldtable\nWHERE\ncondition\n;\nCopy only some columns into a new table:\nSELECT\ncolumn1\n,\ncolumn2\n,\ncolumn3\n, ...\nINTO\nnewtable\n[IN\nexternaldb\n]\nFROM\noldtable\nWHERE\ncondition;\nThe new table will be created with the column-names and types as defined in the old table.\nYou can create new column names using the\nAS\nclause.\nSQL SELECT INTO Examples\nThe following SQL statement creates a backup copy of Customers:\nSELECT * INTO CustomersBackup2017\nFROM Customers;\nThe following SQL statement uses the\nIN\nclause to copy the table into a new \ntable in another database:\nSELECT *\nINTO CustomersBackup2017 IN 'Backup.mdb'\nFROM Customers;\nThe following SQL statement copies only a few columns into a new table:\nSELECT CustomerName, ContactName INTO CustomersBackup2017\nFROM Customers;\nThe following SQL statement copies only the German customers into a new table:\nSELECT *\nINTO CustomersGermany\nFROM Customers\nWHERE Country = 'Germany';\nThe following SQL statement copies data from more than one table into a new table:\nSELECT Customers.CustomerName, Orders.OrderID\nINTO CustomersOrderBackup2017\nFROM Customers\nLEFT JOIN Orders\n ON Customers.CustomerID = Orders.CustomerID;\nTip:\nSELECT INTO\ncan also be used to create a \nnew, empty table using the schema of another. Just add a\nWHERE\nclause that \ncauses the query to return no data:\nSELECT * INTO\nnewtable\nFROM\noldtable\nWHERE 1 = 0;\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "SELECT *\nINTO\nnewtable\n[IN\nexternaldb\n]\nFROM\noldtable\nWHERE\ncondition\n;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "SELECT\ncolumn1\n,\ncolumn2\n,\ncolumn3\n, ...\nINTO\nnewtable\n[IN\nexternaldb\n]\nFROM\noldtable\nWHERE\ncondition;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "SELECT * INTO CustomersBackup2017\nFROM Customers;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "SELECT *\nINTO CustomersBackup2017 IN 'Backup.mdb'\nFROM Customers;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "SELECT CustomerName, ContactName INTO CustomersBackup2017\nFROM Customers;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "SELECT *\nINTO CustomersGermany\nFROM Customers\nWHERE Country = 'Germany';",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "SELECT Customers.CustomerName, Orders.OrderID\nINTO CustomersOrderBackup2017\nFROM Customers\nLEFT JOIN Orders\n ON Customers.CustomerID = Orders.CustomerID;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "SELECT * INTO\nnewtable\nFROM\noldtable\nWHERE 1 = 0;",
      "language": "sql",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "SELECT *\nINTO\nnewtable\n[IN\nexternaldb\n]\nFROM\noldtable\nWHERE\ncondition\n# TODO: Complete this line",
      "solution": "SELECT *\nINTO\nnewtable\n[IN\nexternaldb\n]\nFROM\noldtable\nWHERE\ncondition\n;"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "SELECT\ncolumn1\n,\n# TODO: Complete this line\n,\ncolumn3\n, ...\nINTO\nnewtable\n[IN\nexternaldb\n]\nFROM\noldtable\nWHERE\ncondition;",
      "solution": "SELECT\ncolumn1\n,\ncolumn2\n,\ncolumn3\n, ...\nINTO\nnewtable\n[IN\nexternaldb\n]\nFROM\noldtable\nWHERE\ncondition;"
    }
  ],
  "related_topics": [
    {
      "id": "e5f3dc00-1992-4efe-9d06-00d038774142",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "3f49eaae-eb77-4dbb-99e4-469bf2ec08fa",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "6e61c0c6-2127-45d6-8c39-771071d0c7d1",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers SQLSELECT INTOStatement concepts and techniques. You'll learn how to use SQLSELECT INTOStatement effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of SQLSELECT INTOStatement and how to apply it in your projects."
}