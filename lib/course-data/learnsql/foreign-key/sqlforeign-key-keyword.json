{
  "id": "7c86f846-0ab4-49ba-a7b6-82f55efd3f84",
  "title": "SQLFOREIGN KEY Keyword",
  "slug": "sqlforeign-key-keyword",
  "metadata": {
    "description": "Learn about SQLFOREIGN KEY Keyword with clear explanations and practical examples.",
    "keywords": [
      "sql",
      "foreign",
      "personid",
      "table",
      "constraint",
      "orders",
      "null",
      "create",
      "following",
      "mysql",
      "orderid"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Sql Basics"
    ],
    "estimated_time": 5,
    "category": "LearnSQL",
    "subcategory": "FOREIGN KEY"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "SQL\nFOREIGN KEY Keyword",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Reference\n\n\u276f\nFOREIGN KEY\nThe\nFOREIGN KEY\nconstraint is a key used to link two tables together.\nA FOREIGN KEY is a field (or collection of fields) in one table that refers to \nthe PRIMARY KEY in another table.\nSQL FOREIGN KEY on CREATE TABLE\nThe following SQL creates a FOREIGN KEY on the \"PersonID\" column when the \"Orders\" table is created:\nMySQL:\nCREATE TABLE Orders\n(\nOrderID int NOT NULL,\nOrderNumber int NOT NULL,\nPersonID int,\nPRIMARY KEY (OrderID),\nFOREIGN KEY (PersonID) REFERENCES Persons(PersonID)\n);\nSQL Server / Oracle / MS Access:\nCREATE TABLE Orders\n(\nOrderID int NOT NULL PRIMARY KEY,\nOrderNumber int NOT NULL,\nPersonID int FOREIGN KEY REFERENCES Persons(PersonID)\n);\nTo allow naming of a FOREIGN KEY constraint, and for defining a FOREIGN KEY constraint on multiple columns, use the following SQL syntax:\nMySQL / SQL Server / Oracle / MS Access:\nCREATE TABLE Orders\n(\nOrderID int NOT NULL,\nOrderNumber int NOT NULL,\nPersonID int,\nPRIMARY KEY (OrderID),\nCONSTRAINT FK_PersonOrder FOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID)\n);\nSQL FOREIGN KEY on ALTER TABLE\nTo create a FOREIGN KEY constraint on the \"PersonID\" column when the \"Orders\" table is already created, use the following SQL:\nMySQL / SQL Server / Oracle / MS Access:\nALTER TABLE Orders\nADD FOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID);\nTo allow naming of a FOREIGN KEY constraint, and for defining a FOREIGN KEY constraint on multiple columns, use the following SQL syntax:\nMySQL / SQL Server / Oracle / MS Access:\nALTER TABLE Orders\nADD CONSTRAINT FK_PersonOrder\nFOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID);\nDROP a FOREIGN KEY Constraint\nTo drop a FOREIGN KEY constraint, use the following SQL:\nMySQL:\nALTER TABLE Orders\nDROP FOREIGN KEY FK_PersonOrder;\nSQL Server / Oracle / MS Access:\nALTER TABLE Orders\nDROP CONSTRAINT FK_PersonOrder;\n\nReference\n\n\u276f\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "CREATE TABLE Orders\n(\nOrderID int NOT NULL,\nOrderNumber int NOT NULL,\nPersonID int,\nPRIMARY KEY (OrderID),\nFOREIGN KEY (PersonID) REFERENCES Persons(PersonID)\n);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "CREATE TABLE Orders\n(\nOrderID int NOT NULL PRIMARY KEY,\nOrderNumber int NOT NULL,\nPersonID int FOREIGN KEY REFERENCES Persons(PersonID)\n);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "CREATE TABLE Orders\n(\nOrderID int NOT NULL,\nOrderNumber int NOT NULL,\nPersonID int,\nPRIMARY KEY (OrderID),\nCONSTRAINT FK_PersonOrder FOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID)\n);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "ALTER TABLE Orders\nADD FOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "ALTER TABLE Orders\nADD CONSTRAINT FK_PersonOrder\nFOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "ALTER TABLE Orders\nDROP FOREIGN KEY FK_PersonOrder;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "ALTER TABLE Orders\nDROP CONSTRAINT FK_PersonOrder;",
      "language": "sql",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "CREATE TABLE Orders\n(\n# TODO: Complete this line\nOrderNumber int NOT NULL,\nPersonID int,\nPRIMARY KEY (OrderID),\nFOREIGN KEY (PersonID) REFERENCES Persons(PersonID)\n);",
      "solution": "CREATE TABLE Orders\n(\nOrderID int NOT NULL,\nOrderNumber int NOT NULL,\nPersonID int,\nPRIMARY KEY (OrderID),\nFOREIGN KEY (PersonID) REFERENCES Persons(PersonID)\n);"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "CREATE TABLE Orders\n(\nOrderID int NOT NULL PRIMARY KEY,\nOrderNumber int NOT NULL,\nPersonID int FOREIGN KEY REFERENCES Persons(PersonID)\n# TODO: Complete this line",
      "solution": "CREATE TABLE Orders\n(\nOrderID int NOT NULL PRIMARY KEY,\nOrderNumber int NOT NULL,\nPersonID int FOREIGN KEY REFERENCES Persons(PersonID)\n);"
    }
  ],
  "related_topics": [
    {
      "id": "3cc0b4e4-41a1-4b0a-84c8-3b299deb9516",
      "title": "Sql Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "9ca217f3-b5aa-42d5-8e90-5fd40a6fc8d0",
      "title": "Sql Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "eeba3354-fda5-4df4-8fa3-47a583f641e3",
      "title": "Sql Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is FOREIGN KEY\nThe\nFOREIGN KEY\nconstraint?",
      "options": [
        "a key used to link two tables together",
        "a field (or collection of fields) in one table that refers to \nthe PRIMARY KEY in another table",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of FOREIGN KEY\nThe\nFOREIGN KEY\nconstraint is 'a key used to link two tables together'."
    },
    {
      "question": "What is A FOREIGN KEY?",
      "options": [
        "a field (or collection of fields) in one table that refers to \nthe PRIMARY KEY in another table",
        "a key used to link two tables together",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of A FOREIGN KEY is 'a field (or collection of fields) in one table that refers to \nthe PRIMARY KEY in another table'."
    }
  ],
  "summary": "This tutorial covers SQLFOREIGN KEY Keyword concepts and techniques. You'll learn how to use SQLFOREIGN KEY Keyword effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of SQLFOREIGN KEY Keyword and how to apply it in your projects."
}