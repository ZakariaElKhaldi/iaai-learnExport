{
  "id": "d99cfa10-9401-4da8-b117-bb2304ac2a66",
  "title": "Introduction toSQL",
  "slug": "introduction-tosql",
  "metadata": {
    "description": "Learn about Introduction toSQL with clear explanations and practical examples.",
    "keywords": [
      "c",
      "database",
      "table",
      "standard",
      "data",
      "rdbms",
      "language",
      "records",
      "create",
      "customers",
      "databases"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnSQL",
    "subcategory": "SQL Intro"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Introduction to\nSQL",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "SQL is a standard language for accessing and manipulating databases.\nWhat is SQL?\nSQL stands for Structured Query Language\nSQL lets you access and manipulate databases\nSQL became a standard of the American National Standards Institute (ANSI) \n  in 1986, and of the International Organization for Standardization (ISO) in \n  1987\nWhat Can SQL do?\nSQL can execute queries against a database\nSQL can retrieve data from a database\nSQL can insert records in a database\nSQL can update records in a database\nSQL can delete records from a database\nSQL can create new databases\nSQL can create new tables in a database\nSQL can create stored procedures in a database\nSQL can create views in a database\nSQL can set permissions on tables, procedures, and views\nSQL is a Standard - BUT....\nAlthough SQL is an ANSI/ISO standard, there are different versions of the SQL language.\nHowever, to be compliant with the ANSI standard, they all support at least the major commands (such as\nSELECT\n,\nUPDATE\n,\nDELETE\n,\nINSERT\n,\nWHERE\n) in a similar manner.\nNote:\nMost of the SQL database programs also have their own proprietary extensions in addition to the SQL standard!\nUsing SQL in Your Web Site\nTo build a web site that shows data from a database, you will need:\nAn RDBMS database program (i.e. MS Access, SQL Server, MySQL)\nTo use a server-side scripting language, like PHP or ASP\nTo use SQL to get the data you want\nTo use HTML / CSS to style the page\nRDBMS\nRDBMS stands for Relational Database Management System.\nRDBMS is the basis for SQL, and for all modern database systems such as MS SQL Server, IBM DB2, Oracle, MySQL, and Microsoft Access.\nThe data in RDBMS is stored in database objects called tables. A table is a collection of related data entries and it consists of columns and rows.\nLook at the \"Customers\" table:\nExample\nSELECT * FROM Customers;\n\nEvery table is broken up into smaller entities called fields. The fields in \nthe Customers table consist of CustomerID, CustomerName, ContactName, Address, \nCity, PostalCode and Country. A field is a column in a table that is designed to maintain \nspecific information about every record in the table.\nA record, also called a row, is each individual entry that exists in a table. \nFor example, there are 91 records in the above Customers table. A record is a \nhorizontal entity in a table.\nA column is a vertical entity in a table that contains all information \nassociated with a specific field in a table.\nVideo: SQL Introduction\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "SELECT * FROM Customers;",
      "language": "sql",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your sql code here",
      "solution": "SELECT * FROM Customers;"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "6f7d4948-c238-4580-bbe3-a52fdb607eec",
      "title": "C Functions and Methods",
      "relationship": "next_topic"
    },
    {
      "id": "aa6cf4a6-bbd2-4450-9c78-f44d577b9c34",
      "title": "C Data Structures",
      "relationship": "suggested_next"
    }
  ],
  "quiz": [
    {
      "question": "What is Introduction to\nSQL\n\nSQL?",
      "options": [
        "SQL",
        "a standard language for accessing and manipulating databases",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Introduction to\nSQL\n\nSQL is 'a standard language for accessing and manipulating databases'."
    },
    {
      "question": "What is What?",
      "options": [
        "None of the above.",
        "SQL",
        "None of the above.",
        "a standard language for accessing and manipulating databases"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of What is 'SQL'."
    }
  ],
  "summary": "This tutorial covers Introduction toSQL concepts and techniques. You'll learn how to use Introduction toSQL effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Introduction toSQL and how to apply it in your projects."
}