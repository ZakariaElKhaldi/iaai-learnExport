{
  "id": "69c50740-4545-407d-9752-d1cf1dc97df4",
  "title": "SQL ServerFunctions",
  "slug": "sql-serverfunctions",
  "metadata": {
    "description": "Learn about SQL ServerFunctions with clear explanations and practical examples.",
    "keywords": [
      "returns",
      "number",
      "string",
      "specified",
      "value",
      "date",
      "server",
      "functions",
      "expression",
      "characters"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnSQL",
    "subcategory": "SQL Server Functions"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "SQL Server\nFunctions",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "SQL Server has many built-in functions.\nThis reference contains string, numeric, date,  \nconversion, and some advanced functions \nin SQL Server.\nSQL Server String Functions\nFunction\nDescription\nASCII\nReturns the ASCII value for the specific character\nCHAR\nReturns the character based on the ASCII code\nCHARINDEX\nReturns the position of a substring in a string\nCONCAT\nAdds two or more strings together\nConcat with +\nAdds two or more strings together\nCONCAT_WS\nAdds two or more strings together with a separator\nDATALENGTH\nReturns the number of bytes used to represent an expression\nDIFFERENCE\nCompares two SOUNDEX values, and returns an integer value\nFORMAT\nFormats a value with the specified format\nLEFT\nExtracts a number of characters from a string (starting from left)\nLEN\nReturns the length of a string\nLOWER\nConverts a string to lower-case\nLTRIM\nRemoves leading spaces from a string\nNCHAR\nReturns the Unicode character based on the number code\nPATINDEX\nReturns the position of a pattern in a string\nQUOTENAME\nReturns a Unicode string with delimiters added to make the string \na valid SQL Server delimited identifier\nREPLACE\nReplaces all occurrences of a substring within a string, with a new \nsubstring\nREPLICATE\nRepeats a string a specified number of times\nREVERSE\nReverses a string and returns the result\nRIGHT\nExtracts a number of characters from a string (starting from right)\nRTRIM\nRemoves trailing spaces from a string\nSOUNDEX\nReturns a four-character code to evaluate the similarity of two strings\nSPACE\nReturns a string of the specified number of space characters\nSTR\nReturns a number as string\nSTUFF\nDeletes a part of a string and then inserts another part into the string, \nstarting at a specified position\nSUBSTRING\nExtracts some characters from a string\nTRANSLATE\nReturns the string from the first argument after the characters specified in \nthe second argument are translated into the characters specified in the third \nargument.\nTRIM\nRemoves leading and trailing spaces (or other specified characters) from a string\nUNICODE\nReturns the Unicode value for the first \ncharacter of the input expression\nUPPER\nConverts a string to upper-case\nSQL Server Math/Numeric Functions\nFunction\nDescription\nABS\nReturns the absolute value of a number\nACOS\nReturns the arc cosine of a number\nASIN\nReturns the arc sine of a number\nATAN\nReturns the arc tangent of a number\nATN2\nReturns the arc tangent of two numbers\nAVG\nReturns the average value of an expression\nCEILING\nReturns the smallest integer value that is >= a number\nCOUNT\nReturns the number of records returned by a select query\nCOS\nReturns the cosine of a number\nCOT\nReturns the cotangent of a number\nDEGREES\nConverts a value in radians to degrees\nEXP\nReturns e raised to the power of a specified number\nFLOOR\nReturns the largest integer value that is <= to a number\nLOG\nReturns the natural logarithm of a number, or the logarithm of a number to a \nspecified base\nLOG10\nReturns the natural logarithm of a number to base 10\nMAX\nReturns the maximum value in a set of values\nMIN\nReturns the minimum value in a set of values\nPI\nReturns the value of PI\nPOWER\nReturns the value of a number raised to the power of another number\nRADIANS\nConverts a degree value into radians\nRAND\nReturns a random number\nROUND\nRounds a number to a specified number of decimal places\nSIGN\nReturns the sign of a number\nSIN\nReturns the sine of a number\nSQRT\nReturns the square root of a number\nSQUARE\nReturns the square of a number\nSUM\nCalculates the sum of a set of values\nTAN\nReturns the tangent of a number\nSQL Server Date Functions\nFunction\nDescription\nCURRENT_TIMESTAMP\nReturns the current date and time\nDATEADD\nAdds a time/date interval to a date and then returns the date\nDATEDIFF\nReturns the difference between two dates\nDATEFROMPARTS\nReturns a date from the specified parts (year, month, and day values)\nDATENAME\nReturns a specified part of a date (as string)\nDATEPART\nReturns a specified part of a date (as integer)\nDAY\nReturns the day of the month for a specified date\nGETDATE\nReturns the current database system date and time\nGETUTCDATE\nReturns the current database system UTC date and time\nISDATE\nChecks an expression and returns 1 if it is a valid date, otherwise 0\nMONTH\nReturns the month part for a specified date (a number from 1 to 12)\nSYSDATETIME\nReturns the date and time of the SQL Server\nYEAR\nReturns the year part for a specified date\nSQL Server Advanced Functions\nFunction\nDescription\nCAST\nConverts a value (of any type) into a specified datatype\nCOALESCE\nReturns the first non-null value in a list\nCONVERT\nConverts a value (of any type) into a specified datatype\nCURRENT_USER\nReturns the name of the current user in the SQL Server database\nIIF\nReturns a value if a condition is TRUE, or another value if a condition is FALSE\nISNULL\nReturn a specified value if the expression is NULL, otherwise return the \nexpression\nISNUMERIC\nTests whether an expression is numeric\nNULLIF\nReturns NULL if two expressions are equal\nSESSION_USER\nReturns the name of the current user in the SQL Server database\nSESSIONPROPERTY\nReturns the session settings for a specified option\nSYSTEM_USER\nReturns the login name for the current user\nUSER_NAME\nReturns the database user name based on the specified id\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "b045b5e2-06d3-4f8f-a173-a2688f56a983",
      "title": "Advanced C Techniques",
      "relationship": "next_topic"
    },
    {
      "id": "094b7612-a233-479e-bccf-ebf79f884c27",
      "title": "C Project: Build a Real-World Application",
      "relationship": "suggested_next"
    },
    {
      "id": "65150f39-3f3f-49d3-abca-630768bb0528",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is starting at a specified position\nSUBSTRING\nExtracts some characters from a string\nTRANSLATE\nReturns the string from the first argument after the characters specified in \nthe second argument?",
      "options": [
        "translated into the characters specified in the third \nargument",
        ">= a number\nCOUNT\nReturns the number of records returned by a select query\nCOS\nReturns the cosine of a number\nCOT\nReturns the cotangent of a number\nDEGREES\nConverts a value in radians to degrees\nEXP\nReturns e raised to the power of a specified number\nFLOOR\nReturns the largest integer value that is <= to a number\nLOG\nReturns the natural logarithm of a number",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of starting at a specified position\nSUBSTRING\nExtracts some characters from a string\nTRANSLATE\nReturns the string from the first argument after the characters specified in \nthe second argument is 'translated into the characters specified in the third \nargument'."
    },
    {
      "question": "What is Returns the arc tangent of two numbers\nAVG\nReturns the average value of an expression\nCEILING\nReturns the smallest integer value that?",
      "options": [
        "None of the above.",
        "None of the above.",
        ">= a number\nCOUNT\nReturns the number of records returned by a select query\nCOS\nReturns the cosine of a number\nCOT\nReturns the cotangent of a number\nDEGREES\nConverts a value in radians to degrees\nEXP\nReturns e raised to the power of a specified number\nFLOOR\nReturns the largest integer value that is <= to a number\nLOG\nReturns the natural logarithm of a number",
        "translated into the characters specified in the third \nargument"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Returns the arc tangent of two numbers\nAVG\nReturns the average value of an expression\nCEILING\nReturns the smallest integer value that is '>= a number\nCOUNT\nReturns the number of records returned by a select query\nCOS\nReturns the cosine of a number\nCOT\nReturns the cotangent of a number\nDEGREES\nConverts a value in radians to degrees\nEXP\nReturns e raised to the power of a specified number\nFLOOR\nReturns the largest integer value that is <= to a number\nLOG\nReturns the natural logarithm of a number'."
    }
  ],
  "summary": "This tutorial covers SQL ServerFunctions concepts and techniques. You'll learn how to use SQL ServerFunctions effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of SQL ServerFunctions and how to apply it in your projects."
}