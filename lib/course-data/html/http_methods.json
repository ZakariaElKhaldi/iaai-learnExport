{
  "title": "HTTP Methods GET vs POST",
  "url": "https://www.w3schools.com/tags/ref_httpmethods.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "HTTP Request Methods",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "What is HTTP?",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Hypertext Transfer Protocol (HTTP) is designed to enable communications between clients and servers.",
      "html": "<p>The Hypertext Transfer Protocol (HTTP) is designed to enable \ncommunications between clients and servers.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "HTTP works as a request-response protocol between a client and server.",
      "html": "<p>HTTP works as a request-response protocol between a client and server.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Example: A client (browser) sends an HTTP request to the server; then the server returns a response to the client. The response contains status information about the request and may also contain the requested content.",
      "html": "<p>Example: A client (browser) sends an HTTP request to the server; then the server \nreturns a response to the client. The response contains status information about \nthe request and may also contain the requested content.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "HTTP Methods",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The two most common HTTP methods are: GET and POST.",
      "html": "<p>The two most common HTTP methods are: GET and POST.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The GET Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "GET is used to request data from a specified resource.",
      "html": "<p>GET is used to request data from a specified \nresource.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note that the query string (name/value pairs) is sent in the URL of a GET request:",
      "html": "<p>Note that the query string (name/value pairs) is sent in the URL of \na GET request:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate\">\n<div>\n/test/demo_form.php?name1=value1&amp;name2=value2\n</div></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Some notes on GET requests:",
      "html": "<p><b>Some notes on GET requests:</b></p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The POST Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "POST is used to send data to a server to create/update a resource.",
      "html": "<p class=\"intro\">POST is used to send data to a server to create/update a resource.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The data sent to the server with POST is stored in the request body of the HTTP request:",
      "html": "<p>The data sent to the server with POST is stored in the request body of the \nHTTP request:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate\">\n<div>\nPOST /test/demo_form.php HTTP/1.1<br/>\nHost: w3schools.com<br/><br/>\n   name1=value1&amp;name2=value2\n</div></div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Some notes on POST requests:",
      "html": "<p><b>Some notes on POST requests:</b></p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Compare GET vs. POST",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The following table compares the two HTTP methods: GET and POST.",
      "html": "<p>The following table compares the two HTTP methods: GET and POST.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:30%\">\u00a0</th>\n<th style=\"width:35%\">GET</th>\n<th>POST</th>\n</tr>\n<tr>\n<td>BACK button/Reload</td>\n<td>Harmless</td>\n<td>Data will be re-submitted (the browser should alert the user that the data are about to be re-submitted)</td>\n</tr>\n<tr>\n<td>Bookmarked</td>\n<td>Can be bookmarked</td>\n<td>Cannot be bookmarked</td>\n</tr>\n<tr>\n<td>Cached</td>\n<td>Can be cached</td>\n<td>Not cached</td>\n</tr>\n<tr>\n<td>Encoding type</td>\n<td>application/x-www-form-urlencoded</td>\n<td>application/x-www-form-urlencoded or multipart/form-data. Use multipart encoding for binary data</td>\n</tr>\n<tr>\n<td>History</td>\n<td>Parameters remain in browser history</td>\n<td>Parameters are not saved in browser history</td>\n</tr>\n<tr>\n<td>Restrictions on data length</td>\n<td>Yes, when sending data, the GET method adds the data to the URL; and the length of a URL is limited (maximum URL length is 2048 characters)</td>\n<td>No restrictions</td>\n</tr>\n<tr>\n<td>Restrictions on data type</td>\n<td>Only ASCII characters allowed</td>\n<td>No restrictions. Binary data is also allowed</td>\n</tr>\n<tr>\n<td>Security</td>\n<td>GET is less secure compared to POST because data sent is part of the URL<br/>\n<br/>\n Never use GET when sending passwords or other sensitive information!</td>\n<td>POST is a little safer than GET because the parameters are not stored in browser history or in web server logs</td>\n</tr>\n<tr>\n<td>Visibility</td>\n<td>Data is visible to everyone in the URL</td>\n<td>Data is not displayed in the URL</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The PUT Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "PUT is used to send data to a server to create/update a resource.",
      "html": "<p>PUT is used to send data to a server to create/update a resource.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The difference between POST and PUT is that PUT requests are idempotent. That is, calling the same PUT request multiple times will always produce the same result. In contrast, calling a POST request repeatedly have side effects of creating the same resource multiple times.",
      "html": "<p>The difference between POST and PUT is that PUT requests are idempotent. That \nis, calling the same PUT request multiple times will always produce the same \nresult. In contrast, calling a POST request repeatedly have side effects of \ncreating the same resource multiple times.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The HEAD Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "HEAD is almost identical to GET, but without the response body.",
      "html": "<p>HEAD is almost identical to GET, but without the response body.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In other words, if GET /users returns a list of users, then HEAD /users will make the same request but will not return the list of users.",
      "html": "<p>In other words, if GET /users returns a list of users, then HEAD /users will \nmake the same request but will not return the list of users.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A HEAD request is useful for checking what a GET request will return before actually making a GET request - a HEAD request can read the Content-Length header to check the size of the file, without actually downloading the file.",
      "html": "<p>A HEAD request is useful for checking what a GET request will return before \nactually making a GET request - a HEAD request can read the Content-Length \nheader to check the size of the file, without actually downloading the file.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The DELETE Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The DELETE method deletes the specified resource.",
      "html": "<p>The DELETE method deletes the specified resource.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The PATCH Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The PATCH method is used to apply partial modifications to a resource.",
      "html": "<p>The PATCH method is used to apply partial modifications to a resource.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The OPTIONS Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The OPTIONS method describes the communication options for the target resource.",
      "html": "<p>The OPTIONS method describes the communication options for the target \nresource.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The CONNECT Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The CONNECT method is used to start a two-way communications (a tunnel) with the requested resource.",
      "html": "<p>The CONNECT method is used to start a two-way communications (a tunnel) with \nthe requested resource.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The TRACE Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The TRACE method is used to perform a message loop-back test that tests the path for the target resource (useful for debugging purposes).",
      "html": "<p>The TRACE method is used to perform a message loop-back test that \ntests the path for the target resource (useful for debugging purposes).</p>"
    }
  ]
}