{
  "id": "3a2ff360-0d0a-445b-8a9c-ad80e3653fb7",
  "title": "SciPyConstants",
  "slug": "scipyconstants",
  "metadata": {
    "description": "Learn about SciPyConstants with clear explanations and practical examples.",
    "keywords": [
      "c",
      "constants",
      "print",
      "scipy",
      "example",
      "import",
      "unit",
      "return",
      "specified",
      "returns",
      "meters"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnSciPy",
    "subcategory": "SciPy Constants"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "SciPy\nConstants",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Constants in SciPy\nAs SciPy is more focused on scientific implementations, it provides many built-in scientific constants.\nThese constants can be helpful when you are working with Data Science.\nPI is an example of a scientific constant.\nExample\nPrint the constant value of PI:\nfrom scipy import constants\nprint(constants.pi)\n\nConstant Units\nA list of all units under the constants module can be seen using the\ndir()\nfunction.\nExample\nList all constants:\nfrom scipy import constants\nprint(dir(constants))\n\nUnit Categories\nThe units are placed under these categories:\nMetric\nBinary\nMass\nAngle\nTime\nLength\nPressure\nVolume\nSpeed\nTemperature\nEnergy\nPower\nForce\nMetric (SI) Prefixes:\nReturn the specified unit in\nmeter\n(e.g.\ncenti\nreturns\n0.01\n)\nExample\nfrom scipy import constants\nprint(constants.yotta)\u00a0\u00a0\u00a0 #1e+24\nprint(constants.zetta)\u00a0\u00a0\u00a0 \n  #1e+21\nprint(constants.exa)\u00a0\u00a0\u00a0\u00a0\u00a0 \n  #1e+18\nprint(constants.peta)\u00a0\u00a0\u00a0\u00a0 #1000000000000000.0\nprint(constants.tera)\u00a0\u00a0\u00a0\u00a0 \n  #1000000000000.0\nprint(constants.giga)\u00a0\u00a0\u00a0\u00a0 #1000000000.0\nprint(constants.mega)\u00a0\u00a0\u00a0\u00a0 \n  #1000000.0\nprint(constants.kilo)\u00a0\u00a0\u00a0\u00a0 #1000.0\nprint(constants.hecto)\u00a0\u00a0\u00a0 \n  #100.0\nprint(constants.deka)\u00a0\u00a0\u00a0\u00a0 #10.0\nprint(constants.deci)\u00a0\u00a0\u00a0\u00a0 \n  #0.1\nprint(constants.centi)\u00a0\u00a0\u00a0 #0.01\nprint(constants.milli)\u00a0\u00a0\u00a0 \n  #0.001\nprint(constants.micro)\u00a0\u00a0\u00a0 #1e-06\nprint(constants.nano)\u00a0\u00a0\u00a0\u00a0 \n  #1e-09\nprint(constants.pico)\u00a0\u00a0\u00a0\u00a0 #1e-12\nprint(constants.femto)\u00a0\u00a0\u00a0 #1e-15\nprint(constants.atto)\u00a0\u00a0\u00a0\u00a0 #1e-18\nprint(constants.zepto)\u00a0\u00a0\u00a0 #1e-21\n\nBinary Prefixes:\nReturn the specified unit in\nbytes\n(e.g.\nkibi\nreturns\n1024\n)\nExample\nfrom scipy import constants\nprint(constants.kibi)\u00a0\u00a0\u00a0 #1024\nprint(constants.mebi)\u00a0\u00a0\u00a0 \n  #1048576\nprint(constants.gibi)\u00a0\u00a0 \u00a0#1073741824\nprint(constants.tebi)\u00a0\u00a0\u00a0 \n  #1099511627776\nprint(constants.pebi)\u00a0\u00a0\u00a0 \n  #1125899906842624\nprint(constants.exbi)\u00a0\u00a0\u00a0 #1152921504606846976\nprint(constants.zebi)\u00a0\u00a0\u00a0 \n  #1180591620717411303424\nprint(constants.yobi)\u00a0\u00a0\u00a0 #1208925819614629174706176\n\nMass:\nReturn the specified unit in\nkg\n(e.g.\ngram\nreturns\n0.001\n)\nExample\nfrom scipy import constants\nprint(constants.gram)\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 #0.001\nprint(constants.metric_ton)\u00a0 #1000.0\nprint(constants.grain)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #6.479891e-05\nprint(constants.lb)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #0.45359236999999997\nprint(constants.pound)\u00a0\u00a0\u00a0 \u00a0\u00a0 #0.45359236999999997\nprint(constants.oz)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #0.028349523124999998\nprint(constants.ounce)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #0.028349523124999998\nprint(constants.stone)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #6.3502931799999995\nprint(constants.long_ton)\u00a0\u00a0\u00a0 #1016.0469088\nprint(constants.short_ton)\u00a0\u00a0 #907.1847399999999\nprint(constants.troy_ounce)\u00a0 #0.031103476799999998\nprint(constants.troy_pound)\u00a0 #0.37324172159999996\nprint(constants.carat)\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0#0.0002\nprint(constants.atomic_mass) #1.66053904e-27\nprint(constants.m_u)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #1.66053904e-27\nprint(constants.u)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #1.66053904e-27\n\nAngle:\nReturn the specified unit in\nradians\n(e.g.\ndegree\nreturns\n0.017453292519943295\n)\nExample\nfrom scipy import constants\nprint(constants.degree)\u00a0\u00a0 \u00a0 #0.017453292519943295\nprint(constants.arcmin)\u00a0\u00a0\u00a0\u00a0 #0.0002908882086657216\nprint(constants.arcminute)\u00a0\u00a0#0.0002908882086657216\nprint(constants.arcsec)\u00a0\u00a0\u00a0\u00a0 #4.84813681109536e-06\nprint(constants.arcsecond)\u00a0 #4.84813681109536e-06\n\nTime:\nReturn the specified unit in\nseconds\n(e.g.\nhour\nreturns\n3600.0\n)\nExample\nfrom scipy import constants\nprint(constants.minute) \u00a0\u00a0\u00a0\u00a0 #60.0\nprint(constants.hour)\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 #3600.0\nprint(constants.day)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0#86400.0\nprint(constants.week)\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 #604800.0\nprint(constants.year)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #31536000.0\nprint(constants.Julian_year)\u00a0#31557600.0\n\nLength:\nReturn the specified unit in\nmeters\n(e.g.\nnautical_mile\nreturns\n1852.0\n)\nExample\nfrom scipy import constants\nprint(constants.inch) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 \u00a0 #0.0254\nprint(constants.foot)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0 #0.30479999999999996\nprint(constants.yard)\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0#0.9143999999999999\nprint(constants.mile)\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 \u00a0\u00a0 \u00a0 #1609.3439999999998\nprint(constants.mil)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 \u00a0\u00a0\u00a0 #2.5399999999999997e-05\nprint(constants.pt)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #0.00035277777777777776\nprint(constants.point) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 #0.00035277777777777776\nprint(constants.survey_foot) \u00a0\u00a0\u00a0 \u00a0\u00a0#0.3048006096012192\nprint(constants.survey_mile)\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0#1609.3472186944373\nprint(constants.nautical_mile)\u00a0 \u00a0\u00a0 #1852.0\nprint(constants.fermi)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 #1e-15\nprint(constants.angstrom)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0#1e-10\nprint(constants.micron)\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 #1e-06\nprint(constants.au)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0 #149597870691.0\nprint(constants.astronomical_unit)\u00a0#149597870691.0\nprint(constants.light_year)\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 #9460730472580800.0\nprint(constants.parsec)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #3.0856775813057292e+16\n\nPressure:\nReturn the specified unit in\npascals\n(e.g.\npsi\nreturns\n6894.757293168361\n)\nExample\nfrom scipy import constants\nprint(constants.atm)\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 #101325.0\nprint(constants.atmosphere)\u00a0 #101325.0\nprint(constants.bar)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0#100000.0\nprint(constants.torr)\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 #133.32236842105263\nprint(constants.mmHg)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #133.32236842105263\nprint(constants.psi)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #6894.757293168361\n\nArea:\nReturn the specified unit in\nsquare meters\n(e.g.\nhectare\nreturns\n10000.0\n)\nExample\nfrom scipy import constants\nprint(constants.hectare)\u00a0#10000.0\nprint(constants.acre)\u00a0\u00a0\u00a0 #4046.8564223999992\n\nVolume:\nReturn the specified unit in\ncubic meters\n(e.g.\nliter\nreturns\n0.001\n)\nExample\nfrom scipy import constants\nprint(constants.liter) \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 \u00a0 #0.001\nprint(constants.litre)\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0 #0.001\nprint(constants.gallon)\u00a0\u00a0 \u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0#0.0037854117839999997\nprint(constants.gallon_US)\u00a0\u00a0 \u00a0\u00a0 \u00a0 #0.0037854117839999997\nprint(constants.gallon_imp)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #0.00454609\nprint(constants.fluid_ounce)\u00a0\u00a0\u00a0\u00a0\u00a0 #2.9573529562499998e-05\nprint(constants.fluid_ounce_US) \u00a0 #2.9573529562499998e-05\nprint(constants.fluid_ounce_imp) \u00a0#2.84130625e-05\nprint(constants.barrel)\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 #0.15898729492799998\nprint(constants.bbl)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 \u00a0#0.15898729492799998\n\nSpeed:\nReturn the specified unit in\nmeters per second\n(e.g.\nspeed_of_sound\nreturns\n340.5\n)\nExample\nfrom scipy import constants\nprint(constants.kmh) \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 \u00a0 #0.2777777777777778\nprint(constants.mph)\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0 #0.44703999999999994\nprint(constants.mach)\u00a0\u00a0 \u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0#340.5\nprint(constants.speed_of_sound)\u00a0#340.5\nprint(constants.knot)\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0 #0.5144444444444445\n\nTemperature:\nReturn the specified unit in\nKelvin\n(e.g.\nzero_Celsius\nreturns\n273.15\n)\nExample\nfrom scipy import constants\nprint(constants.zero_Celsius) \u00a0\u00a0\u00a0\u00a0 #273.15\nprint(constants.degree_Fahrenheit)\u00a0#0.5555555555555556\n\nEnergy:\nReturn the specified unit in\njoules\n(e.g.\ncalorie\nreturns\n4.184\n)\nExample\nfrom scipy import constants\nprint(constants.eV) \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 \u00a0 #1.6021766208e-19\nprint(constants.electron_volt) #1.6021766208e-19\nprint(constants.calorie)\u00a0\u00a0 \u00a0\u00a0 \u00a0#4.184\nprint(constants.calorie_th)\u00a0\u00a0\u00a0 #4.184\nprint(constants.calorie_IT)\u00a0\u00a0\u00a0 #4.1868\nprint(constants.erg)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 #1e-07\nprint(constants.Btu) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #1055.05585262\nprint(constants.Btu_IT)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0#1055.05585262\nprint(constants.Btu_th)\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0#1054.3502644888888\nprint(constants.ton_TNT)\u00a0\u00a0\u00a0 \u00a0 \u00a0#4184000000.0\n\nPower:\nReturn the specified unit in\nwatts\n(e.g.\nhorsepower\nreturns\n745.6998715822701\n)\nExample\nfrom scipy import constants\nprint(constants.hp)\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 #745.6998715822701\nprint(constants.horsepower)\u00a0#745.6998715822701\n\nForce:\nReturn the specified unit in\nnewton\n(e.g.\nkilogram_force\nreturns\n9.80665\n)\nExample\nfrom scipy import constants\nprint(constants.dyn) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0\u00a0\u00a0#1e-05\nprint(constants.dyne)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0\u00a0 #1e-05\nprint(constants.lbf)\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0\u00a0\u00a0#4.4482216152605\nprint(constants.pound_force)\u00a0\u00a0\u00a0 \u00a0#4.4482216152605\nprint(constants.kgf)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 #9.80665\nprint(constants.kilogram_force)\u00a0 #9.80665\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "from scipy import constants\nprint(constants.pi)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "from scipy import constants\nprint(dir(constants))",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "from scipy import constants\nprint(constants.yotta)\u00a0\u00a0\u00a0 #1e+24\nprint(constants.zetta)\u00a0\u00a0\u00a0 \n  #1e+21\nprint(constants.exa)\u00a0\u00a0\u00a0\u00a0\u00a0 \n  #1e+18\nprint(constants.peta)\u00a0\u00a0\u00a0\u00a0 #1000000000000000.0\nprint(constants.tera)\u00a0\u00a0\u00a0\u00a0 \n  #1000000000000.0\nprint(constants.giga)\u00a0\u00a0\u00a0\u00a0 #1000000000.0\nprint(constants.mega)\u00a0\u00a0\u00a0\u00a0 \n  #1000000.0\nprint(constants.kilo)\u00a0\u00a0\u00a0\u00a0 #1000.0\nprint(constants.hecto)\u00a0\u00a0\u00a0 \n  #100.0\nprint(constants.deka)\u00a0\u00a0\u00a0\u00a0 #10.0\nprint(constants.deci)\u00a0\u00a0\u00a0\u00a0 \n  #0.1\nprint(constants.centi)\u00a0\u00a0\u00a0 #0.01\nprint(constants.milli)\u00a0\u00a0\u00a0 \n  #0.001\nprint(constants.micro)\u00a0\u00a0\u00a0 #1e-06\nprint(constants.nano)\u00a0\u00a0\u00a0\u00a0 \n  #1e-09\nprint(constants.pico)\u00a0\u00a0\u00a0\u00a0 #1e-12\nprint(constants.femto)\u00a0\u00a0\u00a0 #1e-15\nprint(constants.atto)\u00a0\u00a0\u00a0\u00a0 #1e-18\nprint(constants.zepto)\u00a0\u00a0\u00a0 #1e-21",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "from scipy import constants\nprint(constants.kibi)\u00a0\u00a0\u00a0 #1024\nprint(constants.mebi)\u00a0\u00a0\u00a0 \n  #1048576\nprint(constants.gibi)\u00a0\u00a0 \u00a0#1073741824\nprint(constants.tebi)\u00a0\u00a0\u00a0 \n  #1099511627776\nprint(constants.pebi)\u00a0\u00a0\u00a0 \n  #1125899906842624\nprint(constants.exbi)\u00a0\u00a0\u00a0 #1152921504606846976\nprint(constants.zebi)\u00a0\u00a0\u00a0 \n  #1180591620717411303424\nprint(constants.yobi)\u00a0\u00a0\u00a0 #1208925819614629174706176",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "from scipy import constants\nprint(constants.gram)\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 #0.001\nprint(constants.metric_ton)\u00a0 #1000.0\nprint(constants.grain)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #6.479891e-05\nprint(constants.lb)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #0.45359236999999997\nprint(constants.pound)\u00a0\u00a0\u00a0 \u00a0\u00a0 #0.45359236999999997\nprint(constants.oz)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #0.028349523124999998\nprint(constants.ounce)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #0.028349523124999998\nprint(constants.stone)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #6.3502931799999995\nprint(constants.long_ton)\u00a0\u00a0\u00a0 #1016.0469088\nprint(constants.short_ton)\u00a0\u00a0 #907.1847399999999\nprint(constants.troy_ounce)\u00a0 #0.031103476799999998\nprint(constants.troy_pound)\u00a0 #0.37324172159999996\nprint(constants.carat)\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0#0.0002\nprint(constants.atomic_mass) #1.66053904e-27\nprint(constants.m_u)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #1.66053904e-27\nprint(constants.u)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #1.66053904e-27",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "from scipy import constants\nprint(constants.degree)\u00a0\u00a0 \u00a0 #0.017453292519943295\nprint(constants.arcmin)\u00a0\u00a0\u00a0\u00a0 #0.0002908882086657216\nprint(constants.arcminute)\u00a0\u00a0#0.0002908882086657216\nprint(constants.arcsec)\u00a0\u00a0\u00a0\u00a0 #4.84813681109536e-06\nprint(constants.arcsecond)\u00a0 #4.84813681109536e-06",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "from scipy import constants\nprint(constants.minute) \u00a0\u00a0\u00a0\u00a0 #60.0\nprint(constants.hour)\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 #3600.0\nprint(constants.day)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0#86400.0\nprint(constants.week)\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 #604800.0\nprint(constants.year)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #31536000.0\nprint(constants.Julian_year)\u00a0#31557600.0",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "from scipy import constants\nprint(constants.inch) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 \u00a0 #0.0254\nprint(constants.foot)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0 #0.30479999999999996\nprint(constants.yard)\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0#0.9143999999999999\nprint(constants.mile)\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 \u00a0\u00a0 \u00a0 #1609.3439999999998\nprint(constants.mil)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 \u00a0\u00a0\u00a0 #2.5399999999999997e-05\nprint(constants.pt)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #0.00035277777777777776\nprint(constants.point) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 #0.00035277777777777776\nprint(constants.survey_foot) \u00a0\u00a0\u00a0 \u00a0\u00a0#0.3048006096012192\nprint(constants.survey_mile)\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0#1609.3472186944373\nprint(constants.nautical_mile)\u00a0 \u00a0\u00a0 #1852.0\nprint(constants.fermi)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 #1e-15\nprint(constants.angstrom)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0#1e-10\nprint(constants.micron)\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 #1e-06\nprint(constants.au)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0 #149597870691.0\nprint(constants.astronomical_unit)\u00a0#149597870691.0\nprint(constants.light_year)\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 #9460730472580800.0\nprint(constants.parsec)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #3.0856775813057292e+16",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "from scipy import constants\nprint(constants.atm)\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 #101325.0\nprint(constants.atmosphere)\u00a0 #101325.0\nprint(constants.bar)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0#100000.0\nprint(constants.torr)\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 #133.32236842105263\nprint(constants.mmHg)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #133.32236842105263\nprint(constants.psi)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #6894.757293168361",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": "from scipy import constants\nprint(constants.hectare)\u00a0#10000.0\nprint(constants.acre)\u00a0\u00a0\u00a0 #4046.8564223999992",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 13,
      "code": "from scipy import constants\nprint(constants.liter) \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 \u00a0 #0.001\nprint(constants.litre)\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0 #0.001\nprint(constants.gallon)\u00a0\u00a0 \u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0#0.0037854117839999997\nprint(constants.gallon_US)\u00a0\u00a0 \u00a0\u00a0 \u00a0 #0.0037854117839999997\nprint(constants.gallon_imp)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #0.00454609\nprint(constants.fluid_ounce)\u00a0\u00a0\u00a0\u00a0\u00a0 #2.9573529562499998e-05\nprint(constants.fluid_ounce_US) \u00a0 #2.9573529562499998e-05\nprint(constants.fluid_ounce_imp) \u00a0#2.84130625e-05\nprint(constants.barrel)\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 #0.15898729492799998\nprint(constants.bbl)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 \u00a0#0.15898729492799998",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 14,
      "code": "from scipy import constants\nprint(constants.kmh) \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 \u00a0 #0.2777777777777778\nprint(constants.mph)\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0 #0.44703999999999994\nprint(constants.mach)\u00a0\u00a0 \u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0#340.5\nprint(constants.speed_of_sound)\u00a0#340.5\nprint(constants.knot)\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0 #0.5144444444444445",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 15,
      "code": "from scipy import constants\nprint(constants.zero_Celsius) \u00a0\u00a0\u00a0\u00a0 #273.15\nprint(constants.degree_Fahrenheit)\u00a0#0.5555555555555556",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 16,
      "code": "from scipy import constants\nprint(constants.eV) \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 \u00a0 #1.6021766208e-19\nprint(constants.electron_volt) #1.6021766208e-19\nprint(constants.calorie)\u00a0\u00a0 \u00a0\u00a0 \u00a0#4.184\nprint(constants.calorie_th)\u00a0\u00a0\u00a0 #4.184\nprint(constants.calorie_IT)\u00a0\u00a0\u00a0 #4.1868\nprint(constants.erg)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 #1e-07\nprint(constants.Btu) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #1055.05585262\nprint(constants.Btu_IT)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0#1055.05585262\nprint(constants.Btu_th)\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0#1054.3502644888888\nprint(constants.ton_TNT)\u00a0\u00a0\u00a0 \u00a0 \u00a0#4184000000.0",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 17,
      "code": "from scipy import constants\nprint(constants.hp)\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 #745.6998715822701\nprint(constants.horsepower)\u00a0#745.6998715822701",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 18,
      "code": "from scipy import constants\nprint(constants.dyn) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0\u00a0\u00a0#1e-05\nprint(constants.dyne)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0\u00a0 #1e-05\nprint(constants.lbf)\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0\u00a0\u00a0#4.4482216152605\nprint(constants.pound_force)\u00a0\u00a0\u00a0 \u00a0#4.4482216152605\nprint(constants.kgf)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 #9.80665\nprint(constants.kilogram_force)\u00a0 #9.80665",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your python code here",
      "solution": "from scipy import constants\nprint(constants.pi)"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your python code here",
      "solution": "from scipy import constants\nprint(dir(constants))"
    }
  ],
  "related_topics": [
    {
      "id": "2ef9be86-ab6c-47c9-a58f-6c8242c6acc4",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "fbcf6e0c-0f73-4d6b-b500-6184da9d5e2a",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "541e5b92-56b7-42ba-8aef-873e878492a3",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is SciPy\nConstants\n\nConstants in SciPy\nAs SciPy?",
      "options": [
        "working with Data Science",
        "more focused on scientific implementations",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of SciPy\nConstants\n\nConstants in SciPy\nAs SciPy is 'more focused on scientific implementations'."
    },
    {
      "question": "What is These constants can be helpful when you?",
      "options": [
        "None of the above.",
        "working with Data Science",
        "None of the above.",
        "more focused on scientific implementations"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of These constants can be helpful when you is 'working with Data Science'."
    }
  ],
  "summary": "This tutorial covers SciPyConstants concepts and techniques. You'll learn how to use SciPyConstants effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of SciPyConstants and how to apply it in your projects."
}