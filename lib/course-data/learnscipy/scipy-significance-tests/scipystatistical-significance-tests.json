{
  "id": "2384b726-d347-4127-aec8-5d076c36463a",
  "title": "SciPyStatistical Significance Tests",
  "slug": "scipystatistical-significance-tests",
  "metadata": {
    "description": "Learn about SciPyStatistical Significance Tests with clear explanations and practical examples.",
    "keywords": [
      "c",
      "hypothesis",
      "value",
      "normal",
      "example",
      "tailed",
      "import",
      "kurtosis",
      "test",
      "null",
      "data"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnSciPy",
    "subcategory": "SciPy Significance Tests"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "SciPy\nStatistical Significance Tests",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "What is Statistical Significance Test?\nIn statistics, statistical significance means that the result that was produced has a reason behind it, it was not produced randomly, or by chance.\nSciPy provides us with a module called\nscipy.stats\n, which has functions for performing statistical significance tests.\nHere are some techniques and keywords that are important when performing such tests:\nHypothesis in Statistics\nHypothesis is an assumption about a parameter in population.\nNull Hypothesis\nIt assumes that the observation is not statistically significant.\nAlternate Hypothesis\nIt assumes that the observations are due to some reason.\nIt's alternate to Null Hypothesis.\nExample:\nFor an assessment of a student we would take:\n\"student is worse than average\"\n- as a null hypothesis,\nand:\n\"student is better than average\"\n- as an alternate hypothesis.\nOne tailed test\nWhen our hypothesis is testing for one side of the value only, it is called \"one tailed test\".\nExample:\nFor the null hypothesis:\n\"the mean is equal to k\",\nwe can have alternate hypothesis:\n\"the mean is less than k\",\nor:\n\"the mean is greater than k\"\nTwo tailed test\nWhen our hypothesis is testing for both side of the values.\nExample:\nFor the null hypothesis:\n\"the mean is equal to k\",\nwe can have alternate hypothesis:\n\"the mean is not equal to k\"\nIn this case the mean is less than, or greater than k, and both sides are to be checked.\nAlpha value\nAlpha value is the level of significance.\nExample:\nHow close to extremes the data must be for null hypothesis to be rejected.\nIt is usually taken as 0.01, 0.05, or 0.1.\nP value\nP value tells how close to extreme the data actually is.\nP value and alpha values are compared to establish the statistical significance.\nIf p value <= alpha we reject the null hypothesis and say that the data is statistically significant.\notherwise we accept the null hypothesis.\nT-Test\nT-tests are used to determine if there is significant deference between means of two variables\nand lets us know if they belong to the same distribution.\nIt is a two tailed test.\nThe function\nttest_ind()\ntakes two samples of same size and produces a tuple of t-statistic and p-value.\nExample\nFind if the given values v1 and v2 are from same distribution:\nimport numpy as np\nfrom scipy.stats import ttest_ind\nv1 = np.random.normal(size=100)\nv2 = np.random.normal(size=100)\nres = ttest_ind(v1, v2)\nprint(res)\nResult:\nTtest_indResult(statistic=0.40833510339674095, pvalue=0.68346891833752133)\n\nIf you want to return only the p-value, use the\npvalue\nproperty:\nExample\n...\nres = ttest_ind(v1, v2).pvalue\nprint(res)\nResult:\n0.68346891833752133\n\nKS-Test\nKS test is used to check if given values follow a distribution.\nThe function takes the value to be tested, and the CDF as two parameters.\nA\nCDF\ncan be either a string or a callable function that returns the probability.\nIt can be used as a one tailed or two tailed test.\nBy default it is two tailed. We can pass parameter alternative as a string of one of two-sided, less, or greater.\nExample\nFind if the given value follows the normal distribution:\nimport numpy as np\nfrom scipy.stats import kstest\nv = np.random.normal(size=100)\nres = kstest(v, 'norm')\nprint(res)\nResult:\nKstestResult(statistic=0.047798701221956841, pvalue=0.97630967161777515)\n\nStatistical Description of Data\nIn order to see a summary of values in an array, we can use the\ndescribe()\nfunction.\nIt returns the following description:\nnumber of observations (nobs)\nminimum and maximum values = minmax\nmean\nvariance\nskewness\nkurtosis\nExample\nShow statistical description of the values in an array:\nimport numpy as np\nfrom scipy.stats import describe\nv = np.random.normal(size=100)\nres = describe(v)\nprint(res)\nResult:\nDescribeResult(\n    nobs=100,\n    minmax=(-2.0991855456740121, 2.1304142707414964),\n    mean=0.11503747689121079,\n    variance=0.99418092655064605,\n    skewness=0.013953400984243667,\n    kurtosis=-0.671060517912661\n  )\n\nNormality Tests (Skewness and Kurtosis)\nNormality tests are based on the skewness and kurtosis.\nThe\nnormaltest()\nfunction returns p value for the null hypothesis:\n\"x comes from a normal distribution\"\n.\nSkewness:\nA measure of symmetry in data.\nFor normal distributions it is 0.\nIf it is negative, it means the data is skewed left.\nIf it is positive it means the data is skewed right.\nKurtosis:\nA measure of whether the data is heavy or lightly tailed to a normal distribution.\nPositive kurtosis means heavy tailed.\nNegative kurtosis means lightly tailed.\nExample\nFind skewness and kurtosis of values in an array:\nimport numpy as np\nfrom scipy.stats import skew, kurtosis\nv = np.random.normal(size=100)\nprint(skew(v))\nprint(kurtosis(v))\nResult:\n0.11168446328610283\n  -0.1879320563260931\n\nExample\nFind if the data comes from a normal distribution:\nimport numpy as np\nfrom scipy.stats import normaltest\nv = np.random.normal(size=100)\nprint(normaltest(v))\nResult:\nNormaltestResult(statistic=4.4783745697002848, pvalue=0.10654505998635538)\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "import numpy as np\nfrom scipy.stats import ttest_ind\nv1 = np.random.normal(size=100)\nv2 = np.random.normal(size=100)\nres = ttest_ind(v1, v2)\nprint(res)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "...\nres = ttest_ind(v1, v2).pvalue\nprint(res)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "import numpy as np\nfrom scipy.stats import kstest\nv = np.random.normal(size=100)\nres = kstest(v, 'norm')\nprint(res)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "import numpy as np\nfrom scipy.stats import describe\nv = np.random.normal(size=100)\nres = describe(v)\nprint(res)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "import numpy as np\nfrom scipy.stats import skew, kurtosis\nv = np.random.normal(size=100)\nprint(skew(v))\nprint(kurtosis(v))",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "import numpy as np\nfrom scipy.stats import normaltest\nv = np.random.normal(size=100)\nprint(normaltest(v))",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "import numpy as np\nfrom scipy.stats import ttest_ind\nv1 = np.random.normal(size=100)\n# TODO: Complete this line\nres = ttest_ind(v1, v2)\nprint(res)",
      "solution": "import numpy as np\nfrom scipy.stats import ttest_ind\nv1 = np.random.normal(size=100)\nv2 = np.random.normal(size=100)\nres = ttest_ind(v1, v2)\nprint(res)"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "...\n# TODO: Complete this line\nprint(res)",
      "solution": "...\nres = ttest_ind(v1, v2).pvalue\nprint(res)"
    }
  ],
  "related_topics": [
    {
      "id": "d6a333a7-6021-4a55-a8ae-ca029c56f39c",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "336bf92a-a505-469d-8e52-76ff8e176420",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "e48a7016-26f2-41b3-89ed-f40b94d6849a",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is SciPy\nStatistical Significance Tests\n\nWhat?",
      "options": [
        "None of the above.",
        "Statistical Significance Test",
        "None of the above.",
        "that the result that was produced has a reason behind it"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of SciPy\nStatistical Significance Tests\n\nWhat is 'Statistical Significance Test'."
    },
    {
      "question": "What is statistical significance?",
      "options": [
        "Statistical Significance Test",
        "None of the above.",
        "that the result that was produced has a reason behind it",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of statistical significance is 'that the result that was produced has a reason behind it'."
    }
  ],
  "summary": "This tutorial covers SciPyStatistical Significance Tests concepts and techniques. You'll learn how to use SciPyStatistical Significance Tests effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of SciPyStatistical Significance Tests and how to apply it in your projects."
}