{
  "id": "7199cfc4-2acc-4936-9ffc-06b25e7e218d",
  "title": "How TO - Make a Website",
  "slug": "how-to-make-a-website",
  "metadata": {
    "description": "Learn about How TO - Make a Website with clear explanations and practical examples.",
    "keywords": [
      "website",
      "text",
      "color",
      "html",
      "padding",
      "element",
      "background",
      "layout",
      "content",
      "width"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnHow To",
    "subcategory": "Make a Website"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "How TO - Make a Website",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Learn how to create a responsive website that will work on all devices,\nPC, laptop, tablet, and phone.\nCreate a Website from Scratch\nDemo\n\nA \"Layout Draft\"\nIt can be wise to draw a layout draft of the page design before creating a website:\nHeader\nNavigation bar\nSide Content\nSome text some text..\nMain Content\nSome text some text..\nSome text some text..\nSome text some text..\nFooter\nFirst Step - Basic HTML Page\nHTML is the standard markup language for creating websites and CSS is the language that describes the style of an HTML document. We will combine HTML and CSS to create a basic web page.\nNote:\nIf you don't know HTML and CSS,\nwe suggest that you \n  start by reading our HTML Tutorial\n.\nExample\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<title>Page Title</title>\n<meta \n  charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, \n  initial-scale=1\">\n<style>\nbody {\nfont-family: Arial, Helvetica, sans-serif;\n}\n</style>\n</head>\n<body>\n<h1>My Website</h1>\n<p>A website created by me.</p>\n</body>\n</html>\n\nExample Explained\nThe\n<!DOCTYPE html>\ndeclaration defines this document to be HTML5\nThe\n<html>\nelement is the root element of an HTML \npage\nThe\n<head>\nelement contains meta information about the document\nThe\n<title>\nelement specifies a title for the document\nThe\n<meta>\nelement should define the character set to be UTF-8\nThe\n<meta>\nelement with name=\"viewport\" makes the website look good on all devices and screen resolutions\nThe\n<style>\nelement contains the styles for the website (layout/design)\nThe\n<body>\nelement contains the visible page content\nThe\n<h1>\nelement defines a large heading\nThe\n<p>\nelement defines a paragraph\nCreating Page Content\nInside the\n<body>\nelement of our website, we will use our \"Layout \nDraft\" \nand create:\nA header\nA navigation bar\nMain content\nSide content\nA footer\nHeader\nA header is usually located at the top of the website (or right below a top \nnavigation menu). It often contains a logo or the website name:\n<div class=\"header\">\n<h1>My Website</h1>\n<p>A website \n  created by me.</p>\n</div>\nThen we use CSS to style the header:\n.header {\npadding: 80px; /* some padding */\ntext-align: center; /* center the text */\nbackground: #1abc9c; \n  /* green background */\ncolor: white; /* white text color */\n}\n/* Increase the font size of the <h1> element */\n.header h1 {\nfont-size: 40px;\n}\n\nNavigation Bar\nA navigation bar contains a list of links to help visitors navigating through \nyour website:\n<div class=\"navbar\">\n<a href=\"#\">Link</a>\n<a href=\"#\">Link</a>\n<a href=\"#\">Link</a>\n<a href=\"#\" class=\"right\">Link</a>\n</div>\nUse CSS to style the navigation bar:\n/* Style the top navigation bar */\n.navbar {\noverflow: hidden; /* Hide overflow */\nbackground-color: #333; \n  /* Dark background color */\n}\n/* Style the navigation bar links */\n.navbar \n  a {\nfloat: left; /* Make sure that the links stay \n  side-by-side */\ndisplay: block; /* Change the display to \n  block, for responsive reasons (see below) */\ncolor: white; /* White text color */\ntext-align: center; \n  /* Center the text */\npadding: 14px 20px; /* Add some padding */\ntext-decoration: none; \n  /* Remove underline */\n}\n/* \n  Right-aligned link */\n.navbar a.right {\nfloat: right; \n  /* Float a link to the right */\n}\n/* \n  Change color on hover/mouse-over */\n.navbar a:hover {\nbackground-color: #ddd; /* Grey background color */\ncolor: black; \n  /* Black text color */\n}\n\nContent\nCreate a 2-column layout, divided into a \"side content\" and a \"main content\".\n<div class=\"row\">\n<div class=\"side\">...</div>\n<div \n  class=\"main\">...</div>\n</div>\nWe use CSS Flexbox to handle the layout:\n/* Ensure proper sizing */\n* {\nbox-sizing: border-box;\n}\n/* Column container */\n.row {\ndisplay: flex;\nflex-wrap: wrap;\n}\n/* Create \n  two unequal columns that sits \n/* Sidebar/left column \n  */\n.side {\nflex: 30%; /* Set the width of the sidebar \n  */\nbackground-color: #f1f1f1; /* Grey background color \n  */\npadding: 20px; /* Some padding */\n}\n/* Main column */\n.main {\nflex: 70%; /* Set the width of the main content */\nbackground-color: white; /* White background color */\npadding: 20px; /* Some padding */\n}\n\nThen add media queries to make the layout responsive. This will make sure \nthat your website looks good on all devices (desktops, laptops, tablets and \nphones). Resize the browser window to see the result.\n/* Responsive layout - when the screen is less than 700px wide, make the two \n  columns stack on top of each other instead of \n@media \n  screen and (max-width: 700px) {\n.row {\nflex-direction: column;\n}\n}\n/* \n  Responsive layout - when the screen is less than 400px wide, make the \n  navigation links stack on top of each other instead of \n@media screen and (max-width: 400px) {\n.navbar a {\nfloat: none;\nwidth: 100%;\n}\n}\n\nTip:\nTo create a different kind of layout, just change the flex width (but make sure that it adds up to 100%).\nTip:\nDo you wonder how the @media rule works?\nRead more about \nit in our CSS Media Queries chapter\n.\nTip:\nTo learn more about the Flexible Box Layout Module,\nread our  \nCSS Flexbox chapter\n.\nWhat is box-sizing?\nYou can easily create three floating boxes side by side. However, when you add something that enlarges the width of each box (e.g. padding or borders), the box will break. The\nbox-sizing\nproperty allows us to include the padding and border in the box's total width (and height), making sure that the padding stays inside of the box and that it does not break.\nYou can read more about the box-sizing property in our\nCSS Box Sizing Tutorial\n.\nFooter\nAt last, we will add a footer.\n<div class=\"footer\">\n<h2>Footer</h2>\n</div>\nAnd style it:\n.footer {\npadding: 20px; /* Some padding */\ntext-align: center; /* Center text*/\nbackground: #ddd; \n  /* Grey background */\n}\n\nCongratulations! You have built a responsive website from scratch.\n Spaces\nIf you want to create your own website and host your .html files, try our\nwebsite builder\n, called\n Spaces\n:\nGet your own Website\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<title>Page Title</title>\n<meta \n  charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, \n  initial-scale=1\">\n<style>\nbody {\nfont-family: Arial, Helvetica, sans-serif;\n}\n</style>\n</head>\n<body>\n<h1>My Website</h1>\n<p>A website created by me.</p>\n</body>\n</html>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<div class=\"header\">\n<h1>My Website</h1>\n<p>A website \n  created by me.</p>\n</div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": ".header {\npadding: 80px; /* some padding */\ntext-align: center; /* center the text */\nbackground: #1abc9c; \n  /* green background */\ncolor: white; /* white text color */\n}\n/* Increase the font size of the <h1> element */\n.header h1 {\nfont-size: 40px;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<div class=\"navbar\">\n<a href=\"#\">Link</a>\n<a href=\"#\">Link</a>\n<a href=\"#\">Link</a>\n<a href=\"#\" class=\"right\">Link</a>\n</div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "/* Style the top navigation bar */\n.navbar {\noverflow: hidden; /* Hide overflow */\nbackground-color: #333; \n  /* Dark background color */\n}\n/* Style the navigation bar links */\n.navbar \n  a {\nfloat: left; /* Make sure that the links stay \n  side-by-side */\ndisplay: block; /* Change the display to \n  block, for responsive reasons (see below) */\ncolor: white; /* White text color */\ntext-align: center; \n  /* Center the text */\npadding: 14px 20px; /* Add some padding */\ntext-decoration: none; \n  /* Remove underline */\n}\n/* \n  Right-aligned link */\n.navbar a.right {\nfloat: right; \n  /* Float a link to the right */\n}\n/* \n  Change color on hover/mouse-over */\n.navbar a:hover {\nbackground-color: #ddd; /* Grey background color */\ncolor: black; \n  /* Black text color */\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "<div class=\"row\">\n<div class=\"side\">...</div>\n<div \n  class=\"main\">...</div>\n</div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "/* Ensure proper sizing */\n* {\nbox-sizing: border-box;\n}\n/* Column container */\n.row {\ndisplay: flex;\nflex-wrap: wrap;\n}\n/* Create \n  two unequal columns that sits next to each other */\n/* Sidebar/left column \n  */\n.side {\nflex: 30%; /* Set the width of the sidebar \n  */\nbackground-color: #f1f1f1; /* Grey background color \n  */\npadding: 20px; /* Some padding */\n}\n/* Main column */\n.main {\nflex: 70%; /* Set the width of the main content */\nbackground-color: white; /* White background color */\npadding: 20px; /* Some padding */\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "/* Responsive layout - when the screen is less than 700px wide, make the two \n  columns stack on top of each other instead of next to each other */\n@media \n  screen and (max-width: 700px) {\n.row {\nflex-direction: column;\n}\n}\n/* \n  Responsive layout - when the screen is less than 400px wide, make the \n  navigation links stack on top of each other instead of next to each other */\n@media screen and (max-width: 400px) {\n.navbar a {\nfloat: none;\nwidth: 100%;\n}\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "<div class=\"footer\">\n<h2>Footer</h2>\n</div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": ".footer {\npadding: 20px; /* Some padding */\ntext-align: center; /* Center text*/\nbackground: #ddd; \n  /* Grey background */\n}",
      "language": "css",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<title>Page Title</title>\n<meta \n  charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, \n  initial-scale=1\">\n<style>\nbody {\nfont-family: Arial, Helvetica, sans-serif;\n}\n</style>\n</head>\n# TODO: Complete this line\n<h1>My Website</h1>\n<p>A website created by me.</p>\n</body>\n</html>",
      "solution": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<title>Page Title</title>\n<meta \n  charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, \n  initial-scale=1\">\n<style>\nbody {\nfont-family: Arial, Helvetica, sans-serif;\n}\n</style>\n</head>\n<body>\n<h1>My Website</h1>\n<p>A website created by me.</p>\n</body>\n</html>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<div class=\"header\">\n<h1>My Website</h1>\n# TODO: Complete this line\n  created by me.</p>\n</div>",
      "solution": "<div class=\"header\">\n<h1>My Website</h1>\n<p>A website \n  created by me.</p>\n</div>"
    }
  ],
  "related_topics": [
    {
      "id": "dc5a937b-ae40-4996-916f-dc135134792b",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "1f23bf3b-c041-47ea-947c-99f61028bd61",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "0fbf4407-5db8-479d-aee8-36aaae35e82d",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Basic HTML Page\nHTML is the standard markup language for creating websites and CSS?",
      "options": [
        "None of the above.",
        "the root element of an HTML \npage\nThe\n<head>\nelement contains meta information about the document\nThe\n<title>\nelement specifies a title for the document\nThe\n<meta>\nelement should define the character set to be UTF-8\nThe\n<meta>\nelement with name=\"viewport\" makes the website look good on all devices and screen resolutions\nThe\n<style>\nelement contains the styles for the website (layout/design)\nThe\n<body>\nelement contains the visible page content\nThe\n<h1>\nelement defines a large heading\nThe\n<p>\nelement defines a paragraph\nCreating Page Content\nInside the\n<body>\nelement of our website",
        "the language that describes the style of an HTML document",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Basic HTML Page\nHTML is the standard markup language for creating websites and CSS is 'the language that describes the style of an HTML document'."
    },
    {
      "question": "What is element?",
      "options": [
        "None of the above.",
        "None of the above.",
        "the language that describes the style of an HTML document",
        "the root element of an HTML \npage\nThe\n<head>\nelement contains meta information about the document\nThe\n<title>\nelement specifies a title for the document\nThe\n<meta>\nelement should define the character set to be UTF-8\nThe\n<meta>\nelement with name=\"viewport\" makes the website look good on all devices and screen resolutions\nThe\n<style>\nelement contains the styles for the website (layout/design)\nThe\n<body>\nelement contains the visible page content\nThe\n<h1>\nelement defines a large heading\nThe\n<p>\nelement defines a paragraph\nCreating Page Content\nInside the\n<body>\nelement of our website"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of element is 'the root element of an HTML \npage\nThe\n<head>\nelement contains meta information about the document\nThe\n<title>\nelement specifies a title for the document\nThe\n<meta>\nelement should define the character set to be UTF-8\nThe\n<meta>\nelement with name=\"viewport\" makes the website look good on all devices and screen resolutions\nThe\n<style>\nelement contains the styles for the website (layout/design)\nThe\n<body>\nelement contains the visible page content\nThe\n<h1>\nelement defines a large heading\nThe\n<p>\nelement defines a paragraph\nCreating Page Content\nInside the\n<body>\nelement of our website'."
    }
  ],
  "summary": "This tutorial covers How TO - Make a Website concepts and techniques. You'll learn how to use How TO - Make a Website effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of How TO - Make a Website and how to apply it in your projects."
}