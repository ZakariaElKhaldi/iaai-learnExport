{
  "id": "411cb03f-1ec7-48fe-9d21-2c9a622aa711",
  "title": "How TO - Two Column Layout",
  "slug": "how-to-two-column-layout",
  "metadata": {
    "description": "Learn about How TO - Two Column Layout with clear explanations and practical examples.",
    "keywords": [
      "c",
      "column",
      "layout",
      "example",
      "create",
      "columns",
      "width",
      "learn",
      "float",
      "flex",
      "responsive"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnHow To",
    "subcategory": "2 Column Layout"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "How TO - Two Column Layout",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Learn how to create a 2-column layout grid with CSS.\nColumn 1\nSome text..\nColumn 2\nSome text..\n\nHow To Create a Two Column Layout\nStep 1) Add HTML:\nExample\n<div class=\"row\">\n<div class=\"column\"></div>\n<div \n  class=\"column\"></div>\n</div>\nStep 2) Add CSS:\nIn this example, we will create two\nequal\ncolumns:\nFloat Example\n.column {\nfloat: left;\nwidth: 50%;\n}\n/* Clear floats after the \n  columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n\nA modern way of creating two columns, is to use\nCSS Flexbox\n. However, it is not supported in Internet Explorer 10 and earlier versions.\nFlex Example\n.row {\ndisplay: flex;\n}\n.column {\nflex: 50%;\n}\n\nIt is up to you if you want to use floats or flex to create a two-column layout. However, if you need support for IE10 and down, you should use float.\nTip:\nTo learn more about the Flexible Box Layout Module,\nread our  \nCSS Flexbox chapter\n.\nIn this example, we will create two\nunequal\ncolumns:\nExample\n.column {\nfloat: left;\n}\n.left {\nwidth: 25%;\n}\n.right {\nwidth: 75%;\n}\n\nIn this example, we will create a\nresponsive\ntwo column layout:\nExample\n/* Responsive layout - when the screen is less than 600px wide, make the two \n  columns stack on top of each other instead of \n@media \n  screen and (max-width: 600px) {\n.column {\nwidth: 100%;\n}\n}\n\nTip:\nGo to our\nCSS Website Layout\nTutorial to learn more about \nwebsite layouts.\nTip:\nGo to our\nCSS Responsive Web Design\nTutorial to learn more about \nresponsive web design and grids.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<div class=\"row\">\n<div class=\"column\"></div>\n<div \n  class=\"column\"></div>\n</div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Float Example",
      "content": "",
      "order": 4,
      "code": ".column {\nfloat: left;\nwidth: 50%;\n}\n/* Clear floats after the \n  columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}",
      "language": "css",
      "explanation": "Example of float example"
    },
    {
      "type": "code_example",
      "title": "Flex Example",
      "content": "",
      "order": 5,
      "code": ".row {\ndisplay: flex;\n}\n.column {\nflex: 50%;\n}",
      "language": "css",
      "explanation": "Example of flex example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": ".column {\nfloat: left;\n}\n.left {\nwidth: 25%;\n}\n.right {\nwidth: 75%;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "/* Responsive layout - when the screen is less than 600px wide, make the two \n  columns stack on top of each other instead of next to each other */\n@media \n  screen and (max-width: 600px) {\n.column {\nwidth: 100%;\n}\n}",
      "language": "css",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<div class=\"row\">\n<div class=\"column\"></div>\n# TODO: Complete this line\n  class=\"column\"></div>\n</div>",
      "solution": "<div class=\"row\">\n<div class=\"column\"></div>\n<div \n  class=\"column\"></div>\n</div>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": ".column {\nfloat: left;\nwidth: 50%;\n}\n/* Clear floats after the \n  columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\n# TODO: Complete this line\n}",
      "solution": ".column {\nfloat: left;\nwidth: 50%;\n}\n/* Clear floats after the \n  columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}"
    }
  ],
  "related_topics": [
    {
      "id": "b840e53e-05f4-498c-97a7-14649c6d6931",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "db238d70-d9eb-4c12-98e6-6eb3b65cdf65",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "9a4216a4-2d54-4cbb-83c4-16bcf6d0e1b5",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is it?",
      "options": [
        "None of the above.",
        "not supported in Internet Explorer 10 and earlier versions",
        "None of the above.",
        "Not a it."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of it is 'not supported in Internet Explorer 10 and earlier versions'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers How TO - Two Column Layout concepts and techniques. You'll learn how to use How TO - Two Column Layout effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of How TO - Two Column Layout and how to apply it in your projects."
}