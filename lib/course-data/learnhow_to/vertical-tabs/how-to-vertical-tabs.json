{
  "id": "3b992450-9669-428e-96ba-edb56f4895a3",
  "title": "How TO - Vertical Tabs",
  "slug": "how-to-vertical-tabs",
  "metadata": {
    "description": "Learn about How TO - Vertical Tabs with clear explanations and practical examples.",
    "keywords": [
      "c",
      "class",
      "button",
      "tabcontent",
      "tablinks",
      "style",
      "color",
      "active",
      "tabs",
      "london",
      "paris"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnHow To",
    "subcategory": "Vertical Tabs"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "How TO - Vertical Tabs",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Learn how to create a vertical tab menu with CSS and JavaScript.\nVertical Tabs\nTabs are perfect for single page web applications, or for web pages capable \nof displaying different subjects.\n\nCreate Togglable Vertical Tabs\nStep 1) Add HTML:\nExample\n<div class=\"tab\">\n<button class=\"tablinks\" onclick=\"openCity(event, \n  'London')\">London</button>\n<button class=\"tablinks\" onclick=\"openCity(event, \n  'Paris')\">Paris</button>\n<button class=\"tablinks\" onclick=\"openCity(event, \n  'Tokyo')\">Tokyo</button>\n</div>\n<div id=\"London\" class=\"tabcontent\">\n<h3>London</h3>\n<p>London is the capital city of England.</p>\n</div>\n<div \nid=\"Paris\" class=\"tabcontent\">\n<h3>Paris</h3>\n<p>Paris \nis the capital of France.</p>\n</div>\n<div id=\"Tokyo\" class=\"tabcontent\">\n<h3>Tokyo</h3>\n<p>Tokyo is the capital of Japan.</p>\n</div>\nCreate buttons to open the specific \ntab content. All <div> elements with\nclass=\"tabcontent\"\nare hidden by default \n(with CSS & JS) - when the user clicks on a button - it will open the tab content \nthat \"matches\" this button.\nStep 2) Add CSS:\nStyle the buttons and the tab content:\nExample\n* {box-sizing: border-box}\n/* Style the tab */\n.tab {\nfloat: left;\nborder: 1px solid #ccc;\nbackground-color: #f1f1f1;\nwidth: 30%;\nheight: 300px;\n}\n/* Style the buttons that are used to open the tab content */\n.tab button {\ndisplay: block;\nbackground-color: inherit;\ncolor: black;\npadding: 22px 16px;\nwidth: 100%;\nborder: none;\noutline: none;\ntext-align: left;\ncursor: pointer;\ntransition: 0.3s;\n}\n/* Change \n  background color of buttons on hover */\n.tab button:hover {\nbackground-color: #ddd;\n}\n/* Create an active/current \"tab button\" \n  class */\n.tab button.active {\nbackground-color: \n  #ccc;\n}\n/* Style the tab content */\n.tabcontent {\nfloat: left;\npadding: 0px 12px;\nborder: 1px solid #ccc;\nwidth: 70%;\nborder-left: none;\nheight: 300px;\n}\nStep 3) Add JavaScript:\nExample\nfunction openCity(evt, cityName) {\n// Declare all \nvariables\nvar i, tabcontent, tablinks;\n// Get all elements with class=\"tabcontent\" and hide them\ntabcontent \n= document.getElementsByClassName(\"tabcontent\");\nfor (i = 0; i < tabcontent.length; i++) {\ntabcontent[i].style.display = \"none\";\n}\n// Get all elements with class=\"tablinks\" and remove \nthe class \"active\"\ntablinks = document.getElementsByClassName(\"tablinks\");\nfor (i = 0; i < \ntablinks.length; i++) {\ntablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n}\n// Show the current tab, and add an \"active\" class to \nthe link that opened the tab\ndocument.getElementById(cityName).style.display = \"block\";\nevt.currentTarget.className += \" active\";\n}\n\nTip:\nAlso check out\nHow To - Horizontal Tabs\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<div class=\"tab\">\n<button class=\"tablinks\" onclick=\"openCity(event, \n  'London')\">London</button>\n<button class=\"tablinks\" onclick=\"openCity(event, \n  'Paris')\">Paris</button>\n<button class=\"tablinks\" onclick=\"openCity(event, \n  'Tokyo')\">Tokyo</button>\n</div>\n<div id=\"London\" class=\"tabcontent\">\n<h3>London</h3>\n<p>London is the capital city of England.</p>\n</div>\n<div \nid=\"Paris\" class=\"tabcontent\">\n<h3>Paris</h3>\n<p>Paris \nis the capital of France.</p>\n</div>\n<div id=\"Tokyo\" class=\"tabcontent\">\n<h3>Tokyo</h3>\n<p>Tokyo is the capital of Japan.</p>\n</div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "* {box-sizing: border-box}\n/* Style the tab */\n.tab {\nfloat: left;\nborder: 1px solid #ccc;\nbackground-color: #f1f1f1;\nwidth: 30%;\nheight: 300px;\n}\n/* Style the buttons that are used to open the tab content */\n.tab button {\ndisplay: block;\nbackground-color: inherit;\ncolor: black;\npadding: 22px 16px;\nwidth: 100%;\nborder: none;\noutline: none;\ntext-align: left;\ncursor: pointer;\ntransition: 0.3s;\n}\n/* Change \n  background color of buttons on hover */\n.tab button:hover {\nbackground-color: #ddd;\n}\n/* Create an active/current \"tab button\" \n  class */\n.tab button.active {\nbackground-color: \n  #ccc;\n}\n/* Style the tab content */\n.tabcontent {\nfloat: left;\npadding: 0px 12px;\nborder: 1px solid #ccc;\nwidth: 70%;\nborder-left: none;\nheight: 300px;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "function openCity(evt, cityName) {\n// Declare all \nvariables\nvar i, tabcontent, tablinks;\n// Get all elements with class=\"tabcontent\" and hide them\ntabcontent \n= document.getElementsByClassName(\"tabcontent\");\nfor (i = 0; i < tabcontent.length; i++) {\ntabcontent[i].style.display = \"none\";\n}\n// Get all elements with class=\"tablinks\" and remove \nthe class \"active\"\ntablinks = document.getElementsByClassName(\"tablinks\");\nfor (i = 0; i < \ntablinks.length; i++) {\ntablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n}\n// Show the current tab, and add an \"active\" class to \nthe link that opened the tab\ndocument.getElementById(cityName).style.display = \"block\";\nevt.currentTarget.className += \" active\";\n}",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<div class=\"tab\">\n<button class=\"tablinks\" onclick=\"openCity(event, \n  'London')\">London</button>\n<button class=\"tablinks\" onclick=\"openCity(event, \n  'Paris')\">Paris</button>\n<button class=\"tablinks\" onclick=\"openCity(event, \n  'Tokyo')\">Tokyo</button>\n</div>\n<div id=\"London\" class=\"tabcontent\">\n<h3>London</h3>\n<p>London is the capital city of England.</p>\n</div>\n<div \nid=\"Paris\" class=\"tabcontent\">\n<h3>Paris</h3>\n<p>Paris \n# TODO: Complete this line\n</div>\n<div id=\"Tokyo\" class=\"tabcontent\">\n<h3>Tokyo</h3>\n<p>Tokyo is the capital of Japan.</p>\n</div>",
      "solution": "<div class=\"tab\">\n<button class=\"tablinks\" onclick=\"openCity(event, \n  'London')\">London</button>\n<button class=\"tablinks\" onclick=\"openCity(event, \n  'Paris')\">Paris</button>\n<button class=\"tablinks\" onclick=\"openCity(event, \n  'Tokyo')\">Tokyo</button>\n</div>\n<div id=\"London\" class=\"tabcontent\">\n<h3>London</h3>\n<p>London is the capital city of England.</p>\n</div>\n<div \nid=\"Paris\" class=\"tabcontent\">\n<h3>Paris</h3>\n<p>Paris \nis the capital of France.</p>\n</div>\n<div id=\"Tokyo\" class=\"tabcontent\">\n<h3>Tokyo</h3>\n<p>Tokyo is the capital of Japan.</p>\n</div>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "* {box-sizing: border-box}\n/* Style the tab */\n.tab {\nfloat: left;\nborder: 1px solid #ccc;\nbackground-color: #f1f1f1;\nwidth: 30%;\nheight: 300px;\n# TODO: Complete this line\n/* Style the buttons that are used to open the tab content */\n.tab button {\ndisplay: block;\nbackground-color: inherit;\ncolor: black;\npadding: 22px 16px;\nwidth: 100%;\nborder: none;\noutline: none;\ntext-align: left;\ncursor: pointer;\ntransition: 0.3s;\n}\n/* Change \n  background color of buttons on hover */\n.tab button:hover {\nbackground-color: #ddd;\n}\n/* Create an active/current \"tab button\" \n  class */\n.tab button.active {\nbackground-color: \n  #ccc;\n}\n/* Style the tab content */\n.tabcontent {\nfloat: left;\npadding: 0px 12px;\nborder: 1px solid #ccc;\nwidth: 70%;\nborder-left: none;\nheight: 300px;\n}",
      "solution": "* {box-sizing: border-box}\n/* Style the tab */\n.tab {\nfloat: left;\nborder: 1px solid #ccc;\nbackground-color: #f1f1f1;\nwidth: 30%;\nheight: 300px;\n}\n/* Style the buttons that are used to open the tab content */\n.tab button {\ndisplay: block;\nbackground-color: inherit;\ncolor: black;\npadding: 22px 16px;\nwidth: 100%;\nborder: none;\noutline: none;\ntext-align: left;\ncursor: pointer;\ntransition: 0.3s;\n}\n/* Change \n  background color of buttons on hover */\n.tab button:hover {\nbackground-color: #ddd;\n}\n/* Create an active/current \"tab button\" \n  class */\n.tab button.active {\nbackground-color: \n  #ccc;\n}\n/* Style the tab content */\n.tabcontent {\nfloat: left;\npadding: 0px 12px;\nborder: 1px solid #ccc;\nwidth: 70%;\nborder-left: none;\nheight: 300px;\n}"
    }
  ],
  "related_topics": [
    {
      "id": "6583cc5b-1475-47aa-a988-944a433f4272",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "9460f9e2-3b41-4d4c-bfb7-72d430afd482",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "eb8c71a4-6749-4228-aa51-8621971dc9d6",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Vertical Tabs\nTabs?",
      "options": [
        "None of the above.",
        "None of the above.",
        "the capital city of England",
        "perfect for single page web applications"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Vertical Tabs\nTabs is 'perfect for single page web applications'."
    },
    {
      "question": "What is London?",
      "options": [
        "the capital city of England",
        "perfect for single page web applications",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of London is 'the capital city of England'."
    }
  ],
  "summary": "This tutorial covers How TO - Vertical Tabs concepts and techniques. You'll learn how to use How TO - Vertical Tabs effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of How TO - Vertical Tabs and how to apply it in your projects."
}