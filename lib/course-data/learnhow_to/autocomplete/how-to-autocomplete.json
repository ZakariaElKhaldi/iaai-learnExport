{
  "id": "c6eef425-f77f-44c4-99d8-b9c171d48969",
  "title": "How TO - Autocomplete",
  "slug": "how-to-autocomplete",
  "metadata": {
    "description": "Learn about How TO - Autocomplete with clear explanations and practical examples.",
    "keywords": [
      "c",
      "autocomplete",
      "function",
      "currentfocus",
      "items",
      "input",
      "item",
      "islands",
      "color",
      "active",
      "value"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnHow To",
    "subcategory": "Autocomplete"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "How TO - Autocomplete",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Learn how to create an Autocomplete.\nAutocomplete\nStart typing:\nSubmit\n\nCreate an Autocomplete Form\nStep 1) Add HTML:\nExample\n<!--Make sure the form has the autocomplete function switched off:-->\n<form \n  autocomplete=\"off\" action=\"/action_page.php\">\n<div class=\"autocomplete\" \n  style=\"width:300px;\">\n<input id=\"myInput\" type=\"text\" name=\"myCountry\" \n  placeholder=\"Country\">\n</div>\n<input type=\"submit\">\n</form>\nStep 2) Create a JavaScript Array:\nExample\nAn Array of all the countries in the world:\nvar countries = [\"Afghanistan\",\"Albania\",\"Algeria\",\"Andorra\",\"Angola\",\"Anguilla\",\"Antigua \n  &amp; \n  Barbuda\",\"Argentina\",\"Armenia\",\"Aruba\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahamas\",\"Bahrain\",\"Bangladesh\",\"Barbados\",\"Belarus\",\"Belgium\",\"Belize\",\"Benin\",\"Bermuda\",\"Bhutan\",\"Bolivia\",\"Bosnia \n  &amp; Herzegovina\",\"Botswana\",\"Brazil\",\"British Virgin \n  Islands\",\"Brunei\",\"Bulgaria\",\"Burkina \n  Faso\",\"Burundi\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Cape Verde\",\"Cayman Islands\",\"Central \n  Arfrican Republic\",\"Chad\",\"Chile\",\"China\",\"Colombia\",\"Congo\",\"Cook \n  Islands\",\"Costa Rica\",\"Cote D Ivoire\",\"Croatia\",\"Cuba\",\"Curacao\",\"Cyprus\",\"Czech \n  Republic\",\"Denmark\",\"Djibouti\",\"Dominica\",\"Dominican \n  Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Equatorial \n  Guinea\",\"Eritrea\",\"Estonia\",\"Ethiopia\",\"Falkland Islands\",\"Faroe \n  Islands\",\"Fiji\",\"Finland\",\"France\",\"French Polynesia\",\"French West \n  Indies\",\"Gabon\",\"Gambia\",\"Georgia\",\"Germany\",\"Ghana\",\"Gibraltar\",\"Greece\",\"Greenland\",\"Grenada\",\"Guam\",\"Guatemala\",\"Guernsey\",\"Guinea\",\"Guinea \n  Bissau\",\"Guyana\",\"Haiti\",\"Honduras\",\"Hong \n  Kong\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran\",\"Iraq\",\"Ireland\",\"Isle of \n  Man\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jersey\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kiribati\",\"Kosovo\",\"Kuwait\",\"Kyrgyzstan\",\"Laos\",\"Latvia\",\"Lebanon\",\"Lesotho\",\"Liberia\",\"Libya\",\"Liechtenstein\",\"Lithuania\",\"Luxembourg\",\"Macau\",\"Macedonia\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Marshall \n  Islands\",\"Mauritania\",\"Mauritius\",\"Mexico\",\"Micronesia\",\"Moldova\",\"Monaco\",\"Mongolia\",\"Montenegro\",\"Montserrat\",\"Morocco\",\"Mozambique\",\"Myanmar\",\"Namibia\",\"Nauro\",\"Nepal\",\"Netherlands\",\"Netherlands \n  Antilles\",\"New Caledonia\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"North \n  Korea\",\"Norway\",\"Oman\",\"Pakistan\",\"Palau\",\"Palestine\",\"Panama\",\"Papua New \n  Guinea\",\"Paraguay\",\"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Puerto \n  Rico\",\"Qatar\",\"Reunion\",\"Romania\",\"Russia\",\"Rwanda\",\"Saint Pierre &amp; \n  Miquelon\",\"Samoa\",\"San Marino\",\"Sao Tome and Principe\",\"Saudi \n  Arabia\",\"Senegal\",\"Serbia\",\"Seychelles\",\"Sierra \n  Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"Solomon Islands\",\"Somalia\",\"South \n  Africa\",\"South Korea\",\"South Sudan\",\"Spain\",\"Sri Lanka\",\"St Kitts &amp; \n  Nevis\",\"St Lucia\",\"St \n  Vincent\",\"Sudan\",\"Suriname\",\"Swaziland\",\"Sweden\",\"Switzerland\",\"Syria\",\"Taiwan\",\"Tajikistan\",\"Tanzania\",\"Thailand\",\"Timor \n  L'Este\",\"Togo\",\"Tonga\",\"Trinidad &amp; \n  Tobago\",\"Tunisia\",\"Turkey\",\"Turkmenistan\",\"Turks &amp; \n  Caicos\",\"Tuvalu\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\"United \n  Kingdom\",\"United States of America\",\"Uruguay\",\"Uzbekistan\",\"Vanuatu\",\"Vatican \n  City\",\"Venezuela\",\"Vietnam\",\"Virgin Islands (US)\",\"Yemen\",\"Zambia\",\"Zimbabwe\"];\nStep 3) Add CSS:\nThe container must have a \"relative\" positioning.\nExample\n* { box-sizing: border-box; }\nbody {\nfont: 16px Arial;\n}\n.autocomplete {\n/*the container must be positioned relative:*/\nposition: relative;\ndisplay: inline-block;\n}\ninput {\nborder: 1px \n  solid transparent;\nbackground-color: #f1f1f1;\npadding: \n  10px;\nfont-size: 16px;\n}\ninput[type=text] {\nbackground-color: #f1f1f1;\nwidth: 100%;\n}\ninput[type=submit] {\nbackground-color: DodgerBlue;\ncolor: #fff;\n}\n.autocomplete-items {\nposition: absolute;\nborder: 1px \n  solid #d4d4d4;\nborder-bottom: none;\nborder-top: none;\nz-index: 99;\n/*position the autocomplete items to be the same width \n  as the container:*/\ntop: 100%;\nleft: 0;\nright: \n  0;\n}\n.autocomplete-items div {\npadding: 10px;\ncursor: pointer;\nbackground-color: #fff;\nborder-bottom: 1px solid #d4d4d4;\n}\n.autocomplete-items div:hover {\n/*when hovering an item:*/\nbackground-color: #e9e9e9;\n}\n.autocomplete-active {\n/*when navigating through the items using the \n  arrow keys:*/\nbackground-color: DodgerBlue !important;\ncolor: #ffffff;\n}\nStep 4) Add JavaScript:\nExample\nfunction autocomplete(inp, arr) {\n/*the autocomplete function takes \n  two arguments,\nthe text field element and an array of possible \n  autocompleted values:*/\nvar currentFocus;\n/*execute a \n  function when someone writes in the text field:*/\ninp.addEventListener(\"input\", function(e) {\nvar a, b, i, val = this.value;\n/*close any \n  already open lists of autocompleted values*/\ncloseAllLists();\nif (!val) { return false;}\ncurrentFocus = -1;\n/*create a DIV element \n  that will contain the items (values):*/\na = \n  document.createElement(\"DIV\");\na.setAttribute(\"id\", this.id + \"autocomplete-list\");\na.setAttribute(\"class\", \"autocomplete-items\");\n/*append the DIV element as a child of the autocomplete container:*/\nthis.parentNode.appendChild(a);\n/*for each \n  item in the array...*/\nfor (i = 0; i < \n  arr.length; i++) {\n/*check if \n  the item starts with the same letters as the text field value:*/\nif (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {\n/*create a DIV element for each matching element:*/\nb = document.createElement(\"DIV\");\n/*make the matching letters bold:*/\nb.innerHTML = \"<strong>\" + arr[i].substr(0, val.length) + \"</strong>\";\nb.innerHTML += arr[i].substr(val.length);\n/*insert a input field that will hold the current array item's value:*/\nb.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\n/*execute a function when someone clicks on the item value (DIV element):*/\nb.addEventListener(\"click\", function(e) {\n/*insert the value for the autocomplete text field:*/\ninp.value = this.getElementsByTagName(\"input\")[0].value;\n/*close the list of autocompleted values,\n(or any other open lists of autocompleted values:*/\ncloseAllLists();\n});\na.appendChild(b);\n}\n}\n});\n/*execute a function presses a key on the \n  keyboard:*/\ninp.addEventListener(\"keydown\", function(e) {\nvar x = document.getElementById(this.id + \"autocomplete-list\");\nif (x) x = x.getElementsByTagName(\"div\");\nif \n  (e.keyCode == 40) {\n/*If the \n  arrow DOWN key is pressed,\nincrease the currentFocus variable:*/\ncurrentFocus++;\n/*and and make \n  the current item more visible:*/\naddActive(x);\n} else if (e.keyCode == 38) { \n  //up\n/*If the arrow UP key is \n  pressed,\ndecrease the \n  currentFocus variable:*/\ncurrentFocus--;\n/*and and make \n  the current item more visible:*/\naddActive(x);\n} else if (e.keyCode == 13) {\n/*If the ENTER key is pressed, prevent the form from being submitted,*/\ne.preventDefault();\nif (currentFocus \n  > -1) {\n/*and \n  simulate a click on the \"active\" item:*/\nif (x) x[currentFocus].click();\n}\n}\n});\nfunction \n  addActive(x) {\n/*a function to classify an item as \n  \"active\":*/\nif (!x) return false;\n/*start by removing the \"active\" class on all items:*/\nremoveActive(x);\nif (currentFocus >= x.length) \n  currentFocus = 0;\nif (currentFocus < 0) currentFocus = (x.length \n  - 1);\n/*add class \"autocomplete-active\":*/\nx[currentFocus].classList.add(\"autocomplete-active\");\n}\nfunction removeActive(x) {\n/*a function to remove the \n  \"active\" class from all autocomplete items:*/\nfor (var i \n  = 0; i < x.length; i++) {\nx[i].classList.remove(\"autocomplete-active\");\n}\n}\nfunction closeAllLists(elmnt) {\n/*close all autocomplete lists in the document,\nexcept \n  the one passed as an argument:*/\nvar x = \n  document.getElementsByClassName(\"autocomplete-items\");\nfor (var i = 0; i < x.length; i++) {\nif (elmnt \n  != x[i] && elmnt != inp) {\nx[i].parentNode.removeChild(x[i]);\n}\n}\n}\n/*execute a function when someone clicks in the document:*/\ndocument.addEventListener(\"click\", function (e) {\ncloseAllLists(e.target);\n});\n}\nStep 5) Initiate the Autocomplete Effect on \"myInput\":\nExample\nPass the countries array as the second parameter of the autocomplete \n  function:\n<script>\nautocomplete(document.getElementById(\"myInput\"), \n  countries);\n</script>\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<!--Make sure the form has the autocomplete function switched off:-->\n<form \n  autocomplete=\"off\" action=\"/action_page.php\">\n<div class=\"autocomplete\" \n  style=\"width:300px;\">\n<input id=\"myInput\" type=\"text\" name=\"myCountry\" \n  placeholder=\"Country\">\n</div>\n<input type=\"submit\">\n</form>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "var countries = [\"Afghanistan\",\"Albania\",\"Algeria\",\"Andorra\",\"Angola\",\"Anguilla\",\"Antigua \n  &amp; \n  Barbuda\",\"Argentina\",\"Armenia\",\"Aruba\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahamas\",\"Bahrain\",\"Bangladesh\",\"Barbados\",\"Belarus\",\"Belgium\",\"Belize\",\"Benin\",\"Bermuda\",\"Bhutan\",\"Bolivia\",\"Bosnia \n  &amp; Herzegovina\",\"Botswana\",\"Brazil\",\"British Virgin \n  Islands\",\"Brunei\",\"Bulgaria\",\"Burkina \n  Faso\",\"Burundi\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Cape Verde\",\"Cayman Islands\",\"Central \n  Arfrican Republic\",\"Chad\",\"Chile\",\"China\",\"Colombia\",\"Congo\",\"Cook \n  Islands\",\"Costa Rica\",\"Cote D Ivoire\",\"Croatia\",\"Cuba\",\"Curacao\",\"Cyprus\",\"Czech \n  Republic\",\"Denmark\",\"Djibouti\",\"Dominica\",\"Dominican \n  Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Equatorial \n  Guinea\",\"Eritrea\",\"Estonia\",\"Ethiopia\",\"Falkland Islands\",\"Faroe \n  Islands\",\"Fiji\",\"Finland\",\"France\",\"French Polynesia\",\"French West \n  Indies\",\"Gabon\",\"Gambia\",\"Georgia\",\"Germany\",\"Ghana\",\"Gibraltar\",\"Greece\",\"Greenland\",\"Grenada\",\"Guam\",\"Guatemala\",\"Guernsey\",\"Guinea\",\"Guinea \n  Bissau\",\"Guyana\",\"Haiti\",\"Honduras\",\"Hong \n  Kong\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran\",\"Iraq\",\"Ireland\",\"Isle of \n  Man\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jersey\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kiribati\",\"Kosovo\",\"Kuwait\",\"Kyrgyzstan\",\"Laos\",\"Latvia\",\"Lebanon\",\"Lesotho\",\"Liberia\",\"Libya\",\"Liechtenstein\",\"Lithuania\",\"Luxembourg\",\"Macau\",\"Macedonia\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Marshall \n  Islands\",\"Mauritania\",\"Mauritius\",\"Mexico\",\"Micronesia\",\"Moldova\",\"Monaco\",\"Mongolia\",\"Montenegro\",\"Montserrat\",\"Morocco\",\"Mozambique\",\"Myanmar\",\"Namibia\",\"Nauro\",\"Nepal\",\"Netherlands\",\"Netherlands \n  Antilles\",\"New Caledonia\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"North \n  Korea\",\"Norway\",\"Oman\",\"Pakistan\",\"Palau\",\"Palestine\",\"Panama\",\"Papua New \n  Guinea\",\"Paraguay\",\"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Puerto \n  Rico\",\"Qatar\",\"Reunion\",\"Romania\",\"Russia\",\"Rwanda\",\"Saint Pierre &amp; \n  Miquelon\",\"Samoa\",\"San Marino\",\"Sao Tome and Principe\",\"Saudi \n  Arabia\",\"Senegal\",\"Serbia\",\"Seychelles\",\"Sierra \n  Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"Solomon Islands\",\"Somalia\",\"South \n  Africa\",\"South Korea\",\"South Sudan\",\"Spain\",\"Sri Lanka\",\"St Kitts &amp; \n  Nevis\",\"St Lucia\",\"St \n  Vincent\",\"Sudan\",\"Suriname\",\"Swaziland\",\"Sweden\",\"Switzerland\",\"Syria\",\"Taiwan\",\"Tajikistan\",\"Tanzania\",\"Thailand\",\"Timor \n  L'Este\",\"Togo\",\"Tonga\",\"Trinidad &amp; \n  Tobago\",\"Tunisia\",\"Turkey\",\"Turkmenistan\",\"Turks &amp; \n  Caicos\",\"Tuvalu\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\"United \n  Kingdom\",\"United States of America\",\"Uruguay\",\"Uzbekistan\",\"Vanuatu\",\"Vatican \n  City\",\"Venezuela\",\"Vietnam\",\"Virgin Islands (US)\",\"Yemen\",\"Zambia\",\"Zimbabwe\"];",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "* { box-sizing: border-box; }\nbody {\nfont: 16px Arial;\n}\n.autocomplete {\n/*the container must be positioned relative:*/\nposition: relative;\ndisplay: inline-block;\n}\ninput {\nborder: 1px \n  solid transparent;\nbackground-color: #f1f1f1;\npadding: \n  10px;\nfont-size: 16px;\n}\ninput[type=text] {\nbackground-color: #f1f1f1;\nwidth: 100%;\n}\ninput[type=submit] {\nbackground-color: DodgerBlue;\ncolor: #fff;\n}\n.autocomplete-items {\nposition: absolute;\nborder: 1px \n  solid #d4d4d4;\nborder-bottom: none;\nborder-top: none;\nz-index: 99;\n/*position the autocomplete items to be the same width \n  as the container:*/\ntop: 100%;\nleft: 0;\nright: \n  0;\n}\n.autocomplete-items div {\npadding: 10px;\ncursor: pointer;\nbackground-color: #fff;\nborder-bottom: 1px solid #d4d4d4;\n}\n.autocomplete-items div:hover {\n/*when hovering an item:*/\nbackground-color: #e9e9e9;\n}\n.autocomplete-active {\n/*when navigating through the items using the \n  arrow keys:*/\nbackground-color: DodgerBlue !important;\ncolor: #ffffff;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "function autocomplete(inp, arr) {\n/*the autocomplete function takes \n  two arguments,\nthe text field element and an array of possible \n  autocompleted values:*/\nvar currentFocus;\n/*execute a \n  function when someone writes in the text field:*/\ninp.addEventListener(\"input\", function(e) {\nvar a, b, i, val = this.value;\n/*close any \n  already open lists of autocompleted values*/\ncloseAllLists();\nif (!val) { return false;}\ncurrentFocus = -1;\n/*create a DIV element \n  that will contain the items (values):*/\na = \n  document.createElement(\"DIV\");\na.setAttribute(\"id\", this.id + \"autocomplete-list\");\na.setAttribute(\"class\", \"autocomplete-items\");\n/*append the DIV element as a child of the autocomplete container:*/\nthis.parentNode.appendChild(a);\n/*for each \n  item in the array...*/\nfor (i = 0; i < \n  arr.length; i++) {\n/*check if \n  the item starts with the same letters as the text field value:*/\nif (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {\n/*create a DIV element for each matching element:*/\nb = document.createElement(\"DIV\");\n/*make the matching letters bold:*/\nb.innerHTML = \"<strong>\" + arr[i].substr(0, val.length) + \"</strong>\";\nb.innerHTML += arr[i].substr(val.length);\n/*insert a input field that will hold the current array item's value:*/\nb.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\n/*execute a function when someone clicks on the item value (DIV element):*/\nb.addEventListener(\"click\", function(e) {\n/*insert the value for the autocomplete text field:*/\ninp.value = this.getElementsByTagName(\"input\")[0].value;\n/*close the list of autocompleted values,\n(or any other open lists of autocompleted values:*/\ncloseAllLists();\n});\na.appendChild(b);\n}\n}\n});\n/*execute a function presses a key on the \n  keyboard:*/\ninp.addEventListener(\"keydown\", function(e) {\nvar x = document.getElementById(this.id + \"autocomplete-list\");\nif (x) x = x.getElementsByTagName(\"div\");\nif \n  (e.keyCode == 40) {\n/*If the \n  arrow DOWN key is pressed,\nincrease the currentFocus variable:*/\ncurrentFocus++;\n/*and and make \n  the current item more visible:*/\naddActive(x);\n} else if (e.keyCode == 38) { \n  //up\n/*If the arrow UP key is \n  pressed,\ndecrease the \n  currentFocus variable:*/\ncurrentFocus--;\n/*and and make \n  the current item more visible:*/\naddActive(x);\n} else if (e.keyCode == 13) {\n/*If the ENTER key is pressed, prevent the form from being submitted,*/\ne.preventDefault();\nif (currentFocus \n  > -1) {\n/*and \n  simulate a click on the \"active\" item:*/\nif (x) x[currentFocus].click();\n}\n}\n});\nfunction \n  addActive(x) {\n/*a function to classify an item as \n  \"active\":*/\nif (!x) return false;\n/*start by removing the \"active\" class on all items:*/\nremoveActive(x);\nif (currentFocus >= x.length) \n  currentFocus = 0;\nif (currentFocus < 0) currentFocus = (x.length \n  - 1);\n/*add class \"autocomplete-active\":*/\nx[currentFocus].classList.add(\"autocomplete-active\");\n}\nfunction removeActive(x) {\n/*a function to remove the \n  \"active\" class from all autocomplete items:*/\nfor (var i \n  = 0; i < x.length; i++) {\nx[i].classList.remove(\"autocomplete-active\");\n}\n}\nfunction closeAllLists(elmnt) {\n/*close all autocomplete lists in the document,\nexcept \n  the one passed as an argument:*/\nvar x = \n  document.getElementsByClassName(\"autocomplete-items\");\nfor (var i = 0; i < x.length; i++) {\nif (elmnt \n  != x[i] && elmnt != inp) {\nx[i].parentNode.removeChild(x[i]);\n}\n}\n}\n/*execute a function when someone clicks in the document:*/\ndocument.addEventListener(\"click\", function (e) {\ncloseAllLists(e.target);\n});\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "<script>\nautocomplete(document.getElementById(\"myInput\"), \n  countries);\n</script>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<!--Make sure the form has the autocomplete function switched off:-->\n<form \n  autocomplete=\"off\" action=\"/action_page.php\">\n<div class=\"autocomplete\" \n  style=\"width:300px;\">\n<input id=\"myInput\" type=\"text\" name=\"myCountry\" \n  placeholder=\"Country\">\n</div>\n# TODO: Complete this line\n</form>",
      "solution": "<!--Make sure the form has the autocomplete function switched off:-->\n<form \n  autocomplete=\"off\" action=\"/action_page.php\">\n<div class=\"autocomplete\" \n  style=\"width:300px;\">\n<input id=\"myInput\" type=\"text\" name=\"myCountry\" \n  placeholder=\"Country\">\n</div>\n<input type=\"submit\">\n</form>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "var countries = [\"Afghanistan\",\"Albania\",\"Algeria\",\"Andorra\",\"Angola\",\"Anguilla\",\"Antigua \n  &amp; \n  Barbuda\",\"Argentina\",\"Armenia\",\"Aruba\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahamas\",\"Bahrain\",\"Bangladesh\",\"Barbados\",\"Belarus\",\"Belgium\",\"Belize\",\"Benin\",\"Bermuda\",\"Bhutan\",\"Bolivia\",\"Bosnia \n  &amp; Herzegovina\",\"Botswana\",\"Brazil\",\"British Virgin \n  Islands\",\"Brunei\",\"Bulgaria\",\"Burkina \n  Faso\",\"Burundi\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Cape Verde\",\"Cayman Islands\",\"Central \n# TODO: Complete this line\n  Islands\",\"Costa Rica\",\"Cote D Ivoire\",\"Croatia\",\"Cuba\",\"Curacao\",\"Cyprus\",\"Czech \n  Republic\",\"Denmark\",\"Djibouti\",\"Dominica\",\"Dominican \n  Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Equatorial \n  Guinea\",\"Eritrea\",\"Estonia\",\"Ethiopia\",\"Falkland Islands\",\"Faroe \n  Islands\",\"Fiji\",\"Finland\",\"France\",\"French Polynesia\",\"French West \n  Indies\",\"Gabon\",\"Gambia\",\"Georgia\",\"Germany\",\"Ghana\",\"Gibraltar\",\"Greece\",\"Greenland\",\"Grenada\",\"Guam\",\"Guatemala\",\"Guernsey\",\"Guinea\",\"Guinea \n  Bissau\",\"Guyana\",\"Haiti\",\"Honduras\",\"Hong \n  Kong\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran\",\"Iraq\",\"Ireland\",\"Isle of \n  Man\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jersey\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kiribati\",\"Kosovo\",\"Kuwait\",\"Kyrgyzstan\",\"Laos\",\"Latvia\",\"Lebanon\",\"Lesotho\",\"Liberia\",\"Libya\",\"Liechtenstein\",\"Lithuania\",\"Luxembourg\",\"Macau\",\"Macedonia\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Marshall \n  Islands\",\"Mauritania\",\"Mauritius\",\"Mexico\",\"Micronesia\",\"Moldova\",\"Monaco\",\"Mongolia\",\"Montenegro\",\"Montserrat\",\"Morocco\",\"Mozambique\",\"Myanmar\",\"Namibia\",\"Nauro\",\"Nepal\",\"Netherlands\",\"Netherlands \n  Antilles\",\"New Caledonia\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"North \n  Korea\",\"Norway\",\"Oman\",\"Pakistan\",\"Palau\",\"Palestine\",\"Panama\",\"Papua New \n  Guinea\",\"Paraguay\",\"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Puerto \n  Rico\",\"Qatar\",\"Reunion\",\"Romania\",\"Russia\",\"Rwanda\",\"Saint Pierre &amp; \n  Miquelon\",\"Samoa\",\"San Marino\",\"Sao Tome and Principe\",\"Saudi \n  Arabia\",\"Senegal\",\"Serbia\",\"Seychelles\",\"Sierra \n  Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"Solomon Islands\",\"Somalia\",\"South \n  Africa\",\"South Korea\",\"South Sudan\",\"Spain\",\"Sri Lanka\",\"St Kitts &amp; \n  Nevis\",\"St Lucia\",\"St \n  Vincent\",\"Sudan\",\"Suriname\",\"Swaziland\",\"Sweden\",\"Switzerland\",\"Syria\",\"Taiwan\",\"Tajikistan\",\"Tanzania\",\"Thailand\",\"Timor \n  L'Este\",\"Togo\",\"Tonga\",\"Trinidad &amp; \n  Tobago\",\"Tunisia\",\"Turkey\",\"Turkmenistan\",\"Turks &amp; \n  Caicos\",\"Tuvalu\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\"United \n  Kingdom\",\"United States of America\",\"Uruguay\",\"Uzbekistan\",\"Vanuatu\",\"Vatican \n  City\",\"Venezuela\",\"Vietnam\",\"Virgin Islands (US)\",\"Yemen\",\"Zambia\",\"Zimbabwe\"];",
      "solution": "var countries = [\"Afghanistan\",\"Albania\",\"Algeria\",\"Andorra\",\"Angola\",\"Anguilla\",\"Antigua \n  &amp; \n  Barbuda\",\"Argentina\",\"Armenia\",\"Aruba\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahamas\",\"Bahrain\",\"Bangladesh\",\"Barbados\",\"Belarus\",\"Belgium\",\"Belize\",\"Benin\",\"Bermuda\",\"Bhutan\",\"Bolivia\",\"Bosnia \n  &amp; Herzegovina\",\"Botswana\",\"Brazil\",\"British Virgin \n  Islands\",\"Brunei\",\"Bulgaria\",\"Burkina \n  Faso\",\"Burundi\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Cape Verde\",\"Cayman Islands\",\"Central \n  Arfrican Republic\",\"Chad\",\"Chile\",\"China\",\"Colombia\",\"Congo\",\"Cook \n  Islands\",\"Costa Rica\",\"Cote D Ivoire\",\"Croatia\",\"Cuba\",\"Curacao\",\"Cyprus\",\"Czech \n  Republic\",\"Denmark\",\"Djibouti\",\"Dominica\",\"Dominican \n  Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Equatorial \n  Guinea\",\"Eritrea\",\"Estonia\",\"Ethiopia\",\"Falkland Islands\",\"Faroe \n  Islands\",\"Fiji\",\"Finland\",\"France\",\"French Polynesia\",\"French West \n  Indies\",\"Gabon\",\"Gambia\",\"Georgia\",\"Germany\",\"Ghana\",\"Gibraltar\",\"Greece\",\"Greenland\",\"Grenada\",\"Guam\",\"Guatemala\",\"Guernsey\",\"Guinea\",\"Guinea \n  Bissau\",\"Guyana\",\"Haiti\",\"Honduras\",\"Hong \n  Kong\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran\",\"Iraq\",\"Ireland\",\"Isle of \n  Man\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jersey\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kiribati\",\"Kosovo\",\"Kuwait\",\"Kyrgyzstan\",\"Laos\",\"Latvia\",\"Lebanon\",\"Lesotho\",\"Liberia\",\"Libya\",\"Liechtenstein\",\"Lithuania\",\"Luxembourg\",\"Macau\",\"Macedonia\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Marshall \n  Islands\",\"Mauritania\",\"Mauritius\",\"Mexico\",\"Micronesia\",\"Moldova\",\"Monaco\",\"Mongolia\",\"Montenegro\",\"Montserrat\",\"Morocco\",\"Mozambique\",\"Myanmar\",\"Namibia\",\"Nauro\",\"Nepal\",\"Netherlands\",\"Netherlands \n  Antilles\",\"New Caledonia\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"North \n  Korea\",\"Norway\",\"Oman\",\"Pakistan\",\"Palau\",\"Palestine\",\"Panama\",\"Papua New \n  Guinea\",\"Paraguay\",\"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Puerto \n  Rico\",\"Qatar\",\"Reunion\",\"Romania\",\"Russia\",\"Rwanda\",\"Saint Pierre &amp; \n  Miquelon\",\"Samoa\",\"San Marino\",\"Sao Tome and Principe\",\"Saudi \n  Arabia\",\"Senegal\",\"Serbia\",\"Seychelles\",\"Sierra \n  Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"Solomon Islands\",\"Somalia\",\"South \n  Africa\",\"South Korea\",\"South Sudan\",\"Spain\",\"Sri Lanka\",\"St Kitts &amp; \n  Nevis\",\"St Lucia\",\"St \n  Vincent\",\"Sudan\",\"Suriname\",\"Swaziland\",\"Sweden\",\"Switzerland\",\"Syria\",\"Taiwan\",\"Tajikistan\",\"Tanzania\",\"Thailand\",\"Timor \n  L'Este\",\"Togo\",\"Tonga\",\"Trinidad &amp; \n  Tobago\",\"Tunisia\",\"Turkey\",\"Turkmenistan\",\"Turks &amp; \n  Caicos\",\"Tuvalu\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\"United \n  Kingdom\",\"United States of America\",\"Uruguay\",\"Uzbekistan\",\"Vanuatu\",\"Vatican \n  City\",\"Venezuela\",\"Vietnam\",\"Virgin Islands (US)\",\"Yemen\",\"Zambia\",\"Zimbabwe\"];"
    }
  ],
  "related_topics": [
    {
      "id": "4d133d18-ead5-461c-bc5f-55e9c22583a3",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "c601b958-875e-4e3a-9f41-a8a3e2a02a65",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "2d2a39c9-6b7a-4893-936b-f30aaf885164",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is If the \n  arrow DOWN key?",
      "options": [
        "pressed",
        "None of the above.",
        "None of the above.",
        "pressed"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of If the \n  arrow DOWN key is 'pressed'."
    },
    {
      "question": "What is If the arrow UP key?",
      "options": [
        "pressed",
        "None of the above.",
        "None of the above.",
        "pressed"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of If the arrow UP key is 'pressed'."
    }
  ],
  "summary": "This tutorial covers How TO - Autocomplete concepts and techniques. You'll learn how to use How TO - Autocomplete effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of How TO - Autocomplete and how to apply it in your projects."
}