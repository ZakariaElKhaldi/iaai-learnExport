{
  "id": "20391273-86fb-4192-8d42-5b61142b5d70",
  "title": "How TO - Sort Numeric Array",
  "slug": "how-to-sort-numeric-array",
  "metadata": {
    "description": "Learn about How TO - Sort Numeric Array with clear explanations and practical examples.",
    "keywords": [
      "c",
      "sort",
      "array",
      "points",
      "numerically",
      "javascript",
      "example",
      "const",
      "function",
      "return",
      "arrays"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnHow To",
    "subcategory": "JS Sort Numeric Array"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "How TO - Sort Numeric Array",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Learn how to sort an array numerically in JavaScript.\nSort an Array Numerically\nYou can use the folllowing to sort an array numerically:\nExample\nconst points = [40, 100, 1, 5, 25, 10];\npoints.sort(function(a, b){return a \n  - b});\n\nYou can also sort the array descending:\nExample\nconst points = [40, 100, 1, 5, 25, 10];\npoints.sort(function(a, b){return b \n  - a});\n\nRead more about how to sort arrays in our\nJavaScript Sorting Arrays Tutorial\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "const points = [40, 100, 1, 5, 25, 10];\npoints.sort(function(a, b){return a \n  - b});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "const points = [40, 100, 1, 5, 25, 10];\npoints.sort(function(a, b){return b \n  - a});",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "const points = [40, 100, 1, 5, 25, 10];\npoints.sort(function(a, b){return a \n# TODO: Complete this line",
      "solution": "const points = [40, 100, 1, 5, 25, 10];\npoints.sort(function(a, b){return a \n  - b});"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "const points = [40, 100, 1, 5, 25, 10];\n# TODO: Complete this line\n  - a});",
      "solution": "const points = [40, 100, 1, 5, 25, 10];\npoints.sort(function(a, b){return b \n  - a});"
    }
  ],
  "related_topics": [
    {
      "id": "fc4c7c73-a18e-4195-85a9-1cd4201b637e",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "b4120145-2b4d-4d7b-a877-4983a992fa01",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "43d77141-9906-42fc-bf13-7dce673ac9fc",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers How TO - Sort Numeric Array concepts and techniques. You'll learn how to use How TO - Sort Numeric Array effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of How TO - Sort Numeric Array and how to apply it in your projects."
}