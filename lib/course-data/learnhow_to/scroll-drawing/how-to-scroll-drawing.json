{
  "id": "e6cb00b0-9390-4ffb-9c04-16fc536c3cdb",
  "title": "How TO - Scroll Drawing",
  "slug": "how-to-scroll-drawing",
  "metadata": {
    "description": "Learn about How TO - Scroll Drawing with clear explanations and practical examples.",
    "keywords": [
      "c",
      "triangle",
      "scroll",
      "length",
      "draw",
      "document",
      "drawing",
      "path",
      "using",
      "style",
      "documentelement"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnHow To",
    "subcategory": "Scroll Drawing"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "How TO - Scroll Drawing",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Learn how to draw on scroll using JavaScript and SVG.\n\nScroll Drawing\nUsing SVG and JavaScript to draw a triangle on scroll - note that it has to be a \n<path> element:\nExample\n<svg id=\"mySVG\">\n<path fill=\"none\" stroke=\"red\" stroke-width=\"3\" \nid=\"triangle\" d=\"M150 0 L75 200 L225 200 Z\"/>\n</svg>\n<script>\n// Get the id of the \n<path> element and the length of <path>\nvar triangle = \ndocument.getElementById(\"triangle\");\nvar length = triangle.getTotalLength();\n// The start position of the drawing\ntriangle.style.strokeDasharray = \nlength;\n// Hide the triangle by offsetting dash. Remove this line to \nshow the triangle before scroll draw\ntriangle.style.strokeDashoffset = \nlength;\n// Find scroll percentage on scroll (using cross-browser \nproperties), and offset dash same amount as percentage scrolled\nwindow.addEventListener(\"scroll\", myFunction);\nfunction myFunction() \n{\nvar scrollpercent = (document.body.scrollTop + \ndocument.documentElement.scrollTop) / (document.documentElement.scrollHeight \n- document.documentElement.clientHeight);\nvar draw = length * \nscrollpercent;\n// Reverse the drawing (when scrolling upwards)\ntriangle.style.strokeDashoffset = length - draw;\n}\n</script>\n\nTip:\nLearn more about SVG in our SVG Tutorial\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<svg id=\"mySVG\">\n<path fill=\"none\" stroke=\"red\" stroke-width=\"3\" \nid=\"triangle\" d=\"M150 0 L75 200 L225 200 Z\"/>\n</svg>\n<script>\n// Get the id of the \n<path> element and the length of <path>\nvar triangle = \ndocument.getElementById(\"triangle\");\nvar length = triangle.getTotalLength();\n// The start position of the drawing\ntriangle.style.strokeDasharray = \nlength;\n// Hide the triangle by offsetting dash. Remove this line to \nshow the triangle before scroll draw\ntriangle.style.strokeDashoffset = \nlength;\n// Find scroll percentage on scroll (using cross-browser \nproperties), and offset dash same amount as percentage scrolled\nwindow.addEventListener(\"scroll\", myFunction);\nfunction myFunction() \n{\nvar scrollpercent = (document.body.scrollTop + \ndocument.documentElement.scrollTop) / (document.documentElement.scrollHeight \n- document.documentElement.clientHeight);\nvar draw = length * \nscrollpercent;\n// Reverse the drawing (when scrolling upwards)\ntriangle.style.strokeDashoffset = length - draw;\n}\n</script>",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<svg id=\"mySVG\">\n# TODO: Complete this line\nid=\"triangle\" d=\"M150 0 L75 200 L225 200 Z\"/>\n</svg>\n<script>\n// Get the id of the \n<path> element and the length of <path>\nvar triangle = \ndocument.getElementById(\"triangle\");\nvar length = triangle.getTotalLength();\n// The start position of the drawing\ntriangle.style.strokeDasharray = \nlength;\n// Hide the triangle by offsetting dash. Remove this line to \nshow the triangle before scroll draw\ntriangle.style.strokeDashoffset = \nlength;\n// Find scroll percentage on scroll (using cross-browser \nproperties), and offset dash same amount as percentage scrolled\nwindow.addEventListener(\"scroll\", myFunction);\nfunction myFunction() \n{\nvar scrollpercent = (document.body.scrollTop + \ndocument.documentElement.scrollTop) / (document.documentElement.scrollHeight \n- document.documentElement.clientHeight);\nvar draw = length * \nscrollpercent;\n// Reverse the drawing (when scrolling upwards)\ntriangle.style.strokeDashoffset = length - draw;\n}\n</script>",
      "solution": "<svg id=\"mySVG\">\n<path fill=\"none\" stroke=\"red\" stroke-width=\"3\" \nid=\"triangle\" d=\"M150 0 L75 200 L225 200 Z\"/>\n</svg>\n<script>\n// Get the id of the \n<path> element and the length of <path>\nvar triangle = \ndocument.getElementById(\"triangle\");\nvar length = triangle.getTotalLength();\n// The start position of the drawing\ntriangle.style.strokeDasharray = \nlength;\n// Hide the triangle by offsetting dash. Remove this line to \nshow the triangle before scroll draw\ntriangle.style.strokeDashoffset = \nlength;\n// Find scroll percentage on scroll (using cross-browser \nproperties), and offset dash same amount as percentage scrolled\nwindow.addEventListener(\"scroll\", myFunction);\nfunction myFunction() \n{\nvar scrollpercent = (document.body.scrollTop + \ndocument.documentElement.scrollTop) / (document.documentElement.scrollHeight \n- document.documentElement.clientHeight);\nvar draw = length * \nscrollpercent;\n// Reverse the drawing (when scrolling upwards)\ntriangle.style.strokeDashoffset = length - draw;\n}\n</script>"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "cb209bda-339e-40e6-a624-eb999e32af95",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "1eaff5c0-4ca9-44a2-b374-3da8b1c61a45",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "dae3fefe-1f8d-4738-99eb-5cf1e2bf071c",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers How TO - Scroll Drawing concepts and techniques. You'll learn how to use How TO - Scroll Drawing effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of How TO - Scroll Drawing and how to apply it in your projects."
}