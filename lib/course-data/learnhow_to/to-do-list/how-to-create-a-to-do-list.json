{
  "id": "3dcf8a47-85ce-4207-a45a-c26653e2f751",
  "title": "How TO - Create a To Do List",
  "slug": "how-to-create-a-to-do-list",
  "metadata": {
    "description": "Learn about How TO - Create a To Do List with clear explanations and practical examples.",
    "keywords": [
      "c",
      "list",
      "close",
      "span",
      "document",
      "color",
      "background",
      "style",
      "padding",
      "border",
      "none"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnHow To",
    "subcategory": "To Do List"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "How TO - Create a To Do List",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Learn how to create a \"to-do list\" with CSS and JavaScript.\nThe To Do List\nUse CSS and JavaScript to create a \"to-do list\" to organize and prioritize your tasks.\n\nCreate The To Do List\nStep 1) Add HTML:\nExample\n<div id=\"myDIV\" class=\"header\">\n<h2>My To Do List</h2>\n<input type=\"text\" id=\"myInput\" placeholder=\"Title...\">\n<span \nonclick=\"newElement()\" class=\"addBtn\">Add</span>\n</div>\n<ul id=\"myUL\">\n<li>Hit \nthe gym</li>\n<li class=\"checked\">Pay bills</li>\n<li>Meet George</li>\n<li>Buy eggs</li>\n<li>Read a \nbook</li>\n<li>Organize office</li>\n</ul>\nStep 2) Add CSS:\nStyle the header and the list:\nExample\n/* Include the padding and border in an element's total width and height */\n* {\nbox-sizing: border-box;\n}\n/* Remove margins and padding from the list */\nul {\nmargin: 0;\npadding: 0;\n}\n/* Style the list \nitems */\nul li {\ncursor: pointer;\nposition: relative;\npadding: 12px 8px 12px 40px;\nbackground: #eee;\nfont-size: 18px;\ntransition: 0.2s;\n/* \nmake the list items unselectable */\n-webkit-user-select: none;\n-moz-user-select: none;\n-ms-user-select: none;\nuser-select: none;\n}\n/* Set all odd list items to a different \ncolor (zebra-stripes) */\nul \nli:nth-child(odd) {\nbackground: #f9f9f9;\n}\n/* Darker background-color on hover */\nul li:hover {\nbackground: #ddd;\n}\n/* When \nclicked on, add a background color and strike out text */\nul \nli.checked {\nbackground: #888;\ncolor: #fff;\ntext-decoration: line-through;\n}\n/* Add a \"checked\" mark when clicked on */\nul li.checked::before {\ncontent: '';\nposition: absolute;\nborder-color: #fff;\nborder-style: solid;\nborder-width: 0 2px 2px 0;\ntop: 10px;\nleft: 16px;\ntransform: rotate(45deg);\nheight: 15px;\nwidth: 7px;\n}\n/* Style the close button */\n.close {\nposition: absolute;\nright: 0;\ntop: 0;\npadding: 12px 16px 12px 16px;\n}\n.close:hover {\nbackground-color: #f44336;\ncolor: white;\n}\n/* Style the header */\n.header {\nbackground-color: #f44336;\npadding: 30px 40px;\ncolor: white;\ntext-align: center;\n}\n/* Clear floats after the header */\n.header:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n/* Style the input */\ninput {\nmargin: 0;\nborder: none;\nborder-radius: 0;\nwidth: 75%;\npadding: 10px;\nfloat: left;\nfont-size: 16px;\n}\n/* Style the \"Add\" button */\n.addBtn {\npadding: 10px;\nwidth: 25%;\nbackground: #d9d9d9;\ncolor: #555;\nfloat: left;\ntext-align: center;\nfont-size: 16px;\ncursor: pointer;\ntransition: 0.3s;\nborder-radius: 0;\n}\n.addBtn:hover {\nbackground-color: #bbb;\n}\nStep 3) Add JavaScript:\nExample\n// Create a \"close\" button and append it to each list item\nvar myNodelist = document.getElementsByTagName(\"LI\");\nvar i;\nfor (i = \n0; i < myNodelist.length; i++) {\nvar span = document.createElement(\"SPAN\");\nvar txt = document.createTextNode(\"\\u00D7\");\nspan.className = \"close\";\nspan.appendChild(txt);\nmyNodelist[i].appendChild(span);\n}\n// Click on a close button to hide the current list item\nvar \nclose = document.getElementsByClassName(\"close\");\nvar i;\nfor (i = \n0; i < close.length; i++) {\nclose[i].onclick = function() {\nvar div = \nthis.parentElement;\ndiv.style.display = \"none\";\n}\n}\n// Add a \"checked\" symbol when clicking on a list item\nvar list \n= document.querySelector('ul');\nlist.addEventListener('click', function(ev) \n{\nif (ev.target.tagName === 'LI') {\nev.target.classList.toggle('checked');\n}\n}, false);\n// Create a new list item when clicking on the \"Add\" \nbutton\nfunction newElement() {\nvar li = \ndocument.createElement(\"li\");\nvar inputValue = document.getElementById(\"myInput\").value;\nvar t = document.createTextNode(inputValue);\nli.appendChild(t);\nif (inputValue \n=== '') {\nalert(\"You must write something!\");\n} else {\ndocument.getElementById(\"myUL\").appendChild(li);\n}\ndocument.getElementById(\"myInput\").value = \"\";\nvar span = \ndocument.createElement(\"SPAN\");\nvar txt = document.createTextNode(\"\\u00D7\");\nspan.className = \"close\";\nspan.appendChild(txt);\nli.appendChild(span);\nfor (i = 0; i < close.length; i++) {\nclose[i].onclick = function() {\nvar div = this.parentElement;\ndiv.style.display = \"none\";\n}\n}\n}\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<div id=\"myDIV\" class=\"header\">\n<h2>My To Do List</h2>\n<input type=\"text\" id=\"myInput\" placeholder=\"Title...\">\n<span \nonclick=\"newElement()\" class=\"addBtn\">Add</span>\n</div>\n<ul id=\"myUL\">\n<li>Hit \nthe gym</li>\n<li class=\"checked\">Pay bills</li>\n<li>Meet George</li>\n<li>Buy eggs</li>\n<li>Read a \nbook</li>\n<li>Organize office</li>\n</ul>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "/* Include the padding and border in an element's total width and height */\n* {\nbox-sizing: border-box;\n}\n/* Remove margins and padding from the list */\nul {\nmargin: 0;\npadding: 0;\n}\n/* Style the list \nitems */\nul li {\ncursor: pointer;\nposition: relative;\npadding: 12px 8px 12px 40px;\nbackground: #eee;\nfont-size: 18px;\ntransition: 0.2s;\n/* \nmake the list items unselectable */\n-webkit-user-select: none;\n-moz-user-select: none;\n-ms-user-select: none;\nuser-select: none;\n}\n/* Set all odd list items to a different \ncolor (zebra-stripes) */\nul \nli:nth-child(odd) {\nbackground: #f9f9f9;\n}\n/* Darker background-color on hover */\nul li:hover {\nbackground: #ddd;\n}\n/* When \nclicked on, add a background color and strike out text */\nul \nli.checked {\nbackground: #888;\ncolor: #fff;\ntext-decoration: line-through;\n}\n/* Add a \"checked\" mark when clicked on */\nul li.checked::before {\ncontent: '';\nposition: absolute;\nborder-color: #fff;\nborder-style: solid;\nborder-width: 0 2px 2px 0;\ntop: 10px;\nleft: 16px;\ntransform: rotate(45deg);\nheight: 15px;\nwidth: 7px;\n}\n/* Style the close button */\n.close {\nposition: absolute;\nright: 0;\ntop: 0;\npadding: 12px 16px 12px 16px;\n}\n.close:hover {\nbackground-color: #f44336;\ncolor: white;\n}\n/* Style the header */\n.header {\nbackground-color: #f44336;\npadding: 30px 40px;\ncolor: white;\ntext-align: center;\n}\n/* Clear floats after the header */\n.header:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n/* Style the input */\ninput {\nmargin: 0;\nborder: none;\nborder-radius: 0;\nwidth: 75%;\npadding: 10px;\nfloat: left;\nfont-size: 16px;\n}\n/* Style the \"Add\" button */\n.addBtn {\npadding: 10px;\nwidth: 25%;\nbackground: #d9d9d9;\ncolor: #555;\nfloat: left;\ntext-align: center;\nfont-size: 16px;\ncursor: pointer;\ntransition: 0.3s;\nborder-radius: 0;\n}\n.addBtn:hover {\nbackground-color: #bbb;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "// Create a \"close\" button and append it to each list item\nvar myNodelist = document.getElementsByTagName(\"LI\");\nvar i;\nfor (i = \n0; i < myNodelist.length; i++) {\nvar span = document.createElement(\"SPAN\");\nvar txt = document.createTextNode(\"\\u00D7\");\nspan.className = \"close\";\nspan.appendChild(txt);\nmyNodelist[i].appendChild(span);\n}\n// Click on a close button to hide the current list item\nvar \nclose = document.getElementsByClassName(\"close\");\nvar i;\nfor (i = \n0; i < close.length; i++) {\nclose[i].onclick = function() {\nvar div = \nthis.parentElement;\ndiv.style.display = \"none\";\n}\n}\n// Add a \"checked\" symbol when clicking on a list item\nvar list \n= document.querySelector('ul');\nlist.addEventListener('click', function(ev) \n{\nif (ev.target.tagName === 'LI') {\nev.target.classList.toggle('checked');\n}\n}, false);\n// Create a new list item when clicking on the \"Add\" \nbutton\nfunction newElement() {\nvar li = \ndocument.createElement(\"li\");\nvar inputValue = document.getElementById(\"myInput\").value;\nvar t = document.createTextNode(inputValue);\nli.appendChild(t);\nif (inputValue \n=== '') {\nalert(\"You must write something!\");\n} else {\ndocument.getElementById(\"myUL\").appendChild(li);\n}\ndocument.getElementById(\"myInput\").value = \"\";\nvar span = \ndocument.createElement(\"SPAN\");\nvar txt = document.createTextNode(\"\\u00D7\");\nspan.className = \"close\";\nspan.appendChild(txt);\nli.appendChild(span);\nfor (i = 0; i < close.length; i++) {\nclose[i].onclick = function() {\nvar div = this.parentElement;\ndiv.style.display = \"none\";\n}\n}\n}",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<div id=\"myDIV\" class=\"header\">\n<h2>My To Do List</h2>\n<input type=\"text\" id=\"myInput\" placeholder=\"Title...\">\n<span \nonclick=\"newElement()\" class=\"addBtn\">Add</span>\n</div>\n<ul id=\"myUL\">\n<li>Hit \n# TODO: Complete this line\n<li class=\"checked\">Pay bills</li>\n<li>Meet George</li>\n<li>Buy eggs</li>\n<li>Read a \nbook</li>\n<li>Organize office</li>\n</ul>",
      "solution": "<div id=\"myDIV\" class=\"header\">\n<h2>My To Do List</h2>\n<input type=\"text\" id=\"myInput\" placeholder=\"Title...\">\n<span \nonclick=\"newElement()\" class=\"addBtn\">Add</span>\n</div>\n<ul id=\"myUL\">\n<li>Hit \nthe gym</li>\n<li class=\"checked\">Pay bills</li>\n<li>Meet George</li>\n<li>Buy eggs</li>\n<li>Read a \nbook</li>\n<li>Organize office</li>\n</ul>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "/* Include the padding and border in an element's total width and height */\n* {\nbox-sizing: border-box;\n}\n/* Remove margins and padding from the list */\nul {\nmargin: 0;\npadding: 0;\n}\n/* Style the list \nitems */\nul li {\ncursor: pointer;\nposition: relative;\npadding: 12px 8px 12px 40px;\nbackground: #eee;\nfont-size: 18px;\ntransition: 0.2s;\n/* \nmake the list items unselectable */\n-webkit-user-select: none;\n-moz-user-select: none;\n-ms-user-select: none;\nuser-select: none;\n}\n/* Set all odd list items to a different \ncolor (zebra-stripes) */\nul \nli:nth-child(odd) {\nbackground: #f9f9f9;\n}\n/* Darker background-color on hover */\nul li:hover {\nbackground: #ddd;\n}\n# TODO: Complete this line\nclicked on, add a background color and strike out text */\nul \nli.checked {\nbackground: #888;\ncolor: #fff;\ntext-decoration: line-through;\n}\n/* Add a \"checked\" mark when clicked on */\nul li.checked::before {\ncontent: '';\nposition: absolute;\nborder-color: #fff;\nborder-style: solid;\nborder-width: 0 2px 2px 0;\ntop: 10px;\nleft: 16px;\ntransform: rotate(45deg);\nheight: 15px;\nwidth: 7px;\n}\n/* Style the close button */\n.close {\nposition: absolute;\nright: 0;\ntop: 0;\npadding: 12px 16px 12px 16px;\n}\n.close:hover {\nbackground-color: #f44336;\ncolor: white;\n}\n/* Style the header */\n.header {\nbackground-color: #f44336;\npadding: 30px 40px;\ncolor: white;\ntext-align: center;\n}\n/* Clear floats after the header */\n.header:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n/* Style the input */\ninput {\nmargin: 0;\nborder: none;\nborder-radius: 0;\nwidth: 75%;\npadding: 10px;\nfloat: left;\nfont-size: 16px;\n}\n/* Style the \"Add\" button */\n.addBtn {\npadding: 10px;\nwidth: 25%;\nbackground: #d9d9d9;\ncolor: #555;\nfloat: left;\ntext-align: center;\nfont-size: 16px;\ncursor: pointer;\ntransition: 0.3s;\nborder-radius: 0;\n}\n.addBtn:hover {\nbackground-color: #bbb;\n}",
      "solution": "/* Include the padding and border in an element's total width and height */\n* {\nbox-sizing: border-box;\n}\n/* Remove margins and padding from the list */\nul {\nmargin: 0;\npadding: 0;\n}\n/* Style the list \nitems */\nul li {\ncursor: pointer;\nposition: relative;\npadding: 12px 8px 12px 40px;\nbackground: #eee;\nfont-size: 18px;\ntransition: 0.2s;\n/* \nmake the list items unselectable */\n-webkit-user-select: none;\n-moz-user-select: none;\n-ms-user-select: none;\nuser-select: none;\n}\n/* Set all odd list items to a different \ncolor (zebra-stripes) */\nul \nli:nth-child(odd) {\nbackground: #f9f9f9;\n}\n/* Darker background-color on hover */\nul li:hover {\nbackground: #ddd;\n}\n/* When \nclicked on, add a background color and strike out text */\nul \nli.checked {\nbackground: #888;\ncolor: #fff;\ntext-decoration: line-through;\n}\n/* Add a \"checked\" mark when clicked on */\nul li.checked::before {\ncontent: '';\nposition: absolute;\nborder-color: #fff;\nborder-style: solid;\nborder-width: 0 2px 2px 0;\ntop: 10px;\nleft: 16px;\ntransform: rotate(45deg);\nheight: 15px;\nwidth: 7px;\n}\n/* Style the close button */\n.close {\nposition: absolute;\nright: 0;\ntop: 0;\npadding: 12px 16px 12px 16px;\n}\n.close:hover {\nbackground-color: #f44336;\ncolor: white;\n}\n/* Style the header */\n.header {\nbackground-color: #f44336;\npadding: 30px 40px;\ncolor: white;\ntext-align: center;\n}\n/* Clear floats after the header */\n.header:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n/* Style the input */\ninput {\nmargin: 0;\nborder: none;\nborder-radius: 0;\nwidth: 75%;\npadding: 10px;\nfloat: left;\nfont-size: 16px;\n}\n/* Style the \"Add\" button */\n.addBtn {\npadding: 10px;\nwidth: 25%;\nbackground: #d9d9d9;\ncolor: #555;\nfloat: left;\ntext-align: center;\nfont-size: 16px;\ncursor: pointer;\ntransition: 0.3s;\nborder-radius: 0;\n}\n.addBtn:hover {\nbackground-color: #bbb;\n}"
    }
  ],
  "related_topics": [
    {
      "id": "9f4293ec-b42f-41ca-b468-4e68ddb75231",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "5dfe6b64-d11d-4f0b-9ebd-5bb9c323dbae",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "415a0f9b-c79f-442d-8cad-58fcc0bf81f2",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers How TO - Create a To Do List concepts and techniques. You'll learn how to use How TO - Create a To Do List effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of How TO - Create a To Do List and how to apply it in your projects."
}