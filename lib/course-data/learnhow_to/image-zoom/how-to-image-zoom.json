{
  "id": "43391b9a-911b-4312-8083-e132a0aa058f",
  "title": "How TO - Image Zoom",
  "slug": "how-to-image-zoom",
  "metadata": {
    "description": "Learn about How TO - Image Zoom with clear explanations and practical examples.",
    "keywords": [
      "lens",
      "zoom",
      "result",
      "image",
      "width",
      "height",
      "offsetwidth",
      "offsetheight",
      "style",
      "movelens"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnHow To",
    "subcategory": "Image Zoom"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "How TO - Image Zoom",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Learn how to create an image zoom.\nImage Zoom\nMouse over the image:\nZoom Preview:\n\nCreate an Image Zoom\nStep 1) Add HTML:\nExample\n<div class=\"img-zoom-container\">\n<img \n  id=\"myimage\" src=\"img_girl.jpg\" width=\"300\" height=\"240\" \n  alt=\"Girl\">\n<div \n  id=\"myresult\" class=\"img-zoom-result\"></div>\n</div>\nStep 2) Add CSS:\nThe container must have a \"relative\" positioning.\nExample\n* {box-sizing: border-box;}\n.img-zoom-container {\nposition: relative;\n}\n.img-zoom-lens {\nposition: absolute;\nborder: 1px solid \n  #d4d4d4;\n/*set the size of the lens:*/\nwidth: 40px;\nheight: 40px;\n}\n.img-zoom-result \n  {\nborder: 1px solid #d4d4d4;\n/*set the size of the result \n  div:*/\nwidth: 300px;\nheight: 300px;\n}\nStep 3) Add JavaScript:\nExample\nfunction imageZoom(imgID, resultID) {\nvar img, lens, result, cx, cy;\nimg = document.getElementById(imgID);\nresult = \n  document.getElementById(resultID);\n/* Create lens: */\nlens = \n  document.createElement(\"DIV\");\nlens.setAttribute(\"class\", \"img-zoom-lens\");\n/* Insert lens: */\nimg.parentElement.insertBefore(lens, img);\n/* Calculate the ratio between result DIV and lens: */\ncx = \n  result.offsetWidth / lens.offsetWidth;\ncy = result.offsetHeight / \n  lens.offsetHeight;\n/* Set background properties for the result DIV */\nresult.style.backgroundImage = \"url('\" + img.src + \"')\";\nresult.style.backgroundSize = (img.width * cx) + \"px \" + (img.height * cy) + \"px\";\n/* Execute a function when someone moves the cursor over the image, or the \n  lens: */\nlens.addEventListener(\"mousemove\", moveLens);\nimg.addEventListener(\"mousemove\", moveLens);\n/* And also for touch screens: */\nlens.addEventListener(\"touchmove\", moveLens);\nimg.addEventListener(\"touchmove\", moveLens);\nfunction moveLens(e) {\nvar pos, x, y;\n/* Prevent any other actions that may \n  occur when moving over the image */\ne.preventDefault();\n/* \n  Get the cursor's x and y positions: */\npos = getCursorPos(e);\n/* Calculate the position of the \n  lens: */\nx = pos.x - (lens.offsetWidth / 2);\ny = pos.y - (lens.offsetHeight / 2);\n/* Prevent the lens \n  from being positioned outside the image: */\nif (x > \n  img.width - lens.offsetWidth) {x = img.width - lens.offsetWidth;}\nif (x < 0) {x = 0;}\nif (y > img.height - \n  lens.offsetHeight) {y = img.height - lens.offsetHeight;}\nif (y < 0) {y = 0;}\n/* Set the position of the lens: */\nlens.style.left = x + \"px\";\nlens.style.top = y + \"px\";\n/* Display what the lens \"sees\": */\nresult.style.backgroundPosition = \"-\" + (x * cx) + \"px -\" + (y * cy) + \"px\";\n}\nfunction getCursorPos(e) {\nvar a, x = 0, y = \n  0;\ne = e || window.event;\n/* Get \n  the x and y positions of the image: */\na = \n  img.getBoundingClientRect();\n/* Calculate the cursor's x \n  and y coordinates, relative to the image: */\nx = e.pageX \n  - a.left;\ny = e.pageY - a.top;\n/* Consider any page scrolling: */\nx = x - \n  window.pageXOffset;\ny = y - window.pageYOffset;\nreturn {x : x, y : y};\n}\n}\nStep 4) Initiate the Zoom Effect:\nExample\n<script>\nimageZoom(\"myimage\", \"myresult\");\n</script>\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<div class=\"img-zoom-container\">\n<img \n  id=\"myimage\" src=\"img_girl.jpg\" width=\"300\" height=\"240\" \n  alt=\"Girl\">\n<div \n  id=\"myresult\" class=\"img-zoom-result\"></div>\n</div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "* {box-sizing: border-box;}\n.img-zoom-container {\nposition: relative;\n}\n.img-zoom-lens {\nposition: absolute;\nborder: 1px solid \n  #d4d4d4;\n/*set the size of the lens:*/\nwidth: 40px;\nheight: 40px;\n}\n.img-zoom-result \n  {\nborder: 1px solid #d4d4d4;\n/*set the size of the result \n  div:*/\nwidth: 300px;\nheight: 300px;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "function imageZoom(imgID, resultID) {\nvar img, lens, result, cx, cy;\nimg = document.getElementById(imgID);\nresult = \n  document.getElementById(resultID);\n/* Create lens: */\nlens = \n  document.createElement(\"DIV\");\nlens.setAttribute(\"class\", \"img-zoom-lens\");\n/* Insert lens: */\nimg.parentElement.insertBefore(lens, img);\n/* Calculate the ratio between result DIV and lens: */\ncx = \n  result.offsetWidth / lens.offsetWidth;\ncy = result.offsetHeight / \n  lens.offsetHeight;\n/* Set background properties for the result DIV */\nresult.style.backgroundImage = \"url('\" + img.src + \"')\";\nresult.style.backgroundSize = (img.width * cx) + \"px \" + (img.height * cy) + \"px\";\n/* Execute a function when someone moves the cursor over the image, or the \n  lens: */\nlens.addEventListener(\"mousemove\", moveLens);\nimg.addEventListener(\"mousemove\", moveLens);\n/* And also for touch screens: */\nlens.addEventListener(\"touchmove\", moveLens);\nimg.addEventListener(\"touchmove\", moveLens);\nfunction moveLens(e) {\nvar pos, x, y;\n/* Prevent any other actions that may \n  occur when moving over the image */\ne.preventDefault();\n/* \n  Get the cursor's x and y positions: */\npos = getCursorPos(e);\n/* Calculate the position of the \n  lens: */\nx = pos.x - (lens.offsetWidth / 2);\ny = pos.y - (lens.offsetHeight / 2);\n/* Prevent the lens \n  from being positioned outside the image: */\nif (x > \n  img.width - lens.offsetWidth) {x = img.width - lens.offsetWidth;}\nif (x < 0) {x = 0;}\nif (y > img.height - \n  lens.offsetHeight) {y = img.height - lens.offsetHeight;}\nif (y < 0) {y = 0;}\n/* Set the position of the lens: */\nlens.style.left = x + \"px\";\nlens.style.top = y + \"px\";\n/* Display what the lens \"sees\": */\nresult.style.backgroundPosition = \"-\" + (x * cx) + \"px -\" + (y * cy) + \"px\";\n}\nfunction getCursorPos(e) {\nvar a, x = 0, y = \n  0;\ne = e || window.event;\n/* Get \n  the x and y positions of the image: */\na = \n  img.getBoundingClientRect();\n/* Calculate the cursor's x \n  and y coordinates, relative to the image: */\nx = e.pageX \n  - a.left;\ny = e.pageY - a.top;\n/* Consider any page scrolling: */\nx = x - \n  window.pageXOffset;\ny = y - window.pageYOffset;\nreturn {x : x, y : y};\n}\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<script>\nimageZoom(\"myimage\", \"myresult\");\n</script>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<div class=\"img-zoom-container\">\n<img \n# TODO: Complete this line\n  alt=\"Girl\">\n<div \n  id=\"myresult\" class=\"img-zoom-result\"></div>\n</div>",
      "solution": "<div class=\"img-zoom-container\">\n<img \n  id=\"myimage\" src=\"img_girl.jpg\" width=\"300\" height=\"240\" \n  alt=\"Girl\">\n<div \n  id=\"myresult\" class=\"img-zoom-result\"></div>\n</div>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "* {box-sizing: border-box;}\n.img-zoom-container {\nposition: relative;\n}\n.img-zoom-lens {\nposition: absolute;\nborder: 1px solid \n  #d4d4d4;\n/*set the size of the lens:*/\nwidth: 40px;\nheight: 40px;\n}\n# TODO: Complete this line\n  {\nborder: 1px solid #d4d4d4;\n/*set the size of the result \n  div:*/\nwidth: 300px;\nheight: 300px;\n}",
      "solution": "* {box-sizing: border-box;}\n.img-zoom-container {\nposition: relative;\n}\n.img-zoom-lens {\nposition: absolute;\nborder: 1px solid \n  #d4d4d4;\n/*set the size of the lens:*/\nwidth: 40px;\nheight: 40px;\n}\n.img-zoom-result \n  {\nborder: 1px solid #d4d4d4;\n/*set the size of the result \n  div:*/\nwidth: 300px;\nheight: 300px;\n}"
    }
  ],
  "related_topics": [
    {
      "id": "03fdcce0-62d3-4a4e-b16c-f5252741a650",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "75b6d9bc-b2c6-4037-ad6a-89d001dace20",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "4c377283-940c-4a62-9ebc-768c7fee743b",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers How TO - Image Zoom concepts and techniques. You'll learn how to use How TO - Image Zoom effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of How TO - Image Zoom and how to apply it in your projects."
}