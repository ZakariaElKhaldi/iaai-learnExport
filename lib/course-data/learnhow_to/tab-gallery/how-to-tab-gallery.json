{
  "id": "fc0b6d4b-0064-457e-a98f-2bfe7c1058ec",
  "title": "How TO - Tab Gallery",
  "slug": "how-to-tab-gallery",
  "metadata": {
    "description": "Learn about How TO - Tab Gallery with clear explanations and practical examples.",
    "keywords": [
      "image",
      "column",
      "class",
      "container",
      "columns",
      "onclick",
      "myfunction",
      "style",
      "text",
      "imgtext"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnHow To",
    "subcategory": "Tab Gallery"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "How TO - Tab Gallery",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Learn how to create a tabbed image gallery with CSS and JavaScript.\nTab Gallery\nClick on an image to expand it:\n\u00d7\nNature\n\u00d7\nSnow\n\u00d7\nMountains\n\u00d7\nNorthern Lights\n\nCreate a Tab Gallery\nStep 1) Add HTML:\nExample\n<!-- The grid: four columns -->\n<div class=\"row\">\n<div \n  class=\"column\">\n<img src=\"img_nature.jpg\" alt=\"Nature\" \n  onclick=\"myFunction(this);\">\n</div>\n<div class=\"column\">\n<img src=\"img_snow.jpg\" alt=\"Snow\" onclick=\"myFunction(this);\">\n</div>\n<div class=\"column\">\n<img src=\"img_mountains.jpg\" \n  alt=\"Mountains\" onclick=\"myFunction(this);\">\n</div>\n<div class=\"column\">\n<img src=\"img_lights.jpg\" \n  alt=\"Lights\" onclick=\"myFunction(this);\">\n</div>\n</div>\n<!-- The expanding \n  image container -->\n<div class=\"container\">\n<!-- Close the \n  image -->\n<span onclick=\"this.parentElement.style.display='none'\" \n  class=\"closebtn\">&times;</span>\n<!-- Expanded image -->\n<img id=\"expandedImg\" style=\"width:100%\">\n<!-- Image text -->\n<div id=\"imgtext\"></div>\n</div>\nUse images to expand the specific image. The image that is clicked on inside \nthe column, is shown in a container below the columns.\nStep 2) Add CSS:\nCreate four columns and style the images:\nExample\n/* The grid: Four equal columns that floats \n.column {\nfloat: left;\nwidth: 25%;\npadding: \n  10px;\n}\n/* Style the \n  images inside the grid */\n.column img {\nopacity: 0.8;\ncursor: pointer;\n}\n.column img:hover {\nopacity: 1;\n}\n/* Clear \n  floats after the columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n/* The expanding image \n  container (positioning is needed to position the close button and the text) */\n.container {\nposition: relative;\ndisplay: none;\n}\n/* Expanding image text */\n#imgtext {\nposition: absolute;\nbottom: 15px;\nleft: 15px;\ncolor: \n  white;\nfont-size: 20px;\n}\n/* Closable button inside the image */\n.closebtn \n  {\nposition: absolute;\ntop: 10px;\nright: 15px;\ncolor: white;\nfont-size: 35px;\ncursor: pointer;\n}\nStep 3) Add JavaScript:\nExample\nfunction myFunction(imgs) {\n// Get the expanded image\nvar \n  expandImg = document.getElementById(\"expandedImg\");\n// Get the image \n  text\nvar imgText = document.getElementById(\"imgtext\");\n// \n  Use the same src in the expanded image as the image being clicked on from the \n  grid\nexpandImg.src = imgs.src;\n// Use the value of the alt \n  attribute of the clickable image as text inside the expanded image\nimgText.innerHTML = imgs.alt;\n// Show the container element (hidden with \n  CSS)\nexpandImg.parentElement.style.display = \"block\";\n}\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<!-- The grid: four columns -->\n<div class=\"row\">\n<div \n  class=\"column\">\n<img src=\"img_nature.jpg\" alt=\"Nature\" \n  onclick=\"myFunction(this);\">\n</div>\n<div class=\"column\">\n<img src=\"img_snow.jpg\" alt=\"Snow\" onclick=\"myFunction(this);\">\n</div>\n<div class=\"column\">\n<img src=\"img_mountains.jpg\" \n  alt=\"Mountains\" onclick=\"myFunction(this);\">\n</div>\n<div class=\"column\">\n<img src=\"img_lights.jpg\" \n  alt=\"Lights\" onclick=\"myFunction(this);\">\n</div>\n</div>\n<!-- The expanding \n  image container -->\n<div class=\"container\">\n<!-- Close the \n  image -->\n<span onclick=\"this.parentElement.style.display='none'\" \n  class=\"closebtn\">&times;</span>\n<!-- Expanded image -->\n<img id=\"expandedImg\" style=\"width:100%\">\n<!-- Image text -->\n<div id=\"imgtext\"></div>\n</div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "/* The grid: Four equal columns that floats next to each other */\n.column {\nfloat: left;\nwidth: 25%;\npadding: \n  10px;\n}\n/* Style the \n  images inside the grid */\n.column img {\nopacity: 0.8;\ncursor: pointer;\n}\n.column img:hover {\nopacity: 1;\n}\n/* Clear \n  floats after the columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n/* The expanding image \n  container (positioning is needed to position the close button and the text) */\n.container {\nposition: relative;\ndisplay: none;\n}\n/* Expanding image text */\n#imgtext {\nposition: absolute;\nbottom: 15px;\nleft: 15px;\ncolor: \n  white;\nfont-size: 20px;\n}\n/* Closable button inside the image */\n.closebtn \n  {\nposition: absolute;\ntop: 10px;\nright: 15px;\ncolor: white;\nfont-size: 35px;\ncursor: pointer;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "function myFunction(imgs) {\n// Get the expanded image\nvar \n  expandImg = document.getElementById(\"expandedImg\");\n// Get the image \n  text\nvar imgText = document.getElementById(\"imgtext\");\n// \n  Use the same src in the expanded image as the image being clicked on from the \n  grid\nexpandImg.src = imgs.src;\n// Use the value of the alt \n  attribute of the clickable image as text inside the expanded image\nimgText.innerHTML = imgs.alt;\n// Show the container element (hidden with \n  CSS)\nexpandImg.parentElement.style.display = \"block\";\n}",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<!-- The grid: four columns -->\n<div class=\"row\">\n<div \n  class=\"column\">\n<img src=\"img_nature.jpg\" alt=\"Nature\" \n  onclick=\"myFunction(this);\">\n</div>\n<div class=\"column\">\n<img src=\"img_snow.jpg\" alt=\"Snow\" onclick=\"myFunction(this);\">\n</div>\n<div class=\"column\">\n<img src=\"img_mountains.jpg\" \n  alt=\"Mountains\" onclick=\"myFunction(this);\">\n</div>\n# TODO: Complete this line\n<img src=\"img_lights.jpg\" \n  alt=\"Lights\" onclick=\"myFunction(this);\">\n</div>\n</div>\n<!-- The expanding \n  image container -->\n<div class=\"container\">\n<!-- Close the \n  image -->\n<span onclick=\"this.parentElement.style.display='none'\" \n  class=\"closebtn\">&times;</span>\n<!-- Expanded image -->\n<img id=\"expandedImg\" style=\"width:100%\">\n<!-- Image text -->\n<div id=\"imgtext\"></div>\n</div>",
      "solution": "<!-- The grid: four columns -->\n<div class=\"row\">\n<div \n  class=\"column\">\n<img src=\"img_nature.jpg\" alt=\"Nature\" \n  onclick=\"myFunction(this);\">\n</div>\n<div class=\"column\">\n<img src=\"img_snow.jpg\" alt=\"Snow\" onclick=\"myFunction(this);\">\n</div>\n<div class=\"column\">\n<img src=\"img_mountains.jpg\" \n  alt=\"Mountains\" onclick=\"myFunction(this);\">\n</div>\n<div class=\"column\">\n<img src=\"img_lights.jpg\" \n  alt=\"Lights\" onclick=\"myFunction(this);\">\n</div>\n</div>\n<!-- The expanding \n  image container -->\n<div class=\"container\">\n<!-- Close the \n  image -->\n<span onclick=\"this.parentElement.style.display='none'\" \n  class=\"closebtn\">&times;</span>\n<!-- Expanded image -->\n<img id=\"expandedImg\" style=\"width:100%\">\n<!-- Image text -->\n<div id=\"imgtext\"></div>\n</div>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "/* The grid: Four equal columns that floats next to each other */\n.column {\nfloat: left;\nwidth: 25%;\npadding: \n  10px;\n}\n/* Style the \n  images inside the grid */\n.column img {\nopacity: 0.8;\ncursor: pointer;\n}\n.column img:hover {\nopacity: 1;\n}\n/* Clear \n  floats after the columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n/* The expanding image \n  container (positioning is needed to position the close button and the text) */\n.container {\nposition: relative;\ndisplay: none;\n}\n/* Expanding image text */\n#imgtext {\nposition: absolute;\nbottom: 15px;\nleft: 15px;\ncolor: \n  white;\nfont-size: 20px;\n}\n/* Closable button inside the image */\n.closebtn \n  {\nposition: absolute;\ntop: 10px;\nright: 15px;\ncolor: white;\n# TODO: Complete this line\ncursor: pointer;\n}",
      "solution": "/* The grid: Four equal columns that floats next to each other */\n.column {\nfloat: left;\nwidth: 25%;\npadding: \n  10px;\n}\n/* Style the \n  images inside the grid */\n.column img {\nopacity: 0.8;\ncursor: pointer;\n}\n.column img:hover {\nopacity: 1;\n}\n/* Clear \n  floats after the columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n/* The expanding image \n  container (positioning is needed to position the close button and the text) */\n.container {\nposition: relative;\ndisplay: none;\n}\n/* Expanding image text */\n#imgtext {\nposition: absolute;\nbottom: 15px;\nleft: 15px;\ncolor: \n  white;\nfont-size: 20px;\n}\n/* Closable button inside the image */\n.closebtn \n  {\nposition: absolute;\ntop: 10px;\nright: 15px;\ncolor: white;\nfont-size: 35px;\ncursor: pointer;\n}"
    }
  ],
  "related_topics": [
    {
      "id": "5484bdb2-6df2-4813-b7e5-681e013e6d07",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "42053b10-8c66-4a75-9e0f-34e710f52b79",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "ecd77a67-6ff9-4a40-bcf5-2589871cff26",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The image that?",
      "options": [
        "None of the above.",
        "needed to position the close button and the text) */",
        "None of the above.",
        "clicked on inside \nthe column"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of The image that is 'clicked on inside \nthe column'."
    },
    {
      "question": "What is positioning?",
      "options": [
        "clicked on inside \nthe column",
        "None of the above.",
        "needed to position the close button and the text) */",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of positioning is 'needed to position the close button and the text) */'."
    }
  ],
  "summary": "This tutorial covers How TO - Tab Gallery concepts and techniques. You'll learn how to use How TO - Tab Gallery effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of How TO - Tab Gallery and how to apply it in your projects."
}