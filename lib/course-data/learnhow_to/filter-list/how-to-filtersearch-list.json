{
  "id": "90a06fa6-592b-480d-afff-529222be3a30",
  "title": "How TO - Filter/Search List",
  "slug": "how-to-filtersearch-list",
  "metadata": {
    "description": "Learn about How TO - Filter/Search List with clear explanations and practical examples.",
    "keywords": [
      "c",
      "list",
      "search",
      "href",
      "filter",
      "input",
      "background",
      "myul",
      "padding",
      "color",
      "text"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnHow To",
    "subcategory": "Filter List"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "How TO - Filter/Search List",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Learn how to create a filter list with JavaScript.\nFilter List\nHow to use JavaScript to search for items in a list.\nAdele\nAgnes\nBilly\nBob\nCalvin\nChristina\nCindy\n\nCreate A Search List\nStep 1) Add HTML:\nExample\n<input type=\"text\" id=\"myInput\" onkeyup=\"myFunction()\" placeholder=\"Search \nfor names..\">\n<ul id=\"myUL\">\n<li><a href=\"#\">Adele</a></li>\n<li><a href=\"#\">Agnes</a></li>\n<li><a href=\"#\">Billy</a></li>\n<li><a href=\"#\">Bob</a></li>\n<li><a href=\"#\">Calvin</a></li>\n<li><a href=\"#\">Christina</a></li>\n<li><a href=\"#\">Cindy</a></li>\n</ul>\nNote:\nWe use href=\"#\" in this demo since we do not have a \npage to link it to. In real life this should be a real URL to a specific page.\nStep 2) Add CSS:\nStyle the input element and the list:\nExample\n#myInput {\nbackground-image: url('/css/searchicon.png'); \n/* Add a search icon to input */\nbackground-position: \n10px 12px; /* Position the search icon */\nbackground-repeat: no-repeat; /* Do not repeat the icon image */\nwidth: 100%; /* Full-width */\nfont-size: 16px; /* \nIncrease font-size */\npadding: 12px 20px 12px 40px; /* \nAdd some padding */\nborder: 1px solid #ddd; /* Add a \ngrey border */\nmargin-bottom: 12px; /* Add some space \nbelow the input */\n}\n#myUL {\n/* Remove default list styling */\nlist-style-type: \nnone;\npadding: 0;\nmargin: 0;\n}\n#myUL li a {\nborder: 1px solid #ddd; /* Add a border to all links */\nmargin-top: -1px; /* Prevent double borders */\nbackground-color: #f6f6f6; /* Grey background color */\npadding: 12px; /* Add some padding */\ntext-decoration: \nnone; /* Remove default text underline */\nfont-size: \n18px; /* Increase the font-size */\ncolor: black; /* \nAdd a black text color */\ndisplay: block; /* Make it \ninto a block element to fill the whole list */\n}\n#myUL \nli a:hover:not(.header) {\nbackground-color: #eee; /* \nAdd a hover effect to all links, except for headers */\n}\nStep 3) Add JavaScript:\nExample\n<script>\nfunction myFunction() {\n// Declare variables\nvar input, filter, \nul, li, a, i, txtValue;\ninput = document.getElementById('myInput');\nfilter = input.value.toUpperCase();\nul = \ndocument.getElementById(\"myUL\");\nli = \nul.getElementsByTagName('li');\n// Loop through all \nlist items, and hide those who don't match the search query\nfor (i = 0; i < \nli.length; i++) {\na = li[i].getElementsByTagName(\"a\")[0];\ntxtValue = a.textContent || a.innerText;\nif (txtValue.toUpperCase().indexOf(filter) > -1) {\nli[i].style.display = \"\";\n} \nelse {\nli[i].style.display = \"none\";\n}\n}\n}\n</script>\n\nTip:\nRemove\ntoUpperCase()\nif you want to perform a case-sensitive search.\nTip:\nAlso check out\nFilter Table\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<input type=\"text\" id=\"myInput\" onkeyup=\"myFunction()\" placeholder=\"Search \nfor names..\">\n<ul id=\"myUL\">\n<li><a href=\"#\">Adele</a></li>\n<li><a href=\"#\">Agnes</a></li>\n<li><a href=\"#\">Billy</a></li>\n<li><a href=\"#\">Bob</a></li>\n<li><a href=\"#\">Calvin</a></li>\n<li><a href=\"#\">Christina</a></li>\n<li><a href=\"#\">Cindy</a></li>\n</ul>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "#myInput {\nbackground-image: url('/css/searchicon.png'); \n/* Add a search icon to input */\nbackground-position: \n10px 12px; /* Position the search icon */\nbackground-repeat: no-repeat; /* Do not repeat the icon image */\nwidth: 100%; /* Full-width */\nfont-size: 16px; /* \nIncrease font-size */\npadding: 12px 20px 12px 40px; /* \nAdd some padding */\nborder: 1px solid #ddd; /* Add a \ngrey border */\nmargin-bottom: 12px; /* Add some space \nbelow the input */\n}\n#myUL {\n/* Remove default list styling */\nlist-style-type: \nnone;\npadding: 0;\nmargin: 0;\n}\n#myUL li a {\nborder: 1px solid #ddd; /* Add a border to all links */\nmargin-top: -1px; /* Prevent double borders */\nbackground-color: #f6f6f6; /* Grey background color */\npadding: 12px; /* Add some padding */\ntext-decoration: \nnone; /* Remove default text underline */\nfont-size: \n18px; /* Increase the font-size */\ncolor: black; /* \nAdd a black text color */\ndisplay: block; /* Make it \ninto a block element to fill the whole list */\n}\n#myUL \nli a:hover:not(.header) {\nbackground-color: #eee; /* \nAdd a hover effect to all links, except for headers */\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<script>\nfunction myFunction() {\n// Declare variables\nvar input, filter, \nul, li, a, i, txtValue;\ninput = document.getElementById('myInput');\nfilter = input.value.toUpperCase();\nul = \ndocument.getElementById(\"myUL\");\nli = \nul.getElementsByTagName('li');\n// Loop through all \nlist items, and hide those who don't match the search query\nfor (i = 0; i < \nli.length; i++) {\na = li[i].getElementsByTagName(\"a\")[0];\ntxtValue = a.textContent || a.innerText;\nif (txtValue.toUpperCase().indexOf(filter) > -1) {\nli[i].style.display = \"\";\n} \nelse {\nli[i].style.display = \"none\";\n}\n}\n}\n</script>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<input type=\"text\" id=\"myInput\" onkeyup=\"myFunction()\" placeholder=\"Search \nfor names..\">\n<ul id=\"myUL\">\n# TODO: Complete this line\n<li><a href=\"#\">Agnes</a></li>\n<li><a href=\"#\">Billy</a></li>\n<li><a href=\"#\">Bob</a></li>\n<li><a href=\"#\">Calvin</a></li>\n<li><a href=\"#\">Christina</a></li>\n<li><a href=\"#\">Cindy</a></li>\n</ul>",
      "solution": "<input type=\"text\" id=\"myInput\" onkeyup=\"myFunction()\" placeholder=\"Search \nfor names..\">\n<ul id=\"myUL\">\n<li><a href=\"#\">Adele</a></li>\n<li><a href=\"#\">Agnes</a></li>\n<li><a href=\"#\">Billy</a></li>\n<li><a href=\"#\">Bob</a></li>\n<li><a href=\"#\">Calvin</a></li>\n<li><a href=\"#\">Christina</a></li>\n<li><a href=\"#\">Cindy</a></li>\n</ul>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "#myInput {\nbackground-image: url('/css/searchicon.png'); \n/* Add a search icon to input */\nbackground-position: \n10px 12px; /* Position the search icon */\nbackground-repeat: no-repeat; /* Do not repeat the icon image */\nwidth: 100%; /* Full-width */\nfont-size: 16px; /* \nIncrease font-size */\npadding: 12px 20px 12px 40px; /* \nAdd some padding */\nborder: 1px solid #ddd; /* Add a \ngrey border */\nmargin-bottom: 12px; /* Add some space \nbelow the input */\n}\n# TODO: Complete this line\n/* Remove default list styling */\nlist-style-type: \nnone;\npadding: 0;\nmargin: 0;\n}\n#myUL li a {\nborder: 1px solid #ddd; /* Add a border to all links */\nmargin-top: -1px; /* Prevent double borders */\nbackground-color: #f6f6f6; /* Grey background color */\npadding: 12px; /* Add some padding */\ntext-decoration: \nnone; /* Remove default text underline */\nfont-size: \n18px; /* Increase the font-size */\ncolor: black; /* \nAdd a black text color */\ndisplay: block; /* Make it \ninto a block element to fill the whole list */\n}\n#myUL \nli a:hover:not(.header) {\nbackground-color: #eee; /* \nAdd a hover effect to all links, except for headers */\n}",
      "solution": "#myInput {\nbackground-image: url('/css/searchicon.png'); \n/* Add a search icon to input */\nbackground-position: \n10px 12px; /* Position the search icon */\nbackground-repeat: no-repeat; /* Do not repeat the icon image */\nwidth: 100%; /* Full-width */\nfont-size: 16px; /* \nIncrease font-size */\npadding: 12px 20px 12px 40px; /* \nAdd some padding */\nborder: 1px solid #ddd; /* Add a \ngrey border */\nmargin-bottom: 12px; /* Add some space \nbelow the input */\n}\n#myUL {\n/* Remove default list styling */\nlist-style-type: \nnone;\npadding: 0;\nmargin: 0;\n}\n#myUL li a {\nborder: 1px solid #ddd; /* Add a border to all links */\nmargin-top: -1px; /* Prevent double borders */\nbackground-color: #f6f6f6; /* Grey background color */\npadding: 12px; /* Add some padding */\ntext-decoration: \nnone; /* Remove default text underline */\nfont-size: \n18px; /* Increase the font-size */\ncolor: black; /* \nAdd a black text color */\ndisplay: block; /* Make it \ninto a block element to fill the whole list */\n}\n#myUL \nli a:hover:not(.header) {\nbackground-color: #eee; /* \nAdd a hover effect to all links, except for headers */\n}"
    }
  ],
  "related_topics": [
    {
      "id": "a61baaf2-1476-48a5-98c4-010b29db4579",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "d5f50bf9-0d63-40fd-9c32-4d7bce1178aa",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "01b98e06-0cdb-4f95-a9aa-7063e0310fce",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers How TO - Filter/Search List concepts and techniques. You'll learn how to use How TO - Filter/Search List effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of How TO - Filter/Search List and how to apply it in your projects."
}