{
  "id": "3050d552-ab18-4929-98bd-f6761f978bfa",
  "title": "MongoDB Query Operators",
  "slug": "mongodb-query-operators",
  "metadata": {
    "description": "Learn about MongoDB Query Operators with clear explanations and practical examples.",
    "keywords": [
      "value",
      "operators",
      "documents",
      "query",
      "queries",
      "values",
      "equal",
      "another",
      "returns",
      "match"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Go Basics"
    ],
    "estimated_time": 5,
    "category": "LearnMongoDB",
    "subcategory": "MongoDBQuery Operators"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "MongoDB Query Operators",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "MongoDB Query Operators\nThere are many query operators that can be used to compare and reference document fields.\nComparison\nThe following operators can be used in queries to compare values:\n$eq\n: Values are equal\n$ne\n: Values are not equal\n$gt\n: Value is greater than another value\n$gte\n: Value is greater than or equal to another value\n$lt\n: Value is less than another value\n$lte\n: Value is less than or equal to another value\n$in\n: Value is matched within an array\nLogical\nThe following operators can logically compare multiple queries.\n$and\n: Returns documents where both queries match\n$or\n: Returns documents where either query matches\n$nor\n: Returns documents where both queries fail to match\n$not\n: Returns documents where the query does not match\nEvaluation\nThe following operators assist in evaluating documents.\n$regex\n: Allows the use of regular expressions when evaluating field values\n$text\n: Performs a text search\n$where\n: Uses a JavaScript expression to match documents\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "e7256d49-d526-48c3-91bd-057445f90138",
      "title": "Go Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "9f543f6b-d521-4b48-be78-30477b17d5ae",
      "title": "Go Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "53b10d5d-362a-4ab5-8eff-7ffdc1c5dc1f",
      "title": "Go Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is MongoDB Query Operators\n\nMongoDB Query Operators\nThere?",
      "options": [
        "equal\n$ne\n: Values are not equal\n$gt\n: Value is greater than another value\n$gte\n: Value is greater than or equal to another value\n$lt\n: Value is less than another value\n$lte\n: Value is less than or equal to another value\n$in\n: Value is matched within an array\nLogical\nThe following operators can logically compare multiple queries",
        "many query operators that can be used to compare and reference document fields",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of MongoDB Query Operators\n\nMongoDB Query Operators\nThere is 'many query operators that can be used to compare and reference document fields'."
    },
    {
      "question": "What is Values?",
      "options": [
        "None of the above.",
        "many query operators that can be used to compare and reference document fields",
        "None of the above.",
        "equal\n$ne\n: Values are not equal\n$gt\n: Value is greater than another value\n$gte\n: Value is greater than or equal to another value\n$lt\n: Value is less than another value\n$lte\n: Value is less than or equal to another value\n$in\n: Value is matched within an array\nLogical\nThe following operators can logically compare multiple queries"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Values is 'equal\n$ne\n: Values are not equal\n$gt\n: Value is greater than another value\n$gte\n: Value is greater than or equal to another value\n$lt\n: Value is less than another value\n$lte\n: Value is less than or equal to another value\n$in\n: Value is matched within an array\nLogical\nThe following operators can logically compare multiple queries'."
    }
  ],
  "summary": "This tutorial covers MongoDB Query Operators concepts and techniques. You'll learn how to use MongoDB Query Operators effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of MongoDB Query Operators and how to apply it in your projects."
}