{
  "id": "b789af68-b925-4042-a550-a22e59b73ac7",
  "title": "MongoDB Aggregation$addFields",
  "slug": "mongodb-aggregationaddfields",
  "metadata": {
    "description": "Learn about MongoDB Aggregation$addFields with clear explanations and practical examples.",
    "keywords": [
      "aggregation",
      "addfields",
      "avggrade",
      "documents",
      "example",
      "restaurants",
      "grades",
      "score",
      "mongodb",
      "stage"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Go Basics"
    ],
    "estimated_time": 5,
    "category": "LearnMongoDB",
    "subcategory": "$addFields"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "MongoDB Aggregation\n$addFields",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Aggregation\n$addFields\nThis aggregation stage adds new fields to documents.\nExample\nIn this example, we are using the \"sample_restaurants\" database loaded from our sample data in the\nIntro to Aggregations\nsection.\ndb.restaurants.aggregate([\n  {\n    $addFields: {\n      avgGrade: { $avg: \"$grades.score\" }\n    }\n  },\n  {\n    $project: {\n      \"name\": 1,\n      \"avgGrade\": 1\n    }\n  },\n  {\n    $limit: 5\n  }\n])\n\nThis will return the documents along with a new field,\navgGrade\n,\nwhich will contain the average of each restaurants\ngrades.score\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "507303b4-ce41-4bd8-a3db-997da803bbb2",
      "title": "Go Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "68710430-1edb-4028-895e-ac9014592da7",
      "title": "Go Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "049e2147-ac4b-44f1-915b-485370b5cf4f",
      "title": "Go Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is we?",
      "options": [
        "None of the above.",
        "using the \"sample_restaurants\" database loaded from our sample data in the\nIntro to Aggregations\nsection",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of we is 'using the \"sample_restaurants\" database loaded from our sample data in the\nIntro to Aggregations\nsection'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers MongoDB Aggregation$addFields concepts and techniques. You'll learn how to use MongoDB Aggregation$addFields effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of MongoDB Aggregation$addFields and how to apply it in your projects."
}