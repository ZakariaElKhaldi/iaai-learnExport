{
  "id": "917e6f65-ff18-4f0a-9a5b-15f596487b8a",
  "title": "PHPprivateKeyword",
  "slug": "phpprivatekeyword",
  "metadata": {
    "description": "Learn about PHPprivateKeyword with clear explanations and practical examples.",
    "keywords": [
      "php",
      "private",
      "keyword",
      "number",
      "property",
      "public",
      "access",
      "outside",
      "code",
      "derived",
      "classes"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "Php Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "private"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nprivate\nKeyword",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nUse\nprivate\nto prevent outside code or derived classes from modifying a\nproperty:\n<?php\nclass MyClass {\nprivate $number = 0;\npublic function \n  add1() {\n$this->number++;\n}\npublic function getNumber() {\nreturn $this->number;\n}\n}\n$obj = new MyClass();\n$obj->add1();\necho \"The number is \" \n  . $obj->getNumber();\n?>\n\nDefinition and Usage\nThe\nprivate\nkeyword is an access modifier. It marks a property or method as private.\nPrivate properties and methods can only be used by the class in which the property or\nmethod was defined. Derived classes and outside code cannot use them.\nRelated Pages\nThe\nprotected\nkeyword\nThe\npublic\nkeyword\nLearn more about access modifiers in our\nPHP OOP - Access Modifiers Tutorial\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\nclass MyClass {\nprivate $number = 0;\npublic function \n  add1() {\n$this->number++;\n}\npublic function getNumber() {\nreturn $this->number;\n}\n}\n$obj = new MyClass();\n$obj->add1();\necho \"The number is \" \n  . $obj->getNumber();\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\nclass MyClass {\nprivate $number = 0;\npublic function \n  add1() {\n$this->number++;\n}\npublic function getNumber() {\n# TODO: Complete this line\n}\n}\n$obj = new MyClass();\n$obj->add1();\necho \"The number is \" \n  . $obj->getNumber();\n?>",
      "solution": "<?php\nclass MyClass {\nprivate $number = 0;\npublic function \n  add1() {\n$this->number++;\n}\npublic function getNumber() {\nreturn $this->number;\n}\n}\n$obj = new MyClass();\n$obj->add1();\necho \"The number is \" \n  . $obj->getNumber();\n?>"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "b063a3fb-2f3d-4f6f-ae02-3b3e750bfd7f",
      "title": "Php Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "d7a9e9f6-3f04-475c-b98f-ad199bf0bbae",
      "title": "Php Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "90246032-9228-4cbe-a944-5cb77a1124fb",
      "title": "Php Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The number?",
      "options": [
        "\"",
        "None of the above.",
        "None of the above.",
        "an access modifier"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of The number is '\"'."
    },
    {
      "question": "What is Definition and Usage\nThe\nprivate\nkeyword?",
      "options": [
        "None of the above.",
        "\"",
        "an access modifier",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Definition and Usage\nThe\nprivate\nkeyword is 'an access modifier'."
    }
  ],
  "summary": "This tutorial covers PHPprivateKeyword concepts and techniques. You'll learn how to use PHPprivateKeyword effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPprivateKeyword and how to apply it in your projects."
}