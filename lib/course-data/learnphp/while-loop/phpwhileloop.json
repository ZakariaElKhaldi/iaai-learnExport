{
  "id": "ce468c30-0a75-44e0-93d6-a88dfebb5a59",
  "title": "PHPwhileLoop",
  "slug": "phpwhileloop",
  "metadata": {
    "description": "Learn about PHPwhileLoop with clear explanations and practical examples.",
    "keywords": [
      "loop",
      "condition",
      "true",
      "example",
      "echo",
      "continue",
      "statement",
      "long",
      "stop",
      "iteration"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Php Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "While Loop"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nwhile\nLoop",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The\nwhile\nloop - Loops through \na block of code as long as the specified condition is true.\nThe PHP while Loop\nThe\nwhile\nloop executes a block of code as long as the specified condition is true.\nExample\nPrint\n$i\nas long as\n$i\nis less than 6:\n$i = 1;\nwhile ($i < 6) {\n  echo $i;\n  $i++;\n}\n\nNote:\nremember to increment\n$i\n, or else the loop will continue forever.\nThe\nwhile\nloop does not run a specific number of times, but \nchecks after each iteration if the condition is still true.\nThe condition does not have to be a counter, it could be the status of an operation\nor any condition that evaluates to either true or false.\nThe break Statement\nWith the\nbreak\nstatement we can stop the loop even if the condition is still true:\nExample\nStop the loop when\n$i\nis 3:\n$i = 1;\nwhile ($i < 6) {\n  if ($i == 3) break;\n  echo $i;\n  $i++;\n}\n\nThe continue Statement\nWith the\ncontinue\nstatement we can stop the current iteration, and continue with the \nExample\nStop, and jump to the \n$i\nis 3:\n$i = 0;\nwhile ($i < 6) {\n  $i++;\n  if ($i == 3) continue;\n  echo $i;\n}\n\nAlternative Syntax\nThe\nwhile\nloop syntax can also be written with the\nendwhile\nstatement like this\nExample\nPrint\n$i\nas long as\n$i\nis less than 6:\n$i = 1;\nwhile ($i < 6):\n  echo $i;\n  $i++;\nendwhile;\n\nStep 10\nIf you want the\nwhile\nloop\ncount to 100, but only by each 10, you can increase the counter by 10 instead 1 in each iteration:\nExample\nCount to 100 by tens:\n$i = 0;\nwhile ($i < 100) {\n  $i+=10;\n  echo $i \"<br>\";\n}\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "fda275c7-3dd1-4839-8e1f-a78116e3ab41",
      "title": "Php Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "48ad8f0c-ce0a-4a92-8901-27d721eea920",
      "title": "Php Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "6d18ef7e-d706-4c00-97fe-f32b1f0e7033",
      "title": "Php Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Loops through \na block of code as long as the specified condition?",
      "options": [
        "true",
        "None of the above.",
        "true",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of Loops through \na block of code as long as the specified condition is 'true'."
    },
    {
      "question": "What is The PHP while Loop\nThe\nwhile\nloop executes a block of code as long as the specified condition?",
      "options": [
        "None of the above.",
        "true",
        "true",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of The PHP while Loop\nThe\nwhile\nloop executes a block of code as long as the specified condition is 'true'."
    }
  ],
  "summary": "This tutorial covers PHPwhileLoop concepts and techniques. You'll learn how to use PHPwhileLoop effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPwhileLoop and how to apply it in your projects."
}