{
  "id": "06b897a0-d687-4229-8659-8e630fcc5432",
  "title": "PHP - $_REQUEST",
  "slug": "php-request",
  "metadata": {
    "description": "Learn about PHP - $_REQUEST with clear explanations and practical examples.",
    "keywords": [
      "html",
      "form",
      "name",
      "data",
      "body",
      "example",
      "file",
      "input",
      "echo",
      "post"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Php Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "$_REQUEST"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP - $_REQUEST",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "$_REQUEST\n$_REQUEST\nis a PHP super global variable which \ncontains submitted form data, and all cookie data.\nIn other words,\n$_REQUEST\nis an array \ncontaining data from\n$_GET\n,\n$_POST\n, and\n$_COOKIE\n.\nYou can access this data with the\n$_REQUEST\nkeyword followed by the name of the form field, or cookie, like this:\n$_REQUEST['firstname']\nUsing $_REQUEST on $_POST Requests\nPOST request are usually data submitted from an HTML form.\nHere is an example of how a HTML form could look like:\nHTML form\n<html>\n<body>\n\n<form method=\"post\" action=\"demo_request.php\">\n  Name: <input type=\"text\" name=\"fname\">\n  <input type=\"submit\">\n</form>\n\n</body>\n</html>\nWhen a user clicks the submit button, the form data is sent to a PHP file specified in the\naction\nattribute of the\n<form>\ntag.\nIn the action file we can use the\n$_REQUEST\nvariable\nto collect the value of the input field.\nPHP file\n$name = $_REQUEST['fname'];\necho $name;\nIn the example below we have put the HTML form and PHP code in the same PHP file.\nWe have also added some extra lines for security.\nExample\n<html>\n<body>\n\n<form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF'];?>\">\n  Name: <input type=\"text\" name=\"fname\">\n  <input type=\"submit\">\n</form>\n\n<?php\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n  $name = htmlspecialchars($_REQUEST['fname']);\n  if (empty($name)) {\n    echo \"Name is empty\";\n  } else {\n    echo $name;\n  }\n}\n?>\n\n</body>\n</html>\n\nUsing $_REQUEST on $_GET Requests\nGET request can be form submissions as in the example above, with the\nmethod\nattribute of the HTML\n<form>\nelement set to\nGET\n.\nGET requests can also be data from a query string (information added after a URL address).\nHere is an example of how an HTML hyperlink, with a query string could look like:\nHTML link\n<html>\n<body>\n\n<a href=\"demo_phpfile.php?subject=PHP&web=.com\">Test $GET</a>\n\n</body>\n</html>\nWhen a user clicks the link, the query string data is sent to\ndemo_phpfile.php\n.\nIn the PHP file we can use the\n$_REQUEST\nvariable\nto collect the value of the query string.\nExample\nThe PHP file\ndemo_phpfile.php\n:\n<html>\n<body>\n\n<?php\necho \"Study \" . $_REQUEST['subject'] . \" at \" . $_REQUEST['web'];\n?>\n\n</body>\n</html>\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "d10f678f-0a8f-4c4e-8434-c55afacf4b5f",
      "title": "Php Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "c208f370-8207-4b6d-8533-915f450a3299",
      "title": "Php Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "2591f5a2-4c30-44f3-ae91-b0ef7267d4c7",
      "title": "Php Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is REQUEST?",
      "options": [
        "None of the above.",
        "a PHP super global variable which \ncontains submitted form data",
        "an array \ncontaining data from\n$_GET",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of REQUEST is 'a PHP super global variable which \ncontains submitted form data'."
    },
    {
      "question": "What is REQUEST?",
      "options": [
        "an array \ncontaining data from\n$_GET",
        "a PHP super global variable which \ncontains submitted form data",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of REQUEST is 'an array \ncontaining data from\n$_GET'."
    }
  ],
  "summary": "This tutorial covers PHP - $_REQUEST concepts and techniques. You'll learn how to use PHP - $_REQUEST effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHP - $_REQUEST and how to apply it in your projects."
}