{
  "id": "89979523-82c5-4b9b-a1f0-6641f7234511",
  "title": "PHPstrtotime()Function",
  "slug": "phpstrtotimefunction",
  "metadata": {
    "description": "Learn about PHPstrtotime()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "strtotime",
      "echo",
      "time",
      "week",
      "timestamp",
      "relative",
      "format",
      "values",
      "dates",
      "returns"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "strtotime()"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nstrtotime()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nParse English textual datetimes into Unix timestamps:\n<?php\necho(strtotime(\"now\") . \"<br>\");\necho(strtotime(\"3 October 2005\") . \"<br>\");\necho(strtotime(\"+5 hours\") . \"<br>\");\necho(strtotime(\"+1 week\") . \"<br>\");\necho(strtotime(\"+1 week 3 days 7 hours 5 seconds\") . \"<br>\");\necho(strtotime(\"\necho(strtotime(\"last Sunday\"));\n?>\n\nDefinition and Usage\nThe strtotime() function parses an English textual datetime into a \nUnix timestamp (the number of seconds since January 1 1970 00:00:00 GMT).\nNote:\nIf the year is specified in a two-digit format,  values between 0-69 are mapped to 2000-2069\nand values between 70-100 are mapped to 1970-2000.\nNote:\nBe aware of dates in the m/d/y or d-m-y formats; if \nthe separator is a slash (/), then the American m/d/y is assumed. If the \nseparator is a dash (-) or a dot (.), then the European d-m-y format is assumed. \nTo avoid potential errors, you should YYYY-MM-DD dates or \ndate_create_from_format() when possible.\nSyntax\nstrtotime(\ntime, now);\nParameter Values\nParameter\nDescription\ntime\nRequired. Specifies a date/time string\nnow\nOptional. Specifies the timestamp used as a base for the calculation of relative dates\nTechnical Details\nReturn Value:\nReturns a timestamp on success. FALSE on failure\nPHP Version:\n4+\nPHP Changelog:\nPHP 5.3.0: Relative time formats such as this week, \n  now interprets a week period of Monday through Sunday, rather then a 7-day period relative to the current date/time\nPHP 5.3.0: Now 24:00 is a valid format\nPHP 5.2.7: In earlier versions, if requesting a given occurrence of a given weekday in a month where that weekday was the first day of the month it would incorrectly add one week to the returned timestamp. This has been corrected now\nPHP 5.1.0: Returns FALSE on failure (earlier versions returns -1), and issues E_STRICT and E_NOTICE time zone errors\nPHP 5.0.2: Now correctly computes \"now\" and other relative times from current time, not from today's midnight\nPHP 5.0.0: Allows microseconds (but they are ignored)\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\necho(strtotime(\"now\") . \"<br>\");\necho(strtotime(\"3 October 2005\") . \"<br>\");\necho(strtotime(\"+5 hours\") . \"<br>\");\necho(strtotime(\"+1 week\") . \"<br>\");\necho(strtotime(\"+1 week 3 days 7 hours 5 seconds\") . \"<br>\");\necho(strtotime(\"next Monday\") . \"<br>\");\necho(strtotime(\"last Sunday\"));\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\necho(strtotime(\"now\") . \"<br>\");\necho(strtotime(\"3 October 2005\") . \"<br>\");\n# TODO: Complete this line\necho(strtotime(\"+1 week\") . \"<br>\");\necho(strtotime(\"+1 week 3 days 7 hours 5 seconds\") . \"<br>\");\necho(strtotime(\"next Monday\") . \"<br>\");\necho(strtotime(\"last Sunday\"));\n?>",
      "solution": "<?php\necho(strtotime(\"now\") . \"<br>\");\necho(strtotime(\"3 October 2005\") . \"<br>\");\necho(strtotime(\"+5 hours\") . \"<br>\");\necho(strtotime(\"+1 week\") . \"<br>\");\necho(strtotime(\"+1 week 3 days 7 hours 5 seconds\") . \"<br>\");\necho(strtotime(\"next Monday\") . \"<br>\");\necho(strtotime(\"last Sunday\"));\n?>"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "c671a703-f42c-4717-8610-15e96056316c",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "b9ebfc99-abaf-47a2-961f-da9f1c4a4bd6",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "2f4e1607-dc63-457a-b344-5fa7c9709092",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is If the year?",
      "options": [
        "None of the above.",
        "None of the above.",
        "a slash (/)",
        "specified in a two-digit format"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of If the year is 'specified in a two-digit format'."
    },
    {
      "question": "What is if \nthe separator?",
      "options": [
        "None of the above.",
        "None of the above.",
        "a slash (/)",
        "specified in a two-digit format"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of if \nthe separator is 'a slash (/)'."
    }
  ],
  "summary": "This tutorial covers PHPstrtotime()Function concepts and techniques. You'll learn how to use PHPstrtotime()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPstrtotime()Function and how to apply it in your projects."
}