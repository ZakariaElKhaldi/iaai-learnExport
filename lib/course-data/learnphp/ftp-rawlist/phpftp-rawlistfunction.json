{
  "id": "36ad8052-8280-44b9-a9da-28fd5fee9fd8",
  "title": "PHPftp_rawlist()Function",
  "slug": "phpftp-rawlistfunction",
  "metadata": {
    "description": "Learn about PHPftp_rawlist()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "list",
      "recursive",
      "parameter",
      "function",
      "file",
      "server",
      "filelist",
      "string",
      "user",
      "group"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "ftp_rawlist()"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nftp_rawlist()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nGet list of files with file information:\n<?php\n// connect and login to FTP server\n$ftp_server = \"ftp.example.com\";\n$ftp_conn = ftp_connect($ftp_server) or die(\"Could not connect to $ftp_server\");\n$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);\n// get the file list for /\n$filelist = ftp_rawlist($ftp_conn, \"/\");\n// close connection\nftp_close($ftp_conn);\n// output $filelist\nvar_dump($filelist);\n?>\nThe output could look something like this:\narray(3)\n{\n[0] => string(57) \"drw-rw-rw- 1 user group 0 Jan 03 08:33 images\"\n[1] => string(62) \"-rw-rw-rw- 1 user group 160 Feb 16 13:54 php\"\n[2] => string(75) \"-rw-rw-rw- 1 user group 20 Feb 14 12:22 test\"\n}\nDefinition and Usage\nThe ftp_rawlist() function returns a list of files with file information \n(from a specified directory on the FTP server).\nSyntax\nftp_rawlist(\nftp_conn, dir, recursive\n);\nParameter Values\nParameter\nDescription\nftp_conn\nRequired. Specifies the FTP connection to use\ndir\nRequired. Specifies the directory path. May include arguments for the LIST command.\nTip:\nUse \".\" to specify the current directory\nrecursive\nOptional. By default, this function sends a \"LIST\" command to the server. However, if the recursive parameter is set to TRUE, it sends a \"LIST -R\" command\nTechnical Details\nReturn Value:\nAn array where each element corresponds to one line of text \n (no parsing is performed). Returns FALSE on failure\nPHP Version:\n4+\nPHP Changelog:\nThe\nrecursive\nparameter was added in PHP 4.3\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\n// connect and login to FTP server\n$ftp_server = \"ftp.example.com\";\n$ftp_conn = ftp_connect($ftp_server) or die(\"Could not connect to $ftp_server\");\n$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);\n// get the file list for /\n$filelist = ftp_rawlist($ftp_conn, \"/\");\n// close connection\nftp_close($ftp_conn);\n// output $filelist\nvar_dump($filelist);\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n// connect and login to FTP server\n$ftp_server = \"ftp.example.com\";\n$ftp_conn = ftp_connect($ftp_server) or die(\"Could not connect to $ftp_server\");\n$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);\n// get the file list for /\n$filelist = ftp_rawlist($ftp_conn, \"/\");\n// close connection\nftp_close($ftp_conn);\n// output $filelist\n# TODO: Complete this line\n?>",
      "solution": "<?php\n// connect and login to FTP server\n$ftp_server = \"ftp.example.com\";\n$ftp_conn = ftp_connect($ftp_server) or die(\"Could not connect to $ftp_server\");\n$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);\n// get the file list for /\n$filelist = ftp_rawlist($ftp_conn, \"/\");\n// close connection\nftp_close($ftp_conn);\n// output $filelist\nvar_dump($filelist);\n?>"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "48cdf604-539b-4cf4-bc41-4e34b085a175",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "3bc1bb50-38b0-4bed-ba75-a563e604df2a",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "6788875d-055b-4f47-9eb9-997fe73a7360",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is if the recursive parameter?",
      "options": [
        "set to TRUE",
        "None of the above.",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of if the recursive parameter is 'set to TRUE'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers PHPftp_rawlist()Function concepts and techniques. You'll learn how to use PHPftp_rawlist()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPftp_rawlist()Function and how to apply it in your projects."
}