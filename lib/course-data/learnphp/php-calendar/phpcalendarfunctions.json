{
  "id": "828c9b3c-7e54-4502-b2fb-63d4c393d154",
  "title": "PHPCalendarFunctions",
  "slug": "phpcalendarfunctions",
  "metadata": {
    "description": "Learn about PHPCalendarFunctions with clear explanations and practical examples.",
    "keywords": [
      "integer",
      "julian",
      "count",
      "calendar",
      "converts",
      "date",
      "returns",
      "specified",
      "functions",
      "days"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "PHP Calendar"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nCalendar\nFunctions",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "PHP Calendar Introduction\nThe calendar extension contains functions that simplifies converting between different calendar formats.\nIt is based on the Julian Day Count, which is a count of days starting from January 1st, 4713 B.C.\nNote:\nTo convert between calendar formats, you must first convert to Julian Day Count, then to the calendar of your choice.\nNote:\nThe Julian Day Count is not the same as the Julian Calendar!\nInstallation\nFor these functions to work, you have to compile PHP with \n--enable-calendar.\nThe Windows version of PHP has built-in support for this extension.\nPHP Calendar Functions\nFunction\nDescription\ncal_days_in_month()\nReturns the number of days in a month for a specified year and calendar\ncal_from_jd()\nConverts a Julian Day Count into a date of a specified calendar\ncal_info()\nReturns information about a specified calendar\ncal_to_jd()\nConverts a date in a specified calendar to Julian Day Count\neaster_date()\nReturns the Unix timestamp for midnight on Easter of a specified year\neaster_days()\nReturns the number of days after March 21, that the Easter Day is in a specified year\nfrenchtojd()\nConverts a French Republican date to a Julian Day Count\ngregoriantojd()\nConverts a Gregorian date to a Julian Day Count\njddayofweek()\nReturns the day of the week\njdmonthname()\nReturns a month name\njdtofrench()\nConverts a Julian Day Count to a French Republican date\njdtogregorian()\nConverts a Julian Day Count to a Gregorian date\njdtojewish()\nConverts a Julian Day Count to a Jewish date\njdtojulian()\nConverts a Julian Day Count to a Julian date\njdtounix()\nConverts Julian Day Count to Unix timestamp\njewishtojd()\nConverts a Jewish date to a Julian Day Count\njuliantojd()\nConverts a Julian date to a Julian Day Count\nunixtojd()\nConverts Unix timestamp to Julian Day Count\nPHP Predefined Calendar Constants\nConstant\nType\nPHP Version\nCAL_GREGORIAN\nInteger\nPHP 4\nCAL_JULIAN\nInteger\nPHP 4\nCAL_JEWISH\nInteger\nPHP 4\nCAL_FRENCH\nInteger\nPHP 4\nCAL_NUM_CALS\nInteger\nPHP 4\nCAL_DOW_DAYNO\nInteger\nPHP 4\nCAL_DOW_SHORT\nInteger\nPHP 4\nCAL_DOW_LONG\nInteger\nPHP 4\nCAL_MONTH_GREGORIAN_SHORT\nInteger\nPHP 4\nCAL_MONTH_GREGORIAN_LONG\nInteger\nPHP 4\nCAL_MONTH_JULIAN_SHORT\nInteger\nPHP 4\nCAL_MONTH_JULIAN_LONG\nInteger\nPHP 4\nCAL_MONTH_JEWISH\nInteger\nPHP 4\nCAL_MONTH_FRENCH\nInteger\nPHP 4\nCAL_EASTER_DEFAULT\nInteger\nPHP 4.3\nCAL_EASTER_ROMAN\nInteger\nPHP 4.3\nCAL_EASTER_ALWAYS_GREGORIAN\nInteger\nPHP 4.3\nCAL_EASTER_ALWAYS_JULIAN\nInteger\nPHP 4.3\nCAL_JEWISH_ADD_ALAFIM_GERESH\nInteger\nPHP 5.0\nCAL_JEWISH_ADD_ALAFIM\nInteger\nPHP 5.0\nCAL_JEWISH_ADD_GERESHAYIM\nInteger\nPHP 5.0\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "70c1e23f-b31a-4f6a-8a1b-f5e2f531aac4",
      "title": "Advanced C Techniques",
      "relationship": "next_topic"
    },
    {
      "id": "65b9eeed-5920-40a8-8c0a-42ae41c7394b",
      "title": "C Project: Build a Real-World Application",
      "relationship": "suggested_next"
    },
    {
      "id": "1a2aa6e9-0bca-4980-a2b5-e43fce77e230",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is It?",
      "options": [
        "not the same as the Julian Calendar",
        "None of the above.",
        "based on the Julian Day Count",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of It is 'based on the Julian Day Count'."
    },
    {
      "question": "What is The Julian Day Count?",
      "options": [
        "not the same as the Julian Calendar",
        "None of the above.",
        "based on the Julian Day Count",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of The Julian Day Count is 'not the same as the Julian Calendar'."
    }
  ],
  "summary": "This tutorial covers PHPCalendarFunctions concepts and techniques. You'll learn how to use PHPCalendarFunctions effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPCalendarFunctions and how to apply it in your projects."
}