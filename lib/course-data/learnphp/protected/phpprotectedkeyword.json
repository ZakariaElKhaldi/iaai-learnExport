{
  "id": "913f0c44-f32b-4c35-966b-9a34c0f12ab3",
  "title": "PHPprotectedKeyword",
  "slug": "phpprotectedkeyword",
  "metadata": {
    "description": "Learn about PHPprotectedKeyword with clear explanations and practical examples.",
    "keywords": [
      "c",
      "protected",
      "keyword",
      "number",
      "property",
      "class",
      "public",
      "access",
      "code",
      "myclass",
      "anotherclass"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "protected"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nprotected\nKeyword",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nUse\nprotected\nto prevent outside code from modifying a property:\n<?php\nclass MyClass {\nprotected $number = 0;\n}\nclass \n  AnotherClass extends MyClass {\npublic function add1() {\n$this->number++;\n}\npublic function getNumber() {\nreturn $this->number;\n}\n}\n$obj = new AnotherClass();\n$obj->add1();\necho \"The number is \" . $obj->getNumber();\n?>\n\nDefinition and Usage\nThe\nprotected\nkeyword is an access modifier. It marks a property or method as protected.\nProtected properties and methods can only be used by the class in which the property or\nmethod was defined and any classes that derive from it. Any other code cannot use them.\nRelated Pages\nThe\nprivate\nkeyword\nThe\npublic\nkeyword\nLearn more about access modifiers in our\nPHP OOP - Access Modifiers Tutorial\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\nclass MyClass {\nprotected $number = 0;\n}\nclass \n  AnotherClass extends MyClass {\npublic function add1() {\n$this->number++;\n}\npublic function getNumber() {\nreturn $this->number;\n}\n}\n$obj = new AnotherClass();\n$obj->add1();\necho \"The number is \" . $obj->getNumber();\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\nclass MyClass {\nprotected $number = 0;\n}\nclass \n  AnotherClass extends MyClass {\npublic function add1() {\n$this->number++;\n}\npublic function getNumber() {\nreturn $this->number;\n}\n}\n$obj = new AnotherClass();\n$obj->add1();\necho \"The number is \" . $obj->getNumber();\n# TODO: Complete this line",
      "solution": "<?php\nclass MyClass {\nprotected $number = 0;\n}\nclass \n  AnotherClass extends MyClass {\npublic function add1() {\n$this->number++;\n}\npublic function getNumber() {\nreturn $this->number;\n}\n}\n$obj = new AnotherClass();\n$obj->add1();\necho \"The number is \" . $obj->getNumber();\n?>"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "991fcddf-8a0a-4c59-bc32-1a8261afadcd",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "1a5ddaa9-6f98-45f2-96b4-611010524658",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "0fc98863-8929-4fd8-bea8-b83602c2fe87",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The number?",
      "options": [
        "None of the above.",
        "\"",
        "an access modifier",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of The number is '\"'."
    },
    {
      "question": "What is Definition and Usage\nThe\nprotected\nkeyword?",
      "options": [
        "None of the above.",
        "\"",
        "None of the above.",
        "an access modifier"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Definition and Usage\nThe\nprotected\nkeyword is 'an access modifier'."
    }
  ],
  "summary": "This tutorial covers PHPprotectedKeyword concepts and techniques. You'll learn how to use PHPprotectedKeyword effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPprotectedKeyword and how to apply it in your projects."
}