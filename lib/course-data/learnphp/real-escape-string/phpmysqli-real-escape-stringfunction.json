{
  "id": "380da8ad-1404-4daf-afba-078b3e405922",
  "title": "PHPmysqli real_escape_string()Function",
  "slug": "phpmysqli-real-escape-stringfunction",
  "metadata": {
    "description": "Learn about PHPmysqli real_escape_string()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "mysqli",
      "lastname",
      "firstname",
      "characters",
      "style",
      "escape",
      "special",
      "values",
      "query",
      "string"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "real_escape_string"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nmysqli real_escape_string()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example - Object Oriented style\nEscape special characters in strings:\n<?php\n$mysqli = new mysqli(\"localhost\",\"my_user\",\"my_password\",\"my_db\");\nif ($mysqli -> connect_errno) {\necho \"Failed to connect to MySQL: \" . \n  $mysqli -> connect_error;\nexit();\n}\n// Escape special characters, if any\n$firstname = $mysqli -> real_escape_string($_POST['firstname']);\n$lastname = $mysqli -> real_escape_string($_POST['lastname']);\n$age = \n  $mysqli -> real_escape_string($_POST['age']);\n$sql=\"INSERT INTO Persons (FirstName, LastName, Age) VALUES ('$firstname', '$lastname', '$age')\";\nif (!$mysqli -> query($sql)) {\nprintf(\"%d Row inserted.\\n\", $mysqli->affected_rows);\n}\n$mysqli -> close();\n?>\nLook at example of procedural style at the bottom.\nDefinition and Usage\nThe real_escape_string() / mysqli_real_escape_string() function escapes special characters in a \nstring for use in an SQL query, taking into account the current character set of \nthe connection.\nThis function is used to create a legal SQL string that can be used in an SQL \nstatement. Assume we have the following code:\n<?php\n$lastname = \"D'Ore\";\n$sql=\"INSERT INTO Persons (LastName) VALUES ('$lastname')\";\n// This query will fail, cause we didn't escape $lastname\nif (!$mysqli -> query($sql)) {\nprintf(\"%d Row inserted.\\n\", $mysqli->affected_rows);\n}\n?>\nSyntax\nObject oriented style:\n$mysqli -> \n  real_escape_string(\nescapestring\n)\nProcedural style:\nmysqli_real_escape_string(\nconnection, escapestring\n)\nParameter Values\nParameter\nDescription\nconnection\nRequired. Specifies the MySQL connection to use\nescapestring\nRequired. The string to be escaped. Characters encoded are NUL (ASCII 0), \\n, \\r, \\, ', \", and Control-Z.\nTechnical Details\nReturn Value:\nReturns the escaped string\nPHP Version:\n5+\nExample - Procedural style\nEscape special characters in strings:\n<?php\n$con = mysqli_connect(\"localhost\",\"my_user\",\"my_password\",\"my_db\");\nif (mysqli_connect_errno())\n {\necho \"Failed to connect to MySQL: \" . mysqli_connect_error();\nexit();\n}\n// Escape special characters, if any\n$firstname = mysqli_real_escape_string($con, $_POST['firstname']);\n$lastname = mysqli_real_escape_string($con, $_POST['lastname']);\n$age = mysqli_real_escape_string($con, $_POST['age']);\n$sql=\"INSERT INTO Persons (FirstName, LastName, Age) VALUES ('$firstname', '$lastname', '$age')\";\nif (!mysqli_query($con, $sql))\n {\nprintf(\"%d Row inserted.\\n\", mysqli_affected_rows($con));\n}\nmysqli_close($con);\n?>\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example - Object Oriented style",
      "content": "",
      "order": 3,
      "code": "<?php\n$mysqli = new mysqli(\"localhost\",\"my_user\",\"my_password\",\"my_db\");\nif ($mysqli -> connect_errno) {\necho \"Failed to connect to MySQL: \" . \n  $mysqli -> connect_error;\nexit();\n}\n// Escape special characters, if any\n$firstname = $mysqli -> real_escape_string($_POST['firstname']);\n$lastname = $mysqli -> real_escape_string($_POST['lastname']);\n$age = \n  $mysqli -> real_escape_string($_POST['age']);\n$sql=\"INSERT INTO Persons (FirstName, LastName, Age) VALUES ('$firstname', '$lastname', '$age')\";\nif (!$mysqli -> query($sql)) {\nprintf(\"%d Row inserted.\\n\", $mysqli->affected_rows);\n}\n$mysqli -> close();\n?>",
      "language": "html",
      "explanation": "Example of example - object oriented style"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<?php\n$lastname = \"D'Ore\";\n$sql=\"INSERT INTO Persons (LastName) VALUES ('$lastname')\";\n// This query will fail, cause we didn't escape $lastname\nif (!$mysqli -> query($sql)) {\nprintf(\"%d Row inserted.\\n\", $mysqli->affected_rows);\n}\n?>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example - Procedural style",
      "content": "",
      "order": 5,
      "code": "<?php\n$con = mysqli_connect(\"localhost\",\"my_user\",\"my_password\",\"my_db\");\nif (mysqli_connect_errno())\n {\necho \"Failed to connect to MySQL: \" . mysqli_connect_error();\nexit();\n}\n// Escape special characters, if any\n$firstname = mysqli_real_escape_string($con, $_POST['firstname']);\n$lastname = mysqli_real_escape_string($con, $_POST['lastname']);\n$age = mysqli_real_escape_string($con, $_POST['age']);\n$sql=\"INSERT INTO Persons (FirstName, LastName, Age) VALUES ('$firstname', '$lastname', '$age')\";\nif (!mysqli_query($con, $sql))\n {\nprintf(\"%d Row inserted.\\n\", mysqli_affected_rows($con));\n}\nmysqli_close($con);\n?>",
      "language": "html",
      "explanation": "Example of example - procedural style"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n$mysqli = new mysqli(\"localhost\",\"my_user\",\"my_password\",\"my_db\");\nif ($mysqli -> connect_errno) {\necho \"Failed to connect to MySQL: \" . \n  $mysqli -> connect_error;\nexit();\n# TODO: Complete this line\n// Escape special characters, if any\n$firstname = $mysqli -> real_escape_string($_POST['firstname']);\n$lastname = $mysqli -> real_escape_string($_POST['lastname']);\n$age = \n  $mysqli -> real_escape_string($_POST['age']);\n$sql=\"INSERT INTO Persons (FirstName, LastName, Age) VALUES ('$firstname', '$lastname', '$age')\";\nif (!$mysqli -> query($sql)) {\nprintf(\"%d Row inserted.\\n\", $mysqli->affected_rows);\n}\n$mysqli -> close();\n?>",
      "solution": "<?php\n$mysqli = new mysqli(\"localhost\",\"my_user\",\"my_password\",\"my_db\");\nif ($mysqli -> connect_errno) {\necho \"Failed to connect to MySQL: \" . \n  $mysqli -> connect_error;\nexit();\n}\n// Escape special characters, if any\n$firstname = $mysqli -> real_escape_string($_POST['firstname']);\n$lastname = $mysqli -> real_escape_string($_POST['lastname']);\n$age = \n  $mysqli -> real_escape_string($_POST['age']);\n$sql=\"INSERT INTO Persons (FirstName, LastName, Age) VALUES ('$firstname', '$lastname', '$age')\";\nif (!$mysqli -> query($sql)) {\nprintf(\"%d Row inserted.\\n\", $mysqli->affected_rows);\n}\n$mysqli -> close();\n?>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n$lastname = \"D'Ore\";\n$sql=\"INSERT INTO Persons (LastName) VALUES ('$lastname')\";\n# TODO: Complete this line\nif (!$mysqli -> query($sql)) {\nprintf(\"%d Row inserted.\\n\", $mysqli->affected_rows);\n}\n?>",
      "solution": "<?php\n$lastname = \"D'Ore\";\n$sql=\"INSERT INTO Persons (LastName) VALUES ('$lastname')\";\n// This query will fail, cause we didn't escape $lastname\nif (!$mysqli -> query($sql)) {\nprintf(\"%d Row inserted.\\n\", $mysqli->affected_rows);\n}\n?>"
    }
  ],
  "related_topics": [
    {
      "id": "9b08efce-30e8-42bc-af67-15e3a4bfebdb",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "a584eee8-6a5a-4063-9aa8-49b97d3fdae6",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "d366aad6-1908-421b-8a24-86711e5653a2",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is This function?",
      "options": [
        "None of the above.",
        "used to create a legal SQL string that can be used in an SQL \nstatement",
        "NUL (ASCII 0)",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of This function is 'used to create a legal SQL string that can be used in an SQL \nstatement'."
    },
    {
      "question": "What is Characters encoded?",
      "options": [
        "NUL (ASCII 0)",
        "None of the above.",
        "used to create a legal SQL string that can be used in an SQL \nstatement",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of Characters encoded is 'NUL (ASCII 0)'."
    }
  ],
  "summary": "This tutorial covers PHPmysqli real_escape_string()Function concepts and techniques. You'll learn how to use PHPmysqli real_escape_string()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPmysqli real_escape_string()Function and how to apply it in your projects."
}