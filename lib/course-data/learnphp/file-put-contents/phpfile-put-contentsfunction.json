{
  "id": "d2be1c2f-3d76-48f9-93b4-5115aacebb67",
  "title": "PHPfile_put_contents()Function",
  "slug": "phpfile-put-contentsfunction",
  "metadata": {
    "description": "Learn about PHPfile_put_contents()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "file",
      "data",
      "write",
      "filename",
      "context",
      "function",
      "parameter",
      "specifies",
      "stream",
      "include"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "file_put_contents()"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nfile_put_contents()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nWrite data to a file:\n<?php\necho file_put_contents(\"test.txt\",\"Hello World. Testing!\");\n?>\nThe output of the code above will be:\n21\nDefinition and Usage\nThe file_put_contents() writes data to a file.\nThis function follows these rules when accessing a file:\nIf FILE_USE_INCLUDE_PATH is set, check the include path for a copy of\nfilename\nCreate the file if it does not exist\nOpen the file\nLock the file if LOCK_EX is set\nIf FILE_APPEND is set, move to the end of the file. Otherwise, clear the file content\nWrite the data into the file\nClose the file and release any locks\nNote:\nUse FILE_APPEND to avoid deleting the existing content of the \nfile.\nSyntax\nfile_put_contents(\nfilename\n,\ndata\n,\nmode\n,\ncontext\n)\nParameter Values\nParameter\nDescription\nfilename\nRequired. Specifies the path to the file to write to. If the file does not exist, this function will create one\ndata\nRequired. The data to write to the file. Can be a string, array, or a data stream\nmode\nOptional. Specifies how to open/write to the file. Possible values:\nFILE_USE_INCLUDE_PATH - search for filename in the include directory\nFILE_APPEND - if file already exists, append the data to it - instead of \n    overwriting it\nLOCK_EX - Put an exclusive lock on the file while writing to it\ncontext\nOptional. Specifies the context of the file handle. Context is a set of options that can modify the behavior of a stream.\nTechnical Details\nReturn Value:\nThe number of bytes written into the file on success, FALSE \n on failure\nPHP Version:\n5.0+\nBinary Safe:\nYes\nPHP Changelog:\nPHP \n  5.1 - Added support for LOCK_EX and the ability to pass a stream resource to \n  the data parameter\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\necho file_put_contents(\"test.txt\",\"Hello World. Testing!\");\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n# TODO: Complete this line\n?>",
      "solution": "<?php\necho file_put_contents(\"test.txt\",\"Hello World. Testing!\");\n?>"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "bca3fda0-e3f5-41e7-bafb-d5c4ee8cdc1d",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "84d6250e-2b4d-4581-824d-75cba0f1ec13",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "9385df43-eeb2-409e-8ba3-ccf2a5661ced",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is PATH?",
      "options": [
        "set",
        "a set of options that can modify the behavior of a stream",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of PATH is 'set'."
    },
    {
      "question": "What is Context?",
      "options": [
        "None of the above.",
        "None of the above.",
        "set",
        "a set of options that can modify the behavior of a stream"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Context is 'a set of options that can modify the behavior of a stream'."
    }
  ],
  "summary": "This tutorial covers PHPfile_put_contents()Function concepts and techniques. You'll learn how to use PHPfile_put_contents()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPfile_put_contents()Function and how to apply it in your projects."
}