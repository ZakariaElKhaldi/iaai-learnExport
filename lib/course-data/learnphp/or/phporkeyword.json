{
  "id": "28c62016-36e9-426f-860d-971acb5b749d",
  "title": "PHPorKeyword",
  "slug": "phporkeyword",
  "metadata": {
    "description": "Learn about PHPorKeyword with clear explanations and practical examples.",
    "keywords": [
      "php",
      "true",
      "false",
      "echo",
      "return",
      "statements",
      "operators",
      "keyword",
      "example",
      "logical",
      "operator"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Php Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "or"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nor\nKeyword",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nReturn true if at least one of the statements is true:\n<?php\nif (5 > 3 or 5 > 10) {\necho \"true\";\n} else {\necho \"false\";\n}\n?>\n\nDefinition and Usage\nThe\nor\nkeyword is a logical operator.\nLogical operators are used to combine conditional statements.\nThe return value will be\ntrue\nif any one of the statements returns\ntrue\n, otherwise it will\nreturn\nfalse\n.\nThe difference between\nor\nand\n||\nis that or has very low precedence, meaning that most\nother operations get evaluated first.\nRelated Pages\nRead more about operators in our\nPHP Operators Tutorial\n.\nMore Examples\nExample\nDifference between\nor\nand\n||\n.\nor\nhas lower precedence than the\n=\noperator,\nso the assignment happens first.\n<?php\n$result1 = false || true;\necho \"false || true = \";\necho \n  $result1 ? \"true\" : \"false\";\necho \"<br>\";\n$result2 = false or \n  true;\necho \"false or true = \";\necho $result2 ? \"true\" : \"false\";\n?>\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\nif (5 > 3 or 5 > 10) {\necho \"true\";\n} else {\necho \"false\";\n}\n?>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<?php\n$result1 = false || true;\necho \"false || true = \";\necho \n  $result1 ? \"true\" : \"false\";\necho \"<br>\";\n$result2 = false or \n  true;\necho \"false or true = \";\necho $result2 ? \"true\" : \"false\";\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\nif (5 > 3 or 5 > 10) {\necho \"true\";\n# TODO: Complete this line\necho \"false\";\n}\n?>",
      "solution": "<?php\nif (5 > 3 or 5 > 10) {\necho \"true\";\n} else {\necho \"false\";\n}\n?>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n# TODO: Complete this line\necho \"false || true = \";\necho \n  $result1 ? \"true\" : \"false\";\necho \"<br>\";\n$result2 = false or \n  true;\necho \"false or true = \";\necho $result2 ? \"true\" : \"false\";\n?>",
      "solution": "<?php\n$result1 = false || true;\necho \"false || true = \";\necho \n  $result1 ? \"true\" : \"false\";\necho \"<br>\";\n$result2 = false or \n  true;\necho \"false or true = \";\necho $result2 ? \"true\" : \"false\";\n?>"
    }
  ],
  "related_topics": [
    {
      "id": "3fa90f6d-17e4-474a-b5e3-75faa9ee15c7",
      "title": "Php Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "4e7cc23a-0996-47c7-9e3d-e71bd9e64083",
      "title": "Php Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "714b53f6-34ae-48a0-9419-5b37fd661431",
      "title": "Php Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is PHP\nor\nKeyword\n\nExample\nReturn true if at least one of the statements?",
      "options": [
        "true:\n<",
        "a logical operator",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of PHP\nor\nKeyword\n\nExample\nReturn true if at least one of the statements is 'true:\n<'."
    },
    {
      "question": "What is Definition and Usage\nThe\nor\nkeyword?",
      "options": [
        "true:\n<",
        "a logical operator",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Definition and Usage\nThe\nor\nkeyword is 'a logical operator'."
    }
  ],
  "summary": "This tutorial covers PHPorKeyword concepts and techniques. You'll learn how to use PHPorKeyword effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPorKeyword and how to apply it in your projects."
}