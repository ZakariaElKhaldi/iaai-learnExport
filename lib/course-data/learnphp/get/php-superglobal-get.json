{
  "id": "3f013b3b-9a36-4684-8ef3-806cb2c47d9d",
  "title": "PHP Superglobal - $_GET",
  "slug": "php-superglobal-get",
  "metadata": {
    "description": "Learn about PHP Superglobal - $_GET with clear explanations and practical examples.",
    "keywords": [
      "form",
      "html",
      "query",
      "body",
      "name",
      "method",
      "string",
      "file",
      "example",
      "input"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Php Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "$_GET"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP Superglobal - $_GET",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "PHP $_GET\n$_GET contains an array of variables received via the HTTP GET method.\nThere are two main ways to send variables via the HTTP GET method:\nQuery strings in the URL\nHTML Forms\nQuery string in the URL\nA query string is data added at the end of a URL. In the link below, everything after the\n?\nsign is part of the query string:\n<a href=\"demo_phpfile.php?subject=PHP&web=.com\">Test $GET</a>\nThe query string above contains two key/value pairs:\nsubject=PHP\nweb=.com\nIn the PHP file we can use the\n$_GET\nvariable\nto collect the value of the query string.\nExample\nThe PHP file\ndemo_phpfile.php\n:\n<html>\n<body>\n\n<?php\necho \"Study \" . $_GET['subject'] . \" at \" . $_GET['web'];\n?>\n\n</body>\n</html>\n\n$_GET in HTML Forms\nA HTML form submits information via the HTTP GET method if\nthe form's\nmethod\nattribute is set to\n\"GET\"\n.\nTo demonstrate this, we start by creating a simple HTML form:\nHTML Form\n<html>\n<body>\n\n<form action=\"welcome_get.php\" method=\"GET\">\n  Name: <input type=\"text\" name=\"name\">\n  E-mail: <input type=\"text\" name=\"email\">\n  <input type=\"submit\">\n</form>\n\n</body>\n</html>\nWhen a user clicks the submit button, the form data is sent to a PHP file specified in the\naction\nattribute of the\n<form>\ntag.\nThe form fields are sent to the PHP file, with your input, as query strings:\nwelcome_get.php?name=John&email=john@example.com\nIn the action file we can use the\n$_GET\nvariable\nto collect the value of the input fields.\nExample\nPHP code inside the\nwelcome_get.php\npage:\n<html>\n<body>\n\nWelcome <?php echo $_GET[\"name\"]; ?><br>\nYour email address is: <?php echo $_GET[\"email\"]; ?>\n\n</body>\n</html>\nRun Example \u00bb\nThink SECURITY when processing PHP forms!\nThe example above does not contain any form validation, it just shows how you can \nsend and retrieve form data.\nLearn more about processing PHP forms with security in mind in the\nForm Validation\nchapter.\nProper validation of form data is important to protect your form from hackers and spammers!\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "b7d630b2-3349-4011-9df3-593c35ae9e60",
      "title": "Php Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "ab570229-0644-4b96-ab1f-20e72f781d8c",
      "title": "Php Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "0de65461-fdef-4307-95fb-255d9d3c249f",
      "title": "Php Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is There?",
      "options": [
        "two main ways to send variables via the HTTP GET method:\nQuery strings in the URL\nHTML Forms\nQuery string in the URL\nA query string is data added at the end of a URL",
        "part of the query string:\n<a href=\"demo_phpfile",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of There is 'two main ways to send variables via the HTTP GET method:\nQuery strings in the URL\nHTML Forms\nQuery string in the URL\nA query string is data added at the end of a URL'."
    },
    {
      "question": "What is sign?",
      "options": [
        "part of the query string:\n<a href=\"demo_phpfile",
        "None of the above.",
        "None of the above.",
        "two main ways to send variables via the HTTP GET method:\nQuery strings in the URL\nHTML Forms\nQuery string in the URL\nA query string is data added at the end of a URL"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of sign is 'part of the query string:\n<a href=\"demo_phpfile'."
    }
  ],
  "summary": "This tutorial covers PHP Superglobal - $_GET concepts and techniques. You'll learn how to use PHP Superglobal - $_GET effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHP Superglobal - $_GET and how to apply it in your projects."
}