{
  "id": "93b7c953-5022-454a-84b3-18d63232a8e4",
  "title": "PHPDate/TimeFunctions",
  "slug": "phpdatetimefunctions",
  "metadata": {
    "description": "Learn about PHPDate/TimeFunctions with clear explanations and practical examples.",
    "keywords": [
      "date",
      "time",
      "returns",
      "functions",
      "timezone",
      "example",
      "timestamp",
      "specified",
      "default",
      "used"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "PHP Date"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nDate/Time\nFunctions",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "PHP Date/Time Introduction\nThe date/time functions allow you to get the date and time from \nthe server where your PHP script runs. You can then use the date/time functions \nto format the date and time in several ways.\nNote:\nThese functions depend on the locale settings of your server. \nRemember to take daylight saving time and leap years into consideration when \nworking with these functions.\nInstallation\nThe PHP date/time functions are part of the PHP core. No installation is required to use these functions.\nRuntime Configuration\nThe behavior of these functions is affected by settings in php.ini:\nName\nDescription\nDefault\nPHP Version\ndate.timezone\nThe default timezone (used by all date/time functions)\n\"\"\nPHP 5.1\ndate.default_latitude\nThe default latitude (used by date_sunrise() and date_sunset())\n\"31.7667\"\nPHP 5.0\ndate.default_longitude\nThe default longitude (used by date_sunrise() and date_sunset())\n\"35.2333\"\nPHP 5.0\ndate.sunrise_zenith\nThe default sunrise zenith (used by date_sunrise() and date_sunset())\n\"90.83\"\nPHP 5.0\ndate.sunset_zenith\nThe default sunset zenith (used by date_sunrise() and date_sunset())\n\"90.83\"\nPHP 5.0\nPHP Date/Time Functions\nFunction\nDescription\ncheckdate()\nValidates a Gregorian date\ndate_add()\nAdds days, months, years, hours, minutes, and seconds to a date\ndate_create_from_format()\nReturns a new DateTime object formatted according to a specified format\ndate_create()\nReturns a new DateTime object\ndate_date_set()\nSets a new date\ndate_default_timezone_get()\nReturns the default timezone used by all date/time functions\ndate_default_timezone_set()\nSets the default timezone used by all date/time functions\ndate_diff()\nReturns the difference between two dates\ndate_format()\nReturns a date formatted according to a specified format\ndate_get_last_errors()\nReturns the warnings/errors found in a date string\ndate_interval_create_from_date_string()\nSets up a DateInterval from the relative parts of the string\ndate_interval_format()\nFormats the interval\ndate_isodate_set()\nSets the ISO date\ndate_modify()\nModifies the timestamp\ndate_offset_get()\nReturns the timezone offset\ndate_parse_from_format()\nReturns an associative array with detailed info about a specified date, according to a specified format\ndate_parse()\nReturns an associative array with detailed info about a specified date\ndate_sub()\nSubtracts days, months, years, hours, minutes, and seconds from a date\ndate_sun_info()\nReturns an array containing info about sunset/sunrise and twilight begin/end, for a specified day and location\ndate_sunrise()\nReturns the sunrise time for a specified day and location\ndate_sunset()\nReturns the sunset time for a specified day and location\ndate_time_set()\nSets the time\ndate_timestamp_get()\nReturns the Unix timestamp\ndate_timestamp_set()\nSets the date and time based on a Unix timestamp\ndate_timezone_get()\nReturns the time zone of the given DateTime object\ndate_timezone_set()\nSets the time zone for the DateTime object\ndate()\nFormats a local date and time\ngetdate()\nReturns date/time information of a timestamp or the current local date/time\ngettimeofday()\nReturns the current time\ngmdate()\nFormats a GMT/UTC date and time\ngmmktime()\nReturns the Unix timestamp for a GMT date\ngmstrftime()\nFormats a GMT/UTC date and time according to locale settings\nidate()\nFormats a local time/date as integer\nlocaltime()\nReturns the local time\nmicrotime()\nReturns the current Unix timestamp with microseconds\nmktime()\nReturns the Unix timestamp for a date\nstrftime()\nFormats a local time and/or date according to locale settings\nstrptime()\nParses a time/date generated with strftime()\nstrtotime()\nParses an English textual datetime into a Unix timestamp\ntime()\nReturns the current time as a Unix timestamp\ntimezone_abbreviations_list()\nReturns an associative array containing dst, offset, and the timezone name\ntimezone_identifiers_list()\nReturns an indexed array with all timezone identifiers\ntimezone_location_get()\nReturns location information for a specified timezone\ntimezone_name_from_ abbr()\nReturns the timezone name from abbreviation\ntimezone_name_get()\nReturns the name of the timezone\ntimezone_offset_get()\nReturns the timezone offset from GMT\ntimezone_open()\nCreates new DateTimeZone object\ntimezone_transitions_get()\nReturns all transitions for the timezone\ntimezone_version_get()\nReturns the version of the timezonedb\nPHP Predefined Date/Time Constants\nConstant\nDescription\nDATE_ATOM\nAtom (example: 2019-01-18T14:13:03+00:00)\nDATE_COOKIE\nHTTP Cookies (example: Fri, 18 Jan 2019 14:13:03 UTC)\nDATE_ISO8601\nISO-8601 (example: 2019-01-18T14:13:03+0000)\nDATE_RFC822\nRFC 822 (example: Fri, 18 Jan 2019 14:13:03 +0000)\nDATE_RFC850\nRFC 850 (example: Friday, 18-Jan-19 14:13:03 UTC)\nDATE_RFC1036\nRFC 1036 (example: Friday, 18-Jan-19 14:13:03 +0000)\nDATE_RFC1123\nRFC 1123 (example: Fri, 18 Jan 2019 14:13:03 +0000)\nDATE_RFC2822\nRFC 2822 (example: Fri, 18 Jan 2019 14:13:03 +0000)\nDATE_RFC3339\nSame as DATE_ATOM (since PHP 5.1.3)\nDATE_RFC3339_EXTENDED\nRFC3339 Extended format (since PHP 7.0.0) (example: \n    2019-01-18T16:34:01.000+00:00)\nDATE_RSS\nRSS (Fri, 18 Jan 2019 14:13:03 +0000)\nDATE_W3C\nWorld Wide Web Consortium (example: 2019-01-18T14:13:03+00:00)\nSUNFUNCS_RET_TIMESTAMP\nTimestamp (since PHP 5.1.2)\nSUNFUNCS_RET_STRING\nHours:minutes (example: 09:41) (since PHP 5.1.2)\nSUNFUNCS_RET_DOUBLE\nHours as a floating point number (example: 9.75) (since PHP 5.1.2)\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "381a8967-1bda-4348-98f3-cfcbe4825f53",
      "title": "Advanced C Techniques",
      "relationship": "next_topic"
    },
    {
      "id": "7ffc79aa-0b16-4997-935e-9f7271dffe37",
      "title": "C Project: Build a Real-World Application",
      "relationship": "suggested_next"
    },
    {
      "id": "5b00ec18-fbdc-4a43-b818-44b374d504ee",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is time functions?",
      "options": [
        "required to use these functions",
        "None of the above.",
        "part of the PHP core",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of time functions is 'part of the PHP core'."
    },
    {
      "question": "What is No installation?",
      "options": [
        "required to use these functions",
        "None of the above.",
        "None of the above.",
        "part of the PHP core"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of No installation is 'required to use these functions'."
    }
  ],
  "summary": "This tutorial covers PHPDate/TimeFunctions concepts and techniques. You'll learn how to use PHPDate/TimeFunctions effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPDate/TimeFunctions and how to apply it in your projects."
}