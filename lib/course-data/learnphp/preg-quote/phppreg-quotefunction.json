{
  "id": "0f53a9fa-2ae6-4071-b4ef-ddbcbef55f21",
  "title": "PHPpreg_quote()Function",
  "slug": "phppreg-quotefunction",
  "metadata": {
    "description": "Learn about PHPpreg_quote()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "input",
      "character",
      "special",
      "escaped",
      "characters",
      "regular",
      "function",
      "backslash",
      "delimiter",
      "parameter"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "preg_quote"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\npreg_quote()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nUse preg_quote() to safely use special characters in a regular expression:\n<?php\n$search = preg_quote(\"://\", \"/\");\n$input = 'https://www..com/';\n$pattern = \"/$search/\";\nif(preg_match($pattern, $input)) {\necho \n  \"The input is a URL.\";\n} else {\necho \"The input is not a URL.\";\n}\n?>\n\nDefinition and Usage\nThe\npreg_quote()\nfunction adds a backslash to characters that have a special meaning in\nregular expressions so that searches for the literal characters can be done. This function is\nuseful when using user input in regular expressions.\nSyntax\npreg_quote(\ninput, delimiter\n)\nParameter Values\nParameter\nDescription\ninput\nRequired. The string to be escaped\ndelimiter\nOptional. Defaults to\nnull\n. This parameter expects a single\ncharacter indicating which delimiter the regular expression will\nuse. When provided, instances of this character in the input string\nwill also be escaped with a backslash\nTechnical Details\nReturn Value:\nReturns a string with all of the special characters escaped with a backslash\nPHP Version:\n4+\nChangelog:\nPHP 7.3 - The # character is now considered a special character and will be escaped.\nPHP 5.3 - The - character is now considered a special character and will be escaped.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\n$search = preg_quote(\"://\", \"/\");\n$input = 'https://www.w3schools.com/';\n$pattern = \"/$search/\";\nif(preg_match($pattern, $input)) {\necho \n  \"The input is a URL.\";\n} else {\necho \"The input is not a URL.\";\n}\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n$search = preg_quote(\"://\", \"/\");\n# TODO: Complete this line\n$pattern = \"/$search/\";\nif(preg_match($pattern, $input)) {\necho \n  \"The input is a URL.\";\n} else {\necho \"The input is not a URL.\";\n}\n?>",
      "solution": "<?php\n$search = preg_quote(\"://\", \"/\");\n$input = 'https://www.w3schools.com/';\n$pattern = \"/$search/\";\nif(preg_match($pattern, $input)) {\necho \n  \"The input is a URL.\";\n} else {\necho \"The input is not a URL.\";\n}\n?>"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "9ffc59bf-0dc4-4464-a505-f5295ad9a322",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "a1e2a8b1-737c-4854-826c-b7804da183d5",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "094ca303-f632-4d4a-93cb-8831115ac25c",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The input?",
      "options": [
        "a URL",
        "None of the above.",
        "None of the above.",
        "not a URL"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of The input is 'a URL'."
    },
    {
      "question": "What is The input?",
      "options": [
        "None of the above.",
        "None of the above.",
        "not a URL",
        "a URL"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of The input is 'not a URL'."
    }
  ],
  "summary": "This tutorial covers PHPpreg_quote()Function concepts and techniques. You'll learn how to use PHPpreg_quote()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPpreg_quote()Function and how to apply it in your projects."
}