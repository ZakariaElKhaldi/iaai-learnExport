{
  "id": "3a3e9765-538f-4fcf-ba83-8bdaf45df900",
  "title": "PHPArrayFunctions",
  "slug": "phparrayfunctions",
  "metadata": {
    "description": "Learn about PHPArrayFunctions with clear explanations and practical examples.",
    "keywords": [
      "array",
      "compare",
      "values",
      "returns",
      "arrays",
      "keys",
      "function",
      "using",
      "user",
      "defined"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "Array Functions"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nArray\nFunctions",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "PHP Array Functions\nPHP has a set of built-in functions that you can use on arrays.\nFunction\nDescription\narray()\nCreates an array\narray_change_key_case()\nChanges all keys in an array to lowercase or uppercase\narray_chunk()\nSplits an array into chunks of arrays\narray_column()\nReturns the values from a single column in the input array\narray_combine()\nCreates an array by using the elements from one \"keys\" array and one \"values\" array\narray_count_values()\nCounts all the values of an array\narray_diff()\nCompare arrays, and returns the differences (compare values only)\narray_diff_assoc()\nCompare arrays, and returns the differences (compare keys and values)\narray_diff_key()\nCompare arrays, and returns the differences (compare keys only)\narray_diff_uassoc()\nCompare arrays, and returns the differences (compare keys and values, using a user-defined key comparison function)\narray_diff_ukey()\nCompare arrays, and returns the differences (compare keys only, using a user-defined key comparison function)\narray_fill()\nFills an array with values\narray_fill_keys()\nFills an array with values, specifying keys\narray_filter()\nFilters the values of an array using a callback function\narray_flip()\nFlips/Exchanges all keys with their associated values in an array\narray_intersect()\nCompare arrays, and returns the matches (compare values only)\narray_intersect_assoc()\nCompare arrays and returns the matches (compare keys and values)\narray_intersect_key()\nCompare arrays, and returns the matches (compare keys only)\narray_intersect_uassoc()\nCompare arrays, and returns the matches (compare keys and values, using a user-defined key comparison function)\narray_intersect_ukey()\nCompare arrays, and returns the matches (compare keys only, using a user-defined key comparison function)\narray_key_exists()\nChecks if the specified key exists in the array\narray_keys()\nReturns all the keys of an array\narray_map()\nSends each value of an array to a user-made function, which returns new values\narray_merge()\nMerges one or more arrays into one array\narray_merge_recursive()\nMerges one or more arrays into one array recursively\narray_multisort()\nSorts multiple or multi-dimensional arrays\narray_pad()\nInserts a specified number of items, with a specified value, to an array\narray_pop()\nDeletes the last element of an array\narray_product()\nCalculates the product of the values in an array\narray_push()\nInserts one or more elements to the end of an array\narray_rand()\nReturns one or more random keys from an array\narray_reduce()\nReturns an array as a string, using a user-defined function\narray_replace()\nReplaces the values of the first array with the values from following arrays\narray_replace_recursive()\nReplaces the values of the first array with the values from following arrays recursively\narray_reverse()\nReturns an array in the reverse order\narray_search()\nSearches an array for a given value and returns the key\narray_shift()\nRemoves the first element from an array, and returns the value of the removed element\narray_slice()\nReturns selected parts of an array\narray_splice()\nRemoves and replaces specified elements of an array\narray_sum()\nReturns the sum of the values in an array\narray_udiff()\nCompare arrays, and returns the differences (compare values only, using a user-defined key comparison function)\narray_udiff_assoc()\nCompare arrays, and returns the differences (compare keys and values, using a built-in function to compare the keys and a user-defined function to compare the values)\narray_udiff_uassoc()\nCompare arrays, and returns the differences (compare keys and values, using two user-defined key comparison functions)\narray_uintersect()\nCompare arrays, and returns the matches (compare values only, using a user-defined key comparison function)\narray_uintersect_assoc()\nCompare arrays, and returns the matches (compare keys and values, using a built-in function to compare the keys and a user-defined function to compare the values)\narray_uintersect_uassoc()\nCompare arrays, and returns the matches (compare keys and values, using two user-defined key comparison functions)\narray_unique()\nRemoves duplicate values from an array\narray_unshift()\nAdds one or more elements to the beginning of an array\narray_values()\nReturns all the values of an array\narray_walk()\nApplies a user function to every member of an array\narray_walk_recursive()\nApplies a user function recursively to every member of an array\narsort()\nSorts an associative array in descending order, according to the value\nasort()\nSorts an associative array in ascending order, according to the value\ncompact()\nCreate array containing variables and their values\ncount()\nReturns the number of elements in an array\ncurrent()\nReturns the current element in an array\neach()\nDeprecated from PHP 7.2.\nReturns the current key and value pair from an array\nend()\nSets the internal pointer of an array to its last element\nextract()\nImports variables into the current symbol table from an array\nin_array()\nChecks if a specified value exists in an array\nkey()\nFetches a key from an array\nkrsort()\nSorts an associative array in descending order, according to the key\nksort()\nSorts an associative array in ascending order, according to the key\nlist()\nAssigns variables as if they were an array\nnatcasesort()\nSorts an array using a case insensitive \"natural order\" algorithm\nnatsort()\nSorts an array using a \"natural order\" algorithm\n\nAdvance the internal array pointer of an array\npos()\nAlias of\ncurrent()\nprev()\nRewinds the internal array pointer\nrange()\nCreates an array containing a range of elements\nreset()\nSets the internal pointer of an array to its first element\nrsort()\nSorts an indexed array in descending order\nshuffle()\nShuffles an array\nsizeof()\nAlias of\ncount()\nsort()\nSorts an indexed array in ascending order\nuasort()\nSorts an array by values using a user-defined comparison function and \n    maintains the index association\nuksort()\nSorts an array by keys using a user-defined comparison function\nusort()\nSorts an array by values using a user-defined comparison function\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "4bc13106-d4c6-40b6-9547-8dd9f34ca0bd",
      "title": "Advanced C Techniques",
      "relationship": "next_topic"
    },
    {
      "id": "83d6d952-5836-444e-b2e8-152a7b433516",
      "title": "C Project: Build a Real-World Application",
      "relationship": "suggested_next"
    },
    {
      "id": "96c69f8a-a9a5-449c-912b-02f047b9ba19",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers PHPArrayFunctions concepts and techniques. You'll learn how to use PHPArrayFunctions effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPArrayFunctions and how to apply it in your projects."
}