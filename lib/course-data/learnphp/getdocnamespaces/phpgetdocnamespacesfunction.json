{
  "id": "5f8ace9c-3402-4726-886f-60f0723cea88",
  "title": "PHPgetDocNamespaces()Function",
  "slug": "phpgetdocnamespacesfunction",
  "metadata": {
    "description": "Learn about PHPgetDocNamespaces()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "namespaces",
      "getdocnamespaces",
      "declared",
      "document",
      "example",
      "cars",
      "true",
      "return",
      "root",
      "version"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "getDocNamespaces()"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\ngetDocNamespaces()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nReturn the namespaces declared in the root of the XML document:\n<?php\n$xml=<<<XML\n<?xml version=\"1.0\" standalone=\"yes\"?>\n<cars xmlns:c=\"http://.com/ns\">\n<c:car id=\"1\">Volvo</c:car>\n<c:car id=\"2\">BMW</c:car>\n<c:car id=\"3\">Saab</c:car>\n</cars>\nXML;\n$sxe=new SimpleXMLElement($xml);\n$ns=$sxe->getDocNamespaces();\nprint_r($ns);\n?>\nRun Example \u00bb\nDefinition and Usage\nThe getDocNamespaces() function returns the namespaces declared in an XML document.\nSyntax\nSimpleXMLElement::getDocNamespaces(\nrecursive\n,\nfrom_root\n)\nParameter Values\nParameter\nDescription\nrecursive\nOptional.\u00a0 Specifies a Boolean value. If TRUE, all namespaces declared in \n    document are returned. If FALSE, only namespaces declared in root node is returned. Default is FALSE\nfrom_root\nOptional. Specifies a Boolean value. TRUE checks namespaces from the root of the XML document. FALSE checks namespaces under a child node. Default is TRUE\nTechnical Details\nReturn Value:\nAn array of namespace names with their associated URIs\nPHP Version:\n5.1.2+\nPHP Changelog:\nPHP 5.4: The\nfrom_root\nparameter was added\nMore Examples\nExample\nReturn all namespaces declared in the XML document:\n<?php\n$xml=<<<XML\n<?xml version=\"1.0\" standalone=\"yes\"?>\n<cars xmlns:c=\"http://.com/ns\">\n<c:car id=\"1\">Volvo</c:car>\n<c:car id=\"2\">BMW</c:car>\n<c:car id=\"3\" a:country=\"Sweden\" xmlns:a=\"http://.com/country\">Saab</c:car>\n</cars>\nXML;\n$sxe=new SimpleXMLElement($xml);\n$ns=$sxe->getDocNamespaces(TRUE);\nvar_dump($ns);\n?>\nRun Example \u00bb\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\n$xml=<<<XML\n<?xml version=\"1.0\" standalone=\"yes\"?>\n<cars xmlns:c=\"http://w3schools.com/ns\">\n<c:car id=\"1\">Volvo</c:car>\n<c:car id=\"2\">BMW</c:car>\n<c:car id=\"3\">Saab</c:car>\n</cars>\nXML;\n$sxe=new SimpleXMLElement($xml);\n$ns=$sxe->getDocNamespaces();\nprint_r($ns);\n?>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<?php\n$xml=<<<XML\n<?xml version=\"1.0\" standalone=\"yes\"?>\n<cars xmlns:c=\"http://w3schools.com/ns\">\n<c:car id=\"1\">Volvo</c:car>\n<c:car id=\"2\">BMW</c:car>\n<c:car id=\"3\" a:country=\"Sweden\" xmlns:a=\"http://w3schools.com/country\">Saab</c:car>\n</cars>\nXML;\n$sxe=new SimpleXMLElement($xml);\n$ns=$sxe->getDocNamespaces(TRUE);\nvar_dump($ns);\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n$xml=<<<XML\n<?xml version=\"1.0\" standalone=\"yes\"?>\n<cars xmlns:c=\"http://w3schools.com/ns\">\n# TODO: Complete this line\n<c:car id=\"2\">BMW</c:car>\n<c:car id=\"3\">Saab</c:car>\n</cars>\nXML;\n$sxe=new SimpleXMLElement($xml);\n$ns=$sxe->getDocNamespaces();\nprint_r($ns);\n?>",
      "solution": "<?php\n$xml=<<<XML\n<?xml version=\"1.0\" standalone=\"yes\"?>\n<cars xmlns:c=\"http://w3schools.com/ns\">\n<c:car id=\"1\">Volvo</c:car>\n<c:car id=\"2\">BMW</c:car>\n<c:car id=\"3\">Saab</c:car>\n</cars>\nXML;\n$sxe=new SimpleXMLElement($xml);\n$ns=$sxe->getDocNamespaces();\nprint_r($ns);\n?>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n$xml=<<<XML\n<?xml version=\"1.0\" standalone=\"yes\"?>\n<cars xmlns:c=\"http://w3schools.com/ns\">\n<c:car id=\"1\">Volvo</c:car>\n<c:car id=\"2\">BMW</c:car>\n<c:car id=\"3\" a:country=\"Sweden\" xmlns:a=\"http://w3schools.com/country\">Saab</c:car>\n</cars>\nXML;\n$sxe=new SimpleXMLElement($xml);\n$ns=$sxe->getDocNamespaces(TRUE);\nvar_dump($ns);\n# TODO: Complete this line",
      "solution": "<?php\n$xml=<<<XML\n<?xml version=\"1.0\" standalone=\"yes\"?>\n<cars xmlns:c=\"http://w3schools.com/ns\">\n<c:car id=\"1\">Volvo</c:car>\n<c:car id=\"2\">BMW</c:car>\n<c:car id=\"3\" a:country=\"Sweden\" xmlns:a=\"http://w3schools.com/country\">Saab</c:car>\n</cars>\nXML;\n$sxe=new SimpleXMLElement($xml);\n$ns=$sxe->getDocNamespaces(TRUE);\nvar_dump($ns);\n?>"
    }
  ],
  "related_topics": [
    {
      "id": "8113dd4b-abc9-4d22-a284-221327c4300b",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "86122b88-2b11-401a-8d26-c9a18149fe3c",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "5b7fe315-12ba-4885-8a69-29802b4763f6",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is all namespaces declared in \n    document?",
      "options": [
        "returned",
        "returned",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of all namespaces declared in \n    document is 'returned'."
    },
    {
      "question": "What is only namespaces declared in root node?",
      "options": [
        "returned",
        "None of the above.",
        "None of the above.",
        "returned"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of only namespaces declared in root node is 'returned'."
    }
  ],
  "summary": "This tutorial covers PHPgetDocNamespaces()Function concepts and techniques. You'll learn how to use PHPgetDocNamespaces()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPgetDocNamespaces()Function and how to apply it in your projects."
}