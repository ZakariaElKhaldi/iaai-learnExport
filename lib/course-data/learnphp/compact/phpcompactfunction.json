{
  "id": "853fdb5f-cb50-4cbe-999d-2f5a5477d3a3",
  "title": "PHPcompact()Function",
  "slug": "phpcompactfunction",
  "metadata": {
    "description": "Learn about PHPcompact()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "array",
      "variable",
      "compact",
      "variables",
      "firstname",
      "lastname",
      "result",
      "name",
      "function",
      "values"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "compact()"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\ncompact()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nCreate an array from variables and their values:\n<?php\n$firstname = \"Peter\";\n$lastname = \"Griffin\";\n$age = \"41\";\n$result = compact(\"firstname\", \"lastname\", \"age\");\nprint_r($result);\n?>\n\nDefinition and Usage\nThe compact() function creates an array from variables and their values.\nNote:\nAny strings that does not match variable names will be skipped.\nSyntax\ncompact(\nvar1, var2...\n)\nParameter Values\nParameter\nDescription\nvar1\nRequired. Can be a string with the variable name, or an array of variables\nvar2,...\nOptional. Can be a string with the variable name, or an array of variables. Multiple parameters are allowed.\nTechnical Details\nReturn Value:\nReturns an array with all the variables added to it\nPHP Version:\n4+\nChange log:\nAs of version 7.3 this function issues an E_NOTICE level error if an unset variable is given\nMore Examples\nExample\nUsing a string that does not match a variable, and an array of variable \nnames:\n<?php\n$firstname = \"Peter\";\n$lastname = \"Griffin\";\n$age = \"41\";\n$name = array(\"firstname\", \"lastname\");\n$result = compact($name, \"location\", \"age\");\nprint_r($result);\n?>\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\n$firstname = \"Peter\";\n$lastname = \"Griffin\";\n$age = \"41\";\n$result = compact(\"firstname\", \"lastname\", \"age\");\nprint_r($result);\n?>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<?php\n$firstname = \"Peter\";\n$lastname = \"Griffin\";\n$age = \"41\";\n$name = array(\"firstname\", \"lastname\");\n$result = compact($name, \"location\", \"age\");\nprint_r($result);\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n$firstname = \"Peter\";\n$lastname = \"Griffin\";\n$age = \"41\";\n$result = compact(\"firstname\", \"lastname\", \"age\");\n# TODO: Complete this line\n?>",
      "solution": "<?php\n$firstname = \"Peter\";\n$lastname = \"Griffin\";\n$age = \"41\";\n$result = compact(\"firstname\", \"lastname\", \"age\");\nprint_r($result);\n?>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n# TODO: Complete this line\n$lastname = \"Griffin\";\n$age = \"41\";\n$name = array(\"firstname\", \"lastname\");\n$result = compact($name, \"location\", \"age\");\nprint_r($result);\n?>",
      "solution": "<?php\n$firstname = \"Peter\";\n$lastname = \"Griffin\";\n$age = \"41\";\n$name = array(\"firstname\", \"lastname\");\n$result = compact($name, \"location\", \"age\");\nprint_r($result);\n?>"
    }
  ],
  "related_topics": [
    {
      "id": "b26df412-3b43-4066-a192-1a7b3e90e79d",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "e74841b7-a05f-4509-89fe-ab1e14cacd17",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "3ca49853-0b0b-4525-bc03-ceeb3b56d170",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Multiple parameters?",
      "options": [
        "None of the above.",
        "None of the above.",
        "allowed",
        "given\nMore Examples\nExample\nUsing a string that does not match a variable"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Multiple parameters is 'allowed'."
    },
    {
      "question": "What is NOTICE level error if an unset variable?",
      "options": [
        "allowed",
        "None of the above.",
        "None of the above.",
        "given\nMore Examples\nExample\nUsing a string that does not match a variable"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of NOTICE level error if an unset variable is 'given\nMore Examples\nExample\nUsing a string that does not match a variable'."
    }
  ],
  "summary": "This tutorial covers PHPcompact()Function concepts and techniques. You'll learn how to use PHPcompact()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPcompact()Function and how to apply it in your projects."
}