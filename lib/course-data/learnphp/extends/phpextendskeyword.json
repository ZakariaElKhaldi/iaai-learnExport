{
  "id": "050c01ee-389d-4615-952e-837a4b38b5af",
  "title": "PHPextendsKeyword",
  "slug": "phpextendskeyword",
  "metadata": {
    "description": "Learn about PHPextendsKeyword with clear explanations and practical examples.",
    "keywords": [
      "php",
      "class",
      "extends",
      "hello",
      "inheritance",
      "keyword",
      "myclass",
      "public",
      "anotherclass",
      "derived",
      "example"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Php Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "extends"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nextends\nKeyword",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nInherit from a class:\n<?php\nclass MyClass {\npublic function hello() {\necho \n  \"Hello \n  World!\";\n}\n}\nclass AnotherClass extends MyClass {\n}\n$obj = new \n  AnotherClass();\n$obj->hello();\n?>\n\nDefinition and Usage\nThe\nextends\nkeyword is used to derive a class from another class. This is called\ninheritance. A derived class has all of the public and protected properties of the class that it\nis derived from.\nRelated Pages\nRead more about inheritance in our\nPHP OOP - Inheritance Tutorial\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\nclass MyClass {\npublic function hello() {\necho \n  \"Hello \n  World!\";\n}\n}\nclass AnotherClass extends MyClass {\n}\n$obj = new \n  AnotherClass();\n$obj->hello();\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\nclass MyClass {\npublic function hello() {\necho \n  \"Hello \n  World!\";\n}\n}\nclass AnotherClass extends MyClass {\n}\n$obj = new \n# TODO: Complete this line\n$obj->hello();\n?>",
      "solution": "<?php\nclass MyClass {\npublic function hello() {\necho \n  \"Hello \n  World!\";\n}\n}\nclass AnotherClass extends MyClass {\n}\n$obj = new \n  AnotherClass();\n$obj->hello();\n?>"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "dbae0613-cc69-4a3c-9f96-b015e4f41bbf",
      "title": "Php Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "e5cd08cf-5c7a-41fc-b1e3-00cdba1ef369",
      "title": "Php Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "cfbb2318-391a-43e2-b692-6eb00cd9d84e",
      "title": "Php Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Definition and Usage\nThe\nextends\nkeyword?",
      "options": [
        "None of the above.",
        "None of the above.",
        "used to derive a class from another class",
        "called\ninheritance"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Definition and Usage\nThe\nextends\nkeyword is 'used to derive a class from another class'."
    },
    {
      "question": "What is This?",
      "options": [
        "None of the above.",
        "used to derive a class from another class",
        "None of the above.",
        "called\ninheritance"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of This is 'called\ninheritance'."
    }
  ],
  "summary": "This tutorial covers PHPextendsKeyword concepts and techniques. You'll learn how to use PHPextendsKeyword effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPextendsKeyword and how to apply it in your projects."
}