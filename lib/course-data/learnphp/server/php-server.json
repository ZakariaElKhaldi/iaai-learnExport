{
  "id": "18d1e401-0844-40e7-b056-6f87bb021874",
  "title": "PHP - $_SERVER",
  "slug": "php-server",
  "metadata": {
    "description": "Learn about PHP - $_SERVER with clear explanations and practical examples.",
    "keywords": [
      "returns",
      "server",
      "current",
      "script",
      "host",
      "echo",
      "page",
      "request",
      "name",
      "user"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Php Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "$_SERVER"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP - $_SERVER",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "$_SERVER\n$_SERVER\nis a PHP super global variable which holds information about headers, \npaths, and script locations.\nThe example below shows how to use some of the elements in\n$_SERVER\n:\nExample\necho $_SERVER['PHP_SELF'];\necho $_SERVER['SERVER_NAME'];\necho $_SERVER['HTTP_HOST'];\necho $_SERVER['HTTP_REFERER'];\necho $_SERVER['HTTP_USER_AGENT'];\necho $_SERVER['SCRIPT_NAME'];\n\nThe following table lists the most important elements that can go inside\n$_SERVER\n:\nElement/Code\nDescription\n$_SERVER['PHP_SELF']\nReturns the filename of the currently executing script\n$_SERVER['GATEWAY_INTERFACE']\nReturns the version of the Common Gateway Interface (CGI) the server is \nusing\n$_SERVER['SERVER_ADDR']\nReturns the IP address of the host server\n$_SERVER['SERVER_NAME']\nReturns the name of the host server (such as \n$_SERVER['SERVER_SOFTWARE']\nReturns the server identification string (such as Apache/2.2.24)\n$_SERVER['SERVER_PROTOCOL']\nReturns the name and revision of the information protocol (such as HTTP/1.1)\n$_SERVER['REQUEST_METHOD']\nReturns the request method used to access the page (such as POST)\n$_SERVER['REQUEST_TIME']\nReturns the timestamp of the start of the request (such as 1377687496)\n$_SERVER['QUERY_STRING']\nReturns the query string if the page is accessed via a query string\n$_SERVER['HTTP_ACCEPT']\nReturns the Accept header from the current request\n$_SERVER['HTTP_ACCEPT_CHARSET']\nReturns the Accept_Charset header from the current request (such as \nutf-8,ISO-8859-1)\n$_SERVER['HTTP_HOST']\nReturns the Host header from the current request\n$_SERVER['HTTP_REFERER']\nReturns the complete URL of the current page (not reliable because not all \nuser-agents support it)\n$_SERVER['HTTPS']\nIs the script queried through a secure HTTP protocol\n$_SERVER['REMOTE_ADDR']\nReturns the IP address from where the user is viewing the current page\n$_SERVER['REMOTE_HOST']\nReturns the Host name from where the user is viewing the current page\n$_SERVER['REMOTE_PORT']\nReturns the port being used on the user's machine to communicate with the \nweb server\n$_SERVER['SCRIPT_FILENAME']\nReturns the absolute pathname of the currently executing script\n$_SERVER['SERVER_ADMIN']\nReturns the value given to the SERVER_ADMIN directive in the web server \nconfiguration file (if your script runs on a virtual host, it will be the value \ndefined for that virtual host) (such as someone@.com)\n$_SERVER['SERVER_PORT']\nReturns the port on the server machine being used by the web server for \ncommunication (such as 80)\n$_SERVER['SERVER_SIGNATURE']\nReturns the server version and virtual host name which are added to \nserver-generated pages\n$_SERVER['PATH_TRANSLATED']\nReturns the file system based path to the current script\n$_SERVER['SCRIPT_NAME']\nReturns the path of the current script\n$_SERVER['SCRIPT_URI']\nReturns the URI of the current page\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "63f467ae-ebd5-45ee-a54a-036703227de4",
      "title": "Php Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "434c2f62-72ae-4f5a-b9c3-46efbd5a45f9",
      "title": "Php Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "357be209-2580-40b1-8385-0b2113e22523",
      "title": "Php Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is SERVER?",
      "options": [
        "using\n$_SERVER['SERVER_ADDR']\nReturns the IP address of the host server\n$_SERVER['SERVER_NAME']\nReturns the name of the host server (such as \n$_SERVER['SERVER_SOFTWARE']\nReturns the server identification string (such as Apache/2",
        "None of the above.",
        "None of the above.",
        "a PHP super global variable which holds information about headers"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of SERVER is 'a PHP super global variable which holds information about headers'."
    },
    {
      "question": "What is the server?",
      "options": [
        "None of the above.",
        "using\n$_SERVER['SERVER_ADDR']\nReturns the IP address of the host server\n$_SERVER['SERVER_NAME']\nReturns the name of the host server (such as \n$_SERVER['SERVER_SOFTWARE']\nReturns the server identification string (such as Apache/2",
        "a PHP super global variable which holds information about headers",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of the server is 'using\n$_SERVER['SERVER_ADDR']\nReturns the IP address of the host server\n$_SERVER['SERVER_NAME']\nReturns the name of the host server (such as \n$_SERVER['SERVER_SOFTWARE']\nReturns the server identification string (such as Apache/2'."
    }
  ],
  "summary": "This tutorial covers PHP - $_SERVER concepts and techniques. You'll learn how to use PHP - $_SERVER effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHP - $_SERVER and how to apply it in your projects."
}