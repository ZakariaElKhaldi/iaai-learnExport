{
  "id": "51c4ec91-d590-494e-a9d2-bb633542305e",
  "title": "PHPsha1_file()Function",
  "slug": "phpsha1-filefunction",
  "metadata": {
    "description": "Learn about PHPsha1_file()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "hash",
      "file",
      "test",
      "message",
      "function",
      "output",
      "algorithm",
      "digest",
      "signature",
      "example"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "sha1_file()"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nsha1_file()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nCalculate the SHA-1 hash of the text file \"test.txt\":\n<?php\n$filename = \"test.txt\";\n$sha1file = sha1_file($filename);\necho $sha1file;\n?>\nThe output of the code above will be:\naaf4c61ddcc5e8a2dabede0f3b482cd9aea9434d\nDefinition and Usage\nThe sha1_file() function calculates the SHA-1 hash of a file.\nThe sha1_file() function uses the US Secure Hash Algorithm 1.\nFrom RFC 3174 - The US Secure Hash Algorithm 1:\n\"SHA-1 produces a 160-bit output called \na message digest. The message digest can then, for example, be input to a \nsignature algorithm which generates or verifies the signature for the message. \nSigning the message digest rather than the message often improves the efficiency \nof the process because the message digest is usually much smaller in size than \nthe message. The same hash algorithm must be used by the verifier of a digital \nsignature as was used by the creator of the digital signature.\"\nThis function returns the calculated SHA-1 hash on success, or FALSE on failure.\nSyntax\nsha1_file(\nfile,raw\n)\nParameter Values\nParameter\nDescription\nfile\nRequired. The file to be calculated\nraw\nOptional. A boolean value that specifies hex or binary output format:\nTRUE - Raw 20 character binary format\nFALSE - Default. 40 character hex number\nTechnical Details\nReturn Value:\nReturns the calculated SHA-1 hash on success, or FALSE on failure\nPHP Version:\n4.3.0+\nChangelog:\nAs of PHP 5.1, it is possible to use sha1_file() with wrappers, e.g.\nsha1_file(\"https://.com/..\")\nMore Examples\nExample\nStore the SHA-1 hash of \"test.txt\" in a file:\n<?php\n$sha1file = sha1_file(\"test.txt\");\nfile_put_contents(\"sha1file.txt\",$sha1file);\n?>\nTest if \"test.txt\" has been changed (that is if the SHA-1 hash has been changed):\n<?php\n$sha1file = file_get_contents(\"sha1file.txt\");\nif (sha1_file(\"test.txt\") == $sha1file)\n{\necho \"The file is ok.\";\n}\nelse\n{\necho \"The file has been changed.\";\n}\n?>\nThe output of the code above could be:\nThe file is ok.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\n$filename = \"test.txt\";\n$sha1file = sha1_file($filename);\necho $sha1file;\n?>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<?php\n$sha1file = sha1_file(\"test.txt\");\nfile_put_contents(\"sha1file.txt\",$sha1file);\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n$filename = \"test.txt\";\n$sha1file = sha1_file($filename);\n# TODO: Complete this line\n?>",
      "solution": "<?php\n$filename = \"test.txt\";\n$sha1file = sha1_file($filename);\necho $sha1file;\n?>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n$sha1file = sha1_file(\"test.txt\");\nfile_put_contents(\"sha1file.txt\",$sha1file);\n# TODO: Complete this line",
      "solution": "<?php\n$sha1file = sha1_file(\"test.txt\");\nfile_put_contents(\"sha1file.txt\",$sha1file);\n?>"
    }
  ],
  "related_topics": [
    {
      "id": "6539323d-7fc2-48d5-95bf-1c11a6a51529",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "501eec65-5900-4348-9ea4-f779018b47d0",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "b9274ac3-c1a4-453a-a03c-a1da04bc69e0",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Signing the message digest rather than the message often improves the efficiency \nof the process because the message digest?",
      "options": [
        "None of the above.",
        "possible to use sha1_file() with wrappers",
        "None of the above.",
        "usually much smaller in size than \nthe message"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Signing the message digest rather than the message often improves the efficiency \nof the process because the message digest is 'usually much smaller in size than \nthe message'."
    },
    {
      "question": "What is it?",
      "options": [
        "possible to use sha1_file() with wrappers",
        "usually much smaller in size than \nthe message",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of it is 'possible to use sha1_file() with wrappers'."
    }
  ],
  "summary": "This tutorial covers PHPsha1_file()Function concepts and techniques. You'll learn how to use PHPsha1_file()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPsha1_file()Function and how to apply it in your projects."
}