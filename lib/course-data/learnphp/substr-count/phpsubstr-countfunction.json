{
  "id": "84b4ea77-c8b9-432d-8422-12ec8202ff82",
  "title": "PHPsubstr_count()Function",
  "slug": "phpsubstr-countfunction",
  "metadata": {
    "description": "Learn about PHPsubstr_count()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "string",
      "length",
      "echo",
      "start",
      "function",
      "example",
      "number",
      "nice",
      "substring",
      "parameters"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "substr_count()"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nsubstr_count()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nCount the number of times \"world\" occurs in the string:\n<?php\necho substr_count(\"Hello world. The world is nice\",\"world\");\n?>\n\nThe substr_count() function counts the number of times a substring occurs in a string.\nNote:\nThe substring is case-sensitive.\nNote:\nThis function does not count overlapped substrings (see example 2).\nNote:\nThis function generates a warning if the start \nparameter plus the length parameter is greater than the string length (see example 3).\nSyntax\nsubstr_count(\nstring,substring,start,length\n)\nParameter Values\nParameter\nDescription\nstring\nRequired. Specifies the string to check\nsubstring\nRequired. Specifies the string to search for\nstart\nOptional. Specifies where in string to start searching. If negative, it \n    starts counting from the end of the string\nlength\nOptional. Specifies the length of the search\nTechnical Details\nReturn Value:\nReturns the\u00a0 the number of times the substring occurs in the string\nPHP Version:\n4+\nChangelog:\nPHP 7.1 - The\nlength\nparameters can be 0 or a negative number.\nPHP 7.1 - The\nstart\nparameters can be a negative number.\nPHP 5.1 - The\nstart\nand\nlength\nparameters were added.\nMore Examples\nExample\nUsing all parameters:\n<?php\n$str = \"This is nice\";\necho strlen($str).\"<br>\"; // Using strlen() to return the string length\necho substr_count($str,\"is\").\"<br>\"; // The number of times \"is\" occurs in the string\necho substr_count($str,\"is\",2).\"<br>\"; // The string is now reduced to \"is is nice\"\necho substr_count($str,\"is\",3).\"<br>\"; // The string is now reduced to \"s is nice\"\necho substr_count($str,\"is\",3,3).\"<br>\"; // The string is now reduced to \"s i\"\n?>\n\nExample\nOverlapped substrings:\n<?php\n$str = \"abcabcab\";\necho substr_count($str,\"abcab\"); // This function does not count overlapped substrings\n?>\n\nExample\nIf the start and length parameters exceeds the string length, this function \nwill output a warning:\n<?php\necho $str = \"This is nice\";\nsubstr_count($str,\"is\",3,9);\n?>\nThis will output a warning because the length value exceeds the string length (3+9 is greater than 12)\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\necho substr_count(\"Hello world. The world is nice\",\"world\");\n?>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<?php\n$str = \"This is nice\";\necho strlen($str).\"<br>\"; // Using strlen() to return the string length\necho substr_count($str,\"is\").\"<br>\"; // The number of times \"is\" occurs in the string\necho substr_count($str,\"is\",2).\"<br>\"; // The string is now reduced to \"is is nice\"\necho substr_count($str,\"is\",3).\"<br>\"; // The string is now reduced to \"s is nice\"\necho substr_count($str,\"is\",3,3).\"<br>\"; // The string is now reduced to \"s i\"\n?>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<?php\n$str = \"abcabcab\";\necho substr_count($str,\"abcab\"); // This function does not count overlapped substrings\n?>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<?php\necho $str = \"This is nice\";\nsubstr_count($str,\"is\",3,9);\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n# TODO: Complete this line\n?>",
      "solution": "<?php\necho substr_count(\"Hello world. The world is nice\",\"world\");\n?>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n$str = \"This is nice\";\necho strlen($str).\"<br>\"; // Using strlen() to return the string length\necho substr_count($str,\"is\").\"<br>\"; // The number of times \"is\" occurs in the string\n# TODO: Complete this line\necho substr_count($str,\"is\",3).\"<br>\"; // The string is now reduced to \"s is nice\"\necho substr_count($str,\"is\",3,3).\"<br>\"; // The string is now reduced to \"s i\"\n?>",
      "solution": "<?php\n$str = \"This is nice\";\necho strlen($str).\"<br>\"; // Using strlen() to return the string length\necho substr_count($str,\"is\").\"<br>\"; // The number of times \"is\" occurs in the string\necho substr_count($str,\"is\",2).\"<br>\"; // The string is now reduced to \"is is nice\"\necho substr_count($str,\"is\",3).\"<br>\"; // The string is now reduced to \"s is nice\"\necho substr_count($str,\"is\",3,3).\"<br>\"; // The string is now reduced to \"s i\"\n?>"
    }
  ],
  "related_topics": [
    {
      "id": "3dca4c7f-0f88-4f9c-b8b9-ff4638937826",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "cf6cd41b-84eb-4f64-a70f-fafb4542da59",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "8849f890-5423-47c1-a663-47a57e6ca001",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The world?",
      "options": [
        "nice\"",
        "None of the above.",
        "case-sensitive",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of The world is 'nice\"'."
    },
    {
      "question": "What is The substring?",
      "options": [
        "None of the above.",
        "nice\"",
        "case-sensitive",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of The substring is 'case-sensitive'."
    }
  ],
  "summary": "This tutorial covers PHPsubstr_count()Function concepts and techniques. You'll learn how to use PHPsubstr_count()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPsubstr_count()Function and how to apply it in your projects."
}