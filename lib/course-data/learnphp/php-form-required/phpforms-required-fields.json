{
  "id": "5d238ea6-0a50-45e4-a84a-147e9f6edd85",
  "title": "PHPForms - Required Fields",
  "slug": "phpforms-required-fields",
  "metadata": {
    "description": "Learn about PHPForms - Required Fields with clear explanations and practical examples.",
    "keywords": [
      "name",
      "required",
      "error",
      "gender",
      "empty",
      "input",
      "website",
      "comment",
      "span",
      "fields"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Php Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "PHP Form Required"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nForms - Required Fields",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "This chapter shows how to make input fields required and create error messages if needed.\nPHP - Required Fields\nFrom the validation rules table on the \n\"Gender\" fields are required. These fields cannot be empty and must be filled out in the \nHTML form.\nField\nValidation Rules\nName\nRequired. + Must only contain letters and whitespace\nE-mail\nRequired. + Must contain a valid email address (with @ and .)\nWebsite\nOptional. If present, it must contain a valid URL\nComment\nOptional. Multi-line input field (textarea)\nGender\nRequired. Must select one\nIn the \nIn the following code we have added some new variables:\n$nameErr\n,\n$emailErr\n,\n$genderErr\n, and\n$websiteErr\n. These error variables will hold error messages for the \nrequired fields. We have also added an\nif else\nstatement for each\n$_POST\nvariable. This \nchecks if the\n$_POST\nvariable is empty (with the PHP\nempty()\nfunction). If it is empty, an error message is stored in the different error variables, \nand if it is not empty, it sends the user input data through the\ntest_input()\nfunction:\n// define variables and set to empty values\n$nameErr = $emailErr = $genderErr = $websiteErr = \"\";\n$name = $email = $gender = $comment = $website = \"\";\n\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n  if (empty($_POST[\"name\"])) {\n    $nameErr = \"Name is required\";\n  } else {\n    $name = test_input($_POST[\"name\"]);\n  }\n\nif (empty($_POST[\"email\"])) {\n    $emailErr = \"Email is required\";\n  } else {\n    $email = test_input($_POST[\"email\"]);\n  }\n\nif (empty($_POST[\"website\"])) {\n    $website = \"\";\n  } else {\n    $website = test_input($_POST[\"website\"]);\n  }\n\nif (empty($_POST[\"comment\"])) {\n    $comment = \"\";\n  } else {\n    $comment = test_input($_POST[\"comment\"]);\n  }\n\nif (empty($_POST[\"gender\"])) {\n    $genderErr = \"Gender is required\";\n  } else {\n    $gender = test_input($_POST[\"gender\"]);\n  }\n}\nPHP - Display The Error Messages\nThen in the HTML form, we add a little script after each required field, \nwhich generates the correct error message if needed (that is if the user tries to submit \nthe form without filling out the required fields):\nExample\n<form method=\"post\" action=\"<?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]);?>\">\n\nName: <input type=\"text\" name=\"name\">\n<span class=\"error\">* <?php echo $nameErr;?></span>\n<br><br>\nE-mail:\n<input type=\"text\" name=\"email\">\n<span class=\"error\">* <?php echo $emailErr;?></span>\n<br><br>\nWebsite:\n<input type=\"text\" name=\"website\">\n<span class=\"error\"><?php echo $websiteErr;?></span>\n<br><br>\nComment: <textarea name=\"comment\" rows=\"5\" cols=\"40\"></textarea>\n<br><br>\nGender:\n<input type=\"radio\" name=\"gender\" value=\"female\">Female\n<input type=\"radio\" name=\"gender\" value=\"male\">Male\n<input type=\"radio\" name=\"gender\" value=\"other\">Other\n<span class=\"error\">* <?php echo $genderErr;?></span>\n<br><br>\n<input type=\"submit\" name=\"submit\" value=\"Submit\">\n\n</form>\nRun Example \u00bb\nThe \ncontain only letters and whitespace?\", and \"Does the E-mail field contain a \nvalid e-mail address syntax?\", and if filled out, \"Does the Website field contain \na valid URL?\".\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "3c0a5ffc-6f91-4f34-bf4d-6eef35ebdb8d",
      "title": "Php Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "60f6d75e-9d8d-4eb9-b9ea-ace500e26758",
      "title": "Php Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "a1d3528b-de67-465d-92fd-f18da53cf3cf",
      "title": "Php Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is fields?",
      "options": [
        "required",
        "None of the above.",
        "None of the above.",
        "empty (with the PHP\nempty()\nfunction)"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of fields is 'required'."
    },
    {
      "question": "What is POST\nvariable?",
      "options": [
        "required",
        "empty (with the PHP\nempty()\nfunction)",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of POST\nvariable is 'empty (with the PHP\nempty()\nfunction)'."
    }
  ],
  "summary": "This tutorial covers PHPForms - Required Fields concepts and techniques. You'll learn how to use PHPForms - Required Fields effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPForms - Required Fields and how to apply it in your projects."
}