{
  "id": "cb474431-5431-4285-8d41-28f31a8016b8",
  "title": "PHPMagic Constants",
  "slug": "phpmagic-constants",
  "metadata": {
    "description": "Learn about PHPMagic Constants with clear explanations and practical examples.",
    "keywords": [
      "constants",
      "name",
      "class",
      "magic",
      "used",
      "inside",
      "returned",
      "function",
      "namespace",
      "predefined"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "PHP Magic Constants"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nMagic Constants",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "PHP Predefined Constants\nPHP has nine predefined constants that change value depending on where they are used, \nalso called the\n\"magic constants\".\nThese magic constants are written with a double underscore at the start and the end,\nexcept for the ClassName::class constant.\nMagic Constants\nHere are the magic constants, with descriptions and examples:\nConstant\nDescription\n__CLASS__\nIf used inside a class, the class name is returned.\nTry it \u00bb\n__DIR__\nThe directory of the file.\nTry it \u00bb\n__FILE__\nThe file name including the full path.\nTry it \u00bb\n__FUNCTION__\nIf inside a function, the function name is returned.\nTry it \u00bb\n__LINE__\nThe current line number.\nTry it \u00bb\n__METHOD__\nIf used inside a function that belongs to a class, both class and function name is returned.\nTry it \u00bb\n__NAMESPACE__\nIf used inside a namespace, the name of the namespace is returned.\nTry it \u00bb\n__TRAIT__\nIf used inside a trait, the trait name is returned.\nTry it \u00bb\nClassName::class\nReturns the name of the specified class and the name of the namespace, if any.\nTry it \u00bb\nNote:\nThe magic constants are case-insensitive, meaning\n__LINE__\nreturns the same as\n__line__\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "48cd222c-3b08-4a7e-9beb-4f163e0237d8",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "42394b2b-5d35-45c2-bb95-3e4901d39449",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "773333e0-e5c7-40fb-88c8-c19fcfeb6313",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is PHP\nMagic Constants\n\nPHP Predefined Constants\nPHP has nine predefined constants that change value depending on where they?",
      "options": [
        "written with a double underscore at the start and the end",
        "used",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of PHP\nMagic Constants\n\nPHP Predefined Constants\nPHP has nine predefined constants that change value depending on where they is 'used'."
    },
    {
      "question": "What is These magic constants?",
      "options": [
        "None of the above.",
        "used",
        "None of the above.",
        "written with a double underscore at the start and the end"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of These magic constants is 'written with a double underscore at the start and the end'."
    }
  ],
  "summary": "This tutorial covers PHPMagic Constants concepts and techniques. You'll learn how to use PHPMagic Constants effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPMagic Constants and how to apply it in your projects."
}