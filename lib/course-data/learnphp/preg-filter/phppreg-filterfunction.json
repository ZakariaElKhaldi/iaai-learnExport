{
  "id": "32fa9de7-80b9-4cc9-bded-5065c2025e7e",
  "title": "PHPpreg_filter()Function",
  "slug": "phppreg-filterfunction",
  "metadata": {
    "description": "Learn about PHPpreg_filter()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "string",
      "input",
      "function",
      "array",
      "strings",
      "returns",
      "pattern",
      "replacement",
      "replacements",
      "replaced"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "preg_filter()"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\npreg_filter()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nWrap numbers in brackets in a list of strings:\n<?php\n$input = [\n\"It is 5 o'clock\",\n\"40 days\",\n\"No \n  numbers here\",\n\"In the year 2000\"\n];\n$result = \n  preg_filter('/[0-9]+/', '($0)', $input);\nprint_r($result);\n?>\n\nDefinition and Usage\nThe\npreg_filter()\nfunction returns a string or array of strings in which matches of the pattern\nhave been replaced with the replacement string.\nIf the input is an array, this function returns an array. If the input is a string then this\nfunction returns a string.\nThis function is similar to\npreg_replace()\nwith one difference: When a match for the pattern\nis not found in an input string, the string will not be used in the return value. In this\nscenario, if the input is a string instead of an array then the function returns\nnull\n.\nReplacement strings may contain backreferences in the form \\n or $n where\nn\nis the index\nof a group in the pattern. In the returned string, instances of \\n and $n will be replaced with\nthe substring that was matched by the group or, if \\0 or $0 are used, by the whole\nexpression.\nSyntax\npreg_filter(\npattern, replacement, input, limit, count\n)\nParameter Values\nParameter\nDescription\npattern\nRequired. Contains a regular expression indicating what to search for\nreplacement\nRequired. A string which will replace the matched patterns. It may contain backreferences\ninput\nRequired. A string or array of strings in which the replacements are being performed\nlimit\nOptional. Defaults to -1, meaning unlimited. Sets a limit to how many replacements can be done in each string\ncount\nOptional. After the function has executed, this variable will contain a number indicating how many replacements were performed\nTechnical Details\nReturn Value:\nReturns an array of replaced strings if the input was an array, a\nstring with replacements made if the input was a string or null if\nthe input was a string and no matches were found\nPHP Version:\n5.3.0\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\n$input = [\n\"It is 5 o'clock\",\n\"40 days\",\n\"No \n  numbers here\",\n\"In the year 2000\"\n];\n$result = \n  preg_filter('/[0-9]+/', '($0)', $input);\nprint_r($result);\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n# TODO: Complete this line\n\"It is 5 o'clock\",\n\"40 days\",\n\"No \n  numbers here\",\n\"In the year 2000\"\n];\n$result = \n  preg_filter('/[0-9]+/', '($0)', $input);\nprint_r($result);\n?>",
      "solution": "<?php\n$input = [\n\"It is 5 o'clock\",\n\"40 days\",\n\"No \n  numbers here\",\n\"In the year 2000\"\n];\n$result = \n  preg_filter('/[0-9]+/', '($0)', $input);\nprint_r($result);\n?>"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "dcc7295a-2d1d-4429-9e7a-a64dae27ad45",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "775cc71e-d12d-4065-b59c-c9f53ba088ae",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "bbf92061-7a4c-4d79-b126-057d8bd26654",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is It?",
      "options": [
        "5 o'clock\"",
        "an array",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of It is '5 o'clock\"'."
    },
    {
      "question": "What is If the input?",
      "options": [
        "5 o'clock\"",
        "None of the above.",
        "None of the above.",
        "an array"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of If the input is 'an array'."
    }
  ],
  "summary": "This tutorial covers PHPpreg_filter()Function concepts and techniques. You'll learn how to use PHPpreg_filter()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPpreg_filter()Function and how to apply it in your projects."
}