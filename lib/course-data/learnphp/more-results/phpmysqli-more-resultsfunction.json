{
  "id": "c0c22685-21e4-420d-9688-f772d18f6758",
  "title": "PHPmysqli more_results()Function",
  "slug": "phpmysqli-more-resultsfunction",
  "metadata": {
    "description": "Learn about PHPmysqli more_results()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "mysqli",
      "result",
      "style",
      "select",
      "lastname",
      "query",
      "printf",
      "example",
      "mysql",
      "multi"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "more_results"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nmysqli more_results()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example - Object Oriented style\nPerform multiple queries against the database:\n<?php\n$mysqli = new mysqli(\"localhost\",\"my_user\",\"my_password\",\"my_db\");\nif ($mysqli -> connect_errno) {\necho \"Failed to connect to MySQL: \" . $mysqli -> connect_error;\nexit();\n}\n$sql = \"SELECT Lastname FROM Persons ORDER BY LastName;\";\n$sql .= \"SELECT Country FROM Customers\";\n// Execute multi query\nif ($mysqli \n  -> multi_query($sql)) {\ndo {\n// Store first result set\nif ($result = \n  $mysqli -> store_result()) {\nwhile ($row = \n  $result -> fetch_row()) {\nprintf(\"%s\\n\", $row[0]);\n}\n$result \n  -> free_result();\n}\n// if there are more result-sets, the print a \n  divider\nif ($mysqli -> more_results()) {\nprintf(\"-------------\\n\");\n}\n//Prepare \n} while ($mysqli \n  -> \n}\n$mysqli -> close();\n?>\nLook at example of procedural style at the bottom.\nDefinition and Usage\nThe more_results() / mysqli_more_results() function checks if there are any more \nquery results from a multi query.\nSyntax\nObject oriented style:\n$mysqli -> \n  more_results()\nProcedural style:\nmysqli_more_results(\nconnection\n)\nParameter Values\nParameter\nDescription\nconnection\nRequired. Specifies the MySQL connection to use\nTechnical Details\nReturn Value:\nTRUE if there is one or more result sets available from\nmulti_query()\n. FALSE otherwise\nPHP Version:\n5+\nExample - Procedural style\nPerform multiple queries against the database:\n<?php\n$con = mysqli_connect(\"localhost\",\"my_user\",\"my_password\",\"my_db\");\nif (mysqli_connect_errno())\u00a0{\necho \"Failed to connect to MySQL: \" . mysqli_connect_error();\nexit();\n}\n$sql = \"SELECT Lastname FROM Persons ORDER BY LastName;\";\n$sql .= \"SELECT Country FROM Customers\";\n// Execute multi query\nif (mysqli_multi_query($con, $sql)) {\ndo {\n// Store first result set\nif ($result = mysqli_store_result($con)) {\nwhile ($row = mysqli_fetch_row($result)) {\nprintf(\"%s\\n\", $row[0]);\n}\nmysqli_free_result($result);\n}\n// if there are more result-sets, the print a \n  divider\nif (mysqli_more_results($con)) {\nprintf(\"-------------\\n\");\n}\n//Prepare \n} while (mysqli_\n}\nmysqli_close($con);\n?>\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example - Object Oriented style",
      "content": "",
      "order": 3,
      "code": "<?php\n$mysqli = new mysqli(\"localhost\",\"my_user\",\"my_password\",\"my_db\");\nif ($mysqli -> connect_errno) {\necho \"Failed to connect to MySQL: \" . $mysqli -> connect_error;\nexit();\n}\n$sql = \"SELECT Lastname FROM Persons ORDER BY LastName;\";\n$sql .= \"SELECT Country FROM Customers\";\n// Execute multi query\nif ($mysqli \n  -> multi_query($sql)) {\ndo {\n// Store first result set\nif ($result = \n  $mysqli -> store_result()) {\nwhile ($row = \n  $result -> fetch_row()) {\nprintf(\"%s\\n\", $row[0]);\n}\n$result \n  -> free_result();\n}\n// if there are more result-sets, the print a \n  divider\nif ($mysqli -> more_results()) {\nprintf(\"-------------\\n\");\n}\n//Prepare next result set\n} while ($mysqli \n  -> next_result());\n}\n$mysqli -> close();\n?>",
      "language": "html",
      "explanation": "Example of example - object oriented style"
    },
    {
      "type": "code_example",
      "title": "Example - Procedural style",
      "content": "",
      "order": 4,
      "code": "<?php\n$con = mysqli_connect(\"localhost\",\"my_user\",\"my_password\",\"my_db\");\nif (mysqli_connect_errno())\u00a0{\necho \"Failed to connect to MySQL: \" . mysqli_connect_error();\nexit();\n}\n$sql = \"SELECT Lastname FROM Persons ORDER BY LastName;\";\n$sql .= \"SELECT Country FROM Customers\";\n// Execute multi query\nif (mysqli_multi_query($con, $sql)) {\ndo {\n// Store first result set\nif ($result = mysqli_store_result($con)) {\nwhile ($row = mysqli_fetch_row($result)) {\nprintf(\"%s\\n\", $row[0]);\n}\nmysqli_free_result($result);\n}\n// if there are more result-sets, the print a \n  divider\nif (mysqli_more_results($con)) {\nprintf(\"-------------\\n\");\n}\n//Prepare next result set\n} while (mysqli_next_result($con));\n}\nmysqli_close($con);\n?>",
      "language": "html",
      "explanation": "Example of example - procedural style"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n$mysqli = new mysqli(\"localhost\",\"my_user\",\"my_password\",\"my_db\");\nif ($mysqli -> connect_errno) {\necho \"Failed to connect to MySQL: \" . $mysqli -> connect_error;\nexit();\n}\n$sql = \"SELECT Lastname FROM Persons ORDER BY LastName;\";\n$sql .= \"SELECT Country FROM Customers\";\n// Execute multi query\nif ($mysqli \n  -> multi_query($sql)) {\ndo {\n// Store first result set\nif ($result = \n  $mysqli -> store_result()) {\nwhile ($row = \n  $result -> fetch_row()) {\nprintf(\"%s\\n\", $row[0]);\n}\n$result \n  -> free_result();\n# TODO: Complete this line\n// if there are more result-sets, the print a \n  divider\nif ($mysqli -> more_results()) {\nprintf(\"-------------\\n\");\n}\n//Prepare next result set\n} while ($mysqli \n  -> next_result());\n}\n$mysqli -> close();\n?>",
      "solution": "<?php\n$mysqli = new mysqli(\"localhost\",\"my_user\",\"my_password\",\"my_db\");\nif ($mysqli -> connect_errno) {\necho \"Failed to connect to MySQL: \" . $mysqli -> connect_error;\nexit();\n}\n$sql = \"SELECT Lastname FROM Persons ORDER BY LastName;\";\n$sql .= \"SELECT Country FROM Customers\";\n// Execute multi query\nif ($mysqli \n  -> multi_query($sql)) {\ndo {\n// Store first result set\nif ($result = \n  $mysqli -> store_result()) {\nwhile ($row = \n  $result -> fetch_row()) {\nprintf(\"%s\\n\", $row[0]);\n}\n$result \n  -> free_result();\n}\n// if there are more result-sets, the print a \n  divider\nif ($mysqli -> more_results()) {\nprintf(\"-------------\\n\");\n}\n//Prepare next result set\n} while ($mysqli \n  -> next_result());\n}\n$mysqli -> close();\n?>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n$con = mysqli_connect(\"localhost\",\"my_user\",\"my_password\",\"my_db\");\nif (mysqli_connect_errno())\u00a0{\necho \"Failed to connect to MySQL: \" . mysqli_connect_error();\nexit();\n}\n$sql = \"SELECT Lastname FROM Persons ORDER BY LastName;\";\n$sql .= \"SELECT Country FROM Customers\";\n# TODO: Complete this line\nif (mysqli_multi_query($con, $sql)) {\ndo {\n// Store first result set\nif ($result = mysqli_store_result($con)) {\nwhile ($row = mysqli_fetch_row($result)) {\nprintf(\"%s\\n\", $row[0]);\n}\nmysqli_free_result($result);\n}\n// if there are more result-sets, the print a \n  divider\nif (mysqli_more_results($con)) {\nprintf(\"-------------\\n\");\n}\n//Prepare next result set\n} while (mysqli_next_result($con));\n}\nmysqli_close($con);\n?>",
      "solution": "<?php\n$con = mysqli_connect(\"localhost\",\"my_user\",\"my_password\",\"my_db\");\nif (mysqli_connect_errno())\u00a0{\necho \"Failed to connect to MySQL: \" . mysqli_connect_error();\nexit();\n}\n$sql = \"SELECT Lastname FROM Persons ORDER BY LastName;\";\n$sql .= \"SELECT Country FROM Customers\";\n// Execute multi query\nif (mysqli_multi_query($con, $sql)) {\ndo {\n// Store first result set\nif ($result = mysqli_store_result($con)) {\nwhile ($row = mysqli_fetch_row($result)) {\nprintf(\"%s\\n\", $row[0]);\n}\nmysqli_free_result($result);\n}\n// if there are more result-sets, the print a \n  divider\nif (mysqli_more_results($con)) {\nprintf(\"-------------\\n\");\n}\n//Prepare next result set\n} while (mysqli_next_result($con));\n}\nmysqli_close($con);\n?>"
    }
  ],
  "related_topics": [
    {
      "id": "f3e44245-f9c4-4443-95ff-0810a55bc044",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "9c8d3f3d-b029-4a2e-97ff-38b5ec55fa43",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "3b5966af-569a-4303-bac9-f3bd397d0aef",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is if there?",
      "options": [
        "None of the above.",
        "None of the above.",
        "any more \nquery results from a multi query",
        "more result-sets"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of if there is 'more result-sets'."
    },
    {
      "question": "What is function checks if there?",
      "options": [
        "None of the above.",
        "more result-sets",
        "any more \nquery results from a multi query",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of function checks if there is 'any more \nquery results from a multi query'."
    }
  ],
  "summary": "This tutorial covers PHPmysqli more_results()Function concepts and techniques. You'll learn how to use PHPmysqli more_results()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPmysqli more_results()Function and how to apply it in your projects."
}