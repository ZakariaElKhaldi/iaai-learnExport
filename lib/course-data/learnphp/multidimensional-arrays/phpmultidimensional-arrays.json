{
  "id": "af163558-608d-4b6f-964e-1d9d92616fec",
  "title": "PHPMultidimensional Arrays",
  "slug": "phpmultidimensional-arrays",
  "metadata": {
    "description": "Learn about PHPMultidimensional Arrays with clear explanations and practical examples.",
    "keywords": [
      "array",
      "cars",
      "arrays",
      "echo",
      "dimensional",
      "indices",
      "multidimensional",
      "three",
      "stock",
      "sold"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Php Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "Multidimensional Arrays"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nMultidimensional Arrays",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "In the \nsingle list of key/value pairs.\nHowever, sometimes you want to store values with more than one \nkey. For this, we have multidimensional arrays.\nPHP - Multidimensional Arrays\nA multidimensional array is an array containing one or more arrays.\nPHP supports multidimensional arrays that are two, three, four, five, or \nmore levels deep. However, arrays more than three levels deep are hard to manage for most people.\nThe dimension of an array indicates the number of indices you need to select an element.\nFor a two-dimensional array you need two indices to select an element\nFor a three-dimensional array you need three indices to select an element\nPHP - Two-dimensional Arrays\nA two-dimensional array is an array of arrays (a three-dimensional array is an array of arrays of arrays).\nFirst, take a look at the following table:\nName\nStock\nSold\nVolvo\n22\n18\nBMW\n15\n13\nSaab\n5\n2\nLand Rover\n17\n15\nWe can store the data from the table above in a two-dimensional array, like this:\n$cars = array (\n  array(\"Volvo\",22,18),\n  array(\"BMW\",15,13),\n  array(\"Saab\",5,2),\n  array(\"Land Rover\",17,15)\n);\nNow the two-dimensional $cars array contains four arrays, and it has two indices: row and column.\nTo get access to the elements of the $cars array we must point to the two \nindices (row and column):\nExample\necho $cars[0][0].\": In stock: \".$cars[0][1].\", sold: \".$cars[0][2].\".<br>\";\necho $cars[1][0].\": In stock: \".$cars[1][1].\", sold: \".$cars[1][2].\".<br>\";\necho $cars[2][0].\": In stock: \".$cars[2][1].\", sold: \".$cars[2][2].\".<br>\";\necho $cars[3][0].\": In stock: \".$cars[3][1].\", sold: \".$cars[3][2].\".<br>\";\n\nWe can also put a\nfor\nloop inside another\nfor\nloop to get the elements of the \n$cars array (we still have to point to the two indices):\nExample\nfor ($row = 0; $row < 4; $row++) {\n  echo \"<p><b>Row number $row</b></p>\";\n  echo \"<ul>\";\n    for ($col = 0; $col < 3; $col++) {\n      echo \"<li>\".$cars[$row][$col].\"</li>\";\n    }\n  echo \"</ul>\";\n}\n\nComplete PHP Array Reference\nFor a complete reference of all array functions, go to our complete\nPHP Array Reference\n.\nThe reference contains a brief description, and examples of use, for each function!\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "d6cb2c5c-4cad-4621-88c4-eda4903a9d74",
      "title": "Php Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "daf9f0a7-2270-45d3-a454-d2bb50aab137",
      "title": "Php Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "4b33b251-c21c-4b5a-94cf-771871bff8b5",
      "title": "Php Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Multidimensional Arrays\nA multidimensional array?",
      "options": [
        "None of the above.",
        "None of the above.",
        "two",
        "an array containing one or more arrays"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Multidimensional Arrays\nA multidimensional array is 'an array containing one or more arrays'."
    },
    {
      "question": "What is PHP supports multidimensional arrays that?",
      "options": [
        "two",
        "None of the above.",
        "an array containing one or more arrays",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of PHP supports multidimensional arrays that is 'two'."
    }
  ],
  "summary": "This tutorial covers PHPMultidimensional Arrays concepts and techniques. You'll learn how to use PHPMultidimensional Arrays effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPMultidimensional Arrays and how to apply it in your projects."
}