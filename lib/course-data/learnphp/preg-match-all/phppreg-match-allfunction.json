{
  "id": "ef22a144-8373-41c3-92c7-e0b0acf1e077",
  "title": "PHPpreg_match_all()Function",
  "slug": "phppreg-match-allfunction",
  "metadata": {
    "description": "Learn about PHPpreg_match_all()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "matches",
      "array",
      "string",
      "pattern",
      "found",
      "parameter",
      "element",
      "function",
      "input",
      "expression"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "preg_match_all()"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\npreg_match_all()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nFind all occurrences of \"ain\" in a string:\n<?php\n$str = \"The rain in SPAIN falls mainly on the plains.\";\n$pattern = \n  \"/ain/i\";\nif(preg_match_all($pattern, $str, $matches)) {\nprint_r($matches);\n}\n?>\n\nDefinition and Usage\nThe\npreg_match_all()\nfunction returns the number of matches of a pattern that were found\nin a string and populates a variable with the matches that were found.\nSyntax\npreg_match_all(\npattern, input, matches, flags, offset\n)\nParameter Values\nParameter\nDescription\npattern\nRequired. Contains a regular expression indicating what to search for\ninput\nRequired. The string in which the search will be performed\nmatches\nOptional. The variable used in this parameter will be populated with an array containing all of the matches that were found\nflags\nOptional. A set of options that change how the matches array is structured.\nOne of the following structures may be selected:\nPREG_PATTERN_ORDER - Default. Each element in the\nmatches array is an array of matches from the same\ngrouping in the regular expression, with index 0\ncorresponding to matches of the whole expression and the\nremaining indices for subpattern matches.\nPREG_SET_ORDER - Each element in the matches array\ncontains matches of all groupings for one of the found\nmatches in the string.\nAny number of the following options may be applied:\nPREG_OFFSET_CAPTURE - When this option is enabled,\neach match, instead of being a string, will be an array\nwhere the first element is a substring containing the match\nand the second element is the position of the first\ncharacter of the substring in the input.\nPREG_UNMATCHED_AS_NULL - When this option is\nenabled, unmatched subpatterns will be returned as NULL\ninstead of as an empty string.\noffset\nOptional. Defaults to 0. Indicates how far into the string to begin\nsearching. The preg_match() function will not find matches that\noccur before the position given in this parameter\nTechnical Details\nReturn Value:\nReturns the number of matches found or false if an error occurred\nPHP Version:\n4+\nChangelog:\nPHP 7.2 - Added the PREG_UNMATCHED_AS_NULL flag\nPHP 5.4 - The matches parameter became optional\nPHP 5.3.6 - The function returns false when the offset is longer\nthan the length of the input\nPHP 5.2.2 - Named subpatterns can use the (?'name') and (?\n<name>) syntax in addition to the \nMore Examples\nExample\nUse PREG_PATTERN_ORDER to set the structure of the\nmatches\narray. In\nthis example, each element in the\nmatches\narray has all of the matches for\none of the groupings of the regular expression.\n<?php\n$str = \"abc ABC\";\n$pattern = \"/((a)b)(c)/i\";\nif(preg_match_all($pattern, \n  $str, $matches, PREG_PATTERN_ORDER)) {\nprint_r($matches);\n}\n?>\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\n$str = \"The rain in SPAIN falls mainly on the plains.\";\n$pattern = \n  \"/ain/i\";\nif(preg_match_all($pattern, $str, $matches)) {\nprint_r($matches);\n}\n?>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<?php\n$str = \"abc ABC\";\n$pattern = \"/((a)b)(c)/i\";\nif(preg_match_all($pattern, \n  $str, $matches, PREG_PATTERN_ORDER)) {\nprint_r($matches);\n}\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n$str = \"The rain in SPAIN falls mainly on the plains.\";\n$pattern = \n  \"/ain/i\";\nif(preg_match_all($pattern, $str, $matches)) {\n# TODO: Complete this line\n}\n?>",
      "solution": "<?php\n$str = \"The rain in SPAIN falls mainly on the plains.\";\n$pattern = \n  \"/ain/i\";\nif(preg_match_all($pattern, $str, $matches)) {\nprint_r($matches);\n}\n?>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n$str = \"abc ABC\";\n$pattern = \"/((a)b)(c)/i\";\nif(preg_match_all($pattern, \n  $str, $matches, PREG_PATTERN_ORDER)) {\nprint_r($matches);\n# TODO: Complete this line\n?>",
      "solution": "<?php\n$str = \"abc ABC\";\n$pattern = \"/((a)b)(c)/i\";\nif(preg_match_all($pattern, \n  $str, $matches, PREG_PATTERN_ORDER)) {\nprint_r($matches);\n}\n?>"
    }
  ],
  "related_topics": [
    {
      "id": "cb30b231-b9f3-478d-975d-7df23795787e",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "448edaec-590e-4810-914d-a7600dc0202b",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "50820af7-e509-470b-b9cc-7d8c3d89fe5c",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is A set of options that change how the matches array?",
      "options": [
        "None of the above.",
        "an array of matches from the same\ngrouping in the regular expression",
        "None of the above.",
        "structured"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of A set of options that change how the matches array is 'structured'."
    },
    {
      "question": "What is Each element in the\nmatches array?",
      "options": [
        "None of the above.",
        "structured",
        "an array of matches from the same\ngrouping in the regular expression",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Each element in the\nmatches array is 'an array of matches from the same\ngrouping in the regular expression'."
    }
  ],
  "summary": "This tutorial covers PHPpreg_match_all()Function concepts and techniques. You'll learn how to use PHPpreg_match_all()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPpreg_match_all()Function and how to apply it in your projects."
}