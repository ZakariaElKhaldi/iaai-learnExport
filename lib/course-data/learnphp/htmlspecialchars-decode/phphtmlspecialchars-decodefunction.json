{
  "id": "fc1aefe6-144b-4091-9b8c-725f4728bcb5",
  "title": "PHPhtmlspecialchars_decode()Function",
  "slug": "phphtmlspecialchars-decodefunction",
  "metadata": {
    "description": "Learn about PHPhtmlspecialchars_decode()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "html",
      "code",
      "quotes",
      "echo",
      "double",
      "jane",
      "tarzan",
      "output",
      "body",
      "convert"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "htmlspecialchars_decode()"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nhtmlspecialchars_decode()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nConvert the predefined HTML entities \"&lt;\" (less than) and \"&gt;\" \n(greater than) to characters:\n<?php\n$str = \"This is some &lt;b&gt;bold&lt;/b&gt; text.\";\necho htmlspecialchars_decode($str);\n?>\nThe HTML output of the code above will be (View Source):\n<!DOCTYPE html>\n<html>\n<body>\nThis is some <b>bold</b> text.\n</body>\n</html>\nThe browser output of the code above will be:\nThis is some\nbold\ntext.\nDefinition and Usage\nThe htmlspecialchars_decode() function converts some predefined HTML entities to characters.\nHTML entities that will be decoded are:\n&amp; becomes & (ampersand)\n&quot; becomes \" (double quote)\n&#039; becomes ' (single quote)\n&lt; becomes < (less than)\n&gt; becomes > (greater than)\nThe htmlspecialchars_decode() function is the opposite of\nhtmlspecialchars()\n.\nSyntax\nhtmlspecialchars_decode(\nstring,flags\n)\nParameter Values\nParameter\nDescription\nstring\nRequired. Specifies the string to decode\nflags\nOptional. Specifies how to handle quotes and which document type to use.\nThe available quote styles are:\nENT_COMPAT - Default. Decodes only double quotes\nENT_QUOTES - Decodes double and single quotes\nENT_NOQUOTES - Does not decode any quotes\nAdditional flags for specifying the used doctype:\nENT_HTML401 - Default. Handle code as HTML 4.01\nENT_HTML5 - Handle code as HTML 5\nENT_XML1 - Handle code as XML 1\nENT_XHTML - Handle code as XHTML\nTechnical Details\nReturn Value:\nReturns the converted string\nPHP Version:\n5.1.0+\nChangelog:\nPHP 5.4 - Added ENT_HTML401, ENT_HTML5, ENT_XML1 and ENT_XHTML.\nMore Examples\nExample\nConvert some predefined HTML entities to characters:\n<?php\n$str = \"Jane &amp; &#039;Tarzan&#039;\";\necho htmlspecialchars_decode($str, ENT_COMPAT); // Will only convert double quotes\necho \"<br>\";\necho htmlspecialchars_decode($str, ENT_QUOTES); // Converts double and single quotes\necho \"<br>\";\necho htmlspecialchars_decode($str, ENT_NOQUOTES); // Does not convert any quotes\n?>\nThe HTML output of the code above will be (View Source):\n<!DOCTYPE html>\n<html>\n<body>\nJane & &#039;Tarzan&#039;<br>\nJane & 'Tarzan'<br>\nJane & &#039;Tarzan&#039;\n</body>\n</html>\nThe browser output of the code above will be:\nJane & 'Tarzan'\nJane & 'Tarzan'\nJane & 'Tarzan'\nExample\nConvert the predefined HTML entities to double quotes:\n<?php\n$str = 'I love &quot;PHP&quot;.';\necho htmlspecialchars_decode($str, ENT_QUOTES); // Converts double and single quotes\n?>\nThe HTML output of the code above will be (View Source):\n<!DOCTYPE html>\n<html>\n<body>\nI love \"PHP\".\n</body>\n</html>\nThe browser output of the code above will be:\nI love \"PHP\".\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\n$str = \"This is some &lt;b&gt;bold&lt;/b&gt; text.\";\necho htmlspecialchars_decode($str);\n?>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<?php\n$str = \"Jane &amp; &#039;Tarzan&#039;\";\necho htmlspecialchars_decode($str, ENT_COMPAT); // Will only convert double quotes\necho \"<br>\";\necho htmlspecialchars_decode($str, ENT_QUOTES); // Converts double and single quotes\necho \"<br>\";\necho htmlspecialchars_decode($str, ENT_NOQUOTES); // Does not convert any quotes\n?>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<?php\n$str = 'I love &quot;PHP&quot;.';\necho htmlspecialchars_decode($str, ENT_QUOTES); // Converts double and single quotes\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n$str = \"This is some &lt;b&gt;bold&lt;/b&gt; text.\";\n# TODO: Complete this line\n?>",
      "solution": "<?php\n$str = \"This is some &lt;b&gt;bold&lt;/b&gt; text.\";\necho htmlspecialchars_decode($str);\n?>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n$str = \"Jane &amp; &#039;Tarzan&#039;\";\necho htmlspecialchars_decode($str, ENT_COMPAT); // Will only convert double quotes\necho \"<br>\";\necho htmlspecialchars_decode($str, ENT_QUOTES); // Converts double and single quotes\n# TODO: Complete this line\necho htmlspecialchars_decode($str, ENT_NOQUOTES); // Does not convert any quotes\n?>",
      "solution": "<?php\n$str = \"Jane &amp; &#039;Tarzan&#039;\";\necho htmlspecialchars_decode($str, ENT_COMPAT); // Will only convert double quotes\necho \"<br>\";\necho htmlspecialchars_decode($str, ENT_QUOTES); // Converts double and single quotes\necho \"<br>\";\necho htmlspecialchars_decode($str, ENT_NOQUOTES); // Does not convert any quotes\n?>"
    }
  ],
  "related_topics": [
    {
      "id": "f20d98bb-804c-4c0c-a39e-06a348c6ddad",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "8937f407-ee0f-4e72-9c62-777219ebf136",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "2059bc25-58f3-41c6-af12-fb9230987a0c",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is This?",
      "options": [
        "None of the above.",
        "some &lt;b&gt;bold&lt;/b&gt; text",
        "None of the above.",
        "some <b>bold</b> text"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of This is 'some &lt;b&gt;bold&lt;/b&gt; text'."
    },
    {
      "question": "What is This?",
      "options": [
        "None of the above.",
        "None of the above.",
        "some &lt;b&gt;bold&lt;/b&gt; text",
        "some <b>bold</b> text"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of This is 'some <b>bold</b> text'."
    }
  ],
  "summary": "This tutorial covers PHPhtmlspecialchars_decode()Function concepts and techniques. You'll learn how to use PHPhtmlspecialchars_decode()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPhtmlspecialchars_decode()Function and how to apply it in your projects."
}