{
  "id": "d47b86c1-e63e-48bf-8766-30f0e0ead2e3",
  "title": "PHPStrings",
  "slug": "phpstrings",
  "metadata": {
    "description": "Learn about PHPStrings with clear explanations and practical examples.",
    "keywords": [
      "string",
      "hello",
      "world",
      "double",
      "single",
      "example",
      "echo",
      "quotes",
      "strings",
      "returns"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Php Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "PHP Strings"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nStrings",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "A string is a sequence of characters, like \"Hello world!\".\nStrings\nStrings in PHP are surrounded by either double quotation marks, or single quotation marks.\nExample\necho \"Hello\";\necho 'Hello';\n\nNote\nThere is a big difference between double quotes and \nsingle quotes in PHP.\nDouble quotes process special characters, single quotes does not.\nDouble or Single Quotes?\nYou can use double or single quotes, but you should be aware of the \ndifferences between the two.\nDouble quoted strings perform action on special characters.\nE.g. when there is a variable in the string, it returns the\nvalue\nof \nthe variable:\nExample\nDouble quoted string literals perform operations for special characters:\n$x = \"John\";\necho \"Hello $x\";\n\nSingle quoted strings does not perform such actions, it returns the string like it was written, with the variable name:\nExample\nSingle quoted string literals returns the string as it is:\n$x = \"John\";\necho 'Hello $x';\n\nString Length\nThe PHP\nstrlen()\nfunction returns the length of a string.\nExample\nReturn the length of the string \"Hello world!\":\necho strlen(\"Hello world!\");\n\nWord Count\nThe PHP\nstr_word_count()\nfunction counts the \nnumber of words in a string.\nExample\nCount the number of word in the string \"Hello world!\":\necho str_word_count(\"Hello world!\");\n\nSearch For Text Within a String\nThe PHP\nstrpos()\nfunction searches for a specific text within a string.\nIf a match is found, the function returns the character position of the first match. If no match is found, it will return FALSE.\nExample\nSearch for the text \"world\" in the string \"Hello world!\":\necho strpos(\"Hello world!\", \"world\");\n\nTip:\nThe first character position in a string is 0 (not 1).\nComplete PHP String Reference\nFor a complete reference of all string functions, go to our complete\nPHP String Reference\n.\nThe PHP string reference contains description and example of use, for each function!\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "3fd0b370-8389-470b-94d4-3d9a53e3f4d1",
      "title": "Php Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "a8aec814-6d3e-4cd5-a122-1c3f13720a5a",
      "title": "Php Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "44600942-7dfc-4e93-b40f-a397f8eb0dd4",
      "title": "Php Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is PHP\nStrings\n\nA string?",
      "options": [
        "None of the above.",
        "surrounded by either double quotation marks",
        "a sequence of characters",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of PHP\nStrings\n\nA string is 'a sequence of characters'."
    },
    {
      "question": "What is Strings\nStrings in PHP?",
      "options": [
        "None of the above.",
        "surrounded by either double quotation marks",
        "a sequence of characters",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Strings\nStrings in PHP is 'surrounded by either double quotation marks'."
    }
  ],
  "summary": "This tutorial covers PHPStrings concepts and techniques. You'll learn how to use PHPStrings effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPStrings and how to apply it in your projects."
}