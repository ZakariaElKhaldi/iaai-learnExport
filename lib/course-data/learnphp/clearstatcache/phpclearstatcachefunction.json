{
  "id": "8f1f16f1-9197-4468-8496-7e4569d5f802",
  "title": "PHPclearstatcache()Function",
  "slug": "phpclearstatcachefunction",
  "metadata": {
    "description": "Learn about PHPclearstatcache()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "file",
      "cache",
      "clearstatcache",
      "filesize",
      "output",
      "clear",
      "filename",
      "function",
      "echo",
      "test"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "clearstatcache()"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nclearstatcache()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nOutput file size, truncate file, clear cache, and then output file size again:\n<?php\n//output filesize\necho filesize(\"test.txt\");\necho \"<br />\";\n$file = fopen(\"test.txt\", \"a+\");\n// truncate file\nftruncate($file,100);\nfclose($file);\n//Clear cache and check filesize again\nclearstatcache();\necho filesize(\"test.txt\");\n?>\nThe output of the code above could be:\n792\n100\nDefinition and Usage\nThe clearstatcache() function clears the file status cache.\nPHP caches data for some functions for better performance. If a file is \nto be checked several times in a script, you probably want to avoid caching to get \ncorrect results. To do this, use the clearstatcache() function.\nSyntax\nclearstatcache(\nclear_realpath_cache\n,\nfilename\n)\nParameter Values\nParameter\nDescription\nclear_realpath_cache\nOptional. Indicates whether to clear the realpath cache or not. Default \n    is FALSE, which indicates not to clear realpath cache\nfilename\nOptional. Specifies a filename, and clears the realpath and cache for \n    that file only\nTips and Notes\nTip:\nFunctions that are caching:\nstat()\nlstat()\nfile_exists()\nis_writable()\nis_readable()\nis_executable()\nis_file()\nis_dir()\nis_link()\nfilectime()\nfileatime()\nfilemtime()\nfileinode()\nfilegroup()\nfileowner()\nfilesize()\nfiletype()\nfileperms()\nTechnical Details\nReturn Value:\nNothing\nPHP Version:\n4.0+\nPHP Changelog:\nPHP 5.3 - Added two optional parameters:\nclear_realpath_cahe\nand\nfilename\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\n//output filesize\necho filesize(\"test.txt\");\necho \"<br />\";\n$file = fopen(\"test.txt\", \"a+\");\n// truncate file\nftruncate($file,100);\nfclose($file);\n//Clear cache and check filesize again\nclearstatcache();\necho filesize(\"test.txt\");\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n//output filesize\necho filesize(\"test.txt\");\necho \"<br />\";\n$file = fopen(\"test.txt\", \"a+\");\n// truncate file\nftruncate($file,100);\nfclose($file);\n//Clear cache and check filesize again\nclearstatcache();\n# TODO: Complete this line\n?>",
      "solution": "<?php\n//output filesize\necho filesize(\"test.txt\");\necho \"<br />\";\n$file = fopen(\"test.txt\", \"a+\");\n// truncate file\nftruncate($file,100);\nfclose($file);\n//Clear cache and check filesize again\nclearstatcache();\necho filesize(\"test.txt\");\n?>"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "758a2f18-b8af-4186-99dc-841b10adfd4d",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "648c57a7-21dc-45cc-a970-11d4ab20a923",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "1d1d333e-1ed1-40db-b462-023c9f3dfc47",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is If a file?",
      "options": [
        "FALSE",
        "None of the above.",
        "None of the above.",
        "to be checked several times in a script"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of If a file is 'to be checked several times in a script'."
    },
    {
      "question": "What is Default?",
      "options": [
        "None of the above.",
        "None of the above.",
        "FALSE",
        "to be checked several times in a script"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Default is 'FALSE'."
    }
  ],
  "summary": "This tutorial covers PHPclearstatcache()Function concepts and techniques. You'll learn how to use PHPclearstatcache()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPclearstatcache()Function and how to apply it in your projects."
}