{
  "id": "c3be65ee-ddeb-48c4-9b1b-63d6e67cae03",
  "title": "PHPgetName()Function",
  "slug": "phpgetnamefunction",
  "metadata": {
    "description": "Learn about PHPgetName()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "getname",
      "element",
      "name",
      "cars",
      "children",
      "function",
      "example",
      "return",
      "version",
      "simplexmlelement"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "getName()"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\ngetName()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nReturn the name of the XML element and the children:\n<?php\n$xml=<<<XML\n<?xml version=\"1.0\" standalone=\"yes\"?>\n<cars>\n<car id=\"1\">Volvo</car>\n<car id=\"2\">BMW</car>\n<car id=\"3\">Saab</car>\n</cars>\nXML;\n$sxe=new SimpleXMLElement($xml);\n// Get the name of the cars element\necho $sxe->getName() . \"<br>\";\n// Also print out the names of the children of the cars element\nforeach ($sxe->children() as $child)\n{\necho $child->getName() . \"<br>\";\n}\n?>\nRun Example \u00bb\nDefinition and Usage\nThe getName() function returns the name of the XML element.\nSyntax\nSimpleXMLElement::getName()\nTechnical Details\nReturn Value:\nThe name of the XML element, as a string\nPHP Version:\n5.1.3+\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\n$xml=<<<XML\n<?xml version=\"1.0\" standalone=\"yes\"?>\n<cars>\n<car id=\"1\">Volvo</car>\n<car id=\"2\">BMW</car>\n<car id=\"3\">Saab</car>\n</cars>\nXML;\n$sxe=new SimpleXMLElement($xml);\n// Get the name of the cars element\necho $sxe->getName() . \"<br>\";\n// Also print out the names of the children of the cars element\nforeach ($sxe->children() as $child)\n{\necho $child->getName() . \"<br>\";\n}\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n$xml=<<<XML\n<?xml version=\"1.0\" standalone=\"yes\"?>\n<cars>\n<car id=\"1\">Volvo</car>\n<car id=\"2\">BMW</car>\n<car id=\"3\">Saab</car>\n</cars>\nXML;\n$sxe=new SimpleXMLElement($xml);\n# TODO: Complete this line\necho $sxe->getName() . \"<br>\";\n// Also print out the names of the children of the cars element\nforeach ($sxe->children() as $child)\n{\necho $child->getName() . \"<br>\";\n}\n?>",
      "solution": "<?php\n$xml=<<<XML\n<?xml version=\"1.0\" standalone=\"yes\"?>\n<cars>\n<car id=\"1\">Volvo</car>\n<car id=\"2\">BMW</car>\n<car id=\"3\">Saab</car>\n</cars>\nXML;\n$sxe=new SimpleXMLElement($xml);\n// Get the name of the cars element\necho $sxe->getName() . \"<br>\";\n// Also print out the names of the children of the cars element\nforeach ($sxe->children() as $child)\n{\necho $child->getName() . \"<br>\";\n}\n?>"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "1089e7ad-6e0f-4f05-a92a-582f8ef5bb84",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "380125b4-2f34-4d94-ae31-02a28663e7b2",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "f0ed7884-7c5f-46cc-aed5-fe29bd86a2ae",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers PHPgetName()Function concepts and techniques. You'll learn how to use PHPgetName()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPgetName()Function and how to apply it in your projects."
}