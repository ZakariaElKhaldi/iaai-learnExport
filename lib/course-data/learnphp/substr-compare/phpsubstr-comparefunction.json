{
  "id": "f753cc0c-40e8-4acd-9fa3-604010fbae2d",
  "title": "PHPsubstr_compare()Function",
  "slug": "phpsubstr-comparefunction",
  "metadata": {
    "description": "Learn about PHPsubstr_compare()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "world",
      "echo",
      "hello",
      "compare",
      "case",
      "function",
      "strings",
      "startpos",
      "length",
      "specifies"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "substr_compare()"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nsubstr_compare()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nCompare two strings:\n<?php\necho substr_compare(\"Hello world\",\"Hello world\",0);\n?>\n\nDefinition and Usage\nThe substr_compare() function compares two strings from a specified start position.\nTip:\nThis function is binary-safe and optionally case-sensitive.\nSyntax\nsubstr_compare(\nstring1,string2,startpos,length,case\n)\nParameter Values\nParameter\nDescription\nstring1\nRequired. Specifies the first string to compare\nstring2\nRequired. Specifies the second string to compare\nstartpos\nRequired. Specifies where to start comparing in string1. If negative, it starts counting from the end of the string\nlength\nOptional. Specifies how much of string1 to compare\ncase\nOptional. A boolean value that specifies whether or not to perform a case-sensitive compare:\nFALSE - Default. Case-sensitive\nTRUE - Case-insensitive\nTechnical Details\nReturn Value:\nThis function returns:\n0 - if the two strings are equal\n<0 - if string1 (from startpos) is less than string2\n>0 - if string1 (from startpos) is greater than string2\nIf length is equal or greater than length of string1, this function returns FALSE.\nPHP Version:\n5+\nChangelog:\nAs of PHP 5.5.11 - The\nlength\nparameter can be 0.\nAs of PHP 5.1, it is now possible to use a negative\nstartpos.\nMore Examples\nExample\nCompare two strings, when start position in string1 for the comparison is 6th:\n<?php\necho substr_compare(\"Hello world\",\"world\",6);\n?>\n\nExample\nUsing all parameters:\n<?php\necho substr_compare(\"world\",\"or\",1,2);\necho substr_compare(\"world\",\"ld\",-2,2);\necho substr_compare(\"world\",\"orl\",1,2);\necho substr_compare(\"world\",\"OR\",1,2,TRUE);\necho substr_compare(\"world\",\"or\",1,3);\necho substr_compare(\"world\",\"rl\",1,2);\n?>\n\nExample\nDifferent return values:\n<?php\necho substr_compare(\"Hello world!\",\"Hello world!\",0); // the two strings are equal\necho substr_compare(\"Hello world!\",\"Hello\",0); // string1 is greater than string2\necho substr_compare(\"Hello world!\",\"Hello world! Hello!\",0); // str1 is less than str2\n?>\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\necho substr_compare(\"Hello world\",\"Hello world\",0);\n?>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<?php\necho substr_compare(\"Hello world\",\"world\",6);\n?>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<?php\necho substr_compare(\"world\",\"or\",1,2);\necho substr_compare(\"world\",\"ld\",-2,2);\necho substr_compare(\"world\",\"orl\",1,2);\necho substr_compare(\"world\",\"OR\",1,2,TRUE);\necho substr_compare(\"world\",\"or\",1,3);\necho substr_compare(\"world\",\"rl\",1,2);\n?>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<?php\necho substr_compare(\"Hello world!\",\"Hello world!\",0); // the two strings are equal\necho substr_compare(\"Hello world!\",\"Hello\",0); // string1 is greater than string2\necho substr_compare(\"Hello world!\",\"Hello world! Hello!\",0); // str1 is less than str2\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\necho substr_compare(\"Hello world\",\"Hello world\",0);\n# TODO: Complete this line",
      "solution": "<?php\necho substr_compare(\"Hello world\",\"Hello world\",0);\n?>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n# TODO: Complete this line\n?>",
      "solution": "<?php\necho substr_compare(\"Hello world\",\"world\",6);\n?>"
    }
  ],
  "related_topics": [
    {
      "id": "c15337de-c5ca-44cc-b0ef-d95cb4794126",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "a7de1de7-9e93-4131-b5ae-4a1ad0d2d94c",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "cb6c532e-e7cf-4eab-a6bd-1cbe00ad1257",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is This function?",
      "options": [
        "binary-safe and optionally case-sensitive",
        "equal\n<0 - if string1 (from startpos) is less than string2\n>0 - if string1 (from startpos) is greater than string2\nIf length is equal or greater than length of string1",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of This function is 'binary-safe and optionally case-sensitive'."
    },
    {
      "question": "What is if the two strings?",
      "options": [
        "None of the above.",
        "equal\n<0 - if string1 (from startpos) is less than string2\n>0 - if string1 (from startpos) is greater than string2\nIf length is equal or greater than length of string1",
        "None of the above.",
        "binary-safe and optionally case-sensitive"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of if the two strings is 'equal\n<0 - if string1 (from startpos) is less than string2\n>0 - if string1 (from startpos) is greater than string2\nIf length is equal or greater than length of string1'."
    }
  ],
  "summary": "This tutorial covers PHPsubstr_compare()Function concepts and techniques. You'll learn how to use PHPsubstr_compare()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPsubstr_compare()Function and how to apply it in your projects."
}