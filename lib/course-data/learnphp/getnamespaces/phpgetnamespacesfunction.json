{
  "id": "3e46de25-a00f-449d-95e3-cc94aa0e1abf",
  "title": "PHPgetNamespaces()Function",
  "slug": "phpgetnamespacesfunction",
  "metadata": {
    "description": "Learn about PHPgetNamespaces()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "getnamespaces",
      "namespaces",
      "used",
      "document",
      "function",
      "example",
      "return",
      "version",
      "cars",
      "xmlns"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "getNamespaces()"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\ngetNamespaces()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nReturn all the namespaces used in the XML document:\n<?php\n$xml=<<<XML\n<?xml version=\"1.0\" standalone=\"yes\"?>\n<cars xmlns:c=\"http://.com/ns\" xmlns:a=\"http://.com/country\">\n<c:car id=\"1\">Volvo</c:car>\n<c:car id=\"2\">BMW</c:car>\n<c:car id=\"3\">Saab</c:car>\n</cars>\nXML;\n$sxe=new SimpleXMLElement($xml);\n$ns=$sxe->getNamespaces(true);\nvar_dump($ns);\n?>\nRun Example \u00bb\nDefinition and Usage\nThe getNamespaces() function returns the namespaces used in an XML document.\nSyntax\nSimpleXMLElement::getNamespaces(\nrecursive\n)\nParameter Values\nParameter\nDescription\nrecursive\nOptional. Specifies a Boolean value. If TRUE, all namespaces used in \n    document are returned. If FALSE, only namespaces used in root node is returned. Default is FALSE\nTechnical Details\nReturn Value:\nAn array of namespace names with their associated URIs\nPHP Version:\n5.1.2+\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\n$xml=<<<XML\n<?xml version=\"1.0\" standalone=\"yes\"?>\n<cars xmlns:c=\"http://w3schools.com/ns\" xmlns:a=\"http://w3schools.com/country\">\n<c:car id=\"1\">Volvo</c:car>\n<c:car id=\"2\">BMW</c:car>\n<c:car id=\"3\">Saab</c:car>\n</cars>\nXML;\n$sxe=new SimpleXMLElement($xml);\n$ns=$sxe->getNamespaces(true);\nvar_dump($ns);\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n$xml=<<<XML\n<?xml version=\"1.0\" standalone=\"yes\"?>\n<cars xmlns:c=\"http://w3schools.com/ns\" xmlns:a=\"http://w3schools.com/country\">\n<c:car id=\"1\">Volvo</c:car>\n<c:car id=\"2\">BMW</c:car>\n<c:car id=\"3\">Saab</c:car>\n</cars>\nXML;\n# TODO: Complete this line\n$ns=$sxe->getNamespaces(true);\nvar_dump($ns);\n?>",
      "solution": "<?php\n$xml=<<<XML\n<?xml version=\"1.0\" standalone=\"yes\"?>\n<cars xmlns:c=\"http://w3schools.com/ns\" xmlns:a=\"http://w3schools.com/country\">\n<c:car id=\"1\">Volvo</c:car>\n<c:car id=\"2\">BMW</c:car>\n<c:car id=\"3\">Saab</c:car>\n</cars>\nXML;\n$sxe=new SimpleXMLElement($xml);\n$ns=$sxe->getNamespaces(true);\nvar_dump($ns);\n?>"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "1daca0e7-3b73-47ba-af80-e85695c918b7",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "0f579b7c-b552-4452-a72a-c76d9855e7aa",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "7728c3fd-13e5-4bad-b07e-227361ad53f5",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is all namespaces used in \n    document?",
      "options": [
        "None of the above.",
        "returned",
        "returned",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of all namespaces used in \n    document is 'returned'."
    },
    {
      "question": "What is only namespaces used in root node?",
      "options": [
        "returned",
        "returned",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of only namespaces used in root node is 'returned'."
    }
  ],
  "summary": "This tutorial covers PHPgetNamespaces()Function concepts and techniques. You'll learn how to use PHPgetNamespaces()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPgetNamespaces()Function and how to apply it in your projects."
}