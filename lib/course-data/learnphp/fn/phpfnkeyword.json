{
  "id": "91c77473-5041-43b0-a60e-bbefe5655e71",
  "title": "PHPfnKeyword",
  "slug": "phpfnkeyword",
  "metadata": {
    "description": "Learn about PHPfnKeyword with clear explanations and practical examples.",
    "keywords": [
      "php",
      "arrow",
      "functions",
      "keyword",
      "create",
      "function",
      "example",
      "works",
      "hello",
      "world",
      "echo"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Php Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "fn"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nfn\nKeyword",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nCreate an arrow function:\n<?php\n// This only works in PHP 7.4 and above\n$str = \"Hello World\";\n$my_function = fn($a) => $str . $a;\necho $my_function(\"!\");\n?>\nDefinition and Usage\nThe\nfn\nkeyword is used to create arrow functions. Arrow functions are only available in\nPHP versions 7.4 and up.\nArrow functions have access to all variables from the scope in which they were created.\nThe general syntax of an arrow function is:\nfn(arguments) => expression to be returned;\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\n// This only works in PHP 7.4 and above\n$str = \"Hello World\";\n$my_function = fn($a) => $str . $a;\necho $my_function(\"!\");\n?>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "fn(arguments) => expression to be returned;",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n// This only works in PHP 7.4 and above\n$str = \"Hello World\";\n$my_function = fn($a) => $str . $a;\n# TODO: Complete this line\n?>",
      "solution": "<?php\n// This only works in PHP 7.4 and above\n$str = \"Hello World\";\n$my_function = fn($a) => $str . $a;\necho $my_function(\"!\");\n?>"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your html code here",
      "solution": "fn(arguments) => expression to be returned;"
    }
  ],
  "related_topics": [
    {
      "id": "e837d192-298a-41b8-9f03-9680c570e61f",
      "title": "Php Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "2f0e4e8f-6423-434a-854c-0d1fa4f3e81e",
      "title": "Php Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "751f2e85-65ec-4cc1-b894-e77ef2901a1b",
      "title": "Php Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Definition and Usage\nThe\nfn\nkeyword?",
      "options": [
        "None of the above.",
        "only available in\nPHP versions 7",
        "used to create arrow functions",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Definition and Usage\nThe\nfn\nkeyword is 'used to create arrow functions'."
    },
    {
      "question": "What is Arrow functions?",
      "options": [
        "None of the above.",
        "None of the above.",
        "used to create arrow functions",
        "only available in\nPHP versions 7"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Arrow functions is 'only available in\nPHP versions 7'."
    }
  ],
  "summary": "This tutorial covers PHPfnKeyword concepts and techniques. You'll learn how to use PHPfnKeyword effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPfnKeyword and how to apply it in your projects."
}