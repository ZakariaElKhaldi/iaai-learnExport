{
  "id": "a537bbaa-14b9-4a9e-bc07-9665de7d91f5",
  "title": "PHParray()Function",
  "slug": "phparrayfunction",
  "metadata": {
    "description": "Learn about PHParray()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "array",
      "cars",
      "arrays",
      "value",
      "echo",
      "example",
      "volvo",
      "create",
      "indexed",
      "values"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "array()"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\narray()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "PHP\narray",
      "content": "()\nFunction\n\nExample\nCreate an indexed array named $cars, assign three elements to it, and then \nprint a text containing the array values:\n<?php\n$cars=array(\"Volvo\",\"BMW\",\"Toyota\");\necho \"I like \" . $cars[0] . \", \" . $cars[1] . \" and \" . $cars[2] . \".\";\n?>\n\nDefinition and Usage\nThe array() function is used to create an array.\nIn PHP, there are three types of arrays:",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Indexed arrays",
      "content": "- Arrays with numeric index",
      "order": 3,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Associative arrays",
      "content": "- Arrays with named keys",
      "order": 4,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Multidimensional arrays",
      "content": "- Arrays containing one or more arrays\nSyntax\nSyntax for indexed arrays:\narray(\nvalue1, value2, value3, etc.\n)\nSyntax for associative arrays:\narray(\nkey=>value,key=>value,key=>value,etc.\n)\nParameter Values\nParameter\nDescription\nkey\nSpecifies the key (numeric or string)\nvalue\nSpecifies the value\nTechnical Details\nReturn Value:\nReturns an array of the parameters\nPHP Version:\n4+\nChangelog:\nAs of PHP 5.4, it is possible to use a short array syntax, which replaces array() with [].\nE.g. $cars=[\"Volvo\",\"BMW\"]; instead of\n $cars=array(\"Volvo\",\"BMW\");\nMore Examples\nExample\nCreate an associative array named $age:\n<?php\n$age=array(\"Peter\"=>\"35\",\"Ben\"=>\"37\",\"Joe\"=>\"43\");\necho \"Peter is \" . $age['Peter'] . \" years old.\";\n?>\n\nExample\nLoop through and print all the values of an indexed array:\n<?php\n$cars=array(\"Volvo\",\"BMW\",\"Toyota\");\n$arrlength=count($cars);\nfor($x=0;$x<$arrlength;$x++)\n{\necho $cars[$x];\necho \"<br>\";\n}\n?>\n\nExample\nLoop through and print all the values of an associative array:\n<?php\n$age=array(\"Peter\"=>\"35\",\"Ben\"=>\"37\",\"Joe\"=>\"43\");\nforeach($age as $x=>$x_value)\n{\necho \"Key=\" . $x . \", Value=\" . $x_value;\necho \"<br>\";\n}\n?>\n\nExample\nCreate a multidimensional array:\n<?php\n// A two-dimensional array:\n$cars=array\n(\narray(\"Volvo\",100,96),\narray(\"BMW\",60,59),\narray(\"Toyota\",110,100)\n);\n?>\n\n\u2605\n+1",
      "order": 5,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<?php\n$cars=array(\"Volvo\",\"BMW\",\"Toyota\");\necho \"I like \" . $cars[0] . \", \" . $cars[1] . \" and \" . $cars[2] . \".\";\n?>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "<?php\n$age=array(\"Peter\"=>\"35\",\"Ben\"=>\"37\",\"Joe\"=>\"43\");\necho \"Peter is \" . $age['Peter'] . \" years old.\";\n?>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "<?php\n$cars=array(\"Volvo\",\"BMW\",\"Toyota\");\n$arrlength=count($cars);\nfor($x=0;$x<$arrlength;$x++)\n{\necho $cars[$x];\necho \"<br>\";\n}\n?>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "<?php\n$age=array(\"Peter\"=>\"35\",\"Ben\"=>\"37\",\"Joe\"=>\"43\");\nforeach($age as $x=>$x_value)\n{\necho \"Key=\" . $x . \", Value=\" . $x_value;\necho \"<br>\";\n}\n?>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "<?php\n// A two-dimensional array:\n$cars=array\n(\narray(\"Volvo\",100,96),\narray(\"BMW\",60,59),\narray(\"Toyota\",110,100)\n);\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n# TODO: Complete this line\necho \"I like \" . $cars[0] . \", \" . $cars[1] . \" and \" . $cars[2] . \".\";\n?>",
      "solution": "<?php\n$cars=array(\"Volvo\",\"BMW\",\"Toyota\");\necho \"I like \" . $cars[0] . \", \" . $cars[1] . \" and \" . $cars[2] . \".\";\n?>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n$age=array(\"Peter\"=>\"35\",\"Ben\"=>\"37\",\"Joe\"=>\"43\");\necho \"Peter is \" . $age['Peter'] . \" years old.\";\n# TODO: Complete this line",
      "solution": "<?php\n$age=array(\"Peter\"=>\"35\",\"Ben\"=>\"37\",\"Joe\"=>\"43\");\necho \"Peter is \" . $age['Peter'] . \" years old.\";\n?>"
    }
  ],
  "related_topics": [
    {
      "id": "16c974f2-c159-4ab1-bd73-b73cbb37b87f",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "24458955-f4f4-4128-9323-2f8aa0a61ff9",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "60a8417d-7cb0-4e82-9e46-546a1a09541f",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is function?",
      "options": [
        "three types of arrays:\nIndexed arrays\n- Arrays with numeric index\nAssociative arrays\n- Arrays with named keys\nMultidimensional arrays\n- Arrays containing one or more arrays\nSyntax\nSyntax for indexed arrays:\narray(\nvalue1",
        "None of the above.",
        "None of the above.",
        "used to create an array"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of function is 'used to create an array'."
    },
    {
      "question": "What is there?",
      "options": [
        "used to create an array",
        "None of the above.",
        "None of the above.",
        "three types of arrays:\nIndexed arrays\n- Arrays with numeric index\nAssociative arrays\n- Arrays with named keys\nMultidimensional arrays\n- Arrays containing one or more arrays\nSyntax\nSyntax for indexed arrays:\narray(\nvalue1"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of there is 'three types of arrays:\nIndexed arrays\n- Arrays with numeric index\nAssociative arrays\n- Arrays with named keys\nMultidimensional arrays\n- Arrays containing one or more arrays\nSyntax\nSyntax for indexed arrays:\narray(\nvalue1'."
    }
  ],
  "summary": "This tutorial covers PHParray()Function concepts and techniques. You'll learn how to use PHParray()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHParray()Function and how to apply it in your projects."
}