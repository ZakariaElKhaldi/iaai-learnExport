{
  "id": "aff5445f-f73f-41d4-9a70-63b4cdc78aa8",
  "title": "PHPdate()Function",
  "slug": "phpdatefunction",
  "metadata": {
    "description": "Learn about PHPdate()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "date",
      "time",
      "example",
      "representation",
      "format",
      "month",
      "year",
      "hour",
      "timestamp",
      "formatted"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "date()"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\ndate()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nFormat a local date and time and return the formatted date strings:\n<?php\n// Prints the day\necho date(\"l\") . \"<br>\";\n// Prints the day, date, month, year, time, AM or PM\necho date(\"l jS \\of F Y h:i:s A\");\n?>\n\nDefinition and Usage\nThe date() function formats a local date and time, and returns the formatted date string.\nSyntax\ndate(\nformat, timestamp)\nParameter Values\nParameter\nDescription\nformat\nRequired. Specifies the format of the outputted date string. The following characters can be used:\nd - The day of the month (from 01 to 31)\nD - A textual representation of a day (three letters)\nj - The day of the month without leading zeros (1 to 31)\nl (lowercase 'L') - A full textual representation of a day\nN - The ISO-8601 numeric representation of a day (1 for Monday, 7 for Sunday)\nS - The English ordinal suffix for the day of the month (2 characters st, nd, rd or th. Works well with j)\nw - A numeric representation of the day (0 for Sunday, 6 for Saturday)\nz - The day of the year (from 0 through 365)\nW - The ISO-8601 week number of year (weeks starting on Monday)\nF - A full textual representation of a month (January through December)\nm - A numeric representation of a month (from 01 to 12)\nM - A short textual representation of a month (three letters)\nn - A numeric representation of a month, without leading zeros (1 to 12)\nt - The number of days in the given month\nL - Whether it's a leap year (1 if it is a leap year, 0 otherwise)\no - The ISO-8601 year number\nY - A four digit representation of a year\ny - A two digit representation of a year\na - Lowercase am or pm\nA - Uppercase AM or PM\nB - Swatch Internet time (000 to 999)\ng - 12-hour format of an hour (1 to 12)\nG - 24-hour format of an hour (0 to 23)\nh - 12-hour format of an hour (01 to 12)\nH - 24-hour format of an hour (00 to 23)\ni - Minutes with leading zeros (00 to 59)\ns - Seconds, with leading zeros (00 to 59)\nu - Microseconds (added in PHP 5.2.2)\ne - The timezone identifier (Examples: UTC, GMT, Atlantic/Azores)\nI (capital i) - Whether the date is in daylights savings time (1 if Daylight Savings Time, 0 otherwise)\nO - Difference to Greenwich time (GMT) in hours (Example: +0100)\nP - Difference to Greenwich time (GMT) in hours:minutes (added in  PHP 5.1.3)\nT - Timezone abbreviations (Examples: EST, MDT)\nZ - Timezone offset in seconds. The offset for timezones west of UTC is negative (-43200 to  50400)\nc - The ISO-8601 date (e.g. 2013-05-05T16:34:42+00:00)\nr - The RFC 2822 formatted date (e.g. Fri, 12 Apr 2013 12:01:05 +0200)\nU - The seconds since the Unix Epoch (January 1 1970 00:00:00 GMT)\nand the following predefined constants can also be used (available since PHP 5.1.0):\nDATE_ATOM - Atom (example: 2013-04-12T15:52:01+00:00)\nDATE_COOKIE - HTTP Cookies (example: Friday, 12-Apr-13 15:52:01 UTC)\nDATE_ISO8601 - ISO-8601 (example: 2013-04-12T15:52:01+0000)\nDATE_RFC822 - RFC 822 (example: Fri, 12 Apr 13 15:52:01 +0000)\nDATE_RFC850 - RFC 850 (example: Friday, 12-Apr-13 15:52:01 UTC)\nDATE_RFC1036 - RFC 1036 (example: Fri, 12 Apr 13 15:52:01 +0000)\nDATE_RFC1123 - RFC 1123 (example: Fri, 12 Apr 2013 15:52:01 +0000)\nDATE_RFC2822 - RFC 2822 (Fri, 12 Apr 2013 15:52:01 +0000)\nDATE_RFC3339 - Same as DATE_ATOM (since PHP 5.1.3)\nDATE_RSS - RSS (Fri, 12 Aug 2013 15:52:01 +0000)\nDATE_W3C - World Wide Web Consortium (example:  2013-04-12T15:52:01+00:00)\ntimestamp\nOptional. Specifies an integer Unix timestamp. Default is the current local time (time())\nTechnical Details\nReturn Value:\nReturns a formatted date string on success. FALSE on failure + an E_WARNING\nPHP Version:\n4+\nChangelog:\nPHP 5.1.0: Added E_STRICT and E_NOTICE time zone errors. Valid range of timestamp is now from Fri, 13 Dec 1901 20:45:54 GMT to Tue, 19 Jan 2038 03:14:07 GMT. Before version 5.1.0 timestamp was limited from 01-01-1970 to 19-01-2038 on some systems (e.g. Windows).\nPHP 5.1.1: Added constants of standard date/time formats that can be used to specify the format parameter\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\n// Prints the day\necho date(\"l\") . \"<br>\";\n// Prints the day, date, month, year, time, AM or PM\necho date(\"l jS \\of F Y h:i:s A\");\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\n// Prints the day\necho date(\"l\") . \"<br>\";\n// Prints the day, date, month, year, time, AM or PM\n# TODO: Complete this line\n?>",
      "solution": "<?php\n// Prints the day\necho date(\"l\") . \"<br>\";\n// Prints the day, date, month, year, time, AM or PM\necho date(\"l jS \\of F Y h:i:s A\");\n?>"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "6e67b1b6-2df6-4755-8034-7a931be73d52",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "97741309-6c46-41fe-a192-1cad7c963603",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "16b99dd9-9f92-4f31-89af-81e8b04f1b7c",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is if it?",
      "options": [
        "in daylights savings time (1 if Daylight Savings Time",
        "None of the above.",
        "None of the above.",
        "a leap year"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of if it is 'a leap year'."
    },
    {
      "question": "What is Whether the date?",
      "options": [
        "a leap year",
        "in daylights savings time (1 if Daylight Savings Time",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Whether the date is 'in daylights savings time (1 if Daylight Savings Time'."
    }
  ],
  "summary": "This tutorial covers PHPdate()Function concepts and techniques. You'll learn how to use PHPdate()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPdate()Function and how to apply it in your projects."
}