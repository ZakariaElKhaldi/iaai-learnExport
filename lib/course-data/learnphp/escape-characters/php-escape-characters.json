{
  "id": "b348a0de-aab8-411f-9f11-f1b1655dc13a",
  "title": "PHP -Escape Characters",
  "slug": "php-escape-characters",
  "metadata": {
    "description": "Learn about PHP -Escape Characters with clear explanations and practical examples.",
    "keywords": [
      "escape",
      "character",
      "characters",
      "example",
      "double",
      "quote",
      "insert",
      "illegal",
      "string",
      "called"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "Escape Characters"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP -\nEscape Characters",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Escape Character\nTo insert characters that are illegal in a string, use an escape character.\nAn escape character is a backslash\n\\\nfollowed by the character you want to insert.\nAn example of an illegal character is a double quote inside a string that is surrounded by double quotes:\nExample\n$x = \"We are the so-called \"Vikings\" from the north.\";\n\nTo fix this problem, use the escape character\n\\\"\n:\nExample\n$x = \"We are the so-called \\\"Vikings\\\" from the north.\";\n\nEscape Characters\nOther escape characters used in PHP:\nCode\nResult\nTry it\n\\'\nSingle Quote\nTry it \u00bb\n\\\"\nDouble Quote\nTry it \u00bb\n\\$\nPHP variables\nTry it \u00bb\n\\n\nNew Line\nTry it \u00bb\n\\r\nCarriage Return\nTry it \u00bb\n\\t\nTab\nTry it \u00bb\n\\f\nForm Feed\n\\ooo\nOctal value\nTry it \u00bb\n\\xhh\nHex value\nTry it \u00bb\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "c39cca7a-118d-4178-8271-035104165df9",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "34bada55-64cb-4e73-ad37-f9863d37f054",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "04ef9520-e09f-4337-8ede-295a2bff9c3f",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Escape Characters\n\nEscape Character\nTo insert characters that?",
      "options": [
        "None of the above.",
        "illegal in a string",
        "a backslash\n\\\nfollowed by the character you want to insert",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Escape Characters\n\nEscape Character\nTo insert characters that is 'illegal in a string'."
    },
    {
      "question": "What is An escape character?",
      "options": [
        "a backslash\n\\\nfollowed by the character you want to insert",
        "illegal in a string",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of An escape character is 'a backslash\n\\\nfollowed by the character you want to insert'."
    }
  ],
  "summary": "This tutorial covers PHP -Escape Characters concepts and techniques. You'll learn how to use PHP -Escape Characters effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHP -Escape Characters and how to apply it in your projects."
}