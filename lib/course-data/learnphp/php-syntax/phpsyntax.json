{
  "id": "8ae6893b-2775-4b75-a042-526464fc4d40",
  "title": "PHPSyntax",
  "slug": "phpsyntax",
  "metadata": {
    "description": "Learn about PHPSyntax with clear explanations and practical examples.",
    "keywords": [
      "html",
      "echo",
      "color",
      "example",
      "body",
      "hello",
      "world",
      "script",
      "code",
      "file"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "Php Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "PHP Syntax"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\nSyntax",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "A PHP script is executed on the server, and the plain HTML result is sent back to the browser.\nBasic PHP Syntax\nA PHP script can be placed anywhere in the document.\nA PHP script starts with\n<?php\nand ends with\n?>\n:\n<?php\n// PHP code goes here\n?>\nThe default file extension for PHP files is \"\n.php\n\".\nA PHP file normally contains HTML tags, and some PHP scripting code.\nBelow, we have an example of a simple PHP file, with a PHP script that uses a \nbuilt-in PHP function \"\necho\n\" to output the text\n\"Hello World!\" on a web page:\nExample\nA simple\n.php\nfile with both HTML code and PHP code:\n<!DOCTYPE html>\n<html>\n<body>\n\n<h1>My first PHP page</h1>\n\n<?php\necho \"Hello World!\";\n?>\n\n</body>\n</html>\n\nNote:\nPHP statements end with a semicolon (\n;\n).\nPHP Case Sensitivity\nIn PHP, keywords (e.g.\nif\n,\nelse\n,\nwhile\n,\necho\n, etc.), classes, functions, \nand user-defined functions are not case-sensitive.\nIn the example below, all three echo statements below are equal and legal:\nExample\nECHO\nis the same as\necho\n:\n<!DOCTYPE html>\n<html>\n<body>\n\n<?php\nECHO \"Hello World!<br>\";\necho \"Hello World!<br>\";\nEcHo \"Hello World!<br>\";\n?>\n\n</body>\n</html>\n\nNote:\nHowever; all variable names are case-sensitive!\nLook at the example below; only the first statement will display the value of the\n$color\nvariable! This is because\n$color\n,\n$COLOR\n, and\n$coLOR\nare treated as three \ndifferent variables:\nExample\n$COLOR\nis\nnot\nsame as\n$color\n:\n<!DOCTYPE html>\n<html>\n<body>\n\n<?php\n$color = \"red\";\necho \"My car is \" . $color . \"<br>\";\necho \"My house is \" . $COLOR . \"<br>\";\necho \"My boat is \" . $coLOR . \"<br>\";\n?>\n\n</body>\n</html>\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "77253395-f3d0-43d5-92f0-73eeecd3e791",
      "title": "Php Functions and Methods",
      "relationship": "next_topic"
    },
    {
      "id": "86d39627-acd0-4911-ae09-7d9fc3f19676",
      "title": "Php Data Structures",
      "relationship": "suggested_next"
    }
  ],
  "quiz": [
    {
      "question": "What is PHP\nSyntax\n\nA PHP script?",
      "options": [
        "executed on the server",
        "\"",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of PHP\nSyntax\n\nA PHP script is 'executed on the server'."
    },
    {
      "question": "What is The default file extension for PHP files?",
      "options": [
        "None of the above.",
        "None of the above.",
        "executed on the server",
        "\""
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of The default file extension for PHP files is '\"'."
    }
  ],
  "summary": "This tutorial covers PHPSyntax concepts and techniques. You'll learn how to use PHPSyntax effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPSyntax and how to apply it in your projects."
}