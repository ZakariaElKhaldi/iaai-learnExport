{
  "id": "c5d27720-3f4c-4571-bc5b-6a00c5cdcf12",
  "title": "PHPjson_decode()Function",
  "slug": "phpjson-decodefunction",
  "metadata": {
    "description": "Learn about PHPjson_decode()Function with clear explanations and practical examples.",
    "keywords": [
      "example",
      "jsonobj",
      "object",
      "peter",
      "echo",
      "json",
      "depth",
      "options",
      "added",
      "parameter"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "json_decode()"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\njson_decode()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nStore JSON data in a PHP variable, and then decode it into a PHP object:\n$jsonobj = '{\"Peter\":35,\"Ben\":37,\"Joe\":43}';\n\nvar_dump(json_decode($jsonobj));\nRun Example \u00bb\nDefinition and Usage\nThe\njson_decode()\nfunction is used to decode or convert a JSON object to a PHP object.\nSyntax\njson_decode(\nstring, assoc, depth, options)\nParameter Values\nParameter\nDescription\nstring\nRequired. Specifies the value to be decoded\nassoc\nOptional. Specifies a Boolean value. When set to true, the returned \n    object will be converted into an associative array. When set to false, it \n    returns an object. False is default\ndepth\nOptional. Specifies the recursion depth. Default recursion depth is 512\noptions\nOptional. Specifies a bitmask (JSON_BIGINT_AS_STRING, \n    JSON_INVALID_UTF8_IGNORE, JSON_INVALID_UTF8_SUBSTITUTE, \n    JSON_OBJECT_AS_ARRAY, JSON_THROW_ON_ERROR)\nTechnical Details\nReturn Value:\nReturns the value encoded in JSON in appropriate PHP type. \n If the JSON object cannot be decoded it returns NULL\nPHP Version:\n5.2+\nPHP Changelog:\nPHP 7.3: Added JSON_THROWN_ON_ERROR option\nPHP 7.2: Added \n  JSON_INVALID_UTF8_IGNORE, and JSON_INVALID_UTF8_SUBSTITUTE options\nPHP 5.4: Added \n  JSON_BIGINT_AS_STRING, and JSON_OBJECT_AS_ARRAY options\nPHP 5.4: Added\noptions\nparameter\nPHP 5.3: Added\ndepth\nparameter\nMore Examples\nExample\nStore JSON data in a PHP variable, and then decode it into a PHP associative array:\n$jsonobj = '{\"Peter\":35,\"Ben\":37,\"Joe\":43}';\n\nvar_dump(json_decode($jsonobj, true));\nRun Example \u00bb\nExample\nHow to access the values from the PHP object:\n$jsonobj = '{\"Peter\":35,\"Ben\":37,\"Joe\":43}';\n\n$obj = json_decode($jsonobj);\n\necho $obj->Peter;\necho $obj->Ben;\necho $obj->Joe;\nRun Example \u00bb\nExample\nHow to access the values from the PHP associative array:\n$jsonobj = '{\"Peter\":35,\"Ben\":37,\"Joe\":43}';\n\n$arr = json_decode($jsonobj, true);\n\necho $arr[\"Peter\"];\necho $arr[\"Ben\"];\necho $arr[\"Joe\"];\nRun Example \u00bb\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Implement a Function",
      "description": "Create a function that demonstrates the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Write your javascript function here\n",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "edbca34a-e8ba-4866-bab0-f9e8fef4fd55",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "ac1b6503-13a1-4be7-98fe-e8f4ce98debf",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "29ba596b-fdf3-4ceb-bd7b-ccb255119ad7",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is function?",
      "options": [
        "None of the above.",
        "default\ndepth\nOptional",
        "used to decode or convert a JSON object to a PHP object",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of function is 'used to decode or convert a JSON object to a PHP object'."
    },
    {
      "question": "What is False?",
      "options": [
        "None of the above.",
        "None of the above.",
        "default\ndepth\nOptional",
        "used to decode or convert a JSON object to a PHP object"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of False is 'default\ndepth\nOptional'."
    }
  ],
  "summary": "This tutorial covers PHPjson_decode()Function concepts and techniques. You'll learn how to use PHPjson_decode()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPjson_decode()Function and how to apply it in your projects."
}