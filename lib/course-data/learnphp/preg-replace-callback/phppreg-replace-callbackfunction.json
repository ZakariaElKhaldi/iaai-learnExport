{
  "id": "7ecfb00d-cb66-4acf-b5c6-0b872120e1ab",
  "title": "PHPpreg_replace_callback()Function",
  "slug": "phppreg-replace-callbackfunction",
  "metadata": {
    "description": "Learn about PHPpreg_replace_callback()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "function",
      "matches",
      "input",
      "expression",
      "callback",
      "string",
      "array",
      "replacements",
      "count",
      "pattern"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPHP",
    "subcategory": "preg_replace_callback"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PHP\npreg_replace_callback()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nCount letters in all of the words in a sentence:\n<?php\nfunction countLetters($matches) {\nreturn $matches[0] . '(' . \n  strlen($matches[0]) . ')';\n}\n$input = \"Welcome to .com!\";\n$pattern = '/[a-z0-9\\.]+/i';\n$result = preg_replace_callback($pattern, \n  'countLetters', $input);\necho $result;\n?>\n\nDefinition and Usage\nThe\npreg_replace_callback()\nfunction, given an expression and a callback, returns a string where all matches of the expression\nare replaced with the substring returned by the callback function.\nSyntax\npreg_replace_callback(\npattern, callback, input, limit, count\n)\nParameter Values\nParameter\nDescription\npattern\nRequired. A regular expression or array of regular expressions indicating what to search for\nreplacements\nRequired. A callback function which returns the replacement.\nThe callback function has one parameter containing an array of\nmatches. The first element in the array contains the match for the\nwhole expression while the remaining elements have matches for\neach of the groups in the expression.\ninput\nRequired. The string or array of strings in which replacements are being performed\nlimit\nOptional. Defaults to -1, meaning unlimited. Sets a limit to how many replacements can be done in each string\ncount\nOptional. After the function has executed, this variable will contain a number indicating how many replacements were performed\nTechnical Details\nReturn Value:\nReturns a string or an array of strings resulting from applying the replacements to the input string or strings.\nPHP Version:\n4.0.5+\nChangelog:\nPHP 5.1.0 - The count parameter was added\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?php\nfunction countLetters($matches) {\nreturn $matches[0] . '(' . \n  strlen($matches[0]) . ')';\n}\n$input = \"Welcome to W3Schools.com!\";\n$pattern = '/[a-z0-9\\.]+/i';\n$result = preg_replace_callback($pattern, \n  'countLetters', $input);\necho $result;\n?>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?php\nfunction countLetters($matches) {\nreturn $matches[0] . '(' . \n  strlen($matches[0]) . ')';\n}\n$input = \"Welcome to W3Schools.com!\";\n$pattern = '/[a-z0-9\\.]+/i';\n# TODO: Complete this line\n  'countLetters', $input);\necho $result;\n?>",
      "solution": "<?php\nfunction countLetters($matches) {\nreturn $matches[0] . '(' . \n  strlen($matches[0]) . ')';\n}\n$input = \"Welcome to W3Schools.com!\";\n$pattern = '/[a-z0-9\\.]+/i';\n$result = preg_replace_callback($pattern, \n  'countLetters', $input);\necho $result;\n?>"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "95b0f2aa-e936-4b90-ab2e-4412942c541d",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "d1a88e10-31e2-4fbe-b467-1a0629e66368",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "dccfb752-914e-46f3-a2a9-b5e049bb3a45",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is returns a string where all matches of the expression?",
      "options": [
        "being performed\nlimit\nOptional",
        "None of the above.",
        "replaced with the substring returned by the callback function",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of returns a string where all matches of the expression is 'replaced with the substring returned by the callback function'."
    },
    {
      "question": "What is The string or array of strings in which replacements?",
      "options": [
        "None of the above.",
        "None of the above.",
        "replaced with the substring returned by the callback function",
        "being performed\nlimit\nOptional"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of The string or array of strings in which replacements is 'being performed\nlimit\nOptional'."
    }
  ],
  "summary": "This tutorial covers PHPpreg_replace_callback()Function concepts and techniques. You'll learn how to use PHPpreg_replace_callback()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PHPpreg_replace_callback()Function and how to apply it in your projects."
}