{
  "title": "Django QuerySet - Get Data",
  "url": "https://www.w3schools.com/django/django_queryset_get.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Django QuerySet - Get Data",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Get Data",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "There are different methods to get data from a model into a QuerySet.",
      "html": "<p>There are different methods to get data from a model into a QuerySet.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The values() Method",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The values() method allows you to return each object as a Python dictionary, with the names and values as key/value pairs:",
      "html": "<p>The <code>values()</code> method allows you to return \neach object as a Python dictionary, with the names and values as key/value \npairs:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": true
      },
      "code": "from\ndjango\n.\nhttp\nimport\nHttpResponse\n\nfrom\ndjango\n.\ntemplate\nimport\nloader\n\nfrom\n\n.\nmodels\nimport\nMember\n\ndef\ntesting\n(\nrequest\n)\n:\n\nmydata\n=\nMember\n.\nobjects\n.\nall\n(\n)\n.\nvalues\n(\n)\n\ntemplate\n=\nloader\n.\nget_template\n(\n'template.html'\n)\n\ncontext\n=\n\n{\n\n\n'mymembers'\n:\nmydata\n,\n\n\n}\n\n\nreturn\n\nHttpResponse\n(\ntemplate\n.\nrender\n(\ncontext\n,\nrequest\n)\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-from\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword keyword-import\">import</span> HttpResponse\n<span class=\"token keyword keyword-from\">from</span> django<span class=\"token punctuation\">.</span>template <span class=\"token keyword keyword-import\">import</span> loader\n<span class=\"token keyword keyword-from\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword keyword-import\">import</span> Member\n\ndef <span class=\"token function\">testing</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n  mydata <span class=\"token operator\">=</span> Member<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  template <span class=\"token operator\">=</span> loader<span class=\"token punctuation\">.</span><span class=\"token function\">get_template</span><span class=\"token punctuation\">(</span><span class=\"token string\">'template.html'</span><span class=\"token punctuation\">)</span>\n  context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'mymembers'</span><span class=\"token operator\">:</span> mydata<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token function\">HttpResponse</span><span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Return Specific Columns",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The values_list() method allows you to return only the columns that you specify.",
      "html": "<p>The <code>values_list()</code> method allows you to return \nonly the columns that you specify.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": true
      },
      "code": "from\ndjango\n.\nhttp\nimport\nHttpResponse\n\nfrom\ndjango\n.\ntemplate\nimport\nloader\n\nfrom\n\n.\nmodels\nimport\nMember\n\ndef\ntesting\n(\nrequest\n)\n:\n\nmydata\n=\nMember\n.\nobjects\n.\nvalues_list\n(\n'firstname'\n)\n\ntemplate\n=\nloader\n.\nget_template\n(\n'template.html'\n)\n\ncontext\n=\n\n{\n\n\n'mymembers'\n:\nmydata\n,\n\n\n}\n\n\nreturn\n\nHttpResponse\n(\ntemplate\n.\nrender\n(\ncontext\n,\nrequest\n)\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-from\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword keyword-import\">import</span> HttpResponse\n<span class=\"token keyword keyword-from\">from</span> django<span class=\"token punctuation\">.</span>template <span class=\"token keyword keyword-import\">import</span> loader\n<span class=\"token keyword keyword-from\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword keyword-import\">import</span> Member\n\ndef <span class=\"token function\">testing</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n  mydata <span class=\"token operator\">=</span> Member<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token function\">values_list</span><span class=\"token punctuation\">(</span><span class=\"token string\">'firstname'</span><span class=\"token punctuation\">)</span>\n  template <span class=\"token operator\">=</span> loader<span class=\"token punctuation\">.</span><span class=\"token function\">get_template</span><span class=\"token punctuation\">(</span><span class=\"token string\">'template.html'</span><span class=\"token punctuation\">)</span>\n  context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'mymembers'</span><span class=\"token operator\">:</span> mydata<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token function\">HttpResponse</span><span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Return Specific Rows",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can filter the search to only return specific rows/records, by using the filter() method.",
      "html": "<p>You can filter the search to only return specific rows/records, by using the <code>filter()</code> method.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": true
      },
      "code": "from\ndjango\n.\nhttp\nimport\nHttpResponse\n\nfrom\ndjango\n.\ntemplate\nimport\nloader\n\nfrom\n\n.\nmodels\nimport\nMember\n\ndef\ntesting\n(\nrequest\n)\n:\n\nmydata\n=\nMember\n.\nobjects\n.\nfilter\n(\nfirstname\n=\n'Emil'\n)\n.\nvalues\n(\n)\n\ntemplate\n=\nloader\n.\nget_template\n(\n'template.html'\n)\n\ncontext\n=\n\n{\n\n\n'mymembers'\n:\nmydata\n,\n\n\n}\n\n\nreturn\n\nHttpResponse\n(\ntemplate\n.\nrender\n(\ncontext\n,\nrequest\n)\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-from\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword keyword-import\">import</span> HttpResponse\n<span class=\"token keyword keyword-from\">from</span> django<span class=\"token punctuation\">.</span>template <span class=\"token keyword keyword-import\">import</span> loader\n<span class=\"token keyword keyword-from\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword keyword-import\">import</span> Member\n\ndef <span class=\"token function\">testing</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n  mydata <span class=\"token operator\">=</span> Member<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>firstname<span class=\"token operator\">=</span><span class=\"token string\">'Emil'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  template <span class=\"token operator\">=</span> loader<span class=\"token punctuation\">.</span><span class=\"token function\">get_template</span><span class=\"token punctuation\">(</span><span class=\"token string\">'template.html'</span><span class=\"token punctuation\">)</span>\n  context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'mymembers'</span><span class=\"token operator\">:</span> mydata<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token function\">HttpResponse</span><span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "next chapter",
          "href": "https://www.w3schools.com/django_queryset_filter.php",
          "title": ""
        }
      ],
      "text": "You will learn more about the filter() method in the next chapter .",
      "html": "<p>You will learn more about the <code>filter()</code> method in the <a href=\"django_queryset_filter.php\">next chapter</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is a correct syntax for returning the result as dictionary, with the names and values as key/value pairs?",
      "html": "<p>What is a correct syntax for returning the result as dictionary, with the names and values as key/value pairs?</p>"
    }
  ]
}