{
  "title": "Django - Add Static Files",
  "url": "https://www.w3schools.com/django/django_add_static_files.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Django - Add Static File",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Create Static Folder",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When building web applications, you probably want to add some static files like images or css files.",
      "html": "<p>When building web applications, you probably want to add some static files like images or css files.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Start by creating a folder named static in your project, the same place where you created the templates folder:",
      "html": "<p>Start by creating a folder named <code>static</code> in your project, the same place where you created the <code>templates</code> folder:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The name of the folder has to be static .",
      "html": "<p>The name of the folder has to be <code>static</code>.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate",
          "w3-black"
        ],
        "isNotranslate": true
      },
      "code": "my_tennis_club\n\nmanage.py\n\nmy_tennis_club/\n\nmembers/\n\ntemplates/\n\nstatic/",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate w3-black\">\nmy_tennis_club<br/>\n\u00a0\u00a0\u00a0\u00a0manage.py<br/>\n\u00a0\u00a0\u00a0\u00a0my_tennis_club/<br/>\n\u00a0\u00a0\u00a0\u00a0members/<br/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0templates/<br/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static/<br/>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Add a CSS file in the static folder, the name is your choice, we will call it myfirst.css in this example:",
      "html": "<p>Add a CSS file in the <code>static</code> folder, \nthe name is your choice, we will call it <code>myfirst.css</code> \nin this example:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate",
          "w3-black"
        ],
        "isNotranslate": true
      },
      "code": "my_tennis_club\n\nmanage.py\n\nmy_tennis_club/\n\nmembers/\n\ntemplates/\n\nstatic/\n\nmyfirst.css",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate w3-black\">\nmy_tennis_club<br/>\n\u00a0\u00a0\u00a0\u00a0manage.py<br/>\n\u00a0\u00a0\u00a0\u00a0my_tennis_club/<br/>\n\u00a0\u00a0\u00a0\u00a0members/<br/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0templates/<br/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static/<br/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0myfirst.css<br/>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Open the CSS file and insert the following:",
      "html": "<p>Open the CSS file and insert the following:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-css"
        ],
        "isNotranslate": true
      },
      "code": "body\n\n{\n\n\nbackground-color\n:\nlightblue\n;\n\n\nfont-family\n:\nverdana\n;\n\n\n}",
      "language": "css",
      "code_html": "<pre class=\"notranslate w3-white language-css\" tabindex=\"0\"><code class=\"language-css\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> lightblue<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> verdana<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-css"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-css"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Modify the Template",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Now you have a CSS file, with some CSS styling. The next step will be to include this file in a HTML template:",
      "html": "<p>Now you have a CSS file, with some CSS styling. The next step will be to include this file in \na HTML template:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Open the templates/template.html file and add the following:",
      "html": "<p>Open the <code>templates/template.html</code> file and add the following:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "language-django"
        ],
        "isNotranslate": true
      },
      "code": "{%\n\nload\n\nstatic\n\n%}",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate language-django\" tabindex=\"0\"><code class=\"language-django\"><span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">load</span> <span class=\"token variable\">static</span> <span class=\"token delimiter punctuation\">%}</span></span></code></pre>",
      "code_classes": [
        "notranslate",
        "language-django"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "language-django"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "And:",
      "html": "<p>And:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "language-django"
        ],
        "isNotranslate": true
      },
      "code": "<\nlink\n\nrel\n=\n\"\nstylesheet\n\"\n\nhref\n=\n\"\n{%\n\nstatic\n\n'myfirst.css'\n\n%}\n\"\n>",
      "language": "html",
      "code_html": "<pre class=\"notranslate language-django\" tabindex=\"0\"><code class=\"language-django\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">static</span> <span class=\"token string\">'myfirst.css'</span> <span class=\"token delimiter punctuation\">%}</span></span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre>",
      "code_classes": [
        "notranslate",
        "language-django"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "language-django"
      ],
      "is_notranslate": true
    },
    {
      "type": "code",
      "metadata": {
        "language": "html",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-django"
        ],
        "isNotranslate": true
      },
      "code": "{%\n\nload\n\nstatic\n\n%}\n\n\n<!\nDOCTYPE\n\nhtml\n>\n\n\n<\nhtml\n>\n\n\n<\nlink\n\nrel\n=\n\"\nstylesheet\n\"\n\nhref\n=\n\"\n{%\n\nstatic\n\n'myfirst.css'\n\n%}\n\"\n>\n\n\n<\nbody\n>\n\n\n\n{%\n\nfor\n\nx\n\nin\n\nfruits\n\n%}\n\n\n<\nh1\n>\n{{\n\nx\n\n}}\n</\nh1\n>\n\n\n{%\n\nendfor\n\n%}\n\n\n\n</\nbody\n>\n\n\n</\nhtml\n>",
      "language": "html",
      "code_html": "<pre class=\"notranslate w3-white language-django\" data-line=\"1,4\" tabindex=\"0\"><code class=\"language-django\"><span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">load</span> <span class=\"token variable\">static</span> <span class=\"token delimiter punctuation\">%}</span></span>\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">static</span> <span class=\"token string\">'myfirst.css'</span> <span class=\"token delimiter punctuation\">%}</span></span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">for</span> <span class=\"token variable\">x</span> <span class=\"token keyword keyword-in\">in</span> <span class=\"token variable\">fruits</span> <span class=\"token delimiter punctuation\">%}</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{{</span> <span class=\"token variable\">x</span> <span class=\"token delimiter punctuation\">}}</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">endfor</span> <span class=\"token delimiter punctuation\">%}</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"1\" data-start=\"1\" style=\"top: 0px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"4\" data-start=\"4\" style=\"top: 66px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-django"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-django"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Restart the server for the changes to take effect:",
      "html": "<p>Restart the server for the changes to take effect:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate",
          "w3-black"
        ],
        "isNotranslate": true
      },
      "code": "python manage.py runserver",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate w3-black\">\npython manage.py runserver\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "127.0.0.1:8000/testing/",
          "href": "http://127.0.0.1:8000/testing/",
          "title": ""
        }
      ],
      "text": "And check out the result in your own browser: 127.0.0.1:8000/testing/ .",
      "html": "<p>And check out the result in your own browser:\n<code><a href=\"http://127.0.0.1:8000/testing/\" target=\"_blank\">127.0.0.1:8000/testing/</a></code>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Didn't Work?",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Just testing? If you just want to play around, and not going to deploy your work, you can set DEBUG = True in the settings.py file, and the example above will work.",
      "html": "<p><strong>Just testing?</strong> If you just want to play around, and not \ngoing to deploy your work, you can set <code>DEBUG = True</code> in the <code>settings.py</code> file, \nand the example above will work.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Plan to deploy? If you plan to deploy your work, you should set DEBUG = False in the settings.py file. The example above will fail, because Django has no built-in solution for serving static files, but there are other ways to serve static files, you will learn how in the next chapter.",
      "html": "<p><strong>Plan to deploy?</strong> If you plan to deploy your work, you should \n  set <code>DEBUG = False</code> in the <code>settings.py</code> file. The example above will fail, because Django has no built-in solution for \n  serving static files, but there are other ways to serve static files, you will \n  learn how in the next chapter.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": true
      },
      "code": ".\n\n\n.\n\n#\nSECURITY\n\nWARNING\n:\ndon't run\nwith\ndebug turned on\nin\nproduction\n!\n\n\nDEBUG\n\n=\nTrue\n\n.\n\n\n.",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">.</span>\n# <span class=\"token constant\">SECURITY</span> <span class=\"token constant\">WARNING</span><span class=\"token operator\">:</span> don't run <span class=\"token keyword keyword-with\">with</span> debug turned on <span class=\"token keyword keyword-in\">in</span> production<span class=\"token operator\">!</span>\n<span class=\"token constant\">DEBUG</span> <span class=\"token operator\">=</span> True\n<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">.</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This will make the example work, but we want you to choose DEBUG = False , because that is the best way to learn how to work with Django.",
      "html": "<p>This will make the example work, but we want you to choose \n<code>DEBUG = False</code>,\nbecause that is the best way to learn how to work with Django.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Choose Debug = False",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "For the rest of this tutorial, we will run with DEBUG = False , even in development, because that is the best way to learn how to work with Django.",
      "html": "<p>For the rest of this tutorial, we will run with <code>DEBUG = False</code>, even in \ndevelopment, because that is the best way to learn how to work with Django.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": true
      },
      "code": ".\n\n\n.\n\n#\nSECURITY\n\nWARNING\n:\ndon't run\nwith\ndebug turned on\nin\nproduction\n!\n\n\nDEBUG\n\n=\nFalse\n\n\nALLOWED_HOSTS\n\n=\n\n[\n'*'\n]\n\n\n\n.\n\n\n.",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">.</span>\n# <span class=\"token constant\">SECURITY</span> <span class=\"token constant\">WARNING</span><span class=\"token operator\">:</span> don't run <span class=\"token keyword keyword-with\">with</span> debug turned on <span class=\"token keyword keyword-in\">in</span> production<span class=\"token operator\">!</span>\n<span class=\"token constant\">DEBUG</span> <span class=\"token operator\">=</span> False\n\n<span class=\"token constant\">ALLOWED_HOSTS</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">.</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When using DEBUG = False you have to specify which host name(s) are allowed to host your work. You could choose '127.0.0.1' or 'localhost' which both represents the address of your local machine.",
      "html": "<p>When using <code>DEBUG = False</code> you have to specify which host name(s) are allowed\nto host your work. You could choose <code>'127.0.0.1'</code> or \n<code>'localhost'</code>\nwhich both represents the address of your local machine.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We choose '*' , which means any address are allowed to host this site. This should be change into a real domain name when you deploy your project to a public server.",
      "html": "<p>We choose <code>'*'</code>, which means <em>any</em> address are allowed to host this site.\nThis should be change into a real domain name when you deploy your project to a public server.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Didn't Work?",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "That is right, the example still does not work.",
      "html": "<p>That is right, the example <em>still</em> does not work.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You will have install a third-party library in order to handle static files.",
      "html": "<p>You will have install a third-party library in order to handle static files.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "next chapter",
          "href": "https://www.w3schools.com/django_static_whitenoise.php",
          "title": ""
        }
      ],
      "text": "There are many alternatives, we will show you how to use a Python library called WhiteNoise in the next chapter .",
      "html": "<p>There are many alternatives, we will show you how to use a Python library called \n<strong>WhiteNoise</strong> in the <a href=\"django_static_whitenoise.php\">next chapter</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the HTML file, what is a correct syntax for having access to static files in the static folder?",
      "html": "<p>In the HTML file, what is a correct syntax for having access to static files in the <code>static</code> folder?</p>"
    }
  ]
}