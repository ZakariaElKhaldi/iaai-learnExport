{
  "title": "Django QuerySet",
  "url": "https://www.w3schools.com/django/django_queryset.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Django QuerySet",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Django QuerySet",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A QuerySet is a collection of data from a database.",
      "html": "<p>A QuerySet is a collection of data from a database.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A QuerySet is built up as a list of objects.",
      "html": "<p>A QuerySet is built up as a list of objects.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "QuerySets makes it easier to get the data you actually need, by allowing you to filter and order the data at an early stage.",
      "html": "<p>QuerySets makes it easier to get the data you actually need, by allowing you to filter and order the data \nat an early stage.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In this tutorial we will be querying data from the Member table.",
      "html": "<p>In this tutorial we will be querying data from the <code>Member</code> table.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<div class=\"notranslate w3-white\" style=\"height:250px;padding:16px\">\n<div class=\"w3-responsive\">\n<table border=\"1\">\n<tbody><tr>\n<th>\u00a0id\u00a0</th>\n<th>\u00a0firstname\u00a0</th>\n<th>\u00a0lastname\u00a0</th>\n<th>\u00a0phone\u00a0</th>\n<th>\u00a0joined_date\u00a0</th>\n</tr>\n<tr>\n<td>\u00a01\u00a0</td>\n<td>\u00a0Emil\u00a0</td>\n<td>\u00a0Refsnes\u00a0</td>\n<td>\u00a05551234\u00a0</td>\n<td>\u00a02022-01-05\u00a0</td>\n</tr>\n<tr>\n<td>\u00a02\u00a0</td>\n<td>\u00a0Tobias\u00a0</td>\n<td>\u00a0Refsnes\u00a0</td>\n<td>\u00a05557777\u00a0</td>\n<td>\u00a02022-04-01\u00a0</td>\n</tr>\n<tr>\n<td>\u00a03\u00a0</td>\n<td>\u00a0Linus\u00a0</td>\n<td>\u00a0Refsnes\u00a0</td>\n<td>\u00a05554321\u00a0</td>\n<td>\u00a02021-12-24\u00a0</td>\n</tr>\n<tr>\n<td>\u00a04\u00a0</td>\n<td>\u00a0Lene\u00a0</td>\n<td>\u00a0Refsnes\u00a0</td>\n<td>\u00a05551234\u00a0</td>\n<td>\u00a02021-05-01\u00a0</td>\n</tr>\n<tr>\n<td>\u00a05\u00a0</td>\n<td>\u00a0Stalikken\u00a0</td>\n<td>\u00a0Refsnes\u00a0</td>\n<td>\u00a05559876\u00a0</td>\n<td>\u00a02022-09-29\u00a0</td>\n</tr>\n</tbody></table>\n</div>\n</div>",
      "code_classes": [
        "notranslate",
        "w3-white"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Querying Data",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In views.py , we have a view for testing called testing where we will test different queries.",
      "html": "<p>In <code>views.py</code>, we have a view for testing called \n<code>testing</code> where we will test different queries.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the example below we use the .all() method to get all the records and fields of the Member model:",
      "html": "<p>In the example below we use the <code>.all()</code>\nmethod to get all the records and fields of the <code>Member</code> model:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": true
      },
      "code": "from\ndjango\n.\nhttp\nimport\nHttpResponse\n\nfrom\ndjango\n.\ntemplate\nimport\nloader\n\nfrom\n\n.\nmodels\nimport\nMember\n\ndef\ntesting\n(\nrequest\n)\n:\n\nmydata\n=\nMember\n.\nobjects\n.\nall\n(\n)\n\ntemplate\n=\nloader\n.\nget_template\n(\n'template.html'\n)\n\ncontext\n=\n\n{\n\n\n'mymembers'\n:\nmydata\n,\n\n\n}\n\n\nreturn\n\nHttpResponse\n(\ntemplate\n.\nrender\n(\ncontext\n,\nrequest\n)\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-from\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword keyword-import\">import</span> HttpResponse\n<span class=\"token keyword keyword-from\">from</span> django<span class=\"token punctuation\">.</span>template <span class=\"token keyword keyword-import\">import</span> loader\n<span class=\"token keyword keyword-from\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword keyword-import\">import</span> Member\n\ndef <span class=\"token function\">testing</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n  mydata <span class=\"token operator\">=</span> Member<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  template <span class=\"token operator\">=</span> loader<span class=\"token punctuation\">.</span><span class=\"token function\">get_template</span><span class=\"token punctuation\">(</span><span class=\"token string\">'template.html'</span><span class=\"token punctuation\">)</span>\n  context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'mymembers'</span><span class=\"token operator\">:</span> mydata<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token function\">HttpResponse</span><span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The object is placed in a variable called mydata , and is sent to the template via the context object as mymembers , and looks like this:",
      "html": "<p>The object is placed in a variable called <code>mydata</code>, and is sent to the template \nvia the <code>context</code> object as\n<code>mymembers</code>, and looks like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-codeline",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "<QuerySet [\n\u00a0 <Member: Member object (1)>,\n\u00a0 <Member: \nMember object (2)>,\n\u00a0 <Member: Member object (3)>,\n\u00a0 \n<Member: Member object (4)>,\n\u00a0 <Member: Member object (5)>\n]>",
      "language": "html",
      "code_html": "<div class=\"w3-codeline notranslate\">\n  &lt;QuerySet [<br/>\u00a0 &lt;Member: Member object (1)&gt;,<br/>\u00a0 &lt;Member: \n  Member object (2)&gt;,<br/>\u00a0 &lt;Member: Member object (3)&gt;,<br/>\u00a0 \n  &lt;Member: Member object (4)&gt;,<br/>\u00a0 &lt;Member: Member object (5)&gt;<br/>]&gt;</div>",
      "code_classes": [
        "w3-codeline",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-codeline",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "As you can see, our Member model contains 5 records, and are listed inside the QuerySet as 5 objects.",
      "html": "<p>As you can see, our <code>Member</code> model contains 5 records, and are listed inside \nthe QuerySet as 5 objects.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the template you can use the mymembers object to generate content:",
      "html": "<p>In the template you can use the <code>mymembers</code> \nobject to generate content:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-django"
        ],
        "isNotranslate": true
      },
      "code": "<\ntable\n\nborder\n=\n'\n1\n'\n>\n\n\n<\ntr\n>\n\n\n<\nth\n>\nID\n</\nth\n>\n\n\n<\nth\n>\nFirstname\n</\nth\n>\n\n\n<\nth\n>\nLastname\n</\nth\n>\n\n\n</\ntr\n>\n\n\n{%\n\nfor\n\nx\n\nin\n\nmymembers\n\n%}\n\n\n<\ntr\n>\n\n\n<\ntd\n>\n{{\n\nx\n.\nid\n\n}}\n</\ntd\n>\n\n\n<\ntd\n>\n{{\n\nx\n.\nfirstname\n\n}}\n</\ntd\n>\n\n\n<\ntd\n>\n{{\n\nx\n.\nlastname\n\n}}\n</\ntd\n>\n\n\n</\ntr\n>\n\n\n{%\n\nendfor\n\n%}\n\n\n</\ntable\n>",
      "language": "html",
      "code_html": "<pre class=\"notranslate w3-white language-django\" tabindex=\"0\"><code class=\"language-django\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span> <span class=\"token attr-name\">border</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>1<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">&gt;</span></span>ID<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">&gt;</span></span>Firstname<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">&gt;</span></span>Lastname<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">for</span> <span class=\"token variable\">x</span> <span class=\"token keyword keyword-in\">in</span> <span class=\"token variable\">mymembers</span> <span class=\"token delimiter punctuation\">%}</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{{</span> <span class=\"token variable\">x</span><span class=\"token punctuation\">.</span><span class=\"token variable\">id</span> <span class=\"token delimiter punctuation\">}}</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{{</span> <span class=\"token variable\">x</span><span class=\"token punctuation\">.</span><span class=\"token variable\">firstname</span> <span class=\"token delimiter punctuation\">}}</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{{</span> <span class=\"token variable\">x</span><span class=\"token punctuation\">.</span><span class=\"token variable\">lastname</span> <span class=\"token delimiter punctuation\">}}</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">endfor</span> <span class=\"token delimiter punctuation\">%}</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">&gt;</span></span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-django"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-django"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Of the following, only one is a correct QuerySet. which one?",
      "html": "<p>Of the following, only one is a correct QuerySet. which one?</p>"
    }
  ]
}