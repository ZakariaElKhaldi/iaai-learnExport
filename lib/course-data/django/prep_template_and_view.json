{
  "title": "Django Prepare Template",
  "url": "https://www.w3schools.com/django/django_prepare_template.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Django Prepare Template",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Create Template",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "After creating Models, with the fields and data we want in them, it is time to display the data in a web page.",
      "html": "<p>After creating Models, with the fields and data we want in them,\nit is time to display the data in a web page.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Start by creating an HTML file named all_members.html and place it in the /templates/ folder:",
      "html": "<p>Start by creating an HTML file named\n<code>all_members.html</code> and place it in the\n<code>/templates/</code> folder:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "html",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-django"
        ],
        "isNotranslate": true
      },
      "code": "<!\nDOCTYPE\n\nhtml\n>\n\n\n<\nhtml\n>\n\n\n<\nbody\n>\n\n\n\n<\nh1\n>\nMembers\n</\nh1\n>\n\n\n\n<\nul\n>\n\n\n{%\n\nfor\n\nx\n\nin\n\nmymembers\n\n%}\n\n\n<\nli\n>\n{{\n\nx\n.\nfirstname\n\n}}\n\n{{\n\nx\n.\nlastname\n\n}}\n</\nli\n>\n\n\n{%\n\nendfor\n\n%}\n\n\n</\nul\n>\n\n\n\n</\nbody\n>\n\n\n</\nhtml\n>",
      "language": "html",
      "code_html": "<pre class=\"notranslate w3-white language-django\" tabindex=\"0\"><code class=\"language-django\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>Members<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n  \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">for</span> <span class=\"token variable\">x</span> <span class=\"token keyword keyword-in\">in</span> <span class=\"token variable\">mymembers</span> <span class=\"token delimiter punctuation\">%}</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{{</span> <span class=\"token variable\">x</span><span class=\"token punctuation\">.</span><span class=\"token variable\">firstname</span> <span class=\"token delimiter punctuation\">}}</span></span> <span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{{</span> <span class=\"token variable\">x</span><span class=\"token punctuation\">.</span><span class=\"token variable\">lastname</span> <span class=\"token delimiter punctuation\">}}</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">endfor</span> <span class=\"token delimiter punctuation\">%}</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-django"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-django"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Do you see the {% %} brackets inside the HTML document?",
      "html": "<p>Do you see the <code>{% %}</code> brackets inside the HTML document?</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "They are Django Tags, telling Django to perform some programming logic inside these brackets.",
      "html": "<p>They are Django Tags, telling Django to perform some programming logic inside these brackets.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Django Tags chapter",
          "href": "https://www.w3schools.com/django_template_tags.php",
          "title": ""
        }
      ],
      "text": "You will learn more about Django Tags in our Django Tags chapter .",
      "html": "<p>You will learn more about Django Tags in our <a href=\"django_template_tags.php\">Django Tags chapter</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Modify View",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Next we need to make the model data available in the template. This is done in the view.",
      "html": "<p>Next we need to make the model data available in the template. This is done in the view.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the view we have to import the Member model, and send it to the template like this:",
      "html": "<p>In the view we have to import the <code>Member</code> model, and send it to the template like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": true
      },
      "code": "from\ndjango\n.\nhttp\nimport\nHttpResponse\n\nfrom\ndjango\n.\ntemplate\nimport\nloader\n\nfrom\n\n.\nmodels\nimport\nMember\n\ndef\nmembers\n(\nrequest\n)\n:\n\nmymembers\n=\nMember\n.\nobjects\n.\nall\n(\n)\n.\nvalues\n(\n)\n\ntemplate\n=\nloader\n.\nget_template\n(\n'all_members.html'\n)\n\ncontext\n=\n\n{\n\n\n'mymembers'\n:\nmymembers\n,\n\n\n}\n\n\nreturn\n\nHttpResponse\n(\ntemplate\n.\nrender\n(\ncontext\n,\nrequest\n)\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-from\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword keyword-import\">import</span> HttpResponse\n<span class=\"token keyword keyword-from\">from</span> django<span class=\"token punctuation\">.</span>template <span class=\"token keyword keyword-import\">import</span> loader\n<span class=\"token keyword keyword-from\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword keyword-import\">import</span> Member\n\ndef <span class=\"token function\">members</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n  mymembers <span class=\"token operator\">=</span> Member<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  template <span class=\"token operator\">=</span> loader<span class=\"token punctuation\">.</span><span class=\"token function\">get_template</span><span class=\"token punctuation\">(</span><span class=\"token string\">'all_members.html'</span><span class=\"token punctuation\">)</span>\n  context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'mymembers'</span><span class=\"token operator\">:</span> mymembers<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token function\">HttpResponse</span><span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The members view does the following:",
      "html": "<p>The <code>members</code> view does the following:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Result",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We have created an example so that you can see the result:",
      "html": "<p>We have created an example so that you can see the result:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you have followed all the steps on your own computer, you can see the result in your own browser:",
      "html": "<p>If you have followed all the steps on your own computer, you can see the result in your own browser:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Start the server by navigating to the /my_tennis_club/ folder and execute this command:",
      "html": "<p>Start the server by navigating to the <code>/my_tennis_club/</code>\nfolder and execute this command:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate",
          "w3-black"
        ],
        "isNotranslate": true
      },
      "code": "python manage.py runserver",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate w3-black\">\npython manage.py runserver\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "127.0.0.1:8000/members/",
          "href": "http://127.0.0.1:8000/members/",
          "title": ""
        }
      ],
      "text": "In the browser window, type 127.0.0.1:8000/members/ in the address bar.",
      "html": "<p>In the browser window, type <code><a href=\"http://127.0.0.1:8000/members/\" target=\"_blank\">127.0.0.1:8000/members/</a></code> in the address bar.</p>"
    }
  ]
}