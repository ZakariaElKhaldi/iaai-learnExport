{
  "title": "Django Slug Field",
  "url": "https://www.w3schools.com/django/django_slug_field.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Django Slug Field",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "What is Slug?",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Have you ever seen url's that look like this:",
      "html": "<p>Have you ever seen url's that look like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate\" style=\"border-radius:4px;font-family:'Segoe UI'\">\n<div>\nw3schools.com/django/learn-about-slug-field</div>\n</div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The \" learn-about-slug-field \" part is a slug.",
      "html": "<p>The \"<span style='font-family:\"Segoe UI\"'>learn-about-slug-field</span>\" part is a slug.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It is a description containing only letters, hyphens, numbers or underscores.",
      "html": "<p>It is a description containing only letters, hyphens, numbers or underscores.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It is often used in url's to make them easier to read, but also to make them more search engine friendly.",
      "html": "<p>It is often used in url's to make them easier to read, but also to make them more search engine friendly.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Url Without Slug",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Django Project",
          "href": "https://www.w3schools.com/django_create_virtual_environment.php",
          "title": ""
        }
      ],
      "text": "If you have followed our Django Project created in this tutorial, you will have a small Django project looking like this:",
      "html": "<p>If you have followed our <a href=\"django_create_virtual_environment.php\">Django Project</a>\ncreated in this tutorial, you will have a small Django project looking like this:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "",
      "html": "<p><img src=\"screenshot_django_members3.png\" style=\"max-width:100%\"/></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "And if you click the first member, you will jump to this page:",
      "html": "<p>And if you click the first member, you will jump to this page:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "",
      "html": "<p><img src=\"screenshot_django_details_1.png\" style=\"max-width:100%\"/></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Check out the address bar:",
      "html": "<p>Check out the address bar:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate\" style=\"border-radius:4px;font-family:'Segoe UI'\">\n<div>\n127.0.0.1:8000/members/details/1</div>\n</div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The number \"1\" refers to the ID of that particular record in the database.",
      "html": "<p>The number \"1\" refers to the ID of that particular record in the database.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Makes sense to the developer, but probably not to anyone else.",
      "html": "<p>Makes sense to the developer, but probably not to anyone else.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Url With Slug",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It would have made more sense if the url looked like this:",
      "html": "<p>It would have made more sense if the url looked like this:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "",
      "html": "<p><img src=\"screenshot_django_details_emil-refsnes.png\" style=\"max-width:100%\"/></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Check out the address bar:",
      "html": "<p>Check out the address bar:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "w3-border",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code w3-border notranslate\" style=\"border-radius:4px;font-family:'Segoe UI'\">\n<div>\n127.0.0.1:8000/members/details/emil-refsnes</div>\n</div>",
      "code_classes": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "w3-border",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "That is a more user friendly url, and Django can help you create such url's in your project.",
      "html": "<p>That is a more user friendly url, and Django can help you create such url's in your project.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Modify the models.py File",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Start by adding a new field in the database.",
      "html": "<p>Start by adding a new field in the database.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Open the models.py file and add a field called slug with the data type SlugField :",
      "html": "<p>Open the <code>models.py</code> file and add a field called\n<code>slug</code> with the data type\n<code>SlugField</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": true
      },
      "code": "from\ndjango\n.\ndb\nimport\nmodels\n\n\nclass\n\nMember\n(\nmodels\n.\nModel\n)\n:\n\nfirstname\n=\nmodels\n.\nCharField\n(\nmax_length\n=\n255\n)\n\nlastname\n=\nmodels\n.\nCharField\n(\nmax_length\n=\n255\n)\n\nphone\n=\nmodels\n.\nIntegerField\n(\nnull\n=\nTrue\n)\n\njoined_date\n=\nmodels\n.\nDateField\n(\nnull\n=\nTrue\n)\n\nslug\n=\nmodels\n.\nSlugField\n(\ndefault\n=\n\"\"\n,\n\nnull\n=\nFalse\n)\n\n\ndef\n__str__\n(\nself\n)\n:\n\n\nreturn\nf\n\"{self.firstname} {self.lastname}\"",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-jsx\" data-line=\"8\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-from\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword keyword-import\">import</span> models\n\n<span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Member</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n  firstname <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span><span class=\"token function\">CharField</span><span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n  lastname <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span><span class=\"token function\">CharField</span><span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n  phone <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span><span class=\"token function\">IntegerField</span><span class=\"token punctuation\">(</span><span class=\"token keyword keyword-null\">null</span><span class=\"token operator\">=</span>True<span class=\"token punctuation\">)</span>\n  joined_date <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span><span class=\"token function\">DateField</span><span class=\"token punctuation\">(</span><span class=\"token keyword keyword-null\">null</span><span class=\"token operator\">=</span>True<span class=\"token punctuation\">)</span>\n  slug <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span><span class=\"token function\">SlugField</span><span class=\"token punctuation\">(</span><span class=\"token keyword keyword-default\">default</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword keyword-null\">null</span><span class=\"token operator\">=</span>False<span class=\"token punctuation\">)</span>\n\n  def <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword keyword-return\">return</span> f<span class=\"token string\">\"{self.firstname} {self.lastname}\"</span>\n<div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"8\" data-start=\"8\" style=\"top: 154px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This is a change in the Model's structure, and therefor we have to make a migration to tell Django that it has to update the database:",
      "html": "<p>This is a change in the Model's structure, and therefor we have to make a migration\nto tell Django that it has to update the database:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate",
          "w3-black"
        ],
        "isNotranslate": true
      },
      "code": "python manage.py makemigrations",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate w3-black\">\npython manage.py makemigrations\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "And the migrate command:",
      "html": "<p>And the migrate command:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate",
          "w3-black"
        ],
        "isNotranslate": true
      },
      "code": "python manage.py migrate",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate w3-black\">\npython manage.py migrate\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Change Admin",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Now we have a new field in the database, but we also want this field to be updated automatically when we set the firstname or lastname of a member.",
      "html": "<p>Now we have a new field in the database, but we also want this field to be updated automatically\nwhen we set the firstname or lastname of a member.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This can be done with a built-in Django feature called prepopulated_fields where you specify the field you want to pre-populate, and a tuple with the field(s) you want to populate it with.",
      "html": "<p>This can be done with a built-in Django feature called\n<code>prepopulated_fields</code>\nwhere you specify the field you want to pre-populate, and a tuple with the \nfield(s) you want to populate it with.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This is done in the admin.py file:",
      "html": "<p>This is done in the <code>admin.py</code> file:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": true
      },
      "code": "from\ndjango\n.\ncontrib\nimport\nadmin\n\nfrom\n\n.\nmodels\nimport\nMember\n\n# Register your models here\n.\n\n\n\nclass\n\nMemberAdmin\n(\nadmin\n.\nModelAdmin\n)\n:\n\nlist_display\n=\n\n(\n\"firstname\"\n,\n\n\"lastname\"\n,\n\n\"joined_date\"\n,\n)\n\nprepopulated_fields\n=\n\n{\n\"slug\"\n:\n\n(\n\"firstname\"\n,\n\n\"lastname\"\n)\n}\n\n\nadmin\n.\nsite\n.\nregister\n(\nMember\n,\nMemberAdmin\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-jsx\" data-line=\"8\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-from\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword keyword-import\">import</span> admin\n<span class=\"token keyword keyword-from\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword keyword-import\">import</span> Member\n\n# Register your models here<span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">MemberAdmin</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>ModelAdmin<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n  list_display <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"firstname\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"lastname\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"joined_date\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span>\n  prepopulated_fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"slug\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"firstname\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"lastname\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n  \nadmin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>Member<span class=\"token punctuation\">,</span> MemberAdmin<span class=\"token punctuation\">)</span>\n<div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"8\" data-start=\"8\" style=\"top: 154px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Enter the Admin interface and open a record for editing:",
      "html": "<p>Enter the Admin interface and open a record for editing:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "",
      "html": "<p><img src=\"screenshot_admin_slug1.png\" style=\"max-width:100%\"/></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Click \"SAVE\" and the \"slug\" field will be auto populated with the firstname and the lastname, and since the \"slug\" field is of type SlugField, it will \"slugify\" the value, meaning it will put a hyphen between each word.",
      "html": "<p>Click \"SAVE\" and the \"slug\" field will be auto populated with the firstname and the lastname,\nand since the \"slug\" field is of type SlugField, it will \"slugify\" the value, meaning it will\nput a hyphen between each word.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Next time you open the member for editing you will see the slug field with value:",
      "html": "<p>Next time you open the member for editing you will see the slug field with value:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "",
      "html": "<p><img src=\"screenshot_admin_slug2.png\" style=\"max-width:100%\"/></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: Since the new field is empty by default, you have to do this save operation for each member.",
      "html": "<p><strong>Note:</strong> Since the new field is empty by default,\nyou have to do this save operation for each member.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Modify Template",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Now we can replace the ID field with the slug field throughout the project.",
      "html": "<p>Now we can replace the ID field with the slug field throughout the project.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Start with the all_members.html template, where we have a link to the details page:",
      "html": "<p>Start with the <code>all_members.html</code> template,\nwhere we have a link to the details page:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-django"
        ],
        "isNotranslate": true
      },
      "code": "{%\n\nextends\n\n\"master.html\"\n\n%}\n\n\n\n{%\n\nblock\n\ntitle\n\n%}\n\nMy Tennis Club - List of all members\n\n{%\n\nendblock\n\n%}\n\n\n\n\n{%\n\nblock\n\ncontent\n\n%}\n\n\n<\ndiv\n\nclass\n=\n\"\nmycard\n\"\n>\n\n\n<\nh1\n>\nMembers\n</\nh1\n>\n\n\n<\nul\n>\n\n\n{%\n\nfor\n\nx\n\nin\n\nmymembers\n\n%}\n\n\n<\nli\n\nonclick\n=\n\"\nwindow\n.\nlocation\n=\n\n'details/\n{{\n\nx\n.\nslug\n\n}}\n'\n\"\n>\n{{\n\nx\n.\nfirstname\n\n}}\n\n{{\n\nx\n.\nlastname\n\n}}\n</\nli\n>\n\n\n{%\n\nendfor\n\n%}\n\n\n</\nul\n>\n\n\n</\ndiv\n>\n\n\n{%\n\nendblock\n\n%}",
      "language": "java",
      "code_html": "<pre class=\"notranslate w3-white language-django\" data-line=\"13\" tabindex=\"0\"><code class=\"language-django\"><span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">extends</span> <span class=\"token string\">\"master.html\"</span> <span class=\"token delimiter punctuation\">%}</span></span>\n\n<span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">block</span> <span class=\"token variable\">title</span> <span class=\"token delimiter punctuation\">%}</span></span>\n  My Tennis Club - List of all members\n<span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">endblock</span> <span class=\"token delimiter punctuation\">%}</span></span>\n\n\n<span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">block</span> <span class=\"token variable\">content</span> <span class=\"token delimiter punctuation\">%}</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mycard<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>Members<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">for</span> <span class=\"token variable\">x</span> <span class=\"token keyword keyword-in\">in</span> <span class=\"token variable\">mymembers</span> <span class=\"token delimiter punctuation\">%}</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\">window<span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> <span class=\"token string\">'details/<span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{{</span> <span class=\"token variable\">x</span><span class=\"token punctuation\">.</span><span class=\"token variable\">slug</span> <span class=\"token delimiter punctuation\">}}</span></span>'</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{{</span> <span class=\"token variable\">x</span><span class=\"token punctuation\">.</span><span class=\"token variable\">firstname</span> <span class=\"token delimiter punctuation\">}}</span></span> <span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{{</span> <span class=\"token variable\">x</span><span class=\"token punctuation\">.</span><span class=\"token variable\">lastname</span> <span class=\"token delimiter punctuation\">}}</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">endfor</span> <span class=\"token delimiter punctuation\">%}</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token django language-django\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">endblock</span> <span class=\"token delimiter punctuation\">%}</span></span><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"13\" data-start=\"13\" style=\"top: 264px; width: 948px;\"> \n</div></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-django"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-django"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Modify URL",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We also have to make some changes in the urls.py file.",
      "html": "<p>We also have to make some changes in the <code>urls.py</code>file.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Change from <int:id> to <slug:slug> :",
      "html": "<p>Change from <code>&lt;int:id&gt;</code> to <code>&lt;slug:slug&gt;</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": true
      },
      "code": "from\ndjango\n.\nurls\nimport\npath\n\nfrom\n\n.\n\nimport\nviews\n\nurlpatterns\n=\n\n[\n\n\npath\n(\n''\n,\nviews\n.\nmain\n,\nname\n=\n'main'\n)\n,\n\n\npath\n(\n'members/'\n,\nviews\n.\nmembers\n,\nname\n=\n'members'\n)\n,\n\n\npath\n(\n'members/details/<slug:slug>'\n,\nviews\n.\ndetails\n,\nname\n=\n'details'\n)\n,\n\n\npath\n(\n'testing/'\n,\nviews\n.\ntesting\n,\nname\n=\n'testing'\n)\n,\n\n\n]",
      "language": "html",
      "code_html": "<pre class=\"notranslate w3-white language-jsx\" data-line=\"7\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-from\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword keyword-import\">import</span> path\n<span class=\"token keyword keyword-from\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword keyword-import\">import</span> views\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'members/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>members<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'members'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'members/details/&lt;slug:slug&gt;'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>details<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'details'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'testing/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>testing<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'testing'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"7\" data-start=\"7\" style=\"top: 132px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Modify View",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Finally, change the details view to handle incoming request as slug instead of ID:",
      "html": "<p>Finally, change the <code>details</code> view to handle \nincoming request\nas slug instead of ID:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": true
      },
      "code": "from\ndjango\n.\nhttp\nimport\nHttpResponse\n\nfrom\ndjango\n.\ntemplate\nimport\nloader\n\nfrom\n\n.\nmodels\nimport\nMember\n\ndef\nmembers\n(\nrequest\n)\n:\n\nmymembers\n=\nMember\n.\nobjects\n.\nall\n(\n)\n.\nvalues\n(\n)\n\ntemplate\n=\nloader\n.\nget_template\n(\n'all_members.html'\n)\n\ncontext\n=\n\n{\n\n\n'mymembers'\n:\nmymembers\n,\n\n\n}\n\n\nreturn\n\nHttpResponse\n(\ntemplate\n.\nrender\n(\ncontext\n,\nrequest\n)\n)\n\n\ndef\ndetails\n(\nrequest\n,\nslug\n)\n:\n\nmymember\n=\nMember\n.\nobjects\n.\nget\n(\nslug\n=\nslug\n)\n\ntemplate\n=\nloader\n.\nget_template\n(\n'details.html'\n)\n\ncontext\n=\n\n{\n\n\n'mymember'\n:\nmymember\n,\n\n\n}\n\n\nreturn\n\nHttpResponse\n(\ntemplate\n.\nrender\n(\ncontext\n,\nrequest\n)\n)\n\n\ndef\nmain\n(\nrequest\n)\n:\n\ntemplate\n=\nloader\n.\nget_template\n(\n'main.html'\n)\n\n\nreturn\n\nHttpResponse\n(\ntemplate\n.\nrender\n(\n)\n)\n\n\ndef\ntesting\n(\nrequest\n)\n:\n\ntemplate\n=\nloader\n.\nget_template\n(\n'template.html'\n)\n\ncontext\n=\n\n{\n\n\n'fruits'\n:\n\n[\n'Apple'\n,\n\n'Banana'\n,\n\n'Cherry'\n]\n,\n\n\n}\n\n\nreturn\n\nHttpResponse\n(\ntemplate\n.\nrender\n(\ncontext\n,\nrequest\n)\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-jsx\" data-line=\"13,14\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-from\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword keyword-import\">import</span> HttpResponse\n<span class=\"token keyword keyword-from\">from</span> django<span class=\"token punctuation\">.</span>template <span class=\"token keyword keyword-import\">import</span> loader\n<span class=\"token keyword keyword-from\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword keyword-import\">import</span> Member\n\ndef <span class=\"token function\">members</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n  mymembers <span class=\"token operator\">=</span> Member<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  template <span class=\"token operator\">=</span> loader<span class=\"token punctuation\">.</span><span class=\"token function\">get_template</span><span class=\"token punctuation\">(</span><span class=\"token string\">'all_members.html'</span><span class=\"token punctuation\">)</span>\n  context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'mymembers'</span><span class=\"token operator\">:</span> mymembers<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token function\">HttpResponse</span><span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  \ndef <span class=\"token function\">details</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> slug<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n  mymember <span class=\"token operator\">=</span> Member<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>slug<span class=\"token operator\">=</span>slug<span class=\"token punctuation\">)</span>\n  template <span class=\"token operator\">=</span> loader<span class=\"token punctuation\">.</span><span class=\"token function\">get_template</span><span class=\"token punctuation\">(</span><span class=\"token string\">'details.html'</span><span class=\"token punctuation\">)</span>\n  context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'mymember'</span><span class=\"token operator\">:</span> mymember<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token function\">HttpResponse</span><span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  \ndef <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n  template <span class=\"token operator\">=</span> loader<span class=\"token punctuation\">.</span><span class=\"token function\">get_template</span><span class=\"token punctuation\">(</span><span class=\"token string\">'main.html'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token function\">HttpResponse</span><span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ndef <span class=\"token function\">testing</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n  template <span class=\"token operator\">=</span> loader<span class=\"token punctuation\">.</span><span class=\"token function\">get_template</span><span class=\"token punctuation\">(</span><span class=\"token string\">'template.html'</span><span class=\"token punctuation\">)</span>\n  context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'fruits'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Cherry'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>   \n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token function\">HttpResponse</span><span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"13\" data-start=\"13\" style=\"top: 264px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"14\" data-start=\"14\" style=\"top: 286px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Now the link to details works with the new slugified url:",
      "html": "<p>Now the link to details works with the new slugified url:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "",
      "html": "<p><img src=\"screenshot_django_details_emil-refsnes.png\" style=\"max-width:100%\"/></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "127.0.0.1:8000/members/",
          "href": "http://127.0.0.1:8000/members/",
          "title": ""
        }
      ],
      "text": "If you have followed all the steps on your own computer, you can see the result in your own browser: 127.0.0.1:8000/members/ .",
      "html": "<p>If you have followed all the steps on your own computer, you can see the result in your own browser:\n<code><a href=\"http://127.0.0.1:8000/members/\" target=\"_blank\">127.0.0.1:8000/members/</a></code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the server is down, you have to start it again with the runserver command:",
      "html": "<p>If the server is down, you have to start it again with the\n<code>runserver</code> command:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate",
          "w3-black"
        ],
        "isNotranslate": true
      },
      "code": "python manage.py runserver",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate w3-black\">\npython manage.py runserver\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "is_notranslate": true
    }
  ]
}