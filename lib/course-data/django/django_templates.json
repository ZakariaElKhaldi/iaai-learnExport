{
  "title": "Django Templates",
  "url": "https://www.w3schools.com/django/django_templates.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Django Templates",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Templates",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Django Intro",
          "href": "https://www.w3schools.com/django_intro.php",
          "title": ""
        }
      ],
      "text": "In the Django Intro page, we learned that the result should be in HTML, and it should be created in a template, so let's do that.",
      "html": "<p>In the <a href=\"django_intro.php\">Django Intro</a> page, we learned that the \nresult should be in HTML, and it should be created in a template, so let's do that.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Create a templates folder inside the members folder, and create a HTML file named myfirst.html .",
      "html": "<p>Create a <code>templates</code> folder inside the \n<code>members</code> folder, and create a HTML file \nnamed <code>myfirst.html</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The file structure should be like this:",
      "html": "<p>The file structure should be like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate",
          "w3-black"
        ],
        "isNotranslate": true
      },
      "code": "my_tennis_club\n\nmanage.py\n\nmy_tennis_club/\n\nmembers/\n\ntemplates/\n\nmyfirst.html",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate w3-black\">\nmy_tennis_club<br/>\n\u00a0\u00a0\u00a0\u00a0manage.py<br/>\n\u00a0\u00a0\u00a0\u00a0my_tennis_club/<br/>\n\u00a0\u00a0\u00a0\u00a0members/<br/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0templates/<br/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0myfirst.html<br/>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Open the HTML file and insert the following:",
      "html": "<p>Open the HTML file and insert the following:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "html",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-django"
        ],
        "isNotranslate": true
      },
      "code": "<!\nDOCTYPE\n\nhtml\n>\n\n\n<\nhtml\n>\n\n\n<\nbody\n>\n\n\n\n<\nh1\n>\nHello World!\n</\nh1\n>\n\n\n<\np\n>\nWelcome to my first Django project!\n</\np\n>\n\n\n\n</\nbody\n>\n\n\n</\nhtml\n>",
      "language": "html",
      "code_html": "<pre class=\"notranslate w3-white language-django\" tabindex=\"0\"><code class=\"language-django\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>Hello World!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Welcome to my first Django project!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-django"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-django"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Modify the View",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Open the views.py file in the members folder, and replace its content with this:",
      "html": "<p>Open the <code>views.py</code> file in the\n<code>members</code> folder, and replace its content with this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": true
      },
      "code": "from\ndjango\n.\nhttp\nimport\nHttpResponse\n\nfrom\ndjango\n.\ntemplate\nimport\nloader\n\ndef\nmembers\n(\nrequest\n)\n:\n\ntemplate\n=\nloader\n.\nget_template\n(\n'myfirst.html'\n)\n\n\nreturn\n\nHttpResponse\n(\ntemplate\n.\nrender\n(\n)\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-from\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword keyword-import\">import</span> HttpResponse\n<span class=\"token keyword keyword-from\">from</span> django<span class=\"token punctuation\">.</span>template <span class=\"token keyword keyword-import\">import</span> loader\n\ndef <span class=\"token function\">members</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n  template <span class=\"token operator\">=</span> loader<span class=\"token punctuation\">.</span><span class=\"token function\">get_template</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myfirst.html'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token function\">HttpResponse</span><span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Change Settings",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To be able to work with more complicated stuff than \"Hello World!\", We have to tell Django that a new app is created.",
      "html": "<p>To be able to work with more complicated stuff than \"Hello World!\", \nWe have to tell Django that a new app is created.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This is done in the settings.py file in the my_tennis_club folder.",
      "html": "<p>This is done in the <code>settings.py</code> file in the\n<code>my_tennis_club</code> folder.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Look up the INSTALLED_APPS[] list and add the members app like this:",
      "html": "<p>Look up the <code>INSTALLED_APPS[]</code> list and add the\n<code>members</code> app like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": true
      },
      "code": "INSTALLED_APPS\n\n=\n\n[\n\n\n'django.contrib.admin'\n,\n\n\n'django.contrib.auth'\n,\n\n\n'django.contrib.contenttypes'\n,\n\n\n'django.contrib.sessions'\n,\n\n\n'django.contrib.messages'\n,\n\n\n'django.contrib.staticfiles'\n,\n\n\n'members'\n\n\n]",
      "language": "unknown",
      "code_html": "<pre class=\"notranslate w3-white language-jsx\" data-line=\"8\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token constant\">INSTALLED_APPS</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'django.contrib.admin'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.auth'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.contenttypes'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.sessions'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.messages'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.staticfiles'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'members'</span>\n<span class=\"token punctuation\">]</span><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"8\" data-start=\"8\" style=\"top: 154px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Then run this command:",
      "html": "<p>Then run this command:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate",
          "w3-black"
        ],
        "isNotranslate": true
      },
      "code": "python manage.py migrate",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate w3-black\">\npython manage.py migrate\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Which will produce this output:",
      "html": "<p>Which will produce this output:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate",
          "w3-black"
        ],
        "isNotranslate": true
      },
      "code": "Operations to perform:\n\u00a0 Apply all migrations: admin, auth,\ncontenttypes, sessions\nRunning migrations:\n\u00a0 Applying \ncontenttypes.0001_initial... OK\n\u00a0 Applying auth.0001_initial... OK\n\u00a0 \nApplying admin.0001_initial... OK\n\u00a0 Applying \nadmin.0002_logentry_remove_auto_add... OK\n\u00a0 Applying \nadmin.0003_logentry_add_action_flag_choices... OK\n\u00a0 Applying \ncontenttypes.0002_remove_content_type_name... OK\n\u00a0 Applying \nauth.0002_alter_permission_name_max_length... OK\n\u00a0 Applying \nauth.0003_alter_user_email_max_length... OK\n\u00a0 Applying \nauth.0004_alter_user_username_opts... OK\n\u00a0 Applying \nauth.0005_alter_user_last_login_null... OK\n\u00a0 Applying \nauth.0006_require_contenttypes_0002... OK\n\u00a0 Applying \nauth.0007_alter_validators_add_error_messages... OK\n\u00a0 Applying \nauth.0008_alter_user_username_max_length... OK\n\u00a0 Applying \nauth.0009_alter_user_last_name_max_length... OK\n\u00a0 Applying \nauth.0010_alter_group_name_max_length... OK\n\u00a0 Applying \nauth.0011_update_proxy_permissions... OK\n\u00a0 Applying \nauth.0012_alter_user_first_name_max_length... OK\n\u00a0 Applying \nsessions.0001_initial... OK\n\n(myworld) C:\\Users\\\\myworld\\my_tennis_club>",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate w3-black\">\n  Operations to perform:<br/>\u00a0 Apply all migrations: admin, auth,\n  contenttypes, sessions<br/>Running migrations:<br/>\u00a0 Applying \n  contenttypes.0001_initial... OK<br/>\u00a0 Applying auth.0001_initial... OK<br/>\u00a0 \n  Applying admin.0001_initial... OK<br/>\u00a0 Applying \n  admin.0002_logentry_remove_auto_add... OK<br/>\u00a0 Applying \n  admin.0003_logentry_add_action_flag_choices... OK<br/>\u00a0 Applying \n  contenttypes.0002_remove_content_type_name... OK<br/>\u00a0 Applying \n  auth.0002_alter_permission_name_max_length... OK<br/>\u00a0 Applying \n  auth.0003_alter_user_email_max_length... OK<br/>\u00a0 Applying \n  auth.0004_alter_user_username_opts... OK<br/>\u00a0 Applying \n  auth.0005_alter_user_last_login_null... OK<br/>\u00a0 Applying \n  auth.0006_require_contenttypes_0002... OK<br/>\u00a0 Applying \n  auth.0007_alter_validators_add_error_messages... OK<br/>\u00a0 Applying \n  auth.0008_alter_user_username_max_length... OK<br/>\u00a0 Applying \n  auth.0009_alter_user_last_name_max_length... OK<br/>\u00a0 Applying \n  auth.0010_alter_group_name_max_length... OK<br/>\u00a0 Applying \n  auth.0011_update_proxy_permissions... OK<br/>\u00a0 Applying \n  auth.0012_alter_user_first_name_max_length... OK<br/>\u00a0 Applying \n  sessions.0001_initial... OK<br/><br/>(myworld) C:\\Users\\<em>Your Name</em>\\myworld\\my_tennis_club&gt;<br/>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Start the server by navigating to the /my_tennis_club folder and execute this command:",
      "html": "<p>Start the server by navigating to the <code>/my_tennis_club</code> folder and execute this command:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate",
          "w3-black"
        ],
        "isNotranslate": true
      },
      "code": "python manage.py runserver",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate w3-black\">\npython manage.py runserver\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "127.0.0.1:8000/members/",
          "href": "http://127.0.0.1:8000/members/",
          "title": ""
        }
      ],
      "text": "In the browser window, type 127.0.0.1:8000/members/ in the address bar.",
      "html": "<p>In the browser window, type <code><a href=\"http://127.0.0.1:8000/members/\" target=\"_blank\">127.0.0.1:8000/members/</a></code> in the address bar.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The result should look like this:",
      "html": "<p>The result should look like this:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "True or False. Django templates can be .html files.",
      "html": "<p>True or False. Django templates can be .html files.</p>"
    }
  ]
}