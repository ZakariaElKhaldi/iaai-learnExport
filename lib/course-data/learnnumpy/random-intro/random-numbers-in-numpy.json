{
  "id": "9c9ac1d0-6de0-4dc9-8d77-7ea7ee5c1df8",
  "title": "Random Numbers in NumPy",
  "slug": "random-numbers-in-numpy",
  "metadata": {
    "description": "Learn about Random Numbers in NumPy with clear explanations and practical examples.",
    "keywords": [
      "random",
      "generate",
      "array",
      "numpy",
      "number",
      "example",
      "import",
      "print",
      "numbers",
      "method"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnNumPy",
    "subcategory": "Random Intro"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Random Numbers in NumPy",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "What is a Random Number?\nRandom number does NOT mean a different number every time. Random means something that can\nnot be predicted logically.\nPseudo Random and True Random.\nComputers work on programs, and programs are definitive set of instructions. So it means there must be some\nalgorithm to generate a random number as well.\nIf there is a program to generate random number it can be\npredicted, thus it is not truly random.\nRandom numbers generated through a generation algorithm are called\npseudo random\n.\nCan we make truly random numbers?\nYes. In order to generate a truly random number on our computers we need to get the random data from some\noutside source. This outside source is generally our keystrokes, mouse movements, data on network\netc.\nWe do not need truly random numbers, unless it is related to security (e.g. encryption keys) or the basis of\napplication is the randomness (e.g. Digital roulette wheels).\nIn this tutorial we will be using pseudo random numbers.\nGenerate Random Number\nNumPy offers the\nrandom\nmodule to work with random numbers.\nExample\nGenerate a random integer from 0 to 100:\nfrom numpy import random\nx = random.randint(100)\nprint(x)\n\nGenerate Random Float\nThe random module's\nrand()\nmethod returns a random float between 0 and 1.\nExample\nGenerate a random float from 0 to 1:\nfrom numpy import random\nx = random.rand()\nprint(x)\n\nGenerate Random Array\nIn NumPy we work with arrays, and you can use the two methods from the above examples to make random arrays.\nIntegers\nThe\nrandint()\nmethod takes a\nsize\nparameter where you can specify the shape of an array.\nExample\nGenerate a 1-D array containing 5 random integers from 0 to 100:\nfrom numpy import random\nx=random.randint(100, size=(5))\nprint(x)\n\nExample\nGenerate a 2-D array with 3 rows, each row containing 5 random integers from 0 \nto 100:\nfrom numpy import random\nx = random.randint(100, size=(3, 5))\nprint(x)\n\nFloats\nThe\nrand()\nmethod also allows you to specify \nthe shape of the array.\nExample\nGenerate a 1-D array containing 5 random floats:\nfrom numpy import random\nx = random.rand(5)\nprint(x)\n\nExample\nGenerate a 2-D array with 3 rows, each row containing 5 random numbers:\nfrom numpy import random\nx = random.rand(3, 5)\nprint(x)\n\nGenerate Random Number From Array\nThe\nchoice()\nmethod allows you to generate a random value based on an array of values.\nThe\nchoice()\nmethod takes an array as a \nparameter and randomly returns one of the values.\nExample\nReturn one of the values in an array:\nfrom numpy import random\nx = random.choice([3, 5, 7, 9])\nprint(x)\n\nThe\nchoice()\nmethod also allows you to return an\narray\nof values.\nAdd a\nsize\nparameter to specify the shape of the array.\nExample\nGenerate a 2-D array that consists of the values in the array parameter (3, \n5, 7, and 9):\nfrom numpy import random\nx = random.choice([3, 5, 7, 9], size=(3, 5))\nprint(x)\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "from numpy import random\nx = random.randint(100)\nprint(x)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "from numpy import random\nx = random.rand()\nprint(x)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "from numpy import random\nx=random.randint(100, size=(5))\nprint(x)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "from numpy import random\nx = random.randint(100, size=(3, 5))\nprint(x)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "from numpy import random\nx = random.rand(5)\nprint(x)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "from numpy import random\nx = random.rand(3, 5)\nprint(x)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "from numpy import random\nx = random.choice([3, 5, 7, 9])\nprint(x)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "from numpy import random\nx = random.choice([3, 5, 7, 9], size=(3, 5))\nprint(x)",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "from numpy import random\n# TODO: Complete this line\nprint(x)",
      "solution": "from numpy import random\nx = random.randint(100)\nprint(x)"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "from numpy import random\n# TODO: Complete this line\nprint(x)",
      "solution": "from numpy import random\nx = random.rand()\nprint(x)"
    }
  ],
  "related_topics": [
    {
      "id": "a8950457-cb52-4518-a7e8-0d96189ff71d",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "fbd5460b-65cc-4d34-9ca2-c48c80fdf563",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "8c5bda4d-43d7-49a2-bcc2-b44ed1ee0ec7",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Random Numbers in NumPy\n\nWhat?",
      "options": [
        "None of the above.",
        "None of the above.",
        "a Random Number",
        "something that can\nnot be predicted logically"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Random Numbers in NumPy\n\nWhat is 'a Random Number'."
    },
    {
      "question": "What is Random?",
      "options": [
        "None of the above.",
        "a Random Number",
        "something that can\nnot be predicted logically",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Random is 'something that can\nnot be predicted logically'."
    }
  ],
  "summary": "This tutorial covers Random Numbers in NumPy concepts and techniques. You'll learn how to use Random Numbers in NumPy effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Random Numbers in NumPy and how to apply it in your projects."
}