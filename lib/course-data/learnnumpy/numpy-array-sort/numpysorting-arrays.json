{
  "id": "00e23ea9-efca-4aeb-9663-a9f2bfd07937",
  "title": "NumPySorting Arrays",
  "slug": "numpysorting-arrays",
  "metadata": {
    "description": "Learn about NumPySorting Arrays with clear explanations and practical examples.",
    "keywords": [
      "array",
      "sort",
      "numpy",
      "sorting",
      "arrays",
      "example",
      "import",
      "print",
      "sequence",
      "elements"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnNumPy",
    "subcategory": "NumPy Array Sort"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "NumPy\nSorting Arrays",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Sorting Arrays\nSorting means putting elements in an\nordered sequence\n.\nOrdered sequence\nis any sequence that has an order corresponding to elements, like numeric or alphabetical, ascending or descending.\nThe NumPy ndarray object has a function called\nsort()\n, \nthat will sort a specified array.\nExample\nSort the array:\nimport numpy as np\narr = np.array([3, 2, 0, 1])\nprint(np.sort(arr))\n\nNote:\nThis method returns a copy of the array, leaving the \n  original array unchanged.\nYou can also sort arrays of strings, or any other data type:\nExample\nSort the array alphabetically:\nimport numpy as np\narr = np.array(['banana', 'cherry', 'apple'])\nprint(np.sort(arr))\n\nExample\nSort a boolean array:\nimport numpy as np\narr = np.array([True, False, True])\nprint(np.sort(arr))\n\nSorting a 2-D Array\nIf you use the sort() method on a 2-D array, both arrays will be sorted:\nExample\nSort a 2-D array:\nimport numpy as np\narr = np.array([[3, 2, 4], [5, 0, 1]])\nprint(np.sort(arr))\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "import numpy as np\narr = np.array([3, 2, 0, 1])\nprint(np.sort(arr))",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "import numpy as np\narr = np.array(['banana', 'cherry', 'apple'])\nprint(np.sort(arr))",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "import numpy as np\narr = np.array([True, False, True])\nprint(np.sort(arr))",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "import numpy as np\narr = np.array([[3, 2, 4], [5, 0, 1]])\nprint(np.sort(arr))",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "import numpy as np\narr = np.array([3, 2, 0, 1])\n# TODO: Complete this line",
      "solution": "import numpy as np\narr = np.array([3, 2, 0, 1])\nprint(np.sort(arr))"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "import numpy as np\n# TODO: Complete this line\nprint(np.sort(arr))",
      "solution": "import numpy as np\narr = np.array(['banana', 'cherry', 'apple'])\nprint(np.sort(arr))"
    }
  ],
  "related_topics": [
    {
      "id": "ed91730a-1b85-4985-925a-9ae93f9997dc",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "54da51ac-48d8-4a51-ba95-0a1c2213dd15",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "81c14b96-3d6b-40a3-abbf-d1c3d3f5c336",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is NumPy\nSorting Arrays\n\nSorting Arrays\nSorting?",
      "options": [
        "None of the above.",
        "None of the above.",
        "putting elements in an\nordered sequence",
        "any sequence that has an order corresponding to elements"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of NumPy\nSorting Arrays\n\nSorting Arrays\nSorting is 'putting elements in an\nordered sequence'."
    },
    {
      "question": "What is Ordered sequence?",
      "options": [
        "None of the above.",
        "None of the above.",
        "putting elements in an\nordered sequence",
        "any sequence that has an order corresponding to elements"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Ordered sequence is 'any sequence that has an order corresponding to elements'."
    }
  ],
  "summary": "This tutorial covers NumPySorting Arrays concepts and techniques. You'll learn how to use NumPySorting Arrays effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of NumPySorting Arrays and how to apply it in your projects."
}