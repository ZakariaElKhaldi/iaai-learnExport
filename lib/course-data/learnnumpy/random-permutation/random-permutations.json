{
  "id": "ab3bbe17-951c-4de0-883a-99bfe3c016fa",
  "title": "Random Permutations",
  "slug": "random-permutations",
  "metadata": {
    "description": "Learn about Random Permutations with clear explanations and practical examples.",
    "keywords": [
      "random",
      "array",
      "permutation",
      "elements",
      "numpy",
      "shuffle",
      "import",
      "permutations",
      "arrangement",
      "arrays"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnNumPy",
    "subcategory": "Random Permutation"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Random Permutations",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Random Permutations of Elements\nA permutation refers to an arrangement of elements. e.g. [3, 2, 1] is a permutation of [1, 2, 3] and vice-versa.\nThe NumPy Random module provides two methods for this:\nshuffle()\nand\npermutation()\n.\nShuffling Arrays\nShuffle means changing arrangement of elements in-place. i.e. in the array itself.\nExample\nRandomly shuffle elements of following array:\nfrom numpy import random\nimport numpy as np\narr = np.array([1, 2, 3, \n  4, 5])\nrandom.shuffle(arr)\nprint(arr)\n\nThe\nshuffle()\nmethod makes changes to the original array.\nGenerating Permutation of Arrays\nExample\nGenerate a random permutation of elements of following array:\nfrom numpy import random\nimport numpy as np\narr = np.array([1, 2, 3, \n  4, 5])\nprint(random.permutation(arr))\n\nThe\npermutation()\nmethod\nreturns\na re-arranged array (and leaves the original array un-changed).\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "from numpy import random\nimport numpy as np\narr = np.array([1, 2, 3, \n  4, 5])\nrandom.shuffle(arr)\nprint(arr)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "from numpy import random\nimport numpy as np\narr = np.array([1, 2, 3, \n  4, 5])\nprint(random.permutation(arr))",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "from numpy import random\nimport numpy as np\narr = np.array([1, 2, 3, \n# TODO: Complete this line\nrandom.shuffle(arr)\nprint(arr)",
      "solution": "from numpy import random\nimport numpy as np\narr = np.array([1, 2, 3, \n  4, 5])\nrandom.shuffle(arr)\nprint(arr)"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "from numpy import random\n# TODO: Complete this line\narr = np.array([1, 2, 3, \n  4, 5])\nprint(random.permutation(arr))",
      "solution": "from numpy import random\nimport numpy as np\narr = np.array([1, 2, 3, \n  4, 5])\nprint(random.permutation(arr))"
    }
  ],
  "related_topics": [
    {
      "id": "6800ef05-6027-424f-a6da-0e633b3e9d8e",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "64b4b10c-e0f9-48a6-aeab-dada9eb29117",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "0716c3e9-fb7f-42ab-a81e-9266434f8aa2",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Shuffling Arrays\nShuffle?",
      "options": [
        "Not a Shuffling Arrays\nShuffle.",
        "changing arrangement of elements in-place",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Shuffling Arrays\nShuffle is 'changing arrangement of elements in-place'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers Random Permutations concepts and techniques. You'll learn how to use Random Permutations effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Random Permutations and how to apply it in your projects."
}