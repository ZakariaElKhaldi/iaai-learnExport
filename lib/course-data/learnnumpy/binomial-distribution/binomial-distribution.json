{
  "id": "a3828099-003f-49b4-b759-6bcfed87de47",
  "title": "Binomial Distribution",
  "slug": "binomial-distribution",
  "metadata": {
    "description": "Learn about Binomial Distribution with clear explanations and practical examples.",
    "keywords": [
      "binomial",
      "distribution",
      "import",
      "random",
      "size",
      "normal",
      "discrete",
      "toss",
      "coin",
      "data"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnNumPy",
    "subcategory": "Binomial Distribution"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Binomial Distribution",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Binomial Distribution\nBinomial Distribution is a\nDiscrete Distribution\n.\nIt describes the outcome of binary scenarios, e.g. toss of a coin, it will either be head or tails.\nIt has three parameters:\nn\n- number of trials.\np\n- probability of occurence of each trial (e.g. for toss of a coin 0.5 each).\nsize\n- The shape of the returned array.\nDiscrete Distribution:\nThe distribution is defined at separate set of events,\n   e.g. a coin toss's result is discrete as it can be only head or tails whereas height of people is continuous \n   as it can be 170, 170.1, 170.11 and so on.\nExample\nGiven 10 trials for coin toss generate 10 data points:\nfrom numpy import random\nx = random.binomial(n=10, p=0.5, size=10)\nprint(x)\n\nVisualization of Binomial Distribution\nExample\nfrom numpy import random\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.displot(random.binomial(n=10, p=0.5, size=1000))\nplt.show()\nResult\n\nDifference Between Normal and Binomial Distribution\nThe main difference is that normal distribution is continous whereas binomial is discrete,\nbut if there are enough data points it will be quite similar to normal distribution with certain loc and scale.\nExample\nfrom numpy import random\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ndata = {\n\"normal\": random.normal(loc=50, scale=5, size=1000),\n\"binomial\": random.binomial(n=100, p=0.5, size=1000)\n}\nsns.displot(data, kind=\"kde\")\nplt.show()\nResult\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "from numpy import random\nx = random.binomial(n=10, p=0.5, size=10)\nprint(x)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "from numpy import random\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.displot(random.binomial(n=10, p=0.5, size=1000))\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "from numpy import random\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ndata = {\n\"normal\": random.normal(loc=50, scale=5, size=1000),\n\"binomial\": random.binomial(n=100, p=0.5, size=1000)\n}\nsns.displot(data, kind=\"kde\")\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "from numpy import random\n# TODO: Complete this line\nprint(x)",
      "solution": "from numpy import random\nx = random.binomial(n=10, p=0.5, size=10)\nprint(x)"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "from numpy import random\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.displot(random.binomial(n=10, p=0.5, size=1000))\n# TODO: Complete this line",
      "solution": "from numpy import random\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.displot(random.binomial(n=10, p=0.5, size=1000))\nplt.show()"
    }
  ],
  "related_topics": [
    {
      "id": "89f70d05-281a-45b7-91da-a715ab9b10d7",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "c85310a4-b9f9-409d-8acb-050d31c0465c",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "b1bf8b1f-f726-4b28-afae-b98d5d6d392a",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Binomial Distribution\n\nBinomial Distribution\nBinomial Distribution?",
      "options": [
        "None of the above.",
        "defined at separate set of events",
        "None of the above.",
        "a\nDiscrete Distribution"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Binomial Distribution\n\nBinomial Distribution\nBinomial Distribution is 'a\nDiscrete Distribution'."
    },
    {
      "question": "What is The distribution?",
      "options": [
        "a\nDiscrete Distribution",
        "None of the above.",
        "defined at separate set of events",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of The distribution is 'defined at separate set of events'."
    }
  ],
  "summary": "This tutorial covers Binomial Distribution concepts and techniques. You'll learn how to use Binomial Distribution effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Binomial Distribution and how to apply it in your projects."
}