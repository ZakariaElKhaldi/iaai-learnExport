{
  "id": "fbe75c2c-0481-4987-8d24-8eff8d307e15",
  "title": "NumPy Trigonometric Functions",
  "slug": "numpy-trigonometric-functions",
  "metadata": {
    "description": "Learn about NumPy Trigonometric Functions with clear explanations and practical examples.",
    "keywords": [
      "c",
      "numpy",
      "values",
      "radians",
      "example",
      "import",
      "print",
      "array",
      "find",
      "sine",
      "convert"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnNumPy",
    "subcategory": "ufunc Trigonometric"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "NumPy Trigonometric Functions",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Trigonometric Functions\nNumPy provides the ufuncs\nsin()\n,\ncos()\nand\ntan()\nthat take values in radians and produce the corresponding sin, cos and tan \nvalues.\nExample\nFind sine value of PI/2:\nimport numpy as np\nx = np.sin(np.pi/2)\nprint(x)\n\nExample\nFind sine values for all of the values in arr:\nimport numpy as np\narr = np.array([np.pi/2, np.pi/3, np.pi/4, np.pi/5])\nx = np.sin(arr)\nprint(x)\n\nConvert Degrees Into Radians\nBy default all of the trigonometric functions take radians as parameters\nbut we can convert radians to degrees and vice versa as well in NumPy.\nNote:\nradians values are pi/180 * degree_values.\nExample\nConvert all of the values in following array arr to radians:\nimport numpy as np\narr = np.array([90, 180, 270, 360])\nx = np.deg2rad(arr)\nprint(x)\n\nRadians to Degrees\nExample\nConvert all of the values in following array arr to degrees:\nimport numpy as np\narr = np.array([np.pi/2, np.pi, 1.5*np.pi, 2*np.pi])\nx = np.rad2deg(arr)\nprint(x)\n\nFinding Angles\nFinding angles from values of sine, cos, tan. E.g. sin, cos and tan inverse (arcsin, arccos, arctan).\nNumPy provides ufuncs\narcsin()\n,\narccos()\nand\narctan()\nthat produce radian values for corresponding sin, cos and tan values given.\nExample\nFind the angle of 1.0:\nimport numpy as np\nx = np.arcsin(1.0)\nprint(x)\n\nAngles of Each Value in Arrays\nExample\nFind the angle for all of the sine values in the array\nimport numpy as np\narr = np.array([1, -1, 0.1])\nx = \n  np.arcsin(arr)\nprint(x)\n\nHypotenues\nFinding hypotenues using pythagoras theorem in NumPy.\nNumPy provides the\nhypot()\nfunction that takes the base and perpendicular values and produces hypotenues based on pythagoras theorem.\nExample\nFind the hypotenues for 4 base and 3 perpendicular:\nimport numpy as np\nbase = 3\nperp = 4\nx = np.hypot(base, perp)\nprint(x)\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "import numpy as np\nx = np.sin(np.pi/2)\nprint(x)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "import numpy as np\narr = np.array([np.pi/2, np.pi/3, np.pi/4, np.pi/5])\nx = np.sin(arr)\nprint(x)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "import numpy as np\narr = np.array([90, 180, 270, 360])\nx = np.deg2rad(arr)\nprint(x)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "import numpy as np\narr = np.array([np.pi/2, np.pi, 1.5*np.pi, 2*np.pi])\nx = np.rad2deg(arr)\nprint(x)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "import numpy as np\nx = np.arcsin(1.0)\nprint(x)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "import numpy as np\narr = np.array([1, -1, 0.1])\nx = \n  np.arcsin(arr)\nprint(x)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "import numpy as np\nbase = 3\nperp = 4\nx = np.hypot(base, perp)\nprint(x)",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "import numpy as np\n# TODO: Complete this line\nprint(x)",
      "solution": "import numpy as np\nx = np.sin(np.pi/2)\nprint(x)"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "import numpy as np\narr = np.array([np.pi/2, np.pi/3, np.pi/4, np.pi/5])\nx = np.sin(arr)\n# TODO: Complete this line",
      "solution": "import numpy as np\narr = np.array([np.pi/2, np.pi/3, np.pi/4, np.pi/5])\nx = np.sin(arr)\nprint(x)"
    }
  ],
  "related_topics": [
    {
      "id": "6533e6ad-8e50-4e1f-a284-895921683019",
      "title": "Advanced C Techniques",
      "relationship": "next_topic"
    },
    {
      "id": "29a55677-faa8-4368-8690-fe3669fe3619",
      "title": "C Project: Build a Real-World Application",
      "relationship": "suggested_next"
    },
    {
      "id": "a4076888-a3ca-421d-b285-8650476e84a4",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is radians values?",
      "options": [
        "None of the above.",
        "None of the above.",
        "pi/180 * degree_values",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of radians values is 'pi/180 * degree_values'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers NumPy Trigonometric Functions concepts and techniques. You'll learn how to use NumPy Trigonometric Functions effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of NumPy Trigonometric Functions and how to apply it in your projects."
}