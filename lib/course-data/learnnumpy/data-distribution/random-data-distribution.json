{
  "id": "14adb85f-a374-477a-b298-3ee71c860ceb",
  "title": "Random Data Distribution",
  "slug": "random-data-distribution",
  "metadata": {
    "description": "Learn about Random Data Distribution with clear explanations and practical examples.",
    "keywords": [
      "random",
      "probability",
      "value",
      "data",
      "distribution",
      "values",
      "choice",
      "example",
      "size",
      "numbers"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnNumPy",
    "subcategory": "Data Distribution"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Random Data Distribution",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "What is Data Distribution?\nData Distribution is a list of all possible values, and how often each value \noccurs.\nSuch lists are important when working with statistics and data science.\nThe random module offer methods that returns randomly generated data \ndistributions.\nRandom Distribution\nA random distribution is a set of random numbers that follow a certain\nprobability density function\n.\nProbability Density Function:\nA function that describes a continuous probability. i.e. probability of all\nvalues in an array.\nWe can generate random numbers based on defined probabilities using the\nchoice()\nmethod of the\nrandom\nmodule.\nThe\nchoice()\nmethod allows us to specify the probability for each value.\nThe probability is set by a number between 0 and 1, where 0 means that the \nvalue will never occur and 1 means that the value will always occur.\nExample\nGenerate a 1-D array containing 100 values, where each value has to be 3, 5, \n7 or 9.\nThe probability for the value to be 3 is set to be 0.1\nThe probability for the value to be 5 is set to be 0.3\nThe probability for the value to be 7 is set to be 0.6\nThe probability for the value to be 9 is set to be 0\nfrom numpy import random\nx = random.choice([3, 5, 7, 9], p=[0.1, 0.3, \n  0.6, 0.0], size=(100))\nprint(x)\n\nThe sum of all probability numbers should be 1.\nEven if you run the example above 100 times, the value 9 will never occur.\nYou can return arrays of any shape and size by specifying the shape in the\nsize\nparameter.\nExample\nSame example as above, but return a 2-D array with 3 rows, each containing 5 values.\nfrom numpy import random\nx = random.choice([3, 5, 7, 9], p=[0.1, 0.3, \n  0.6, 0.0], size=(3, 5))\nprint(x)\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "from numpy import random\nx = random.choice([3, 5, 7, 9], p=[0.1, 0.3, \n  0.6, 0.0], size=(100))\nprint(x)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "from numpy import random\nx = random.choice([3, 5, 7, 9], p=[0.1, 0.3, \n  0.6, 0.0], size=(3, 5))\nprint(x)",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "from numpy import random\nx = random.choice([3, 5, 7, 9], p=[0.1, 0.3, \n  0.6, 0.0], size=(100))\n# TODO: Complete this line",
      "solution": "from numpy import random\nx = random.choice([3, 5, 7, 9], p=[0.1, 0.3, \n  0.6, 0.0], size=(100))\nprint(x)"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "from numpy import random\nx = random.choice([3, 5, 7, 9], p=[0.1, 0.3, \n# TODO: Complete this line\nprint(x)",
      "solution": "from numpy import random\nx = random.choice([3, 5, 7, 9], p=[0.1, 0.3, \n  0.6, 0.0], size=(3, 5))\nprint(x)"
    }
  ],
  "related_topics": [
    {
      "id": "eec9c2af-acd8-4f6e-a9bc-ee8f5af757bd",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "4fac54a2-2a0f-4ce0-b1a8-83797a26e5e8",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "b8d97ab2-99b1-443c-96f7-b36992aec160",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Random Data Distribution\n\nWhat?",
      "options": [
        "Data Distribution",
        "None of the above.",
        "a list of all possible values",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of Random Data Distribution\n\nWhat is 'Data Distribution'."
    },
    {
      "question": "What is Data Distribution?",
      "options": [
        "None of the above.",
        "a list of all possible values",
        "None of the above.",
        "Data Distribution"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Data Distribution is 'a list of all possible values'."
    }
  ],
  "summary": "This tutorial covers Random Data Distribution concepts and techniques. You'll learn how to use Random Data Distribution effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Random Data Distribution and how to apply it in your projects."
}