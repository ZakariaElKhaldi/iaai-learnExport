{
  "id": "de6ecefd-5677-4174-907f-bdef4b5a7ead",
  "title": "NumPyData Types",
  "slug": "numpydata-types",
  "metadata": {
    "description": "Learn about NumPyData Types with clear explanations and practical examples.",
    "keywords": [
      "data",
      "array",
      "type",
      "numpy",
      "integer",
      "dtype",
      "print",
      "newarr",
      "float",
      "example"
    ],
    "difficulty": "intermediate",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnNumPy",
    "subcategory": "NumPy Data Types"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "NumPy\nData Types",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Data Types in Python\nBy default Python have these data types:\nstrings\n- used to represent text data, the text is given under quote marks. e.g. \"ABCD\"\ninteger\n- used to represent integer numbers. e.g. -1, -2, -3\nfloat\n- used to represent real numbers. e.g. 1.2, 42.42\nboolean\n- used to represent True or False.\ncomplex\n- used to represent complex \nnumbers. e.g. 1.0 + 2.0j, 1.5 + 2.5j\nData Types in NumPy\nNumPy has some extra data types, and refer to data types with one \ncharacter, like\ni\nfor integers,\nu\nfor unsigned integers etc.\nBelow is a list of all data types in NumPy and the characters used to represent them.\ni\n- integer\nb\n- boolean\nu\n- unsigned integer\nf\n- float\nc\n- complex float\nm\n- timedelta\nM\n- datetime\nO\n- object\nS\n- string\nU\n- unicode string\nV\n- fixed chunk of memory for other type ( void )\nChecking the Data Type of an Array\nThe NumPy array object has a property called\ndtype\nthat returns the data type of the array:\nExample\nGet the data type of an array object:\nimport numpy as np\narr = np.array([1, 2, 3, 4])\nprint(arr.dtype)\n\nExample\nGet the data type of an array containing strings:\nimport numpy as np\narr = np.array(['apple', \n  'banana', 'cherry'])\nprint(arr.dtype)\n\nCreating Arrays With a Defined Data Type\nWe use the\narray()\nfunction to create arrays, this function can take an optional argument:\ndtype\nthat allows us to define the expected data type of the array elements:\nExample\nCreate an array with data type string:\nimport numpy as np\narr = np.array([1, 2, 3, 4], \n  dtype='S')\nprint(arr)\nprint(arr.dtype)\n\nFor\ni\n,\nu\n,\nf\n,\nS\nand\nU\nwe can define size as well.\nExample\nCreate an array with data type 4 bytes integer:\nimport numpy as np\narr = np.array([1, 2, 3, 4], \n  dtype='i4')\nprint(arr)\nprint(arr.dtype)\n\nWhat if a Value Can Not Be Converted?\nIf a type is given in which elements can't be casted then NumPy will raise a ValueError.\nValueError:\nIn Python ValueError is raised when the type of passed argument to a function is unexpected/incorrect.\nExample\nA non integer string like 'a' can not be converted to integer (will raise an error):\nimport numpy as np\narr = np.array(['a', '2', '3'], dtype='i')\n\nConverting Data Type on Existing Arrays\nThe best way to change the data type of an existing array, is to make a copy \nof the array with the\nastype()\nmethod.\nThe\nastype()\nfunction creates a copy of the \narray, and allows you to specify the data type as a parameter.\nThe data type can be specified using a string, like\n'f'\nfor float,\n'i'\nfor integer etc. or you can use the data type directly like\nfloat\nfor float and\nint\nfor integer.\nExample\nChange data type from float to integer by using\n'i'\nas parameter value:\nimport numpy as np\narr = np.array([1.1, 2.1, 3.1])\nnewarr = arr.astype('i')\nprint(newarr)\nprint(newarr.dtype)\n\nExample\nChange data type from float to integer by using\nint\nas parameter value:\nimport numpy as np\narr = np.array([1.1, 2.1, 3.1])\nnewarr = arr.astype(int)\nprint(newarr)\nprint(newarr.dtype)\n\nExample\nChange data type from integer to boolean:\nimport numpy as np\narr = np.array([1, 0, 3])\nnewarr = arr.astype(bool)\nprint(newarr)\nprint(newarr.dtype)\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "import numpy as np\narr = np.array([1, 2, 3, 4])\nprint(arr.dtype)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "import numpy as np\narr = np.array(['apple', \n  'banana', 'cherry'])\nprint(arr.dtype)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "import numpy as np\narr = np.array([1, 2, 3, 4], \n  dtype='S')\nprint(arr)\nprint(arr.dtype)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "import numpy as np\narr = np.array([1, 2, 3, 4], \n  dtype='i4')\nprint(arr)\nprint(arr.dtype)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "import numpy as np\narr = np.array(['a', '2', '3'], dtype='i')",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "import numpy as np\narr = np.array([1.1, 2.1, 3.1])\nnewarr = arr.astype('i')\nprint(newarr)\nprint(newarr.dtype)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "import numpy as np\narr = np.array([1.1, 2.1, 3.1])\nnewarr = arr.astype(int)\nprint(newarr)\nprint(newarr.dtype)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "import numpy as np\narr = np.array([1, 0, 3])\nnewarr = arr.astype(bool)\nprint(newarr)\nprint(newarr.dtype)",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "import numpy as np\narr = np.array([1, 2, 3, 4])\n# TODO: Complete this line",
      "solution": "import numpy as np\narr = np.array([1, 2, 3, 4])\nprint(arr.dtype)"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "import numpy as np\narr = np.array(['apple', \n# TODO: Complete this line\nprint(arr.dtype)",
      "solution": "import numpy as np\narr = np.array(['apple', \n  'banana', 'cherry'])\nprint(arr.dtype)"
    }
  ],
  "related_topics": [
    {
      "id": "70ee0d57-fb23-486c-a41f-1d7e47095bec",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "cb20b3d2-527c-4211-95ff-022f930e4692",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "94fbebc6-3a9d-4f84-bb82-e71c744a0e51",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is the text?",
      "options": [
        "None of the above.",
        "given under quote marks",
        "a list of all data types in NumPy and the characters used to represent them",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of the text is 'given under quote marks'."
    },
    {
      "question": "What is Below?",
      "options": [
        "None of the above.",
        "a list of all data types in NumPy and the characters used to represent them",
        "given under quote marks",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Below is 'a list of all data types in NumPy and the characters used to represent them'."
    }
  ],
  "summary": "This tutorial covers NumPyData Types concepts and techniques. You'll learn how to use NumPyData Types effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of NumPyData Types and how to apply it in your projects."
}