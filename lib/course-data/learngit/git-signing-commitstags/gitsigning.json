{
  "id": "56e3ccf0-7cc5-4f42-9279-f108f50b946e",
  "title": "GitSigning",
  "slug": "gitsigning",
  "metadata": {
    "description": "Learn about GitSigning with clear explanations and practical examples.",
    "keywords": [
      "commit",
      "commits",
      "sign",
      "signed",
      "signing",
      "signature",
      "example",
      "like",
      "code",
      "check"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Typescript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnGit",
    "subcategory": "Git Signing Commits/Tags"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Git\nSigning",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "What is Commit Signing?\nSigning a commit is like putting your personal signature on your work.\nIt proves that you really made the change, and helps others trust your code.\nOn platforms like GitHub or GitLab, signed commits often get a\nVerified\nbadge.\nWhat is GPG?\nGPG (GNU Privacy Guard) is a tool that lets you create a digital key, kind of like a secret password, to sign things.\nGit uses GPG keys to sign commits and tags.\nThis helps prove your identity and ensures your code hasn't been tampered with.\nWhy and When Should You Sign Commits?\nTo prove your commits really came from you\nTo help others trust your code (especially in open source projects)\nSome companies or projects require signed commits for security\nIf you don't sign, your commits are still valid, just not verified\nHow to Set Up Commit Signing\nCreate a GPG key\n(if you don't have one):\nExample: Generate a New GPG Key\ngpg --full-generate-key\nFollow the prompts to create your key.\nFind your key ID:\nExample: List GPG Keys\ngpg --list-secret-keys --keyid-format=long\nLook for a line like\nsec   rsa4096/1234ABCD5678EFGH\n. The part after the slash is your key ID.\nTell Git to use your key:\nExample: Set Signing Key\ngit config --global user.signingkey <your-key-id>\nHow to Sign Commits and Tags\nTo sign a commit, use:\ngit commit -S -m \"message\"\nTo sign a tag, use:\ngit tag -s v1.0 -m \"version 1.0\"\nSign All Commits Automatically\nIf you want Git to sign every commit by default, run:\ngit config --global commit.gpgSign true\nHow to Check if a Commit is Signed\nTo check in Git, run:\ngit log --show-signature\nOn GitHub or GitLab, look for a\nVerified\nbadge \nExample: Signed Commit in Git Log\ncommit 1234abcd5678efgh\ngpg: Signature made ...\ngpg: Good signature from \"Your Name <you@email.com>\"\nAuthor: Your Name <you@email.com>\nDate:   ...\nTroubleshooting Signed Commits\nGPG failed to sign the data:\nMake sure your GPG agent is running and your key is loaded.\nWrong key used:\nDouble-check the key ID you set in Git.\nStill stuck?\nTry searching for the error message online or check your Git and GPG installation.\nNote:\nSigned commits and tags help ensure your code hasn't been tampered with and confirm your identity as the author.\nSome platforms may require additional setup to recognize your signature (for example, uploading your public key to GitHub or GitLab).\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "a4d1f80b-0790-45ce-b9e9-7c91bb67cd4a",
      "title": "Typescript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "feea8d4d-28e4-4436-bbe5-7c88a2b073a4",
      "title": "Typescript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "d6da511e-9a0f-4bd8-b87c-e555bf9ac90f",
      "title": "Typescript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Git\nSigning\n\nWhat?",
      "options": [
        "None of the above.",
        "Commit Signing",
        "None of the above.",
        "like putting your personal signature on your work"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Git\nSigning\n\nWhat is 'Commit Signing'."
    },
    {
      "question": "What is Signing a commit?",
      "options": [
        "Commit Signing",
        "None of the above.",
        "like putting your personal signature on your work",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Signing a commit is 'like putting your personal signature on your work'."
    }
  ],
  "summary": "This tutorial covers GitSigning concepts and techniques. You'll learn how to use GitSigning effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of GitSigning and how to apply it in your projects."
}