{
  "id": "f412072a-b96f-4ed4-9409-67d4f7388688",
  "title": "GitSecurity SSH",
  "slug": "gitsecurity-ssh",
  "metadata": {
    "description": "Learn about GitSecurity SSH with clear explanations and practical examples.",
    "keywords": [
      "private",
      "agent",
      "keys",
      "public",
      "pair",
      "github",
      "like",
      "loaded",
      "example",
      "security"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnGit",
    "subcategory": "Git What is SSH?"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Git\nSecurity SSH\n\nChange Platform",
      "content": ":\nGitHub\nBitbucket\nGitLab\nWhat is SSH?\nSSH\n(Secure Shell) is a way to connect securely to remote computers and services, like Git repositories.\nSSH uses a pair of keys (public and private) to make sure only you can access your code.",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "SSH key pair",
      "content": "- A public and private key for secure access\nssh-keygen\n- Generate a new SSH key pair\nssh-add\n- Add your private key to the SSH agent\nssh -T git@github.com\n- Test SSH connection\nssh-add -l\n- List loaded SSH keys\nssh-add -d\n- Remove a key from agent\nHow SSH Keys Work\nSSH keys come in pairs: a\npublic key\n(like a lock) and a\nprivate key\n(like your own key).\nYou share the public key with the server (like GitHub or Bitbucket), but keep the private key safe on your computer.\nOnly someone with the private key can access what's locked by the public key.\nGenerating an SSH Key Pair\nTo create a new SSH key pair, use this command in the terminal (Linux, macOS, or Git Bash for Windows):\nExample: Generate SSH Key\nssh-keygen -t rsa -b 4096 -C \"your@email.com\"\nFollow the prompts to choose a file location (press Enter to use the default) and set a passphrase (optional, but recommended for extra security).\nAdding Your Key to the SSH Agent\nAfter creating your key, add it to the SSH agent so Git can use it:\nExample: Add Key to SSH Agent\nssh-add ~/.ssh/id_rsa\nCopying Your Public Key\nTo use SSH with Git hosting services, you need to copy your public key and add it to your account settings on GitHub, GitLab, or Bitbucket.\nOn macOS:\npbcopy < ~/.ssh/id_rsa.pub\nOn Windows (Git Bash):\nclip < ~/.ssh/id_rsa.pub\nOn Linux:\ncat ~/.ssh/id_rsa.pub\n(then copy manually)\nListing and Removing SSH Keys\nSee which keys are loaded in your SSH agent:\nExample: List Loaded SSH Keys\nssh-add -l\nTo remove a key from the agent:\nExample: Remove SSH Key from Agent\nssh-add -d ~/.ssh/id_rsa\nTroubleshooting SSH\nIf you get \"Permission denied\", make sure your public key is added to your Git host and your private key is loaded in the agent.\nCheck file permissions: private keys should be readable only by you (\nchmod 600 ~/.ssh/id_rsa\n).\nUse\nssh -v\nfor verbose output to debug problems.\nMake sure you're using the correct SSH URL for your remote (starts with\ngit@\n).\nTip:\nNever share your private key with anyone. Use a passphrase for extra security.\nIf your private key is ever exposed, generate a new key pair and update your Git host immediately.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "3bb3c281-ea24-4dad-af92-481a105a052f",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "b75b77f1-b110-4dae-8d3f-65c9badcf5d6",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "3e8f7d3d-1c6f-4ca8-a52d-d368c0a64e3a",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is GitHub\nBitbucket\nGitLab\nWhat?",
      "options": [
        "Not a GitHub\nBitbucket\nGitLab\nWhat.",
        "None of the above.",
        "SSH",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of GitHub\nBitbucket\nGitLab\nWhat is 'SSH'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers GitSecurity SSH concepts and techniques. You'll learn how to use GitSecurity SSH effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of GitSecurity SSH and how to apply it in your projects."
}