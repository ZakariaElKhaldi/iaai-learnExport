{
  "id": "75313d2f-56ed-4f5b-9bd7-f7b4fd97e382",
  "title": "GitAmend",
  "slug": "gitamend",
  "metadata": {
    "description": "Learn about GitAmend with clear explanations and practical examples.",
    "keywords": [
      "commit",
      "amend",
      "readme",
      "updated",
      "html",
      "last",
      "master",
      "added",
      "files",
      "message"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnGit",
    "subcategory": "Git Amend"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Git\nAmend\n\nChange Platform",
      "content": ":\nGitHub\nBitbucket\nGitLab\nWhat is Git Amend?\nGit Amend is a command that allows you to modify the most recent commit.\nYou can use it to fix typos, add or remove files, or change the commit message.\nWhen to Use Git Amend\nUse Git Amend when you need to make small changes to your last commit.\nIt's perfect for fixing mistakes, adding forgotten files, or updating the commit message.\nFix Last Commit Message\nTo change the last commit message, follow these steps:\nOpen your terminal and navigate to your repository.\nType\ngit commit --amend -m \"New message\"\nto change the commit message.\nPress Enter to save the changes.\nExample\ngit commit --amend -m \"Corrected commit message\"\nAdd Files to Last Commit\nTo add files to the last commit, follow these steps:\nOpen your terminal and navigate to your repository.\nType\ngit add <file>\nto add the file to the staging area.\nType\ngit commit --amend\nto add the file to the last commit.\nPress Enter to save the changes.\nExample\ngit add forgotten.txt\ngit commit --amend\nRemove Files from Last Commit\nTo remove files from the last commit, follow these steps:\nOpen your terminal and navigate to your repository.\nType\ngit reset HEAD^ -- <file>\nto remove the file from the staging area.\nType\ngit commit --amend\nto remove the file from the last commit.\nPress Enter to save the changes.\nExample\ngit reset HEAD^ -- unwanted.txt\ngit commit --amend\n 1 file changed, 3 insertions(+), 1 deletion(-)\nNow let's check the\nlog\n:\nExample\ngit log --oneline\n07c5bc5 (HEAD -> master) Adding plines to reddme\n9a9add8 (origin/master) Added .gitignore\n81912ba Corrected spelling error\n3fdaa5b Merge pull request #1 from -test/update-readme\n836e5bf (origin/update-readme, update-readme) Updated readme for GitHub Branches\ndaf4f7c (origin/html-skeleton, html-skeleton) Updated index.html with basic meta\nfacaeae (gh-page/master) Merge branch 'master' of \ne7de78f Updated index.html. Resized image\n5a04b6f Updated README.md with a line about focus\nd29d69f Updated README.md with a line about GitHub\ne0b6038 merged with hello-world-images after fixing conflicts\n1f1584e added new image\ndfa79db updated index.html with emergency fix\n0312c55 Added image to Hello World\n09f4acd Updated index.html with a new line\n221ec6e First release of Hello World!\nOh no! the\ncommit\nmessage is full of spelling errors.\nEmbarrassing. Let's\namend\nthat:\nExample\ngit commit --amend -m \"Added lines to README.md\"\n[master eaa69ce] Added lines to README.md\n Date: Thu Apr 22 12:18:52 2021 +0200\n 1 file changed, 3 insertions(+), 1 deletion(-))\nAnd re-check the\nlog\n:\nExample\ngit log --oneline\neaa69ce (HEAD -> master) Added lines to README.md\n9a9add8 (origin/master) Added .gitignore\n81912ba Corrected spelling error\n3fdaa5b Merge pull request #1 from -test/update-readme\n836e5bf (origin/update-readme, update-readme) Updated readme for GitHub Branches\ndaf4f7c (origin/html-skeleton, html-skeleton) Updated index.html with basic meta\nfacaeae (gh-page/master) Merge branch 'master' of \ne7de78f Updated index.html. Resized image\n5a04b6f Updated README.md with a line about focus\nd29d69f Updated README.md with a line about GitHub\ne0b6038 merged with hello-world-images after fixing conflicts\n1f1584e added new image\ndfa79db updated index.html with emergency fix\n0312c55 Added image to Hello World\n09f4acd Updated index.html with a new line\n221ec6e First release of Hello World!\nWe see the \ncommit\nis replaced with our amended one!\nWarning:\nMessing with the\ncommit\nhistory of a repository can be dangerous.\nIt is usually ok to make these kinds of changes to your own local repository.\nHowever, you should avoid making changes that rewrite history to\nremote\nrepositories, especially if others are working with them.",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Adding files with",
      "content": "--amend\nworks the same way as above.\nJust add them to the\nstaging environment\nbefore committing.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Create a Layout",
      "description": "Build a simple layout using the techniques from this tutorial.",
      "difficulty": "easy",
      "starter_code": "<!-- Add your code here -->",
      "solution": "<!-- Example solution would go here -->"
    }
  ],
  "related_topics": [
    {
      "id": "fca1b9d8-be3a-4863-8c60-30a8241f1f29",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "2c3bef93-83dd-462a-876d-afce29c6fe99",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "8466a0a0-ceae-4b82-adb4-e00b474839e8",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is GitHub\nBitbucket\nGitLab\nWhat?",
      "options": [
        "None of the above.",
        "a command that allows you to modify the most recent commit",
        "Git Amend",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of GitHub\nBitbucket\nGitLab\nWhat is 'Git Amend'."
    },
    {
      "question": "What is Git Amend?",
      "options": [
        "None of the above.",
        "Git Amend",
        "None of the above.",
        "a command that allows you to modify the most recent commit"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Git Amend is 'a command that allows you to modify the most recent commit'."
    }
  ],
  "summary": "This tutorial covers GitAmend concepts and techniques. You'll learn how to use GitAmend effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of GitAmend and how to apply it in your projects."
}