{
  "id": "f7e0a84a-7d55-4d4f-aaed-a11cda6e3964",
  "title": "PostgreSQL ALTER COLUMN",
  "slug": "postgresql-alter-column",
  "metadata": {
    "description": "Learn about PostgreSQL ALTER COLUMN with clear explanations and practical examples.",
    "keywords": [
      "c",
      "alter",
      "column",
      "table",
      "type",
      "statement",
      "change",
      "varchar",
      "data",
      "cars",
      "year"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPostgreSQL",
    "subcategory": "PostgreSQLALTER COLUMN"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PostgreSQL ALTER COLUMN",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The ALTER TABLE Statement\nTo change the data type, or the size of a table column we have to use the\nALTER TABLE\nstatement.\nThe\nALTER TABLE\nstatement is used to add, delete,\nor modify columns in an existing table.\nThe\nALTER TABLE\nstatement is also used to add and drop various constraints on an existing table.\nALTER COLUMN\nWe want to change the data type of the\nyear\ncolumn of the\ncars\ntable from\nINT\nto\nVARCHAR(4)\n.\nTo modify a column, use the\nALTER COLUMN\nstatement and the\nTYPE\nkeyword followed by the \nnew data type:\nExample\nChange the\nyear\ncolumn from\nINT\nto\nVARCHAR(4)\n:\nALTER TABLE cars\nALTER COLUMN \n          year TYPE VARCHAR(4);\nResult\nALTER TABLE\nNote:\nSome data types cannot be converted if the column has value.\nE.g. numbers can always be converted to text, but text cannot always be \nconverted to numbers.\nChange Maximum Allowed Characters\nWe also want to change the maximum number of characters allowed in the\ncolor\ncolumn of the\ncars\ntable.\nUse the same syntax as above, use the\nALTER COLUMN\nstatement and the\nTYPE\nkeyword followed by the \nnew data type:\nExample\nChange the\ncolor\ncolumn from\nVARCHAR(255)\nto\nVARCHAR(30)\n:\nALTER TABLE cars\nALTER COLUMN color TYPE VARCHAR(30);\nResult\nALTER TABLE\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "ALTER TABLE cars\nALTER COLUMN \n          year TYPE VARCHAR(4);",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Result",
      "content": "",
      "order": 4,
      "code": "ALTER TABLE",
      "language": "unknown",
      "explanation": "Example of result"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "ALTER TABLE cars\nALTER COLUMN color TYPE VARCHAR(30);",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Result",
      "content": "",
      "order": 6,
      "code": "ALTER TABLE",
      "language": "unknown",
      "explanation": "Example of result"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "ALTER TABLE cars\n# TODO: Complete this line\n          year TYPE VARCHAR(4);",
      "solution": "ALTER TABLE cars\nALTER COLUMN \n          year TYPE VARCHAR(4);"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your unknown code here",
      "solution": "ALTER TABLE"
    }
  ],
  "related_topics": [
    {
      "id": "300b4df9-54c9-419d-b473-e5151edaa19a",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "058c8598-deed-4d02-836c-e0c437b04853",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "36b77772-a01b-4f58-9089-082ffcdda1c4",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The\nALTER TABLE\nstatement?",
      "options": [
        "also used to add and drop various constraints on an existing table",
        "None of the above.",
        "used to add",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of The\nALTER TABLE\nstatement is 'used to add'."
    },
    {
      "question": "What is The\nALTER TABLE\nstatement?",
      "options": [
        "used to add",
        "also used to add and drop various constraints on an existing table",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of The\nALTER TABLE\nstatement is 'also used to add and drop various constraints on an existing table'."
    }
  ],
  "summary": "This tutorial covers PostgreSQL ALTER COLUMN concepts and techniques. You'll learn how to use PostgreSQL ALTER COLUMN effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PostgreSQL ALTER COLUMN and how to apply it in your projects."
}