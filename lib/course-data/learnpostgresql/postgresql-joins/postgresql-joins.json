{
  "id": "e1a5490e-e11f-49b2-929c-47f5fdf1f6bb",
  "title": "PostgreSQL JOINS",
  "slug": "postgresql-joins",
  "metadata": {
    "description": "Learn about PostgreSQL JOINS with clear explanations and practical examples.",
    "keywords": [
      "sql",
      "table",
      "join",
      "products",
      "records",
      "categories",
      "tables",
      "column",
      "returns",
      "left",
      "right"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Sql Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPostgreSQL",
    "subcategory": "PostgreSQL Joins"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PostgreSQL JOINS",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "JOIN\nA\nJOIN\nclause is used to combine rows from two or \nmore tables, based on a related column between them.\nLet's look at a selection from the\nproducts\ntable:\nproduct_id |\u00a0 product_name\u00a0 | category_id\n------------+----------------+-------------\n33 | Geitost\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n    |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 4\n34 | Sasquatch \n    Ale\u00a0 |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1\n35 |\u00a0Steeleye \n    Stout |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1\n36 |\u00a0Inlagd \n    Sill\u00a0\u00a0\u00a0 |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n    8\nThen, look at a selection from the\ncategories\ntable:\ncategory_id | category_name\n-------------+----------------\n1 | Beverages\n2 | Condiments\n3 | Confections\n4 | Dairy Products\nNotice that the\ncategory_id\ncolumn in the\nproducts\ntable refers to the\ncategory_id\nin the\ncategories\ntable.\nThe relationship between the two tables above is the\ncategory_id\ncolumn.\nThen, we can create the following SQL statement (with a JOIN),\nthat selects records that have matching values in both tables:\nExample\nJoin\nproducts\nto\ncategories\nusing the\ncategory_id\ncolumn:\nSELECT product_id, product_name, category_name\nFROM products\nINNER JOIN categories ON products.category_id = categories.category_id;\nRun Example \u00bb\nIf we pull out the same selection from products table above, we get this result:\nResult\nproduct_id \n    |\u00a0 product_name\u00a0 |\u00a0category_name\n------------+----------------+----------------\n33 | Geitost\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 | Dairy Products\n34 | Sasquatch Ale\u00a0 | Beverages\n35 | Steeleye Stout | Beverages\n36 | Inlagd Sill\u00a0\u00a0\u00a0 | Seafood\nDifferent Types of Joins\nHere are the different types of the Joins in PostgreSQL:\nINNER JOIN\n: Returns records that have matching values in both tables\nLEFT JOIN\n: Returns all records from the left table, and the matched records from the right table\nRIGHT JOIN\n: Returns all records from the right table, and the matched records from the left table\nFULL JOIN\n: Returns all records when there is a match in either left or right table\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "product_id |\u00a0 product_name\u00a0 | category_id\n------------+----------------+-------------\n33 | Geitost\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n    |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 4\n34 | Sasquatch \n    Ale\u00a0 |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1\n35 |\u00a0Steeleye \n    Stout |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1\n36 |\u00a0Inlagd \n    Sill\u00a0\u00a0\u00a0 |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n    8",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "category_id | category_name\n-------------+----------------\n1 | Beverages\n2 | Condiments\n3 | Confections\n4 | Dairy Products",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "SELECT product_id, product_name, category_name\nFROM products\nINNER JOIN categories ON products.category_id = categories.category_id;",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Result",
      "content": "",
      "order": 6,
      "code": "product_id \n    |\u00a0 product_name\u00a0 |\u00a0category_name\n------------+----------------+----------------\n33 | Geitost\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 | Dairy Products\n34 | Sasquatch Ale\u00a0 | Beverages\n35 | Steeleye Stout | Beverages\n36 | Inlagd Sill\u00a0\u00a0\u00a0 | Seafood",
      "language": "unknown",
      "explanation": "Example of result"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "product_id |\u00a0 product_name\u00a0 | category_id\n# TODO: Complete this line\n33 | Geitost\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n    |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 4\n34 | Sasquatch \n    Ale\u00a0 |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1\n35 |\u00a0Steeleye \n    Stout |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1\n36 |\u00a0Inlagd \n    Sill\u00a0\u00a0\u00a0 |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n    8",
      "solution": "product_id |\u00a0 product_name\u00a0 | category_id\n------------+----------------+-------------\n33 | Geitost\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n    |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 4\n34 | Sasquatch \n    Ale\u00a0 |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1\n35 |\u00a0Steeleye \n    Stout |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1\n36 |\u00a0Inlagd \n    Sill\u00a0\u00a0\u00a0 |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n    8"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "category_id | category_name\n-------------+----------------\n1 | Beverages\n# TODO: Complete this line\n3 | Confections\n4 | Dairy Products",
      "solution": "category_id | category_name\n-------------+----------------\n1 | Beverages\n2 | Condiments\n3 | Confections\n4 | Dairy Products"
    }
  ],
  "related_topics": [
    {
      "id": "b5e3b96c-22c2-4d36-ae17-7e8a65d1a312",
      "title": "Sql Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "dcb5e861-49d0-4af7-a46a-e2ab3d23c282",
      "title": "Sql Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "8354cf0b-61ac-473e-bb0c-027dee909b52",
      "title": "Sql Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is PostgreSQL JOINS\n\nJOIN\nA\nJOIN\nclause?",
      "options": [
        "None of the above.",
        "None of the above.",
        "used to combine rows from two or \nmore tables",
        "the\ncategory_id\ncolumn"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of PostgreSQL JOINS\n\nJOIN\nA\nJOIN\nclause is 'used to combine rows from two or \nmore tables'."
    },
    {
      "question": "What is The relationship between the two tables above?",
      "options": [
        "used to combine rows from two or \nmore tables",
        "None of the above.",
        "the\ncategory_id\ncolumn",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of The relationship between the two tables above is 'the\ncategory_id\ncolumn'."
    }
  ],
  "summary": "This tutorial covers PostgreSQL JOINS concepts and techniques. You'll learn how to use PostgreSQL JOINS effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PostgreSQL JOINS and how to apply it in your projects."
}