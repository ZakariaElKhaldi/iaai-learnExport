{
  "id": "74ecf261-338d-4835-87ea-c082d9e5d18d",
  "title": "PostgreSQL BETWEEN Operator",
  "slug": "postgresql-between-operator",
  "metadata": {
    "description": "Learn about PostgreSQL BETWEEN Operator with clear explanations and practical examples.",
    "keywords": [
      "sql",
      "example",
      "values",
      "select",
      "operator",
      "products",
      "text",
      "pavlova",
      "tofu",
      "price",
      "also"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Sql Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPostgreSQL",
    "subcategory": "PostgreSQL BETWEEN"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PostgreSQL BETWEEN Operator",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "BETWEEN\nThe\nBETWEEN\noperator selects values within a given range. The values can be numbers, text, or dates.\nThe\nBETWEEN\noperator is inclusive: begin and end values are included.\nExample\nSelect all products with a price between 10 and 15:\nSELECT * FROM Products\nWHERE Price BETWEEN 10 AND 15;\nRun Example \u00bb\nBETWEEN Text Values\nThe\nBETWEEN\noperator can also be used on text values.\nThe result returns all records that are\nalphabetically\nbetween the specified values.\nExample\nSelect all products between 'Pavlova' and 'Tofu':\nSELECT * FROM Products\nWHERE product_name BETWEEN 'Pavlova' AND 'Tofu';\nRun Example \u00bb\nIf we add an\nORDER BY\nclause to the example above, it will be a bit easier to read:\nExample\nSame example as above, but we sort it by\nproduct_name\n:\nSELECT * FROM Products\nWHERE product_name BETWEEN 'Pavlova' AND 'Tofu'\nORDER BY product_name;\nRun Example \u00bb\nBETWEEN Date Values\nThe\nBETWEEN\noperator can also be used on date values.\nExample\nSelect all orders between 12. of April 2023 and 5. of May 2023:\nSELECT * FROM orders\nWHERE order_date BETWEEN '2023-04-12' AND '2023-05-05';\nRun Example \u00bb\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "SELECT * FROM Products\nWHERE Price BETWEEN 10 AND 15;",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "SELECT * FROM Products\nWHERE product_name BETWEEN 'Pavlova' AND 'Tofu';",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "SELECT * FROM Products\nWHERE product_name BETWEEN 'Pavlova' AND 'Tofu'\nORDER BY product_name;",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "SELECT * FROM orders\nWHERE order_date BETWEEN '2023-04-12' AND '2023-05-05';",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your unknown code here",
      "solution": "SELECT * FROM Products\nWHERE Price BETWEEN 10 AND 15;"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your unknown code here",
      "solution": "SELECT * FROM Products\nWHERE product_name BETWEEN 'Pavlova' AND 'Tofu';"
    }
  ],
  "related_topics": [
    {
      "id": "4c96fdae-0ed6-4bbc-b152-d7a095e2405d",
      "title": "Sql Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "34f94459-c5a1-4d47-abac-535e2b2c8b33",
      "title": "Sql Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "ee0ef92a-be65-4b1e-9b9a-16a3d967d548",
      "title": "Sql Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The\nBETWEEN\noperator?",
      "options": [
        "None of the above.",
        "inclusive: begin and end values are included",
        "alphabetically\nbetween the specified values",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of The\nBETWEEN\noperator is 'inclusive: begin and end values are included'."
    },
    {
      "question": "What is The result returns all records that?",
      "options": [
        "alphabetically\nbetween the specified values",
        "inclusive: begin and end values are included",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of The result returns all records that is 'alphabetically\nbetween the specified values'."
    }
  ],
  "summary": "This tutorial covers PostgreSQL BETWEEN Operator concepts and techniques. You'll learn how to use PostgreSQL BETWEEN Operator effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PostgreSQL BETWEEN Operator and how to apply it in your projects."
}