{
  "id": "c2353039-8f17-4caa-8f49-093d8a9a4372",
  "title": "PostgreSQL AVG Function",
  "slug": "postgresql-avg-function",
  "metadata": {
    "description": "Learn about PostgreSQL AVG Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "price",
      "products",
      "average",
      "example",
      "numeric",
      "decimals",
      "function",
      "return",
      "select",
      "postgresql"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPostgreSQL",
    "subcategory": "PostgreSQL AVG"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "PostgreSQL AVG Function",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "AVG\nThe\nAVG()\nfunction returns the average value of a numeric column.\nExample\nReturn the average price of all the products in the\nproducts\ntable:\nSELECT AVG(price)\nFROM products;\nRun Example \u00bb\nNote:\nNULL values are ignored.\nWith 2 Decimals\nThe above example returned the average price of all products, the result was\n28.8663636363636364\n.\nWe can use the\n::NUMERIC\noperator to round the average price to a number with 2 decimals:\nExample\nReturn the average price of all the products, rounded to 2 decimals:\nSELECT AVG(price)::NUMERIC(10,2)\nFROM products;\nRun Example \u00bb\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "SELECT AVG(price)\nFROM products;",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "SELECT AVG(price)::NUMERIC(10,2)\nFROM products;",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your unknown code here",
      "solution": "SELECT AVG(price)\nFROM products;"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your unknown code here",
      "solution": "SELECT AVG(price)::NUMERIC(10,2)\nFROM products;"
    }
  ],
  "related_topics": [
    {
      "id": "516a21df-c1ee-412b-9709-1ee5ca8d37c1",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "823ad400-3728-4732-8294-ab555143b7f2",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "0bc3feb2-aa1e-40e9-a0fb-e301167ce329",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is NULL values?",
      "options": [
        "None of the above.",
        "None of the above.",
        "None of the above.",
        "ignored"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of NULL values is 'ignored'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers PostgreSQL AVG Function concepts and techniques. You'll learn how to use PostgreSQL AVG Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PostgreSQL AVG Function and how to apply it in your projects."
}