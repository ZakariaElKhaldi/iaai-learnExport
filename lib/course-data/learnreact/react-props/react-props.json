{
  "id": "06920dbf-5ad0-40dc-b6f2-ead70836da88",
  "title": "React Props",
  "slug": "react-props",
  "metadata": {
    "description": "Learn about React Props with clear explanations and practical examples.",
    "keywords": [
      "props",
      "brand",
      "example",
      "garage",
      "root",
      "function",
      "component",
      "return",
      "const",
      "react"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnReact",
    "subcategory": "React Props"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "React Props",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Props are arguments passed into React components.\nProps are passed to components via HTML attributes.\nprops\nstands for properties.\nReact Props\nReact Props are like function arguments in JavaScript\nand\nattributes \nin HTML.\nTo send props into a component, use the same syntax as HTML attributes:\nExample\nAdd a \"brand\" attribute to the Car element:\nconst myElement = <Car brand=\"Ford\" />;\nThe component receives the argument as a\nprops\nobject:\nExample\nUse the brand attribute in the component:\nfunction Car(props) {\n  return <h2>I am a { props.brand }!</h2>;\n}\nRun \nExample \u00bb\nPass Data\nProps are also how you pass data from one component to another, as parameters.\nExample\nSend the \"brand\" property from the Garage component to the Car component:\nfunction Car(props) {\n  return <h2>I am a { props.brand }!</h2>;\n}\n\nfunction Garage() {\n  return (\n    <>\n      <h1>Who lives in my garage?</h1>\n      <Car brand=\"Ford\" />\n    </>\n  );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<Garage />);\nRun \nExample \u00bb\nIf you have a variable to send, and not a string as in the example above, you just put the variable name inside curly brackets:\nExample\nCreate a variable named\ncarName\nand send it to the\nCar\ncomponent:\nfunction Car(props) {\n  return <h2>I am a { props.brand }!</h2>;\n}\n\nfunction Garage() {\n  const carName = \"Ford\";\n  return (\n    <>\n      <h1>Who lives in my garage?</h1>\n      <Car brand={ carName } />\n    </>\n  );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<Garage />);\nRun \nExample \u00bb\nOr if it was an object:\nExample\nCreate an object named\ncarInfo\nand send it to the\nCar\ncomponent:\nfunction Car(props) {\n  return <h2>I am a { props.brand.model }!</h2>;\n}\n\nfunction Garage() {\n  const carInfo = { name: \"Ford\", model: \"Mustang\" };\n  return (\n    <>\n      <h1>Who lives in my garage?</h1>\n      <Car brand={ carInfo } />\n    </>\n  );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<Garage />);\nRun \nExample \u00bb\nNote:\nReact Props are read-only! You will get an error if you try to change their \nvalue.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "391b466f-451d-48e9-8222-6786109c2429",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "a5551839-ec7a-41e9-b60e-ca7ffef36499",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "db0e8ee4-0b16-4c6f-8ba2-cca783ac0b4b",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is React Props\n\nProps?",
      "options": [
        "passed to components via HTML attributes",
        "None of the above.",
        "arguments passed into React components",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of React Props\n\nProps is 'arguments passed into React components'."
    },
    {
      "question": "What is Props?",
      "options": [
        "None of the above.",
        "passed to components via HTML attributes",
        "arguments passed into React components",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Props is 'passed to components via HTML attributes'."
    }
  ],
  "summary": "This tutorial covers React Props concepts and techniques. You'll learn how to use React Props effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of React Props and how to apply it in your projects."
}