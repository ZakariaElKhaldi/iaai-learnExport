{
  "id": "f39e1ae1-7af0-4c64-b175-a7e53f5ae8c8",
  "title": "React Conditional Rendering",
  "slug": "react-conditional-rendering",
  "metadata": {
    "description": "Learn about React Conditional Rendering with clear explanations and practical examples.",
    "keywords": [
      "root",
      "cars",
      "example",
      "render",
      "isgoal",
      "const",
      "return",
      "goal",
      "operator",
      "component"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnReact",
    "subcategory": "React Conditionals"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "React Conditional Rendering",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "In React, you can conditionally render components.\nThere are several ways to do this.\nif\nStatement\nWe can use the\nif\nJavaScript operator to decide which component to render.\nExample:\nWe'll use these two components:\nfunction MissedGoal() {\n  return <h1>MISSED!</h1>;\n}\n\nfunction MadeGoal() {\n  return <h1>Goal!</h1>;\n}\nExample:\nNow, we'll create another component that chooses which component to render based on a condition:\nfunction Goal(props) {\n  const isGoal = props.isGoal;\n  if (isGoal) {\n    return <MadeGoal/>;\n  }\n  return <MissedGoal/>;\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<Goal isGoal={false} />);\nRun \nExample \u00bb\nTry changing the\nisGoal\nattribute to\ntrue\n:\nExample:\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<Goal isGoal={true} />);\nRun \nExample \u00bb\nLogical\n&&\nOperator\nAnother way to conditionally render a React component is by using the\n&&\noperator.\nExample:\nWe can embed JavaScript expressions in JSX by using curly braces:\nfunction Garage(props) {\n  const cars = props.cars;\n  return (\n    <>\n      <h1>Garage</h1>\n      {cars.length > 0 &&\n        <h2>\n          You have {cars.length} cars in your garage.\n        </h2>\n      }\n    </>\n  );\n}\n\nconst cars = ['Ford', 'BMW', 'Audi'];\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<Garage cars={cars} />);\nRun \nExample \u00bb\nIf\ncars.length > 0\nis equates to true,\nthe expression after\n&&\nwill render.\nTry emptying the\ncars\narray:\nExample:\nconst cars = [];\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<Garage cars={cars} />);\nRun \nExample \u00bb\nTernary Operator\nAnother way to conditionally render elements is by using a ternary operator.\ncondition ? true : false\nWe will go back to the goal example.\nExample:\nReturn the\nMadeGoal\ncomponent if\nisGoal\nis\ntrue\n, \n  otherwise return the\nMissedGoal\ncomponent:\nfunction Goal(props) {\n  const isGoal = props.isGoal;\n  return (\n    <>\n      { isGoal ? <MadeGoal/> : <MissedGoal/> }\n    </>\n  );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<Goal isGoal={false} />);\nRun \nExample \u00bb\nTo learn more, see the\nternary operator\nsection.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "3a957dde-b5b1-4116-b536-492da8f76db8",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "1ee44818-ccbb-422e-bed0-cf22f8eaf060",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "b0998f43-4390-45df-8fcd-7688c0852ce3",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is There?",
      "options": [
        "by using the\n&&\noperator",
        "several ways to do this",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of There is 'several ways to do this'."
    },
    {
      "question": "What is Operator\nAnother way to conditionally render a React component?",
      "options": [
        "None of the above.",
        "several ways to do this",
        "None of the above.",
        "by using the\n&&\noperator"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Operator\nAnother way to conditionally render a React component is 'by using the\n&&\noperator'."
    }
  ],
  "summary": "This tutorial covers React Conditional Rendering concepts and techniques. You'll learn how to use React Conditional Rendering effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of React Conditional Rendering and how to apply it in your projects."
}