{
  "id": "21991f2b-73f6-40a6-b33c-f289e896fe52",
  "title": "React Getting Started",
  "slug": "react-getting-started",
  "metadata": {
    "description": "Learn about React Getting Started with clear explanations and practical examples.",
    "keywords": [
      "c",
      "react",
      "html",
      "create",
      "script",
      "application",
      "example",
      "file",
      "logo",
      "classname",
      "need"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnReact",
    "subcategory": "React Get Started"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "React Getting Started",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "To use React in production, you need npm which is included with\nNode.js\n.\nTo get an overview of what React is, you can write React \ncode directly in HTML.\nBut in order to use React in production, you need npm and\nNode.js\ninstalled.\nReact Directly in HTML\nThe quickest way start learning React is to \nwrite React directly in your HTML files.\n Spaces\nThe easiest way to get started with creating HTML files is  Spaces!\nIt is the perfect place to create, edit, and share your work with others!\nGet started for free \u276f\nStart by including three scripts, the first two let us write React code in our \nJavaScripts, and the third, Babel, allows us to write JSX \nsyntax and ES6 in \nolder browsers.\nYou will learn more about JSX in the\nReact JSX\nchapter.\nExample\nInclude three CDN's in your HTML file:\n<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"\nhttps://unpkg.com/react@18/umd/react.development.js\n\" crossorigin></script>\n    <script src=\"\nhttps://unpkg.com/react-dom@18/umd/react-dom.development.js\n\" crossorigin></script>\n    <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  </head>\n  <body>\n\n<div id=\"mydiv\"></div>\n\n<script type=\"text/babel\">\n      function Hello() {\n        return <h1>Hello World!</h1>;\n      }\n\nconst container = document.getElementById('mydiv');\n      const root = ReactDOM.createRoot(container);\n      root.render(<Hello />)\n    </script>\n\n</body>\n</html>\n\nThis way of using React can be OK for testing purposes, but for production you will need to set up a\nReact environment\n.\nSetting up a React Environment\nIf you have npx and Node.js installed, you can create a React application by \nusing\ncreate-react-app\n.\nIf you've \ncreate-react-app\nglobally,\nit is recommended that you uninstall the package to ensure npx always uses the latest version of\ncreate-react-app\n.\nTo uninstall, run this command:\nnpm uninstall -g create-react-app\n.\nRun this command to create a React application named\nmy-react-app\n:\nnpx create-react-app my-react-app\nThe\ncreate-react-app\nwill set up everything you need to run a React application.\nRun the React Application\nNow you are ready to run your first\nreal\nReact application!\nRun this command to move to the\nmy-react-app\ndirectory:\ncd my-react-app\nRun this command to run the React application\nmy-react-app\n:\nnpm start\nA new browser window will pop up with your newly created React App! If not, open your browser and type\nlocalhost:3000\nin the address bar.\nThe result:\nModify the React Application\nSo far so good, but how do I change the content?\nLook in the\nmy-react-app\ndirectory, and you will find a\nsrc\nfolder. Inside the\nsrc\nfolder there is a file called\nApp.js\n, open it and it will look like this:\n/myReactApp/src/App.js:\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"\nhttps://reactjs.org\n\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\nTry changing the HTML content and save the file.\nNotice that the changes are visible immediately after you save the file, you do not have to reload the browser!\nExample\nReplace all the content inside the\n<div  className=\"App\">\nwith a\n<h1>\nelement.\nSee the changes in the browser when you click Save.\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Hello World!</h1>\n    </div>\n  );\n}\n\nexport default App;\nNotice that we have removed the imports we do not need (logo.svg and App.css).\nThe result:\nWhat's \nNow you have a React Environment on your computer, and you are ready to learn more about React.\nIn the rest of this tutorial we will use our \"Show React\" tool to explain the various aspects of React, and how they are displayed in \nthe browser.\nIf you want to follow the same steps on your computer, start by \nstripping down the\nsrc\nfolder to only contain \none file:\nindex.js\n. You should also remove any \nunnecessary lines of code inside the\nindex.js\nfile to make them look like the example in the \"Show React\" tool \nbelow:\nExample\nClick the \"Run Example\" button to see the result.\nindex.js\n:\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nconst myFirstElement = <h1>Hello React!</h1>\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(myFirstElement);\nRun \nExample \u00bb\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "npx create-react-app my-react-app",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "cd my-react-app",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "npm start",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your unknown code here",
      "solution": "npx create-react-app my-react-app"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your unknown code here",
      "solution": "cd my-react-app"
    }
  ],
  "related_topics": [
    {
      "id": "9bce6134-058a-4054-ab20-991fe74f6e20",
      "title": "C Functions and Methods",
      "relationship": "next_topic"
    },
    {
      "id": "65ff1abe-d090-426e-8c1b-0c33609d4dd0",
      "title": "C Data Structures",
      "relationship": "suggested_next"
    }
  ],
  "quiz": [
    {
      "question": "What is you need npm which?",
      "options": [
        "None of the above.",
        "None of the above.",
        "included with\nNode",
        "Not a you need npm which."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of you need npm which is 'included with\nNode'."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers React Getting Started concepts and techniques. You'll learn how to use React Getting Started effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of React Getting Started and how to apply it in your projects."
}