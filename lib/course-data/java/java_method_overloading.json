{
  "title": "Java Method Overloading",
  "url": "https://www.w3schools.com/java/java_methods_overloading.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Java Method Overloading",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Method Overloading",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "With method overloading , multiple methods can have the same name with different parameters:",
      "html": "<p>With<strong> method overloading</strong>, multiple methods can have the same name with different\nparameters:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "int\n\nmyMethod\n(\nint\nx\n)\n\n\nfloat\n\nmyMethod\n(\nfloat\nx\n)\n\n\ndouble\n\nmyMethod\n(\ndouble\nx\n,\n\ndouble\ny\n)",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token return-type class-name\"><span class=\"token keyword keyword-int\">int</span></span> <span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> x<span class=\"token punctuation\">)</span>\n<span class=\"token return-type class-name\"><span class=\"token keyword keyword-float\">float</span></span> <span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-float\">float</span></span> x<span class=\"token punctuation\">)</span>\n<span class=\"token return-type class-name\"><span class=\"token keyword keyword-double\">double</span></span> <span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> y<span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Consider the following example, which has two methods that add numbers of different type:",
      "html": "<p>Consider the following example, which has two methods that add numbers of different type:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_method_overloading",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "static\n\nint\n\nplusMethodInt\n(\nint\nx\n,\n\nint\ny\n)\n\n{\n\n\nreturn\nx\n+\ny\n;\n\n\n}\n\n\n\nstatic\n\ndouble\n\nplusMethodDouble\n(\ndouble\nx\n,\n\ndouble\ny\n)\n\n{\n\n\nreturn\nx\n+\ny\n;\n\n\n}\n\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nint\nmyNum1\n=\n\nplusMethodInt\n(\n8\n,\n\n5\n)\n;\n\n\ndouble\nmyNum2\n=\n\nplusMethodDouble\n(\n4.3\n,\n\n6.26\n)\n;\n\nSystem\n.\nout\n.\nprintln\n(\n\"int: \"\n\n+\nmyNum1\n)\n;\n\nSystem\n.\nout\n.\nprintln\n(\n\"double: \"\n\n+\nmyNum2\n)\n;\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-int\">int</span></span> <span class=\"token function\">plusMethodInt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-return\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-double\">double</span></span> <span class=\"token function\">plusMethodDouble</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-return\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-void\">void</span></span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> myNum1 <span class=\"token operator\">=</span> <span class=\"token function\">plusMethodInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> myNum2 <span class=\"token operator\">=</span> <span class=\"token function\">plusMethodDouble</span><span class=\"token punctuation\">(</span><span class=\"token number\">4.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  System<span class=\"token punctuation\">.</span><span class=\"token keyword keyword-out\">out</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"int: \"</span> <span class=\"token operator\">+</span> myNum1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  System<span class=\"token punctuation\">.</span><span class=\"token keyword keyword-out\">out</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"double: \"</span> <span class=\"token operator\">+</span> myNum2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_method_overloading",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Instead of defining two methods that should do the same thing, it is better to overload one.",
      "html": "<p>Instead of defining two methods that should do the same thing, it is better to overload one. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the example below, we overload the plusMethod method to work for both int and double :",
      "html": "<p>In the example below, we overload the <code>plusMethod</code> \nmethod to work for both <code>int</code> \nand <code>double</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_method_overloading2",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "static\n\nint\n\nplusMethod\n(\nint\nx\n,\n\nint\ny\n)\n\n{\n\n\nreturn\nx\n+\ny\n;\n\n\n}\n\n\n\nstatic\n\ndouble\n\nplusMethod\n(\ndouble\nx\n,\n\ndouble\ny\n)\n\n{\n\n\nreturn\nx\n+\ny\n;\n\n\n}\n\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nint\nmyNum1\n=\n\nplusMethod\n(\n8\n,\n\n5\n)\n;\n\n\ndouble\nmyNum2\n=\n\nplusMethod\n(\n4.3\n,\n\n6.26\n)\n;\n\nSystem\n.\nout\n.\nprintln\n(\n\"int: \"\n\n+\nmyNum1\n)\n;\n\nSystem\n.\nout\n.\nprintln\n(\n\"double: \"\n\n+\nmyNum2\n)\n;\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" data-line=\"1,5,10,11\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-int\">int</span></span> <span class=\"token function\">plusMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-return\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-double\">double</span></span> <span class=\"token function\">plusMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-return\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-void\">void</span></span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> myNum1 <span class=\"token operator\">=</span> <span class=\"token function\">plusMethod</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> myNum2 <span class=\"token operator\">=</span> <span class=\"token function\">plusMethod</span><span class=\"token punctuation\">(</span><span class=\"token number\">4.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  System<span class=\"token punctuation\">.</span><span class=\"token keyword keyword-out\">out</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"int: \"</span> <span class=\"token operator\">+</span> myNum1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  System<span class=\"token punctuation\">.</span><span class=\"token keyword keyword-out\">out</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"double: \"</span> <span class=\"token operator\">+</span> myNum2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"1\" data-start=\"1\" style=\"top: 0px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"5\" data-start=\"5\" style=\"top: 88px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"10\" data-start=\"10\" style=\"top: 198px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"11\" data-start=\"11\" style=\"top: 220px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_method_overloading2",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: Multiple methods can have the same name as long as the number and/or type of parameters are different.",
      "html": "<p><strong>Note:</strong> Multiple methods can have the same name \n  as long as the number and/or type of parameters are different.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What does method overloading mean?",
      "html": "<p>What does method overloading mean?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "What does method overloading mean?",
        "options": [
          {
            "value": "0",
            "text": "That multiple classes can have the same class name with different constructors"
          },
          {
            "value": "1",
            "text": "That multiple methods can have the same name with different parameters"
          },
          {
            "value": "2",
            "text": "That methods can use switch statements to overload conditions"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_methods_overloading1"
      },
      "quiz_type": "quiz",
      "question": "What does method overloading mean?",
      "options": [
        {
          "value": "0",
          "text": "That multiple classes can have the same class name with different constructors"
        },
        {
          "value": "1",
          "text": "That multiple methods can have the same name with different parameters"
        },
        {
          "value": "2",
          "text": "That methods can use switch statements to overload conditions"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_methods_overloading1",
      "html": "<form action=\"exercise.asp?x=xrcise_methods_overloading1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">That multiple classes can have the same class name with different constructors</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">That multiple methods can have the same name with different parameters</label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\">That methods can use switch statements to overload conditions</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}