{
  "title": "Java Inner Class (Nested Class)",
  "url": "https://www.w3schools.com/java/java_inner_classes.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Java Inner Classes",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Java Inner Classes",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In Java, it is also possible to nest classes (a class within a class). The purpose of nested classes is to group classes that belong together, which makes your code more readable and maintainable.",
      "html": "<p>In Java, it is also possible to nest classes (a class within a class). The purpose \nof nested classes is to group classes that belong together, which makes your code more readable and maintainable.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To access the inner class, create an object of the outer class, and then create an object of the inner class:",
      "html": "<p>To access the inner class, create an object of the outer class, and then create an object of the inner class:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_class_inner",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nOuterClass\n\n{\n\n\nint\nx\n=\n\n10\n;\n\n\n\nclass\n\nInnerClass\n\n{\n\n\nint\ny\n=\n\n5\n;\n\n\n}\n\n\n}\n\n\n\npublic\n\nclass\n\nMain\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nOuterClass\nmyOuter\n=\n\nnew\n\nOuterClass\n(\n)\n;\n\n\nOuterClass\n.\nInnerClass\nmyInner\n=\nmyOuter\n.\nnew\n\nInnerClass\n(\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\nmyInner\n.\ny\n+\nmyOuter\n.\nx\n)\n;\n\n\n}\n\n\n}\n\n\n\n// Outputs 15 (5 + 10)",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" data-line=\"4\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">OuterClass</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-int\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">InnerClass</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-int\">int</span> y <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">OuterClass</span> myOuter <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">OuterClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">OuterClass<span class=\"token punctuation\">.</span>InnerClass</span> myInner <span class=\"token operator\">=</span> myOuter<span class=\"token punctuation\">.</span><span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">InnerClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myInner<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> myOuter<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Outputs 15 (5 + 10)</span>\n<div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"4\" data-start=\"4\" style=\"top: 66px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_class_inner",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Private Inner Class",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Unlike a \"regular\" class, an inner class can be private or protected . If you don't want outside objects to access the inner class, declare the class as private :",
      "html": "<p>Unlike a \"regular\" class, an inner class can be <code>private</code> or <code>protected</code>. \nIf you don't want outside objects to access the inner class, declare \nthe class as <code>private</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_class_inner2",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nOuterClass\n\n{\n\n\nint\nx\n=\n\n10\n;\n\n\n\nprivate\n\nclass\n\nInnerClass\n\n{\n\n\nint\ny\n=\n\n5\n;\n\n\n}\n\n\n}\n\n\n\npublic\n\nclass\n\nMain\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nOuterClass\nmyOuter\n=\n\nnew\n\nOuterClass\n(\n)\n;\n\n\nOuterClass\n.\nInnerClass\nmyInner\n=\nmyOuter\n.\nnew\n\nInnerClass\n(\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\nmyInner\n.\ny\n+\nmyOuter\n.\nx\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" data-line=\"4\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">OuterClass</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-int\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword keyword-private\"><strong>private</strong></span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">InnerClass</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-int\">int</span> y <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">OuterClass</span> myOuter <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">OuterClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">OuterClass<span class=\"token punctuation\">.</span>InnerClass</span> myInner <span class=\"token operator\">=</span> myOuter<span class=\"token punctuation\">.</span><span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">InnerClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myInner<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> myOuter<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"4\" data-start=\"4\" style=\"top: 66px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_class_inner2",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Static Inner Class",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "An inner class can also be static , which means that you can access it without creating an object of the outer class:",
      "html": "<p>An inner class can also be <code>static</code>, which means that you can access it without \ncreating an object of the outer class:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_class_inner3",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nOuterClass\n\n{\n\n\nint\nx\n=\n\n10\n;\n\n\n\nstatic\n\nclass\n\nInnerClass\n\n{\n\n\nint\ny\n=\n\n5\n;\n\n\n}\n\n\n}\n\n\n\npublic\n\nclass\n\nMain\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nOuterClass\n.\nInnerClass\nmyInner\n=\n\nnew\n\nOuterClass\n.\nInnerClass\n(\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\nmyInner\n.\ny\n)\n;\n\n\n}\n\n\n}\n\n\n\n// Outputs 5",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" data-line=\"4\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">OuterClass</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-int\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">InnerClass</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-int\">int</span> y <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">OuterClass<span class=\"token punctuation\">.</span>InnerClass</span> myInner <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">OuterClass<span class=\"token punctuation\">.</span>InnerClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myInner<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Outputs 5</span>\n<div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"4\" data-start=\"4\" style=\"top: 66px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_class_inner3",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: just like static attributes and methods, a static inner class does not have access to members of the outer class.",
      "html": "<p><strong>Note:</strong> just like <code>static</code> attributes and methods, a <code>static</code> inner class does not have access to members of the outer class.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Access Outer Class From Inner Class",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "One advantage of inner classes, is that they can access attributes and methods of the outer class:",
      "html": "<p>One advantage of inner classes, is that they can access attributes and methods of the outer class:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_class_inner_access",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nOuterClass\n\n{\n\n\nint\nx\n=\n\n10\n;\n\n\n\nclass\n\nInnerClass\n\n{\n\n\npublic\n\nint\n\nmyInnerMethod\n(\n)\n\n{\n\n\nreturn\nx\n;\n\n\n}\n\n\n}\n\n\n}\n\n\n\npublic\n\nclass\n\nMain\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nOuterClass\nmyOuter\n=\n\nnew\n\nOuterClass\n(\n)\n;\n\n\nOuterClass\n.\nInnerClass\nmyInner\n=\nmyOuter\n.\nnew\n\nInnerClass\n(\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\nmyInner\n.\nmyInnerMethod\n(\n)\n)\n;\n\n\n}\n\n\n}\n\n\n\n// Outputs 10",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">OuterClass</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-int\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">InnerClass</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-int\">int</span> <span class=\"token function\">myInnerMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword keyword-return\">return</span> x<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">OuterClass</span> myOuter <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">OuterClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">OuterClass<span class=\"token punctuation\">.</span>InnerClass</span> myInner <span class=\"token operator\">=</span> myOuter<span class=\"token punctuation\">.</span><span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">InnerClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myInner<span class=\"token punctuation\">.</span><span class=\"token function\">myInnerMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Outputs 10</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_class_inner_access",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To access an inner class, you can:",
      "html": "<p>To access an inner class, you can:</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "To access an inner class, you can:",
        "options": [
          {
            "value": "0",
            "text": "Create an object of the outer class, and then create an object of the inner class"
          },
          {
            "value": "1",
            "text": "Create a class, and specify the inner keyword"
          },
          {
            "value": "2",
            "text": "Create a class, and specify the friend keyword"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_inner_classes1"
      },
      "quiz_type": "quiz",
      "question": "To access an inner class, you can:",
      "options": [
        {
          "value": "0",
          "text": "Create an object of the outer class, and then create an object of the inner class"
        },
        {
          "value": "1",
          "text": "Create a class, and specify the inner keyword"
        },
        {
          "value": "2",
          "text": "Create a class, and specify the friend keyword"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_inner_classes1",
      "html": "<form action=\"exercise.asp?x=xrcise_inner_classes1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">Create an object of the outer class, and then create an object of the inner class</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">Create a class, and specify the inner keyword</label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\">Create a class, and specify the friend keyword</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}