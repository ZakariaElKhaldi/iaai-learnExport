{
  "title": "Java Enums",
  "url": "https://www.w3schools.com/java/java_enums.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Java Enums",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Enums",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "An enum is a special \"class\" that represents a group of constants (unchangeable variables, like final variables).",
      "html": "<p>An <code>enum</code> is a special \"class\" that represents a group of \n<strong>constants</strong> (unchangeable variables, like <code>final</code> variables).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To create an enum , use the enum keyword (instead of class or interface), and separate the constants with a comma. Note that they should be in uppercase letters:",
      "html": "<p>To create an <code>enum</code>, use the <code>enum</code> keyword (instead of class or interface), and separate \nthe constants with a comma. Note that they should be in uppercase letters:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_enums",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "enum\n\nLevel\n\n{\n\n\nLOW\n,\n\n\nMEDIUM\n,\n\n\nHIGH\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-enum\">enum</span> <span class=\"token class-name\">Level</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">LOW</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">MEDIUM</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">HIGH</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_enums",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Enum is short for \"enumerations\", which means \"specifically listed\".",
      "html": "<p><strong>Enum</strong> is short for \"enumerations\", which means \"specifically listed\".</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Enum inside a Class",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also have an enum inside a class:",
      "html": "<p>You can also have an <code>enum</code> inside a class:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_enums_class",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "public\n\nclass\n\nMain\n\n{\n\n\nenum\n\nLevel\n\n{\n\n\nLOW\n,\n\n\nMEDIUM\n,\n\n\nHIGH\n\n\n}\n\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nLevel\nmyVar\n=\n\nLevel\n.\nMEDIUM\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\nmyVar\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-enum\">enum</span> <span class=\"token class-name\">Level</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">LOW</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">MEDIUM</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">HIGH</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Level</span> myVar <span class=\"token operator\">=</span> <span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MEDIUM</span><span class=\"token punctuation\">;</span> \n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myVar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_enums_class",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Enum in a Switch Statement",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Enums are often used in switch statements to check for corresponding values:",
      "html": "<p>Enums are often used in <code>switch</code> statements to check for corresponding values:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_enums_switch",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "enum\n\nLevel\n\n{\n\n\nLOW\n,\n\n\nMEDIUM\n,\n\n\nHIGH\n\n\n}\n\n\n\npublic\n\nclass\n\nMain\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nLevel\nmyVar\n=\n\nLevel\n.\nMEDIUM\n;\n\n\n\nswitch\n(\nmyVar\n)\n\n{\n\n\ncase\n\nLOW\n:\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"Low level\"\n)\n;\n\n\nbreak\n;\n\n\ncase\n\nMEDIUM\n:\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"Medium level\"\n)\n;\n\n\nbreak\n;\n\n\ncase\n\nHIGH\n:\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"High level\"\n)\n;\n\n\nbreak\n;\n\n\n}\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-enum\">enum</span> <span class=\"token class-name\">Level</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">LOW</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">MEDIUM</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">HIGH</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Level</span> myVar <span class=\"token operator\">=</span> <span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MEDIUM</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword keyword-switch\">switch</span><span class=\"token punctuation\">(</span>myVar<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword keyword-case\">case</span> <span class=\"token constant\">LOW</span><span class=\"token operator\">:</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Low level\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword keyword-break\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword keyword-case\">case</span> <span class=\"token constant\">MEDIUM</span><span class=\"token operator\">:</span>\n         <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Medium level\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword keyword-break\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword keyword-case\">case</span> <span class=\"token constant\">HIGH</span><span class=\"token operator\">:</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"High level\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword keyword-break\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_enums_switch",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Loop Through an Enum",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The enum type has a values() method, which returns an array of all enum constants. This method is useful when you want to loop through the constants of an enum:",
      "html": "<p>The enum type has a <code>values()</code> method, which returns an array of all enum constants. This method is useful when you want to loop through the constants of an enum:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_enums_loop",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "for\n\n(\nLevel\nmyVar\n:\n\nLevel\n.\nvalues\n(\n)\n)\n\n{\n\n\nSystem\n.\nout\n.\nprintln\n(\nmyVar\n)\n;\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-for\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Level</span> myVar <span class=\"token operator\">:</span> <span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myVar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_enums_loop",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h4"
      },
      "text": "Difference between Enums and Classes",
      "level": "h4"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "An enum can, just like a class , have attributes and methods. The only difference is that enum constants are public , static and final (unchangeable - cannot be overridden).",
      "html": "<p>An <code>enum</code> can, just like a <code>class</code>, have attributes and methods. The only \ndifference is that enum constants are <code>public</code>, <code>static</code> and <code>final</code> \n(unchangeable - cannot be overridden).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "An enum cannot be used to create objects, and it cannot extend other classes (but it can implement interfaces).",
      "html": "<p>An <code>enum</code> cannot be used to create objects, and it cannot extend other classes (but it can implement interfaces).</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h4"
      },
      "text": "Why And When To Use Enums?",
      "level": "h4"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Use enums when you have values that you know aren't going to change, like month days, days, colors, deck of cards, etc.",
      "html": "<p>Use enums when you have values that you know aren't going to change, like month days, days, colors, deck of cards, etc.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "How can you access enum constants?",
      "html": "<p>How can you access enum constants?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "How can you access enum constants?",
        "options": [
          {
            "value": "0",
            "text": "With the and sign (&)"
          },
          {
            "value": "1",
            "text": "With a dot (.)"
          },
          {
            "value": "2",
            "text": "With a comma (,)"
          },
          {
            "value": "3",
            "text": "With the plus sign (+)"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_enums1"
      },
      "quiz_type": "quiz",
      "question": "How can you access enum constants?",
      "options": [
        {
          "value": "0",
          "text": "With the and sign (&)"
        },
        {
          "value": "1",
          "text": "With a dot (.)"
        },
        {
          "value": "2",
          "text": "With a comma (,)"
        },
        {
          "value": "3",
          "text": "With the plus sign (+)"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_enums1",
      "html": "<form action=\"exercise.asp?x=xrcise_enums1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">With the and sign (&amp;)</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">With a dot (.)</label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\">With a comma (,)</label></div><div class=\"quizoption\"><input id=\"quizoption3\" name=\"quizoption\" type=\"radio\" value=\"3\"/><label for=\"quizoption3\">With the plus sign (+)</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}