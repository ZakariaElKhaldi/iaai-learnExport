{
  "title": "Java Iterator",
  "url": "https://www.w3schools.com/java/java_iterator.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Java Iterator",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Java Iterator",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "ArrayList",
          "href": "https://www.w3schools.com/java_arraylist.asp",
          "title": ""
        },
        {
          "text": "HashSet",
          "href": "https://www.w3schools.com/java_hashset.asp",
          "title": ""
        }
      ],
      "text": "An Iterator is an object that can be used to loop through collections, like ArrayList and HashSet . It is called an \"iterator\" because \"iterating\" is the technical term for looping.",
      "html": "<p>An <code>Iterator</code> is an object that can be used to loop through collections, like <a href=\"java_arraylist.asp\">ArrayList</a>\nand <a href=\"java_hashset.asp\">HashSet</a>. It is called an \"iterator\" because \"iterating\" is the technical term for looping.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To use an Iterator, you must import it from the java.util package.",
      "html": "<p>To use an Iterator, you must import it from the <code>java.util</code> package.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Getting an Iterator",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The iterator() method can be used to get an Iterator for any collection:",
      "html": "<p>The <code>iterator()</code> method can be used to get an <code>Iterator</code> for any collection:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_iterator",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "// Import the ArrayList class and the Iterator class\n\n\nimport\n\njava\n.\nutil\n.\nArrayList\n;\n\n\nimport\n\njava\n.\nutil\n.\nIterator\n;\n\n\n\npublic\n\nclass\n\nMain\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\n\n// Make a collection\n\n\nArrayList\n<\nString\n>\ncars\n=\n\nnew\n\nArrayList\n<\nString\n>\n(\n)\n;\n\ncars\n.\nadd\n(\n\"Volvo\"\n)\n;\n\ncars\n.\nadd\n(\n\"BMW\"\n)\n;\n\ncars\n.\nadd\n(\n\"Ford\"\n)\n;\n\ncars\n.\nadd\n(\n\"Mazda\"\n)\n;\n\n\n\n// Get the iterator\n\n\nIterator\n<\nString\n>\nit\n=\ncars\n.\niterator\n(\n)\n;\n\n\n\n// Print the first item\n\n\nSystem\n.\nout\n.\nprintln\n(\nit\n.\nnext\n(\n)\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token comment\">// Import the ArrayList class and the Iterator class</span>\n<span class=\"token keyword keyword-import\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword keyword-import\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Iterator</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// Make a collection</span>\n    <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> cars <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Volvo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ford\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mazda\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Get the iterator</span>\n    <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> it <span class=\"token operator\">=</span> cars<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Print the first item</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_iterator",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Looping Through a Collection",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To loop through a collection, use the hasNext() and next() methods of the Iterator :",
      "html": "<p>To loop through a collection, use the <code>hasNext()</code> and <code>next()</code> methods of the <code>Iterator</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_iterator_loop",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "while\n(\nit\n.\nhasNext\n(\n)\n)\n\n{\n\n\nSystem\n.\nout\n.\nprintln\n(\nit\n.\nnext\n(\n)\n)\n;\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-while\">while</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_iterator_loop",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Removing Items from a Collection",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Iterators are designed to easily change the collections that they loop through. The remove() method can remove items from a collection while looping.",
      "html": "<p>Iterators are designed to easily change the collections that they loop through. The <code>remove()</code> method can remove items from a collection while looping.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_iterator_remove",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "import\n\njava\n.\nutil\n.\nArrayList\n;\n\n\nimport\n\njava\n.\nutil\n.\nIterator\n;\n\n\n\npublic\n\nclass\n\nMain\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nArrayList\n<\nInteger\n>\nnumbers\n=\n\nnew\n\nArrayList\n<\nInteger\n>\n(\n)\n;\n\nnumbers\n.\nadd\n(\n12\n)\n;\n\nnumbers\n.\nadd\n(\n8\n)\n;\n\nnumbers\n.\nadd\n(\n2\n)\n;\n\nnumbers\n.\nadd\n(\n23\n)\n;\n\n\nIterator\n<\nInteger\n>\nit\n=\nnumbers\n.\niterator\n(\n)\n;\n\n\nwhile\n(\nit\n.\nhasNext\n(\n)\n)\n\n{\n\n\nInteger\ni\n=\nit\n.\nnext\n(\n)\n;\n\n\nif\n(\ni\n<\n\n10\n)\n\n{\n\nit\n.\nremove\n(\n)\n;\n\n\n}\n\n\n}\n\n\nSystem\n.\nout\n.\nprintln\n(\nnumbers\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-import\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword keyword-import\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Iterator</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">&gt;</span></span> numbers <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    numbers<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    numbers<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    numbers<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    numbers<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">&gt;</span></span> it <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-while\">while</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token class-name\">Integer</span> i <span class=\"token operator\">=</span> it<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword keyword-if\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        it<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_iterator_remove",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: Trying to remove items using a for loop or a for-each loop would not work correctly because the collection is changing size at the same time that the code is trying to loop.",
      "html": "<p><strong>Note:</strong> Trying to remove items using a <strong>for loop</strong> or a \n<strong>for-each loop</strong> would not work correctly\nbecause the collection is changing size at the same time that the code is trying to loop.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is a correct syntax to create an Iterator object named it for a cars collection?",
      "html": "<p>What is a correct syntax to create an Iterator object named <code>it</code> for a <code>cars</code> collection?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "What is a correct syntax to create an Iterator object named it for a cars collection?",
        "options": [
          {
            "value": "0",
            "text": "Iterator<String> it = cars.iterator();"
          },
          {
            "value": "1",
            "text": "Iterate<String> it = cars.iterate();"
          },
          {
            "value": "2",
            "text": "Iteration<String> it = cars.iteration();"
          },
          {
            "value": "3",
            "text": "It<String> it = cars.it();"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_iterator1"
      },
      "quiz_type": "quiz",
      "question": "What is a correct syntax to create an Iterator object named it for a cars collection?",
      "options": [
        {
          "value": "0",
          "text": "Iterator<String> it = cars.iterator();"
        },
        {
          "value": "1",
          "text": "Iterate<String> it = cars.iterate();"
        },
        {
          "value": "2",
          "text": "Iteration<String> it = cars.iteration();"
        },
        {
          "value": "3",
          "text": "It<String> it = cars.it();"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_iterator1",
      "html": "<form action=\"exercise.asp?x=xrcise_iterator1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">Iterator&lt;String&gt; it = cars.iterator();</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">Iterate&lt;String&gt; it = cars.iterate();</label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\">Iteration&lt;String&gt; it = cars.iteration();</label></div><div class=\"quizoption\"><input id=\"quizoption3\" name=\"quizoption\" type=\"radio\" value=\"3\"/><label for=\"quizoption3\">It&lt;String&gt; it = cars.it();</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}