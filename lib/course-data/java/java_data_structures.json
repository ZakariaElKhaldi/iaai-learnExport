{
  "title": "Java Data Structures",
  "url": "https://www.w3schools.com/java/java_data_structures.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Java Data Structures",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Java Data Structures",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Data structures are ways to store and organize data so you can use it efficiently.",
      "html": "<p>Data structures are ways to store and organize data so you can use it efficiently.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "array",
          "href": "https://www.w3schools.com/java_arrays.asp",
          "title": ""
        }
      ],
      "text": "An array is an example of a data structure, which allows multiple elements to be stored in a single variable.",
      "html": "<p>An <a href=\"java_arrays.asp\">array</a> is an example of a data structure, which allows multiple elements to be stored in a single variable.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "",
      "html": "<p></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Some of the most common are:",
      "html": "<p>Some of the most common are:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We will explore all of them in detail later, but for now, here's a quick introduction to each one.",
      "html": "<p>We will explore all of them in detail later, but for now, here's a quick introduction to each one.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "ArrayList",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "An ArrayList is a resizable array that can grow as needed.",
      "html": "<p>\n  An <code>ArrayList</code> is a resizable array that can grow as needed.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It allows you to store elements and access them by index.",
      "html": "<p>It allows you to store elements and access them by index.\n</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_data_structure_arraylist",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "// Import the ArrayList class\n\n\nimport\n\njava\n.\nutil\n.\nArrayList\n;\n\n\n\npublic\n\nclass\n\nMain\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nArrayList\n<\nString\n>\ncars\n=\n\nnew\n\nArrayList\n<\nString\n>\n(\n)\n;\n\ncars\n.\nadd\n(\n\"Volvo\"\n)\n;\n\ncars\n.\nadd\n(\n\"BMW\"\n)\n;\n\ncars\n.\nadd\n(\n\"Ford\"\n)\n;\n\ncars\n.\nadd\n(\n\"Mazda\"\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\ncars\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token comment\">// Import the ArrayList class</span>\n<span class=\"token keyword keyword-import\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> cars <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Volvo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ford\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mazda\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>cars<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  </code>}<code class=\"language-java\">\n</code>}</pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_data_structure_arraylist",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "LinkedList",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A LinkedList works like an ArrayList , but it stores elements in a chain.",
      "html": "<p>A <code>LinkedList</code> works like an <code>ArrayList</code>, but it stores elements in a chain.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It's good when you need to add or remove items often.",
      "html": "<p>It's good when you need to add or remove items often.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_data_structure_linkedlist",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "// Import the LinkedList class\n\n\nimport\n\njava\n.\nutil\n.\nLinkedList\n;\n\n\n\npublic\n\nclass\n\nMain\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nLinkedList\n<\nString\n>\ncars\n=\n\nnew\n\nLinkedList\n<\nString\n>\n(\n)\n;\n\ncars\n.\nadd\n(\n\"Volvo\"\n)\n;\n\ncars\n.\nadd\n(\n\"BMW\"\n)\n;\n\ncars\n.\nadd\n(\n\"Ford\"\n)\n;\n\ncars\n.\nadd\n(\n\"Mazda\"\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\ncars\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token comment\">// Import the LinkedList class</span>\n<span class=\"token keyword keyword-import\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LinkedList</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">LinkedList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> cars <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">LinkedList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Volvo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ford\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mazda\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>cars<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_data_structure_linkedlist",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "HashMap",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A HashMap stores key-value pairs , which are great when you want to store values and find them by a key (like a name or ID):",
      "html": "<p>A <code>HashMap</code> stores <strong>key-value pairs</strong>, which are great when you want to store values and find them by a key (like a name or ID):</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_data_structure_hashmap",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "// Import the HashMap class\n\n\nimport\n\njava\n.\nutil\n.\nHashMap\n;\n\n\n\npublic\n\nclass\n\nMain\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\n// Create a HashMap object called capitalCities\n\n\nHashMap\n<\nString\n,\n\nString\n>\ncapitalCities\n=\n\nnew\n\nHashMap\n<\nString\n,\n\nString\n>\n(\n)\n;\n\n\n\n// Add keys and values (Country, City)\n\ncapitalCities\n.\nput\n(\n\"England\"\n,\n\n\"London\"\n)\n;\n\ncapitalCities\n.\nput\n(\n\"Germany\"\n,\n\n\"Berlin\"\n)\n;\n\ncapitalCities\n.\nput\n(\n\"Norway\"\n,\n\n\"Oslo\"\n)\n;\n\ncapitalCities\n.\nput\n(\n\"USA\"\n,\n\n\"Washington DC\"\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\ncapitalCities\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token comment\">// Import the HashMap class</span>\n<span class=\"token keyword keyword-import\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create a HashMap object called capitalCities</span>\n    <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> capitalCities <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Add keys and values (Country, City)</span>\n    capitalCities<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"England\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"London\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    capitalCities<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Germany\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Berlin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    capitalCities<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Norway\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Oslo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    capitalCities<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"USA\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Washington DC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>capitalCities<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_data_structure_hashmap",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "HashSet",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A HashSet is a collection where every element is unique - no duplicates are allowed.",
      "html": "<p>A <code>HashSet</code> is a collection where every element is unique - no duplicates are allowed.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_data_structure_hashset",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "// Import the HashSet class\n\n\nimport\n\njava\n.\nutil\n.\nHashSet\n;\n\n\n\npublic\n\nclass\n\nMain\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nHashSet\n<\nString\n>\ncars\n=\n\nnew\n\nHashSet\n<\nString\n>\n(\n)\n;\n\ncars\n.\nadd\n(\n\"Volvo\"\n)\n;\n\ncars\n.\nadd\n(\n\"BMW\"\n)\n;\n\ncars\n.\nadd\n(\n\"Ford\"\n)\n;\n\ncars\n.\nadd\n(\n\"BMW\"\n)\n;\n\ncars\n.\nadd\n(\n\"Mazda\"\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\ncars\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token comment\">// Import the HashSet class</span>\n<span class=\"token keyword keyword-import\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashSet</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> cars <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Volvo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ford\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mazda\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>cars<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_data_structure_hashset",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: In the example above, even though BMW is added twice it only appears once in the set because every element in a set has to be unique.",
      "html": "<p><strong>Note:</strong> In the example above, even though BMW is added twice it only appears once in the set because every element in a set has to be unique.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Data Structures Overview",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Iterators",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When learning about data structures, you will often hear about iterators too.",
      "html": "<p>When learning about data structures, you will often hear about iterators too.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "An iterator is a way to loop through elements in a data structure.",
      "html": "<p>An iterator is a way to loop through elements in a data structure.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It is called an \"iterator\" because \"iterating\" is the technical term for looping.",
      "html": "<p>It is called an \"iterator\" because \"iterating\" is the technical term for \nlooping.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_data_structure_iterator",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "import\n\njava\n.\nutil\n.\nArrayList\n;\n\n\nimport\n\njava\n.\nutil\n.\nIterator\n;\n\n\n\npublic\n\nclass\n\nMain\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\n// Create an ArrayList of Strings\n\n\nArrayList\n<\nString\n>\ncars\n=\n\nnew\n\nArrayList\n<\nString\n>\n(\n)\n;\n\ncars\n.\nadd\n(\n\"Volvo\"\n)\n;\n\ncars\n.\nadd\n(\n\"BMW\"\n)\n;\n\ncars\n.\nadd\n(\n\"Ford\"\n)\n;\n\ncars\n.\nadd\n(\n\"Mazda\"\n)\n;\n\n\n\n// Get an iterator for the ArrayList\n\n\nIterator\n<\nString\n>\nit\n=\ncars\n.\niterator\n(\n)\n;\n\n\n\n// Iterate through the list using the iterator\n\n\nwhile\n(\nit\n.\nhasNext\n(\n)\n)\n\n{\n\n\nSystem\n.\nout\n.\nprintln\n(\nit\n.\nnext\n(\n)\n)\n;\n\n\n}\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-import\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword keyword-import\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Iterator</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create an ArrayList of Strings</span>\n    <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> cars <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Volvo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ford\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cars<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mazda\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Get an iterator for the ArrayList</span>\n    <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> it <span class=\"token operator\">=</span> cars<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Iterate through the list using the iterator</span>\n    <span class=\"token keyword keyword-while\">while</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_data_structure_iterator",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Next , let's take a closer look at each data structure in more detail.",
      "html": "<p><strong>Next</strong>, let's take a closer look at each data structure in more detail.</p>"
    }
  ]
}