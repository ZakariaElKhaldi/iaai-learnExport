{
  "title": "Java Threads",
  "url": "https://www.w3schools.com/java/java_threads.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Java Threads",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Java Threads",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Threads allows a program to operate more efficiently by doing multiple things at the same time.",
      "html": "<p>Threads allows a program to operate more efficiently by doing multiple things at the same\ntime.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Threads can be used to perform complicated tasks in the background without interrupting the main program.",
      "html": "<p>Threads can be used to perform complicated tasks in the background without interrupting\nthe main program.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Creating a Thread",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "There are two ways to create a thread.",
      "html": "<p>There are two ways to create a thread.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It can be created by extending the Thread class and overriding its run() method:",
      "html": "<p>It can be created by extending the <code>Thread</code> class and overriding its <code>run()</code> \nmethod:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "public\n\nclass\n\nMain\n\nextends\n\nThread\n\n{\n\n\npublic\n\nvoid\n\nrun\n(\n)\n\n{\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"This code is running in a thread\"\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">Thread</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This code is running in a thread\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  </code>}<code class=\"language-java\">\n</code>}</pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Another way to create a thread is to implement the Runnable interface:",
      "html": "<p>Another way to create a thread is to implement the <code>Runnable</code> interface:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "public\n\nclass\n\nMain\n\nimplements\n\nRunnable\n\n{\n\n\npublic\n\nvoid\n\nrun\n(\n)\n\n{\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"This code is running in a thread\"\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token keyword keyword-implements\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This code is running in a thread\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Running Threads",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the class extends the Thread class, the thread can be run by creating an instance of the class and call its start() method:",
      "html": "<p>If the class extends the <code>Thread</code> class, the thread can be run by creating an instance of the\nclass and call its <code>start()</code> method:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_threads",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "public\n\nclass\n\nMain\n\nextends\n\nThread\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nMain\nthread\n=\n\nnew\n\nMain\n(\n)\n;\n\nthread\n.\nstart\n(\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"This code is outside of the thread\"\n)\n;\n\n\n}\n\n\npublic\n\nvoid\n\nrun\n(\n)\n\n{\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"This code is running in a thread\"\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">Thread</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Main</span> thread <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    thread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This code is outside of the thread\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This code is running in a thread\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_threads",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the class implements the Runnable interface, the thread can be run by passing an instance of the class to a Thread object's constructor and then calling the thread's start() method:",
      "html": "<p>If the class implements the <code>Runnable</code> interface, the thread can be run by passing an\ninstance of the class to a <code>Thread</code> object's constructor and then calling the thread's\n<code>start()</code> method:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_threads_runnable",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "public\n\nclass\n\nMain\n\nimplements\n\nRunnable\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nMain\nobj\n=\n\nnew\n\nMain\n(\n)\n;\n\n\nThread\nthread\n=\n\nnew\n\nThread\n(\nobj\n)\n;\n\nthread\n.\nstart\n(\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"This code is outside of the thread\"\n)\n;\n\n\n}\n\n\npublic\n\nvoid\n\nrun\n(\n)\n\n{\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"This code is running in a thread\"\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token keyword keyword-implements\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Main</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Thread</span> thread <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    thread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This code is outside of the thread\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This code is running in a thread\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_threads_runnable",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Differences between \"extending\" and \"implementing\" Threads",
      "html": "<p><strong>Differences between \"extending\" and \"implementing\" Threads</strong></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The major difference is that when a class extends the Thread class, you cannot extend any other class, but by implementing the Runnable interface, it is possible to extend from another class as well, like: class MyClass extends OtherClass implements Runnable .",
      "html": "<p>The major difference is that when a class extends the Thread class, you cannot extend any other class, but by implementing the Runnable interface, \nit is possible to extend from another class as well, like: class <code>MyClass extends OtherClass implements Runnable</code>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Concurrency Problems",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Because threads run at the same time as other parts of the program, there is no way to know in which order the code will run. When the threads and main program are reading and writing the same variables, the values are unpredictable. The problems that result from this are called concurrency problems.",
      "html": "<p>Because threads run at the same time as other parts of the program, there is no way to\nknow in which order the code will run. When the threads and main program are reading\nand writing the same variables, the values are unpredictable. The problems that result\nfrom this are called concurrency problems.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_threads_concurrency",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "public\n\nclass\n\nMain\n\nextends\n\nThread\n\n{\n\n\npublic\n\nstatic\n\nint\namount\n=\n\n0\n;\n\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nMain\nthread\n=\n\nnew\n\nMain\n(\n)\n;\n\nthread\n.\nstart\n(\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\namount\n)\n;\n\namount\n++\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\namount\n)\n;\n\n\n}\n\n\n\npublic\n\nvoid\n\nrun\n(\n)\n\n{\n\namount\n++\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">Thread</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-int\">int</span> amount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Main</span> thread <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    thread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    amount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  </code>}<code class=\"language-java\">\n\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    amount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  </code>}<code class=\"language-java\">\n</code>}</pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_threads_concurrency",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To avoid concurrency problems, it is best to share as few attributes between threads as possible. If attributes need to be shared, one possible solution is to use the isAlive() method of the thread to check whether the thread has finished running before using any attributes that the thread can change.",
      "html": "<p>To avoid concurrency problems, it is best to share as few attributes between threads as\npossible. If attributes need to be shared, one possible solution is to use the <code>isAlive()</code>\nmethod of the thread to check whether the thread has finished running before using any \nattributes that the thread can change.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_threads_concurrency2",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "public\n\nclass\n\nMain\n\nextends\n\nThread\n\n{\n\n\npublic\n\nstatic\n\nint\namount\n=\n\n0\n;\n\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nMain\nthread\n=\n\nnew\n\nMain\n(\n)\n;\n\nthread\n.\nstart\n(\n)\n;\n\n\n// Wait for the thread to finish\n\n\nwhile\n(\nthread\n.\nisAlive\n(\n)\n)\n\n{\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"Waiting...\"\n)\n;\n\n\n}\n\n\n// Update amount and print its value\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"Main: \"\n\n+\namount\n)\n;\n\namount\n++\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"Main: \"\n\n+\namount\n)\n;\n\n\n}\n\n\npublic\n\nvoid\n\nrun\n(\n)\n\n{\n\namount\n++\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">Thread</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-int\">int</span> amount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Main</span> thread <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    thread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Wait for the thread to finish</span>\n    <span class=\"token keyword keyword-while\">while</span><span class=\"token punctuation\">(</span>thread<span class=\"token punctuation\">.</span><span class=\"token function\">isAlive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Waiting...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </code>}<code class=\"language-java\">\n    <span class=\"token comment\">// Update amount and print its value</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Main: \"</span> <span class=\"token operator\">+</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    amount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Main: \"</span> <span class=\"token operator\">+</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  </code>}<code class=\"language-java\">\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    amount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  </code>}<code class=\"language-java\">\n</code>}</pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_threads_concurrency2",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "One way to create a thread is:",
      "html": "<p>One way to create a thread is:</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "One way to create a thread is:",
        "options": [
          {
            "value": "0",
            "text": "By extending the Thread class and overriding its run() method"
          },
          {
            "value": "1",
            "text": "By importing the Thread class and use the runnable() method"
          },
          {
            "value": "2",
            "text": "By implementing the Thread interface and use the thread() method"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_threads1"
      },
      "quiz_type": "quiz",
      "question": "One way to create a thread is:",
      "options": [
        {
          "value": "0",
          "text": "By extending the Thread class and overriding its run() method"
        },
        {
          "value": "1",
          "text": "By importing the Thread class and use the runnable() method"
        },
        {
          "value": "2",
          "text": "By implementing the Thread interface and use the thread() method"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_threads1",
      "html": "<form action=\"exercise.asp?x=xrcise_threads1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">By extending the Thread class and overriding its run() method</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">By importing the Thread class and use the runnable() method</label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\">By implementing the Thread interface and use the thread() method</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}