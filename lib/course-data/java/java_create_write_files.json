{
  "title": "Java Create and Write To Files",
  "url": "https://www.w3schools.com/java/java_files_create.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Java Create and Write To Files",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Create a File",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To create a file in Java, you can use the createNewFile() method. This method returns a boolean value: true if the file was successfully created, and false if the file already exists. Note that the method is enclosed in a try...catch block. This is necessary because it throws an IOException if an error occurs (if the file cannot be created for some reason):",
      "html": "<p>To create a file in Java, you can use the <code>createNewFile()</code> method. This method returns a \nboolean value: <code>true</code> if the file was successfully created, and <code>false</code> if the file \nalready exists. Note that the method is enclosed in a <code>try...catch</code> \nblock. This is necessary because it throws an <code>IOException</code> if an error occurs (if the \nfile cannot be created for some reason):</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "import\n\njava\n.\nio\n.\nFile\n;\n\n// Import the File class\n\n\nimport\n\njava\n.\nio\n.\nIOException\n;\n\n// Import the IOException class to handle errors\n\n\n\npublic\n\nclass\n\nCreateFile\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\ntry\n\n{\n\n\nFile\nmyObj\n=\n\nnew\n\nFile\n(\n\"filename.txt\"\n)\n;\n\n\nif\n\n(\nmyObj\n.\ncreateNewFile\n(\n)\n)\n\n{\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"File created: \"\n\n+\nmyObj\n.\ngetName\n(\n)\n)\n;\n\n\n}\n\nelse\n\n{\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"File already exists.\"\n)\n;\n\n\n}\n\n\n}\n\ncatch\n\n(\nIOException\ne\n)\n\n{\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"An error occurred.\"\n)\n;\n\ne\n.\nprintStackTrace\n(\n)\n;\n\n\n}\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-import\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">File</span></span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Import the File class</span>\n<span class=\"token keyword keyword-import\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Import the IOException class to handle errors</span>\n\n<span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">CreateFile</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-try\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token class-name\">File</span> myObj <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"filename.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span>myObj<span class=\"token punctuation\">.</span><span class=\"token function\">createNewFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"File created: \"</span> <span class=\"token operator\">+</span> myObj<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword keyword-else\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"File already exists.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword keyword-catch\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"An error occurred.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To create a file in a specific directory (requires permission), specify the path of the file and use double backslashes to escape the \" \\ \" character (for Windows). On Mac and Linux you can just write the path, like: /Users/name/filename.txt",
      "html": "<p>To create a file in a specific directory (requires permission), specify the path of the file and use double backslashes to escape the \"<code>\\</code>\" character (for Windows). On Mac and Linux you can just write the path, like: /Users/name/filename.txt</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "File\nmyObj\n=\n\nnew\n\nFile\n(\n\"C:\\\\Users\\\\MyName\\\\filename.txt\"\n)\n;",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token class-name\">File</span> myObj <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C:\\\\Users\\\\MyName\\\\filename.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Write To a File",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the following example, we use the FileWriter class together with its write() method to write some text to the file we created in the example above. Note that when you are done writing to the file, you should close it with the close() method:",
      "html": "<p>In the \nfollowing example, we use the <code>FileWriter</code> class together with its <code>write()</code> method \nto write some text to the file we created in the example above. Note that when you are done writing to the file, \nyou should close it \nwith the <code>close()</code> method:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "import\n\njava\n.\nio\n.\nFileWriter\n;\n\n// Import the FileWriter class\n\n\nimport\n\njava\n.\nio\n.\nIOException\n;\n\n// Import the IOException class to handle errors\n\n\n\npublic\n\nclass\n\nWriteToFile\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\ntry\n\n{\n\n\nFileWriter\nmyWriter\n=\n\nnew\n\nFileWriter\n(\n\"filename.txt\"\n)\n;\n\nmyWriter\n.\nwrite\n(\n\"Files in Java might be tricky, but it is fun enough!\"\n)\n;\n\nmyWriter\n.\nclose\n(\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"Successfully wrote to the file.\"\n)\n;\n\n\n}\n\ncatch\n\n(\nIOException\ne\n)\n\n{\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"An error occurred.\"\n)\n;\n\ne\n.\nprintStackTrace\n(\n)\n;\n\n\n}\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-import\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileWriter</span></span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// Import the FileWriter class</span>\n<span class=\"token keyword keyword-import\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Import the IOException class to handle errors</span>\n\n<span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">WriteToFile</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-try\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token class-name\">FileWriter</span> myWriter <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">FileWriter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"filename.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      myWriter<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Files in Java might be tricky, but it is fun enough!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      myWriter<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Successfully wrote to the file.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword keyword-catch\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"An error occurred.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Java Read Files",
          "href": "https://www.w3schools.com/java_files_read.asp",
          "title": ""
        }
      ],
      "text": "To read the file above, go to the Java Read Files chapter.",
      "html": "<p>To read the file above, go to the <a href=\"java_files_read.asp\">Java Read Files</a> chapter.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Which method can be used to create a file?",
      "html": "<p>Which method can be used to create a file?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "Which method can be used to create a file?",
        "options": [
          {
            "value": "0",
            "text": "isWriteable()"
          },
          {
            "value": "1",
            "text": "canWrite()"
          },
          {
            "value": "2",
            "text": "createNewFile()"
          },
          {
            "value": "3",
            "text": "createFile()"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_files_create1"
      },
      "quiz_type": "quiz",
      "question": "Which method can be used to create a file?",
      "options": [
        {
          "value": "0",
          "text": "isWriteable()"
        },
        {
          "value": "1",
          "text": "canWrite()"
        },
        {
          "value": "2",
          "text": "createNewFile()"
        },
        {
          "value": "3",
          "text": "createFile()"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_files_create1",
      "html": "<form action=\"exercise.asp?x=xrcise_files_create1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">isWriteable()</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">canWrite()</label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\">createNewFile()</label></div><div class=\"quizoption\"><input id=\"quizoption3\" name=\"quizoption\" type=\"radio\" value=\"3\"/><label for=\"quizoption3\">createFile()</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}