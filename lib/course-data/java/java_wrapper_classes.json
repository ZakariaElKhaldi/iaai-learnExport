{
  "title": "Java Wrapper Classes",
  "url": "https://www.w3schools.com/java/java_wrapper_classes.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Java Wrapper Classes",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Java Wrapper Classes",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Wrapper classes provide a way to use primitive data types ( int , boolean , etc..) as objects.",
      "html": "<p>Wrapper classes provide a way to use primitive data types (<code>int</code>, <code>boolean</code>, \netc..) as objects.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The table below shows the primitive type and the equivalent wrapper class:",
      "html": "<p>The table below shows the primitive type and the equivalent wrapper class:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:50%\">Primitive Data Type</th>\n<th>Wrapper Class</th>\n</tr>\n<tr>\n<td>byte</td>\n<td>Byte</td>\n</tr>\n<tr>\n<td>short</td>\n<td>Short</td>\n</tr>\n<tr>\n<td>int</td>\n<td>Integer</td>\n</tr>\n<tr>\n<td>long</td>\n<td>Long</td>\n</tr>\n<tr>\n<td>float</td>\n<td>Float</td>\n</tr>\n<tr>\n<td>double</td>\n<td>Double</td>\n</tr>\n<tr>\n<td>boolean</td>\n<td>Boolean</td>\n</tr>\n<tr>\n<td>char</td>\n<td>Character</td>\n</tr>\n</tbody>\n</table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Sometimes you must use wrapper classes, for example when working with Collection objects, such as ArrayList , where primitive types cannot be used (the list can only store objects):",
      "html": "<p>Sometimes you must use wrapper classes, for example when working with Collection objects, such \nas <code>ArrayList</code>, where primitive types cannot be \nused (the list can only store objects):</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_arraylist_integer",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "w3-border-red",
          "w3-pale-red",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "ArrayList\n<\nint\n>\nmyNumbers\n=\n\nnew\n\nArrayList\n<\nint\n>\n(\n)\n;\n\n// Invalid",
      "language": "java",
      "code_html": "<pre class=\"w3-white w3-border-red w3-pale-red language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token keyword keyword-int\">int</span><span class=\"token punctuation\">&gt;</span></span> myNumbers <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token keyword keyword-int\">int</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Invalid</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "w3-border-red",
        "w3-pale-red",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_arraylist_integer",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "w3-border-red",
        "w3-pale-red",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Creating Wrapper Objects",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To create a wrapper object, use the wrapper class instead of the primitive type. To get the value, you can just print the object:",
      "html": "<p>To create a wrapper object, use the wrapper class instead of the primitive \ntype. To get the value, you can just print the object:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_wrapper_create",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "public\n\nclass\n\nMain\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nInteger\nmyInt\n=\n\n5\n;\n\n\nDouble\nmyDouble\n=\n\n5.99\n;\n\n\nCharacter\nmyChar\n=\n\n'A'\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\nmyInt\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\nmyDouble\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\nmyChar\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Integer</span> myInt <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Double</span> myDouble <span class=\"token operator\">=</span> <span class=\"token number\">5.99</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Character</span> myChar <span class=\"token operator\">=</span> <span class=\"token char\">'A'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myInt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myDouble<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myChar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_wrapper_create",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Since you're now working with objects, you can use certain methods to get information about the specific object.",
      "html": "<p>Since you're now working with objects, you can use certain methods to get \ninformation about the specific object.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "For example, the following methods are used to get the value associated with the corresponding wrapper object: intValue() , byteValue() , shortValue() , longValue() , floatValue() , doubleValue() , charValue() , booleanValue() .",
      "html": "<p>For example, the following methods are used to get the value associated with \nthe corresponding wrapper object: <code>intValue()</code>, <code>byteValue()</code>, <code>shortValue()</code>, <code>longValue()</code>, \n<code>floatValue()</code>, <code>doubleValue()</code>, <code>charValue()</code>, <code>\nbooleanValue()</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This example will output the same result as the example above:",
      "html": "<p>This example will output the same result as the example above:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_wrapper_methods",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "public\n\nclass\n\nMain\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nInteger\nmyInt\n=\n\n5\n;\n\n\nDouble\nmyDouble\n=\n\n5.99\n;\n\n\nCharacter\nmyChar\n=\n\n'A'\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\nmyInt\n.\nintValue\n(\n)\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\nmyDouble\n.\ndoubleValue\n(\n)\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\nmyChar\n.\ncharValue\n(\n)\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Integer</span> myInt <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Double</span> myDouble <span class=\"token operator\">=</span> <span class=\"token number\">5.99</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Character</span> myChar <span class=\"token operator\">=</span> <span class=\"token char\">'A'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myInt<span class=\"token punctuation\">.</span><span class=\"token function\">intValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myDouble<span class=\"token punctuation\">.</span><span class=\"token function\">doubleValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myChar<span class=\"token punctuation\">.</span><span class=\"token function\">charValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_wrapper_methods",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Another useful method is the toString() method, which is used to convert wrapper objects to strings.",
      "html": "<p>Another useful method is the <code>toString()</code> method, which is used to convert wrapper objects to strings.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the following example, we convert an Integer to a String , and use the length() method of the String class to output the length of the \"string\":",
      "html": "<p>In the following example, we convert an <code>Integer</code> to a <code>String</code>, and use the <code>length()</code> method of the <code>String</code> class to output the length of the \"string\":</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_wrapper_string",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "public\n\nclass\n\nMain\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nInteger\nmyInt\n=\n\n100\n;\n\n\nString\nmyString\n=\nmyInt\n.\ntoString\n(\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\nmyString\n.\nlength\n(\n)\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Integer</span> myInt <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">String</span> myString <span class=\"token operator\">=</span> myInt<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myString<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_wrapper_string",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To create a wrapper object of an int type called myInt , which of the following is used?",
      "html": "<p>To create a wrapper object of an <code>int</code> type called <code>myInt</code>, which of the following is used?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "To create a wrapper object of an int type called myInt, which of the following is used?",
        "options": [
          {
            "value": "0",
            "text": "Integer myInt = 5;"
          },
          {
            "value": "1",
            "text": "Int myInt = 5;"
          },
          {
            "value": "2",
            "text": "Number myInt = 5;"
          },
          {
            "value": "3",
            "text": "Wrap myInt = Integer(5)"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_wrapper_classes1"
      },
      "quiz_type": "quiz",
      "question": "To create a wrapper object of an int type called myInt, which of the following is used?",
      "options": [
        {
          "value": "0",
          "text": "Integer myInt = 5;"
        },
        {
          "value": "1",
          "text": "Int myInt = 5;"
        },
        {
          "value": "2",
          "text": "Number myInt = 5;"
        },
        {
          "value": "3",
          "text": "Wrap myInt = Integer(5)"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_wrapper_classes1",
      "html": "<form action=\"exercise.asp?x=xrcise_wrapper_classes1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">Integer myInt = 5;</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">Int myInt = 5;</label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\">Number myInt = 5;</label></div><div class=\"quizoption\"><input id=\"quizoption3\" name=\"quizoption\" type=\"radio\" value=\"3\"/><label for=\"quizoption3\">Wrap myInt = Integer(5)</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}