{
  "title": "Java Constructors",
  "url": "https://www.w3schools.com/java/java_constructors.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Java Constructors",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Java Constructors",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A constructor in Java is a special method that is used to initialize objects. The constructor is called when an object of a class is created. It can be used to set initial values for object attributes:",
      "html": "<p>A constructor in Java is a <strong>special method</strong> that is used to initialize objects. \nThe constructor is called when an object of a class is created. It can be used to \nset initial values for object attributes:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_constructor",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "// Create a Main class\n\n\npublic\n\nclass\n\nMain\n\n{\n\n\nint\nx\n;\n\n// Create a class attribute\n\n\n\n// Create a\nclass constructor\nfor the Main class\n\n\npublic\n\nMain\n(\n)\n\n{\n\nx\n=\n\n5\n;\n\n// Set the initial value for the class attribute x\n\n\n}\n\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nMain\nmyObj\n=\n\nnew\n\nMain\n(\n)\n;\n\n// Create an object of class Main (This will\ncall the constructor\n)\n\n\nSystem\n.\nout\n.\nprintln\n(\nmyObj\n.\nx\n)\n;\n\n// Print the value of x\n\n\n}\n\n\n}\n\n\n\n// Outputs 5",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" data-line=\"6\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token comment\">// Create a Main class</span>\n<span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-int\">int</span> x<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Create a class attribute</span>\n\n  <span class=\"token comment\">// Create a <strong>class constructor</strong> for the Main class</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    x <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Set the initial value for the class attribute x</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Main</span> myObj <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Create an object of class Main (This will <strong>call the constructor</strong>)</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myObj<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Print the value of x</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Outputs 5</span>\n<div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"6\" data-start=\"6\" style=\"top: 110px; width: 885px;\"> \n</div></code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_constructor",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note that the constructor name must match the class name , and it cannot have a return type (like void ).",
      "html": "<p>Note that the constructor name must <strong>match the class name</strong>, and it cannot have a \n<strong>return type</strong> (like <code>void</code>). </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Also note that the constructor is called when the object is created.",
      "html": "<p>Also note that the constructor is called when the object is created.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "All classes have constructors by default: if you do not create a class constructor yourself, Java creates one for you. However, then you are not able to set initial values for object attributes.",
      "html": "<p>All classes have constructors by default: if you do not create a class constructor \nyourself, Java creates one for you. However, then you are not able to set initial values for object attributes.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Constructor Parameters",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Constructors can also take parameters, which is used to initialize attributes.",
      "html": "<p>Constructors can also take parameters, which is used to initialize \nattributes.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The following example adds an int y parameter to the constructor. Inside the constructor we set x to y (x=y). When we call the constructor, we pass a parameter to the constructor (5), which will set the value of x to 5:",
      "html": "<p>The following example adds an <code>int y</code> parameter \nto the constructor. \nInside the constructor we set x to y (x=y). When we call \nthe constructor, we pass a parameter to the constructor (5), which will set the value of \nx to 5:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_constructor_para",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "public\n\nclass\n\nMain\n\n{\n\n\nint\nx\n;\n\n\n\npublic\n\nMain\n(\nint\ny\n)\n\n{\n\nx\n=\ny\n;\n\n\n}\n\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nMain\nmyObj\n=\n\nnew\n\nMain\n(\n5\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\nmyObj\n.\nx\n)\n;\n\n\n}\n\n\n}\n\n\n\n// Outputs 5",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" data-line=\"4\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-int\">int</span> x<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">(</span><span class=\"token keyword keyword-int\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    x <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Main</span> myObj <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myObj<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Outputs 5</span>\n<div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"4\" data-start=\"4\" style=\"top: 66px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_constructor_para",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can have as many parameters as you want:",
      "html": "<p>You can have as many parameters as you want:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_constructor_para2",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "public\n\nclass\n\nMain\n\n{\n\n\nint\nmodelYear\n;\n\n\nString\nmodelName\n;\n\n\n\npublic\n\nMain\n(\nint\nyear\n,\n\nString\nname\n)\n\n{\n\nmodelYear\n=\nyear\n;\n\nmodelName\n=\nname\n;\n\n\n}\n\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nMain\nmyCar\n=\n\nnew\n\nMain\n(\n1969\n,\n\n\"Mustang\"\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\nmyCar\n.\nmodelYear\n+\n\n\" \"\n\n+\nmyCar\n.\nmodelName\n)\n;\n\n\n}\n\n\n}\n\n\n\n// Outputs 1969 Mustang",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" data-line=\"5\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-int\">int</span> modelYear<span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">String</span> modelName<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">(</span><span class=\"token keyword keyword-int\">int</span> year<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    modelYear <span class=\"token operator\">=</span> year<span class=\"token punctuation\">;</span>\n    modelName <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Main</span> myCar <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">(</span><span class=\"token number\">1969</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Mustang\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myCar<span class=\"token punctuation\">.</span>modelYear <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> myCar<span class=\"token punctuation\">.</span>modelName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Outputs 1969 Mustang</span>\n<div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"5\" data-start=\"5\" style=\"top: 88px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/java/tryjava.asp?filename=demo_constructor_para2",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "True or False: All classes have constructors by default.",
      "html": "<p>True or False:<br/>All classes have constructors by default.</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "True or False:All classes have constructors by default.",
        "options": [
          {
            "value": "0",
            "text": "True"
          },
          {
            "value": "1",
            "text": "False"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_constructors1"
      },
      "quiz_type": "quiz",
      "question": "True or False:All classes have constructors by default.",
      "options": [
        {
          "value": "0",
          "text": "True"
        },
        {
          "value": "1",
          "text": "False"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_constructors1",
      "html": "<form action=\"exercise.asp?x=xrcise_constructors1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">True</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">False</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}