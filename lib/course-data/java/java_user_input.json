{
  "title": "Java User Input (Scanner class)",
  "url": "https://www.w3schools.com/java/java_user_input.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Java User Input (Scanner)",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Java User Input",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Scanner class is used to get user input, and it is found in the java.util package.",
      "html": "<p>The <code>Scanner</code> class is used to get \nuser input, and it is found in the <code>java.util</code> package.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To use the Scanner class, create an object of the class and use any of the available methods found in the Scanner class documentation. In our example, we will use the nextLine() method, which is used to read Strings:",
      "html": "<p>To use the <code>Scanner</code> class, create an object of the class and use any of the available methods found in the <code>Scanner</code> class documentation. \nIn our example, we will use the <code>nextLine()</code> method, which is used to read Strings:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "import\n\njava\n.\nutil\n.\nScanner\n;\n\n// Import the Scanner class\n\n\n\nclass\n\nMain\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nScanner\nmyObj\n=\n\nnew\n\nScanner\n(\nSystem\n.\nin\n)\n;\n\n// Create a Scanner object\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"Enter username\"\n)\n;\n\n\n\nString\nuserName\n=\nmyObj\n.\nnextLine\n(\n)\n;\n\n// Read user input\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"Username is: \"\n\n+\nuserName\n)\n;\n\n// Output user input\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-import\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Import the Scanner class</span>\n\n<span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Scanner</span> myObj <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Create a Scanner object</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">String</span> userName <span class=\"token operator\">=</span> myObj<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Read user input</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Username is: \"</span> <span class=\"token operator\">+</span> userName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Output user input</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Java Packages Tutorial",
          "href": "https://www.w3schools.com/java_packages.asp",
          "title": ""
        }
      ],
      "text": "If you don't know what a package is, read our Java Packages Tutorial .",
      "html": "<p>If you don't know what a package is, read our <a href=\"java_packages.asp\">Java Packages Tutorial</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Input Types",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the example above, we used the nextLine() method, which is used to read Strings. To read other types, look at the table below:",
      "html": "<p>In the example above, we used the <code>nextLine()</code> method, which is used to read Strings. To read other types, look at the table below:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody>\n<tr>\n<th style=\"width:26%\">Method</th>\n<th style=\"width:74%\">Description</th>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">nextBoolean()</code></td>\n<td>Reads a <code class=\"w3-codespan\">boolean</code> value from the user</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdate\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">nextByte()</code></td>\n<td>Reads a <code class=\"w3-codespan\">byte</code> value from the user</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localtime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">nextDouble()</code></td>\n<td>Reads a <code class=\"w3-codespan\">double</code> value from the user</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">nextFloat()</code></td>\n<td>Reads a <code class=\"w3-codespan\">float</code> value from the user</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">nextInt()</code></td>\n<td>Reads a <code class=\"w3-codespan\">int</code> value from the user</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">nextLine()</code></td>\n<td>Reads a <code class=\"w3-codespan\">String</code> value from the user</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">nextLong()</code></td>\n<td>Reads a <code class=\"w3-codespan\">long</code> value from the user</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">nextShort()</code></td>\n<td>Reads a <code class=\"w3-codespan\">short</code> value from the user</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n</tbody>\n</table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the example below, we use different methods to read data of various types:",
      "html": "<p>In the example below, we use different methods to read data of various types:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "import\n\njava\n.\nutil\n.\nScanner\n;\n\n\n\nclass\n\nMain\n\n{\n\n\npublic\n\nstatic\n\nvoid\n\nmain\n(\nString\n[\n]\nargs\n)\n\n{\n\n\nScanner\nmyObj\n=\n\nnew\n\nScanner\n(\nSystem\n.\nin\n)\n;\n\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"Enter name, age and salary:\"\n)\n;\n\n\n\n// String input\n\n\nString\nname\n=\nmyObj\n.\nnextLine\n(\n)\n;\n\n\n\n// Numerical input\n\n\nint\nage\n=\nmyObj\n.\nnextInt\n(\n)\n;\n\n\ndouble\nsalary\n=\nmyObj\n.\nnextDouble\n(\n)\n;\n\n\n\n// Output input by user\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"Name: \"\n\n+\nname\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"Age: \"\n\n+\nage\n)\n;\n\n\nSystem\n.\nout\n.\nprintln\n(\n\"Salary: \"\n\n+\nsalary\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-import\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Scanner</span> myObj <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter name, age and salary:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// String input</span>\n    <span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> myObj<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Numerical input</span>\n    <span class=\"token keyword keyword-int\">int</span> age <span class=\"token operator\">=</span> myObj<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-double\">double</span> salary <span class=\"token operator\">=</span> myObj<span class=\"token punctuation\">.</span><span class=\"token function\">nextDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Output input by user</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name: \"</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Age: \"</span> <span class=\"token operator\">+</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Salary: \"</span> <span class=\"token operator\">+</span> salary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: If you enter wrong input (e.g. text in a numerical input), you will get an exception/error message (like \"InputMismatchException\").",
      "html": "<p><strong>Note:</strong> If you enter wrong input (e.g. text in a numerical input), you will get an exception/error message (like \"InputMismatchException\").</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Exceptions chapter",
          "href": "https://www.w3schools.com/java_try_catch.asp",
          "title": ""
        }
      ],
      "text": "You can read more about exceptions and how to handle errors in the Exceptions chapter .",
      "html": "<p>You can read more about exceptions and how to handle errors in the <a href=\"java_try_catch.asp\">Exceptions chapter</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Complete Scanner Reference",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Java Scanner Reference",
          "href": "https://www.w3schools.com/java_ref_scanner.asp",
          "title": ""
        }
      ],
      "text": "Tip: For a complete reference of Scanner methods, go to our Java Scanner Reference .",
      "html": "<p><strong>Tip:</strong> For a complete reference of Scanner methods, go to our <a href=\"java_ref_scanner.asp\">Java Scanner Reference</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is a correct syntax to create a Scanner object?",
      "html": "<p>What is a correct syntax to create a Scanner object?</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "What is a correct syntax to create a Scanner object?",
        "options": [
          {
            "value": "0",
            "text": "Class Scan = new Scanner(System.in);"
          },
          {
            "value": "1",
            "text": "Scanner myObj = new Scanner(System.in);"
          },
          {
            "value": "2",
            "text": "Main myObj = new Main(Scanner);"
          },
          {
            "value": "3",
            "text": "Scan myObj = new Scan(Scanner);"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_user_input1"
      },
      "quiz_type": "quiz",
      "question": "What is a correct syntax to create a Scanner object?",
      "options": [
        {
          "value": "0",
          "text": "Class Scan = new Scanner(System.in);"
        },
        {
          "value": "1",
          "text": "Scanner myObj = new Scanner(System.in);"
        },
        {
          "value": "2",
          "text": "Main myObj = new Main(Scanner);"
        },
        {
          "value": "3",
          "text": "Scan myObj = new Scan(Scanner);"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_user_input1",
      "html": "<form action=\"exercise.asp?x=xrcise_user_input1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">Class Scan = new Scanner(System.in);</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">Scanner myObj = new Scanner(System.in);</label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\">Main myObj = new Main(Scanner);</label></div><div class=\"quizoption\"><input id=\"quizoption3\" name=\"quizoption\" type=\"radio\" value=\"3\"/><label for=\"quizoption3\">Scan myObj = new Scan(Scanner);</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}