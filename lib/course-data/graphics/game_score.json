{
  "title": "Game Tutorial",
  "url": "https://www.w3schools.com/graphics/game_score.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Game Score",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Push the buttons to move the red square:",
      "html": "<p>Push the buttons to move the red square:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Count The Score",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "There are many ways to keep the score in a game, we will show you how to write a score onto the canvas.",
      "html": "<p>There are many ways to keep the score in a game, we will show you how to \nwrite a score onto the canvas.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "First make a score component:",
      "html": "<p>First make a score component:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n var myGamePiece;var myObstacles = [];var myScore;\n function startGame() {\u00a0 myGamePiece = new component(30, 30, \"red\", 10, 160);\n \u00a0 myScore = new component(\"30px\", \"Consolas\", \"black\", 280, 40, \"text\");\u00a0 myGameArea.start();} ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "30",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "30",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"red\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "160",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"30px\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"Consolas\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"black\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "280",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "40",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"text\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "start",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "var myGamePiece;var myObstacles = [];var myScore;\nfunction startGame() {\u00a0 myGamePiece = new component(30, 30, \"red\", 10, 160);\nmyScore = new component(\"30px\", \"Consolas\", \"black\", 280, 40, \"text\");\u00a0 myGameArea.start();}",
      "syntax_highlighting": [
        {
          "text": "\n var myGamePiece;var myObstacles = [];var myScore;\n function startGame() {\u00a0 myGamePiece = new component(30, 30, \"red\", 10, 160);\n \u00a0 myScore = new component(\"30px\", \"Consolas\", \"black\", 280, 40, \"text\");\u00a0 myGameArea.start();} ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "30",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "30",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"red\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "160",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"30px\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"Consolas\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"black\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "280",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "40",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"text\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "start",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> myGamePiece;<br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> myObstacles = [];<br/><strong><span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> myScore;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </strong><br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> startGame() {<br/>\u00a0 myGamePiece = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> component(<span class=\"jsnumbercolor\" style=\"color:#905\">30</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">30</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"red\"</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">10</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">160</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <strong>\u00a0 myScore = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> component(<span class=\"jsstringcolor\" style=\"color:green\">\"30px\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"Consolas\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"black\"</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">280</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">40</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"text\"</span>);<br/></strong>\u00a0 myGameArea.<span class=\"jspropertycolor\" style=\"color:black\">start</span>();<br/>}<br/> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n var myGamePiece;var myObstacles = [];var myScore;\n function startGame() {\u00a0 myGamePiece = new component(30, 30, \"red\", 10, 160);\n \u00a0 myScore = new component(\"30px\", \"Consolas\", \"black\", 280, 40, \"text\");\u00a0 myGameArea.start();} ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "30",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "30",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"red\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "160",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"30px\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"Consolas\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"black\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "280",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "40",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"text\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "start",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The syntax for writing text on a canvas element is different from drawing a rectangle. Therefore we must call the component constructor using an additional argument, telling the constructor that this component is of type \"text\".",
      "html": "<p>The syntax for writing text on a canvas element is different from drawing a rectangle.\nTherefore we must call the component constructor using an additional argument,\ntelling the constructor that this component is of type \"text\".</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the component constructor we test if the component is of type \"text\", and use the fillText method instead of the fillRect method:",
      "html": "<p>In the component constructor we test if the component is of type \"text\", and use the \n<code>fillText</code> method instead of the <code>fillRect</code> method:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n function component(width, height, color, x, y, type) {\u00a0 this.type = type;\u00a0 this.width = width;\u00a0 this.height = height;\u00a0 this.speedX = 0;\u00a0 this.speedY = 0; \u00a0 this.x = x;\u00a0 this.y = y; \u00a0 this.update = function() {\u00a0\u00a0\u00a0 ctx = myGameArea.context;\u00a0\u00a0\u00a0 if (this.type == \"text\") {\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.font = this.width + \" \" + this.height;\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.fillStyle = color;\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.fillText(this.text, this.x, this.y);\u00a0\u00a0\u00a0 } else {\n \u00a0\u00a0\u00a0\u00a0\u00a0 ctx.fillStyle = color;\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.fillRect(this.x, this.y, this.width, this.height);\u00a0\u00a0\u00a0 }\u00a0 }...} ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "type",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "width",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "height",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "speedX",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "speedY",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "x",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "y",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "update",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "context",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "type",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"text\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "font",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "width",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\" \"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "height",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "fillStyle",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "fillText",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "text",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "x",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "y",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "else",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "fillStyle",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "fillRect",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "x",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "y",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "width",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "height",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "function component(width, height, color, x, y, type) {\u00a0 this.type = type;\u00a0 this.width = width;\u00a0 this.height = height;\u00a0 this.speedX = 0;\u00a0 this.speedY = 0; \u00a0 this.x = x;\u00a0 this.y = y; \u00a0 this.update = function() {\u00a0\u00a0\u00a0 ctx = myGameArea.context;\u00a0\u00a0\u00a0 if (this.type == \"text\") {\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.font = this.width + \" \" + this.height;\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.fillStyle = color;\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.fillText(this.text, this.x, this.y);\u00a0\u00a0\u00a0 } else {\nctx.fillStyle = color;\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.fillRect(this.x, this.y, this.width, this.height);\u00a0\u00a0\u00a0 }\u00a0 }...}",
      "syntax_highlighting": [
        {
          "text": "\n function component(width, height, color, x, y, type) {\u00a0 this.type = type;\u00a0 this.width = width;\u00a0 this.height = height;\u00a0 this.speedX = 0;\u00a0 this.speedY = 0; \u00a0 this.x = x;\u00a0 this.y = y; \u00a0 this.update = function() {\u00a0\u00a0\u00a0 ctx = myGameArea.context;\u00a0\u00a0\u00a0 if (this.type == \"text\") {\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.font = this.width + \" \" + this.height;\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.fillStyle = color;\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.fillText(this.text, this.x, this.y);\u00a0\u00a0\u00a0 } else {\n \u00a0\u00a0\u00a0\u00a0\u00a0 ctx.fillStyle = color;\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.fillRect(this.x, this.y, this.width, this.height);\u00a0\u00a0\u00a0 }\u00a0 }...} ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "type",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "width",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "height",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "speedX",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "speedY",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "x",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "y",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "update",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "context",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "type",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"text\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "font",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "width",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\" \"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "height",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "fillStyle",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "fillText",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "text",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "x",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "y",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "else",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "fillStyle",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "fillRect",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "x",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "y",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "width",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "height",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> component(width, height, color, x, y<strong>, type</strong>) {<br/><strong>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">type</span> = type;<br/></strong>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">width</span> = width;<br/>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">height</span> = height;<br/>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">speedX</span> = <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>;<br/>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">speedY</span> = <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>; <br/>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">x</span> = x;<br/>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">y</span> = y; <br/>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">update</span> = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span>() {<br/>\u00a0\u00a0\u00a0 ctx = myGameArea.<span class=\"jspropertycolor\" style=\"color:black\">context</span>;<br/><strong>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (<span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">type</span> == <span class=\"jsstringcolor\" style=\"color:green\">\"text\"</span>) {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.<span class=\"jspropertycolor\" style=\"color:black\">font</span> = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">width</span> + <span class=\"jsstringcolor\" style=\"color:green\">\" \"</span> + <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">height</span>;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.<span class=\"jspropertycolor\" style=\"color:black\">fillStyle</span> = color;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.<span class=\"jspropertycolor\" style=\"color:black\">fillText</span>(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">text</span>, <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">x</span>, <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">y</span>);<br/>\u00a0\u00a0\u00a0 } <span class=\"jskeywordcolor\" style=\"color:#005cc5\">else</span> {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </strong>\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.<span class=\"jspropertycolor\" style=\"color:black\">fillStyle</span> = color;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.<span class=\"jspropertycolor\" style=\"color:black\">fillRect</span>(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">x</span>, <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">y</span>, <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">width</span>, <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">height</span>);<br/><strong>\u00a0\u00a0\u00a0 }<br/></strong>\u00a0 }<br/>.<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span>.<span class=\"jspropertycolor\" style=\"color:black\"></span><br/>}<br/> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n function component(width, height, color, x, y, type) {\u00a0 this.type = type;\u00a0 this.width = width;\u00a0 this.height = height;\u00a0 this.speedX = 0;\u00a0 this.speedY = 0; \u00a0 this.x = x;\u00a0 this.y = y; \u00a0 this.update = function() {\u00a0\u00a0\u00a0 ctx = myGameArea.context;\u00a0\u00a0\u00a0 if (this.type == \"text\") {\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.font = this.width + \" \" + this.height;\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.fillStyle = color;\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.fillText(this.text, this.x, this.y);\u00a0\u00a0\u00a0 } else {\n \u00a0\u00a0\u00a0\u00a0\u00a0 ctx.fillStyle = color;\u00a0\u00a0\u00a0\u00a0\u00a0 ctx.fillRect(this.x, this.y, this.width, this.height);\u00a0\u00a0\u00a0 }\u00a0 }...} ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "type",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "width",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "height",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "speedX",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "speedY",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "x",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "y",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "update",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "context",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "type",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"text\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "font",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "width",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\" \"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "height",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "fillStyle",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "fillText",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "text",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "x",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "y",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "else",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "fillStyle",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "fillRect",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "x",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "y",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "width",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "height",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "At last we add some code in the updateGameArea function that writes the score onto the canvas. We use the frameNo property to count the score:",
      "html": "<p>At last we add some code in the updateGameArea function that writes the score \nonto the canvas. We use the <code>frameNo</code> property to count the score:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/graphics/tryit.asp?filename=trygame_score",
        "syntaxHighlighting": [
          {
            "text": "\n function updateGameArea() {\u00a0 var x, height, gap, minHeight, maxHeight, minGap, maxGap;\n  \u00a0 for (i = 0; i < myObstacles.length; i += 1) {\u00a0\u00a0\u00a0 if (myGamePiece.crashWith(myObstacles[i])) {\n  \u00a0\u00a0\u00a0\u00a0\u00a0 myGameArea.stop();\u00a0\u00a0\u00a0\u00a0\u00a0 return;\u00a0\u00a0\u00a0 } \u00a0 }\u00a0 myGameArea.clear();\n  \u00a0 myGameArea.frameNo += 1;\u00a0 if (myGameArea.frameNo == 1 || everyinterval(150)) {\u00a0\u00a0\u00a0 x = myGameArea.canvas.width;\n  \u00a0\u00a0\u00a0 minHeight = 20;\u00a0\u00a0\u00a0 maxHeight = 200;\u00a0\u00a0\u00a0\u00a0height = Math.floor(Math.random()*(maxHeight-minHeight+1)+minHeight);\u00a0\u00a0\u00a0\u00a0minGap = 50;\u00a0\u00a0\u00a0\u00a0maxGap = 200;\u00a0\u00a0\u00a0\u00a0gap = Math.floor(Math.random()*(maxGap-minGap+1)+minGap);\n  \u00a0\u00a0\u00a0 myObstacles.push(new component(10, height, \"green\", x, 0));\n  \u00a0\u00a0\u00a0 myObstacles.push(new component(10, x - height - gap, \"green\", x, height + gap));\n  \u00a0\u00a0}\u00a0 for (i = 0; i < myObstacles.length; i += 1) {\u00a0\u00a0\u00a0 myObstacles[i].speedX = -1;\n  \u00a0\u00a0\u00a0 myObstacles[i].newPos();\u00a0\u00a0\u00a0\u00a0myObstacles[i].update();\n  \u00a0\u00a0}\u00a0\u00a0myScore.text = \"SCORE: \" + myGameArea.frameNo;\n  \u00a0 myScore.update();\u00a0 myGamePiece.newPos();\n \u00a0\u00a0myGamePiece.update();} ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "length",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "crashWith",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "stop",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "clear",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "frameNo",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "frameNo",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "150",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "canvas",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "width",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "20",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "200",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "floor",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "random",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "50",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "200",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "floor",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "random",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"green\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "push",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "10",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"green\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "length",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "speedX",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "newPos",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "update",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "text",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"SCORE: \"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "frameNo",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "update",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "newPos",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "update",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "function updateGameArea() {\u00a0 var x, height, gap, minHeight, maxHeight, minGap, maxGap;\nfor (i = 0; i < myObstacles.length; i += 1) {\u00a0\u00a0\u00a0 if (myGamePiece.crashWith(myObstacles[i])) {\nmyGameArea.stop();\u00a0\u00a0\u00a0\u00a0\u00a0 return;\u00a0\u00a0\u00a0 } \u00a0 }\u00a0 myGameArea.clear();\nmyGameArea.frameNo += 1;\u00a0 if (myGameArea.frameNo == 1 || everyinterval(150)) {\u00a0\u00a0\u00a0 x = myGameArea.canvas.width;\nminHeight = 20;\u00a0\u00a0\u00a0 maxHeight = 200;\u00a0\u00a0\u00a0\u00a0height = Math.floor(Math.random()*(maxHeight-minHeight+1)+minHeight);\u00a0\u00a0\u00a0\u00a0minGap = 50;\u00a0\u00a0\u00a0\u00a0maxGap = 200;\u00a0\u00a0\u00a0\u00a0gap = Math.floor(Math.random()*(maxGap-minGap+1)+minGap);\nmyObstacles.push(new component(10, height, \"green\", x, 0));\nmyObstacles.push(new component(10, x - height - gap, \"green\", x, height + gap));\n}\u00a0 for (i = 0; i < myObstacles.length; i += 1) {\u00a0\u00a0\u00a0 myObstacles[i].speedX = -1;\nmyObstacles[i].newPos();\u00a0\u00a0\u00a0\u00a0myObstacles[i].update();\n}\u00a0\u00a0myScore.text = \"SCORE: \" + myGameArea.frameNo;\nmyScore.update();\u00a0 myGamePiece.newPos();\nmyGamePiece.update();}",
      "syntax_highlighting": [
        {
          "text": "\n function updateGameArea() {\u00a0 var x, height, gap, minHeight, maxHeight, minGap, maxGap;\n  \u00a0 for (i = 0; i < myObstacles.length; i += 1) {\u00a0\u00a0\u00a0 if (myGamePiece.crashWith(myObstacles[i])) {\n  \u00a0\u00a0\u00a0\u00a0\u00a0 myGameArea.stop();\u00a0\u00a0\u00a0\u00a0\u00a0 return;\u00a0\u00a0\u00a0 } \u00a0 }\u00a0 myGameArea.clear();\n \u00a0 myGameArea.frameNo += 1;\u00a0 if (myGameArea.frameNo == 1 || everyinterval(150)) {\u00a0\u00a0\u00a0 x = myGameArea.canvas.width;\n  \u00a0\u00a0\u00a0 minHeight = 20;\u00a0\u00a0\u00a0 maxHeight = 200;\u00a0\u00a0\u00a0\u00a0height = Math.floor(Math.random()*(maxHeight-minHeight+1)+minHeight);\u00a0\u00a0\u00a0\u00a0minGap = 50;\u00a0\u00a0\u00a0\u00a0maxGap = 200;\u00a0\u00a0\u00a0\u00a0gap = Math.floor(Math.random()*(maxGap-minGap+1)+minGap);\n  \u00a0\u00a0\u00a0 myObstacles.push(new component(10, height, \"green\", x, 0));\n  \u00a0\u00a0\u00a0 myObstacles.push(new component(10, x - height - gap, \"green\", x, height + gap));\n  \u00a0\u00a0}\u00a0 for (i = 0; i < myObstacles.length; i += 1) {\u00a0\u00a0\u00a0 myObstacles[i].speedX = -1;\n  \u00a0\u00a0\u00a0 myObstacles[i].newPos();\u00a0\u00a0\u00a0\u00a0myObstacles[i].update();\n  \u00a0\u00a0}\u00a0\u00a0myScore.text = \"SCORE: \" + myGameArea.frameNo;\n  \u00a0 myScore.update();\u00a0 myGamePiece.newPos();\n \u00a0\u00a0myGamePiece.update();} ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "length",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "crashWith",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "stop",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "clear",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "frameNo",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "frameNo",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "150",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "canvas",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "width",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "20",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "200",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "floor",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "random",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "50",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "200",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "floor",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "random",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"green\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "push",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "10",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"green\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "length",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "speedX",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "newPos",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "update",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "text",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"SCORE: \"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "frameNo",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "update",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "newPos",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "update",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> updateGameArea() {<br/>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> x, height, gap, minHeight, maxHeight, minGap, maxGap;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">for</span> (i = <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>; i &lt; myObstacles.<span class=\"jspropertycolor\" style=\"color:black\">length</span>; i += <span class=\"jsnumbercolor\" style=\"color:#905\">1</span>) {<br/>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (myGamePiece.<span class=\"jspropertycolor\" style=\"color:black\">crashWith</span>(myObstacles[i])) {<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0\u00a0\u00a0\u00a0\u00a0 myGameArea.<span class=\"jspropertycolor\" style=\"color:black\">stop</span>();<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">return</span>;<br/>\u00a0\u00a0\u00a0 } <br/>\u00a0 }<br/>\u00a0 myGameArea.<span class=\"jspropertycolor\" style=\"color:black\">clear</span>();<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <strong>\u00a0 myGameArea.<span class=\"jspropertycolor\" style=\"color:black\">frameNo</span> += <span class=\"jsnumbercolor\" style=\"color:#905\">1</span>;<br/></strong>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (myGameArea.<span class=\"jspropertycolor\" style=\"color:black\">frameNo</span> == <span class=\"jsnumbercolor\" style=\"color:#905\">1</span> || everyinterval(<span class=\"jsnumbercolor\" style=\"color:#905\">150</span>)) {<br/>\u00a0\u00a0\u00a0 x = myGameArea.<span class=\"jspropertycolor\" style=\"color:black\">canvas</span>.<span class=\"jspropertycolor\" style=\"color:black\">width</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0\u00a0\u00a0 minHeight = <span class=\"jsnumbercolor\" style=\"color:#905\">20</span>;<br/>\u00a0\u00a0\u00a0 maxHeight = <span class=\"jsnumbercolor\" style=\"color:#905\">200</span>;<br/>\u00a0\u00a0\u00a0\u00a0height = Math.<span class=\"jspropertycolor\" style=\"color:black\">floor</span>(Math.<span class=\"jspropertycolor\" style=\"color:black\">random</span>()*(maxHeight-minHeight+<span class=\"jsnumbercolor\" style=\"color:#905\">1</span>)+minHeight);<br/>\u00a0\u00a0\u00a0\u00a0minGap = <span class=\"jsnumbercolor\" style=\"color:#905\">50</span>;<br/>\u00a0\u00a0\u00a0\u00a0maxGap = <span class=\"jsnumbercolor\" style=\"color:#905\">200</span>;<br/>\u00a0\u00a0\u00a0\u00a0gap = Math.<span class=\"jspropertycolor\" style=\"color:black\">floor</span>(Math.<span class=\"jspropertycolor\" style=\"color:black\">random</span>()*(maxGap-minGap+<span class=\"jsnumbercolor\" style=\"color:#905\">1</span>)+minGap);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0\u00a0\u00a0 myObstacles.<span class=\"jspropertycolor\" style=\"color:black\">push</span>(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> component(<span class=\"jsnumbercolor\" style=\"color:#905\">10</span>, height, <span class=\"jsstringcolor\" style=\"color:green\">\"green\"</span>, x, <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>));<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0\u00a0\u00a0 myObstacles.<span class=\"jspropertycolor\" style=\"color:black\">push</span>(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> component(<span class=\"jsnumbercolor\" style=\"color:#905\">10</span>, x - height - gap, <span class=\"jsstringcolor\" style=\"color:green\">\"green\"</span>, x, height + gap));<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0\u00a0}<br/>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">for</span> (i = <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>; i &lt; myObstacles.<span class=\"jspropertycolor\" style=\"color:black\">length</span>; i += <span class=\"jsnumbercolor\" style=\"color:#905\">1</span>) {<br/>\u00a0\u00a0\u00a0 myObstacles[i].<span class=\"jspropertycolor\" style=\"color:black\">speedX</span> = -<span class=\"jsnumbercolor\" style=\"color:#905\">1</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0\u00a0\u00a0 myObstacles[i].<span class=\"jspropertycolor\" style=\"color:black\">newPos</span>();<br/>\u00a0\u00a0\u00a0\u00a0myObstacles[i].<span class=\"jspropertycolor\" style=\"color:black\">update</span>();<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0\u00a0}<br/><strong>\u00a0\u00a0myScore.<span class=\"jspropertycolor\" style=\"color:black\">text</span> = <span class=\"jsstringcolor\" style=\"color:green\">\"SCORE: \"</span> + myGameArea.<span class=\"jspropertycolor\" style=\"color:black\">frameNo</span>;<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 myScore.<span class=\"jspropertycolor\" style=\"color:black\">update</span>();<br/></strong>\u00a0 myGamePiece.<span class=\"jspropertycolor\" style=\"color:black\">newPos</span>();<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <br/>\u00a0\u00a0myGamePiece.<span class=\"jspropertycolor\" style=\"color:black\">update</span>();<br/>}<br/> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/graphics/tryit.asp?filename=trygame_score",
      "syntax_highlighting_data": [
        {
          "text": "\n function updateGameArea() {\u00a0 var x, height, gap, minHeight, maxHeight, minGap, maxGap;\n  \u00a0 for (i = 0; i < myObstacles.length; i += 1) {\u00a0\u00a0\u00a0 if (myGamePiece.crashWith(myObstacles[i])) {\n  \u00a0\u00a0\u00a0\u00a0\u00a0 myGameArea.stop();\u00a0\u00a0\u00a0\u00a0\u00a0 return;\u00a0\u00a0\u00a0 } \u00a0 }\u00a0 myGameArea.clear();\n  \u00a0 myGameArea.frameNo += 1;\u00a0 if (myGameArea.frameNo == 1 || everyinterval(150)) {\u00a0\u00a0\u00a0 x = myGameArea.canvas.width;\n  \u00a0\u00a0\u00a0 minHeight = 20;\u00a0\u00a0\u00a0 maxHeight = 200;\u00a0\u00a0\u00a0\u00a0height = Math.floor(Math.random()*(maxHeight-minHeight+1)+minHeight);\u00a0\u00a0\u00a0\u00a0minGap = 50;\u00a0\u00a0\u00a0\u00a0maxGap = 200;\u00a0\u00a0\u00a0\u00a0gap = Math.floor(Math.random()*(maxGap-minGap+1)+minGap);\n  \u00a0\u00a0\u00a0 myObstacles.push(new component(10, height, \"green\", x, 0));\n  \u00a0\u00a0\u00a0 myObstacles.push(new component(10, x - height - gap, \"green\", x, height + gap));\n  \u00a0\u00a0}\u00a0 for (i = 0; i < myObstacles.length; i += 1) {\u00a0\u00a0\u00a0 myObstacles[i].speedX = -1;\n  \u00a0\u00a0\u00a0 myObstacles[i].newPos();\u00a0\u00a0\u00a0\u00a0myObstacles[i].update();\n  \u00a0\u00a0}\u00a0\u00a0myScore.text = \"SCORE: \" + myGameArea.frameNo;\n  \u00a0 myScore.update();\u00a0 myGamePiece.newPos();\n \u00a0\u00a0myGamePiece.update();} ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "length",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "crashWith",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "stop",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "clear",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "frameNo",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "frameNo",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "150",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "canvas",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "width",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "20",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "200",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "floor",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "random",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "50",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "200",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "floor",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "random",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"green\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "push",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "10",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"green\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "length",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "speedX",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "newPos",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "update",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "text",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"SCORE: \"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "frameNo",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "update",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "newPos",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "update",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    }
  ]
}