{
  "title": "Google Maps Reference",
  "url": "https://www.w3schools.com/graphics/google_maps_reference.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Google Maps Reference",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Map() Constructor",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nvar map = new google.maps.Map(mapCanvas, mapOptions);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "maps",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "Map",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "var map = new google.maps.Map(mapCanvas, mapOptions);",
      "syntax_highlighting": [
        {
          "text": "\nvar map = new google.maps.Map(mapCanvas, mapOptions);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "maps",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "Map",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> map = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> google.<span class=\"jspropertycolor\" style=\"color:black\">maps</span>.<span class=\"jspropertycolor\" style=\"color:black\">Map</span>(mapCanvas, mapOptions);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nvar map = new google.maps.Map(mapCanvas, mapOptions);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "maps",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "Map",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Definition and Usage",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Map() constructor creates a new map inside a specified HTML element (typically a <div> element).",
      "html": "<p>The Map() constructor creates a new map inside a specified HTML element (typically a &lt;div&gt; element).</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Syntax",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nnew google.maps.Map(HTMLElement,MapOptions)\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "maps",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "Map",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "new google.maps.Map(HTMLElement,MapOptions)",
      "syntax_highlighting": [
        {
          "text": "\nnew google.maps.Map(HTMLElement,MapOptions)\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "maps",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "Map",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> google.<span class=\"jspropertycolor\" style=\"color:black\">maps</span>.<span class=\"jspropertycolor\" style=\"color:black\">Map</span>(<i>HTMLElement</i>,<i>MapOptions</i>)<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nnew google.maps.Map(HTMLElement,MapOptions)\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "maps",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "Map",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Parameter Values",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:20%\">Parameter</th>\n<th>Description</th> </tr>\n<tr>\n<td><i>HTMLElement</i></td>\n<td>Specifies in what HTML element to put the map</td>\n</tr>\n<tr>\n<td><i><a href=\"tryit.asp?filename=trymap_ref_mapoptions\" target=\"_blank\">MapOptions</a></i></td>\n<td>A MapOptions object that holds the map initialization variables/options</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Methods of Map()",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\" id=\"table3\">\n<tbody><tr>\n<th style=\"width:30%\">Method</th>\n<th>Return Value</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>fitBounds(<i>LatLngBounds</i>)</td>\n<td>None</td>\n<td>Sets the viewport to contain the given bounds</td>\n</tr>\n<tr>\n<td>getBounds()</td>\n<td><i>LatLng,LatLng </i></td>\n<td>Returns the south-west latitude/longitude and the north-east latitude/longitude of the current viewport</td>\n</tr> <tr>\n<td>getCenter()</td>\n<td><i>LatLng</i></td>\n<td>Returns the lat/lng of the center of the map</td>\n</tr>\n<tr>\n<td>getDiv()</td>\n<td><i>Node</i></td>\n<td>Returns a DOM object that contains the map</td>\n</tr>\n<tr>\n<td>getHeading()</td>\n<td><i>number</i></td>\n<td>Returns the compass heading of aerial imagery (for SATELLITE and HYBRID map types)</td>\n</tr>\n<tr>\n<td>getMapTypeId()</td>\n<td>HYBRID<br/>\n ROADMAP<br/>\n SATELLITE<br/>\n TERRAIN</td>\n<td>Returns the current map type</td>\n</tr>\n<tr>\n<td>getProjection()</td>\n<td><i>Projection</i></td>\n<td>Returns the current Projection</td>\n</tr>\n<tr>\n<td>getStreetView()</td>\n<td><i>StreetViewPanorama</i></td>\n<td>Returns the default StreetViewPanorama bound to the map</td>\n</tr>\n<tr>\n<td>getTilt()</td>\n<td><i>number</i></td>\n<td>Returns the angle of incidence for aerial imagery in degrees (for SATELLITE and HYBRID map types)</td>\n</tr>\n<tr>\n<td>getZoom()</td>\n<td><i>number</i></td>\n<td>Returns the current zoom level of the map</td>\n</tr>\n<tr>\n<td>panBy(<i>xnumber,ynumber</i>)</td>\n<td>None</td>\n<td>Changes the center of the map by the given distance in pixels</td>\n</tr>\n<tr>\n<td>panTo(<i>LatLng</i>)</td>\n<td>None</td>\n<td>Changes the center of the map to the given LatLng</td>\n</tr>\n<tr>\n<td>panToBounds(<i>LatLngBounds</i>)</td>\n<td>None</td>\n<td>Pans the map by the minimum amount necessary to contain the given LatLngBounds</td>\n</tr>\n<tr>\n<td>setCenter(<i>LatLng</i>)</td>\n<td>None</td>\n<td>Sets the lat/lng of the center of the map</td>\n</tr>\n<tr>\n<td>setHeading(<i>number</i>)</td>\n<td>None</td>\n<td>Sets the compass heading for aerial imagery measured in degrees from cardinal direction North</td>\n</tr>\n<tr>\n<td>setMapTypeId(<i>MapTypeId</i>)</td>\n<td>None</td>\n<td>Sets the map type to display</td>\n</tr>\n<tr>\n<td>setOptions(<i>MapOptions</i>)</td>\n<td>None</td>\n<td>\u00a0</td>\n</tr>\n<tr>\n<td>setStreetView(<i>StreetViewPanorama</i>)</td>\n<td>None</td>\n<td>Binds a StreetViewPanorama to the map</td>\n</tr>\n<tr>\n<td>setTilt(<i>number</i>)</td>\n<td>None</td>\n<td>Sets the angle of incidence for aerial imagery in degrees (for SATELLITE and HYBRID map types)</td>\n</tr>\n<tr>\n<td>setZoom(<i>number</i>)</td>\n<td>None</td>\n<td>Sets the zoom level of the map</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Properties of Map()",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<table class=\"ws-table-all notranslate\" id=\"table4\">\n<tbody><tr>\n<th style=\"width:30%\">Property</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>controls</td>\n<td><i>Array.&lt;MVCArray.&lt;Node&gt;&gt;</i></td>\n<td>Additional controls to attach to the map</td>\n</tr>\n<tr>\n<td>mapTypes</td>\n<td><i>MapTypeRegistry</i></td>\n<td>A registry of MapType instances by string ID</td>\n</tr> <tr>\n<td>overlayMapTypes</td>\n<td><i>MVCArray.&lt;MapType&gt;</i></td>\n<td>Additional map types to overlay</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Events of Map()",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\" id=\"table5\">\n<tbody><tr>\n<th style=\"width:30%\">Event</th>\n<th>Arguments</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>bounds_changed</td>\n<td>None</td>\n<td>Fired when the viewport bounds have changed</td>\n</tr>\n<tr>\n<td>center_changed</td>\n<td>None</td>\n<td>Fired when the map center property changes</td>\n</tr> <tr>\n<td>click</td>\n<td><i>MouseEvent</i></td>\n<td>Fired when the user clicks on the map </td>\n</tr>\n<tr>\n<td>dblclick</td>\n<td><i>MouseEvent</i></td>\n<td>Fired when the user double-clicks on the map </td>\n</tr>\n<tr>\n<td>drag</td>\n<td>None</td>\n<td>Fired repeatedly while the user drags the map</td>\n</tr>\n<tr>\n<td>dragend</td>\n<td>None</td>\n<td>Fired when the user stops dragging the map</td>\n</tr>\n<tr>\n<td>dragstart</td>\n<td>None</td>\n<td>Fired when the user starts dragging the map</td>\n</tr>\n<tr>\n<td>heading_changed</td>\n<td>None</td>\n<td>Fired when the map heading property changes</td>\n</tr>\n<tr>\n<td>idle</td>\n<td>None</td>\n<td>Fired when the map becomes idle after panning or zooming</td>\n</tr>\n<tr>\n<td>maptypeid_changed</td>\n<td>None</td>\n<td>Fired when the mapTypeId property changes</td>\n</tr>\n<tr>\n<td>mousemove</td>\n<td><i>MouseEvent</i></td>\n<td>Fired whenever the user's mouse moves over the map container</td>\n</tr>\n<tr>\n<td>mouseout</td>\n<td><i>MouseEvent</i></td>\n<td>Fired when the user's mouse exits the map container</td>\n</tr>\n<tr>\n<td>mouseover</td>\n<td><i>MouseEvent</i></td>\n<td>Fired when the user's mouse enters the map container</td>\n</tr>\n<tr>\n<td>projection_changed</td>\n<td>None</td>\n<td>Fired when the projection has changed</td>\n</tr>\n<tr>\n<td>resize</td>\n<td>None</td>\n<td>Fired when the map (div) changes size</td>\n</tr>\n<tr>\n<td>rightclick</td>\n<td><i>MouseEvent</i></td>\n<td>Fired when the user right-clicks on the map</td>\n</tr>\n<tr>\n<td>tilesloaded</td>\n<td>None</td>\n<td>Fired when the visible tiles have finished loading</td>\n</tr>\n<tr>\n<td>tilt_changed</td>\n<td>None</td>\n<td>Fired when the map tilt property changes</td>\n</tr>\n<tr>\n<td>zoom_changed</td>\n<td>None</td>\n<td>Fired when the map zoom property changes</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Overlays",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\" id=\"table3\">\n<tbody><tr>\n<th style=\"width:30%\">Constructor/Object</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>Marker</td>\n<td>Creates a marker. (Note that the position must be set for the marker to display)</td>\n</tr>\n<tr>\n<td>MarkerOptions</td>\n<td>Options for rendering the marker</td>\n</tr> <tr>\n<td>MarkerImage</td>\n<td>A structure representing a Marker icon or shadow image</td>\n</tr>\n<tr>\n<td>MarkerShape</td>\n<td>Defines the marker shape to use in determination of a marker's clickable region (type and coord)</td>\n</tr>\n<tr>\n<td>Animation</td>\n<td>Specifies animations that can be played on a marker (bounce or drop)</td>\n</tr>\n<tr>\n<td>InfoWindow</td>\n<td>Creates an info window</td>\n</tr>\n<tr>\n<td>InfoWindowOptions</td>\n<td>Options for rendering the info window</td>\n</tr>\n<tr>\n<td>Polyline</td>\n<td>Creates a polyline (contains path and stroke styles)</td>\n</tr>\n<tr>\n<td>PolylineOptions</td>\n<td>Options for rendering the polyline</td>\n</tr>\n<tr>\n<td>Polygon</td>\n<td>Creates a polygon (contains path and stroke+fill styles)</td>\n</tr>\n<tr>\n<td>PolygonOptions</td>\n<td>Options for rendering the polygon</td>\n</tr>\n<tr>\n<td>Rectangle</td>\n<td>Creates a rectangle (contains bounds and stroke+fill styles)</td>\n</tr>\n<tr>\n<td>RectangleOptions</td>\n<td>Options for rendering the rectangle</td>\n</tr>\n<tr>\n<td>Circle</td>\n<td>Creates a circle (contains center+radius and stroke+fill styles)</td>\n</tr>\n<tr>\n<td>CircleOptions</td>\n<td>Options for rendering the circle</td>\n</tr>\n<tr>\n<td>GroundOverlay</td>\n<td>\u00a0</td>\n</tr>\n<tr>\n<td>GroundOverlayOptions</td>\n<td>\u00a0</td>\n</tr>\n<tr>\n<td>OverlayView</td>\n<td>\u00a0</td>\n</tr>\n<tr>\n<td>MapPanes</td>\n<td>\u00a0</td>\n</tr>\n<tr>\n<td>MapCanvasProjection</td>\n<td>\u00a0</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Events",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\" id=\"table5\">\n<tbody><tr>\n<th style=\"width:30%\">Constructor/Object</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>MapsEventListener</td>\n<td>It has no methods and no constructor. Its instances are returned from addListener(), addDomListener() and are eventually passed back to removeListener()</td>\n</tr>\n<tr>\n<td>event</td>\n<td>Adds/Removes/Trigger event listeners</td>\n</tr> <tr>\n<td>MouseEvent</td>\n<td>Returned from various mouse events on the map and overlays</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Controls",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\" id=\"table4\">\n<tbody><tr>\n<th style=\"width:30%\">Constructor/Object</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>MapTypeControlOptions</td>\n<td>Holds options for modifying a control (position and style)</td>\n</tr>\n<tr>\n<td>MapTypeControlStyle</td>\n<td>Specifies what kind of map control to display (Drop-down menu or buttons) </td>\n</tr> <tr>\n<td>OverviewMapControlOptions</td>\n<td>Options for rendering of the overview map control (opened or collapsed)</td>\n</tr>\n<tr>\n<td>PanControlOptions</td>\n<td>Options for rendering of the pan control (position)</td>\n</tr>\n<tr>\n<td>RotateControlOptions</td>\n<td>Options for rendering of the rotate control (position)</td>\n</tr>\n<tr>\n<td>ScaleControlOptions</td>\n<td>Options for rendering of the scale control (position and style)</td>\n</tr>\n<tr>\n<td>ScaleControlStyle</td>\n<td>Specifies what kind of scale control to display</td>\n</tr>\n<tr>\n<td>StreetViewControlOptions</td>\n<td>Options for rendering of the street view pegman control (position)</td>\n</tr>\n<tr>\n<td>ZoomControlOptions</td>\n<td>Options for rendering of the zoom control (position and style)</td>\n</tr>\n<tr>\n<td>ZoomControlStyle</td>\n<td>Specifies what kind of zoom control to display (large or small)</td>\n</tr>\n<tr>\n<td>ControlPosition</td>\n<td>Specifies the placement of controls on the map</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    }
  ]
}