{
  "title": "Canvas Clock Hands",
  "url": "https://www.w3schools.com/graphics/canvas_clock_hands.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Canvas Clock Hands",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Part IV - Draw Clock Hands",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The clock needs hands. Create a JavaScript function to draw clock hands:",
      "html": "<p>The clock needs hands. Create a JavaScript function to draw clock hands:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "",
      "html": "<p>\n<canvas height=\"300\" id=\"canvas\" style=\"background-color:#333\" width=\"300\"></canvas>\n</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/graphics/tryit.asp?filename=trycanvas_clock_hands",
        "syntaxHighlighting": [
          {
            "text": "\n function drawClock() {\u00a0 drawFace(ctx, radius);\u00a0 \n drawNumbers(ctx, radius);\u00a0 drawTime(ctx, radius);\n }function drawTime(ctx, radius) {\u00a0 const now = new Date();\n  \u00a0 \n let hour = now.getHours();\u00a0 let minute = now.getMinutes();\u00a0 \n let second = now.getSeconds();\u00a0 //hour\u00a0 \n hour = hour%12;\u00a0 hour = (hour*Math.PI/6)+(minute*Math.PI/(6*60))+(second*Math.PI/(360*60));\n \u00a0\u00a0drawHand(ctx, hour, radius*0.5, radius*0.07);\u00a0 //minute\u00a0 \n minute = (minute*Math.PI/30)+(second*Math.PI/(30*60));\u00a0 \n drawHand(ctx, minute, radius*0.8, radius*0.07);\u00a0 // second\u00a0\u00a0second = (second*Math.PI/30);\n  \u00a0 drawHand(ctx, second, \n radius*0.9, radius*0.02);}function drawHand(ctx, \n pos, length, width) {\u00a0 ctx.beginPath();\u00a0 \n ctx.lineWidth = width;\u00a0 ctx.lineCap = \"round\";\u00a0\u00a0ctx.moveTo(0,0);\u00a0\u00a0ctx.rotate(pos);\u00a0\u00a0ctx.lineTo(0, -length);\n  \u00a0 ctx.stroke();\u00a0 \n ctx.rotate(-pos);}\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "getHours",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "getMinutes",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "getSeconds",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "//hour",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "12",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "PI",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "/6)+(minute*Math.PI/",
            "color": "rgb(238, 153, 0)",
            "class": "jsregexpcolor"
          },
          {
            "text": "6",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "60",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "PI",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "360",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "60",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "0.5",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "0.07",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "//minute",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "PI",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "/30)+(second*Math.PI/",
            "color": "rgb(238, 153, 0)",
            "class": "jsregexpcolor"
          },
          {
            "text": "30",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "60",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "0.8",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "0.07",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// second",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "PI",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "30",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "0.9",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "0.02",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "beginPath",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "lineWidth",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "lineCap",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"round\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "moveTo",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "rotate",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "lineTo",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "stroke",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "rotate",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "function drawClock() {\u00a0 drawFace(ctx, radius);\ndrawNumbers(ctx, radius);\u00a0 drawTime(ctx, radius);\n}function drawTime(ctx, radius) {\u00a0 const now = new Date();\n\nlet hour = now.getHours();\u00a0 let minute = now.getMinutes();\nlet second = now.getSeconds();\u00a0 //hour\nhour = hour%12;\u00a0 hour = (hour*Math.PI/6)+(minute*Math.PI/(6*60))+(second*Math.PI/(360*60));\ndrawHand(ctx, hour, radius*0.5, radius*0.07);\u00a0 //minute\nminute = (minute*Math.PI/30)+(second*Math.PI/(30*60));\ndrawHand(ctx, minute, radius*0.8, radius*0.07);\u00a0 // second\u00a0\u00a0second = (second*Math.PI/30);\ndrawHand(ctx, second,\nradius*0.9, radius*0.02);}function drawHand(ctx,\npos, length, width) {\u00a0 ctx.beginPath();\nctx.lineWidth = width;\u00a0 ctx.lineCap = \"round\";\u00a0\u00a0ctx.moveTo(0,0);\u00a0\u00a0ctx.rotate(pos);\u00a0\u00a0ctx.lineTo(0, -length);\nctx.stroke();\nctx.rotate(-pos);}",
      "syntax_highlighting": [
        {
          "text": "\n function drawClock() {\u00a0 drawFace(ctx, radius);\u00a0 \n drawNumbers(ctx, radius);\u00a0 drawTime(ctx, radius);\n }function drawTime(ctx, radius) {\u00a0 const now = new Date();\n  \u00a0 \n let hour = now.getHours();\u00a0 let minute = now.getMinutes();\u00a0 \n let second = now.getSeconds();\u00a0 //hour\u00a0 \n hour = hour%12;\u00a0 hour = (hour*Math.PI/6)+(minute*Math.PI/(6*60))+(second*Math.PI/(360*60));\n \u00a0\u00a0drawHand(ctx, hour, radius*0.5, radius*0.07);\u00a0 //minute\u00a0 \n minute = (minute*Math.PI/30)+(second*Math.PI/(30*60));\u00a0 \n drawHand(ctx, minute, radius*0.8, radius*0.07);\u00a0 // second\u00a0\u00a0second = (second*Math.PI/30);\n  \u00a0 drawHand(ctx, second, \n radius*0.9, radius*0.02);}function drawHand(ctx, \n pos, length, width) {\u00a0 ctx.beginPath();\u00a0 \n ctx.lineWidth = width;\u00a0 ctx.lineCap = \"round\";\u00a0\u00a0ctx.moveTo(0,0);\u00a0\u00a0ctx.rotate(pos);\u00a0\u00a0ctx.lineTo(0, -length);\n  \u00a0 ctx.stroke();\u00a0 \n ctx.rotate(-pos);}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "getHours",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "getMinutes",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "getSeconds",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "//hour",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "12",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "PI",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "/6)+(minute*Math.PI/",
          "color": "#e90",
          "class": [
            "jsregexpcolor"
          ]
        },
        {
          "text": "6",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "60",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "PI",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "360",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "60",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "0.5",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "0.07",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "//minute",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "PI",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "/30)+(second*Math.PI/",
          "color": "#e90",
          "class": [
            "jsregexpcolor"
          ]
        },
        {
          "text": "30",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "60",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "0.8",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "0.07",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// second",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "PI",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "30",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "0.9",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "0.02",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "beginPath",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "lineWidth",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "lineCap",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"round\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "moveTo",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "rotate",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "lineTo",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "stroke",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "rotate",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> drawClock() {<br/>\u00a0 drawFace(ctx, radius);<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> drawNumbers(ctx, radius);<br/><strong>\u00a0 drawTime(ctx, radius);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </strong>}<br/><br/><b><span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> drawTime(ctx, radius)</b> {<br/>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> now = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> Date();<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> hour = now.<span class=\"jspropertycolor\" style=\"color:black\">getHours</span>();<br/>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> minute = now.<span class=\"jspropertycolor\" style=\"color:black\">getMinutes</span>();<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> second = now.<span class=\"jspropertycolor\" style=\"color:black\">getSeconds</span>();<br/>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">//hour<br/></span>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> hour = hour%<span class=\"jsnumbercolor\" style=\"color:#905\">12</span>;<br/>\u00a0 hour = (hour*Math.<span class=\"jspropertycolor\" style=\"color:black\">PI</span><span class=\"jsregexpcolor\" style=\"color:#e90\">/6)+(minute*Math.PI/</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">6</span>*<span class=\"jsnumbercolor\" style=\"color:#905\">60</span>))+(second*Math.<span class=\"jspropertycolor\" style=\"color:black\">PI</span>/(<span class=\"jsnumbercolor\" style=\"color:#905\">360</span>*<span class=\"jsnumbercolor\" style=\"color:#905\">60</span>));<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> \u00a0\u00a0drawHand(ctx, hour, radius*<span class=\"jsnumbercolor\" style=\"color:#905\">0.5</span>, radius*<span class=\"jsnumbercolor\" style=\"color:#905\">0.07</span>);<br/>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">//minute<br/></span>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> minute = (minute*Math.<span class=\"jspropertycolor\" style=\"color:black\">PI</span><span class=\"jsregexpcolor\" style=\"color:#e90\">/30)+(second*Math.PI/</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">30</span>*<span class=\"jsnumbercolor\" style=\"color:#905\">60</span>));<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> drawHand(ctx, minute, radius*<span class=\"jsnumbercolor\" style=\"color:#905\">0.8</span>, radius*<span class=\"jsnumbercolor\" style=\"color:#905\">0.07</span>);<br/>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// second<br/></span>\u00a0\u00a0second = (second*Math.<span class=\"jspropertycolor\" style=\"color:black\">PI</span>/<span class=\"jsnumbercolor\" style=\"color:#905\">30</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 drawHand(ctx, second, <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> radius*<span class=\"jsnumbercolor\" style=\"color:#905\">0.9</span>, radius*<span class=\"jsnumbercolor\" style=\"color:#905\">0.02</span>);<br/>}<br/><br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> drawHand(ctx, <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> pos, length, width) {<br/>\u00a0 ctx.<span class=\"jspropertycolor\" style=\"color:black\">beginPath</span>();<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> ctx.<span class=\"jspropertycolor\" style=\"color:black\">lineWidth</span> = width;<br/>\u00a0 ctx.<span class=\"jspropertycolor\" style=\"color:black\">lineCap</span> = <span class=\"jsstringcolor\" style=\"color:green\">\"round\"</span>;<br/>\u00a0\u00a0ctx.<span class=\"jspropertycolor\" style=\"color:black\">moveTo</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>,<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>);<br/>\u00a0\u00a0ctx.<span class=\"jspropertycolor\" style=\"color:black\">rotate</span>(pos);<br/>\u00a0\u00a0ctx.<span class=\"jspropertycolor\" style=\"color:black\">lineTo</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>, -length);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 ctx.<span class=\"jspropertycolor\" style=\"color:black\">stroke</span>();<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> ctx.<span class=\"jspropertycolor\" style=\"color:black\">rotate</span>(-pos);<br/>}<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/graphics/tryit.asp?filename=trycanvas_clock_hands",
      "syntax_highlighting_data": [
        {
          "text": "\n function drawClock() {\u00a0 drawFace(ctx, radius);\u00a0 \n drawNumbers(ctx, radius);\u00a0 drawTime(ctx, radius);\n }function drawTime(ctx, radius) {\u00a0 const now = new Date();\n  \u00a0 \n let hour = now.getHours();\u00a0 let minute = now.getMinutes();\u00a0 \n let second = now.getSeconds();\u00a0 //hour\u00a0 \n hour = hour%12;\u00a0 hour = (hour*Math.PI/6)+(minute*Math.PI/(6*60))+(second*Math.PI/(360*60));\n \u00a0\u00a0drawHand(ctx, hour, radius*0.5, radius*0.07);\u00a0 //minute\u00a0 \n minute = (minute*Math.PI/30)+(second*Math.PI/(30*60));\u00a0 \n drawHand(ctx, minute, radius*0.8, radius*0.07);\u00a0 // second\u00a0\u00a0second = (second*Math.PI/30);\n  \u00a0 drawHand(ctx, second, \n radius*0.9, radius*0.02);}function drawHand(ctx, \n pos, length, width) {\u00a0 ctx.beginPath();\u00a0 \n ctx.lineWidth = width;\u00a0 ctx.lineCap = \"round\";\u00a0\u00a0ctx.moveTo(0,0);\u00a0\u00a0ctx.rotate(pos);\u00a0\u00a0ctx.lineTo(0, -length);\n  \u00a0 ctx.stroke();\u00a0 \n ctx.rotate(-pos);}\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "getHours",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "getMinutes",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "getSeconds",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "//hour",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "12",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "PI",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "/6)+(minute*Math.PI/",
          "color": "rgb(238, 153, 0)",
          "class": "jsregexpcolor"
        },
        {
          "text": "6",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "60",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "PI",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "360",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "60",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "0.5",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "0.07",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "//minute",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "PI",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "/30)+(second*Math.PI/",
          "color": "rgb(238, 153, 0)",
          "class": "jsregexpcolor"
        },
        {
          "text": "30",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "60",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "0.8",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "0.07",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// second",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "PI",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "30",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "0.9",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "0.02",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "beginPath",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "lineWidth",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "lineCap",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"round\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "moveTo",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "rotate",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "lineTo",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "stroke",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "rotate",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Example Explained",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Create a Date object to get hour, minute, second:",
      "html": "<p>Create a Date object to get hour, minute, second:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\nconst now = new Date();\nlet hour = now.getHours();\nlet minute = now.getMinutes();\nlet second = now.getSeconds();\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "const",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "getHours",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "getMinutes",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "let",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "getSeconds",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "const now = new Date();\nlet hour = now.getHours();\nlet minute = now.getMinutes();\nlet second = now.getSeconds();",
      "syntax_highlighting": [
        {
          "text": "\nconst now = new Date();\nlet hour = now.getHours();\nlet minute = now.getMinutes();\nlet second = now.getSeconds();\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "const",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "getHours",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "getMinutes",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "let",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "getSeconds",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">const</span> now = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> Date();<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> hour = now.<span class=\"jspropertycolor\" style=\"color:black\">getHours</span>();<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> minute = now.<span class=\"jspropertycolor\" style=\"color:black\">getMinutes</span>();<br/>\n<span class=\"jskeywordcolor\" style=\"color:#005cc5\">let</span> second = now.<span class=\"jspropertycolor\" style=\"color:black\">getSeconds</span>();<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\nconst now = new Date();\nlet hour = now.getHours();\nlet minute = now.getMinutes();\nlet second = now.getSeconds();\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "const",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "getHours",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "getMinutes",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "let",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "getSeconds",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Calculate the angle of the hour hand, and draw it a length (50% of radius), and a width (7% of radius):",
      "html": "<p>Calculate the angle of the hour hand, and draw it a length (50% of radius), \nand a width (7% of radius):</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n hour = hour%12;hour = (hour*Math.PI/6)+(minute*Math.PI/(6*60))+(second*Math.PI/(360*60));\n drawHand(ctx, hour, radius*0.5, radius*0.07); ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "12",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "PI",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "/6)+(minute*Math.PI/",
            "color": "rgb(238, 153, 0)",
            "class": "jsregexpcolor"
          },
          {
            "text": "6",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "60",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "PI",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "360",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "60",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "0.5",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "0.07",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "hour = hour%12;hour = (hour*Math.PI/6)+(minute*Math.PI/(6*60))+(second*Math.PI/(360*60));\ndrawHand(ctx, hour, radius*0.5, radius*0.07);",
      "syntax_highlighting": [
        {
          "text": "\n hour = hour%12;hour = (hour*Math.PI/6)+(minute*Math.PI/(6*60))+(second*Math.PI/(360*60));\n drawHand(ctx, hour, radius*0.5, radius*0.07); ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "12",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "PI",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "/6)+(minute*Math.PI/",
          "color": "#e90",
          "class": [
            "jsregexpcolor"
          ]
        },
        {
          "text": "6",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "60",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "PI",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "360",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "60",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "0.5",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "0.07",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> hour = hour%<span class=\"jsnumbercolor\" style=\"color:#905\">12</span>;<br/>hour = (hour*Math.<span class=\"jspropertycolor\" style=\"color:black\">PI</span><span class=\"jsregexpcolor\" style=\"color:#e90\">/6)+(minute*Math.PI/</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">6</span>*<span class=\"jsnumbercolor\" style=\"color:#905\">60</span>))+(second*Math.<span class=\"jspropertycolor\" style=\"color:black\">PI</span>/(<span class=\"jsnumbercolor\" style=\"color:#905\">360</span>*<span class=\"jsnumbercolor\" style=\"color:#905\">60</span>));<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> drawHand(ctx, hour, radius*<span class=\"jsnumbercolor\" style=\"color:#905\">0.5</span>, radius*<span class=\"jsnumbercolor\" style=\"color:#905\">0.07</span>); </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n hour = hour%12;hour = (hour*Math.PI/6)+(minute*Math.PI/(6*60))+(second*Math.PI/(360*60));\n drawHand(ctx, hour, radius*0.5, radius*0.07); ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "12",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "PI",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "/6)+(minute*Math.PI/",
          "color": "rgb(238, 153, 0)",
          "class": "jsregexpcolor"
        },
        {
          "text": "6",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "60",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "PI",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "360",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "60",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "0.5",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "0.07",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Use the same technique for minutes and seconds.",
      "html": "<p>Use the same technique for minutes and seconds.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The drawHand() routine does not need an explanation. It just draws a line with a given length and width.",
      "html": "<p>The drawHand() routine does not need an explanation. It just draws a line \nwith a given length and width.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "See Also:",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "W3Schools' Full Canvas Reference",
          "href": "https://www.w3schools.com/jsref/api_canvas.asp",
          "title": ""
        }
      ],
      "text": "W3Schools' Full Canvas Reference",
      "html": "<p><a href=\"/jsref/api_canvas.asp\">W3Schools' Full Canvas Reference</a></p>"
    }
  ]
}