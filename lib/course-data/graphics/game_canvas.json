{
  "title": "Game Tutorial",
  "url": "https://www.w3schools.com/graphics/game_canvas.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Game Canvas",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The HTML <canvas> element is displayed as a rectangular object on a web page:",
      "html": "<p>The HTML <code>&lt;canvas&gt;</code> element is displayed as a rectangular object on a web page:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "HTML Canvas",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The <canvas> element is perfect for making games in HTML.",
      "html": "<p>The <code>&lt;canvas&gt;</code> element is perfect for making games in HTML.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The <canvas> element offers all the functionality you need for making games.",
      "html": "<p>The <code>&lt;canvas&gt;</code> element offers all the functionality you need for making games.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Use JavaScript to draw, write, insert images, and more, onto the <canvas> .",
      "html": "<p>Use JavaScript to draw, write, insert images, and more, onto the <code>\n&lt;canvas&gt;</code>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": ".getContext(\"2d\")",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The <canvas> element has a built-in object, called the getContext(\"2d\") object, with methods and properties for drawing.",
      "html": "<p>The <code>&lt;canvas&gt;</code> element has a built-in object, called the <code>getContext(\"2d\")</code> object, with methods and properties for drawing.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Canvas \nTutorial",
          "href": "https://www.w3schools.com/graphics/canvas_intro.asp",
          "title": ""
        }
      ],
      "text": "You can learn more about the <canvas> element, and the getContext(\"2d\") object, in our Canvas Tutorial .",
      "html": "<p>You can learn more about the <code>&lt;canvas&gt;</code> element, and the <code>\ngetContext(\"2d\")</code> object, in our <a href=\"/graphics/canvas_intro.asp\">Canvas \nTutorial</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Get Started",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To make a game, start by creating a gaming area, and make it ready for drawing:",
      "html": "<p>To make a game, start by creating a gaming area, and make it ready for \ndrawing:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/graphics/tryit.asp?filename=trygame_canvas",
        "syntaxHighlighting": [
          {
            "text": "\n function startGame() {\u00a0 myGameArea.start();\n }var myGameArea = {\u00a0 canvas : document.createElement(\"canvas\"),\u00a0\u00a0start : function() {\u00a0\u00a0\u00a0 this.canvas.width = 480;\u00a0\u00a0\u00a0 this.canvas.height = 270;\u00a0\u00a0\u00a0 this.context = this.canvas.getContext(\"2d\");\n  \u00a0\u00a0\u00a0 document.body.insertBefore(this.canvas, document.body.childNodes[0]);\n  \u00a0\u00a0}} ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "start",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "createElement",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"canvas\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "canvas",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "width",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "480",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "canvas",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "height",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "270",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "context",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "canvas",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "getContext",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"2d\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "body",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "insertBefore",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "canvas",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "body",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "childNodes",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "function startGame() {\u00a0 myGameArea.start();\n}var myGameArea = {\u00a0 canvas : document.createElement(\"canvas\"),\u00a0\u00a0start : function() {\u00a0\u00a0\u00a0 this.canvas.width = 480;\u00a0\u00a0\u00a0 this.canvas.height = 270;\u00a0\u00a0\u00a0 this.context = this.canvas.getContext(\"2d\");\ndocument.body.insertBefore(this.canvas, document.body.childNodes[0]);\n}}",
      "syntax_highlighting": [
        {
          "text": "\n function startGame() {\u00a0 myGameArea.start();\n }var myGameArea = {\u00a0 canvas : document.createElement(\"canvas\"),\u00a0\u00a0start : function() {\u00a0\u00a0\u00a0 this.canvas.width = 480;\u00a0\u00a0\u00a0 this.canvas.height = 270;\u00a0\u00a0\u00a0 this.context = this.canvas.getContext(\"2d\");\n  \u00a0\u00a0\u00a0 document.body.insertBefore(this.canvas, document.body.childNodes[0]);\n  \u00a0\u00a0}} ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "start",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "createElement",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"canvas\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "canvas",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "width",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "480",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "canvas",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "height",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "270",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "context",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "canvas",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "getContext",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"2d\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "body",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "insertBefore",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "canvas",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "body",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "childNodes",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> startGame() {<br/>\u00a0 myGameArea.<span class=\"jspropertycolor\" style=\"color:black\">start</span>();<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> }<br/><br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> myGameArea = {<br/>\u00a0 canvas : document.<span class=\"jspropertycolor\" style=\"color:black\">createElement</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"canvas\"</span>),<br/>\u00a0\u00a0start : <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span>() {<br/>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">canvas</span>.<span class=\"jspropertycolor\" style=\"color:black\">width</span> = <span class=\"jsnumbercolor\" style=\"color:#905\">480</span>;<br/>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">canvas</span>.<span class=\"jspropertycolor\" style=\"color:black\">height</span> = <span class=\"jsnumbercolor\" style=\"color:#905\">270</span>;<br/>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">context</span> = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">canvas</span>.<span class=\"jspropertycolor\" style=\"color:black\">getContext</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"2d\"</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0\u00a0\u00a0 document.<span class=\"jspropertycolor\" style=\"color:black\">body</span>.<span class=\"jspropertycolor\" style=\"color:black\">insertBefore</span>(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">canvas</span>, document.<span class=\"jspropertycolor\" style=\"color:black\">body</span>.<span class=\"jspropertycolor\" style=\"color:black\">childNodes</span>[<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>]);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0\u00a0}<br/>}<br/> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/graphics/tryit.asp?filename=trygame_canvas",
      "syntax_highlighting_data": [
        {
          "text": "\n function startGame() {\u00a0 myGameArea.start();\n }var myGameArea = {\u00a0 canvas : document.createElement(\"canvas\"),\u00a0\u00a0start : function() {\u00a0\u00a0\u00a0 this.canvas.width = 480;\u00a0\u00a0\u00a0 this.canvas.height = 270;\u00a0\u00a0\u00a0 this.context = this.canvas.getContext(\"2d\");\n  \u00a0\u00a0\u00a0 document.body.insertBefore(this.canvas, document.body.childNodes[0]);\n  \u00a0\u00a0}} ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "start",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "createElement",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"canvas\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "canvas",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "width",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "480",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "canvas",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "height",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "270",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "context",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "canvas",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "getContext",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"2d\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "body",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "insertBefore",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "canvas",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "body",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "childNodes",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The object myGameArea will have more properties and methods later in this tutorial.",
      "html": "<p>The object <code>myGameArea</code> will have \nmore properties and methods later in this tutorial.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The function startGame() invokes the method start() of the myGameArea object.",
      "html": "<p>The function <code>startGame()</code> invokes the method <code>\nstart()</code> of the <code>\nmyGameArea</code> object.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The start() method creates a <canvas> element and inserts it as the first childnode of the <body> element.",
      "html": "<p>The <code>\nstart()</code> method creates a <code>&lt;canvas&gt;</code> element and inserts \nit as the first childnode of the <code>&lt;body&gt;</code> element.</p>"
    }
  ]
}