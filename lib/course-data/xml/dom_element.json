{
  "title": "XML DOM - Element object",
  "url": "https://www.w3schools.com/xml/dom_element.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "XML DOM - The Element Object",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Element object",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Element object represents an element in an XML document. Elements may contain attributes, other elements, or text. If an element contains text, the text is represented in a text-node.",
      "html": "<p>The Element object represents an element in an XML document. Elements may contain attributes,\nother elements, or text. If an element contains text, the text is represented in a text-node.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "IMPORTANT! Text is always stored in text nodes. A common error in DOM processing is to navigate to an element node and expect it to contain the text. However, even the simplest element node has a text node under it. For example, in <year>2005</year>, there is an element node (year), and a text node under it, which contains the text (2005).",
      "html": "<p><b>IMPORTANT!</b> Text is always stored in text nodes. A common error in DOM \nprocessing is to navigate to an element node and expect it to contain the text. \nHowever, even the simplest element node has a text node under it. For example, \nin &lt;year&gt;2005&lt;/year&gt;, there is an element node (year), and a text node under it, \nwhich contains the text (2005).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Because the Element object is also a Node, it inherits the Node object's properties and methods.",
      "html": "<p>Because the Element object is also a Node, it inherits the Node object's properties and methods. </p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Element Object Properties",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "csharp",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:30%\">Property</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><a href=\"prop_element_attributes.asp\">attributes</a></td>\n<td>Returns a NamedNodeMap of attributes for the element</td>\n</tr>\n<tr>\n<td><a href=\"prop_element_baseuri.asp\">baseURI</a></td>\n<td>Returns the absolute base URI of the element</td>\n</tr>\n<tr>\n<td><a href=\"prop_element_childnodes.asp\">childNodes</a></td>\n<td>Returns a NodeList of child nodes for the element</td>\n</tr>\n<tr>\n<td><a href=\"prop_element_firstchild.asp\">firstChild</a></td>\n<td>Returns the first child of the element</td>\n</tr>\n<tr>\n<td><a href=\"prop_element_lastchild.asp\">lastChild</a></td>\n<td>Returns the last child of the element</td>\n</tr>\n<tr>\n<td><a href=\"prop_element_localname.asp\">localName</a></td>\n<td>Returns the local part of the name of the element</td>\n</tr>\n<tr>\n<td><a href=\"prop_element_namespaceuri.asp\">namespaceURI</a></td>\n<td>Returns the namespace URI of the element</td>\n</tr>\n<tr>\n<td><a href=\"prop_element_nextsibling.asp\">nextSibling</a></td>\n<td>Returns the node immediately following the element</td>\n</tr>\n<tr>\n<td><a href=\"prop_element_nodename.asp\">nodeName</a></td>\n<td>Returns the name of the node, depending on its type</td>\n</tr>\n<tr>\n<td><a href=\"prop_element_nodetype.asp\">nodeType</a></td>\n<td>Returns the type of the node</td>\n</tr>\n<tr>\n<td><a href=\"prop_element_ownerdocument.asp\">ownerDocument</a></td>\n<td>Returns the root element (document object) for an element</td>\n</tr>\n<tr>\n<td><a href=\"prop_element_parentnode.asp\">parentNode</a></td>\n<td>Returns the parent node of the element</td>\n</tr>\n<tr>\n<td><a href=\"prop_element_prefix.asp\">prefix</a></td>\n<td>Sets or returns the namespace prefix of the element</td>\n</tr>\n<tr>\n<td><a href=\"prop_element_previoussibling.asp\">previousSibling</a></td>\n<td>Returns the node immediately before the element</td>\n</tr>\n<tr>\n<td>schemaTypeInfo</td>\n<td>Returns the type information associated with the element</td>\n</tr>\n<tr>\n<td><a href=\"prop_element_tagname.asp\">tagName</a></td>\n<td>Returns the name of the element</td>\n</tr>\n<tr>\n<td><a href=\"prop_element_textcontent.asp\">textContent</a></td>\n<td>Sets or returns the text content of the element and its descendants</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Element Object Methods",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "csharp",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:30%\">Method</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><a href=\"met_element_appendchild.asp\">appendChild()</a></td>\n<td>Adds a new child node to the end of the list of children of the node</td>\n</tr>\n<tr>\n<td><a href=\"met_element_clonenode.asp\">cloneNode()</a></td>\n<td>Clones a node</td>\n</tr>\n<tr>\n<td><a href=\"met_element_comparedocumentposition.asp\">compareDocumentPosition()</a></td>\n<td>Compares the document position of two nodes</td>\n</tr>\n<tr>\n<td><a href=\"met_element_getattribute.asp\">getAttribute()</a></td>\n<td>Returns the value of an attribute</td>\n</tr>\n<tr>\n<td><a href=\"met_element_getattributens.asp\">getAttributeNS()</a></td>\n<td>Returns the value of an attribute (with a namespace)</td>\n</tr>\n<tr>\n<td><a href=\"met_element_getattributenode.asp\">getAttributeNode()</a></td>\n<td>Returns an attribute node as an Attribute object</td>\n</tr>\n<tr>\n<td><a href=\"met_element_getattributenodens.asp\">getAttributeNodeNS()</a></td>\n<td>Returns an attribute node (with a namespace) as an Attribute object</td>\n</tr>\n<tr>\n<td><a href=\"met_element_getelementsbytagname.asp\">getElementsByTagName()</a></td>\n<td>Returns a NodeList of matching element nodes, and their children</td>\n</tr>\n<tr>\n<td><a href=\"met_element_getelementsbytagnamens.asp\">getElementsByTagNameNS()</a></td>\n<td>Returns a NodeList of matching element nodes (with a namespace), and their children</td>\n</tr>\n<tr>\n<td>getFeature(feature,version)</td>\n<td>Returns a DOM object which implements the specialized APIs of the specified feature and version</td>\n</tr>\n<tr>\n<td>getUserData(key)</td>\n<td>Returns the object associated to a key on a this node. The object must first have been set to this node by calling setUserData with the same key</td>\n</tr>\n<tr>\n<td><a href=\"met_element_hasattribute.asp\">hasAttribute()</a></td>\n<td>Returns whether an element has any attributes matching a specified name</td>\n</tr>\n<tr>\n<td><a href=\"met_element_hasattributens.asp\">hasAttributeNS()</a></td>\n<td>Returns whether an element has any attributes matching a specified name and namespace</td>\n</tr>\n<tr>\n<td><a href=\"met_element_hasattributes.asp\">hasAttributes()</a></td>\n<td>Returns whether the element has any attributes</td>\n</tr>\n<tr>\n<td><a href=\"met_element_haschildnodes.asp\">hasChildNodes()</a></td>\n<td>Returns whether the element has any child nodes</td>\n</tr>\n<tr>\n<td><a href=\"met_element_insertbefore.asp\">insertBefore()</a></td>\n<td>Inserts a new child node before an existing child node</td>\n</tr>\n<tr>\n<td>isDefaultNamespace(URI)</td>\n<td>Returns whether the specified namespaceURI is the default</td>\n</tr>\n<tr>\n<td><a href=\"met_element_isequalnode.asp\">isEqualNode()</a></td>\n<td>Checks if two nodes are equal</td>\n</tr>\n<tr>\n<td><a href=\"met_element_lookupnamespaceuri.asp\">lookupNamespaceURI()</a></td>\n<td>Returns the namespace URI matching a specified prefix</td>\n</tr>\n<tr>\n<td><a href=\"met_element_lookupprefix.asp\">lookupPrefix()</a></td>\n<td>Returns the prefix matching a specified namespace URI</td>\n</tr>\n<tr>\n<td>normalize()</td>\n<td>Puts all text nodes underneath this element (including attributes) into a \"normal\"\n form where only structure (e.g., elements, comments, processing instructions, CDATA sections,\n and entity references) separates Text nodes, i.e., there are neither adjacent Text nodes nor empty Text nodes</td>\n</tr>\n<tr>\n<td><a href=\"met_element_removeattribute.asp\">removeAttribute()</a></td>\n<td>Removes a specified attribute</td>\n</tr>\n<tr>\n<td><a href=\"met_element_removeattributens.asp\">removeAttributeNS()</a></td>\n<td>Removes a specified attribute (with a namespace)</td>\n</tr>\n<tr>\n<td><a href=\"met_element_removeattributenode.asp\">removeAttributeNode()</a></td>\n<td>Removes a specified attribute node</td>\n</tr>\n<tr>\n<td><a href=\"met_element_removechild.asp\">removeChild()</a></td>\n<td>Removes a child node</td>\n</tr>\n<tr>\n<td><a href=\"met_element_replacechild.asp\">replaceChild()</a></td>\n<td>Replaces a child node</td>\n</tr>\n<tr>\n<td>setUserData(key,data,handler)</td>\n<td>Associates an object to a key on the element</td>\n</tr>\n<tr>\n<td><a href=\"met_element_setattribute.asp\">setAttribute()</a></td>\n<td>Adds a new attribute</td>\n</tr>\n<tr>\n<td><a href=\"met_element_setattributens.asp\">setAttributeNS()</a></td>\n<td>Adds a new attribute (with a namespace)</td>\n</tr>\n<tr>\n<td><a href=\"met_element_setattributenode.asp\">setAttributeNode()</a></td>\n<td>Adds a new attribute node</td>\n</tr>\n<tr>\n<td>setAttributeNodeNS(attrnode)</td>\n<td>Adds a new attribute node (with a namespace)</td>\n</tr>\n<tr>\n<td>setIdAttribute(name,isId)</td>\n<td>If the isId property of the Attribute object is true, this method declares the specified attribute to be a user-determined ID attribute</td>\n</tr>\n<tr>\n<td>setIdAttributeNS(uri,name,isId)</td>\n<td>If the isId property of the Attribute object is true, this method declares the specified attribute (with a namespace) to be a user-determined ID attribute</td>\n</tr>\n<tr>\n<td>setIdAttributeNode(idAttr,isId)</td>\n<td>If the isId property of the Attribute object is true, this method declares the specified attribute to be a user-determined ID attribute</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    }
  ]
}