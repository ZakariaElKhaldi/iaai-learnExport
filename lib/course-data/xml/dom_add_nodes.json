{
  "title": "XML DOM - Add Nodes",
  "url": "https://www.w3schools.com/xml/dom_nodes_add.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "XML DOM Add Nodes",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Add a Node - appendChild()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The appendChild() method adds a child node to an existing node.",
      "html": "<p>The <strong>appendChild()</strong> method adds a child node to an existing node. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The new node is added (appended) after any existing child nodes.",
      "html": "<p>The new node is added (appended) after any existing child nodes.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: Use insertBefore() if the position of the node is important.",
      "html": "<p><b>Note:</b> Use insertBefore() if the position of the node is important.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This code fragment creates an element (<edition>), and adds it after the last child of the first <book> element:",
      "html": "<p>This code fragment creates an element (&lt;edition&gt;), and adds it after the last child of the first &lt;book&gt; element:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/xml/tryit.asp?filename=try_dom_createelement2",
        "syntaxHighlighting": [
          {
            "text": "\nnewEle = xmlDoc.createElement(\"edition\");\n\n xmlDoc.getElementsByTagName(\"book\")[0].appendChild(newEle);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "createElement",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"edition\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getElementsByTagName",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"book\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "appendChild",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "newEle = xmlDoc.createElement(\"edition\");\n\nxmlDoc.getElementsByTagName(\"book\")[0].appendChild(newEle);",
      "syntax_highlighting": [
        {
          "text": "\nnewEle = xmlDoc.createElement(\"edition\");\n\n xmlDoc.getElementsByTagName(\"book\")[0].appendChild(newEle);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "createElement",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"edition\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getElementsByTagName",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"book\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "appendChild",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nnewEle = xmlDoc.<span class=\"jspropertycolor\" style=\"color:black\">createElement</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"edition\"</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> xmlDoc.<span class=\"jspropertycolor\" style=\"color:black\">getElementsByTagName</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"book\"</span>)[<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>].<span class=\"jspropertycolor\" style=\"color:black\">appendChild</span>(newEle);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/xml/tryit.asp?filename=try_dom_createelement2",
      "syntax_highlighting_data": [
        {
          "text": "\nnewEle = xmlDoc.createElement(\"edition\");\n\n xmlDoc.getElementsByTagName(\"book\")[0].appendChild(newEle);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "createElement",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"edition\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getElementsByTagName",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"book\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "appendChild",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Example explained:",
      "html": "<p>Example explained:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This code fragment does the same as above, but the new element is added with a value:",
      "html": "<p>This code fragment does the same as above, but the new element is added with a value:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/xml/tryit.asp?filename=try_dom_createelement",
        "syntaxHighlighting": [
          {
            "text": "\nnewEle = xmlDoc.createElement(\"edition\");\n newText=xmlDoc.createTextNode(\"first\");newEle.appendChild(newText);\n\n xmlDoc.getElementsByTagName(\"book\")[0].appendChild(newEle);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "createElement",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"edition\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "createTextNode",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"first\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "appendChild",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getElementsByTagName",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"book\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "appendChild",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "newEle = xmlDoc.createElement(\"edition\");\nnewText=xmlDoc.createTextNode(\"first\");newEle.appendChild(newText);\n\nxmlDoc.getElementsByTagName(\"book\")[0].appendChild(newEle);",
      "syntax_highlighting": [
        {
          "text": "\nnewEle = xmlDoc.createElement(\"edition\");\n newText=xmlDoc.createTextNode(\"first\");newEle.appendChild(newText);\n\n xmlDoc.getElementsByTagName(\"book\")[0].appendChild(newEle);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "createElement",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"edition\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "createTextNode",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"first\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "appendChild",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getElementsByTagName",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"book\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "appendChild",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nnewEle = xmlDoc.<span class=\"jspropertycolor\" style=\"color:black\">createElement</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"edition\"</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> newText=xmlDoc.<span class=\"jspropertycolor\" style=\"color:black\">createTextNode</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"first\"</span>);<br/>newEle.<span class=\"jspropertycolor\" style=\"color:black\">appendChild</span>(newText);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> xmlDoc.<span class=\"jspropertycolor\" style=\"color:black\">getElementsByTagName</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"book\"</span>)[<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>].<span class=\"jspropertycolor\" style=\"color:black\">appendChild</span>(newEle);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/xml/tryit.asp?filename=try_dom_createelement",
      "syntax_highlighting_data": [
        {
          "text": "\nnewEle = xmlDoc.createElement(\"edition\");\n newText=xmlDoc.createTextNode(\"first\");newEle.appendChild(newText);\n\n xmlDoc.getElementsByTagName(\"book\")[0].appendChild(newEle);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "createElement",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"edition\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "createTextNode",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"first\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "appendChild",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getElementsByTagName",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"book\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "appendChild",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Example explained:",
      "html": "<p>Example explained:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Insert a Node - insertBefore()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The insertBefore() method inserts a node before a specified child node.",
      "html": "<p>The <strong>insertBefore()</strong> method inserts a node before a specified child node.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This method is useful when the position of the added node is important:",
      "html": "<p>This method is useful when the position of the added node is important:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/xml/tryit.asp?filename=try_dom_insertbefore",
        "syntaxHighlighting": [
          {
            "text": "\nnewNode = xmlDoc.createElement(\"book\");\n\nx = xmlDoc.documentElement;\ny = xmlDoc.getElementsByTagName(\"book\")[3];\n\nx.insertBefore(newNode,y);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "createElement",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"book\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "documentElement",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "getElementsByTagName",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"book\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "3",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "insertBefore",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "newNode = xmlDoc.createElement(\"book\");\n\nx = xmlDoc.documentElement;\ny = xmlDoc.getElementsByTagName(\"book\")[3];\n\nx.insertBefore(newNode,y);",
      "syntax_highlighting": [
        {
          "text": "\nnewNode = xmlDoc.createElement(\"book\");\n\nx = xmlDoc.documentElement;\ny = xmlDoc.getElementsByTagName(\"book\")[3];\n\nx.insertBefore(newNode,y);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "createElement",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"book\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "documentElement",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "getElementsByTagName",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"book\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "3",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "insertBefore",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nnewNode = xmlDoc.<span class=\"jspropertycolor\" style=\"color:black\">createElement</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"book\"</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/>\nx = xmlDoc.<span class=\"jspropertycolor\" style=\"color:black\">documentElement</span>;<br/>\ny = xmlDoc.<span class=\"jspropertycolor\" style=\"color:black\">getElementsByTagName</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"book\"</span>)[<span class=\"jsnumbercolor\" style=\"color:#905\">3</span>];<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/>\nx.<span class=\"jspropertycolor\" style=\"color:black\">insertBefore</span>(newNode,y);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/xml/tryit.asp?filename=try_dom_insertbefore",
      "syntax_highlighting_data": [
        {
          "text": "\nnewNode = xmlDoc.createElement(\"book\");\n\nx = xmlDoc.documentElement;\ny = xmlDoc.getElementsByTagName(\"book\")[3];\n\nx.insertBefore(newNode,y);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "createElement",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"book\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "documentElement",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "getElementsByTagName",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"book\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "3",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "insertBefore",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Example explained:",
      "html": "<p>Example explained:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the second parameter of insertBefore() is null, the new node will be added after the last existing child node.",
      "html": "<p>If the second parameter of insertBefore() is null, the new node will be added \nafter the last existing child node.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "x.insertBefore(newNode,null) and x.appendChild(newNode) will both append a new child node to x.",
      "html": "<p><b>x.insertBefore(newNode,null)</b> and <b>x.appendChild(newNode)</b> will \nboth append a new child node to x.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Add a New Attribute",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The setAttribute() method sets the value of an attribute.",
      "html": "<p>The <strong>setAttribute()</strong> method sets the value of an attribute.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/xml/tryit.asp?filename=try_dom_createattribute3",
        "syntaxHighlighting": [
          {
            "text": "\n  xmlDoc.getElementsByTagName('book')[0].setAttribute(\"edition\",\"first\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getElementsByTagName",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "'book'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "setAttribute",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"edition\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"first\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "xmlDoc.getElementsByTagName('book')[0].setAttribute(\"edition\",\"first\");",
      "syntax_highlighting": [
        {
          "text": "\n  xmlDoc.getElementsByTagName('book')[0].setAttribute(\"edition\",\"first\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getElementsByTagName",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "'book'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "setAttribute",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"edition\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"first\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  xmlDoc.<span class=\"jspropertycolor\" style=\"color:black\">getElementsByTagName</span>(<span class=\"jsstringcolor\" style=\"color:green\">'book'</span>)[<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>].<span class=\"jspropertycolor\" style=\"color:black\">setAttribute</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"edition\"</span>,<span class=\"jsstringcolor\" style=\"color:green\">\"first\"</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/xml/tryit.asp?filename=try_dom_createattribute3",
      "syntax_highlighting_data": [
        {
          "text": "\n  xmlDoc.getElementsByTagName('book')[0].setAttribute(\"edition\",\"first\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getElementsByTagName",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "'book'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "setAttribute",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"edition\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"first\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Example explained:",
      "html": "<p>Example explained:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "There is no method called add Attribute() The setAttribute() will create a new attribute if the attribute does not exist.",
      "html": "<p>There is no method called add Attribute()<br/>\nThe setAttribute() will create a new attribute if the attribute does not exist.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: If the attribute already exists, the setAttribute() method will overwrite the existing value.",
      "html": "<p><b>Note:</b> If the attribute already exists, the setAttribute() method will overwrite the existing value.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Add Text to a Text Node - insertData()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The insertData() method inserts data into an existing text node.",
      "html": "<p>The <strong>insertData()</strong> method inserts data into an existing \ntext node.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The insertData() method has two parameters:",
      "html": "<p>The insertData() method has two parameters:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The following code fragment will add \"Easy\" to the text node of the first <title> element of the loaded XML:",
      "html": "<p>The following code fragment will add \"Easy\" to the text node of the first &lt;title&gt; element of the loaded XML:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/xml/tryit.asp?filename=try_dom_insertdata",
        "syntaxHighlighting": [
          {
            "text": "\nxmlDoc.getElementsByTagName(\"title\")[0].childNodes[0].insertData(0,\"Easy \");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "getElementsByTagName",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"title\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "childNodes",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "insertData",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"Easy \"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "xmlDoc.getElementsByTagName(\"title\")[0].childNodes[0].insertData(0,\"Easy \");",
      "syntax_highlighting": [
        {
          "text": "\nxmlDoc.getElementsByTagName(\"title\")[0].childNodes[0].insertData(0,\"Easy \");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "getElementsByTagName",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"title\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "childNodes",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "insertData",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"Easy \"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\nxmlDoc.<span class=\"jspropertycolor\" style=\"color:black\">getElementsByTagName</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"title\"</span>)[<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>].<span class=\"jspropertycolor\" style=\"color:black\">childNodes</span>[<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>].<span class=\"jspropertycolor\" style=\"color:black\">insertData</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>,<span class=\"jsstringcolor\" style=\"color:green\">\"Easy \"</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/xml/tryit.asp?filename=try_dom_insertdata",
      "syntax_highlighting_data": [
        {
          "text": "\nxmlDoc.getElementsByTagName(\"title\")[0].childNodes[0].insertData(0,\"Easy \");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "getElementsByTagName",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"title\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "childNodes",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "insertData",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"Easy \"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    }
  ]
}