{
  "title": "XML DOM - Clone Nodes",
  "url": "https://www.w3schools.com/xml/dom_nodes_clone.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "XML DOM Clone Nodes",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Clone a Node",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The cloneNode() method creates a copy of a specified node.",
      "html": "<p>The <strong>cloneNode()</strong> method creates a copy of a specified node.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The cloneNode() method has a parameter (true or false). This parameter indicates if the cloned node should include all attributes and child nodes of the original node.",
      "html": "<p>The cloneNode() method has a parameter (true or false). This parameter indicates if the cloned node should include all attributes and child \nnodes of the original node.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The following code fragment copies the first <book> node and appends it to the root node of the document:",
      "html": "<p>The following code fragment copies the first &lt;book&gt; node and appends it to the root node of the document:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/xml/tryit.asp?filename=try_dom_clonenode",
        "syntaxHighlighting": [
          {
            "text": "\noldNode = xmlDoc.getElementsByTagName('book')[0];\nnewNode = oldNode.cloneNode(true);\nxmlDoc.documentElement.appendChild(newNode);\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "getElementsByTagName",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "'book'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "cloneNode",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "true",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "documentElement",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "appendChild",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "oldNode = xmlDoc.getElementsByTagName('book')[0];\nnewNode = oldNode.cloneNode(true);\nxmlDoc.documentElement.appendChild(newNode);",
      "syntax_highlighting": [
        {
          "text": "\noldNode = xmlDoc.getElementsByTagName('book')[0];\nnewNode = oldNode.cloneNode(true);\nxmlDoc.documentElement.appendChild(newNode);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "getElementsByTagName",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "'book'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "cloneNode",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "true",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "documentElement",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "appendChild",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\">\noldNode = xmlDoc.<span class=\"jspropertycolor\" style=\"color:black\">getElementsByTagName</span>(<span class=\"jsstringcolor\" style=\"color:green\">'book'</span>)[<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>];<br/>\nnewNode = oldNode.<span class=\"jspropertycolor\" style=\"color:black\">cloneNode</span>(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">true</span>);<br/>\nxmlDoc.<span class=\"jspropertycolor\" style=\"color:black\">documentElement</span>.<span class=\"jspropertycolor\" style=\"color:black\">appendChild</span>(newNode);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/xml/tryit.asp?filename=try_dom_clonenode",
      "syntax_highlighting_data": [
        {
          "text": "\noldNode = xmlDoc.getElementsByTagName('book')[0];\nnewNode = oldNode.cloneNode(true);\nxmlDoc.documentElement.appendChild(newNode);\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "getElementsByTagName",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "'book'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "cloneNode",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "true",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "documentElement",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "appendChild",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Example explained:",
      "html": "<p>Example explained:</p>"
    }
  ]
}