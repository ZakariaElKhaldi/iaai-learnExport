{
  "title": "DTD Building Blocks",
  "url": "https://www.w3schools.com/xml/xml_dtd_building.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "DTD - XML Building Blocks",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The main building blocks of both XML and HTML documents are elements.",
      "html": "<p class=\"intro\">The main building blocks of both XML and HTML documents are elements.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Building Blocks of XML Documents",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Seen from a DTD point of view, all XML documents are made up by the following building blocks:",
      "html": "<p>Seen from a DTD point of view, all XML documents are made up by the following building blocks:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Elements",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Elements are the main building blocks of both XML and HTML documents.",
      "html": "<p>Elements are the <b>main building blocks</b> of both XML and HTML documents.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Examples of HTML elements are \"body\" and \"table\". Examples of XML elements could be \"note\" and \"message\". Elements can contain text, other elements, or be empty. Examples of empty HTML elements are \"hr\", \"br\" and \"img\".",
      "html": "<p>Examples of HTML elements are \"body\" and \"table\". Examples of XML elements could be\n\"note\" and \"message\". Elements can contain text, other elements, or be empty. Examples of empty HTML elements are \"hr\", \"br\" and\n\"img\".</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Examples:",
      "html": "<p>Examples:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "<body>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</body>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<message>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</message>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "htmlHigh"
        ],
        "isNotranslate": true
      },
      "code": "<body>some text</body>\n\n\n<message>some text</message>",
      "syntax_highlighting": [
        {
          "text": "<body>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</body>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<message>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</message>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate htmlHigh\">\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>body<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>some text<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/body<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/><br/>\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>message<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>some text<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/message<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "<body>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</body>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<message>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</message>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Attributes",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Attributes provide extra information about elements .",
      "html": "<p>Attributes provide <b> extra information about elements</b>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Attributes are always placed inside the opening tag of an element. Attributes always come in name/value pairs. The following \"img\" element has additional information about a source file:",
      "html": "<p>Attributes are always placed inside the opening tag of an element. Attributes\nalways come in name/value pairs. The following \"img\" element has additional information about a source file:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "<img src=\"computer.gif\" />",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " src=\"computer.gif\" /",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"computer.gif\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "htmlHigh"
        ],
        "isNotranslate": true
      },
      "code": "<img src=\"computer.gif\" />",
      "syntax_highlighting": [
        {
          "text": "<img src=\"computer.gif\" />",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " src=\"computer.gif\" /",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"computer.gif\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate htmlHigh\">\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>img<span class=\"attributecolor\" style=\"color:green\"> src<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"computer.gif\"</span> /</span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "<img src=\"computer.gif\" />",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " src=\"computer.gif\" /",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"computer.gif\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The name of the element is \"img\". The name of the attribute is \"src\". The value of the attribute is \"computer.gif\". Since the element itself is empty it is closed by a \" /\".",
      "html": "<p>The name of the element is \"img\". The name of the attribute is\n\"src\". The value of the attribute is \"computer.gif\".\nSince the element itself is empty it is closed by a \" /\".</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Entities",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Some characters have a special meaning in XML, like the less than sign (<) that defines the start of an XML tag.",
      "html": "<p>Some characters have a special meaning in XML, like the less than sign (&lt;) \nthat defines the start of an XML tag.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Most of you know the HTML entity: \"&nbsp;\". This \"no-breaking-space\" entity is used in HTML to insert an extra space in a document. Entities are expanded when a document is parsed by an XML parser.",
      "html": "<p>Most of you know the HTML entity: \"&amp;nbsp;\". This \"no-breaking-space\" entity is used in HTML to insert an extra space in a document.\nEntities are expanded when a document is parsed by an XML parser.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The following entities are predefined in XML:",
      "html": "<p>The following entities are predefined in XML:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th>Entity References</th>\n<th>Character</th>\n</tr>\n<tr>\n<td>&amp;lt;</td>\n<td>&lt;</td>\n</tr>\n<tr>\n<td>&amp;gt;</td>\n<td>&gt;</td>\n</tr>\n<tr>\n<td>&amp;amp;</td>\n<td>&amp;</td>\n</tr>\n<tr>\n<td>&amp;quot;</td>\n<td>\"</td>\n</tr>\n<tr>\n<td>&amp;apos;</td>\n<td>'</td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "PCDATA",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "PCDATA means parsed character data.",
      "html": "<p>PCDATA means parsed character data.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Think of character data as the text found between the start tag and the end tag of an XML element.",
      "html": "<p>Think of character data as the text found between the start tag and the end tag of an XML element.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "PCDATA is text that WILL be parsed by a parser . The text will be examined by the parser for entities and markup .",
      "html": "<p><b>PCDATA is text that WILL be parsed by a parser</b>. <b>The text will be examined by the parser for entities and markup</b>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Tags inside the text will be treated as markup and entities will be expanded.",
      "html": "<p>Tags inside the text will be treated as markup and entities will be expanded.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "However, parsed character data should not contain any &, <, or > characters; these need to be represented by the &amp; &lt; and &gt; entities, respectively.",
      "html": "<p>However, parsed character data should not contain any &amp;, &lt;, or &gt; characters; \nthese need to be represented by the &amp;amp; &amp;lt; and &amp;gt; entities, respectively.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "CDATA",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "CDATA means character data.",
      "html": "<p>CDATA means character data.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "CDATA is text that will NOT be parsed by a parser . Tags inside the text will NOT be treated as markup and entities will not be expanded.",
      "html": "<p><b>CDATA is text that will NOT be parsed by a parser</b>.\nTags inside the text will NOT be treated as markup and entities will not be expanded.</p>"
    }
  ]
}