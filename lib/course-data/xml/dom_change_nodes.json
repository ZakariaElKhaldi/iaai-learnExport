{
  "title": "XML DOM - Change Node Values",
  "url": "https://www.w3schools.com/xml/dom_nodes_set.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "XML DOM Change Node Values",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The nodeValue property is used to change a node value.",
      "html": "<p class=\"intro\">The nodeValue property is used to change a node value.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The setAttribute() method is used to change an attribute value.",
      "html": "<p class=\"intro\">The setAttribute() method is used to change an attribute value.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Change the Value of an Element",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the DOM, everything is a node. Element nodes do not have a text value.",
      "html": "<p>In the DOM, everything is a node. Element nodes do not have a text value.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The text value of an element node is stored in a child node. This node is called a text node.",
      "html": "<p>The text value of an element node is stored in a child node. This node is called a text node.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To change the text value of an element, you must change the value of the elements's text node.",
      "html": "<p>To change the text value of an element, you must change the value of the elements's text node.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Change the Value of a Text Node",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The nodeValue property can be used to change the value of a text node .",
      "html": "<p>The <strong>nodeValue</strong> property can be used to change <strong>the value of a text node</strong>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This code changes the text node value of the first <title> element:",
      "html": "<p>This code changes the text node value of the first &lt;title&gt; element:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/xml/tryit.asp?filename=try_dom_change_nodevalue",
        "syntaxHighlighting": [
          {
            "text": "\n xmlDoc.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue = \"new \n content\"\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getElementsByTagName",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"title\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "childNodes",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "nodeValue",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"new \n content\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "xmlDoc.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue = \"new\ncontent\"",
      "syntax_highlighting": [
        {
          "text": "\n xmlDoc.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue = \"new \n content\"\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getElementsByTagName",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"title\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "childNodes",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "nodeValue",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"new \n content\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> xmlDoc.<span class=\"jspropertycolor\" style=\"color:black\">getElementsByTagName</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"title\"</span>)[<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>].<span class=\"jspropertycolor\" style=\"color:black\">childNodes</span>[<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>].<span class=\"jspropertycolor\" style=\"color:black\">nodeValue</span> = <span class=\"jsstringcolor\" style=\"color:green\">\"<em>new \n content</em>\"</span><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/xml/tryit.asp?filename=try_dom_change_nodevalue",
      "syntax_highlighting_data": [
        {
          "text": "\n xmlDoc.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue = \"new \n content\"\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getElementsByTagName",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"title\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "childNodes",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "nodeValue",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"new \n content\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Example explained:",
      "html": "<p>Example explained:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Try it yourself",
          "href": "https://www.w3schools.com/tryit.asp?filename=try_dom_change_nodevalue2",
          "title": ""
        }
      ],
      "text": "Loop through and change the text node of all <title> elements: Try it yourself",
      "html": "<p>Loop through and change the text node of all &lt;title&gt; elements:\n<a href=\"tryit.asp?filename=try_dom_change_nodevalue2\" target=\"_blank\">Try it yourself</a></p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Change the Value of an Attribute",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the DOM, attributes are nodes. Unlike element nodes, attribute nodes have text values.",
      "html": "<p>In the DOM, attributes are nodes. Unlike element nodes, attribute nodes have text values.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The way to change the value of an attribute, is to change its text value.",
      "html": "<p>The way to change the value of an attribute, is to change its text value.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This can be done using the setAttribute() method or setting the nodeValue property of the attribute node.",
      "html": "<p>This can be done using the setAttribute() method or setting the nodeValue property of the attribute node.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Change an Attribute Using setAttribute()",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The setAttribute() method changes the value of an attribute .",
      "html": "<p>The <strong>setAttribute()</strong> method <strong>changes the value of an attribute</strong>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the attribute does not exist, a new attribute is created.",
      "html": "<p>If the attribute does not exist, a new attribute is created.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This code changes the category attribute of the <book> element:",
      "html": "<p>This code changes the category attribute of the &lt;book&gt; element:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/xml/tryit.asp?filename=try_dom_setattribute1",
        "syntaxHighlighting": [
          {
            "text": "\n  xmlDoc.getElementsByTagName(\"book\")[0].setAttribute(\"category\",\"food\");\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getElementsByTagName",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"book\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "setAttribute",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"category\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"food\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "xmlDoc.getElementsByTagName(\"book\")[0].setAttribute(\"category\",\"food\");",
      "syntax_highlighting": [
        {
          "text": "\n  xmlDoc.getElementsByTagName(\"book\")[0].setAttribute(\"category\",\"food\");\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getElementsByTagName",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"book\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "setAttribute",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"category\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"food\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  xmlDoc.<span class=\"jspropertycolor\" style=\"color:black\">getElementsByTagName</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"book\"</span>)[<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>].<span class=\"jspropertycolor\" style=\"color:black\">setAttribute</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"category\"</span>,<span class=\"jsstringcolor\" style=\"color:green\">\"food\"</span>);<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/xml/tryit.asp?filename=try_dom_setattribute1",
      "syntax_highlighting_data": [
        {
          "text": "\n  xmlDoc.getElementsByTagName(\"book\")[0].setAttribute(\"category\",\"food\");\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getElementsByTagName",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"book\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "setAttribute",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"category\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"food\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Example explained:",
      "html": "<p>Example explained:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Try it yourself",
          "href": "https://www.w3schools.com/tryit.asp?filename=try_dom_setattribute2",
          "title": ""
        }
      ],
      "text": "Loop through all <title> elements and add a new attribute: Try it yourself",
      "html": "<p>Loop through all &lt;title&gt; elements and add a new attribute:\n<a href=\"tryit.asp?filename=try_dom_setattribute2\" target=\"_blank\">Try it yourself</a></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: If the attribute does not exist, a new attribute is created (with the name and value specified).",
      "html": "<p><b>Note:</b> If the attribute does not exist, a new attribute is created (with the name and value specified).</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Change an Attribute Using nodeValue",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The nodeValue property is the value of a attribute node .",
      "html": "<p>The <strong>nodeValue</strong> property is <strong>the value of a attribute node</strong>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Changing the value property changes the value of the attribute.",
      "html": "<p>Changing the value property changes the value of the attribute.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/xml/tryit.asp?filename=try_dom_att_nodevalue",
        "syntaxHighlighting": [
          {
            "text": "\n  xmlDoc.getElementsByTagName(\"book\")[0].getAttributeNode(\"category\").nodeValue = \"food\";\n ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getElementsByTagName",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"book\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getAttributeNode",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"category\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "nodeValue",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"food\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "xmlDoc.getElementsByTagName(\"book\")[0].getAttributeNode(\"category\").nodeValue = \"food\";",
      "syntax_highlighting": [
        {
          "text": "\n  xmlDoc.getElementsByTagName(\"book\")[0].getAttributeNode(\"category\").nodeValue = \"food\";\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getElementsByTagName",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"book\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getAttributeNode",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"category\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "nodeValue",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"food\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  xmlDoc.<span class=\"jspropertycolor\" style=\"color:black\">getElementsByTagName</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"book\"</span>)[<span class=\"jsnumbercolor\" style=\"color:#905\">0</span>].<span class=\"jspropertycolor\" style=\"color:black\">getAttributeNode</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"category\"</span>).<span class=\"jspropertycolor\" style=\"color:black\">nodeValue</span> = <span class=\"jsstringcolor\" style=\"color:green\">\"food\"</span>;<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": "https://www.w3schools.com/xml/tryit.asp?filename=try_dom_att_nodevalue",
      "syntax_highlighting_data": [
        {
          "text": "\n  xmlDoc.getElementsByTagName(\"book\")[0].getAttributeNode(\"category\").nodeValue = \"food\";\n ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getElementsByTagName",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"book\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getAttributeNode",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"category\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "nodeValue",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"food\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Example explained:",
      "html": "<p>Example explained:</p>"
    }
  ]
}