{
  "id": "8596eba2-cce6-457c-a4cb-d158fe980773",
  "title": "ASP.NET Razor- VB Logic Conditions",
  "slug": "aspnet-razor-vb-logic-conditions",
  "metadata": {
    "description": "Learn about ASP.NET Razor- VB Logic Conditions with clear explanations and practical examples.",
    "keywords": [
      "c",
      "code",
      "else",
      "condition",
      "price",
      "example",
      "case",
      "conditions",
      "html",
      "body",
      "test"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnASP",
    "subcategory": "Razor VB Logic"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "ASP.NET Razor\n- VB Logic Conditions",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Programming Logic: Execute code based on conditions.\nThe If Condition\nVB lets you execute code based on conditions.\nTo test a condition you use the\nif statement\n. The if \nstatement returns true or false, based on your test:\nThe if statement starts a code block\nThe condition is written between if and then\nThe code between if ... then and end if is executed if the test is true\nExample\n@Code\nDim \n    price=50\nEnd Code\n<html>\n<body>\n@If price>30 \n    Then\n@<p>The price is too high.</p>\nEnd \n    If\n</body>\n</html>\nRun example \u00bb\nThe Else Condition\nAn if statement can include an\nelse condition\n.\nThe else condition defines the code to be executed if the condition is false.\nExample\n@Code\nDim \n    price=20\nEnd Code\n<html>\n<body>\n@if price>30 then\n@<p>The price is too high.</p>\nElse\n@<p>The price is OK.</p>\nEnd If\n</body>\n</html>\nRun example \u00bb\nNote:\nIn the example above, if the first condition is true, it will be executed. \nThe else condition covers \"everything else\".\nThe ElseIf Condition\nMultiple conditions can be tested with an\nelse if condition\n:\nExample\n@Code\nDim \n    price=25\nEnd Code\n<html>\n<body>\n@If price>=30 Then\n@<p>The price is \n    high.</p>\nElseIf price>20 And price<30 then\n@<p>The price is OK.</p>\nElse\n@<p>The price is low.</p>\nEnd If\n</body>\n</html>\nRun example \u00bb\nIn the example above, if the first condition is true, it will be executed.\nIf not, then if the \nYou can have any number of else if conditions.\nIf none of the if or else if conditions are true, the last else block \n(without a condition) covers \"everything else\".\nSelect Conditions\nA\nselect block\ncan be used to test a number of individual conditions:\nExample\n@Code\nDim weekday=DateTime.Now.DayOfWeek\nDim day=weekday.ToString()\nDim message=\"\"\nEnd Code\n<html>\n<body>\n@Select Case day\nCase \"Monday\"\nmessage=\"This is the first \n    weekday.\"\nCase \"Thursday\"\nmessage=\"Only one day before weekend.\"\nCase \"Friday\"\nmessage=\"Tomorrow is weekend!\"\nCase Else\nmessage=\"Today is \" & day\nEnd Select\n<p>\n@message\n</p>\n</body>\n</html>\nRun example \u00bb\n\"Select Case\" is followed by the test value (day). Each individual test condition has a case \nvalue, and any number of code lines. If the test value matches the case value, the code lines \nare \nexecuted.\nA select block can have a default case (Case Else) for  \n\"everything else\" that runs if none of the other cases are true.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "@Code\nDim \n    price=50\nEnd Code\n<html>\n<body>\n@If price>30 \n    Then\n@<p>The price is too high.</p>\nEnd \n    If\n</body>\n</html>",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "@Code\nDim \n    price=20\nEnd Code\n<html>\n<body>\n@if price>30 then\n@<p>The price is too high.</p>\nElse\n@<p>The price is OK.</p>\nEnd If\n</body>\n</html>",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "@Code\nDim \n    price=25\nEnd Code\n<html>\n<body>\n@If price>=30 Then\n@<p>The price is \n    high.</p>\nElseIf price>20 And price<30 then\n@<p>The price is OK.</p>\nElse\n@<p>The price is low.</p>\nEnd If\n</body>\n</html>",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "@Code\nDim weekday=DateTime.Now.DayOfWeek\nDim day=weekday.ToString()\nDim message=\"\"\nEnd Code\n<html>\n<body>\n@Select Case day\nCase \"Monday\"\nmessage=\"This is the first \n    weekday.\"\nCase \"Thursday\"\nmessage=\"Only one day before weekend.\"\nCase \"Friday\"\nmessage=\"Tomorrow is weekend!\"\nCase Else\nmessage=\"Today is \" & day\nEnd Select\n<p>\n@message\n</p>\n</body>\n</html>",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "@Code\nDim \n    price=50\n# TODO: Complete this line\n<html>\n<body>\n@If price>30 \n    Then\n@<p>The price is too high.</p>\nEnd \n    If\n</body>\n</html>",
      "solution": "@Code\nDim \n    price=50\nEnd Code\n<html>\n<body>\n@If price>30 \n    Then\n@<p>The price is too high.</p>\nEnd \n    If\n</body>\n</html>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "@Code\nDim \n    price=20\nEnd Code\n<html>\n# TODO: Complete this line\n@if price>30 then\n@<p>The price is too high.</p>\nElse\n@<p>The price is OK.</p>\nEnd If\n</body>\n</html>",
      "solution": "@Code\nDim \n    price=20\nEnd Code\n<html>\n<body>\n@if price>30 then\n@<p>The price is too high.</p>\nElse\n@<p>The price is OK.</p>\nEnd If\n</body>\n</html>"
    }
  ],
  "related_topics": [
    {
      "id": "fbd6d85a-4e9a-42c5-8b29-2f9cf92ff175",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "c0e44b4d-8ff2-4103-9d25-a01444645786",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "463a817f-4b3c-42ab-94d4-895831161318",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The if statement starts a code block\nThe condition?",
      "options": [
        "written between if and then\nThe code between if",
        "None of the above.",
        "None of the above.",
        "true\nExample\n@Code\nDim \n    price=50\nEnd Code\n<html>\n<body>\n@If price>30 \n    Then\n@<p>The price is too high"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of The if statement starts a code block\nThe condition is 'written between if and then\nThe code between if'."
    },
    {
      "question": "What is then and end if is executed if the test?",
      "options": [
        "written between if and then\nThe code between if",
        "None of the above.",
        "None of the above.",
        "true\nExample\n@Code\nDim \n    price=50\nEnd Code\n<html>\n<body>\n@If price>30 \n    Then\n@<p>The price is too high"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of then and end if is executed if the test is 'true\nExample\n@Code\nDim \n    price=50\nEnd Code\n<html>\n<body>\n@If price>30 \n    Then\n@<p>The price is too high'."
    }
  ],
  "summary": "This tutorial covers ASP.NET Razor- VB Logic Conditions concepts and techniques. You'll learn how to use ASP.NET Razor- VB Logic Conditions effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of ASP.NET Razor- VB Logic Conditions and how to apply it in your projects."
}