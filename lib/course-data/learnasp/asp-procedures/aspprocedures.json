{
  "id": "01fc2e52-0aff-4339-9509-725992141eed",
  "title": "ASPProcedures",
  "slug": "aspprocedures",
  "metadata": {
    "description": "Learn about ASPProcedures with clear explanations and practical examples.",
    "keywords": [
      "c",
      "procedure",
      "function",
      "call",
      "vbscript",
      "example",
      "myfunction",
      "procedures",
      "statements",
      "javascript",
      "html"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnASP",
    "subcategory": "ASP Procedures"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "ASP\nProcedures",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "In ASP you can call a JavaScript procedure from a VBScript and vice versa.\nProcedures\nThe ASP source code can contain procedures and functions:\nExample\n<!DOCTYPE html>\n<html>\n<head>\n<%\nsub vbproc(num1,num2)\nresponse.write(num1*num2)\nend sub\n%>\n</head>\n<body>\n<p>Result: <%call vbproc(3,4)%></p>\n</body>\n</html>\nShow Example \u00bb\nInsert the <%@ language=\"\nlanguage\n\" %> line above the\n<html> tag to write the procedure/function in another scripting language:\nExample\n<%@ language=\"javascript\" %>\n<!DOCTYPE html>\n<html>\n<head>\n<%\nfunction jsproc(num1,num2)\n{\nResponse.Write(num1*num2)\n}\n%>\n</head>\n<body>\n<p>Result: <%jsproc(3,4)%></p>\n</body>\n</html>\nShow Example \u00bb\nDifferences Between VBScript and JavaScript\nWhen calling a VBScript or a JavaScript procedure from an ASP file written in VBScript, you can use the\n\"call\" keyword followed by the procedure name. If a procedure requires\nparameters, the parameter list must be enclosed in parentheses when using the\n\"call\" keyword. If you omit the \"call\" keyword, the\nparameter list must not be enclosed in parentheses. If the procedure has no\nparameters, the parentheses are optional.\nWhen calling a JavaScript or a VBScript procedure from an ASP file written in JavaScript,\nalways use parentheses after the procedure name.\nVBScript Procedures\nVBScript has two kinds procedures:\nSub procedure\nFunction procedure\nVBScript Sub Procedures\nA Sub procedure:\nis a series of statements, enclosed by the Sub and End Sub statements\ncan perform actions, but\ndoes not return\na value\ncan take arguments\nSub mysub()\nsome statements\nEnd Sub\nor\nSub mysub(argument1,argument2)\nsome statements\nEnd Sub\nExample\nSub mysub()\nresponse.write(\"I was written by a sub procedure\")\nEnd Sub\nShow Example \u00bb\nVBScript Function Procedures\nA Function procedure:\nis a series of statements, enclosed by the Function and End Function statements\ncan perform actions and\ncan return\na value\ncan take arguments that are passed to it by a calling procedure\nwithout arguments, must include an empty set of parentheses ()\nreturns a value by assigning a value to its name\nFunction myfunction()\nsome statements\nmyfunction=\nsome value\nEnd Function\nor\nFunction myfunction(argument1,argument2)\nsome statements\nmyfunction=\nsome value\nEnd Function\nExample\nfunction myfunction()\nmyfunction=Date()\nend function\nShow Example \u00bb\nCalling a Procedure\nThis simple function procedures is called to calculate the sum of two arguments:\nExample\nFunction myfunction(a,b)\nmyfunction=a+b\nEnd Function\nresponse.write(myfunction(5,9))\nShow Example \u00bb\nThe function \"myfunction\" will return the sum of argument \"a\" and argument \n\"b\". In this case 14.\nWhen you call a procedure you can use the Call statement, like this:\nCall MyProc(argument)\nOr, you can omit the Call statement, like this:\nMyProc argument\nMore Examples\nCall procedures using VBScript\nHow to call both a JavaScript procedure and a VBScript procedure in an ASP file.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<!DOCTYPE html>\n<html>\n<head>\n<%\nsub vbproc(num1,num2)\nresponse.write(num1*num2)\nend sub\n%>\n</head>\n<body>\n<p>Result: <%call vbproc(3,4)%></p>\n</body>\n</html>",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<%@ language=\"javascript\" %>\n<!DOCTYPE html>\n<html>\n<head>\n<%\nfunction jsproc(num1,num2)\n{\nResponse.Write(num1*num2)\n}\n%>\n</head>\n<body>\n<p>Result: <%jsproc(3,4)%></p>\n</body>\n</html>",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "Sub mysub()\nresponse.write(\"I was written by a sub procedure\")\nEnd Sub",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "function myfunction()\nmyfunction=Date()\nend function",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "Function myfunction(a,b)\nmyfunction=a+b\nEnd Function\nresponse.write(myfunction(5,9))",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<!DOCTYPE html>\n<html>\n<head>\n<%\nsub vbproc(num1,num2)\n# TODO: Complete this line\nend sub\n%>\n</head>\n<body>\n<p>Result: <%call vbproc(3,4)%></p>\n</body>\n</html>",
      "solution": "<!DOCTYPE html>\n<html>\n<head>\n<%\nsub vbproc(num1,num2)\nresponse.write(num1*num2)\nend sub\n%>\n</head>\n<body>\n<p>Result: <%call vbproc(3,4)%></p>\n</body>\n</html>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<%@ language=\"javascript\" %>\n<!DOCTYPE html>\n<html>\n<head>\n<%\nfunction jsproc(num1,num2)\n{\nResponse.Write(num1*num2)\n# TODO: Complete this line\n%>\n</head>\n<body>\n<p>Result: <%jsproc(3,4)%></p>\n</body>\n</html>",
      "solution": "<%@ language=\"javascript\" %>\n<!DOCTYPE html>\n<html>\n<head>\n<%\nfunction jsproc(num1,num2)\n{\nResponse.Write(num1*num2)\n}\n%>\n</head>\n<body>\n<p>Result: <%jsproc(3,4)%></p>\n</body>\n</html>"
    }
  ],
  "related_topics": [
    {
      "id": "339b8404-1baf-4440-8162-16915cb84048",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "a55d9e1a-15e3-41ba-aba7-96d9022e908f",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "fc8d56f7-0ce3-4064-b1fd-aa28dcd0b329",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is the parentheses?",
      "options": [
        "None of the above.",
        "Not a the parentheses.",
        "None of the above.",
        "optional"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of the parentheses is 'optional'."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers ASPProcedures concepts and techniques. You'll learn how to use ASPProcedures effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of ASPProcedures and how to apply it in your projects."
}