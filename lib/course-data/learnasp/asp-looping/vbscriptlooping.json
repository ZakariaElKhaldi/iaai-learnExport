{
  "id": "0dc89e4a-91f7-451b-b418-4eb9300f127f",
  "title": "VBScriptLooping",
  "slug": "vbscriptlooping",
  "metadata": {
    "description": "Learn about VBScriptLooping with clear explanations and practical examples.",
    "keywords": [
      "c",
      "loop",
      "code",
      "statement",
      "condition",
      "exit",
      "counter",
      "variable",
      "example",
      "looping",
      "true"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnASP",
    "subcategory": "ASP Looping"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "VBScript\nLooping",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Looping Statements\nLooping statements are used to run the same block of code a specified number of times.\nIn VBScript we have four looping statements:\nFor...\n- runs code a specified number of times\nFor Each...\n- runs code for each item in a collection or each element of an array\nDo...Loop statement\n- loops while or until a condition is true\nWhile...Wend statement\n- Do not use it - use the Do...Loop statement instead\nFor...\nUse the\nFor...\nstatement to run a block of code a specified number of times.\nThe\nFor\nstatement specifies the counter variable (\ni\n), and its start and end\nvalues. The\n\nstatement increases the counter variable (\ni\n) by one.\nExample\n<html>\n<body>\n<%\nFor i = 0 To 5\nresponse.write(\"The number is \" & i & \"<br />\")\n\n%>\n</body>\n</html>\nShow Example \u00bb\nThe Step Keyword\nWith the\nStep\nkeyword, you can increase or decrease the counter variable by the value you specify.\nIn the example below, the counter variable (\ni\n) is INCREASED by two, each time the loop repeats.\nFor i=2 To 10 Step 2\nsome code\n\nTo decrease the counter variable, you must use a negative\nStep\nvalue. You must specify an end value that is less than the start value.\nIn the example below, the counter variable (\ni\n) is DECREASED by two, each time the loop repeats.\nFor i=10 To 2 Step -2\nsome code\n\nExit a For...\nYou can exit a For...\nFor i=1 To 10\nIf i=5 Then Exit For\nsome code\n\nFor Each...\nA\nFor Each...\nloop repeats a block of code for each item in a collection, or for each element of an array.\nExample\n<html>\n<body>\n<%\nDim cars(2)\ncars(0)=\"Volvo\"\ncars(1)=\"Saab\"\ncars(2)=\"BMW\"\nFor Each x In cars\nresponse.write(x & \"<br />\")\n\n%>\n</body>\n</html>\nShow Example \u00bb\nDo...Loop\nIf you don't know how many repetitions you want, use a Do...Loop statement.\nThe Do...Loop statement repeats a block of code while a condition is\ntrue, or until\u00a0a condition becomes true.\nRepeat Code While a Condition is True\nYou use the While keyword to check a condition in a Do...Loop statement.\nDo While i>10\nsome code\nLoop\nIf\ni\nequals 9, the code inside the loop above will never be executed.\nDo\nsome code\nLoop While i>10\nThe code inside this loop will be executed at least one time, even if\ni\nis less than 10.\nRepeat Code Until a Condition Becomes True\nYou use the Until keyword to check a condition in a Do...Loop statement.\nDo Until i=10\nsome code\nLoop\nIf\ni\nequals 10, the code inside the loop will never be executed.\nDo\nsome code\nLoop Until i=10\nThe code inside this loop will be executed at least one time, even if\ni\nis equal to 10.\nExit a Do...Loop\nYou can exit a Do...Loop statement with the Exit Do keyword.\nDo Until i=10\ni=i-1\nIf i<10 Then Exit Do\nLoop\nThe code inside this loop will be executed as long as\ni\nis different\nfrom 10, and as long as\ni\nis greater than 10.\nMore Examples\nLooping through headers\nHow to loop through the six headings in html.\nDo...While loop\nHow to make a simple\nDo...While\nloop.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<html>\n<body>\n<%\nFor i = 0 To 5\nresponse.write(\"The number is \" & i & \"<br />\")\nNext\n%>\n</body>\n</html>",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<html>\n<body>\n<%\nDim cars(2)\ncars(0)=\"Volvo\"\ncars(1)=\"Saab\"\ncars(2)=\"BMW\"\nFor Each x In cars\nresponse.write(x & \"<br />\")\nNext\n%>\n</body>\n</html>",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<html>\n<body>\n<%\nFor i = 0 To 5\nresponse.write(\"The number is \" & i & \"<br />\")\nNext\n# TODO: Complete this line\n</body>\n</html>",
      "solution": "<html>\n<body>\n<%\nFor i = 0 To 5\nresponse.write(\"The number is \" & i & \"<br />\")\nNext\n%>\n</body>\n</html>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<html>\n<body>\n# TODO: Complete this line\nDim cars(2)\ncars(0)=\"Volvo\"\ncars(1)=\"Saab\"\ncars(2)=\"BMW\"\nFor Each x In cars\nresponse.write(x & \"<br />\")\nNext\n%>\n</body>\n</html>",
      "solution": "<html>\n<body>\n<%\nDim cars(2)\ncars(0)=\"Volvo\"\ncars(1)=\"Saab\"\ncars(2)=\"BMW\"\nFor Each x In cars\nresponse.write(x & \"<br />\")\nNext\n%>\n</body>\n</html>"
    }
  ],
  "related_topics": [
    {
      "id": "3f956fa0-6b42-47b6-a79c-4881595dd8a0",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "e4e1c6ff-0736-4698-8431-b4cdd36c3675",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "14fa9243-7076-42db-b6fb-70b7b8c715d1",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is VBScript\nLooping\n\nLooping Statements\nLooping statements?",
      "options": [
        "None of the above.",
        "None of the above.",
        "true\nWhile",
        "used to run the same block of code a specified number of times"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of VBScript\nLooping\n\nLooping Statements\nLooping statements is 'used to run the same block of code a specified number of times'."
    },
    {
      "question": "What is loops while or until a condition?",
      "options": [
        "None of the above.",
        "None of the above.",
        "true\nWhile",
        "used to run the same block of code a specified number of times"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of loops while or until a condition is 'true\nWhile'."
    }
  ],
  "summary": "This tutorial covers VBScriptLooping concepts and techniques. You'll learn how to use VBScriptLooping effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of VBScriptLooping and how to apply it in your projects."
}