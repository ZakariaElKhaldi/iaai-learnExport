{
  "id": "47519c66-6a4d-45ed-a6ff-a8b8d9168e42",
  "title": "ASP.NET Razor- C# Logic Conditions",
  "slug": "aspnet-razor-c-logic-conditions",
  "metadata": {
    "description": "Learn about ASP.NET Razor- C# Logic Conditions with clear explanations and practical examples.",
    "keywords": [
      "csharp",
      "else",
      "condition",
      "price",
      "example",
      "conditions",
      "html",
      "body",
      "code",
      "test",
      "true"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Csharp Basics"
    ],
    "estimated_time": 5,
    "category": "LearnASP",
    "subcategory": "Razor C# Logic"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "ASP.NET Razor\n- C# Logic Conditions",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Programming Logic: Execute code based on conditions.\nThe If Condition\nC# lets you execute code based on conditions.\nTo test a condition you use an\nif statement\n. The if \nstatement returns true or false, based on your test:\nThe if statement starts a code block\nThe condition is written inside parenthesis\nThe code inside the braces is executed if the test is true\nExample\n@{var \n    price=50;}\n<html>\n<body>\n@if (price>30)\n{\n<p>The price is too high.</p>\n}\n</body>\n</html>\nRun example \u00bb\nThe Else Condition\nAn if statement can include an\nelse condition\n.\nThe else condition defines the code to be executed if the condition is false.\nExample\n@{var \n    price=20;}\n<html>\n<body>\n@if (price>30)\n{\n<p>The price is too high.</p>\n}\nelse\n{\n<p>The price is OK.</p>\n}\n</body>\n</html>\nRun example \u00bb\nNote:\nIn the example above, if the first condition is true, it will be executed. \nThe else condition covers \"everything else\".\nThe Else If Condition\nMultiple conditions can be tested with an\nelse if condition\n:\nExample\n@{var \n    price=25;}\n<html>\n<body>\n@if (price>=30)\n{\n<p>The price is \n    high.</p>\n}\nelse if (price>20 && price<30)\n{\n<p>The price is OK.</p>\n}\nelse\n{\n<p>The price is low.</p>\n}\n</body>\n</html>\nRun example \u00bb\nIn the example above, if the first condition is true, it will be executed.\nIf not, then if the \nYou can have any number of else if conditions.\nIf none of the if and else if conditions are true, the last else block \n(without a condition) covers \"everything else\".\nSwitch Conditions\nA\nswitch block\ncan be used to test a number of individual conditions:\nExample\n@{\nvar weekday=DateTime.Now.DayOfWeek;\nvar day=weekday.ToString();\nvar message=\"\";\n}\n<html>\n<body>\n@switch(day)\n{\ncase \"Monday\":\nmessage=\"This is the first weekday.\";\nbreak;\ncase \n    \"Thursday\":\nmessage=\"Only one day before weekend.\";\nbreak;\ncase \"Friday\":\nmessage=\"Tomorrow is \n    weekend!\";\nbreak;\ndefault:\nmessage=\"Today is \" + day;\nbreak;\n}\n<p>\n@message\n</p>\n</body>\n</html>\nRun example \u00bb\nThe test value (day) is in parentheses. Each individual test condition has a case \nvalue that ends with a colon, and any number of code lines ending with a break \nstatement. If the test value matches the case value, the code lines are \nexecuted.\nA switch block can have a default case (default:) for  \n\"everything else\" that runs if none of the cases are true.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "@{var \n    price=50;}\n<html>\n<body>\n@if (price>30)\n{\n<p>The price is too high.</p>\n}\n</body>\n</html>",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "@{var \n    price=20;}\n<html>\n<body>\n@if (price>30)\n{\n<p>The price is too high.</p>\n}\nelse\n{\n<p>The price is OK.</p>\n}\n</body>\n</html>",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "@{var \n    price=25;}\n<html>\n<body>\n@if (price>=30)\n{\n<p>The price is \n    high.</p>\n}\nelse if (price>20 && price<30)\n{\n<p>The price is OK.</p>\n}\nelse\n{\n<p>The price is low.</p>\n}\n</body>\n</html>",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "@{\nvar weekday=DateTime.Now.DayOfWeek;\nvar day=weekday.ToString();\nvar message=\"\";\n}\n<html>\n<body>\n@switch(day)\n{\ncase \"Monday\":\nmessage=\"This is the first weekday.\";\nbreak;\ncase \n    \"Thursday\":\nmessage=\"Only one day before weekend.\";\nbreak;\ncase \"Friday\":\nmessage=\"Tomorrow is \n    weekend!\";\nbreak;\ndefault:\nmessage=\"Today is \" + day;\nbreak;\n}\n<p>\n@message\n</p>\n</body>\n</html>",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "@{var \n    price=50;}\n<html>\n<body>\n@if (price>30)\n# TODO: Complete this line\n<p>The price is too high.</p>\n}\n</body>\n</html>",
      "solution": "@{var \n    price=50;}\n<html>\n<body>\n@if (price>30)\n{\n<p>The price is too high.</p>\n}\n</body>\n</html>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "@{var \n    price=20;}\n# TODO: Complete this line\n<body>\n@if (price>30)\n{\n<p>The price is too high.</p>\n}\nelse\n{\n<p>The price is OK.</p>\n}\n</body>\n</html>",
      "solution": "@{var \n    price=20;}\n<html>\n<body>\n@if (price>30)\n{\n<p>The price is too high.</p>\n}\nelse\n{\n<p>The price is OK.</p>\n}\n</body>\n</html>"
    }
  ],
  "related_topics": [
    {
      "id": "46a89689-04d3-432c-9d56-3df3e9e98e5a",
      "title": "Csharp Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "407a3836-9e69-4bb0-81cc-d795e59d8c84",
      "title": "Csharp Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "4a9ddf45-fed5-40e9-8fa3-317b3c590ad3",
      "title": "Csharp Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The if statement starts a code block\nThe condition is written inside parenthesis\nThe code inside the braces is executed if the test?",
      "options": [
        "true\nExample\n@{var \n    price=50;}\n<html>\n<body>\n@if (price>30)\n{\n<p>The price is too high",
        "None of the above.",
        "false",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of The if statement starts a code block\nThe condition is written inside parenthesis\nThe code inside the braces is executed if the test is 'true\nExample\n@{var \n    price=50;}\n<html>\n<body>\n@if (price>30)\n{\n<p>The price is too high'."
    },
    {
      "question": "What is The else condition defines the code to be executed if the condition?",
      "options": [
        "None of the above.",
        "false",
        "None of the above.",
        "true\nExample\n@{var \n    price=50;}\n<html>\n<body>\n@if (price>30)\n{\n<p>The price is too high"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of The else condition defines the code to be executed if the condition is 'false'."
    }
  ],
  "summary": "This tutorial covers ASP.NET Razor- C# Logic Conditions concepts and techniques. You'll learn how to use ASP.NET Razor- C# Logic Conditions effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of ASP.NET Razor- C# Logic Conditions and how to apply it in your projects."
}