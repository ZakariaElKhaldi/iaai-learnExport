{
  "id": "026140bc-bfb8-4a8e-9982-1a40e396b1b2",
  "title": "VBScriptConditional Statements",
  "slug": "vbscriptconditional-statements",
  "metadata": {
    "description": "Learn about VBScriptConditional Statements with clear explanations and practical examples.",
    "keywords": [
      "c",
      "write",
      "response",
      "case",
      "statement",
      "select",
      "execute",
      "code",
      "condition",
      "true",
      "else"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnASP",
    "subcategory": "ASP Conditionals"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "VBScript\nConditional Statements",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "VBScript\nConditional Statements\n\nConditional Statements\nConditional statements are used to perform different actions for different decisions",
      "content": ".\nIn VBScript we have four conditional statements:",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "If statement",
      "content": "- executes a set of code when a condition is true\nIf...Then...Else statement\n- select one of two sets of lines to execute\nIf...Then...ElseIf statement\n- select one of many sets of lines to execute",
      "order": 3,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Select Case statement",
      "content": "- select one of many sets of lines to execute\nIf...Then...Else\nUse the If...Then...Else statement if you want to\nexecute some code if a condition is true\nselect one of two blocks of code to execute\nIf you want to execute only\none\nstatement when a condition is true, you can write the code on one line:\nIf i=10 Then response.write(\"Hello\")\nThere is no ..Else.. in this syntax. You just tell the code to\nperform\none action\nif a condition is true (in this case If i=10).\nIf you want to execute\nmore than one\nstatement when a condition is true,\nyou must put each statement on separate lines, and end the statement with the\nkeyword \"End If\":\nIf i=10 Then\nresponse.write(\"Hello\")\ni = i+1\nEnd If\nThere is no ..Else.. in the example above either. You just tell the code to perform\nmultiple actions\nif the condition is true.\nIf you want to execute a statement if a condition is true and execute another statement if the condition is not true, you must add the \"Else\"\nkeyword:\nExample\ni=hour(time)\nIf i < 10 Then\nresponse.write(\"Good morning!\")\nElse\nresponse.write(\"Have a nice day!\")\nEnd If\nShow Example \u00bb\nIn the example above, the first block of code will be executed if the condition is true, and the other block\nwill be executed otherwise (if i is greater than 10).\nIf...Then...ElseIf\nYou can use the If...Then...ElseIf statement if you want to select one of many blocks of\ncode to execute:\nExample\ni=hour(time)\nIf i = 10 Then\nresponse.write(\"Just started...!\")\nElseIf i = 11 Then\nresponse.write(\"Hungry!\")\nElseIf i = 12 Then\nresponse.write(\"Ah, lunch-time!\")\nElseIf i = 16 Then\nresponse.write(\"Time to go home!\")\nElse\nresponse.write(\"Unknown\")\nEnd If\nShow Example \u00bb\nSelect Case\nYou can also use the \"Select Case\" statement if you want to select one of many blocks of\ncode to execute:\nExample\nd=weekday(date)\nSelect Case d\nCase 1\nresponse.write(\"Sleepy Sunday\")\nCase 2\nresponse.write(\"Monday again!\")\nCase 3\nresponse.write(\"Just Tuesday!\")\nCase 4\nresponse.write(\"Wednesday!\")\nCase 5\nresponse.write(\"Thursday...\")\nCase 6\nresponse.write(\"Finally Friday!\")\nCase else\nresponse.write(\"Super Saturday!!!!\")\nEnd Select\nShow Example \u00bb\nThis is how it works: First we have a single expression (most often a\nvariable), that is evaluated once. The value of the expression is then compared with the\nvalues for each Case in the structure. If there is a match, the block of code\nassociated with that Case is executed.\n\n\u2605\n+1",
      "order": 4,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "i=hour(time)\nIf i < 10 Then\nresponse.write(\"Good morning!\")\nElse\nresponse.write(\"Have a nice day!\")\nEnd If",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "i=hour(time)\nIf i = 10 Then\nresponse.write(\"Just started...!\")\nElseIf i = 11 Then\nresponse.write(\"Hungry!\")\nElseIf i = 12 Then\nresponse.write(\"Ah, lunch-time!\")\nElseIf i = 16 Then\nresponse.write(\"Time to go home!\")\nElse\nresponse.write(\"Unknown\")\nEnd If",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "d=weekday(date)\nSelect Case d\nCase 1\nresponse.write(\"Sleepy Sunday\")\nCase 2\nresponse.write(\"Monday again!\")\nCase 3\nresponse.write(\"Just Tuesday!\")\nCase 4\nresponse.write(\"Wednesday!\")\nCase 5\nresponse.write(\"Thursday...\")\nCase 6\nresponse.write(\"Finally Friday!\")\nCase else\nresponse.write(\"Super Saturday!!!!\")\nEnd Select",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "i=hour(time)\nIf i < 10 Then\nresponse.write(\"Good morning!\")\nElse\n# TODO: Complete this line\nEnd If",
      "solution": "i=hour(time)\nIf i < 10 Then\nresponse.write(\"Good morning!\")\nElse\nresponse.write(\"Have a nice day!\")\nEnd If"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "i=hour(time)\n# TODO: Complete this line\nresponse.write(\"Just started...!\")\nElseIf i = 11 Then\nresponse.write(\"Hungry!\")\nElseIf i = 12 Then\nresponse.write(\"Ah, lunch-time!\")\nElseIf i = 16 Then\nresponse.write(\"Time to go home!\")\nElse\nresponse.write(\"Unknown\")\nEnd If",
      "solution": "i=hour(time)\nIf i = 10 Then\nresponse.write(\"Just started...!\")\nElseIf i = 11 Then\nresponse.write(\"Hungry!\")\nElseIf i = 12 Then\nresponse.write(\"Ah, lunch-time!\")\nElseIf i = 16 Then\nresponse.write(\"Time to go home!\")\nElse\nresponse.write(\"Unknown\")\nEnd If"
    }
  ],
  "related_topics": [
    {
      "id": "c6fe7718-e096-4912-90ff-a20496eadb7c",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "de7250bc-4243-4902-9b25-44f01f57e85d",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "c0c1ecac-2047-48f6-8dcf-86729a8bfdec",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is VBScript\nConditional Statements\n\nConditional Statements\nConditional statements?",
      "options": [
        "used to perform different actions for different decisions",
        "None of the above.",
        "true\nIf",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of VBScript\nConditional Statements\n\nConditional Statements\nConditional statements is 'used to perform different actions for different decisions'."
    },
    {
      "question": "What is executes a set of code when a condition?",
      "options": [
        "used to perform different actions for different decisions",
        "None of the above.",
        "None of the above.",
        "true\nIf"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of executes a set of code when a condition is 'true\nIf'."
    }
  ],
  "summary": "This tutorial covers VBScriptConditional Statements concepts and techniques. You'll learn how to use VBScriptConditional Statements effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of VBScriptConditional Statements and how to apply it in your projects."
}