{
  "id": "5a614985-c52b-450a-8355-6dd6216d5feb",
  "title": "ADOData Types",
  "slug": "adodata-types",
  "metadata": {
    "description": "Learn about ADOData Types with clear explanations and practical examples.",
    "keywords": [
      "access",
      "server",
      "oracle",
      "oledb",
      "decimal",
      "datetime",
      "integer",
      "long",
      "text",
      "number"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnASP",
    "subcategory": "ADO DataTypes"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "ADO\nData Types",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The table below shows the ADO Data Type mapping between Access, SQL Server, and Oracle:\nDataType Enum\nValue\nAccess\nSQLServer\nOracle\nadBigInt\n20\nBigInt (SQL Server 2000 +)\nadBinary\n128\nBinary\nTimeStamp\nRaw *\nadBoolean\n11\nYesNo\nBit\nadChar\n129\nChar\nChar\nadCurrency\n6\nCurrency\nMoney\nSmallMoney\nadDate\n7\nDate\nDateTime\nadDBTimeStamp\n135\nDateTime (Access 97 (ODBC))\nDateTime\nSmallDateTime\nDate\nadDecimal\n14\nDecimal *\nadDouble\n5\nDouble\nFloat\nFloat\nadGUID\n72\nReplicationID (Access 97 (OLEDB)), (Access 2000 (OLEDB))\nUniqueIdentifier (SQL Server 7.0 +)\nadIDispatch\n9\nadInteger\n3\nAutoNumber\nInteger\nLong\nIdentity (SQL Server 6.5)\nInt\nInt *\nadLongVarBinary\n205\nOLEObject\nImage\nLong Raw *\nBlob (Oracle 8.1.x)\nadLongVarChar\n201\nMemo (Access 97)\nHyperlink (Access 97)\nText\nLong *\nClob (Oracle 8.1.x)\nadLongVarWChar\n203\nMemo (Access 2000 (OLEDB))\nHyperlink (Access 2000 (OLEDB))\nNText (SQL Server 7.0 +)\nNClob (Oracle 8.1.x)\nadNumeric\n131\nDecimal (Access 2000 (OLEDB))\nDecimal\nNumeric\nDecimal\nInteger\nNumber\nSmallInt\nadSingle\n4\nSingle\nReal\nadSmallInt\n2\nInteger\nSmallInt\nadUnsignedTinyInt\n17\nByte\nTinyInt\nadVarBinary\n204\nReplicationID (Access 97)\nVarBinary\nadVarChar\n200\nText (Access 97)\nVarChar\nVarChar\nadVariant\n12\nSql_Variant (SQL Server 2000 +)\nVarChar2\nadVarWChar\n202\nText (Access 2000 (OLEDB))\nNVarChar (SQL Server 7.0 +)\nNVarChar2\nadWChar\n130\nNChar (SQL Server 7.0 +)\n* In Oracle 8.0.x - decimal and int are equal to number and number(10).\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "a1a6f023-78bc-4c31-a379-559502706e3a",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "6cf437fb-e029-442a-b56b-7a53885b54b4",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "bab7594f-99a2-491d-9df5-3b4dc863386d",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is decimal and int?",
      "options": [
        "None of the above.",
        "None of the above.",
        "None of the above.",
        "equal to number and number(10)"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of decimal and int is 'equal to number and number(10)'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers ADOData Types concepts and techniques. You'll learn how to use ADOData Types effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of ADOData Types and how to apply it in your projects."
}