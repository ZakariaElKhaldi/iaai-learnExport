{
  "id": "b8b99360-b1b3-4a7c-b892-9ee146b4482f",
  "title": "ASPVariables",
  "slug": "aspvariables",
  "metadata": {
    "description": "Learn about ASPVariables with clear explanations and practical examples.",
    "keywords": [
      "variables",
      "variable",
      "value",
      "array",
      "like",
      "carname",
      "vbscript",
      "example",
      "name",
      "declare"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnASP",
    "subcategory": "ASP Variables"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "ASP\nVariables",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Variables are \"containers\" for storing information.\nMore Examples\nDeclare a variable\nThis example demonstrates how to declare a variable, assign a value to it, and use the value in a text.\nCreate an array\nArrays are used to store a series of related data items. This example demonstrates how to \ncreate an array that stores names.\nLoop through the HTML headings\nHow to loop through the six headings in HTML.\nTime-based greeting using VBScript\nThis example will display a different message to the user depending on the time on the server.\nTime-based greeting using JavaScript\nThis example is the same as the one above, but the syntax is different.\nCreate and change a variable\nHow to create a variable, assign a value to it, and then change the value of it.\nInsert a variable value in a text\nHow to insert a variable value in a text.\nDo You Remember Algebra from School?\nDo you remember algebra from school? x=5, y=6, z=x+y\nDo you remember that a letter (like x) could be used to hold a value (like 5), and that you could use the information above to calculate the value of z to be 11?\nThese letters are called\nvariables\n, and variables can be used to hold values (x=5) or expressions (z=x+y).\nVBScript Variables\nAs with algebra, VBScript variables are used to hold values or expressions.\nA variable can have a short name, like x, or a more descriptive name, like carname.\nRules for VBScript variable names:\nMust begin with a letter\nCannot contain a period (.)\nCannot exceed 255 characters\nIn VBScript, all variables are of type\nvariant\n, that can store different types of data.\nDeclaring (Creating) VBScript Variables\nCreating variables in VBScript is most often referred to as \"declaring\" variables.\nYou can declare VBScript variables with the Dim, Public or the Private statement. Like this:\nDim x\nDim carname\nNow you have created two variables. The name of the variables are \"x\" and \"carname\".\nYou can also declare variables by using its name in a script. Like this:\ncarname=\"Volvo\"\nNow you have also created a variable. The name of the variable is \"carname\". However, this method is not a good practice, because you can misspell the variable name later\nin your script, and that can cause strange results when your script is running.\nIf you misspell for example the \"carname\" variable to \"carnime\", \nthe script will automatically create a new variable called \"carnime\".\u00a0 To prevent your script from doing this, you can use the Option Explicit statement.\nThis statement forces you to declare all your variables with the dim, public or \nprivate statement.\nPut the Option Explicit statement on the top of your script. Like this:\nOption Explicit\nDim carname\ncarname=some value\nAssigning Values to Variables\nYou assign a value to a variable like this:\ncarname=\"Volvo\"\nx=10\nThe variable name is on the left side of the expression and the value you want to\nassign to the variable is on the right. Now the variable \"carname\" has\nthe value of \"Volvo\", and the variable \"x\" has the value of \"10\".\nVBScript Array Variables\nAn array variable is used to store multiple values in a single variable.\nIn the following example, an array containing\n3 elements is declared:\nDim names(2)\nThe number shown in the parentheses is 2. We start at zero so this array contains 3 elements. This is a fixed-size array.\nYou assign data to each of the elements of the array like this:\nnames(0)=\"Tove\"\nnames(1)=\"Jani\"\nnames(2)=\"Stale\"\nSimilarly, the data can be retrieved from any element using the index of the particular array element you want.\nLike this:\nmother=names(0)\nYou can have up to 60 dimensions in an array. Multiple dimensions are declared by separating\nthe numbers in the parentheses with commas. Here we have a two-dimensional array consisting of 5 rows and 7 columns:\nDim table(4,6)\nAssign data to a two-dimensional array:\nExample\n<html>\n<body>\n<%\nDim x(2,2)\nx(0,0)=\"Volvo\"\nx(0,1)=\"BMW\"\nx(0,2)=\"Ford\"\nx(1,0)=\"Apple\"\nx(1,1)=\"Orange\"\nx(1,2)=\"Banana\"\nx(2,0)=\"Coke\"\nx(2,1)=\"Pepsi\"\nx(2,2)=\"Sprite\"\nfor i=0 to 2\nresponse.write(\"<p>\")\nfor j=0 to 2\nresponse.write(x(i,j) & \"<br />\")\n\nresponse.write(\"</p>\")\n\n%>\n</body>\n</html>\nShow Example \u00bb\nThe Lifetime of Variables\nA variable declared outside a procedure can be accessed and changed by any script in the ASP file.\nA variable declared inside a procedure is created and destroyed every time the procedure is executed. No scripts outside the procedure can access or change the variable.\nTo declare variables accessible to more than one ASP file, declare them as session variables or application variables.\nSession Variables\nSession variables are used to store information about ONE single user, and are available to all pages in one application. Typically information stored in session variables are name, id, and preferences.\nApplication Variables\nApplication variables are also available to all pages in one application. Application variables are used to store information about ALL users in one specific application.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<html>\n<body>\n<%\nDim x(2,2)\nx(0,0)=\"Volvo\"\nx(0,1)=\"BMW\"\nx(0,2)=\"Ford\"\nx(1,0)=\"Apple\"\nx(1,1)=\"Orange\"\nx(1,2)=\"Banana\"\nx(2,0)=\"Coke\"\nx(2,1)=\"Pepsi\"\nx(2,2)=\"Sprite\"\nfor i=0 to 2\nresponse.write(\"<p>\")\nfor j=0 to 2\nresponse.write(x(i,j) & \"<br />\")\nnext\nresponse.write(\"</p>\")\nnext\n%>\n</body>\n</html>",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<html>\n<body>\n<%\nDim x(2,2)\nx(0,0)=\"Volvo\"\nx(0,1)=\"BMW\"\nx(0,2)=\"Ford\"\nx(1,0)=\"Apple\"\nx(1,1)=\"Orange\"\nx(1,2)=\"Banana\"\nx(2,0)=\"Coke\"\nx(2,1)=\"Pepsi\"\nx(2,2)=\"Sprite\"\nfor i=0 to 2\nresponse.write(\"<p>\")\n# TODO: Complete this line\nresponse.write(x(i,j) & \"<br />\")\nnext\nresponse.write(\"</p>\")\nnext\n%>\n</body>\n</html>",
      "solution": "<html>\n<body>\n<%\nDim x(2,2)\nx(0,0)=\"Volvo\"\nx(0,1)=\"BMW\"\nx(0,2)=\"Ford\"\nx(1,0)=\"Apple\"\nx(1,1)=\"Orange\"\nx(1,2)=\"Banana\"\nx(2,0)=\"Coke\"\nx(2,1)=\"Pepsi\"\nx(2,2)=\"Sprite\"\nfor i=0 to 2\nresponse.write(\"<p>\")\nfor j=0 to 2\nresponse.write(x(i,j) & \"<br />\")\nnext\nresponse.write(\"</p>\")\nnext\n%>\n</body>\n</html>"
    },
    {
      "title": "Create a Layout",
      "description": "Build a simple layout using the techniques from this tutorial.",
      "difficulty": "easy",
      "starter_code": "<!-- Add your code here -->",
      "solution": "<!-- Example solution would go here -->"
    }
  ],
  "related_topics": [
    {
      "id": "7d82c10c-b41f-40a7-8ca4-066e78b1c51a",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "c400d9d8-00d5-4ae4-93be-a0081eb27f05",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "77305126-6495-4844-ace1-dd447c778a4b",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is ASP\nVariables\n\nVariables?",
      "options": [
        "\"containers\" for storing information",
        "None of the above.",
        "None of the above.",
        "used to store a series of related data items"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of ASP\nVariables\n\nVariables is '\"containers\" for storing information'."
    },
    {
      "question": "What is Create an array\nArrays?",
      "options": [
        "\"containers\" for storing information",
        "used to store a series of related data items",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Create an array\nArrays is 'used to store a series of related data items'."
    }
  ],
  "summary": "This tutorial covers ASPVariables concepts and techniques. You'll learn how to use ASPVariables effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of ASPVariables and how to apply it in your projects."
}