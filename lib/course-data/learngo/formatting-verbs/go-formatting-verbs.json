{
  "id": "064467b4-6f46-438d-9693-065f62197efc",
  "title": "Go Formatting Verbs",
  "slug": "go-formatting-verbs",
  "metadata": {
    "description": "Learn about Go Formatting Verbs with clear explanations and practical examples.",
    "keywords": [
      "go",
      "printf",
      "verbs",
      "prints",
      "value",
      "main",
      "formatting",
      "hello",
      "base",
      "string",
      "width"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Go Basics"
    ],
    "estimated_time": 5,
    "category": "LearnGo",
    "subcategory": "Formatting Verbs"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Go Formatting Verbs",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Formatting Verbs for Printf()\nGo offers several formatting verbs that can be used with the\nPrintf()\nfunction.\nGeneral Formatting Verbs\nThe following verbs can be used with all data types:\nVerb\nDescription\n%v\nPrints the value in the default format\n%#v\nPrints the value in Go-syntax format\n%T\nPrints the type of the value\n%%\nPrints the % sign\nExample\npackage main\nimport (\"fmt\")\nfunc main() {\nvar i = 15.5\nvar txt = \"Hello World!\"\nfmt.Printf(\"%v\\n\", i)\nfmt.Printf(\"%#v\\n\", i)\nfmt.Printf(\"%v%%\\n\", i)\nfmt.Printf(\"%T\\n\", i)\nfmt.Printf(\"%v\\n\", txt)\nfmt.Printf(\"%#v\\n\", txt)\nfmt.Printf(\"%T\\n\", txt)\n}\nResult:\n15.5\n15.5\n15.5%\nfloat64\nHello World!\n\"Hello World!\"\nstring\n\nInteger Formatting Verbs\nThe following verbs can be used with the integer data type:\nVerb\nDescription\n%b\nBase 2\n%d\nBase 10\n%+d\nBase 10 and always show sign\n%o\nBase 8\n%O\nBase 8, with leading 0o\n%x\nBase 16, lowercase\n%X\nBase 16, uppercase\n%#x\nBase 16, with leading 0x\n%4d\nPad with spaces (width 4, right justified)\n%-4d\nPad with spaces (width 4, left justified)\n%04d\nPad with zeroes (width 4\nExample\npackage main\nimport (\"fmt\")\nfunc main() {\nvar i = 15\nfmt.Printf(\"%b\\n\", i)\nfmt.Printf(\"%d\\n\", i)\nfmt.Printf(\"%+d\\n\", i)\nfmt.Printf(\"%o\\n\", i)\nfmt.Printf(\"%O\\n\", i)\nfmt.Printf(\"%x\\n\", i)\nfmt.Printf(\"%X\\n\", i)\nfmt.Printf(\"%#x\\n\", i)\nfmt.Printf(\"%4d\\n\", i)\nfmt.Printf(\"%-4d\\n\", i)\nfmt.Printf(\"%04d\\n\", i)\n}\nResult:\n1111\n15\n+15\n17\n0o17\nf\nF\n0xf\n15\n15\n0015\n\nString Formatting Verbs\nThe following verbs can be used with the string data type:\nVerb\nDescription\n%s\nPrints the value as plain string\n%q\nPrints the value as a double-quoted string\n%8s\nPrints the value as plain string (width 8, right justified)\n%-8s\nPrints the value as plain string (width 8, left justified)\n%x\nPrints the value as hex dump of byte values\n% x\nPrints the value as hex dump with spaces\nExample\npackage main\nimport (\"fmt\")\nfunc main() {\nvar txt = \"Hello\"\nfmt.Printf(\"%s\\n\", txt)\nfmt.Printf(\"%q\\n\", txt)\nfmt.Printf(\"%8s\\n\", txt)\nfmt.Printf(\"%-8s\\n\", txt)\nfmt.Printf(\"%x\\n\", txt)\nfmt.Printf(\"% x\\n\", txt)\n}\nResult:\nHello\n\"Hello\"\nHello\nHello\n48656c6c6f\n48 65 6c 6c 6f\n\nBoolean Formatting Verbs\nThe following verb can be used with the boolean data type:\nVerb\nDescription\n%t\nValue of the boolean operator in true or false format (same as using %v)\nExample\npackage main\nimport (\"fmt\")\nfunc main() {\nvar i = true\nvar j = false\nfmt.Printf(\"%t\\n\", i)\nfmt.Printf(\"%t\\n\", j)\n}\nResult:\ntrue\nfalse\n\nFloat Formatting Verbs\nThe following verbs can be used with the float data type:\nVerb\nDescription\n%e\nScientific notation with 'e' as exponent\n%f\nDecimal point, no exponent\n%.2f\nDefault width, precision 2\n%6.2f\nWidth 6, precision 2\n%g\nExponent as needed, only necessary digits\nExample\npackage main\nimport (\"fmt\")\nfunc main() {\nvar i = 3.141\nfmt.Printf(\"%e\\n\", i)\nfmt.Printf(\"%f\\n\", i)\nfmt.Printf(\"%.2f\\n\", i)\nfmt.Printf(\"%6.2f\\n\", i)\nfmt.Printf(\"%g\\n\", i)\n}\nResult:\n3.141000e+00\n3.141000\n3.14\n3.14\n3.141\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "package main\nimport (\"fmt\")\nfunc main() {\nvar i = 15.5\nvar txt = \"Hello World!\"\nfmt.Printf(\"%v\\n\", i)\nfmt.Printf(\"%#v\\n\", i)\nfmt.Printf(\"%v%%\\n\", i)\nfmt.Printf(\"%T\\n\", i)\nfmt.Printf(\"%v\\n\", txt)\nfmt.Printf(\"%#v\\n\", txt)\nfmt.Printf(\"%T\\n\", txt)\n}",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "package main\nimport (\"fmt\")\nfunc main() {\nvar i = 15\nfmt.Printf(\"%b\\n\", i)\nfmt.Printf(\"%d\\n\", i)\nfmt.Printf(\"%+d\\n\", i)\nfmt.Printf(\"%o\\n\", i)\nfmt.Printf(\"%O\\n\", i)\nfmt.Printf(\"%x\\n\", i)\nfmt.Printf(\"%X\\n\", i)\nfmt.Printf(\"%#x\\n\", i)\nfmt.Printf(\"%4d\\n\", i)\nfmt.Printf(\"%-4d\\n\", i)\nfmt.Printf(\"%04d\\n\", i)\n}",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "package main\nimport (\"fmt\")\nfunc main() {\nvar txt = \"Hello\"\nfmt.Printf(\"%s\\n\", txt)\nfmt.Printf(\"%q\\n\", txt)\nfmt.Printf(\"%8s\\n\", txt)\nfmt.Printf(\"%-8s\\n\", txt)\nfmt.Printf(\"%x\\n\", txt)\nfmt.Printf(\"% x\\n\", txt)\n}",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "package main\nimport (\"fmt\")\nfunc main() {\nvar i = true\nvar j = false\nfmt.Printf(\"%t\\n\", i)\nfmt.Printf(\"%t\\n\", j)\n}",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "package main\nimport (\"fmt\")\nfunc main() {\nvar i = 3.141\nfmt.Printf(\"%e\\n\", i)\nfmt.Printf(\"%f\\n\", i)\nfmt.Printf(\"%.2f\\n\", i)\nfmt.Printf(\"%6.2f\\n\", i)\nfmt.Printf(\"%g\\n\", i)\n}",
      "language": "java",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "package main\nimport (\"fmt\")\nfunc main() {\nvar i = 15.5\nvar txt = \"Hello World!\"\nfmt.Printf(\"%v\\n\", i)\nfmt.Printf(\"%#v\\n\", i)\nfmt.Printf(\"%v%%\\n\", i)\nfmt.Printf(\"%T\\n\", i)\n# TODO: Complete this line\nfmt.Printf(\"%#v\\n\", txt)\nfmt.Printf(\"%T\\n\", txt)\n}",
      "solution": "package main\nimport (\"fmt\")\nfunc main() {\nvar i = 15.5\nvar txt = \"Hello World!\"\nfmt.Printf(\"%v\\n\", i)\nfmt.Printf(\"%#v\\n\", i)\nfmt.Printf(\"%v%%\\n\", i)\nfmt.Printf(\"%T\\n\", i)\nfmt.Printf(\"%v\\n\", txt)\nfmt.Printf(\"%#v\\n\", txt)\nfmt.Printf(\"%T\\n\", txt)\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "package main\nimport (\"fmt\")\nfunc main() {\nvar i = 15\nfmt.Printf(\"%b\\n\", i)\nfmt.Printf(\"%d\\n\", i)\nfmt.Printf(\"%+d\\n\", i)\nfmt.Printf(\"%o\\n\", i)\nfmt.Printf(\"%O\\n\", i)\n# TODO: Complete this line\nfmt.Printf(\"%X\\n\", i)\nfmt.Printf(\"%#x\\n\", i)\nfmt.Printf(\"%4d\\n\", i)\nfmt.Printf(\"%-4d\\n\", i)\nfmt.Printf(\"%04d\\n\", i)\n}",
      "solution": "package main\nimport (\"fmt\")\nfunc main() {\nvar i = 15\nfmt.Printf(\"%b\\n\", i)\nfmt.Printf(\"%d\\n\", i)\nfmt.Printf(\"%+d\\n\", i)\nfmt.Printf(\"%o\\n\", i)\nfmt.Printf(\"%O\\n\", i)\nfmt.Printf(\"%x\\n\", i)\nfmt.Printf(\"%X\\n\", i)\nfmt.Printf(\"%#x\\n\", i)\nfmt.Printf(\"%4d\\n\", i)\nfmt.Printf(\"%-4d\\n\", i)\nfmt.Printf(\"%04d\\n\", i)\n}"
    }
  ],
  "related_topics": [
    {
      "id": "a25e330a-3d87-4654-b3d3-dae02961a572",
      "title": "Go Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "ebaf2336-e39e-4bab-9eca-e2347a7249ee",
      "title": "Go Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "8a6bceaf-5bf3-42d3-b64e-fb1458af8127",
      "title": "Go Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers Go Formatting Verbs concepts and techniques. You'll learn how to use Go Formatting Verbs effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Go Formatting Verbs and how to apply it in your projects."
}