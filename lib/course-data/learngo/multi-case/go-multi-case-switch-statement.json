{
  "id": "3dc32336-38bf-40ea-acc2-b13d19de43c3",
  "title": "Go Multi-case switch Statement",
  "slug": "go-multi-case-switch-statement",
  "metadata": {
    "description": "Learn about Go Multi-case switch Statement with clear explanations and practical examples.",
    "keywords": [
      "c",
      "case",
      "switch",
      "expression",
      "weekday",
      "println",
      "multi",
      "statement",
      "code",
      "block",
      "example"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnGo",
    "subcategory": "Multi-case"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Go Multi-case switch Statement",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The Multi-case switch Statement\nIt is possible to have multiple values for each\ncase\nin the\nswitch\nstatement:\nSyntax\nswitch\nexpression\n{\ncase\nx\n,\ny\n:\n// code block if expression is evaluated to x or y\ncase\nv\n,\nw\n:\n// code block if expression is evaluated to v or w\ncase\nz\n:\n...\ndefault:\n// code block if expression is not found in any cases\n}\nMulti-case switch Example\nThe example below uses the weekday number to return different text:\nExample\npackage main\nimport (\"fmt\")\nfunc main() {\nday := 5\nswitch day {\ncase 1,3,5:\nfmt.Println(\"Odd weekday\")\ncase 2,4:\nfmt.Println(\"Even weekday\")\ncase 6,7:\nfmt.Println(\"Weekend\")\ndefault:\nfmt.Println(\"Invalid day of day number\")\n}\n}\nResult:\nOdd weekday\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Syntax",
      "content": "",
      "order": 3,
      "code": "switch\nexpression\n{\ncase\nx\n,\ny\n:\n// code block if expression is evaluated to x or y\ncase\nv\n,\nw\n:\n// code block if expression is evaluated to v or w\ncase\nz\n:\n...\ndefault:\n// code block if expression is not found in any cases\n}",
      "language": "java",
      "explanation": "Example of syntax"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "package main\nimport (\"fmt\")\nfunc main() {\nday := 5\nswitch day {\ncase 1,3,5:\nfmt.Println(\"Odd weekday\")\ncase 2,4:\nfmt.Println(\"Even weekday\")\ncase 6,7:\nfmt.Println(\"Weekend\")\ndefault:\nfmt.Println(\"Invalid day of day number\")\n}\n}",
      "language": "java",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "switch\nexpression\n{\ncase\nx\n,\n# TODO: Complete this line\n:\n// code block if expression is evaluated to x or y\ncase\nv\n,\nw\n:\n// code block if expression is evaluated to v or w\ncase\nz\n:\n...\ndefault:\n// code block if expression is not found in any cases\n}",
      "solution": "switch\nexpression\n{\ncase\nx\n,\ny\n:\n// code block if expression is evaluated to x or y\ncase\nv\n,\nw\n:\n// code block if expression is evaluated to v or w\ncase\nz\n:\n...\ndefault:\n// code block if expression is not found in any cases\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "package main\nimport (\"fmt\")\nfunc main() {\nday := 5\nswitch day {\n# TODO: Complete this line\nfmt.Println(\"Odd weekday\")\ncase 2,4:\nfmt.Println(\"Even weekday\")\ncase 6,7:\nfmt.Println(\"Weekend\")\ndefault:\nfmt.Println(\"Invalid day of day number\")\n}\n}",
      "solution": "package main\nimport (\"fmt\")\nfunc main() {\nday := 5\nswitch day {\ncase 1,3,5:\nfmt.Println(\"Odd weekday\")\ncase 2,4:\nfmt.Println(\"Even weekday\")\ncase 6,7:\nfmt.Println(\"Weekend\")\ndefault:\nfmt.Println(\"Invalid day of day number\")\n}\n}"
    }
  ],
  "related_topics": [
    {
      "id": "48761731-62fb-4756-9762-7ecaa46bd324",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "61558e8a-b054-4efd-a080-292a248bc2b2",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "51ca1e4d-3b94-4c20-8b2d-d60767ec2be4",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is case switch Statement\nIt?",
      "options": [
        "not found in any cases\n}\nMulti-case switch Example\nThe example below uses the weekday number to return different text:\nExample\npackage main\nimport (\"fmt\")\nfunc main() {\nday := 5\nswitch day {\ncase 1",
        "possible to have multiple values for each\ncase\nin the\nswitch\nstatement:\nSyntax\nswitch\nexpression\n{\ncase\nx",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of case switch Statement\nIt is 'possible to have multiple values for each\ncase\nin the\nswitch\nstatement:\nSyntax\nswitch\nexpression\n{\ncase\nx'."
    },
    {
      "question": "What is code block if expression?",
      "options": [
        "None of the above.",
        "possible to have multiple values for each\ncase\nin the\nswitch\nstatement:\nSyntax\nswitch\nexpression\n{\ncase\nx",
        "not found in any cases\n}\nMulti-case switch Example\nThe example below uses the weekday number to return different text:\nExample\npackage main\nimport (\"fmt\")\nfunc main() {\nday := 5\nswitch day {\ncase 1",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of code block if expression is 'not found in any cases\n}\nMulti-case switch Example\nThe example below uses the weekday number to return different text:\nExample\npackage main\nimport (\"fmt\")\nfunc main() {\nday := 5\nswitch day {\ncase 1'."
    }
  ],
  "summary": "This tutorial covers Go Multi-case switch Statement concepts and techniques. You'll learn how to use Go Multi-case switch Statement effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Go Multi-case switch Statement and how to apply it in your projects."
}