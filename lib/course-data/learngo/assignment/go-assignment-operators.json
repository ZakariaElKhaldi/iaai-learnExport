{
  "id": "836f0452-5dc1-4dc0-ad3e-d0a126033cf2",
  "title": "Go Assignment Operators",
  "slug": "go-assignment-operators",
  "metadata": {
    "description": "Learn about Go Assignment Operators with clear explanations and practical examples.",
    "keywords": [
      "go",
      "assignment",
      "operators",
      "example",
      "main",
      "operator",
      "assign",
      "value",
      "variable",
      "package",
      "import"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Go Basics"
    ],
    "estimated_time": 5,
    "category": "LearnGo",
    "subcategory": "Assignment"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Go Assignment Operators",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Go Assignment Operators\n\nAssignment Operators\nAssignment operators are used to assign values to variables",
      "content": ".\nIn the example below, we use the\nassignment\noperator (\n=\n) to assign the value\n10\nto a variable called\nx\n:\nExample\npackage main\nimport (\"fmt\")\nfunc main() {\nvar x = 10\nfmt.Println(x)\n}\n\nThe\naddition assignment\noperator (\n+=\n) adds a value to a variable:\nExample\npackage main\nimport (\"fmt\")\nfunc main() {\nvar x = 10\nx +=5\nfmt.Println(x)\n}\n\nA list of all assignment operators:",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Try it",
      "content": "=\nx = 5\nx = 5\nTry it \u00bb\n+=\nx += 3\nx = x + 3\nTry it \u00bb\n-=\nx -= 3\nx = x - 3\nTry it \u00bb\n*=\nx *= 3\nx = x * 3\nTry it \u00bb\n/=\nx /= 3\nx = x / 3\nTry it \u00bb\n%=\nx %= 3\nx = x % 3\nTry it \u00bb\n&=\nx &= 3\nx = x & 3\nTry it \u00bb\n|=\nx |= 3\nx = x | 3\nTry it \u00bb\n^=\nx ^= 3\nx = x ^ 3\nTry it \u00bb\n>>=\nx >>= 3\nx = x >> 3\nTry it \u00bb\n<<=\nx <<= 3\nx = x << 3\nTry it \u00bb\n\n\u2605\n+1",
      "order": 3,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "package main\nimport (\"fmt\")\nfunc main() {\nvar x = 10\nfmt.Println(x)\n}",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "package main\nimport (\"fmt\")\nfunc main() {\nvar x = 10\nx +=5\nfmt.Println(x)\n}",
      "language": "java",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "package main\nimport (\"fmt\")\n# TODO: Complete this line\nvar x = 10\nfmt.Println(x)\n}",
      "solution": "package main\nimport (\"fmt\")\nfunc main() {\nvar x = 10\nfmt.Println(x)\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "package main\nimport (\"fmt\")\nfunc main() {\n# TODO: Complete this line\nx +=5\nfmt.Println(x)\n}",
      "solution": "package main\nimport (\"fmt\")\nfunc main() {\nvar x = 10\nx +=5\nfmt.Println(x)\n}"
    }
  ],
  "related_topics": [
    {
      "id": "cb0c3e91-ef67-4a50-b3b4-0087722dad57",
      "title": "Go Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "47e13757-fae8-41b6-89a9-474f896505ea",
      "title": "Go Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "afac46d8-5bc6-46cd-91f4-e711da0bd83b",
      "title": "Go Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Go Assignment Operators\n\nAssignment Operators\nAssignment operators?",
      "options": [
        "None of the above.",
        "None of the above.",
        "None of the above.",
        "used to assign values to variables"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Go Assignment Operators\n\nAssignment Operators\nAssignment operators is 'used to assign values to variables'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers Go Assignment Operators concepts and techniques. You'll learn how to use Go Assignment Operators effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Go Assignment Operators and how to apply it in your projects."
}