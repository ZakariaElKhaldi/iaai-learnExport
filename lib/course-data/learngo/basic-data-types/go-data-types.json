{
  "id": "1cd32ef5-9b93-4f23-b889-56d3292ba634",
  "title": "Go Data Types",
  "slug": "go-data-types",
  "metadata": {
    "description": "Learn about Go Data Types with clear explanations and practical examples.",
    "keywords": [
      "go",
      "data",
      "types",
      "type",
      "string",
      "main",
      "println",
      "represents",
      "boolean",
      "true",
      "integer"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "Go Basics"
    ],
    "estimated_time": 5,
    "category": "LearnGo",
    "subcategory": "Basic Data Types"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Go Data Types",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Go Data Types\nData type is an important concept in programming. Data type specifies the size and type of variable values.\nGo is statically typed, meaning that once a variable type is defined, it can only store data of that type.\nGo has three basic data types:\nbool\n: represents a boolean value and is either true or false\nNumeric\n: represents integer types, floating point values, \n  and complex types\nstring\n: represents a string value\nExample\nThis example shows some of the different data types in Go:\npackage main\nimport (\"fmt\")\nfunc main() {\nvar a bool = true\n// Boolean\nvar b int = 5\n// Integer\nvar c float32 = 3.14\n// Floating point number\nvar d string = \"Hi!\"\n// String\nfmt.Println(\"Boolean: \", a)\nfmt.Println(\"Integer: \", b)\nfmt.Println(\"Float:   \u00a0\u00a0\", c)\nfmt.Println(\"String: \u00a0\", d)\n}\n\nGo Exercises\nTest Yourself With Exercises\nExercise:\nAdd the correct data type for the following variables:\npackage main   \nimport (\"fmt\")\nfunc main() {\n  var myNum\n= 90\n  var myWord\n= \"Hello\"\n  var myBool\n= true\n}\nSubmit Answer \u00bb\nStart the Exercise\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "package main\nimport (\"fmt\")\nfunc main() {\nvar a bool = true\n// Boolean\nvar b int = 5\n// Integer\nvar c float32 = 3.14\n// Floating point number\nvar d string = \"Hi!\"\n// String\nfmt.Println(\"Boolean: \", a)\nfmt.Println(\"Integer: \", b)\nfmt.Println(\"Float:   \u00a0\u00a0\", c)\nfmt.Println(\"String: \u00a0\", d)\n}",
      "language": "java",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "package main\nimport (\"fmt\")\nfunc main() {\nvar a bool = true\n// Boolean\nvar b int = 5\n// Integer\nvar c float32 = 3.14\n// Floating point number\nvar d string = \"Hi!\"\n// String\nfmt.Println(\"Boolean: \", a)\nfmt.Println(\"Integer: \", b)\n# TODO: Complete this line\nfmt.Println(\"String: \u00a0\", d)\n}",
      "solution": "package main\nimport (\"fmt\")\nfunc main() {\nvar a bool = true\n// Boolean\nvar b int = 5\n// Integer\nvar c float32 = 3.14\n// Floating point number\nvar d string = \"Hi!\"\n// String\nfmt.Println(\"Boolean: \", a)\nfmt.Println(\"Integer: \", b)\nfmt.Println(\"Float:   \u00a0\u00a0\", c)\nfmt.Println(\"String: \u00a0\", d)\n}"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "8aac9370-e0dd-4b37-bc28-48ee6a96faf6",
      "title": "Go Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "ebb9c2eb-73e8-4bab-a10a-48f8259831b9",
      "title": "Go Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "3d519de6-d3af-48d0-a83c-f5adede1eb43",
      "title": "Go Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Go Data Types\n\nGo Data Types\nData type?",
      "options": [
        "statically typed",
        "None of the above.",
        "an important concept in programming",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Go Data Types\n\nGo Data Types\nData type is 'an important concept in programming'."
    },
    {
      "question": "What is Go?",
      "options": [
        "None of the above.",
        "an important concept in programming",
        "statically typed",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Go is 'statically typed'."
    }
  ],
  "summary": "This tutorial covers Go Data Types concepts and techniques. You'll learn how to use Go Data Types effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Go Data Types and how to apply it in your projects."
}