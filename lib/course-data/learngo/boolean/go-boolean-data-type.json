{
  "id": "362232f3-9286-4000-9fee-04963dc22f48",
  "title": "Go Boolean Data Type",
  "slug": "go-boolean-data-type",
  "metadata": {
    "description": "Learn about Go Boolean Data Type with clear explanations and practical examples.",
    "keywords": [
      "go",
      "true",
      "boolean",
      "value",
      "data",
      "type",
      "declaration",
      "initial",
      "println",
      "returns",
      "bool"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Go Basics"
    ],
    "estimated_time": 5,
    "category": "LearnGo",
    "subcategory": "Boolean"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Go Boolean Data Type",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Boolean Data Type\nA boolean data type is declared with the\nbool\nkeyword and can only take the values\ntrue\nor\nfalse\n.\nThe default value of a boolean data type is\nfalse\n.\nExample\nThis example shows some different ways to declare Boolean variables:\npackage main\nimport (\"fmt\")\nfunc main() {\nvar b1 bool = true\n// typed declaration with initial value\nvar b2 = true\n// untyped declaration with initial value\nvar b3 bool\n// typed declaration without initial value\nb4 := true\n// untyped declaration with initial value\nfmt.Println(b1)\n// Returns true\nfmt.Println(b2)\n// Returns true\nfmt.Println(b3)\n// Returns false\nfmt.Println(b4)\n// Returns true\n}\n\nNote:\nBoolean values are mostly used for conditional testing which you will learn \n  more about in the\nGo Conditions\nchapter.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "package main\nimport (\"fmt\")\nfunc main() {\nvar b1 bool = true\n// typed declaration with initial value\nvar b2 = true\n// untyped declaration with initial value\nvar b3 bool\n// typed declaration without initial value\nb4 := true\n// untyped declaration with initial value\nfmt.Println(b1)\n// Returns true\nfmt.Println(b2)\n// Returns true\nfmt.Println(b3)\n// Returns false\nfmt.Println(b4)\n// Returns true\n}",
      "language": "java",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "package main\n# TODO: Complete this line\nfunc main() {\nvar b1 bool = true\n// typed declaration with initial value\nvar b2 = true\n// untyped declaration with initial value\nvar b3 bool\n// typed declaration without initial value\nb4 := true\n// untyped declaration with initial value\nfmt.Println(b1)\n// Returns true\nfmt.Println(b2)\n// Returns true\nfmt.Println(b3)\n// Returns false\nfmt.Println(b4)\n// Returns true\n}",
      "solution": "package main\nimport (\"fmt\")\nfunc main() {\nvar b1 bool = true\n// typed declaration with initial value\nvar b2 = true\n// untyped declaration with initial value\nvar b3 bool\n// typed declaration without initial value\nb4 := true\n// untyped declaration with initial value\nfmt.Println(b1)\n// Returns true\nfmt.Println(b2)\n// Returns true\nfmt.Println(b3)\n// Returns false\nfmt.Println(b4)\n// Returns true\n}"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "92a8eff6-2925-459c-8557-1d9ef0954f13",
      "title": "Go Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "fc666fe2-86eb-4d7b-8a4c-3c2fb46d1491",
      "title": "Go Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "4bac0584-fc67-4cb7-9ac7-c7a9684307ff",
      "title": "Go Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Go Boolean Data Type\n\nBoolean Data Type\nA boolean data type?",
      "options": [
        "declared with the\nbool\nkeyword and can only take the values\ntrue\nor\nfalse",
        "None of the above.",
        "false",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of Go Boolean Data Type\n\nBoolean Data Type\nA boolean data type is 'declared with the\nbool\nkeyword and can only take the values\ntrue\nor\nfalse'."
    },
    {
      "question": "What is The default value of a boolean data type?",
      "options": [
        "false",
        "declared with the\nbool\nkeyword and can only take the values\ntrue\nor\nfalse",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of The default value of a boolean data type is 'false'."
    }
  ],
  "summary": "This tutorial covers Go Boolean Data Type concepts and techniques. You'll learn how to use Go Boolean Data Type effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Go Boolean Data Type and how to apply it in your projects."
}