{
  "id": "4cc30462-d50a-4080-adff-87d8ba0969bc",
  "title": "Go Output Functions",
  "slug": "go-output-functions",
  "metadata": {
    "description": "Learn about Go Output Functions with clear explanations and practical examples.",
    "keywords": [
      "c",
      "print",
      "main",
      "hello",
      "world",
      "string",
      "arguments",
      "example",
      "package",
      "import",
      "func"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnGo",
    "subcategory": "Output Functions"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Go Output Functions",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Go has three functions to output text:\nPrint()\nPrintln()\nPrintf()\nThe Print() Function\nThe\nPrint()\nfunction prints its arguments with their default format.\nExample\nPrint the values of\ni\nand\nj\n:\npackage main\nimport (\"fmt\")\nfunc main() {\nvar i,j string = \"Hello\",\"World\"\nfmt.Print(i)\nfmt.Print(j)\n}\nResult:\nHelloWorld\n\nExample\nIf we want to print the arguments in new lines, we need to use\n\\n\n.\npackage main\nimport (\"fmt\")\nfunc main() {\nvar i,j string = \"Hello\",\"World\"\nfmt.Print(i, \"\\n\")\nfmt.Print(j, \"\\n\")\n}\nResult:\nHello\nWorld\n\nTip:\n\\n\ncreates new lines.\nExample\nIt is also possible to only use one\nPrint()\nfor printing multiple variables.\npackage main\nimport (\"fmt\")\nfunc main() {\nvar i,j string = \"Hello\",\"World\"\nfmt.Print(i, \"\\n\",j)\n}\nResult:\nHello\nWorld\n\nExample\nIf we want to add a space between string arguments, we need to use \" \":\npackage main\nimport (\"fmt\")\nfunc main() {\nvar i,j string = \"Hello\",\"World\"\nfmt.Print(i, \" \", j)\n}\nResult:\nHello World\n\nExample\nPrint()\ninserts a space between the arguments if\nneither\nare strings:\npackage main\nimport (\"fmt\")\nfunc main() {\nvar i,j = 10,20\nfmt.Print(i,j)\n}\nResult:\n10 20\n\nThe Println() Function\nThe\nPrintln()\nfunction is similar to\nPrint()\nwith the difference that \na whitespace is added between the arguments, and a newline is added at the end:\nExample\npackage main\nimport (\"fmt\")\nfunc main() {\nvar i,j string = \"Hello\",\"World\"\nfmt.Println(i,j)\n}\nResult:\nHello World\n\nThe Printf() Function\nThe\nPrintf()\nfunction first formats its argument based on the given formatting \nverb and then prints them.\nHere we will use two formatting verbs:\n%v\nis used to print the\nvalue\nof the arguments\n%T\nis used to print the\ntype\nof the arguments\nExample\npackage main\nimport (\"fmt\")\nfunc main() {\nvar i string = \"Hello\"\nvar j int = 15\nfmt.Printf(\"i has value: %v and type: %T\\n\", i, i)\nfmt.Printf(\"j has value: %v and type: %T\", j, j)\n}\nResult:\ni has value: Hello and type: string\nj has value: 15 and type: int\n\nTip:\nLook at all the formatting verbs in the\nGo Formatting Verbs\nchapter.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "package main\nimport (\"fmt\")\nfunc main() {\nvar i,j string = \"Hello\",\"World\"\nfmt.Print(i)\nfmt.Print(j)\n}",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "package main\nimport (\"fmt\")\nfunc main() {\nvar i,j string = \"Hello\",\"World\"\nfmt.Print(i, \"\\n\")\nfmt.Print(j, \"\\n\")\n}",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "package main\nimport (\"fmt\")\nfunc main() {\nvar i,j string = \"Hello\",\"World\"\nfmt.Print(i, \"\\n\",j)\n}",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "package main\nimport (\"fmt\")\nfunc main() {\nvar i,j string = \"Hello\",\"World\"\nfmt.Print(i, \" \", j)\n}",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "package main\nimport (\"fmt\")\nfunc main() {\nvar i,j = 10,20\nfmt.Print(i,j)\n}",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "package main\nimport (\"fmt\")\nfunc main() {\nvar i,j string = \"Hello\",\"World\"\nfmt.Println(i,j)\n}",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "package main\nimport (\"fmt\")\nfunc main() {\nvar i string = \"Hello\"\nvar j int = 15\nfmt.Printf(\"i has value: %v and type: %T\\n\", i, i)\nfmt.Printf(\"j has value: %v and type: %T\", j, j)\n}",
      "language": "java",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "package main\nimport (\"fmt\")\nfunc main() {\n# TODO: Complete this line\nfmt.Print(i)\nfmt.Print(j)\n}",
      "solution": "package main\nimport (\"fmt\")\nfunc main() {\nvar i,j string = \"Hello\",\"World\"\nfmt.Print(i)\nfmt.Print(j)\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "package main\n# TODO: Complete this line\nfunc main() {\nvar i,j string = \"Hello\",\"World\"\nfmt.Print(i, \"\\n\")\nfmt.Print(j, \"\\n\")\n}",
      "solution": "package main\nimport (\"fmt\")\nfunc main() {\nvar i,j string = \"Hello\",\"World\"\nfmt.Print(i, \"\\n\")\nfmt.Print(j, \"\\n\")\n}"
    }
  ],
  "related_topics": [
    {
      "id": "e75f86af-9471-4d0d-bec4-ffc481929ba5",
      "title": "Advanced C Techniques",
      "relationship": "next_topic"
    },
    {
      "id": "e792fdb0-6a40-4b67-a58a-446d7e71ac07",
      "title": "C Project: Build a Real-World Application",
      "relationship": "suggested_next"
    },
    {
      "id": "3c7c3142-0def-4e4b-854a-eda1303a119d",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Example\nIt?",
      "options": [
        "strings:\npackage main\nimport (\"fmt\")\nfunc main() {\nvar i",
        "also possible to only use one\nPrint()\nfor printing multiple variables",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Example\nIt is 'also possible to only use one\nPrint()\nfor printing multiple variables'."
    },
    {
      "question": "What is inserts a space between the arguments if\nneither?",
      "options": [
        "strings:\npackage main\nimport (\"fmt\")\nfunc main() {\nvar i",
        "None of the above.",
        "None of the above.",
        "also possible to only use one\nPrint()\nfor printing multiple variables"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of inserts a space between the arguments if\nneither is 'strings:\npackage main\nimport (\"fmt\")\nfunc main() {\nvar i'."
    }
  ],
  "summary": "This tutorial covers Go Output Functions concepts and techniques. You'll learn how to use Go Output Functions effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Go Output Functions and how to apply it in your projects."
}