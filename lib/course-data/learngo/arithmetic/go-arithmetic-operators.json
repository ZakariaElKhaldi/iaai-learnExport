{
  "id": "4f667a10-34d9-4079-a1ea-bdc314a5d03c",
  "title": "Go Arithmetic Operators",
  "slug": "go-arithmetic-operators",
  "metadata": {
    "description": "Learn about Go Arithmetic Operators with clear explanations and practical examples.",
    "keywords": [
      "value",
      "arithmetic",
      "operators",
      "values",
      "another",
      "division",
      "variable",
      "exercises",
      "exercise",
      "print"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnGo",
    "subcategory": "Arithmetic"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Go Arithmetic Operators",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Arithmetic Operators\nArithmetic operators are used to perform common mathematical operations.\nOperator\nName\nDescription\nExample\nTry it\n+\nAddition\nAdds together two values\nx + y\nTry it \u00bb\n-\nSubtraction\nSubtracts one value from another\nx - y\nTry it \u00bb\n*\nMultiplication\nMultiplies two values\nx * y\nTry it \u00bb\n/\nDivision\nDivides one value by another\nx / y\nTry it \u00bb\n%\nModulus\nReturns the division remainder\nx % y\nTry it \u00bb\n++\nIncrement\nIncreases the value of a variable by 1\nx++\nTry it \u00bb\n--\nDecrement\nDecreases the value of a variable by 1\nx--\nTry it \u00bb\nGo Exercises\nTest Yourself With Exercises\nExercise:\nMultiply 10 with 5, and print the result.\npackage main   \nimport (\"fmt\")\nfunc main() {\n  fmt.Print(10\n5)\n}\nSubmit Answer \u00bb\nStart the Exercise\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "fbf3dfd8-6548-4bfd-aa1b-956db36cafc6",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "f72e1795-2ac5-4fe7-ac21-654584a76f0d",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "7ad062f9-abcf-4d96-b0da-5ac36a7dbf8b",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Go Arithmetic Operators\n\nArithmetic Operators\nArithmetic operators?",
      "options": [
        "None of the above.",
        "None of the above.",
        "None of the above.",
        "used to perform common mathematical operations"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Go Arithmetic Operators\n\nArithmetic Operators\nArithmetic operators is 'used to perform common mathematical operations'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers Go Arithmetic Operators concepts and techniques. You'll learn how to use Go Arithmetic Operators effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Go Arithmetic Operators and how to apply it in your projects."
}