{
  "id": "1dfc4460-bbff-4f3d-b3d6-9dba63adc2dd",
  "title": "Go Multiple Variable Declaration",
  "slug": "go-multiple-variable-declaration",
  "metadata": {
    "description": "Learn about Go Multiple Variable Declaration with clear explanations and practical examples.",
    "keywords": [
      "c",
      "println",
      "main",
      "multiple",
      "variable",
      "declare",
      "line",
      "example",
      "declaration",
      "variables",
      "package"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnGo",
    "subcategory": "Declare Multiple Variables"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Go Multiple Variable Declaration",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Go Multiple Variable Declaration\nIn Go, it is possible to declare multiple variables on the same line.\nExample\nThis example shows how to declare multiple variables on the same line:\npackage main\nimport (\"fmt\")\nfunc main() {\nvar a, b, c, d int = 1, 3, 5, 7\nfmt.Println(a)\nfmt.Println(b)\nfmt.Println(c)\nfmt.Println(d)\n}\n\nNote:\nIf you use the\ntype\nkeyword, it is only possible to declare\none type\nof variable per line.\nIf the\ntype\nkeyword is not specified, you can declare different types of variables on the same line:\nExample\npackage main\nimport (\"fmt\")\nfunc main() {\nvar a, b = 6, \"Hello\"\nc, d := 7, \"World!\"\nfmt.Println(a)\nfmt.Println(b)\nfmt.Println(c)\nfmt.Println(d)\n}\n\nGo Variable Declaration in a Block\nMultiple variable declarations can also be grouped together into a block for \ngreater readability:\nExample\npackage main\nimport (\"fmt\")\nfunc main() {\nvar (\na int\nb int = 1\nc string = \"hello\"\n)\nfmt.Println(a)\nfmt.Println(b)\nfmt.Println(c)\n}\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "package main\nimport (\"fmt\")\nfunc main() {\nvar a, b, c, d int = 1, 3, 5, 7\nfmt.Println(a)\nfmt.Println(b)\nfmt.Println(c)\nfmt.Println(d)\n}",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "package main\nimport (\"fmt\")\nfunc main() {\nvar a, b = 6, \"Hello\"\nc, d := 7, \"World!\"\nfmt.Println(a)\nfmt.Println(b)\nfmt.Println(c)\nfmt.Println(d)\n}",
      "language": "java",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "package main\nimport (\"fmt\")\nfunc main() {\nvar (\na int\nb int = 1\nc string = \"hello\"\n)\nfmt.Println(a)\nfmt.Println(b)\nfmt.Println(c)\n}",
      "language": "java",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "package main\nimport (\"fmt\")\nfunc main() {\nvar a, b, c, d int = 1, 3, 5, 7\nfmt.Println(a)\n# TODO: Complete this line\nfmt.Println(c)\nfmt.Println(d)\n}",
      "solution": "package main\nimport (\"fmt\")\nfunc main() {\nvar a, b, c, d int = 1, 3, 5, 7\nfmt.Println(a)\nfmt.Println(b)\nfmt.Println(c)\nfmt.Println(d)\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "package main\nimport (\"fmt\")\nfunc main() {\nvar a, b = 6, \"Hello\"\nc, d := 7, \"World!\"\nfmt.Println(a)\nfmt.Println(b)\n# TODO: Complete this line\nfmt.Println(d)\n}",
      "solution": "package main\nimport (\"fmt\")\nfunc main() {\nvar a, b = 6, \"Hello\"\nc, d := 7, \"World!\"\nfmt.Println(a)\nfmt.Println(b)\nfmt.Println(c)\nfmt.Println(d)\n}"
    }
  ],
  "related_topics": [
    {
      "id": "a6f81458-ba71-4ce1-8787-acab2e8bc757",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "2ba4ef24-3766-4d2f-818c-d4da205ecd91",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "acfec8d5-dc28-46d0-a49f-71016f91ab70",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is it?",
      "options": [
        "None of the above.",
        "only possible to declare\none type\nof variable per line",
        "possible to declare multiple variables on the same line",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of it is 'possible to declare multiple variables on the same line'."
    },
    {
      "question": "What is it?",
      "options": [
        "only possible to declare\none type\nof variable per line",
        "None of the above.",
        "None of the above.",
        "possible to declare multiple variables on the same line"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of it is 'only possible to declare\none type\nof variable per line'."
    }
  ],
  "summary": "This tutorial covers Go Multiple Variable Declaration concepts and techniques. You'll learn how to use Go Multiple Variable Declaration effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Go Multiple Variable Declaration and how to apply it in your projects."
}