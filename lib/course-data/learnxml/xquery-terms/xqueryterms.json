{
  "id": "9e6f5ad2-e206-45dd-8bdd-5beae03b261a",
  "title": "XQueryTerms",
  "slug": "xqueryterms",
  "metadata": {
    "description": "Learn about XQueryTerms with clear explanations and practical examples.",
    "keywords": [
      "author",
      "title",
      "book",
      "year",
      "price",
      "nodes",
      "element",
      "bookstore",
      "rowling",
      "parent"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnXML",
    "subcategory": "XQuery Terms"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "XQuery\nTerms",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "XQuery Terminology\nNodes\nIn XQuery, there are seven kinds of nodes: element, \nattribute, text, namespace, processing-instruction, comment, and document (root) nodes.\nXML documents are treated as trees of nodes. The root of the tree is called \nthe document node (or root node).\nLook at the following XML document:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bookstore>\n<book>\n<title lang=\"en\">Harry Potter</title>\n<author>J K. Rowling</author>\n<year>2005</year>\n<price>29.99</price>\n</book>\n</bookstore>\nExample of nodes in the XML document above:\n<bookstore> (root node)\n<author>J K. Rowling</author> (element node)\nlang=\"en\" (attribute node)\nAtomic values\nAtomic values are nodes with no children or parent.\nExample of atomic values:\nJ K. Rowling\n\"en\"\nItems\nItems are atomic values or nodes.\nRelationship of Nodes\nParent\nEach element and attribute has one parent.\nIn the following example; the book element is the parent of the title, author, year, and price:\n<book>\n<title>Harry Potter</title>\n<author>J K. Rowling</author>\n<year>2005</year>\n<price>29.99</price>\n</book>\nChildren\nElement nodes may have zero, one or more children.\nIn the following example; the title, author, year, and price elements are all children of the book element:\n<book>\n<title>Harry Potter</title>\n<author>J K. Rowling</author>\n<year>2005</year>\n<price>29.99</price>\n</book>\nSiblings\nNodes that have the same parent.\nIn the following example; the title, author, year, and price elements are all siblings:\n<book>\n<title>Harry Potter</title>\n<author>J K. Rowling</author>\n<year>2005</year>\n<price>29.99</price>\n</book>\nAncestors\nA node's parent, parent's parent, etc.\nIn the following example; the ancestors of the title element are the book element and the bookstore element:\n<bookstore>\n<book>\n<title>Harry Potter</title>\n<author>J K. Rowling</author>\n<year>2005</year>\n<price>29.99</price>\n</book>\n</bookstore>\nDescendants\nA node's children, children's children, etc.\nIn the following example; descendants of the bookstore element are the book, title, author, year, and price elements:\n<bookstore>\n<book>\n<title>Harry Potter</title>\n<author>J K. Rowling</author>\n<year>2005</year>\n<price>29.99</price>\n</book>\n</bookstore>\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bookstore>\n<book>\n<title lang=\"en\">Harry Potter</title>\n<author>J K. Rowling</author>\n<year>2005</year>\n<price>29.99</price>\n</book>\n</bookstore>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<bookstore> (root node)\n<author>J K. Rowling</author> (element node)\nlang=\"en\" (attribute node)",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "J K. Rowling\n\"en\"",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<book>\n<title>Harry Potter</title>\n<author>J K. Rowling</author>\n<year>2005</year>\n<price>29.99</price>\n</book>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "<book>\n<title>Harry Potter</title>\n<author>J K. Rowling</author>\n<year>2005</year>\n<price>29.99</price>\n</book>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "<book>\n<title>Harry Potter</title>\n<author>J K. Rowling</author>\n<year>2005</year>\n<price>29.99</price>\n</book>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "<bookstore>\n<book>\n<title>Harry Potter</title>\n<author>J K. Rowling</author>\n<year>2005</year>\n<price>29.99</price>\n</book>\n</bookstore>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "<bookstore>\n<book>\n<title>Harry Potter</title>\n<author>J K. Rowling</author>\n<year>2005</year>\n<price>29.99</price>\n</book>\n</bookstore>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bookstore>\n<book>\n<title lang=\"en\">Harry Potter</title>\n<author>J K. Rowling</author>\n<year>2005</year>\n<price>29.99</price>\n# TODO: Complete this line\n</bookstore>",
      "solution": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bookstore>\n<book>\n<title lang=\"en\">Harry Potter</title>\n<author>J K. Rowling</author>\n<year>2005</year>\n<price>29.99</price>\n</book>\n</bookstore>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<bookstore> (root node)\n# TODO: Complete this line\nlang=\"en\" (attribute node)",
      "solution": "<bookstore> (root node)\n<author>J K. Rowling</author> (element node)\nlang=\"en\" (attribute node)"
    }
  ],
  "related_topics": [
    {
      "id": "6bd2c584-2eaf-454e-b14f-9f69fce2f62e",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "3d22b8a2-a423-469e-a759-7ee15e2d440b",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "90cebc8b-5d5a-43c1-be30-2bcb5f6eea3c",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is there?",
      "options": [
        "None of the above.",
        "None of the above.",
        "treated as trees of nodes",
        "seven kinds of nodes: element"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of there is 'seven kinds of nodes: element'."
    },
    {
      "question": "What is XML documents?",
      "options": [
        "None of the above.",
        "treated as trees of nodes",
        "seven kinds of nodes: element",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of XML documents is 'treated as trees of nodes'."
    }
  ],
  "summary": "This tutorial covers XQueryTerms concepts and techniques. You'll learn how to use XQueryTerms effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of XQueryTerms and how to apply it in your projects."
}