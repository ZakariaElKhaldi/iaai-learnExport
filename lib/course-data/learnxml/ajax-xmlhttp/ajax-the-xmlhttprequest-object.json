{
  "id": "f513306f-2828-4a10-a20b-69a2274e5a5e",
  "title": "AJAX - The XMLHttpRequest Object",
  "slug": "ajax-the-xmlhttprequest-object",
  "metadata": {
    "description": "Learn about AJAX - The XMLHttpRequest Object with clear explanations and practical examples.",
    "keywords": [
      "c",
      "xmlhttprequest",
      "object",
      "request",
      "ajax",
      "server",
      "returns",
      "used",
      "data",
      "page",
      "file"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnXML",
    "subcategory": "AJAX XMLHttp"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "AJAX - The XMLHttpRequest Object",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The keystone of AJAX is the XMLHttpRequest object.\nThe XMLHttpRequest Object\nAll modern browsers support the XMLHttpRequest object.\nThe XMLHttpRequest object can be used to exchange data with a server behind the \nscenes. This means that it is possible to update parts of a web page, without \nreloading the whole page.\nCreate an XMLHttpRequest Object\nAll modern browsers (Chrome, Firefox, Edge (and IE7+), Safari, Opera) have a built-in XMLHttpRequest object.\nSyntax for creating an XMLHttpRequest object:\nvariable\n= new XMLHttpRequest();\nExample\nvar xhttp = new XMLHttpRequest();\n\nThe \"ajax_info.txt\" file used in the example above, is a simple text file and looks like this:\n<h1>AJAX</h1>\n<p>AJAX is not a programming language.</p>\n<p>AJAX is a \n  technique for accessing web servers from a web page.</p>\n<p>AJAX stands for \n  Asynchronous JavaScript And XML.</p>\nAccess Across Domains\nFor security reasons, modern browsers do not allow access across domains.\nThis means that both the web page and the XML file it tries to load, must be located on the same server.\nThe examples on  all open XML files located on the  domain.\nIf you want to use the example above on one of your own web pages,\nthe XML files you load must be located on your own server.\nXMLHttpRequest Object Methods\nMethod\nDescription\nnew XMLHttpRequest()\nCreates a new XMLHttpRequest object\nabort()\nCancels the current request\ngetAllResponseHeaders()\nReturns header information\ngetResponseHeader()\nReturns specific header information\nopen(\nmethod,url,async,user,psw\n)\nSpecifies the request\nmethod\n: the request type GET or POST\nurl\n: the file location\nasync\n: true (asynchronous) or false (synchronous)\nuser\n: optional user name\npsw\n: optional password\nsend()\nSends the request to the server\nUsed for GET requests\nsend(\nstring\n)\nSends the request to the server.\nUsed for POST requests\nsetRequestHeader()\nAdds a label/value pair to the header to be sent\nXMLHttpRequest Object Properties\nProperty\nDescription\nonreadystatechange\nDefines a function to be called when the readyState property changes\nreadyState\nHolds the status of the XMLHttpRequest.\n0: request not initialized\n1: server connection established\n2: request received\n3: processing request\n4: request finished and response is ready\nresponseText\nReturns the response data as a string\nresponseXML\nReturns the response data as XML data\nstatus\nReturns the status-number of a request\n200: \"OK\"\n403: \"Forbidden\"\n404: \"Not Found\"\nFor a complete list go to the\nHttp \n    Messages Reference\nstatusText\nReturns the status-text (e.g. \"OK\" or \"Not Found\")\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "var xhttp = new XMLHttpRequest();",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<h1>AJAX</h1>\n<p>AJAX is not a programming language.</p>\n<p>AJAX is a \n  technique for accessing web servers from a web page.</p>\n<p>AJAX stands for \n  Asynchronous JavaScript And XML.</p>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "var xhttp = new XMLHttpRequest();"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<h1>AJAX</h1>\n<p>AJAX is not a programming language.</p>\n<p>AJAX is a \n  technique for accessing web servers from a web page.</p>\n<p>AJAX stands for \n# TODO: Complete this line",
      "solution": "<h1>AJAX</h1>\n<p>AJAX is not a programming language.</p>\n<p>AJAX is a \n  technique for accessing web servers from a web page.</p>\n<p>AJAX stands for \n  Asynchronous JavaScript And XML.</p>"
    }
  ],
  "related_topics": [
    {
      "id": "04cbe9c4-9699-4d11-8b17-165a7ecaff8d",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "be2d1a3b-dce5-4805-bec0-d784341e362a",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "eedf11de-84e2-4414-a5ca-ef88e7c21b25",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The XMLHttpRequest Object\n\nThe keystone of AJAX?",
      "options": [
        "None of the above.",
        "None of the above.",
        "possible to update parts of a web page",
        "the XMLHttpRequest object"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of The XMLHttpRequest Object\n\nThe keystone of AJAX is 'the XMLHttpRequest object'."
    },
    {
      "question": "What is This means that it?",
      "options": [
        "the XMLHttpRequest object",
        "None of the above.",
        "None of the above.",
        "possible to update parts of a web page"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of This means that it is 'possible to update parts of a web page'."
    }
  ],
  "summary": "This tutorial covers AJAX - The XMLHttpRequest Object concepts and techniques. You'll learn how to use AJAX - The XMLHttpRequest Object effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of AJAX - The XMLHttpRequest Object and how to apply it in your projects."
}