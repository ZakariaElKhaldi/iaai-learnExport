{
  "id": "8951c82f-3b89-4e4f-ad01-6be121f17068",
  "title": "XML Parser",
  "slug": "xml-parser",
  "metadata": {
    "description": "Learn about XML Parser with clear explanations and practical examples.",
    "keywords": [
      "parser",
      "text",
      "object",
      "xmldoc",
      "string",
      "title",
      "document",
      "example",
      "bookstore",
      "book"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnXML",
    "subcategory": "XML Parser"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "XML Parser",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "All major browsers have a built-in XML parser to access and manipulate XML.\nXML Parser\nThe\nXML DOM (Document Object Model)\ndefines the properties and methods for accessing \nand editing XML.\nHowever, before an XML document can be accessed, it must be \nloaded into an XML DOM object.\nAll modern browsers have a built-in XML parser that can convert text into an XML DOM object.\nParsing a Text String\nThis example parses a text string into an XML DOM object, and  \nextracts the info from it with JavaScript:\nExample\n<html>\n<body>\n<p id=\"demo\"></p>\n<script>\nvar text, parser, xmlDoc;\ntext = \"<bookstore><book>\" +\n\"<title>Everyday Italian</title>\" +\n\"<author>Giada De Laurentiis</author>\" +\n\"<year>2005</year>\" +\n\"</book></bookstore>\";\nparser = new DOMParser();\nxmlDoc = parser.parseFromString(text,\"text/xml\");\ndocument.getElementById(\"demo\").innerHTML =\nxmlDoc.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue;\n</script>\n</body>\n</html>\n\nExample Explained\nA text string is defined:\ntext = \"<bookstore><book>\" +\n\"<title>Everyday Italian</title>\" +\n\"<author>Giada De Laurentiis</author>\" +\n\"<year>2005</year>\" +\n\"</book></bookstore>\";\nAn XML DOM parser is created:\nparser = new DOMParser();\nThe parser creates a new XML DOM object using the text string:\nxmlDoc = parser.parseFromString(text,\"text/xml\");\nThe XMLHttpRequest Object\nThe\nXMLHttpRequest Object\nhas a built in XML Parser.\nThe\nresponseText\nproperty returns the response as a string.\nThe\nresponseXML\nproperty returns the response as an XML DOM object.\nIf you want to use the response as an XML DOM object, you can use the responseXML \nproperty.\nExample\nRequest the file\ncd_catalog.xml\nand \nuse the response as an XML DOM object:\nxmlDoc = xmlhttp.responseXML;\ntxt = \"\";\nx = xmlDoc.getElementsByTagName(\"ARTIST\");\nfor (i = 0; i < x.length; i++) {\ntxt += x[i].childNodes[0].nodeValue + \"<br>\";\n}\ndocument.getElementById(\"demo\").innerHTML = txt;\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<html>\n<body>\n<p id=\"demo\"></p>\n<script>\nvar text, parser, xmlDoc;\ntext = \"<bookstore><book>\" +\n\"<title>Everyday Italian</title>\" +\n\"<author>Giada De Laurentiis</author>\" +\n\"<year>2005</year>\" +\n\"</book></bookstore>\";\nparser = new DOMParser();\nxmlDoc = parser.parseFromString(text,\"text/xml\");\ndocument.getElementById(\"demo\").innerHTML =\nxmlDoc.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue;\n</script>\n</body>\n</html>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "text = \"<bookstore><book>\" +\n\"<title>Everyday Italian</title>\" +\n\"<author>Giada De Laurentiis</author>\" +\n\"<year>2005</year>\" +\n\"</book></bookstore>\";",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "parser = new DOMParser();",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "xmlDoc = parser.parseFromString(text,\"text/xml\");",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "xmlDoc = xmlhttp.responseXML;\ntxt = \"\";\nx = xmlDoc.getElementsByTagName(\"ARTIST\");\nfor (i = 0; i < x.length; i++) {\ntxt += x[i].childNodes[0].nodeValue + \"<br>\";\n}\ndocument.getElementById(\"demo\").innerHTML = txt;",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<html>\n<body>\n<p id=\"demo\"></p>\n<script>\nvar text, parser, xmlDoc;\ntext = \"<bookstore><book>\" +\n\"<title>Everyday Italian</title>\" +\n\"<author>Giada De Laurentiis</author>\" +\n\"<year>2005</year>\" +\n\"</book></bookstore>\";\nparser = new DOMParser();\nxmlDoc = parser.parseFromString(text,\"text/xml\");\ndocument.getElementById(\"demo\").innerHTML =\nxmlDoc.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue;\n</script>\n# TODO: Complete this line\n</html>",
      "solution": "<html>\n<body>\n<p id=\"demo\"></p>\n<script>\nvar text, parser, xmlDoc;\ntext = \"<bookstore><book>\" +\n\"<title>Everyday Italian</title>\" +\n\"<author>Giada De Laurentiis</author>\" +\n\"<year>2005</year>\" +\n\"</book></bookstore>\";\nparser = new DOMParser();\nxmlDoc = parser.parseFromString(text,\"text/xml\");\ndocument.getElementById(\"demo\").innerHTML =\nxmlDoc.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue;\n</script>\n</body>\n</html>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "text = \"<bookstore><book>\" +\n\"<title>Everyday Italian</title>\" +\n\"<author>Giada De Laurentiis</author>\" +\n\"<year>2005</year>\" +\n# TODO: Complete this line",
      "solution": "text = \"<bookstore><book>\" +\n\"<title>Everyday Italian</title>\" +\n\"<author>Giada De Laurentiis</author>\" +\n\"<year>2005</year>\" +\n\"</book></bookstore>\";"
    }
  ],
  "related_topics": [
    {
      "id": "ccc6536b-954f-41ef-a42c-6296f69b5f64",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "3d077ec6-0030-4046-8ede-2e43a55e8c5c",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "193b43e3-3e63-4239-9d32-5f6d18a94c93",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Example Explained\nA text string?",
      "options": [
        "None of the above.",
        "defined:\ntext = \"<bookstore><book>\" +\n\"<title>Everyday Italian</title>\" +\n\"<author>Giada De Laurentiis</author>\" +\n\"<year>2005</year>\" +\n\"</book></bookstore>\";\nAn XML DOM parser is created:\nparser = new DOMParser();\nThe parser creates a new XML DOM object using the text string:\nxmlDoc = parser",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Example Explained\nA text string is 'defined:\ntext = \"<bookstore><book>\" +\n\"<title>Everyday Italian</title>\" +\n\"<author>Giada De Laurentiis</author>\" +\n\"<year>2005</year>\" +\n\"</book></bookstore>\";\nAn XML DOM parser is created:\nparser = new DOMParser();\nThe parser creates a new XML DOM object using the text string:\nxmlDoc = parser'."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers XML Parser concepts and techniques. You'll learn how to use XML Parser effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of XML Parser and how to apply it in your projects."
}