{
  "id": "bb02ed67-a952-4d31-9ef6-335987b961c3",
  "title": "Introduction toXML",
  "slug": "introduction-toxml",
  "metadata": {
    "description": "Learn about Introduction toXML with clear explanations and practical examples.",
    "keywords": [
      "c",
      "data",
      "note",
      "tags",
      "html",
      "designed",
      "tove",
      "jani",
      "body",
      "like",
      "heading"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnXML",
    "subcategory": "XML Introduction"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Introduction to\nXML",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "XML is a software- and hardware-independent tool for storing and transporting data.\nWhat is XML?\nXML stands for eXtensible Markup Language\nXML is a markup language much like HTML\nXML was designed to store and transport data\nXML was designed to be self-descriptive\nXML is a W3C Recommendation\nXML Does Not DO Anything\nMaybe it is a little hard to understand, but XML does not DO anything.\nThis note is a note to Tove from Jani, stored as XML:\n<note>\n<to>Tove</to>\n<from>Jani</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>\nThe XML above is quite self-descriptive:\nIt has sender information\nIt has receiver information\nIt has a heading\nIt has a message body\nBut still, the XML above does not DO anything. XML is just information wrapped in tags.\nSomeone must write a piece of software to send, receive, store, or display it:\nNote\nTo: Tove\nFrom: Jani\nReminder\nDon't forget me this weekend!\nThe Difference Between XML and HTML\nXML and HTML were designed with different goals:\nXML was designed to carry data - with focus on what data is\nHTML was designed to display data - with focus on how data looks\nXML tags are not predefined like HTML tags are\nXML Does Not Use Predefined Tags\nThe XML language has no predefined tags.\nThe tags in the example above (like <to> and <from>) are not defined in any XML standard. These tags are \"invented\" by the author of the XML document.\nHTML works with predefined tags like <p>, <h1>, <table>, etc.\nWith XML, the author must define both the tags and the document structure.\nXML is Extensible\nMost XML applications will work as expected even if new data is added (or \nremoved).\nImagine an application designed to display the original version of note.xml \n(<to> <from> <heading> <body>).\nThen imagine a newer version of note.xml with added <date> and <hour> \nelements, and a removed <heading>.\nThe way XML is constructed, older version of the application can still work:\n<note>\n<date>2015-09-01</date>\n<hour>08:30</hour>\n<to>Tove</to>\n<from>Jani</from>\n<body>Don't forget me this weekend!</body>\n</note>\nOld Version\nNote\nTo: Tove\nFrom: Jani\nReminder\nDon't forget me this weekend!\nNew Version\nNote\nTo: Tove\nFrom: Jani\nDate: 2015-09-01 08:30\nDon't forget me this weekend!\nXML Simplifies Things\nXML simplifies data sharing\nXML simplifies data transport\nXML simplifies platform changes\nXML simplifies data availability\nMany computer systems contain data in incompatible formats. Exchanging data \nbetween incompatible systems (or upgraded systems) is a time-consuming task \nfor web developers. Large amounts of data must be converted, and incompatible data is \noften lost.\nXML stores data in plain text format. This provides a software- and\nhardware-independent way of storing, transporting, and sharing data.\nXML also makes it easier to expand or upgrade to new operating systems, new \napplications, or new browsers, without losing data.\nWith XML, data can be available to all kinds of \"reading\nmachines\" like people, computers, voice machines, news feeds, etc.\nXML is a W3C Recommendation\nXML became a W3C Recommendation as early as in February 1998.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<note>\n<to>Tove</to>\n<from>Jani</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<note>\n<date>2015-09-01</date>\n<hour>08:30</hour>\n<to>Tove</to>\n<from>Jani</from>\n<body>Don't forget me this weekend!</body>\n</note>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<note>\n<to>Tove</to>\n<from>Jani</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n# TODO: Complete this line",
      "solution": "<note>\n<to>Tove</to>\n<from>Jani</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<note>\n# TODO: Complete this line\n<hour>08:30</hour>\n<to>Tove</to>\n<from>Jani</from>\n<body>Don't forget me this weekend!</body>\n</note>",
      "solution": "<note>\n<date>2015-09-01</date>\n<hour>08:30</hour>\n<to>Tove</to>\n<from>Jani</from>\n<body>Don't forget me this weekend!</body>\n</note>"
    }
  ],
  "related_topics": [
    {
      "id": "c175689d-bc03-4a27-8a75-fff37e224e79",
      "title": "C Functions and Methods",
      "relationship": "next_topic"
    },
    {
      "id": "2b23ffb8-7028-47b6-97aa-db6b0fede58f",
      "title": "C Data Structures",
      "relationship": "suggested_next"
    }
  ],
  "quiz": [
    {
      "question": "What is Introduction to\nXML\n\nXML?",
      "options": [
        "None of the above.",
        "a software- and hardware-independent tool for storing and transporting data",
        "None of the above.",
        "XML"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Introduction to\nXML\n\nXML is 'a software- and hardware-independent tool for storing and transporting data'."
    },
    {
      "question": "What is What?",
      "options": [
        "None of the above.",
        "a software- and hardware-independent tool for storing and transporting data",
        "None of the above.",
        "XML"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of What is 'XML'."
    }
  ],
  "summary": "This tutorial covers Introduction toXML concepts and techniques. You'll learn how to use Introduction toXML effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Introduction toXML and how to apply it in your projects."
}