{
  "id": "59bcfb42-f4ba-4832-b0c1-a7f9f27ca3b8",
  "title": "XSLT<xsl:sort>Element",
  "slug": "xsltxslsortelement",
  "metadata": {
    "description": "Learn about XSLT<xsl:sort>Element with clear explanations and practical examples.",
    "keywords": [
      "sort",
      "element",
      "select",
      "artist",
      "output",
      "version",
      "stylesheet",
      "template",
      "html",
      "body"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnXML",
    "subcategory": "XSLT <sort>"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "XSLT\n<xsl:sort>\nElement",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The <xsl:sort> element is used to sort the output.\nWhere to put the Sort Information\nTo sort the output, simply add an <xsl:sort> element inside the <xsl:for-each> element in the XSL file:\nExample\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd\">\n<xsl:sort select=\"artist\"/>\n<tr>\n<td><xsl:value-of select=\"title\"/></td>\n<td><xsl:value-of select=\"artist\"/></td>\n</tr>\n</xsl:for-each>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>\n\nNote:\nThe\nselect\nattribute indicates what XML element to sort on.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd\">\n<xsl:sort select=\"artist\"/>\n<tr>\n<td><xsl:value-of select=\"title\"/></td>\n<td><xsl:value-of select=\"artist\"/></td>\n</tr>\n</xsl:for-each>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n# TODO: Complete this line\n<xsl:for-each select=\"catalog/cd\">\n<xsl:sort select=\"artist\"/>\n<tr>\n<td><xsl:value-of select=\"title\"/></td>\n<td><xsl:value-of select=\"artist\"/></td>\n</tr>\n</xsl:for-each>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>",
      "solution": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd\">\n<xsl:sort select=\"artist\"/>\n<tr>\n<td><xsl:value-of select=\"title\"/></td>\n<td><xsl:value-of select=\"artist\"/></td>\n</tr>\n</xsl:for-each>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>"
    },
    {
      "title": "Create a Layout",
      "description": "Build a simple layout using the techniques from this tutorial.",
      "difficulty": "easy",
      "starter_code": "<!-- Add your code here -->",
      "solution": "<!-- Example solution would go here -->"
    }
  ],
  "related_topics": [
    {
      "id": "a336ca60-2d16-48bf-9885-db3bbf86954e",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "564a2521-255c-466a-9cc5-b19ecd9e76b6",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "74fc2d9e-bf14-450e-8fd7-8f86a8410be6",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is element?",
      "options": [
        "None of the above.",
        "None of the above.",
        "None of the above.",
        "used to sort the output"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of element is 'used to sort the output'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers XSLT<xsl:sort>Element concepts and techniques. You'll learn how to use XSLT<xsl:sort>Element effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of XSLT<xsl:sort>Element and how to apply it in your projects."
}