{
  "id": "51e8af88-ce1c-48c4-a222-a7ed74910750",
  "title": "XML DOMGet Node Values",
  "slug": "xml-domget-node-values",
  "metadata": {
    "description": "Learn about XML DOMGet Node Values with clear explanations and practical examples.",
    "keywords": [
      "nodejs",
      "value",
      "title",
      "text",
      "node",
      "element",
      "getelementsbytagname",
      "xmldoc",
      "nodevalue",
      "attribute",
      "book"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Nodejs Basics"
    ],
    "estimated_time": 5,
    "category": "LearnXML",
    "subcategory": "DOM Get Values"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "XML DOM\nGet Node Values",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The nodeValue property is used to get the text value of a node.\nThe getAttribute() method returns the value of an attribute.\nGet the Value of an Element\nIn the DOM, everything is a node. Element nodes do not have a text value.\nThe text value of an element node is stored in a child node. This node is called a text node.\nTo retrieve the text value of an element, you must retrieve the value of the elements' text node.\nThe getElementsByTagName Method\nThe\ngetElementsByTagName()\nmethod returns a\nnode list of all elements\n,\nwith the specified tag name, in the same order as they appear in the source document.\nSuppose\nbooks.xml\nhas been loaded into xmlDoc.\nThis code retrieves the first <title> element:\nvar x = xmlDoc.getElementsByTagName(\"title\")[0];\nThe ChildNodes Property\nThe\nchildNodes\nproperty returns a\nlist of an element's child nodes\n.\nThe following code retrieves the text node of the first <title> element:\nx = xmlDoc.getElementsByTagName(\"title\")[0];\ny = x.childNodes[0];\nThe nodeValue Property\nThe\nnodeValue\nproperty returns the\ntext value of a text node\n.\nThe following code retrieves the text value of the text node of the first <title> element:\nExample\nx = xmlDoc.getElementsByTagName(\"title\")[0];\ny = x.childNodes[0];\nz = y.nodeValue;\nResult in z: \"Everyday Italian\"\nComplete Example\nExample\n<!DOCTYPE html>\n<html>\n<body>\n<p id=\"demo\"></p>\n<script>\nvar xhttp = new XMLHttpRequest();\nxhttp.onreadystatechange = function() {\nif (this.readyState == 4 && this.status == 200) {\nmyFunction(this);\n}\n};\nxhttp.open(\"GET\", \n \"books.xml\", true);\nxhttp.send();\nfunction myFunction(xml) {\nvar xmlDoc = xml.responseXML;\nvar x = xmlDoc.getElementsByTagName('title')[0];\nvar y = \n x.childNodes[0];\ndocument.getElementById(\"demo\").innerHTML = y.nodeValue;\n}\n</script>\n</body>\n</html>\n\nLoop through all <title> elements:\n\nGet the Value of an Attribute\nIn the DOM, attributes are nodes. Unlike element nodes, attribute nodes have text values.\nThe way to get the value of an attribute, is to get its text value.\nThis can be done using the\ngetAttribute()\nmethod or using the\nnodeValue\nproperty of\nthe\ngetAttributeNode()\nmethod.\nGet Value Using getAttribute()\nThe\ngetAttribute()\nmethod returns an\nattribute's value\n.\nThe following code retrieves the text value of the \"lang\" attribute of the first \n<title> element:\nExample\nconst title = xmlDoc.getElementsByTagName(\"title\")[0];\nlet txt = title.getAttribute(\"lang\");\n\nLoop through all <book> elements and get their \"category\" attributes:\nExample\nconst book = xmlDoc.getElementsByTagName(\"book\");\nfor (let i = 0; i < book.length; i++) {\ntxt += x[i].getAttributeNode(\"category\").nodeValue + \"<br>\";\n}\n\nGet Value Using - getAttributeNode()\nThe\ngetAttributeNode()\nmethod returns an\nattribute node\n.\nThe following code retrieves the text value of the \"lang\" attribute of the first \n<title> element:\nExample\nconst title = xmlDoc.getElementsByTagName(\"title\")[0];\nconst lang = title.getAttributeNode(\"lang\");\nlet txt = lang.nodeValue;\n\nLoop through all <book> elements and get their \"category\" attributes:\nExample\nconst book = xmlDoc.getElementsByTagName(\"book\");\nfor (let i = 0; i < book.length; i++) {\ntxt += x[i].getAttributeNode(\"category\").nodeValue + \"<br>\";\n}\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "var x = xmlDoc.getElementsByTagName(\"title\")[0];",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "x = xmlDoc.getElementsByTagName(\"title\")[0];\ny = x.childNodes[0];",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "x = xmlDoc.getElementsByTagName(\"title\")[0];\ny = x.childNodes[0];\nz = y.nodeValue;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<!DOCTYPE html>\n<html>\n<body>\n<p id=\"demo\"></p>\n<script>\nvar xhttp = new XMLHttpRequest();\nxhttp.onreadystatechange = function() {\nif (this.readyState == 4 && this.status == 200) {\nmyFunction(this);\n}\n};\nxhttp.open(\"GET\", \n \"books.xml\", true);\nxhttp.send();\nfunction myFunction(xml) {\nvar xmlDoc = xml.responseXML;\nvar x = xmlDoc.getElementsByTagName('title')[0];\nvar y = \n x.childNodes[0];\ndocument.getElementById(\"demo\").innerHTML = y.nodeValue;\n}\n</script>\n</body>\n</html>",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "const title = xmlDoc.getElementsByTagName(\"title\")[0];\nlet txt = title.getAttribute(\"lang\");",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "const book = xmlDoc.getElementsByTagName(\"book\");\nfor (let i = 0; i < book.length; i++) {\ntxt += x[i].getAttributeNode(\"category\").nodeValue + \"<br>\";\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "const title = xmlDoc.getElementsByTagName(\"title\")[0];\nconst lang = title.getAttributeNode(\"lang\");\nlet txt = lang.nodeValue;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "const book = xmlDoc.getElementsByTagName(\"book\");\nfor (let i = 0; i < book.length; i++) {\ntxt += x[i].getAttributeNode(\"category\").nodeValue + \"<br>\";\n}",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "var x = xmlDoc.getElementsByTagName(\"title\")[0];"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "x = xmlDoc.getElementsByTagName(\"title\")[0];\ny = x.childNodes[0];"
    }
  ],
  "related_topics": [
    {
      "id": "e6c11281-3921-41a1-81a8-4bf7ff19b505",
      "title": "Nodejs Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "144958ca-8a0d-4cb2-a6c6-c61fe80c0262",
      "title": "Nodejs Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "b57826a3-1f79-4105-baae-5192e850b553",
      "title": "Nodejs Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is XML DOM\nGet Node Values\n\nThe nodeValue property?",
      "options": [
        "None of the above.",
        "None of the above.",
        "a node",
        "used to get the text value of a node"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of XML DOM\nGet Node Values\n\nThe nodeValue property is 'used to get the text value of a node'."
    },
    {
      "question": "What is everything?",
      "options": [
        "used to get the text value of a node",
        "None of the above.",
        "a node",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of everything is 'a node'."
    }
  ],
  "summary": "This tutorial covers XML DOMGet Node Values concepts and techniques. You'll learn how to use XML DOMGet Node Values effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of XML DOMGet Node Values and how to apply it in your projects."
}