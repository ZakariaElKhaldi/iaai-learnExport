{
  "id": "20670f79-9374-454c-85c2-91a27df88581",
  "title": "XSDIndicators",
  "slug": "xsdindicators",
  "metadata": {
    "description": "Learn about XSDIndicators with clear explanations and practical examples.",
    "keywords": [
      "c",
      "element",
      "name",
      "type",
      "sequence",
      "group",
      "string",
      "person",
      "complextype",
      "indicators",
      "indicator"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnXML",
    "subcategory": "XSD Indicators"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "XSD\nIndicators",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "We can control HOW elements are to be used in documents with indicators.\nIndicators\nThere are seven indicators:\nOrder indicators:\nAll\nChoice\nSequence\nOccurrence indicators:\nmaxOccurs\nminOccurs\nGroup indicators:\nGroup name\nattributeGroup name\nOrder Indicators\nOrder indicators are used to define the order of the elements.\nAll Indicator\nThe <all> indicator specifies that the child elements can appear in any order, and that \neach child element must occur only once:\n<xs:element name=\"person\">\n<xs:complexType>\n<xs:all>\n<xs:element name=\"firstname\" type=\"xs:string\"/>\n<xs:element name=\"lastname\" type=\"xs:string\"/>\n</xs:all>\n</xs:complexType>\n</xs:element>\nNote:\nWhen using the <all> indicator you can set the <minOccurs> \nindicator to 0 or 1 and the <maxOccurs> indicator can only be set to 1 (the <minOccurs> \nand <maxOccurs> are described later).\nChoice Indicator\nThe <choice> indicator specifies that either one child element or another can occur:\n<xs:element name=\"person\">\n<xs:complexType>\n<xs:choice>\n<xs:element name=\"employee\" type=\"employee\"/>\n<xs:element name=\"member\" type=\"member\"/>\n</xs:choice>\n</xs:complexType>\n</xs:element>\nSequence Indicator\nThe <sequence> indicator specifies that the child elements must appear in a specific order:\n<xs:element name=\"person\">\n<xs:complexType>\n<xs:sequence>\n<xs:element name=\"firstname\" type=\"xs:string\"/>\n<xs:element name=\"lastname\" type=\"xs:string\"/>\n</xs:sequence>\n</xs:complexType>\n</xs:element>\nOccurrence Indicators\nOccurrence indicators are used to define how often an element can occur.\nNote:\nFor all \"Order\" and \"Group\" indicators (any, all, choice, sequence, \ngroup name, and group reference) the default value for maxOccurs and minOccurs is 1.\nmaxOccurs Indicator\nThe <maxOccurs> indicator specifies the maximum number of times an element can occur:\n<xs:element name=\"person\">\n<xs:complexType>\n<xs:sequence>\n<xs:element name=\"full_name\" type=\"xs:string\"/>\n<xs:element name=\"child_name\" type=\"xs:string\" maxOccurs=\"10\"/>\n</xs:sequence>\n</xs:complexType>\n</xs:element>\nThe example above indicates that the \"child_name\" element \ncan occur a minimum of one time (the default value for minOccurs \nis 1) and a maximum of ten times in the \"person\" element.\nminOccurs Indicator\nThe <minOccurs> indicator specifies the minimum number of times an element can occur:\n<xs:element name=\"person\">\n<xs:complexType>\n<xs:sequence>\n<xs:element name=\"full_name\" type=\"xs:string\"/>\n<xs:element name=\"child_name\" type=\"xs:string\"\nmaxOccurs=\"10\" minOccurs=\"0\"/>\n</xs:sequence>\n</xs:complexType>\n</xs:element>\nThe example above indicates that the \"child_name\" element can occur \na minimum of zero times and a maximum of ten times in the \"person\" element.\nTip:\nTo allow an element to appear an unlimited number of times, use the maxOccurs=\"unbounded\" \nstatement:\nA working example:\nAn XML file called \"Myfamily.xml\":\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<persons xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:noNamespaceSchemaLocation=\"family.xsd\">\n<person>\n<full_name>Hege Refsnes</full_name>\n<child_name>Cecilie</child_name>\n</person>\n<person>\n<full_name>Tove Refsnes</full_name>\n<child_name>Hege</child_name>\n<child_name>Stale</child_name>\n<child_name>Jim</child_name>\n<child_name>Borge</child_name>\n</person>\n<person>\n<full_name>Stale Refsnes</full_name>\n</person>\n</persons>\nThe XML file above contains a root element named \"persons\". Inside \nthis root element we have defined three \"person\" elements. Each \"person\" element must \ncontain a \"full_name\" element and it can contain up to five \"child_name\" elements.\nHere is the schema file \"family.xsd\":\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\nelementFormDefault=\"qualified\">\n<xs:element name=\"persons\">\n<xs:complexType>\n<xs:sequence>\n<xs:element name=\"person\" maxOccurs=\"unbounded\">\n<xs:complexType>\n<xs:sequence>\n<xs:element name=\"full_name\" type=\"xs:string\"/>\n<xs:element name=\"child_name\" type=\"xs:string\"\nminOccurs=\"0\" maxOccurs=\"5\"/>\n</xs:sequence>\n</xs:complexType>\n</xs:element>\n</xs:sequence>\n</xs:complexType>\n</xs:element>\n</xs:schema>\nGroup Indicators\nGroup indicators are used to define related sets of elements.\nElement Groups\nElement groups are defined with the group declaration, like this:\n<xs:group name=\"groupname\">\n...\n</xs:group>\nYou must define an all, choice, or sequence element inside the group \ndeclaration. The following example defines a group named \"persongroup\", that \ndefines a group of elements that must occur in an exact sequence:\n<xs:group name=\"persongroup\">\n<xs:sequence>\n<xs:element name=\"firstname\" type=\"xs:string\"/>\n<xs:element name=\"lastname\" type=\"xs:string\"/>\n<xs:element name=\"birthday\" type=\"xs:date\"/>\n</xs:sequence>\n</xs:group>\nAfter you have defined a group, you can reference it in another definition, like this:\n<xs:group name=\"persongroup\">\n<xs:sequence>\n<xs:element name=\"firstname\" type=\"xs:string\"/>\n<xs:element name=\"lastname\" type=\"xs:string\"/>\n<xs:element name=\"birthday\" type=\"xs:date\"/>\n</xs:sequence>\n</xs:group>\n<xs:element name=\"person\" type=\"personinfo\"/>\n<xs:complexType name=\"personinfo\">\n<xs:sequence>\n<xs:group ref=\"persongroup\"/>\n<xs:element name=\"country\" type=\"xs:string\"/>\n</xs:sequence>\n</xs:complexType>\nAttribute Groups\nAttribute groups are defined with the attributeGroup declaration, like this:\n<xs:attributeGroup name=\"groupname\">\n...\n</xs:attributeGroup>\nThe following example defines an attribute group named \"personattrgroup\":\n<xs:attributeGroup name=\"personattrgroup\">\n<xs:attribute name=\"firstname\" type=\"xs:string\"/>\n<xs:attribute name=\"lastname\" type=\"xs:string\"/>\n<xs:attribute name=\"birthday\" type=\"xs:date\"/>\n</xs:attributeGroup>\nAfter you have defined an attribute group, you can reference it in another definition, like this:\n<xs:attributeGroup name=\"personattrgroup\">\n<xs:attribute name=\"firstname\" type=\"xs:string\"/>\n<xs:attribute name=\"lastname\" type=\"xs:string\"/>\n<xs:attribute name=\"birthday\" type=\"xs:date\"/>\n</xs:attributeGroup>\n<xs:element name=\"person\">\n<xs:complexType>\n<xs:attributeGroup ref=\"personattrgroup\"/>\n</xs:complexType>\n</xs:element>\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<xs:element name=\"person\">\n<xs:complexType>\n<xs:all>\n<xs:element name=\"firstname\" type=\"xs:string\"/>\n<xs:element name=\"lastname\" type=\"xs:string\"/>\n</xs:all>\n</xs:complexType>\n</xs:element>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<xs:element name=\"person\">\n<xs:complexType>\n<xs:choice>\n<xs:element name=\"employee\" type=\"employee\"/>\n<xs:element name=\"member\" type=\"member\"/>\n</xs:choice>\n</xs:complexType>\n</xs:element>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<xs:element name=\"person\">\n<xs:complexType>\n<xs:sequence>\n<xs:element name=\"firstname\" type=\"xs:string\"/>\n<xs:element name=\"lastname\" type=\"xs:string\"/>\n</xs:sequence>\n</xs:complexType>\n</xs:element>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<xs:element name=\"person\">\n<xs:complexType>\n<xs:sequence>\n<xs:element name=\"full_name\" type=\"xs:string\"/>\n<xs:element name=\"child_name\" type=\"xs:string\" maxOccurs=\"10\"/>\n</xs:sequence>\n</xs:complexType>\n</xs:element>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "<xs:element name=\"person\">\n<xs:complexType>\n<xs:sequence>\n<xs:element name=\"full_name\" type=\"xs:string\"/>\n<xs:element name=\"child_name\" type=\"xs:string\"\nmaxOccurs=\"10\" minOccurs=\"0\"/>\n</xs:sequence>\n</xs:complexType>\n</xs:element>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<persons xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:noNamespaceSchemaLocation=\"family.xsd\">\n<person>\n<full_name>Hege Refsnes</full_name>\n<child_name>Cecilie</child_name>\n</person>\n<person>\n<full_name>Tove Refsnes</full_name>\n<child_name>Hege</child_name>\n<child_name>Stale</child_name>\n<child_name>Jim</child_name>\n<child_name>Borge</child_name>\n</person>\n<person>\n<full_name>Stale Refsnes</full_name>\n</person>\n</persons>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\nelementFormDefault=\"qualified\">\n<xs:element name=\"persons\">\n<xs:complexType>\n<xs:sequence>\n<xs:element name=\"person\" maxOccurs=\"unbounded\">\n<xs:complexType>\n<xs:sequence>\n<xs:element name=\"full_name\" type=\"xs:string\"/>\n<xs:element name=\"child_name\" type=\"xs:string\"\nminOccurs=\"0\" maxOccurs=\"5\"/>\n</xs:sequence>\n</xs:complexType>\n</xs:element>\n</xs:sequence>\n</xs:complexType>\n</xs:element>\n</xs:schema>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "<xs:group name=\"groupname\">\n...\n</xs:group>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "<xs:group name=\"persongroup\">\n<xs:sequence>\n<xs:element name=\"firstname\" type=\"xs:string\"/>\n<xs:element name=\"lastname\" type=\"xs:string\"/>\n<xs:element name=\"birthday\" type=\"xs:date\"/>\n</xs:sequence>\n</xs:group>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": "<xs:group name=\"persongroup\">\n<xs:sequence>\n<xs:element name=\"firstname\" type=\"xs:string\"/>\n<xs:element name=\"lastname\" type=\"xs:string\"/>\n<xs:element name=\"birthday\" type=\"xs:date\"/>\n</xs:sequence>\n</xs:group>\n<xs:element name=\"person\" type=\"personinfo\"/>\n<xs:complexType name=\"personinfo\">\n<xs:sequence>\n<xs:group ref=\"persongroup\"/>\n<xs:element name=\"country\" type=\"xs:string\"/>\n</xs:sequence>\n</xs:complexType>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 13,
      "code": "<xs:attributeGroup name=\"groupname\">\n...\n</xs:attributeGroup>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 14,
      "code": "<xs:attributeGroup name=\"personattrgroup\">\n<xs:attribute name=\"firstname\" type=\"xs:string\"/>\n<xs:attribute name=\"lastname\" type=\"xs:string\"/>\n<xs:attribute name=\"birthday\" type=\"xs:date\"/>\n</xs:attributeGroup>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 15,
      "code": "<xs:attributeGroup name=\"personattrgroup\">\n<xs:attribute name=\"firstname\" type=\"xs:string\"/>\n<xs:attribute name=\"lastname\" type=\"xs:string\"/>\n<xs:attribute name=\"birthday\" type=\"xs:date\"/>\n</xs:attributeGroup>\n<xs:element name=\"person\">\n<xs:complexType>\n<xs:attributeGroup ref=\"personattrgroup\"/>\n</xs:complexType>\n</xs:element>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<xs:element name=\"person\">\n<xs:complexType>\n# TODO: Complete this line\n<xs:element name=\"firstname\" type=\"xs:string\"/>\n<xs:element name=\"lastname\" type=\"xs:string\"/>\n</xs:all>\n</xs:complexType>\n</xs:element>",
      "solution": "<xs:element name=\"person\">\n<xs:complexType>\n<xs:all>\n<xs:element name=\"firstname\" type=\"xs:string\"/>\n<xs:element name=\"lastname\" type=\"xs:string\"/>\n</xs:all>\n</xs:complexType>\n</xs:element>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<xs:element name=\"person\">\n<xs:complexType>\n<xs:choice>\n# TODO: Complete this line\n<xs:element name=\"member\" type=\"member\"/>\n</xs:choice>\n</xs:complexType>\n</xs:element>",
      "solution": "<xs:element name=\"person\">\n<xs:complexType>\n<xs:choice>\n<xs:element name=\"employee\" type=\"employee\"/>\n<xs:element name=\"member\" type=\"member\"/>\n</xs:choice>\n</xs:complexType>\n</xs:element>"
    }
  ],
  "related_topics": [
    {
      "id": "3979118f-3aa4-4ca3-ae16-c1b81d5c94af",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "783f43c8-e04a-4430-bb2c-d3f92d262b03",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "c4745513-e80f-4caa-b9bf-b5b019b3df17",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is XSD\nIndicators\n\nWe can control HOW elements?",
      "options": [
        "None of the above.",
        "seven indicators:\nOrder indicators:\nAll\nChoice\nSequence\nOccurrence indicators:\nmaxOccurs\nminOccurs\nGroup indicators:\nGroup name\nattributeGroup name\nOrder Indicators\nOrder indicators are used to define the order of the elements",
        "to be used in documents with indicators",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of XSD\nIndicators\n\nWe can control HOW elements is 'to be used in documents with indicators'."
    },
    {
      "question": "What is Indicators\nThere?",
      "options": [
        "None of the above.",
        "None of the above.",
        "to be used in documents with indicators",
        "seven indicators:\nOrder indicators:\nAll\nChoice\nSequence\nOccurrence indicators:\nmaxOccurs\nminOccurs\nGroup indicators:\nGroup name\nattributeGroup name\nOrder Indicators\nOrder indicators are used to define the order of the elements"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Indicators\nThere is 'seven indicators:\nOrder indicators:\nAll\nChoice\nSequence\nOccurrence indicators:\nmaxOccurs\nminOccurs\nGroup indicators:\nGroup name\nattributeGroup name\nOrder Indicators\nOrder indicators are used to define the order of the elements'."
    }
  ],
  "summary": "This tutorial covers XSDIndicators concepts and techniques. You'll learn how to use XSDIndicators effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of XSDIndicators and how to apply it in your projects."
}