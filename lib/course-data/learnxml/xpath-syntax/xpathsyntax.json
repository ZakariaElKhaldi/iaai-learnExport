{
  "id": "64c1c103-4447-4aec-9099-9fb0191a0788",
  "title": "XPathSyntax",
  "slug": "xpathsyntax",
  "metadata": {
    "description": "Learn about XPathSyntax with clear explanations and practical examples.",
    "keywords": [
      "bookstore",
      "book",
      "selects",
      "element",
      "title",
      "elements",
      "path",
      "node",
      "price",
      "expressions"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnXML",
    "subcategory": "XPath Syntax"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "XPath\nSyntax",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "XPath uses path expressions to select nodes or node-sets in an XML document. \nThe node is selected by following a path or steps.\nThe XML Example Document\nWe will use the following XML document in the examples below.\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bookstore>\n<book>\n<title lang=\"en\">Harry Potter</title>\n<price>29.99</price>\n</book>\n<book>\n<title lang=\"en\">Learning XML</title>\n<price>39.95</price>\n</book>\n</bookstore>\nSelecting Nodes\nXPath uses path expressions to select nodes in an XML document. The node is selected by following a path or steps. \nThe most useful \npath expressions are listed below:\nExpression\nDescription\nnodename\nSelects all nodes with the name \"\nnodename\n\"\n/\nSelects from the root node\n//\nSelects nodes in the document from the current node that match the selection no matter where they are\n.\nSelects the current node\n..\nSelects the parent of the current node\n@\nSelects attributes\nIn the table below we have listed some path expressions and the result of the \nexpressions:\nPath Expression\nResult\nbookstore\nSelects all nodes with the name \"bookstore\"\n/bookstore\nSelects the root element bookstore\nNote:\nIf the path starts with a slash ( / ) it always represents an absolute \npath to an element!\nbookstore/book\nSelects all book elements that are children of bookstore\n//book\nSelects all book elements no matter where they are in the document\nbookstore//book\nSelects all book elements that are descendant of the bookstore element, no matter where they are under the bookstore element\n//@lang\nSelects all attributes that are named lang\nPredicates\nPredicates are used to find a specific node or a node that contains a specific value.\nPredicates are always embedded in square brackets.\nIn the table below we have listed some path expressions with predicates and the result of the \nexpressions:\nPath Expression\nResult\n/bookstore/book[1]\nSelects the first book element that is the child of the bookstore element.\nNote:\nIn IE 5,6,7,8,9 first node is[0], but according to W3C, it is [1]. To solve this problem in IE, set the SelectionLanguage to XPath:\nIn JavaScript: xml\n.setProperty(\"SelectionLanguage\",\"XPath\");\n/bookstore/book[last()]\nSelects the last book element that is the child of the bookstore element\n/bookstore/book[last()-1]\nSelects the last but one book element that is the child of the bookstore element\n/bookstore/book[position()<3]\nSelects the first two book elements that are children of the bookstore element\n//title[@lang]\nSelects all the title elements that have an attribute named lang\n//title[@lang='en']\nSelects all the title elements that have a \"lang\" attribute  with a value of \"en\"\n/bookstore/book[price>35.00]\nSelects all the book elements of the bookstore element that have a price element with a value greater than 35.00\n/bookstore/book[price>35.00]/title\nSelects all the title elements of the book elements of the bookstore element that have a price element with a value greater than 35.00\nSelecting Unknown Nodes\nXPath wildcards can be used to select unknown XML nodes.\nWildcard\nDescription\n*\nMatches any element node\n@*\nMatches any attribute node\nnode()\nMatches any node of any kind\nIn the table below we have listed some path expressions and the result of the \nexpressions:\nPath Expression\nResult\n/bookstore/*\nSelects all the child element nodes of the bookstore element\n//*\nSelects all elements in the document\n//title[@*]\nSelects all title elements which have at least one attribute of any kind\nSelecting Several Paths\nBy using the | operator in an XPath expression you can select several paths.\nIn the table below we have listed some path expressions and the result of the \nexpressions:\nPath Expression\nResult\n//book/title | //book/price\nSelects all the title AND price elements of all book elements\n//title | //price\nSelects all the title AND price elements in the document\n/bookstore/book/title | //price\nSelects all the title elements of the book element of the bookstore element AND all the price elements in the document\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bookstore>\n<book>\n<title lang=\"en\">Harry Potter</title>\n<price>29.99</price>\n</book>\n<book>\n<title lang=\"en\">Learning XML</title>\n<price>39.95</price>\n</book>\n</bookstore>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bookstore>\n<book>\n<title lang=\"en\">Harry Potter</title>\n<price>29.99</price>\n</book>\n<book>\n<title lang=\"en\">Learning XML</title>\n<price>39.95</price>\n# TODO: Complete this line\n</bookstore>",
      "solution": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bookstore>\n<book>\n<title lang=\"en\">Harry Potter</title>\n<price>29.99</price>\n</book>\n<book>\n<title lang=\"en\">Learning XML</title>\n<price>39.95</price>\n</book>\n</bookstore>"
    },
    {
      "title": "Implement a Function",
      "description": "Create a function that demonstrates the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Write your javascript function here\n",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "8b4530e8-9bef-44a3-adc3-94baeb527090",
      "title": "Unknown Functions and Methods",
      "relationship": "next_topic"
    },
    {
      "id": "173f2b29-48d5-455c-94fe-a30d4f87d33d",
      "title": "Unknown Data Structures",
      "relationship": "suggested_next"
    }
  ],
  "quiz": [
    {
      "question": "What is The node?",
      "options": [
        "selected by following a path or steps",
        "None of the above.",
        "None of the above.",
        "selected by following a path or steps"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of The node is 'selected by following a path or steps'."
    },
    {
      "question": "What is The node?",
      "options": [
        "None of the above.",
        "selected by following a path or steps",
        "None of the above.",
        "selected by following a path or steps"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of The node is 'selected by following a path or steps'."
    }
  ],
  "summary": "This tutorial covers XPathSyntax concepts and techniques. You'll learn how to use XPathSyntax effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of XPathSyntax and how to apply it in your projects."
}