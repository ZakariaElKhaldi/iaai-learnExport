{
  "id": "3fb079e5-169e-440e-b6b4-0824b955ff08",
  "title": "XSLT -On the Server",
  "slug": "xslt-on-the-server",
  "metadata": {
    "description": "Learn about XSLT -On the Server with clear explanations and practical examples.",
    "keywords": [
      "file",
      "server",
      "transform",
      "load",
      "xhtml",
      "browser",
      "xslt",
      "data",
      "title",
      "artist"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnXML",
    "subcategory": "XSLT on the Server"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "XSLT -\nOn the Server",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "To make XML data available to all kind of browsers, we \ncan transform the XML document on the\nSERVER and send it\u00a0 back to the browser as XHTML.\nA Cross Browser Solution\nIn the \nfrom XML to XHTML in the browser. We used a JavaScript and an XML\nparser for the transformation. However, this will not work\nin a browser that doesn't have an XML parser.\nTo make XML data available to all kind of browsers, we \ncan transform the XML document on the\nserver and send back to the browser as XHTML.\nThat's another beauty of XSLT. One of the design goals for XSLT was to make it possible to\ntransform data from one format\nto another on a server, returning readable data to all kinds of browsers.\nThe XML File and the XSLT File\nLook at the XML document that you have seen in the \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<catalog>\n<cd>\n<title>Empire Burlesque</title>\n<artist>Bob Dylan</artist>\n<country>USA</country>\n<company>Columbia</company>\n<price>10.90</price>\n<year>1985</year>\n</cd>\n.\n.\n</catalog>\nView the XML file\n.\nAnd the accompanying XSL style sheet:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th style=\"text-align:left\">Title</th>\n<th style=\"text-align:left\">Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd\">\n<tr>\n<td><xsl:value-of select=\"title\" /></td>\n<td><xsl:value-of select=\"artist\" /></td>\n</tr>\n</xsl:for-each>\n</table>\n</xsl:template>\n</xsl:stylesheet>\nView the XSL file\n.\nNotice that the XML file does not have a reference to the XSL file.\nIMPORTANT:\nThe above sentence indicates that an XML file could be \ntransformed using many different XSL style sheets.\nPHP Code: Transform XML to XHTML on the Server\nHere is the PHP source code needed to transform the XML file to XHTML on the server:\n<?php\n// Load XML file\n$xml = new DOMDocument;\n$xml->load('cdcatalog.xml');\n// Load XSL file\n$xsl = new DOMDocument;\n$xsl->load('cdcatalog.xsl');\n// \nConfigure the transformer\n$proc = new XSLTProcessor;\n// Attach the xsl \nrules\n$proc->importStyleSheet($xsl);\necho $proc->transformToXML($xml);\n?>\nTip:\nIf you don't know how to write PHP, please study our\nPHP tutorial\n.\nSee how it works with PHP\n.\nASP Code: Transform XML to XHTML on the Server\nHere is the ASP source code needed to transform the XML file to XHTML on the server:\n<%\n'Load XML file\nset xml = Server.CreateObject(\"Microsoft.XMLDOM\")\nxml.async = false\nxml.load(Server.MapPath(\"cdcatalog.xml\"))\n'Load XSL file\nset xsl = Server.CreateObject(\"Microsoft.XMLDOM\")\nxsl.async = false\nxsl.load(Server.MapPath(\"cdcatalog.xsl\"))\n'Transform file\nResponse.Write(xml.transformNode(xsl))\n%>\nSee how it works with ASP\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<catalog>\n<cd>\n<title>Empire Burlesque</title>\n<artist>Bob Dylan</artist>\n<country>USA</country>\n<company>Columbia</company>\n<price>10.90</price>\n<year>1985</year>\n</cd>\n.\n.\n</catalog>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th style=\"text-align:left\">Title</th>\n<th style=\"text-align:left\">Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd\">\n<tr>\n<td><xsl:value-of select=\"title\" /></td>\n<td><xsl:value-of select=\"artist\" /></td>\n</tr>\n</xsl:for-each>\n</table>\n</xsl:template>\n</xsl:stylesheet>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<?php\n// Load XML file\n$xml = new DOMDocument;\n$xml->load('cdcatalog.xml');\n// Load XSL file\n$xsl = new DOMDocument;\n$xsl->load('cdcatalog.xsl');\n// \nConfigure the transformer\n$proc = new XSLTProcessor;\n// Attach the xsl \nrules\n$proc->importStyleSheet($xsl);\necho $proc->transformToXML($xml);\n?>",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<%\n'Load XML file\nset xml = Server.CreateObject(\"Microsoft.XMLDOM\")\nxml.async = false\nxml.load(Server.MapPath(\"cdcatalog.xml\"))\n'Load XSL file\nset xsl = Server.CreateObject(\"Microsoft.XMLDOM\")\nxsl.async = false\nxsl.load(Server.MapPath(\"cdcatalog.xsl\"))\n'Transform file\nResponse.Write(xml.transformNode(xsl))\n%>",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<catalog>\n<cd>\n<title>Empire Burlesque</title>\n<artist>Bob Dylan</artist>\n# TODO: Complete this line\n<company>Columbia</company>\n<price>10.90</price>\n<year>1985</year>\n</cd>\n.\n.\n</catalog>",
      "solution": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<catalog>\n<cd>\n<title>Empire Burlesque</title>\n<artist>Bob Dylan</artist>\n<country>USA</country>\n<company>Columbia</company>\n<price>10.90</price>\n<year>1985</year>\n</cd>\n.\n.\n</catalog>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n# TODO: Complete this line\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th style=\"text-align:left\">Title</th>\n<th style=\"text-align:left\">Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd\">\n<tr>\n<td><xsl:value-of select=\"title\" /></td>\n<td><xsl:value-of select=\"artist\" /></td>\n</tr>\n</xsl:for-each>\n</table>\n</xsl:template>\n</xsl:stylesheet>",
      "solution": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th style=\"text-align:left\">Title</th>\n<th style=\"text-align:left\">Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd\">\n<tr>\n<td><xsl:value-of select=\"title\" /></td>\n<td><xsl:value-of select=\"artist\" /></td>\n</tr>\n</xsl:for-each>\n</table>\n</xsl:template>\n</xsl:stylesheet>"
    }
  ],
  "related_topics": [
    {
      "id": "8921f84c-0419-42ce-bc2a-9389f73bcd26",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "26d95bb1-a570-4c2d-b3a6-ec788a142a30",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "03ffbf3c-44a4-4b23-b27e-b7fc8589acfe",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Transform XML to XHTML on the Server\nHere?",
      "options": [
        "the ASP source code needed to transform the XML file to XHTML on the server:\n<%\n'Load XML file\nset xml = Server",
        "None of the above.",
        "None of the above.",
        "the PHP source code needed to transform the XML file to XHTML on the server:\n<"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Transform XML to XHTML on the Server\nHere is 'the PHP source code needed to transform the XML file to XHTML on the server:\n<'."
    },
    {
      "question": "What is Transform XML to XHTML on the Server\nHere?",
      "options": [
        "the ASP source code needed to transform the XML file to XHTML on the server:\n<%\n'Load XML file\nset xml = Server",
        "the PHP source code needed to transform the XML file to XHTML on the server:\n<",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of Transform XML to XHTML on the Server\nHere is 'the ASP source code needed to transform the XML file to XHTML on the server:\n<%\n'Load XML file\nset xml = Server'."
    }
  ],
  "summary": "This tutorial covers XSLT -On the Server concepts and techniques. You'll learn how to use XSLT -On the Server effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of XSLT -On the Server and how to apply it in your projects."
}