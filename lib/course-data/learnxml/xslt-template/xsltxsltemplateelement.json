{
  "id": "14ec2b77-0ee4-4721-b323-14a767da7246",
  "title": "XSLT<xsl:template>Element",
  "slug": "xsltxsltemplateelement",
  "metadata": {
    "description": "Learn about XSLT<xsl:template>Element with clear explanations and practical examples.",
    "keywords": [
      "template",
      "element",
      "document",
      "match",
      "version",
      "style",
      "sheet",
      "attribute",
      "defines",
      "xslt"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnXML",
    "subcategory": "XSLT <template>"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "XSLT\n<xsl:template>\nElement",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "An XSL style sheet consists of one or more set of rules that \nare called templates.\nA template contains rules to apply when a \nspecified node is matched.\nThe <xsl:template> Element\nThe <xsl:template> element is used to build templates.\nThe\nmatch\nattribute is used to associate a template with an XML\nelement. The match attribute can also be used to define a template for the \nentire XML document. The value of the match attribute is an XPath expression (i.e. match=\"/\" defines the whole document).\nOk, let's look at a simplified version of the XSL file from the \nExample\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<tr>\n<td>.</td>\n<td>.</td>\n</tr>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>\n\nExample Explained\nSince an XSL style sheet is an XML document, it always begins with the XML\ndeclaration:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n.\nThe \n<xsl:stylesheet>\n,\ndefines that this \ndocument is an XSLT style sheet document (along with the version number and XSLT namespace attributes).\nThe\n<xsl:template>\nelement defines a template.\nThe\nmatch=\"/\"\nattribute associates the template with the root of the XML source document.\nThe content inside the <xsl:template> element defines some HTML to write to the output.\nThe last two lines define the end of the template and the end of the style sheet.\nThe result from this example was a little disappointing, because no data was copied from the XML document to the output. In the \n<xsl:value-of>\nelement to select values from the XML elements.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<tr>\n<td>.</td>\n<td>.</td>\n</tr>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<tr>\n<td>.</td>\n# TODO: Complete this line\n</tr>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>",
      "solution": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<tr>\n<td>.</td>\n<td>.</td>\n</tr>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>"
    },
    {
      "title": "Create a Layout",
      "description": "Build a simple layout using the techniques from this tutorial.",
      "difficulty": "easy",
      "starter_code": "<!-- Add your code here -->",
      "solution": "<!-- Example solution would go here -->"
    }
  ],
  "related_topics": [
    {
      "id": "d25c851d-3b10-4a97-bccf-e7dc7514d001",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "3ac2f96c-ded3-4bee-8fdf-7c1c5864f3ef",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "e6e068cc-44ef-4ec5-978c-8521cdb9fc14",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Element\n\nAn XSL style sheet consists of one or more set of rules that?",
      "options": [
        "None of the above.",
        "None of the above.",
        "called templates",
        "matched"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Element\n\nAn XSL style sheet consists of one or more set of rules that is 'called templates'."
    },
    {
      "question": "What is A template contains rules to apply when a \nspecified node?",
      "options": [
        "called templates",
        "matched",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of A template contains rules to apply when a \nspecified node is 'matched'."
    }
  ],
  "summary": "This tutorial covers XSLT<xsl:template>Element concepts and techniques. You'll learn how to use XSLT<xsl:template>Element effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of XSLT<xsl:template>Element and how to apply it in your projects."
}