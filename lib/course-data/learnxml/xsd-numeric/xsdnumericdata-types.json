{
  "id": "b213b57e-d3e0-47fe-8ce6-b37e6fad6dd0",
  "title": "XSDNumericData Types",
  "slug": "xsdnumericdata-types",
  "metadata": {
    "description": "Learn about XSDNumericData Types with clear explanations and practical examples.",
    "keywords": [
      "c",
      "price",
      "integer",
      "data",
      "decimal",
      "might",
      "look",
      "like",
      "numeric",
      "type",
      "types"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnXML",
    "subcategory": "XSD Numeric"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "XSD\nNumeric\nData Types",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Decimal data types are used for numeric values.\nDecimal Data Type\nThe decimal data type is used to specify a numeric value.\nThe following is an example of a decimal declaration in a schema:\n<xs:element name=\"price\" type=\"xs:decimal\"/>\nAn element in your document might look like this:\n<price>999.50</price>\nOr it might look like this:\n<price>+999.5450</price>\nOr it might look like this:\n<price>-999.5230</price>\nOr it might look like this:\n<price>0</price>\nOr it might look like this:\n<price>14</price>\nInteger Data Type\nThe integer data type is used to specify a numeric value without a fractional component.\nThe following is an example of an integer declaration in a schema:\n<xs:element name=\"price\" type=\"xs:integer\"/>\nAn element in your document might look like this:\n<price>999</price>\nOr it might look like this:\n<price>+999</price>\nOr it might look like this:\n<price>-999</price>\nOr it might look like this:\n<price>0</price>\nNumeric Data Types\nNote that all of the data types below derive from the Decimal data type \n(except for decimal itself)!\nName\nDescription\nbyte\nA signed 8-bit integer\ndecimal\nA decimal value\nint\nA signed 32-bit integer\ninteger\nAn integer value\nlong\nA signed 64-bit integer\nnegativeInteger\nAn integer containing only negative values (..,-2,-1)\nnonNegativeInteger\nAn integer containing only non-negative values (0,1,2,..)\nnonPositiveInteger\nAn integer containing only non-positive values (..,-2,-1,0)\npositiveInteger\nAn integer containing only positive values (1,2,..)\nshort\nA signed 16-bit integer\nunsignedLong\nAn unsigned 64-bit integer\nunsignedInt\nAn unsigned 32-bit integer\nunsignedShort\nAn unsigned 16-bit integer\nunsignedByte\nAn unsigned 8-bit integer\nRestrictions on Numeric Data Types\nRestrictions that can be used with Numeric data types:\nenumeration\nfractionDigits\nmaxExclusive\nmaxInclusive\nminExclusive\nminInclusive\npattern\ntotalDigits\nwhiteSpace\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<xs:element name=\"price\" type=\"xs:decimal\"/>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<price>999.50</price>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<price>+999.5450</price>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<price>-999.5230</price>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "<price>0</price>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "<price>14</price>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "<xs:element name=\"price\" type=\"xs:integer\"/>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "<price>999</price>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "<price>+999</price>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": "<price>-999</price>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 13,
      "code": "<price>0</price>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your html code here",
      "solution": "<xs:element name=\"price\" type=\"xs:decimal\"/>"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your html code here",
      "solution": "<price>999.50</price>"
    }
  ],
  "related_topics": [
    {
      "id": "36147680-1602-483f-9f41-e4e19e627d47",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "1f80c2ae-f6f8-42d3-a33d-1c2440a22b73",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "e4075585-3691-4324-b0d9-c1605c02066f",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is XSD\nNumeric\nData Types\n\nDecimal data types?",
      "options": [
        "None of the above.",
        "used to specify a numeric value",
        "None of the above.",
        "used for numeric values"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of XSD\nNumeric\nData Types\n\nDecimal data types is 'used for numeric values'."
    },
    {
      "question": "What is Decimal Data Type\nThe decimal data type?",
      "options": [
        "None of the above.",
        "used to specify a numeric value",
        "used for numeric values",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Decimal Data Type\nThe decimal data type is 'used to specify a numeric value'."
    }
  ],
  "summary": "This tutorial covers XSDNumericData Types concepts and techniques. You'll learn how to use XSDNumericData Types effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of XSDNumericData Types and how to apply it in your projects."
}