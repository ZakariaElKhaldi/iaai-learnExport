{
  "id": "b14a61eb-863d-4331-b2bf-29e7d379f269",
  "title": "XSLT<xsl:for-each>Element",
  "slug": "xsltxslfor-eachelement",
  "metadata": {
    "description": "Learn about XSLT<xsl:for-each>Element with clear explanations and practical examples.",
    "keywords": [
      "c",
      "select",
      "element",
      "artist",
      "value",
      "version",
      "stylesheet",
      "template",
      "html",
      "body",
      "table"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnXML",
    "subcategory": "XSLT <for-each>"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "XSLT\n<xsl:for-each>\nElement",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The <xsl:for-each> element allows you to do looping in XSLT.\nThe <xsl:for-each> Element\nThe XSL <xsl:for-each> element can be used to select every XML element of a specified node-set:\nExample\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd\">\n<tr>\n<td><xsl:value-of select=\"title\"/></td>\n<td><xsl:value-of select=\"artist\"/></td>\n</tr>\n</xsl:for-each>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>\n\nNote:\nThe value of the\nselect\nattribute is an XPath expression.\nAn XPath expression works like navigating a file system; where a forward slash (/) selects subdirectories.\nFiltering the Output\nWe can also filter the output from the XML file by adding a criterion to the \nselect attribute in the <xsl:for-each> element.\n<xsl:for-each select=\"catalog/cd[artist='Bob Dylan']\">\nLegal filter operators are:\n=\u00a0 (equal)\n!= (not equal)\n&lt; less than\n&gt; greater than\nTake a look at the adjusted XSL style sheet:\nExample\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd[artist='Bob Dylan']\">\n<tr>\n<td><xsl:value-of select=\"title\"/></td>\n<td><xsl:value-of select=\"artist\"/></td>\n</tr>\n</xsl:for-each>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd\">\n<tr>\n<td><xsl:value-of select=\"title\"/></td>\n<td><xsl:value-of select=\"artist\"/></td>\n</tr>\n</xsl:for-each>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd[artist='Bob Dylan']\">\n<tr>\n<td><xsl:value-of select=\"title\"/></td>\n<td><xsl:value-of select=\"artist\"/></td>\n</tr>\n</xsl:for-each>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd\">\n<tr>\n<td><xsl:value-of select=\"title\"/></td>\n<td><xsl:value-of select=\"artist\"/></td>\n</tr>\n</xsl:for-each>\n</table>\n</body>\n# TODO: Complete this line\n</xsl:template>\n</xsl:stylesheet>",
      "solution": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd\">\n<tr>\n<td><xsl:value-of select=\"title\"/></td>\n<td><xsl:value-of select=\"artist\"/></td>\n</tr>\n</xsl:for-each>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n# TODO: Complete this line\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd[artist='Bob Dylan']\">\n<tr>\n<td><xsl:value-of select=\"title\"/></td>\n<td><xsl:value-of select=\"artist\"/></td>\n</tr>\n</xsl:for-each>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>",
      "solution": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd[artist='Bob Dylan']\">\n<tr>\n<td><xsl:value-of select=\"title\"/></td>\n<td><xsl:value-of select=\"artist\"/></td>\n</tr>\n</xsl:for-each>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>"
    }
  ],
  "related_topics": [
    {
      "id": "a1990a13-3c6d-4091-8b15-22315e79c15a",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "d764ae6e-6237-4d29-9bd3-e9e2f1761e3a",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "b7abc835-1aef-492e-833a-802f9c6f4cd4",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The value of the\nselect\nattribute?",
      "options": [
        "None of the above.",
        "None of the above.",
        "an XPath expression",
        "Not a The value of the\nselect\nattribute."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of The value of the\nselect\nattribute is 'an XPath expression'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers XSLT<xsl:for-each>Element concepts and techniques. You'll learn how to use XSLT<xsl:for-each>Element effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of XSLT<xsl:for-each>Element and how to apply it in your projects."
}