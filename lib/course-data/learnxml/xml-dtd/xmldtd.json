{
  "id": "74c34072-28e2-48ce-bd09-e7911cf31849",
  "title": "XMLDTD",
  "slug": "xmldtd",
  "metadata": {
    "description": "Learn about XMLDTD with clear explanations and practical examples.",
    "keywords": [
      "element",
      "note",
      "heading",
      "body",
      "pcdata",
      "document",
      "defines",
      "doctype",
      "entity",
      "type"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnXML",
    "subcategory": "XML DTD"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "XML\nDTD",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "An XML document with correct syntax is called \"Well Formed\".\nAn XML document validated against a DTD is both \"Well Formed\" \nand \"Valid\".\nWhat is a DTD?\nDTD stands for Document Type Definition.\nA DTD defines the structure and the legal elements and attributes of an XML document.\nValid XML Documents\nA \"Valid\" XML document is \"Well Formed\", as well as it conforms to the rules of a \nDTD:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE note SYSTEM \"Note.dtd\">\n<note>\n<to>Tove</to>\n<from>Jani</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>\nThe DOCTYPE declaration above contains a reference to a DTD file. The content of the \nDTD file is shown and explained below.\nXML DTD\nThe purpose of a DTD is to define the structure and the legal elements and \nattributes of an XML document:\nNote.dtd:\n<!DOCTYPE note\n[\n<!ELEMENT note (to,from,heading,body)>\n<!ELEMENT to      (#PCDATA)>\n<!ELEMENT from    (#PCDATA)>\n<!ELEMENT heading (#PCDATA)>\n<!ELEMENT body    (#PCDATA)>\n]>\nThe DTD above is interpreted like this:\n!DOCTYPE note -\u00a0 Defines that the root element of the document is note\n!ELEMENT note  - Defines that the note element must contain the elements: \"to, from, heading, body\"\n!ELEMENT to  - Defines the to element to be of type \"#PCDATA\"\n!ELEMENT from  - Defines the from element to be of type \"#PCDATA\"\n!ELEMENT heading\u00a0 - Defines the heading element to be of type \"#PCDATA\"\n!ELEMENT body - Defines the body element to be of type \"#PCDATA\"\nTip:\n#PCDATA means parseable character data.\nUsing DTD for Entity Declaration\nA DOCTYPE declaration can also be used to define special characters or strings, used in the document:\nExample\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE note [\n<!ENTITY nbsp \n\"&#xA0;\">\n<!ENTITY writer \"Writer: Donald Duck.\">\n<!ENTITY copyright \"Copyright: .\">\n]>\n<note>\n<to>Tove</to>\n<from>Jani</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n<footer>&writer;&nbsp;&copyright;</footer>\n</note>\n\nTip:\nAn entity has three parts: it starts with an ampersand (&), \nthen comes the entity name, and it ends with a semicolon (;).\nWhen to Use a DTD?\nWith a DTD, independent groups of people can agree to use a standard DTD for \ninterchanging data.\nWith a DTD, you can verify that the data you receive from the outside world is valid.\nYou can also use a DTD to verify your own data.\nIf you want to study DTD, please read our\nDTD Tutorial\n.\nWhen NOT to Use a DTD?\nXML does not require a DTD.\nWhen you are experimenting with XML, or when you are working with small XML \nfiles, creating DTDs may be a waste of time.\nIf you develop applications, \nwait until the specification is stable before you add a DTD. \nOtherwise, your software might stop working because of validation errors.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE note SYSTEM \"Note.dtd\">\n<note>\n<to>Tove</to>\n<from>Jani</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Note.dtd:",
      "content": "",
      "order": 4,
      "code": "<!DOCTYPE note\n[\n<!ELEMENT note (to,from,heading,body)>\n<!ELEMENT to      (#PCDATA)>\n<!ELEMENT from    (#PCDATA)>\n<!ELEMENT heading (#PCDATA)>\n<!ELEMENT body    (#PCDATA)>\n]>",
      "language": "unknown",
      "explanation": "Example of note.dtd:"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE note [\n<!ENTITY nbsp \n\"&#xA0;\">\n<!ENTITY writer \"Writer: Donald Duck.\">\n<!ENTITY copyright \"Copyright: W3Schools.\">\n]>\n<note>\n<to>Tove</to>\n<from>Jani</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n<footer>&writer;&nbsp;&copyright;</footer>\n</note>",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE note SYSTEM \"Note.dtd\">\n<note>\n<to>Tove</to>\n<from>Jani</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n# TODO: Complete this line",
      "solution": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE note SYSTEM \"Note.dtd\">\n<note>\n<to>Tove</to>\n<from>Jani</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<!DOCTYPE note\n[\n<!ELEMENT note (to,from,heading,body)>\n<!ELEMENT to      (#PCDATA)>\n<!ELEMENT from    (#PCDATA)>\n# TODO: Complete this line\n<!ELEMENT body    (#PCDATA)>\n]>",
      "solution": "<!DOCTYPE note\n[\n<!ELEMENT note (to,from,heading,body)>\n<!ELEMENT to      (#PCDATA)>\n<!ELEMENT from    (#PCDATA)>\n<!ELEMENT heading (#PCDATA)>\n<!ELEMENT body    (#PCDATA)>\n]>"
    }
  ],
  "related_topics": [
    {
      "id": "bb8c3119-e81e-46b8-99fc-d78323074014",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "31e9da52-aaaa-4bd5-86ee-47a75bb4d0b5",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "9610d4f8-97c4-4cdf-a1e1-288c88c8e3fa",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is XML\nDTD\n\nAn XML document with correct syntax?",
      "options": [
        "None of the above.",
        "both \"Well Formed\" \nand \"Valid\"",
        "None of the above.",
        "called \"Well Formed\""
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of XML\nDTD\n\nAn XML document with correct syntax is 'called \"Well Formed\"'."
    },
    {
      "question": "What is An XML document validated against a DTD?",
      "options": [
        "None of the above.",
        "called \"Well Formed\"",
        "None of the above.",
        "both \"Well Formed\" \nand \"Valid\""
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of An XML document validated against a DTD is 'both \"Well Formed\" \nand \"Valid\"'."
    }
  ],
  "summary": "This tutorial covers XMLDTD concepts and techniques. You'll learn how to use XMLDTD effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of XMLDTD and how to apply it in your projects."
}