{
  "id": "b8985cce-335e-4c84-8164-f992865e60d9",
  "title": "DTD -Attributes",
  "slug": "dtd-attributes",
  "metadata": {
    "description": "Learn about DTD -Attributes with clear explanations and practical examples.",
    "keywords": [
      "value",
      "attribute",
      "attlist",
      "name",
      "type",
      "element",
      "example",
      "fixed",
      "cdata",
      "valid"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnXML",
    "subcategory": "DTD Attributes"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "DTD -\nAttributes",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "In a DTD, attributes are declared with an ATTLIST declaration.\nDeclaring Attributes\nAn attribute declaration has the following syntax:\n<!ATTLIST element-name attribute-name attribute-type attribute-value>\nDTD example:\n<!ATTLIST payment type CDATA \"check\">\nXML example:\n<payment type=\"check\" />\nThe\nattribute-type\ncan be one of the following:\nType\nDescription\nCDATA\nThe value is character data\n(\nen1\n|\nen2\n|..)\nThe value must be one from an enumerated list\nID\nThe value is a unique id\nIDREF\nThe value is the id of another element\nIDREFS\nThe value is a list of other ids\nNMTOKEN\nThe value is a valid XML name\nNMTOKENS\nThe value is a list of valid XML names\nENTITY\nThe value is an entity\nENTITIES\nThe value is a list of entities\nNOTATION\nThe value is a name of a notation\nxml:\nThe value is a predefined xml value\nThe\nattribute-value\ncan be one of the following:\nValue\nExplanation\nvalue\nThe default value of the attribute\n#REQUIRED\nThe attribute is required\n#IMPLIED\nThe attribute is optional\n#FIXED\nvalue\nThe attribute value is fixed\nA Default Attribute Value\nDTD:\n<!ELEMENT square EMPTY>\n<!ATTLIST square width CDATA \"0\">\nValid XML:\n<square width=\"100\" />\nIn the example above, the \"square\" element is defined to be an empty element with\na \"width\" attribute of\u00a0 type CDATA. If no width is specified, it has a default\nvalue of 0.\n#REQUIRED\nSyntax\n<!ATTLIST element-name attribute-name attribute-type #REQUIRED>\nExample\nDTD:\n<!ATTLIST person number CDATA #REQUIRED>\nValid XML:\n<person number=\"5677\" />\nInvalid XML:\n<person />\nUse the #REQUIRED keyword if you don't have an option for a default value, but still want to force the attribute to be present.\n#IMPLIED\nSyntax\n<!ATTLIST element-name attribute-name attribute-type #IMPLIED>\nExample\nDTD:\n<!ATTLIST contact fax CDATA #IMPLIED>\nValid XML:\n<contact fax=\"555-667788\" />\nValid XML:\n<contact />\nUse the #IMPLIED keyword if you don't want to force the author to include an attribute, and you don't have an option for a default value.\n#FIXED\nSyntax\n<!ATTLIST element-name attribute-name attribute-type #FIXED \"value\">\nExample\nDTD:\n<!ATTLIST sender company CDATA #FIXED \"Microsoft\">\nValid XML:\n<sender company=\"Microsoft\" />\nInvalid XML:\n<sender company=\"\" />\nUse the #FIXED keyword when you want an attribute to have a fixed value\nwithout allowing the author to change it. If an author includes another value,\nthe XML parser will return an error.\nEnumerated Attribute Values\nSyntax\n<!ATTLIST element-name attribute-name (en1|en2|..) default-value>\nExample\nDTD:\n<!ATTLIST payment type (check|cash) \"cash\">\nXML example:\n<payment type=\"check\" />\nor\n<payment type=\"cash\" />\nUse enumerated attribute values when you want the attribute value to be one of a fixed set of legal values.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<!ATTLIST element-name attribute-name attribute-type attribute-value>\nDTD example:\n<!ATTLIST payment type CDATA \"check\">\nXML example:\n<payment type=\"check\" />",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "DTD:\n<!ELEMENT square EMPTY>\n<!ATTLIST square width CDATA \"0\">\nValid XML:\n<square width=\"100\" />",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<!ATTLIST element-name attribute-name attribute-type #REQUIRED>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "DTD:\n<!ATTLIST person number CDATA #REQUIRED>\nValid XML:\n<person number=\"5677\" />\nInvalid XML:\n<person />",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "<!ATTLIST element-name attribute-name attribute-type #IMPLIED>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "DTD:\n<!ATTLIST contact fax CDATA #IMPLIED>\nValid XML:\n<contact fax=\"555-667788\" />\nValid XML:\n<contact />",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "<!ATTLIST element-name attribute-name attribute-type #FIXED \"value\">",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "DTD:\n<!ATTLIST sender company CDATA #FIXED \"Microsoft\">\nValid XML:\n<sender company=\"Microsoft\" />\nInvalid XML:\n<sender company=\"W3Schools\" />",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "<!ATTLIST element-name attribute-name (en1|en2|..) default-value>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": "DTD:\n<!ATTLIST payment type (check|cash) \"cash\">\nXML example:\n<payment type=\"check\" />\nor\n<payment type=\"cash\" />",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<!ATTLIST element-name attribute-name attribute-type attribute-value>\nDTD example:\n# TODO: Complete this line\nXML example:\n<payment type=\"check\" />",
      "solution": "<!ATTLIST element-name attribute-name attribute-type attribute-value>\nDTD example:\n<!ATTLIST payment type CDATA \"check\">\nXML example:\n<payment type=\"check\" />"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "DTD:\n# TODO: Complete this line\n<!ATTLIST square width CDATA \"0\">\nValid XML:\n<square width=\"100\" />",
      "solution": "DTD:\n<!ELEMENT square EMPTY>\n<!ATTLIST square width CDATA \"0\">\nValid XML:\n<square width=\"100\" />"
    }
  ],
  "related_topics": [
    {
      "id": "368b5a40-8974-4e60-8559-b3e07e0c6b3a",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "37dd5658-f0ba-46a2-857a-c23ae943d379",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "e0a072ec-0388-445b-ac1e-1259a13d2b12",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is attributes?",
      "options": [
        "None of the above.",
        "declared with an ATTLIST declaration",
        "character data\n(\nen1\n|\nen2\n|",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of attributes is 'declared with an ATTLIST declaration'."
    },
    {
      "question": "What is Type\nDescription\nCDATA\nThe value?",
      "options": [
        "declared with an ATTLIST declaration",
        "None of the above.",
        "character data\n(\nen1\n|\nen2\n|",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Type\nDescription\nCDATA\nThe value is 'character data\n(\nen1\n|\nen2\n|'."
    }
  ],
  "summary": "This tutorial covers DTD -Attributes concepts and techniques. You'll learn how to use DTD -Attributes effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of DTD -Attributes and how to apply it in your projects."
}