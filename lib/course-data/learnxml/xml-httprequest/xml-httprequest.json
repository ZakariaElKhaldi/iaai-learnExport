{
  "id": "2aefe922-9099-4c92-80c6-1c5ec813a556",
  "title": "XML HttpRequest",
  "slug": "xml-httprequest",
  "metadata": {
    "description": "Learn about XML HttpRequest with clear explanations and practical examples.",
    "keywords": [
      "xmlhttprequest",
      "object",
      "server",
      "xhttp",
      "example",
      "data",
      "page",
      "status",
      "property",
      "request"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnXML",
    "subcategory": "XML HttpRequest"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "XML HttpRequest",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "All modern browsers have a built-in XMLHttpRequest object to \nrequest data from a server.\nThe XMLHttpRequest Object\nThe XMLHttpRequest object can be used to request data from a web server.\nThe XMLHttpRequest object is\na developers dream\n, because you can:\nUpdate a web page without reloading the page\nRequest data from a server - after the page has loaded\nReceive data from a server\u00a0 - after the page has loaded\nSend data to a server - in the background\nXMLHttpRequest Example\nWhen you type a character in the input field below, an XMLHttpRequest is sent to the server,\nand some name suggestions are returned \n(from the server):\nExample\nStart typing a name in the input field below:\nName:\nSuggestions:\nThe example above is explained in the AJAX chapters of this tutorial.\nSending an XMLHttpRequest\nA common JavaScript syntax for using the XMLHttpRequest object looks much like this:\nExample\nvar xhttp = new XMLHttpRequest();\nxhttp.onreadystatechange = function() {\nif (this.readyState == 4 && this.status == 200) {\n// Typical action to be performed when the document is ready:\ndocument.getElementById(\"demo\").innerHTML = xhttp.responseText;\n}\n};\nxhttp.open(\"GET\", \"\nfilename\n\", true);\nxhttp.send();\n\nExample Explained\nThe first line in the example above creates an\nXMLHttpRequest\nobject:\nvar xhttp = new XMLHttpRequest();\nThe\nonreadystatechange\nproperty specifies a function to be executed \nevery time the status of the XMLHttpRequest object changes:\nxhttp.onreadystatechange = function()\nWhen\nreadyState\nproperty is 4 and the\nstatus\nproperty is 200, the response is ready:\nif (this.readyState == 4 && this.status == 200)\nThe\nresponseText\nproperty returns the server response as a \ntext string.\nThe text string can be used to update a web page:\ndocument.getElementById(\"demo\").innerHTML = xhttp.responseText;\nYou will learn a lot more about the XMLHttpRequest object in the AJAX chapters of this tutorial.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "var xhttp = new XMLHttpRequest();\nxhttp.onreadystatechange = function() {\nif (this.readyState == 4 && this.status == 200) {\n// Typical action to be performed when the document is ready:\ndocument.getElementById(\"demo\").innerHTML = xhttp.responseText;\n}\n};\nxhttp.open(\"GET\", \"\nfilename\n\", true);\nxhttp.send();",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "var xhttp = new XMLHttpRequest();",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "xhttp.onreadystatechange = function()",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "if (this.readyState == 4 && this.status == 200)",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "document.getElementById(\"demo\").innerHTML = xhttp.responseText;",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "var xhttp = new XMLHttpRequest();\nxhttp.onreadystatechange = function() {\nif (this.readyState == 4 && this.status == 200) {\n// Typical action to be performed when the document is ready:\ndocument.getElementById(\"demo\").innerHTML = xhttp.responseText;\n}\n};\nxhttp.open(\"GET\", \"\nfilename\n\", true);\n# TODO: Complete this line",
      "solution": "var xhttp = new XMLHttpRequest();\nxhttp.onreadystatechange = function() {\nif (this.readyState == 4 && this.status == 200) {\n// Typical action to be performed when the document is ready:\ndocument.getElementById(\"demo\").innerHTML = xhttp.responseText;\n}\n};\nxhttp.open(\"GET\", \"\nfilename\n\", true);\nxhttp.send();"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "var xhttp = new XMLHttpRequest();"
    }
  ],
  "related_topics": [
    {
      "id": "8307df3e-dd4c-404d-a708-05b8e1152145",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "ef7b0d12-30a4-4344-a155-9ad0e94245fc",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "9a7697a1-9e7d-4169-87ee-287cd18b57d1",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The XMLHttpRequest object?",
      "options": [
        "ready:\ndocument",
        "a developers dream",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of The XMLHttpRequest object is 'a developers dream'."
    },
    {
      "question": "What is Typical action to be performed when the document?",
      "options": [
        "ready:\ndocument",
        "None of the above.",
        "None of the above.",
        "a developers dream"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of Typical action to be performed when the document is 'ready:\ndocument'."
    }
  ],
  "summary": "This tutorial covers XML HttpRequest concepts and techniques. You'll learn how to use XML HttpRequest effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of XML HttpRequest and how to apply it in your projects."
}