{
  "id": "14a5640b-d650-4f42-81af-56a87aae1603",
  "title": "XMLSyntax Rules",
  "slug": "xmlsyntax-rules",
  "metadata": {
    "description": "Learn about XMLSyntax Rules with clear explanations and practical examples.",
    "keywords": [
      "must",
      "element",
      "elements",
      "documents",
      "note",
      "encoding",
      "closing",
      "message",
      "root",
      "prolog"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnXML",
    "subcategory": "XML Syntax"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "XML\nSyntax Rules",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The syntax rules of XML are very simple and logical. The rules \nare easy to learn, and easy to use.\nXML Documents Must Have a Root Element\nXML documents must contain one\nroot\nelement that is the\nparent\nof all other elements:\n<root>\n<child>\n<subchild>.....</subchild>\n</child>\n</root>\nIn this example\n<note>\nis the root element:\n<?xml version=\"1.0\" encoding=\"UTF-8\n\"\n?>\n<note>\n<to>Tove</to>\n<from>Jani</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>\nThe XML Prolog\nThis line is called the XML\nprolog\n:\n<?xml version=\"1.0\" encoding=\"UTF-8\n\"\n?>\nThe XML prolog is optional. If it exists, it must come first in the document.\nXML documents can contain international characters, like Norwegian \u00f8\u00e6\u00e5 or \nFrench \u00ea\u00e8\u00e9.\nTo avoid errors, you should specify the encoding used, or save your XML files \nas UTF-8.\nUTF-8 is the default character encoding for XML documents.\nCharacter encoding can be studied in our\nCharacter Set Tutorial\n.\nUTF-8 is also the default encoding for HTML5, CSS, JavaScript, PHP, and SQL.\nAll XML Elements Must Have a Closing Tag\nIn XML, it is illegal to omit the closing tag. All elements\nmust\nhave \na closing tag:\n<p>This is a paragraph.</p>\n<br />\nNote:\nThe XML prolog does not have a closing tag!\nThis is not an error. The prolog is not a part of the XML document.\nXML Tags are Case Sensitive\nXML tags are case sensitive. The tag <Letter> is different from the tag \n<letter>.\nOpening and closing tags must be written with the same case:\n<message>This is correct</message>\n\"Opening and closing tags\" are often referred to as \"Start and end tags\". Use \nwhatever you prefer. It is exactly the same thing.\nXML Elements Must be Properly Nested\nIn HTML, you might see improperly nested elements:\n<b><i>This text is bold and italic</b></i>\nIn XML, all elements\nmust\nbe properly nested within each other:\n<b><i>This text is bold and italic</i></b>\nIn the example above, \"Properly nested\" simply means that since the <i> \nelement is opened inside the <b> element, it must be closed inside the <b> \nelement.\nXML Attribute Values Must Always be Quoted\nXML elements can have attributes in name/value pairs just like in HTML.\nIn XML, the attribute values must always be quoted:\n<note date=\"12/11/2007\">\n<to>Tove</to>\n<from>Jani</from>\n</note>\nEntity References\nSome characters have a special meaning in XML.\nIf you place a character like \"<\" inside an XML element, it will generate an \nerror because the parser interprets it as the start of a new element.\nThis will generate an XML error:\n<message>salary < 1000</message>\nTo avoid this error, replace the \"<\" character with an\nentity reference\n:\n<message>salary\n&lt;\n1000</message>\nThere are 5 pre-defined entity references in XML:\n&lt;\n<\nless than\n&gt;\n>\ngreater than\n&amp;\n&\nampersand\n&apos;\n'\napostrophe\n&quot;\n\"\nquotation mark\nOnly < and & are strictly illegal in XML, but it is a good habit to replace > \nwith &gt; as well.\nComments in XML\nThe syntax for writing comments in XML is similar to that of HTML:\n<!-- This is a comment -->\nTwo dashes in the middle of a comment are not allowed:\n<!-- This is an invalid -- comment -->\nWhite-space is Preserved in XML\nXML does not truncate multiple white-spaces (HTML truncates multiple \nwhite-spaces to one single white-space):\nXML:\nHello\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0Tove\nHTML:\nHello Tove\nXML Stores New Line as LF\nWindows applications store a new line as: carriage return and line feed \n(CR+LF).\nUnix and Mac OSX use LF.\nOld Mac systems use CR.\nXML stores a new line as LF.\nWell Formed XML\nXML documents that conform to the syntax rules above are said to be \"Well \nFormed\" XML documents.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<root>\n<child>\n<subchild>.....</subchild>\n</child>\n</root>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<?xml version=\"1.0\" encoding=\"UTF-8\n\"\n?>\n<note>\n<to>Tove</to>\n<from>Jani</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<?xml version=\"1.0\" encoding=\"UTF-8\n\"\n?>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<p>This is a paragraph.</p>\n<br />",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "<message>This is correct</message>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "<b><i>This text is bold and italic</b></i>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "<b><i>This text is bold and italic</i></b>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "<note date=\"12/11/2007\">\n<to>Tove</to>\n<from>Jani</from>\n</note>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "<message>salary < 1000</message>",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": "<message>salary\n&lt;\n1000</message>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 13,
      "code": "<!-- This is a comment -->",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 14,
      "code": "<!-- This is an invalid -- comment -->",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<root>\n# TODO: Complete this line\n<subchild>.....</subchild>\n</child>\n</root>",
      "solution": "<root>\n<child>\n<subchild>.....</subchild>\n</child>\n</root>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?xml version=\"1.0\" encoding=\"UTF-8\n\"\n# TODO: Complete this line\n<note>\n<to>Tove</to>\n<from>Jani</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>",
      "solution": "<?xml version=\"1.0\" encoding=\"UTF-8\n\"\n?>\n<note>\n<to>Tove</to>\n<from>Jani</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>"
    }
  ],
  "related_topics": [
    {
      "id": "792efb1b-ef45-459f-b600-0d551284df40",
      "title": "Unknown Functions and Methods",
      "relationship": "next_topic"
    },
    {
      "id": "4b1d93bb-7150-4e43-a933-af59d392487d",
      "title": "Unknown Data Structures",
      "relationship": "suggested_next"
    }
  ],
  "quiz": [
    {
      "question": "What is XML\nSyntax Rules\n\nThe syntax rules of XML?",
      "options": [
        "None of the above.",
        "very simple and logical",
        "easy to learn",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of XML\nSyntax Rules\n\nThe syntax rules of XML is 'very simple and logical'."
    },
    {
      "question": "What is The rules?",
      "options": [
        "very simple and logical",
        "easy to learn",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of The rules is 'easy to learn'."
    }
  ],
  "summary": "This tutorial covers XMLSyntax Rules concepts and techniques. You'll learn how to use XMLSyntax Rules effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of XMLSyntax Rules and how to apply it in your projects."
}