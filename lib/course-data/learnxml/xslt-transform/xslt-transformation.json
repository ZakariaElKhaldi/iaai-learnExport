{
  "id": "2c4097f3-4094-4b9e-8fe6-9cec7721a01f",
  "title": "XSLT -Transformation",
  "slug": "xslt-transformation",
  "metadata": {
    "description": "Learn about XSLT -Transformation with clear explanations and practical examples.",
    "keywords": [
      "transform",
      "xslt",
      "style",
      "sheet",
      "document",
      "version",
      "stylesheet",
      "cdcatalog",
      "title",
      "artist"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnXML",
    "subcategory": "XSLT Transform"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "XSLT -\nTransformation",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example study: How to transform XML into XHTML using XSLT?\nThe details of this example will be explained in the \nCorrect Style Sheet Declaration\nThe root element that declares the document to be an XSL style sheet is <xsl:stylesheet> or <xsl:transform>.\nNote:\n<xsl:stylesheet> and <xsl:transform> are completely synonymous and either can be used!\nThe correct way to declare an XSL style sheet according to the W3C XSLT Recommendation is:\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\nor:\n<xsl:transform version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\nTo get access to the XSLT elements, attributes and features we must declare the XSLT namespace at the top of the document.\nThe xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" points to the official W3C XSLT namespace. If you use this \nnamespace, you must also include the attribute version=\"1.0\".\nStart with a Raw XML Document\nWe want to\ntransform\nthe following XML document (\"cdcatalog.xml\") into XHTML:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<catalog>\n<cd>\n<title>Empire Burlesque</title>\n<artist>Bob Dylan</artist>\n<country>USA</country>\n<company>Columbia</company>\n<price>10.90</price>\n<year>1985</year>\n</cd>\n.\n.\n</catalog>\nViewing XML Files in browsers:\nOpen the XML file (click on \nthe link below) - The XML document will be displayed with \ncolor-coded root and child elements. Often, there is an arrow or plus/minus sign to the left of the elements \nthat can be clicked to expand or collapse the element structure.\nTip: To view \nthe raw XML source, right-click in XML file and select \"View Page Source\"!\nView \"cdcatalog.xml\"\nCreate an XSL Style Sheet\nThen you create an XSL Style Sheet (\"cdcatalog.xsl\") with a transformation template:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd\">\n<tr>\n<td><xsl:value-of select=\"title\"/></td>\n<td><xsl:value-of select=\"artist\"/></td>\n</tr>\n</xsl:for-each>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>\nView \"cdcatalog.xsl\"\nLink the XSL Style Sheet to the XML Document\nAdd the XSL style sheet reference to your XML document (\"cdcatalog.xml\"):\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"cdcatalog.xsl\"?>\n<catalog>\n<cd>\n<title>Empire Burlesque</title>\n<artist>Bob Dylan</artist>\n<country>USA</country>\n<company>Columbia</company>\n<price>10.90</price>\n<year>1985</year>\n</cd>\n.\n.\n</catalog>\nIf you have an XSLT compliant browser it will nicely\ntransform\nyour XML into XHTML.\nView the result\nThe details of the example above will be explained in the\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<xsl:transform version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<catalog>\n<cd>\n<title>Empire Burlesque</title>\n<artist>Bob Dylan</artist>\n<country>USA</country>\n<company>Columbia</company>\n<price>10.90</price>\n<year>1985</year>\n</cd>\n.\n.\n</catalog>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd\">\n<tr>\n<td><xsl:value-of select=\"title\"/></td>\n<td><xsl:value-of select=\"artist\"/></td>\n</tr>\n</xsl:for-each>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"cdcatalog.xsl\"?>\n<catalog>\n<cd>\n<title>Empire Burlesque</title>\n<artist>Bob Dylan</artist>\n<country>USA</country>\n<company>Columbia</company>\n<price>10.90</price>\n<year>1985</year>\n</cd>\n.\n.\n</catalog>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your html code here",
      "solution": "<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your html code here",
      "solution": "<xsl:transform version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">"
    }
  ],
  "related_topics": [
    {
      "id": "e45b9c56-b1b6-4b02-9913-cd9d358ae2b9",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "d94f3bc0-d2cc-46fd-9424-879e25a35274",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "b14f5c5f-93c8-46e1-9dd8-4c1e9f66b58d",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The details of this example will be explained in the \nCorrect Style Sheet Declaration\nThe root element that declares the document to be an XSL style sheet?",
      "options": [
        "<xsl:stylesheet> or <xsl:transform>",
        "None of the above.",
        "Not a The details of this example will be explained in the \nCorrect Style Sheet Declaration\nThe root element that declares the document to be an XSL style sheet.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of The details of this example will be explained in the \nCorrect Style Sheet Declaration\nThe root element that declares the document to be an XSL style sheet is '<xsl:stylesheet> or <xsl:transform>'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers XSLT -Transformation concepts and techniques. You'll learn how to use XSLT -Transformation effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of XSLT -Transformation and how to apply it in your projects."
}