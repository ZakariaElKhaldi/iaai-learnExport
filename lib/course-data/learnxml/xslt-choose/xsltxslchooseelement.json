{
  "id": "6bb145a9-b898-4108-ae23-9effd57d45e1",
  "title": "XSLT<xsl:choose>Element",
  "slug": "xsltxslchooseelement",
  "metadata": {
    "description": "Learn about XSLT<xsl:choose>Element with clear explanations and practical examples.",
    "keywords": [
      "c",
      "choose",
      "artist",
      "select",
      "otherwise",
      "value",
      "price",
      "test",
      "bgcolor",
      "example",
      "version"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnXML",
    "subcategory": "XSLT <choose>"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "XSLT\n<xsl:choose>\nElement",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The <xsl:choose> element is used in conjunction with <xsl:when> and <xsl:otherwise> to express multiple \nconditional tests.\nThe <xsl:choose> Element\nSyntax\n<xsl:choose>\n<xsl:when test=\"\nexpression\n\">\n... some output ...\n</xsl:when>\n<xsl:otherwise>\n... some output ....\n</xsl:otherwise>\n</xsl:choose>\nWhere to put the Choose Condition\nTo insert a multiple conditional test against the XML file, add the <xsl:choose>, <xsl:when>, and <xsl:otherwise> elements to the XSL file:\nExample\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd\">\n<tr>\n<td><xsl:value-of select=\"title\"/></td>\n<xsl:choose>\n<xsl:when test=\"price &gt; 10\">\n<td bgcolor=\"#ff00ff\">\n<xsl:value-of select=\"artist\"/></td>\n</xsl:when>\n<xsl:otherwise>\n<td><xsl:value-of select=\"artist\"/></td>\n</xsl:otherwise>\n</xsl:choose>\n</tr>\n</xsl:for-each>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>\n\nThe code above will add a pink background-color to the \"Artist\" column WHEN the price of the CD is higher than 10.\nAnother Example\nHere is another example that contains two <xsl:when> elements:\nExample\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd\">\n<tr>\n<td><xsl:value-of select=\"title\"/></td>\n<xsl:choose>\n<xsl:when test=\"price &gt; 10\">\n<td bgcolor=\"#ff00ff\">\n<xsl:value-of select=\"artist\"/></td>\n</xsl:when>\n<xsl:when test=\"price &gt; 9\">\n<td bgcolor=\"#cccccc\">\n<xsl:value-of select=\"artist\"/></td>\n</xsl:when>\n<xsl:otherwise>\n<td><xsl:value-of select=\"artist\"/></td>\n</xsl:otherwise>\n</xsl:choose>\n</tr>\n</xsl:for-each>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>\n\nThe code above will add a pink background color to the \"Artist\" column WHEN the \nprice of the CD is higher than 10, and a grey background-color WHEN the price of the CD is higher than 9 and lower or equal to 10.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<xsl:choose>\n<xsl:when test=\"\nexpression\n\">\n... some output ...\n</xsl:when>\n<xsl:otherwise>\n... some output ....\n</xsl:otherwise>\n</xsl:choose>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd\">\n<tr>\n<td><xsl:value-of select=\"title\"/></td>\n<xsl:choose>\n<xsl:when test=\"price &gt; 10\">\n<td bgcolor=\"#ff00ff\">\n<xsl:value-of select=\"artist\"/></td>\n</xsl:when>\n<xsl:otherwise>\n<td><xsl:value-of select=\"artist\"/></td>\n</xsl:otherwise>\n</xsl:choose>\n</tr>\n</xsl:for-each>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd\">\n<tr>\n<td><xsl:value-of select=\"title\"/></td>\n<xsl:choose>\n<xsl:when test=\"price &gt; 10\">\n<td bgcolor=\"#ff00ff\">\n<xsl:value-of select=\"artist\"/></td>\n</xsl:when>\n<xsl:when test=\"price &gt; 9\">\n<td bgcolor=\"#cccccc\">\n<xsl:value-of select=\"artist\"/></td>\n</xsl:when>\n<xsl:otherwise>\n<td><xsl:value-of select=\"artist\"/></td>\n</xsl:otherwise>\n</xsl:choose>\n</tr>\n</xsl:for-each>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<xsl:choose>\n<xsl:when test=\"\nexpression\n# TODO: Complete this line\n... some output ...\n</xsl:when>\n<xsl:otherwise>\n... some output ....\n</xsl:otherwise>\n</xsl:choose>",
      "solution": "<xsl:choose>\n<xsl:when test=\"\nexpression\n\">\n... some output ...\n</xsl:when>\n<xsl:otherwise>\n... some output ....\n</xsl:otherwise>\n</xsl:choose>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd\">\n<tr>\n<td><xsl:value-of select=\"title\"/></td>\n<xsl:choose>\n<xsl:when test=\"price &gt; 10\">\n<td bgcolor=\"#ff00ff\">\n<xsl:value-of select=\"artist\"/></td>\n</xsl:when>\n<xsl:otherwise>\n<td><xsl:value-of select=\"artist\"/></td>\n</xsl:otherwise>\n# TODO: Complete this line\n</tr>\n</xsl:for-each>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>",
      "solution": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:template match=\"/\">\n<html>\n<body>\n<h2>My CD Collection</h2>\n<table border=\"1\">\n<tr bgcolor=\"#9acd32\">\n<th>Title</th>\n<th>Artist</th>\n</tr>\n<xsl:for-each select=\"catalog/cd\">\n<tr>\n<td><xsl:value-of select=\"title\"/></td>\n<xsl:choose>\n<xsl:when test=\"price &gt; 10\">\n<td bgcolor=\"#ff00ff\">\n<xsl:value-of select=\"artist\"/></td>\n</xsl:when>\n<xsl:otherwise>\n<td><xsl:value-of select=\"artist\"/></td>\n</xsl:otherwise>\n</xsl:choose>\n</tr>\n</xsl:for-each>\n</table>\n</body>\n</html>\n</xsl:template>\n</xsl:stylesheet>"
    }
  ],
  "related_topics": [
    {
      "id": "18585afb-8f2c-4fa0-a794-268cc8ede813",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "36d6b7b9-d20a-4176-b7cc-3fda483d29c7",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "341cdb1b-771b-4a37-9cc8-deaf4bbc796c",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is element?",
      "options": [
        "higher than 10",
        "None of the above.",
        "used in conjunction with <xsl:when> and <xsl:otherwise> to express multiple \nconditional tests",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of element is 'used in conjunction with <xsl:when> and <xsl:otherwise> to express multiple \nconditional tests'."
    },
    {
      "question": "What is column WHEN the price of the CD?",
      "options": [
        "used in conjunction with <xsl:when> and <xsl:otherwise> to express multiple \nconditional tests",
        "higher than 10",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of column WHEN the price of the CD is 'higher than 10'."
    }
  ],
  "summary": "This tutorial covers XSLT<xsl:choose>Element concepts and techniques. You'll learn how to use XSLT<xsl:choose>Element effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of XSLT<xsl:choose>Element and how to apply it in your projects."
}