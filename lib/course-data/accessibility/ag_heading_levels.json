{
  "title": "Accessibility Heading Levels",
  "url": "https://www.w3schools.com/accessibility/accessibility_heading_levels.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Accessibility Heading Levels",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Why",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "People use the heading structure to scan the page and get an understanding of the main content. This is true for both sighted users and screen reader users.",
      "html": "<p>People use the heading structure to scan the page and get an understanding of the main content. This is true for both sighted users and screen reader users.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "What",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Headings are defined with the <h1> to <h6> tags. Users skim your pages by its headings.",
      "html": "<p>Headings are defined with the <code>&lt;h1&gt;</code>\u00a0to\u00a0<code>&lt;h6&gt;</code>\u00a0tags. Users skim your pages by its headings.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It is important to use headings to show the document structure and the relationships between different sections. <h1> headings should be used for main headings, followed by <h2> headings, then the less important <h3> , and so on.",
      "html": "<p>It is important to use headings to show the document structure and the relationships between different sections. <code>&lt;h1&gt;</code> headings should be used for main headings, followed by <code>&lt;h2&gt;</code> headings, then the less important <code>&lt;h3&gt;</code>, and so on.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "How",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Let us check a good and a bad example of heading levels.",
      "html": "<p>Let us check a good and a bad example of heading levels.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Good document outline: The Strait Times",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Now you have an understanding of how a document outline can be.",
      "html": "<p>Now you have an understanding of how a document outline can be.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Bad document outline: The New York Times",
      "level": "h3"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h4"
      },
      "text": "Problems",
      "level": "h4"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This document structure is confusing. It has many problems:",
      "html": "<p>This document structure is confusing. It has many problems:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Take a look at the visual hierarchy.",
      "html": "<p>Take a look at the visual hierarchy.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The most prominent headline is Trump Acquitted . The next heading is 7 Republicans Break With Former President in Vote on 2nd Impeachment . Visually, the next three headings are clearly subheadings on the same level, even if Most Bipartisan \u2026 is larger than Analysis \u2026",
      "html": "<p>The most prominent headline is <em>Trump Acquitted</em>. The next heading is <em>7 Republicans Break With Former President in Vote on 2nd Impeachment</em>. Visually, the next three headings are clearly subheadings on the same level, even if <em>Most Bipartisan \u2026</em> is larger than <em>Analysis \u2026</em></p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h4"
      },
      "text": "Solutions",
      "level": "h4"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Let us solve each problem, point by point.",
      "html": "<p>Let us solve each problem, point by point.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h5"
      },
      "text": "No main heading",
      "level": "h5"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We have at least four alternatives to set the main heading:",
      "html": "<p>We have at least four alternatives to set the main heading:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "alternative text for the image",
          "href": "https://mycourses.w3schools.com/courses/193/pages/4-dot-2-descriptive-texts-for-images",
          "title": "4.2 Descriptive Texts for Images"
        }
      ],
      "text": "There is no right and wrong here. As the front page of a newspaper, it makes sense to use the logo as the main heading . Remember to have an alternative text for the image .",
      "html": "<p>There is no right and wrong here. As the front page of a newspaper, it makes sense to <strong>use the logo as the main heading</strong>. Remember to have an <a data-api-endpoint=\"https://mycourses.w3schools.com/api/v1/courses/193/pages/4-dot-2-descriptive-texts-for-images\" data-api-returntype=\"Page\" href=\"https://mycourses.w3schools.com/courses/193/pages/4-dot-2-descriptive-texts-for-images\" title=\"4.2 Descriptive Texts for Images\">alternative text for the image</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h5"
      },
      "text": "Confusing h2s",
      "level": "h5"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "These three headings are confusing without the visual context:",
      "html": "<p>These three headings are confusing without the visual context:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We can solve this in at least two ways:",
      "html": "<p>We can solve this in at least two ways:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Sometimes it makes sense to add content just for screen readers. This is such a case. A common practice is to use a CSS class .sr-only , where sr means screen reader:",
      "html": "<p>Sometimes it makes sense to add content just for screen readers. This is such a case. A common \npractice is to use a CSS class <code>.sr-only</code>, where sr means screen reader:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "<h2 class=\"sr-only> Briefings </h2>",
      "html": "<p><code>&lt;h2 class=\"sr-only&gt;Briefings&lt;/h2&gt;</code></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "and add this styling to put it off screen:",
      "html": "<p>and add this styling to put it off screen:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "CSS class .sr-only that is only accessible for screen readers:",
      "html": "<p>CSS class <code>.sr-only</code> that is only accessible for screen readers:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": ".sr-only {\u00a0 position: absolute;\u00a0 left: -10000px;\u00a0 top: auto;\u00a0 width: 1px;\u00a0 height: 1px;\u00a0 overflow: hidden;} ",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0 position: absolute;\u00a0 left: -10000px;\u00a0 top: auto;\u00a0 width: 1px;\u00a0 height: 1px;\u00a0 overflow: hidden;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": absolute;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": -10000px;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": auto;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": 1px;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": 1px;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": hidden;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "cssHigh"
        ],
        "isNotranslate": true
      },
      "code": ".sr-only {\u00a0 position: absolute;\u00a0 left: -10000px;\u00a0 top: auto;\u00a0 width: 1px;\u00a0 height: 1px;\u00a0 overflow: hidden;}",
      "syntax_highlighting": [
        {
          "text": ".sr-only {\u00a0 position: absolute;\u00a0 left: -10000px;\u00a0 top: auto;\u00a0 width: 1px;\u00a0 height: 1px;\u00a0 overflow: hidden;} ",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0 position: absolute;\u00a0 left: -10000px;\u00a0 top: auto;\u00a0 width: 1px;\u00a0 height: 1px;\u00a0 overflow: hidden;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": absolute;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": -10000px;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": auto;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": 1px;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": 1px;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": hidden;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate cssHigh\"><span class=\"cssselectorcolor\" style=\"color:#905\">.sr-only <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0 position<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> absolute<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 left<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> -10000px<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 top<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> auto<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 width<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 1px<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 height<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 1px<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 overflow<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> hidden<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": ".sr-only {\u00a0 position: absolute;\u00a0 left: -10000px;\u00a0 top: auto;\u00a0 width: 1px;\u00a0 height: 1px;\u00a0 overflow: hidden;} ",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0 position: absolute;\u00a0 left: -10000px;\u00a0 top: auto;\u00a0 width: 1px;\u00a0 height: 1px;\u00a0 overflow: hidden;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": absolute;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": -10000px;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": auto;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": 1px;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": 1px;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": hidden;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Then it makes sense to change the level of the briefings from h2 to h3. But are they really headings? Do they present the following content? Let's say no. If we agree on that, we can change the three links to a list.",
      "html": "<p>Then it makes sense to change the level of the briefings from h2 to h3. But are they really headings? Do they present the following content? Let's say no. If we agree on that, we can change the three links to a list.\u00a0</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h5"
      },
      "text": "The Trump <h3>",
      "level": "h5"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Both the prominent heading Trump Acquitted and the following heading 7 Republicans \u2026 points to the same article. Therefore, they can be a part of the same heading. Again, there is no right or wrong here. We can change this to a h2 or we can add a hidden heading for this <section> :",
      "html": "<p>Both the prominent heading <em>Trump Acquitted</em> and the following heading <em>7 Republicans \u2026</em> points to the same article. Therefore, they can be a part of the same heading. Again, there is no right or wrong here. We can change this to a h2 or we can add a hidden heading for this <code>&lt;section&gt;</code>:\u00a0</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "<h2 class=\"sr-only\"> Headlines </h2>",
      "html": "<p><code>&lt;h2 class=\"sr-only\"&gt;Headlines&lt;/h2&gt;</code></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The heading Headlines works well together with Briefings in the document outline.",
      "html": "<p>The heading <em>Headlines</em> works well <em>together</em> with Briefings in the document outline.\u00a0</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h5"
      },
      "text": "Repeating information",
      "level": "h5"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The heading 7 Republicans \u2026 is repeated twice. This is because a h3 is nested inside another h3. Let's remove it and head over to Web Developer to display our new document outline.",
      "html": "<p>The heading <em>7 Republicans \u2026</em> is repeated twice. This is because a h3\u00a0is nested inside another h3. Let's remove it and head over to Web Developer to display our new document outline.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Way better.",
      "html": "<p>Way better.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In this page, you have read many headings. Check the document outline. Is it good?",
      "html": "<p>In this page, you have read many headings. Check the document outline. Is it good?</p>"
    }
  ]
}