{
  "id": "bc115e81-2a9c-413d-80d1-e47bfc02c9d7",
  "title": "AccessibilityHeading Levels",
  "slug": "accessibilityheading-levels",
  "metadata": {
    "description": "Learn about AccessibilityHeading Levels with clear explanations and practical examples.",
    "keywords": [
      "c",
      "heading",
      "headings",
      "document",
      "outline",
      "main",
      "trump",
      "screen",
      "times",
      "change",
      "page"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "Accessibility",
    "subcategory": "AG Heading Levels"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Accessibility\nHeading Levels",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Why\nPeople use the heading structure to scan the page and get an understanding of the main content. This is true for both sighted users and screen reader users.\nWhat\nHeadings are defined with the\n<h1>\nto\n<h6>\ntags. Users skim your pages by its headings.\nIt is important to use headings to show the document structure and the relationships between different sections.\n<h1>\nheadings should be used for main headings, followed by\n<h2>\nheadings, then the less important\n<h3>\n, and so on.\nHow\nLet us check a good and a bad example of heading levels.\nGood document outline: The Strait Times\nDownload the\nbrowser extension Web Developer\n. It is available for Chrome, Firefox and Opera.\nOpen\nThe Straits Times\n.\nOpen Web Developer. Under the tab\nInformation\n, click\nView Document Outline\n.\nScan through the document outline.\nNow you have an understanding of how a document outline can be.\nBad document outline: The New York Times\nOpen\nThe New York Times\n.\nOpen Web Developer. Under the tab\nInformation\n, click\nView Document Outline\n.\nScan through the document outline.\nProblems\nThis document structure is confusing. It has many problems:\nNo main heading\n<h1>\n.\nThe first three\n<h2>\ns are confusing without the visual context.\nThe\n<h3>\ns are not related to the \n    above\n<h2>\nabout Trump is not related to the DealBook Policy Project.\nThe\n<h3>\nhas multiple headings combined.\nThe\n<h3>\nis repeating information.\nTake a look at the visual hierarchy.\nThe most prominent headline is\nTrump Acquitted\n. The \n7 Republicans Break With Former President in Vote on 2nd Impeachment\n. Visually, the \nMost Bipartisan \u2026\nis larger than\nAnalysis \u2026\nSolutions\nLet us solve each problem, point by point.\nNo main heading\nWe have at least four alternatives to set the main heading:\nUse the logo as the main heading. The way The Straits Times did it.\nUse\nTrump Acquitted\nas the main heading.\nUse Trump Acquitted together with 7 Republicans Break With Former President in Vote on 2nd Impeachment as the main heading. Even though the two headings are distinct visually, they can be considered one heading from a semantic point of view. They both describe the content that follows.\nAdd a hidden heading\nFront page\n.\nThere is no right and wrong here. As the front page of a newspaper, it makes sense to\nuse the logo as the main heading\n. Remember to have an\nalternative text for the image\n.\nConfusing h2s\nThese three headings are confusing without the visual context:\nListen to 'The Daily'\nOpinion: Listen to 'Sway'\nDealBook D.C. Policy Project\nWe can solve this in at least two ways:\nAdd a hidden heading.\nChange the level of the headings from h2 to h3.\nChange the headings to a list.\nSometimes it makes sense to add content just for screen readers. This is such a case. A common \npractice is to use a CSS class\n.sr-only\n, where sr means screen reader:\n<h2 class=\"sr-only>Briefings</h2>\nand add this styling to put it off screen:\nCSS class\n.sr-only\nthat is only accessible for screen readers:\n.sr-only {\nposition: absolute;\nleft: -10000px;\ntop: auto;\nwidth: 1px;\nheight: 1px;\noverflow: hidden;\n}\nThen it makes sense to change the level of the briefings from h2 to h3. But are they really headings? Do they present the following content? Let's say no. If we agree on that, we can change the three links to a list.\nThe Trump <h3>\nBoth the prominent heading\nTrump Acquitted\nand the following heading\n7 Republicans \u2026\npoints to the same article. Therefore, they can be a part of the same heading. Again, there is no right or wrong here. We can change this to a h2 or we can add a hidden heading for this\n<section>\n:\n<h2 class=\"sr-only\">Headlines</h2>\nThe heading\nHeadlines\nworks well\ntogether\nwith Briefings in the document outline.\nRepeating information\nThe heading\n7 Republicans \u2026\nis repeated twice. This is because a h3\u00a0is nested inside another h3. Let's remove it and head over to Web Developer to display our new document outline.\nWay better.\nIn this page, you have read many headings. Check the document outline. Is it good?\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": ".sr-only {\nposition: absolute;\nleft: -10000px;\ntop: auto;\nwidth: 1px;\nheight: 1px;\noverflow: hidden;\n}",
      "language": "css",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": ".sr-only {\nposition: absolute;\nleft: -10000px;\ntop: auto;\nwidth: 1px;\n# TODO: Complete this line\noverflow: hidden;\n}",
      "solution": ".sr-only {\nposition: absolute;\nleft: -10000px;\ntop: auto;\nwidth: 1px;\nheight: 1px;\noverflow: hidden;\n}"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "13af5722-eea9-42d4-bba6-5eb40c17bab7",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "cee9e907-ed17-472b-8298-a7bd6f362ca9",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "d95b7f14-bb48-46a4-8d50-8986f92cfdee",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is This?",
      "options": [
        "None of the above.",
        "defined with the\n<h1>\nto\n<h6>\ntags",
        "None of the above.",
        "true for both sighted users and screen reader users"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of This is 'true for both sighted users and screen reader users'."
    },
    {
      "question": "What is What\nHeadings?",
      "options": [
        "None of the above.",
        "None of the above.",
        "true for both sighted users and screen reader users",
        "defined with the\n<h1>\nto\n<h6>\ntags"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of What\nHeadings is 'defined with the\n<h1>\nto\n<h6>\ntags'."
    }
  ],
  "summary": "This tutorial covers AccessibilityHeading Levels concepts and techniques. You'll learn how to use AccessibilityHeading Levels effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of AccessibilityHeading Levels and how to apply it in your projects."
}