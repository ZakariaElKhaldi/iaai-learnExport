{
  "id": "86cda344-f8bf-4421-933f-6db71958b653",
  "title": "AccessibilityPage Zoom",
  "slug": "accessibilitypage-zoom",
  "metadata": {
    "description": "Learn about AccessibilityPage Zoom with clear explanations and practical examples.",
    "keywords": [
      "c",
      "content",
      "page",
      "zoom",
      "text",
      "button",
      "browser",
      "available",
      "mobile",
      "example",
      "zoomed"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "Accessibility",
    "subcategory": "AG Page Zoom"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Accessibility\nPage Zoom",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Why\nPeople with low vision need to zoom the content in order to use the page.\nWhat\nThe big brother of text zoom is page zoom. Zoom everything! The principles are easy to understand:\nAvoid horizontal scrolling.\nAll content is available.\nAll functionality is available.\nAvoid text in images.\nProvide space for key content.\nAvailable means that nothing is clipped, truncated or obscured.\nPage zoom often triggers mobile view on\nresponsive sites\n, which is good.\nHow\nYou will now learn five techniques to support page zoom.\nProvide enough space for key content\nDo not let secondary content occupy the screen.\nHidden icons\nIn this example from Samsung India, the page is zoomed 400 %. The content is scaling properly. No \nhorizontal scrollbar. However, the chat button occupies a big part of the browser window. It is not easy to access the buttons for search, cart or menu. And the quality of the button graphic is low. In addition, there is a huge ad for an app.\nImprovements:\nAdd a\nminimize button\nfor the chat button. Use the minimized version as the default.\nUse\nvector graphics\nlike SVG instead of raster graphics like PNG.\nShow mobile ads only for mobile\ndevices\n.\nNo clutter\nIn this example from Philips, the entire viewport is available for main content. The main navigation is opened, and there is no clutter. The text and graphics are scaled well.\nThe viewport is set:\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\nLearn more about\nresponsive web design\n.\nAvoid horizontal scrolling\nScrolling in two dimensions is confusing.\nFixed width\nIn this example from Dell, we can only see a small part of the header. The site does not scale when zoomed. The result is a large \nhorizontal scroll that makes it hard to navigate the page in two dimensions.\nIn addition, the cookie consent button is fixed, not possible to remove even though the consent is given. The logo and the icons are low resolution PNGs that does not scale well. Viewport is not set.\nImprovements:\nMake the site\nresponsive\n.\nAdd a\nminimize button\nfor the cookie button. Use the minimized version as the default.\nUse\nvector graphics\nlike SVG instead of raster graphics like PNG.\nAll content and functionality is available\nNo content should be hidden when zoomed.\nHidden tabs\nIn this example from Sony, the tabs with product information is not accessible in a desktop browser with page zoom. Even if the user scrolls, the scrolling is happening outside of the browser window. All the specifications, features, reviews and support are inaccessible. The problem is that the entire section is \"sticky\":\n<section class=\"sticky-nav\">\n.sticky-nav {\nposition: fixed;\nz-index: 1035;\ntop: 0;\n}\nThis section is 159 pixels high in a mobile view. When zoomed four times, the fixed section occupies 636 pixels of the desktop view. With a browser height of 720 pixels, minus the top part of the browser, leaves not much room for the main content.\nFixed content is not necessarily inaccessible. The takeaway is that you should always test your site with page zoom in common browser sizes.\nIn a mobile view, the content beneath the tabs is accessible.\nThe sticky navigation from Huawei is not too high, so there are enough space for the main content.\nAvoid text in images\nIn this example from Xiaomi, the zoomed text is pixelated because it is part of the image. Parts of the text is also outside the browser window, so that the user has to scroll to read the entire product title. Displaying text with pure HTML and CSS has many benefits, in addition to be accessible: responsive, translatable and searchable.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<section class=\"sticky-nav\">\n.sticky-nav {\nposition: fixed;\nz-index: 1035;\ntop: 0;\n}",
      "language": "css",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<section class=\"sticky-nav\">\n.sticky-nav {\n# TODO: Complete this line\nz-index: 1035;\ntop: 0;\n}",
      "solution": "<section class=\"sticky-nav\">\n.sticky-nav {\nposition: fixed;\nz-index: 1035;\ntop: 0;\n}"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "9749ad58-34fa-4c1d-9510-90487bf5a5d0",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "657a6b92-8d07-4641-bb59-05b58f0f1426",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "96d3dc17-091d-468d-a800-117c0265bcba",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is What\nThe big brother of text zoom?",
      "options": [
        "None of the above.",
        "easy to understand:\nAvoid horizontal scrolling",
        "None of the above.",
        "page zoom"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of What\nThe big brother of text zoom is 'page zoom'."
    },
    {
      "question": "What is The principles?",
      "options": [
        "page zoom",
        "None of the above.",
        "easy to understand:\nAvoid horizontal scrolling",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of The principles is 'easy to understand:\nAvoid horizontal scrolling'."
    }
  ],
  "summary": "This tutorial covers AccessibilityPage Zoom concepts and techniques. You'll learn how to use AccessibilityPage Zoom effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of AccessibilityPage Zoom and how to apply it in your projects."
}