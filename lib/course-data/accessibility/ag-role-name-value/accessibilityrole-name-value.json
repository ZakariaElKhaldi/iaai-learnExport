{
  "id": "e5a28895-b1d5-41ad-93fb-df73d565b0cb",
  "title": "AccessibilityRole, Name & Value",
  "slug": "accessibilityrole-name-value",
  "metadata": {
    "description": "Learn about AccessibilityRole, Name & Value with clear explanations and practical examples.",
    "keywords": [
      "c",
      "name",
      "button",
      "role",
      "value",
      "select",
      "element",
      "accessible",
      "custom",
      "label",
      "components"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "Accessibility",
    "subcategory": "AG Role, Name & Value"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Accessibility\nRole, Name & Value",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Why\nUser interface components need a role, a name and sometimes a value, to ensure that people using\nassistive technologies\nare able to use them. Examples of assistive technologies are screen readers, switch controls and speech recognition software.\nWhat\nThere are two cases where we can't use a good HTML element with built-in accessibility features, even though we want to:\nThere is no native HTML element for what we are trying to achieve.\nThere are technical limitations that prevents us using the semantically correct element.\nIn both cases, we need to build a custom control. An important accessibility principle is that a custom control needs a role, a name and sometimes a value.\nHow\nHow do we make sure that custom components have a role, a name and a value?\nRole\nIn our last section,\nButton and Links\n, we learned that a dropdown menu button should be coded as a\n<button>\n. What if our framework does not allow us to do that? If it forces us to use an\n<a>\ninstead? If the navigation component in the library we are using, is built with\n<a>\ns? Then we need to add a role.\nThis is done with the\nrole=\"button\"\nattribute. Now users of assistive technologies can understand what the custom control is. A\n<button>\nhas the\nrole=\"button\"\nbuilt in, so to write\n<button role=\"button\">\nis redundant.\nName\nThe custom control needs a name. In our example, the name is the content of the element,\nCompany\n. As long as we have written our element like\n<div role=\"button\">Company</div>\n, we have a good name. This is also known as the accessible name. The accessible name for our\n<div>\nis\nCompany\n. Good.\nThat was too easy. In the following login form, we have several components \u2013 a logo, a heading, a label, a dropdown, an input and a button.\nWe are taking a closer look at the label, dropdown and the input. Visually there is no clear distinction between the dropdown and the input. The dropdown is coded with a\n<select>\n, which is a correct element for this case. However, it has no name:\n<select name=\"countryCode\">\u2026</select>\nIt has a\nname attribute\n. This is not the same as an accessible name. This is confusing. The article\nWhat is an accessible name?\nexplains this further. The name attribute is for computers. In a\n<form>\n, it is used as a reference when the data is submitted. This name\ncountryCode\nwill not help any users. It will not be picked up by assistive technologies.\nTo give\nthis\n<select>\nan accessible name, we must use the attribute aria-label. Normally, we would have connected a visual label to the\n<select>\ncomponent. In this case, there is only one visual label for both the components.\nThis is a\n<select>\nwith an accessible name:\n<select aria-label=\"Country calling code\" name=\"countryCode\">\u2026</select>\nValue\nSome components have a value or a state. An accordion is open or closed. This information has to be accessible.\nAn accordion is considered a custom component. There is no standard HTML element to use here. Each accordion header should be a\n<button>\nor\nrole=\"button\"\n:\n<div role=\"button\">When do I get charged for a ride?</div>\nGood. It has the role of a button. It also has a name, the content of the div. To give this button a value, we need to tell assistive technologies that it is closed. This is done with\naria-expanded=\"false\"\n:\n<div role=\"button\" aria-expanded=\"false\">When do I get charged for a ride?</div>\nNow, our accordion header has a role, name and a value.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<select aria-label=\"Country calling code\" name=\"countryCode\">\u2026</select>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your html code here",
      "solution": "<select aria-label=\"Country calling code\" name=\"countryCode\">\u2026</select>"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "605ef042-5930-46f0-a207-37c3a41f83f6",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "fca2a838-3308-4151-a301-1baa5d5911a2",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "062b8d60-58f9-4dc3-b1a9-df022553a7d7",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is to ensure that people using\nassistive technologies?",
      "options": [
        "screen readers",
        "None of the above.",
        "None of the above.",
        "able to use them"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of to ensure that people using\nassistive technologies is 'able to use them'."
    },
    {
      "question": "What is Examples of assistive technologies?",
      "options": [
        "able to use them",
        "screen readers",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Examples of assistive technologies is 'screen readers'."
    }
  ],
  "summary": "This tutorial covers AccessibilityRole, Name & Value concepts and techniques. You'll learn how to use AccessibilityRole, Name & Value effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of AccessibilityRole, Name & Value and how to apply it in your projects."
}