{
  "id": "efe9a387-0552-4af8-a519-4f890a47c010",
  "title": "AccessibilityLabels",
  "slug": "accessibilitylabels",
  "metadata": {
    "description": "Learn about AccessibilityLabels with clear explanations and practical examples.",
    "keywords": [
      "c",
      "label",
      "form",
      "labels",
      "required",
      "element",
      "aria",
      "input",
      "select",
      "users",
      "legend"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "Accessibility",
    "subcategory": "AG Labels"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Accessibility\nLabels",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Why\nLabels are critical for blind users, user with low vision, users with mobility disabilities and users with memory loss. Missing labels will make a form inaccessible for many users.\nWhat\nVisual labels are text near a form control that describe what information belongs in a given form field or a group of fields. Each label must be programmatically associated with the form control or group of controls. Labels are not necessarily the\n<label>\nelement.\nHow\nYou will learn how to use\n<label>\n,\naria-label\nand\n<legend>\n.\nThe <label>\nThe\n<label>\ntag defines a label for several elements, like\n<input>\n,\n<select>\nand\n<textarea>\n.\nIn this example from Vodafone, we have one <select> and one <input type=\"email\">, each with a describing <label>:\n<label for=\"customerType\">Who are you buying for today?</label>\n<select name=\"customerType\" id=\"customerType\">\nNotice the use of the\n<label>\nelement in the example above.\nThe\n<label>\nelement is useful for screen-reader users, because the screen-reader will read out loud the label when the user focus on the input element.\nThe\n<label>\nelement also help users who have difficulty clicking on very small regions (such as radio buttons or checkboxes) - because when the user clicks the text within the\n<label>\nelement, it toggles the radio button or checkbox.\nThe\nfor\nattribute of the\n<label>\ntag should be equal to the\nid\nattribute of the\n<input>\nelement\nto bind them together\n.\nRequired fields\nForm labels often contain a \"*\" or the word \"required\" to indicate that the field is required. Both of these methods are fine. However, it is recommended to add the\nrequired\nand\naria-required=\"true\"\nto the form control\nif\nyou use an asterisk (*):\n<label for=\"email\">Your email address <span class=\"mandatory\">*</span></label>\n<input id=\"email\" name=\"email\" required aria-required=\"true\" placeholder=\"Email\" required=\"\">\nThe aria-label\nFields without visual labels still needs a label. If you can not use a\n<label>\n, one option is to use a\naria-label\n.\nThis search field has a placeholder, but no label. A placeholder is not a valid accessible name. You can not rely on it as a substitute. An easy solution here is to add\naria-label=\"Enter search term\"\n:\n<input placeholder=\"Enter search term\" aria-label=\"Enter search term\">\nThe <legend>\nGroups of form controls, like checkboxes and radio buttons often require a higher level of \"label\" in addition to the\n<label>\n. This high level \"label\" is made with\n<fieldset>\nand\n<legend>\n.\nThis registration form has three form controls to provide the date of birth. Visually it makes sense that both day, month and year is related to \"Your date of birth\". This relation is not obvious for a screen reader user. We can not use\n<label>\nhere. The labels are Day, Month and Year. The solution is to add a\n<fieldset>\nand a\n<legend>\n:\n<fieldset>\n<legend>Your date of birth</legend>\n<label for=\"dobDay\">Day</label>\n<select id=\"dobDay\">\u2026</select>\n<label for=\"dobMonth\">Month</label>\n<select id=\"dobMonth\">\u2026</select>\n<label for=\"dobYear\">Year</label>\n<input id=\"dobYear\" type=\"text\" placeholder=\"YYYY\">\n</fieldset>\nWant to make efficient forms? Learn about\nautocomplete\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<fieldset>\n<legend>Your date of birth</legend>\n<label for=\"dobDay\">Day</label>\n<select id=\"dobDay\">\u2026</select>\n<label for=\"dobMonth\">Month</label>\n<select id=\"dobMonth\">\u2026</select>\n<label for=\"dobYear\">Year</label>\n<input id=\"dobYear\" type=\"text\" placeholder=\"YYYY\">\n</fieldset>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<fieldset>\n<legend>Your date of birth</legend>\n<label for=\"dobDay\">Day</label>\n# TODO: Complete this line\n<label for=\"dobMonth\">Month</label>\n<select id=\"dobMonth\">\u2026</select>\n<label for=\"dobYear\">Year</label>\n<input id=\"dobYear\" type=\"text\" placeholder=\"YYYY\">\n</fieldset>",
      "solution": "<fieldset>\n<legend>Your date of birth</legend>\n<label for=\"dobDay\">Day</label>\n<select id=\"dobDay\">\u2026</select>\n<label for=\"dobMonth\">Month</label>\n<select id=\"dobMonth\">\u2026</select>\n<label for=\"dobYear\">Year</label>\n<input id=\"dobYear\" type=\"text\" placeholder=\"YYYY\">\n</fieldset>"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "5a751afe-45ca-4884-9729-82fad2d849d0",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "c0f28a0a-7a6b-4102-881c-ff54a969a4fc",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "8984d05d-f787-440a-88b0-2ca15adedd79",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Accessibility\nLabels\n\nWhy\nLabels?",
      "options": [
        "None of the above.",
        "critical for blind users",
        "text near a form control that describe what information belongs in a given form field or a group of fields",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Accessibility\nLabels\n\nWhy\nLabels is 'critical for blind users'."
    },
    {
      "question": "What is What\nVisual labels?",
      "options": [
        "None of the above.",
        "text near a form control that describe what information belongs in a given form field or a group of fields",
        "critical for blind users",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of What\nVisual labels is 'text near a form control that describe what information belongs in a given form field or a group of fields'."
    }
  ],
  "summary": "This tutorial covers AccessibilityLabels concepts and techniques. You'll learn how to use AccessibilityLabels effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of AccessibilityLabels and how to apply it in your projects."
}