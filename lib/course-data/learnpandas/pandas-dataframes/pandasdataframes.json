{
  "id": "ce5c79d7-6a3c-43d7-960c-27540029f9ce",
  "title": "PandasDataFrames",
  "slug": "pandasdataframes",
  "metadata": {
    "description": "Learn about PandasDataFrames with clear explanations and practical examples.",
    "keywords": [
      "dataframe",
      "pandas",
      "data",
      "example",
      "calories",
      "duration",
      "result",
      "print",
      "return",
      "index"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnPandas",
    "subcategory": "Pandas DataFrames"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Pandas\nDataFrames",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "What is a DataFrame?\nA Pandas DataFrame is a 2 dimensional data structure, like a 2 dimensional \narray, or a table with rows and columns.\nExample\nCreate a simple Pandas DataFrame:\nimport pandas as pd\ndata = {\n\"calories\": [420, 380, 390],\n\"duration\": \n  [50, 40, 45]\n}\n#load data into a DataFrame object:\ndf = pd.DataFrame(data)\nprint(df)\nResult\ncalories  duration\n  0       420        50\n  1       380        40\n  2       390        45\n\nLocate Row\nAs you can see from the result above, the DataFrame is like a table with rows and columns.\nPandas use the\nloc\nattribute to return  \none or more specified row(s)\nExample\nReturn row 0:\n#refer to the row index:\nprint(df.loc[0])\nResult\ncalories    420\n  duration     50\n  Name: 0, dtype: int64\n\nNote:\nThis example returns a Pandas\nSeries\n.\nExample\nReturn row 0 and 1:\n#use a list of indexes:\nprint(df.loc[[0, 1]])\nResult\ncalories  duration\n  0       420        50\n  1       380        40\n\nNote:\nWhen using\n[]\n, the \n  result is a Pandas\nDataFrame\n.\nNamed Indexes\nWith the\nindex\nargument, you can name your own indexes.\nExample\nAdd a list of names to give each row a name:\nimport pandas as pd\ndata = {\n\"calories\": [420, 380, 390],\n\"duration\": \n  [50, 40, 45]\n}\ndf = pd.DataFrame(data, index = [\"day1\", \"day2\", \n  \"day3\"])\nprint(df)\nResult\ncalories  duration\n  day1       420        50\n  day2       380        40\n  day3       390        45\n\nLocate Named Indexes\nUse the named index in the\nloc\nattribute to return the specified row(s).\nExample\nReturn \"day2\":\n#refer to the named index:\nprint(df.loc[\"day2\"])\nResult\ncalories    380\n  duration     40\n  Name: day2, dtype: int64\n\nLoad Files Into a DataFrame\nIf your data sets are stored in a file, Pandas can load them into a DataFrame.\nExample\nLoad a comma separated file (CSV file) into a DataFrame:\nimport pandas as pd\ndf = pd.read_csv('data.csv')\nprint(df)\n\nYou will learn more about importing files in the\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "import pandas as pd\ndata = {\n\"calories\": [420, 380, 390],\n\"duration\": \n  [50, 40, 45]\n}\n#load data into a DataFrame object:\ndf = pd.DataFrame(data)\nprint(df)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "#refer to the row index:\nprint(df.loc[0])",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "#use a list of indexes:\nprint(df.loc[[0, 1]])",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "import pandas as pd\ndata = {\n\"calories\": [420, 380, 390],\n\"duration\": \n  [50, 40, 45]\n}\ndf = pd.DataFrame(data, index = [\"day1\", \"day2\", \n  \"day3\"])\nprint(df)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "#refer to the named index:\nprint(df.loc[\"day2\"])",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "import pandas as pd\ndf = pd.read_csv('data.csv')\nprint(df)",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "import pandas as pd\n# TODO: Complete this line\n\"calories\": [420, 380, 390],\n\"duration\": \n  [50, 40, 45]\n}\n#load data into a DataFrame object:\ndf = pd.DataFrame(data)\nprint(df)",
      "solution": "import pandas as pd\ndata = {\n\"calories\": [420, 380, 390],\n\"duration\": \n  [50, 40, 45]\n}\n#load data into a DataFrame object:\ndf = pd.DataFrame(data)\nprint(df)"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your python code here",
      "solution": "#refer to the row index:\nprint(df.loc[0])"
    }
  ],
  "related_topics": [
    {
      "id": "310a1d6d-513e-4f19-9273-a0b8d0cf886d",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "444ca723-af0b-4c21-9516-ea58bb7d59e1",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "39bec9dc-15ee-48db-b1fb-8fdf3a5abfcb",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Pandas\nDataFrames\n\nWhat?",
      "options": [
        "a DataFrame",
        "a 2 dimensional data structure",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of Pandas\nDataFrames\n\nWhat is 'a DataFrame'."
    },
    {
      "question": "What is A Pandas DataFrame?",
      "options": [
        "a 2 dimensional data structure",
        "a DataFrame",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of A Pandas DataFrame is 'a 2 dimensional data structure'."
    }
  ],
  "summary": "This tutorial covers PandasDataFrames concepts and techniques. You'll learn how to use PandasDataFrames effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PandasDataFrames and how to apply it in your projects."
}