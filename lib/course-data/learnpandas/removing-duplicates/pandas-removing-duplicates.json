{
  "id": "9c8a2355-5236-49cd-b5cc-0a46d8e30c5a",
  "title": "Pandas -Removing Duplicates",
  "slug": "pandas-removing-duplicates",
  "metadata": {
    "description": "Learn about Pandas -Removing Duplicates with clear explanations and practical examples.",
    "keywords": [
      "c",
      "duplicates",
      "method",
      "duplicated",
      "true",
      "remove",
      "removing",
      "duplicate",
      "rows",
      "returns",
      "example"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnPandas",
    "subcategory": "Removing Duplicates"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Pandas -\nRemoving Duplicates",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Discovering Duplicates\nDuplicate rows are rows \nthat have been registered more than one time.\nDuration          Date  Pulse  Maxpulse  Calories\n  0         60  '2020/12/01'    110       130     409.1\n  1         60  '2020/12/02'    117       145     479.0\n  2         60  '2020/12/03'    103       135     340.0\n  3         45  '2020/12/04'    109       175     282.4\n  4         45  '2020/12/05'    117       148     406.0\n  5         60  '2020/12/06'    102       127     300.0\n  6         60  '2020/12/07'    110       136     374.0\n  7        450  '2020/12/08'    104       134     253.3\n  8         30  '2020/12/09'    109       133     195.1\n  9         60  '2020/12/10'     98       124     269.0\n  10        60  '2020/12/11'    103       147     329.3\n11        60  '2020/12/12'    100       120     250.7\n  12        60  '2020/12/12'    100       120     250.7\n13        60  '2020/12/13'    106       128     345.3\n  14        60  '2020/12/14'    104       132     379.3\n  15        60  '2020/12/15'     98       123     275.0\n  16        60  '2020/12/16'     98       120     215.2\n  17        60  '2020/12/17'    100       120     300.0\n  18        45  '2020/12/18'     90       112       NaN\n  19        60  '2020/12/19'    103       123     323.0\n  20        45  '2020/12/20'     97       125     243.0\n  21        60  '2020/12/21'    108       131     364.2\n  22        45           NaN    100       119     282.0\n  23        60  '2020/12/23'    130       101     300.0\n  24        45  '2020/12/24'    105       132     246.0\n  25        60  '2020/12/25'    102       126     334.5\n  26        60      20201226    100       120     250.0\n  27        60  '2020/12/27'     92       118     241.0\n  28        60  '2020/12/28'    103       132       NaN\n  29        60  '2020/12/29'    100       132     280.0\n  30        60  '2020/12/30'    102       129     380.3\n  31        60  '2020/12/31'     92       115     243.0\nBy taking a look at our test data set, we can assume that row 11 and 12 are duplicates.\nTo discover duplicates, we can use the\nduplicated()\nmethod.\nThe\nduplicated()\nmethod returns a Boolean values for each row:\nExample\nReturns\nTrue\nfor every row that is a duplicate, \n  otherwise\nFalse\n:\nprint(df.duplicated())\n\nRemoving Duplicates\nTo remove duplicates, use the\ndrop_duplicates()\nmethod.\nExample\nRemove all duplicates:\ndf.drop_duplicates(inplace = True)\n\nRemember:\nThe\n(inplace = True)\nwill \n  make sure that the method does NOT return a\nnew\nDataFrame, but it will remove all \n  duplicates from the\noriginal\nDataFrame.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "print(df.duplicated())",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "df.drop_duplicates(inplace = True)",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your python code here",
      "solution": "print(df.duplicated())"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your python code here",
      "solution": "df.drop_duplicates(inplace = True)"
    }
  ],
  "related_topics": [
    {
      "id": "9360e2b9-6b17-48e0-9372-239f2ea9b2d1",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "3d60b917-9656-40ab-8026-f74c53f45d0e",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "baad67cb-1321-4027-b6fa-1c6a78d12ea0",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Removing Duplicates\n\nDiscovering Duplicates\nDuplicate rows?",
      "options": [
        "Not a Removing Duplicates\n\nDiscovering Duplicates\nDuplicate rows.",
        "None of the above.",
        "rows \nthat have been registered more than one time",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Removing Duplicates\n\nDiscovering Duplicates\nDuplicate rows is 'rows \nthat have been registered more than one time'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers Pandas -Removing Duplicates concepts and techniques. You'll learn how to use Pandas -Removing Duplicates effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Pandas -Removing Duplicates and how to apply it in your projects."
}