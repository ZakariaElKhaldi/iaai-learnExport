{
  "id": "2eb6a7a5-166d-43d8-8905-86fae02a6b76",
  "title": "Pandas -DataFrame Reference",
  "slug": "pandas-dataframe-reference",
  "metadata": {
    "description": "Learn about Pandas -DataFrame Reference with clear explanations and practical examples.",
    "keywords": [
      "dataframe",
      "values",
      "specified",
      "returns",
      "value",
      "axis",
      "columns",
      "rows",
      "true",
      "false"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 7,
    "category": "LearnPandas",
    "subcategory": "DataFrames Reference"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Pandas -\nDataFrame Reference",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "All properties and methods of the DataFrame object, with explanations and \nexamples:\nProperty/Method\nDescription\nabs()\nReturn a DataFrame with the \n  absolute value of each value\nadd()\nAdds the values of a DataFrame \n  with the specified value(s)\nadd_prefix()\nPrefix all labels\nadd_suffix()\nSuffix all labels\nagg()\nApply a function or a \n  function name to one of the axis of the DataFrame\naggregate()\nApply a function \n  or a function name to one of the axis of the DataFrame\nalign()\nAligns two DataFrames with a specified join method\nall()\nReturn True if all values in the DataFrame are True, otherwise False\nany()\nReturns True if any of the values in the DataFrame are True, otherwise False\nappend()\nAppend new columns\napplymap()\nExecute a function for each element in the DataFrame\napply()\nApply a function to one \n  of the axis of the DataFrame\nassign()\nAssign new columns\nastype()\nConvert the DataFrame into a specified dtype\nat\nGet or set the value of the item with the specified label\naxes\nReturns the labels of the \n  rows and the columns of the DataFrame\nbfill()\nReplaces NULL values with the \n  value from the \nbool()\nReturns the Boolean value of the DataFrame\ncolumns\nReturns the column labels of the DataFrame\ncombine()\nCompare the values in \n  two DataFrames, and let a function decide which values to keep\ncombine_first()\nCompare \n  two DataFrames, and if the first DataFrame has a NULL value, it will be filled \n  with the respective value from the second DataFrame\ncompare()\nCompare two DataFrames and return the differences\nconvert_dtypes()\nConverts the columns in the DataFrame into new dtypes\ncorr()\nFind the correlation (relationship) between each column\ncount()\nReturns the number of not empty cells for each \n  column/row\ncov()\nFind the covariance of the columns\ncopy()\nReturns a copy of the DataFrame\ncummax()\nCalculate the cumulative maximum \n  values of the DataFrame\ncummin()\nCalculate the \n  cumulative minmum values of the DataFrame\ncumprod()\nCalculate the cumulative product \n  over the DataFrame\ncumsum()\nCalculate the cumulative sum \n  over the DataFrame\ndescribe()\nReturns a \n  description summary for each column in the DataFrame\ndiff()\nCalculate the difference \n  between a value and the value of the same column in the \ndiv()\nDivides the values of a DataFrame with the \n  specified value(s)\ndot()\nMultiplies the values of \n  a DataFrame with values from another array-like object, and add the result\ndrop()\nDrops the specified \n  rows/columns from the DataFrame\ndrop_duplicates()\nDrops duplicate values from the DataFrame\ndroplevel()\nDrops the specified index/column(s)\ndropna()\nDrops all rows that \n  contains NULL values\ndtypes\nReturns the dtypes of the columns of the DataFrame\nduplicated()\nReturns True for duplicated rows, otherwise False\nempty\nReturns True if the DataFrame is empty, otherwise False\neq()\nReturns True for values that \n  are equal to the specified value(s), otherwise False\nequals()\nReturns True if two DataFrames are equal, otherwise False\neval\nEvaluate a specified string\nexplode()\nConverts each element into a row\nffill()\nReplaces NULL values with the \n  value from the \nfillna()\nReplaces NULL values with the specified value\nfilter()\nFilter the DataFrame according to the specified filter\nfirst()\nReturns the first rows of \n  a specified date selection\nfloordiv()\nDivides the values of \n  a DataFrame with the specified value(s), and floor the values\nge()\nReturns True for values greater \n  than, or equal to the specified value(s), otherwise False\nget()\nReturns the item of the specified key\ngroupby()\nGroups the \n  rows/columns into specified groups\ngt()\nReturns True for values greater than \n  the specified value(s), otherwise False\nhead()\nReturns the header row and the first 5 rows, or the specified number of rows\niat\nGet or set the value of the item in the specified position\nidxmax()\nReturns the label of the max value in the specified \n  axis\nidxmin()\nReturns the label of the min value in the specified \n  axis\niloc\nGet or set the values of a group of elements in the specified positions\nindex\nReturns the row labels of the DataFrame\ninfer_objects()\nChange the dtype of the columns in the DataFrame\ninfo()\nPrints information about the DataFrame\ninsert()\nInsert a column in the DataFrame\ninterpolate()\nReplaces not-a-number values with the interpolated method\nisin()\nReturns True if each elements in the DataFrame is in the \n    specified value\nisna()\nFinds not-a-number values\nisnull()\nFinds NULL values\nitems()\nIterate over the columns of the DataFrame\niteritems()\nIterate over the columns of the DataFrame\niterrows()\nIterate over the rows of the DataFrame\nitertuples()\nIterate over the rows as named tuples\njoin()\nJoin columns of another DataFrame\nlast()\nReturns the last rows of a \n  specified date selection\nle()\nReturns True for values less than, \n  or equal to the specified value(s), otherwise False\nloc\nGet or set the value of a group of elements specified using their labels\nlt()\nReturns True for values less than \n  the specified value(s), otherwise False\nkeys()\nReturns the keys of the info axis\nkurtosis()\nReturns the kurtosis of the values in the specified \n  axis\nmask()\nReplace all values where the specified condition is True\nmax()\nReturn the max of the values in the specified axis\nmean()\nReturn the mean of the values in the specified axis\nmedian()\nReturn the median of the values in the specified axis\nmelt()\nReshape the DataFrame from \n  a wide table to a long table\nmemory_usage()\nReturns the memory usage of each column\nmerge()\nMerge DataFrame objects\nmin()\nReturns the min of the values in the specified axis\nmod()\nModules (find the remainder) \n  of the values of a DataFrame\nmode()\nReturns the mode of the values in the specified axis\nmul()\nMultiplies the values of a DataFrame \n  with the specified value(s)\nndim\nReturns the number of dimensions of the DataFrame\nne()\nReturns True for values that \n  are not equal to the specified value(s), otherwise False\nnlargest()\nSort the DataFrame by the specified columns, \n    descending, and return the specified number of rows\nnotna()\nFinds values that are not not-a-number\nnotnull()\nFinds values that are not NULL\nnsmallest()\nSort the DataFrame by the specified columns, \n    ascending, and return the specified number of rows\nnunique()\nReturns the number of \n  unique values in the specified axis\npct_change()\nReturns the percentage change between the \n  and the current value\npipe()\nApply a function to the \n  DataFrame\npivot()\nRe-shape the DataFrame\npivot_table()\nCreate a spreadsheet pivot table as a DataFrame\npop()\nRemoves an element from the DataFrame\npow()\nRaise the values of one DataFrame to the values of another \n    DataFrame\nprod()\nReturns the product of all values in the specified axis\nproduct()\nReturns the product of the values in the specified \n  axis\nquantile()\nReturns the values at the specified quantile of the \n  specified axis\nquery()\nQuery the DataFrame\nradd()\nReverse-adds the values of one DataFrame with the values of \n  another DataFrame\nrdiv()\nReverse-divides the values of one DataFrame with the values of \n  another DataFrame\nreindex()\nChange the labels of the DataFrame\nreindex_like()\n??\nrename()\nChange the labels of the axes\nrename_axis()\nChange the name of the axis\nreorder_levels()\nRe-order the index levels\nreplace()\nReplace the specified values\nreset_index()\nReset the index\nrfloordiv()\nReverse-divides the values of one DataFrame with the values \n  of another DataFrame\nrmod()\nReverse-modules the values of one DataFrame to the values of \n  another DataFrame\nrmul()\nReverse-multiplies the values of one DataFrame with the values of \n  another DataFrame\nround()\nReturns a DataFrame with all values rounded into the specified format\nrpow()\nReverse-raises the values of one DataFrame up to the values of \n  another DataFrame\nrsub()\nReverse-subtracts the values of one DataFrame to the values of \n  another DataFrame\nrtruediv()\nReverse-divides the values of one DataFrame with the values of \n  another DataFrame\nsample()\nReturns a random selection elements\nsem()\nReturns the standard error of the mean in the specified axis\nselect_dtypes()\nReturns a \n  DataFrame with columns of selected data types\nshape\nReturns the number of rows \n  and columns of the DataFrame\nset_axis()\nSets the index of the specified axis\nset_flags()\nReturns a new DataFrame with the specified flags\nset_index()\nSet the Index of the DataFrame\nsize\nReturns the number of elements in the DataFrame\nskew()\nReturns the skew of the values in the specified axis\nsort_index()\nSorts the DataFrame according to the labels\nsort_values()\nSorts the DataFrame according to the values\nsqueeze()\nConverts a single \n  column DataFrame into a Series\nstack()\nReshape the DataFrame \n    from a wide table to a long table\nstd()\nReturns the standard deviation of the values in the \n  specified axis\nsum()\nReturns the sum of the values in the specified axis\nsub()\nSubtracts the values of a DataFrame \n  with the specified value(s)\nswaplevel()\nSwaps the two specified levels\nT\nTurns rows into columns and columns \n  into rows\ntail()\nReturns the headers and the last rows\ntake()\nReturns the specified elements\nto_xarray()\nReturns an xarray object\ntransform()\nExecute a function for each value in the \n  DataFrame\ntranspose()\nTurns rows into \n  columns and columns into rows\ntruediv()\nDivides the values of \n  a DataFrame with the specified value(s)\ntruncate()\nRemoves elements \n  outside of a specified set of values\nupdate()\nUpdate one DataFrame with the values from another \n    DataFrame\nvalue_counts()\nReturns the number of unique rows\nvalues\nReturns the DataFrame as a NumPy array\nvar()\nReturns the variance of the values in the specified axis\nwhere()\nReplace all values where the specified condition is False\nxs()\nReturns the cross-section of the DataFrame\n__iter__()\nReturns an iterator of the info axes\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "4769c16d-4e60-44fa-a1b5-6435bc4df978",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "c0c5b626-aacd-42bb-b782-726c98912caf",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "27937e18-427a-4340-889c-c203d0a7e79c",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Return True if all values in the DataFrame?",
      "options": [
        "None of the above.",
        "None of the above.",
        "True",
        "False\nxs()\nReturns the cross-section of the DataFrame\n__iter__()\nReturns an iterator of the info axes\n\n\u2605\n+1"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Return True if all values in the DataFrame is 'True'."
    },
    {
      "question": "What is Replace all values where the specified condition?",
      "options": [
        "True",
        "False\nxs()\nReturns the cross-section of the DataFrame\n__iter__()\nReturns an iterator of the info axes\n\n\u2605\n+1",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Replace all values where the specified condition is 'False\nxs()\nReturns the cross-section of the DataFrame\n__iter__()\nReturns an iterator of the info axes\n\n\u2605\n+1'."
    }
  ],
  "summary": "This tutorial covers Pandas -DataFrame Reference concepts and techniques. You'll learn how to use Pandas -DataFrame Reference effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Pandas -DataFrame Reference and how to apply it in your projects."
}