{
  "id": "d092d179-d66b-4fb1-935e-3d7b30c5a074",
  "title": "CSSLayout - float and clear",
  "slug": "csslayout-float-and-clear",
  "metadata": {
    "description": "Learn about CSSLayout - float and clear with clear explanations and practical examples.",
    "keywords": [
      "c",
      "float",
      "example",
      "element",
      "left",
      "property",
      "specifies",
      "text",
      "right",
      "lorem",
      "ipsum"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnRWD",
    "subcategory": "Float"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "CSS\nLayout - float and clear",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The CSS\nfloat\nproperty specifies \nhow an element should float.\nThe CSS\nclear\nproperty \nspecifies what elements can float beside the cleared element and on which side.\nThe float Property\nThe\nfloat\nproperty is used for \npositioning and formatting content e.g. let an image float left to the text in a \ncontainer.\nThe\nfloat\nproperty can have one of the \nfollowing values:\nleft\n- The element floats to the left of its container\nright\n- The element floats to the right of its container\nnone\n- The element does not float (will be displayed just where it occurs in the text). This is default\ninherit\n- The element inherits the float value of its parent\nIn its simplest use, the\nfloat\nproperty can be used to wrap text around images.\nExample - float: right;\nThe following example specifies that an image should float to the\nright\nin a text:\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus imperdiet, nulla et dictum interdum, nisi lorem egestas odio, vitae scelerisque enim ligula venenatis dolor. Maecenas nisl est, ultrices nec congue eget, auctor vitae massa.\nFusce luctus vestibulum augue ut aliquet. Mauris ante ligula, facilisis sed ornare eu, lobortis in odio. Praesent convallis urna a lacus interdum ut hendrerit risus congue. Nunc sagittis dictum nisi, sed ullamcorper ipsum dignissim ac...\nExample\nimg {\nfloat: right;\n}\n\nExample - float: left;\nThe following example specifies that an image should float to the\nleft\nin a text:\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus imperdiet, nulla et dictum interdum, nisi lorem egestas odio, vitae scelerisque enim ligula venenatis dolor. Maecenas nisl est, ultrices nec congue eget, auctor vitae massa.\nFusce luctus vestibulum augue ut aliquet. Mauris ante ligula, facilisis sed ornare eu, lobortis in odio. Praesent convallis urna a lacus interdum ut hendrerit risus congue. Nunc sagittis dictum nisi, sed ullamcorper ipsum dignissim ac...\nExample\nimg {\nfloat: left;\n}\n\nExample - No float\nIn the following example the image will be displayed just where it occurs in \nthe text (float: none;):\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus imperdiet, nulla et dictum interdum, nisi lorem egestas odio, vitae scelerisque enim ligula venenatis dolor. Maecenas nisl est, ultrices nec congue eget, auctor vitae massa.\nFusce luctus vestibulum augue ut aliquet. Mauris ante ligula, facilisis sed ornare eu, lobortis in odio. Praesent convallis urna a lacus interdum ut hendrerit risus congue. Nunc sagittis dictum nisi, sed ullamcorper ipsum dignissim ac...\nExample\nimg {\nfloat: none;\n}\n\nExample - Float \nNormally div elements will be displayed on top of each other. However, if we \nuse\nfloat: left\nwe can let elements float \nExample\ndiv {\nfloat: left;\npadding: 15px;\n}\n.div1 {\nbackground: red;\n}\n.div2 {\nbackground: yellow;\n}\n.div3 {\nbackground: green;\n}\n\nCSS Properties\nProperty\nDescription\nclear\nSpecifies what should happen with the element that is \n    element\nfloat\nSpecifies whether an element should float to the left, right, or not at \n    all\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "img {\nfloat: right;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "img {\nfloat: left;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "img {\nfloat: none;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "div {\nfloat: left;\npadding: 15px;\n}\n.div1 {\nbackground: red;\n}\n.div2 {\nbackground: yellow;\n}\n.div3 {\nbackground: green;\n}",
      "language": "css",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "img {\n# TODO: Complete this line\n}",
      "solution": "img {\nfloat: right;\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "img {\n# TODO: Complete this line\n}",
      "solution": "img {\nfloat: left;\n}"
    }
  ],
  "related_topics": [
    {
      "id": "8b02fc08-8ead-4f9f-a7ea-fca5fa67e93a",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "5aefbaf6-5e52-4312-8ced-10f089bec743",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "e7477bec-2f14-4ede-b004-b00e0c9a5270",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The float Property\nThe\nfloat\nproperty?",
      "options": [
        "None of the above.",
        "None of the above.",
        "used for \npositioning and formatting content e",
        "default\ninherit\n- The element inherits the float value of its parent\nIn its simplest use"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of The float Property\nThe\nfloat\nproperty is 'used for \npositioning and formatting content e'."
    },
    {
      "question": "What is This?",
      "options": [
        "None of the above.",
        "used for \npositioning and formatting content e",
        "default\ninherit\n- The element inherits the float value of its parent\nIn its simplest use",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of This is 'default\ninherit\n- The element inherits the float value of its parent\nIn its simplest use'."
    }
  ],
  "summary": "This tutorial covers CSSLayout - float and clear concepts and techniques. You'll learn how to use CSSLayout - float and clear effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of CSSLayout - float and clear and how to apply it in your projects."
}