{
  "id": "357325b2-cefc-4062-81cc-cdcd7f8d16f8",
  "title": "CSSGrid Layout Module",
  "slug": "cssgrid-layout-module",
  "metadata": {
    "description": "Learn about CSSGrid Layout Module with clear explanations and practical examples.",
    "keywords": [
      "c",
      "grid",
      "layout",
      "container",
      "specifies",
      "columns",
      "property",
      "column",
      "rows",
      "properties",
      "template"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnRWD",
    "subcategory": "Grid Intro"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "CSS\nGrid Layout Module",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "CSS\nGrid Layout Module\n\nMy Header\nLink",
      "content": "1\nLink 2\nLink 3\nLorem Ipsum\nLorem ipsum odor amet, consectetuer adipiscing elit. Ridiculus sit nisl laoreet facilisis aliquet. Potenti dignissim litora eget montes rhoncus sapien neque urna. Cursus libero sapien integer magnis ligula lobortis quam ut.\nFooter\n\nCSS Grid Layout\nThe Grid Layout Module offers a grid-based layout system, with rows and columns.\nThe Grid Layout Module allows developers to easily create complex web \nlayouts.\nThe Grid Layout Module makes it easier to design a responsive layout structure, without using float or positioning.\nThe CSS grid properties are supported in all modern browsers.\nGrid vs. Flexbox\nThe CSS Grid Layout should be used for two-dimensional layout, with rows \n  AND columns.\nThe\nCSS Flexbox Layout\nshould be used for one-dimensional layout, with rows \n  OR columns.\nCSS Grid Components\nA grid always consists of:\na",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Grid Container",
      "content": "- the parent (container) <div> element",
      "order": 3,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Grid Items",
      "content": "- the items inside the container <div>\nGrid Container and Grid Items\nA grid layout consists of a parent element (the grid container), with one or more \ngrid items.\nAll direct children of the grid container automatically become grid items.\nExample\n<div \n  class=\"container\">\n<div>1</div>\n<div>2</div>\n<div>3</div>\n<div>4</div>\n<div>5</div>\n<div>6</div>\n<div>7</div>\n<div>8</div>\n</div>\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nDisplay Grid Property\nThe\n<div>\nelement becomes a grid container when its\ndisplay\nproperty \nis set to\ngrid\nor\ninline-grid\n.\nExample\n.container {\ndisplay: grid;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nExample\n.container {\ndisplay: inline-grid;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nAll CSS Grid Properties\nProperty\nDescription\nalign-content\nVertically aligns the whole grid inside the container (when total grid \n    size is smaller than container)\nalign-items\nAligns content in a grid item along the column axis\nalign-self\nAligns the content for a specific grid item along the column axis\ndisplay\nSpecifies the display behavior (the type of rendering box) of an element\ncolumn-gap\nSpecifies the gap between the columns\ngap\nA shorthand property for the\nrow-gap\nand the\ncolumn-gap\nproperties\ngrid\nA shorthand property for the\ngrid-template-rows, \n    grid-template-columns, grid-template-areas, grid-auto-rows, \n    grid-auto-columns\n, and the\ngrid-auto-flow\nproperties\ngrid-area\nEither specifies a name for the grid item, or this property is a shorthand property for the\ngrid-row-start\n,\ngrid-column-start\n,\ngrid-row-end\n, and\ngrid-column-end\nproperties\ngrid-auto-columns\nSpecifies a default column size\ngrid-auto-flow\nSpecifies how auto-placed items are inserted in the grid\ngrid-auto-rows\nSpecifies a default row size\ngrid-column\nA shorthand property for the\ngrid-column-start\nand the\ngrid-column-end\nproperties\ngrid-column-end\nSpecifies where to end the grid item\ngrid-column-start\nSpecifies where to start the grid item\ngrid-row\nA shorthand property for the\ngrid-row-start\nand the\ngrid-row-end\nproperties\ngrid-row-end\nSpecifies where to end the grid item\ngrid-row-start\nSpecifies where to start the grid item\ngrid-template\nA shorthand property for the\ngrid-template-rows\n,\ngrid-template-columns\nand\ngrid-areas\nproperties\ngrid-template-areas\nSpecifies how to display columns and rows, using named grid items\ngrid-template-columns\nSpecifies the size of the columns, and how many columns in a grid layout\ngrid-template-rows\nSpecifies the size of the rows in a grid layout\njustify-content\nHorizontally aligns the whole grid inside the container (when total grid \n    size is smaller than container)\njustify-self\nAligns the content for a specific grid item along the row axis\nplace-self\nA shorthand property for the\nalign-self\nand the\njustify-self\nproperties\nplace-content\nA shorthand property for the\nalign-content\nand the\njustify-content\nproperties\nrow-gap\nSpecifies the gap between the grid rows\n\n\u2605\n+1",
      "order": 4,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<div \n  class=\"container\">\n<div>1</div>\n<div>2</div>\n<div>3</div>\n<div>4</div>\n<div>5</div>\n<div>6</div>\n<div>7</div>\n<div>8</div>\n</div>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": ".container {\ndisplay: grid;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": ".container {\ndisplay: inline-grid;\n}",
      "language": "css",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<div \n  class=\"container\">\n<div>1</div>\n<div>2</div>\n<div>3</div>\n<div>4</div>\n<div>5</div>\n<div>6</div>\n# TODO: Complete this line\n<div>8</div>\n</div>",
      "solution": "<div \n  class=\"container\">\n<div>1</div>\n<div>2</div>\n<div>3</div>\n<div>4</div>\n<div>5</div>\n<div>6</div>\n<div>7</div>\n<div>8</div>\n</div>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": ".container {\ndisplay: grid;\n# TODO: Complete this line",
      "solution": ".container {\ndisplay: grid;\n}"
    }
  ],
  "related_topics": [
    {
      "id": "ff56acc2-bf8f-4db3-a8df-ee018dc7d805",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "dcc36a45-4df8-4cf1-89ea-3507d3cade7e",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "7eb1cba7-dc11-48de-a62d-19780eafc86d",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The CSS grid properties?",
      "options": [
        "None of the above.",
        "None of the above.",
        "set to\ngrid\nor\ninline-grid",
        "supported in all modern browsers"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of The CSS grid properties is 'supported in all modern browsers'."
    },
    {
      "question": "What is element becomes a grid container when its\ndisplay\nproperty?",
      "options": [
        "set to\ngrid\nor\ninline-grid",
        "None of the above.",
        "supported in all modern browsers",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of element becomes a grid container when its\ndisplay\nproperty is 'set to\ngrid\nor\ninline-grid'."
    }
  ],
  "summary": "This tutorial covers CSSGrid Layout Module concepts and techniques. You'll learn how to use CSSGrid Layout Module effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of CSSGrid Layout Module and how to apply it in your projects."
}