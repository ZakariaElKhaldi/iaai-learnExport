{
  "id": "5c4b1e42-9f2d-4a2d-a65b-ab8885caeefd",
  "title": "Responsive Web Design- Media Queries",
  "slug": "responsive-web-design-media-queries",
  "metadata": {
    "description": "Learn about Responsive Web Design- Media Queries with clear explanations and practical examples.",
    "keywords": [
      "media",
      "screen",
      "grid",
      "area",
      "span",
      "width",
      "example",
      "size",
      "queries",
      "breakpoint"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnRWD",
    "subcategory": "RWD Media Queries"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Responsive Web Design\n- Media Queries",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "What is a Media Query?\nMedia query is a CSS technique introduced in CSS3.\nIt uses the\n@media\nrule to include a block of CSS properties only if a \ncertain condition is true.\nExample\nIf the browser window is 600px or smaller, the background color will be lightblue:\n@media only screen and (max-width: 600px) {\nbody {\nbackground-color: lightblue;\n}\n}\n\nAdd a Breakpoint\nEarlier in this tutorial we made a web page with rows and columns, and it \nwas responsive, but it did not look good on a small screen.\nMedia queries can help with that. We can add a breakpoint where \ncertain parts of the design will behave differently on each side of the \nbreakpoint.\nDesktop\nPhone\nExample\nHere we use a media query to add a breakpoint at 600px:\n@media only screen and (max-width: 600px) {\n.item1 {grid-area: 1 / \n  span 6;}\n.item2 {grid-area: 2 / span 6;}\n.item3 \n  {grid-area: 3 / span 6;}\n.item4 {grid-area: 4 / span 6;}\n.item5 {grid-area: 5 / span 6;}\n}\n\nAnother Breakpoint\nYou can add as many breakpoints as you like.\nWe will also insert a breakpoint between tablets and mobile phones.\nDesktop\nTablet\nPhone\nExample\nHere we use media queries to add breakpoints when screen is max 600px, when \nscreen is min 600px, and when screen is min 768px :\n@media only screen and (max-width: 600px) {\n.item1 {grid-area: 1 / \n  span 6;}\n.item2 {grid-area: 2 / span 6;}\n.item3 \n  {grid-area: 3 / span 6;}\n.item4 {grid-area: 4 / span 6;}\n.item5 {grid-area: 5 / span 6;}\n}\n@media \n  only screen and (min-width: 600px) {\n.item1 {grid-area: 1 / span 6;}\n.item2 {grid-area: 2 / span 1;}\n.item3 {grid-area: 2 / span 4;}\n.item4 {grid-area: 3 / span 6;}\n.item5 {grid-area: 4 / span 6;}\n}\n@media \n  only screen and (min-width: 768px) {\n.item1 {grid-area: 1 / span 6;}\n.item2 {grid-area: 2 / span 1;}\n.item3 {grid-area: 2 / span 4;}\n.item4 {grid-area: 2 / span 1;}\n.item5 {grid-area: 3 / span 6;}\n}\n\nTypical Device Breakpoints\nThere are tons of screens and devices with different heights and widths, so it is hard to create an exact breakpoint for each device. To keep things simple you could target \nfive groups:\nExample\n/* \n  Extra small devices (phones, 600px and down) */\n@media only screen and (max-width: 600px) \n  {...}\n/* Small devices (portrait tablets and large phones, 600px and up) \n  */\n@media only screen and (min-width: 600px) {...}\n/* Medium devices (landscape tablets, 768px and up) */\n@media only screen and (min-width: 768px) {...}\n/* Large devices (laptops/desktops, 992px and up) \n  */\n@media only screen and (min-width: 992px) {...}\n/* Extra large devices (large \n  laptops and desktops, \n  1200px and up) */\n@media only screen and (min-width: 1200px) {...}\n\nOrientation: Portrait / Landscape\nMedia queries can also be used to change layout of a page depending on the \norientation of the browser.\nYou can have a set of CSS properties that will only \napply when the browser window is wider than its height, a so called \"Landscape\" \norientation:\nExample\nThe web page will have a lightblue background if the orientation is in landscape mode:\n@media only screen and (orientation: \nlandscape) {\nbody {\nbackground-color: lightblue;\n}\n}\n\nHide Elements With Media Queries\nAnother common use of media queries, is to hide elements on different screen sizes:\nI will be hidden on small screens.\nExample\n/* If the screen size is 600px wide or less, hide the element */\n@media \n  only screen and (max-width: 600px) {\ndiv.example {\ndisplay: none;\n}\n}\n\nChange Font Size With Media Queries\nYou can also use media queries to change the font size of an element on \ndifferent screen sizes:\nVariable Font Size.\nExample\n/* If the screen size is 601px or \n  more, set the font-size of <div> to 80px */\n@media only screen and (min-width: \n  601px) {\ndiv.example {\nfont-size: 80px;\n}\n}\n/* If the screen size is 600px or \n  less, \n  set the font-size of <div> to 30px */\n@media only screen and (max-width: 600px) {\ndiv.example {\nfont-size: 30px;\n}\n}\n\nCSS @media Reference\nFor a full overview of all the media types and features/expressions, please look at the\n@media rule in our CSS reference\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "@media only screen and (max-width: 600px) {\nbody {\nbackground-color: lightblue;\n}\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "@media only screen and (max-width: 600px) {\n.item1 {grid-area: 1 / \n  span 6;}\n.item2 {grid-area: 2 / span 6;}\n.item3 \n  {grid-area: 3 / span 6;}\n.item4 {grid-area: 4 / span 6;}\n.item5 {grid-area: 5 / span 6;}\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "@media only screen and (max-width: 600px) {\n.item1 {grid-area: 1 / \n  span 6;}\n.item2 {grid-area: 2 / span 6;}\n.item3 \n  {grid-area: 3 / span 6;}\n.item4 {grid-area: 4 / span 6;}\n.item5 {grid-area: 5 / span 6;}\n}\n@media \n  only screen and (min-width: 600px) {\n.item1 {grid-area: 1 / span 6;}\n.item2 {grid-area: 2 / span 1;}\n.item3 {grid-area: 2 / span 4;}\n.item4 {grid-area: 3 / span 6;}\n.item5 {grid-area: 4 / span 6;}\n}\n@media \n  only screen and (min-width: 768px) {\n.item1 {grid-area: 1 / span 6;}\n.item2 {grid-area: 2 / span 1;}\n.item3 {grid-area: 2 / span 4;}\n.item4 {grid-area: 2 / span 1;}\n.item5 {grid-area: 3 / span 6;}\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "/* \n  Extra small devices (phones, 600px and down) */\n@media only screen and (max-width: 600px) \n  {...}\n/* Small devices (portrait tablets and large phones, 600px and up) \n  */\n@media only screen and (min-width: 600px) {...}\n/* Medium devices (landscape tablets, 768px and up) */\n@media only screen and (min-width: 768px) {...}\n/* Large devices (laptops/desktops, 992px and up) \n  */\n@media only screen and (min-width: 992px) {...}\n/* Extra large devices (large \n  laptops and desktops, \n  1200px and up) */\n@media only screen and (min-width: 1200px) {...}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "@media only screen and (orientation: \nlandscape) {\nbody {\nbackground-color: lightblue;\n}\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "/* If the screen size is 600px wide or less, hide the element */\n@media \n  only screen and (max-width: 600px) {\ndiv.example {\ndisplay: none;\n}\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "/* If the screen size is 601px or \n  more, set the font-size of <div> to 80px */\n@media only screen and (min-width: \n  601px) {\ndiv.example {\nfont-size: 80px;\n}\n}\n/* If the screen size is 600px or \n  less, \n  set the font-size of <div> to 30px */\n@media only screen and (max-width: 600px) {\ndiv.example {\nfont-size: 30px;\n}\n}",
      "language": "css",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "@media only screen and (max-width: 600px) {\nbody {\nbackground-color: lightblue;\n# TODO: Complete this line\n}",
      "solution": "@media only screen and (max-width: 600px) {\nbody {\nbackground-color: lightblue;\n}\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "@media only screen and (max-width: 600px) {\n.item1 {grid-area: 1 / \n# TODO: Complete this line\n.item2 {grid-area: 2 / span 6;}\n.item3 \n  {grid-area: 3 / span 6;}\n.item4 {grid-area: 4 / span 6;}\n.item5 {grid-area: 5 / span 6;}\n}",
      "solution": "@media only screen and (max-width: 600px) {\n.item1 {grid-area: 1 / \n  span 6;}\n.item2 {grid-area: 2 / span 6;}\n.item3 \n  {grid-area: 3 / span 6;}\n.item4 {grid-area: 4 / span 6;}\n.item5 {grid-area: 5 / span 6;}\n}"
    }
  ],
  "related_topics": [
    {
      "id": "164ece72-cf0e-4f4e-b16e-7cdc2c31145a",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "3eedc439-032b-4c92-9411-0094b89793d6",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "9d715379-c663-44ed-89c5-acbe313c0bd5",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Media Queries\n\nWhat?",
      "options": [
        "a Media Query",
        "a CSS technique introduced in CSS3",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of Media Queries\n\nWhat is 'a Media Query'."
    },
    {
      "question": "What is Media query?",
      "options": [
        "a Media Query",
        "a CSS technique introduced in CSS3",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Media query is 'a CSS technique introduced in CSS3'."
    }
  ],
  "summary": "This tutorial covers Responsive Web Design- Media Queries concepts and techniques. You'll learn how to use Responsive Web Design- Media Queries effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Responsive Web Design- Media Queries and how to apply it in your projects."
}