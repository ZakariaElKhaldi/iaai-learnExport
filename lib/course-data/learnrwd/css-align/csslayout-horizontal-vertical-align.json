{
  "id": "a08d05df-6ed8-47d5-9c36-4a2e37fa20e0",
  "title": "CSSLayout - Horizontal & Vertical Align",
  "slug": "csslayout-horizontal-vertical-align",
  "metadata": {
    "description": "Learn about CSSLayout - Horizontal & Vertical Align with clear explanations and practical examples.",
    "keywords": [
      "c",
      "center",
      "align",
      "vertically",
      "example",
      "text",
      "element",
      "border",
      "solid",
      "padding",
      "height"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnRWD",
    "subcategory": "CSS Align"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "CSS\nLayout - Horizontal & Vertical Align",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "\u25b2\n\u25bc\n\n\u25ba\nCenter elements\nhorizontally and vertically\nCenter Align Elements\nTo horizontally center a block element (like <div>), use\nmargin: auto;\nSetting the width of the element will prevent it from stretching out to the \nedges of its container.\nThe element will then take up the specified width, and the remaining space \nwill be split equally between the two margins:\nThis div element is centered.\nExample\n.center\n{\nmargin: auto;\nwidth: 50%;\nborder: 3px solid green;\npadding: 10px;\n}\n\nNote:\nCenter aligning has no effect if the\nwidth\nproperty is not set \n(or set to 100%).\nCenter Align Text\nTo just center the text inside an element, use\ntext-align: center;\nThis text is centered.\nExample\n.center {\ntext-align: center;\nborder: 3px solid green;\n}\n\nTip:\nFor more examples on how to align text, see the\nCSS Text\nchapter.\nCenter an Image\nTo center an image, set left and right margin to\nauto\nand make it into a\nblock\nelement:\nExample\nimg\n{\ndisplay: block;\nmargin-left: auto;\nmargin-right: auto;\nwidth: 40%;\n}\n\nLeft and Right Align - Using position\nOne method for aligning elements is to use\nposition: absolute;\n:\nIn my younger and more vulnerable years my father gave me some advice that I've been turning over in my mind ever since.\nExample\n.right\n{\nposition: absolute;\nright: 0px;\nwidth: 300px;\nborder: 3px solid #73AD21;\npadding: 10px;\n}\n\nNote:\nAbsolute positioned elements are removed from the normal flow, and can overlap elements.\nLeft and Right Align - Using float\nAnother method for aligning elements is to use the\nfloat\nproperty:\nExample\n.right\n{\nfloat: right;\nwidth: 300px;\nborder: 3px solid #73AD21;\npadding: 10px;\n}\n\nThe clearfix Hack\nNote:\nIf an element is taller than the element containing it, and it is floated, it \nwill overflow outside of its container. You can use the \"clearfix hack\" to fix this (see example below).\nWithout Clearfix\nWith Clearfix\nThen we can add the clearfix hack to the containing element to fix \nthis problem:\nExample\n.clearfix::after {\ncontent: \"\";\nclear: both;\ndisplay: table;\n}\n\nCenter Vertically - Using padding\nThere are many ways to center an element vertically in CSS. A simple solution is to use top and bottom\npadding\n:\nI am vertically centered.\nExample\n.center {\npadding: 70px 0;\nborder: 3px solid \ngreen;\n}\n\nTo center both vertically and horizontally, use\npadding\nand\ntext-align: center\n:\nI am vertically and horizontally centered.\nExample\n.center {\npadding: 70px 0;\nborder: 3px solid \ngreen;\ntext-align: center;\n}\n\nCenter Vertically - Using line-height\nAnother trick is to use the\nline-height\nproperty with a value that is equal \nto the\nheight\nproperty:\nI am vertically and horizontally centered.\nExample\n.center {\nline-height: 200px;\nheight: 200px;\nborder: 3px solid green;\ntext-align: center;\n}\n/* If the text has multiple lines, add the \nfollowing: */\n.center p {\nline-height: 1.5;\ndisplay: inline-block;\nvertical-align: middle;\n}\n\nCenter Vertically - Using position & transform\nIf\npadding\nand\nline-height\nare not options, another solution is to use positioning and the\ntransform\nproperty:\nI am vertically and horizontally centered.\nExample\n.center {\nheight: 200px;\nposition: relative;\nborder: 3px solid green;\n}\n.center p {\nmargin: 0;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\n}\n\nTip:\nYou will learn more about the transform property in our\n2D Transforms \nChapter\n.\nCenter Vertically - Using Flexbox\nYou can also use flexbox to center things. Just note that flexbox is not supported in IE10 and earlier versions:\nI am vertically and horizontally centered.\nExample\n.center {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 200px;\nborder: 3px solid \n  green;\n}\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": ".center\n{\nmargin: auto;\nwidth: 50%;\nborder: 3px solid green;\npadding: 10px;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": ".center {\ntext-align: center;\nborder: 3px solid green;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "img\n{\ndisplay: block;\nmargin-left: auto;\nmargin-right: auto;\nwidth: 40%;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": ".right\n{\nposition: absolute;\nright: 0px;\nwidth: 300px;\nborder: 3px solid #73AD21;\npadding: 10px;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": ".right\n{\nfloat: right;\nwidth: 300px;\nborder: 3px solid #73AD21;\npadding: 10px;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": ".clearfix::after {\ncontent: \"\";\nclear: both;\ndisplay: table;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": ".center {\npadding: 70px 0;\nborder: 3px solid \ngreen;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": ".center {\npadding: 70px 0;\nborder: 3px solid \ngreen;\ntext-align: center;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": ".center {\nline-height: 200px;\nheight: 200px;\nborder: 3px solid green;\ntext-align: center;\n}\n/* If the text has multiple lines, add the \nfollowing: */\n.center p {\nline-height: 1.5;\ndisplay: inline-block;\nvertical-align: middle;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": ".center {\nheight: 200px;\nposition: relative;\nborder: 3px solid green;\n}\n.center p {\nmargin: 0;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 13,
      "code": ".center {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 200px;\nborder: 3px solid \n  green;\n}",
      "language": "css",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": ".center\n{\nmargin: auto;\nwidth: 50%;\nborder: 3px solid green;\n# TODO: Complete this line\n}",
      "solution": ".center\n{\nmargin: auto;\nwidth: 50%;\nborder: 3px solid green;\npadding: 10px;\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": ".center {\ntext-align: center;\nborder: 3px solid green;\n# TODO: Complete this line",
      "solution": ".center {\ntext-align: center;\nborder: 3px solid green;\n}"
    }
  ],
  "related_topics": [
    {
      "id": "8171095a-e004-4913-872b-bfc12beff48c",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "06f00ce2-36ba-491a-867e-1ceb39f23c46",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "031580d9-f44f-4e58-8d85-eb83ee3e2837",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is This div element?",
      "options": [
        "not set \n(or set to 100%)",
        "None of the above.",
        "centered",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of This div element is 'centered'."
    },
    {
      "question": "What is Center aligning has no effect if the\nwidth\nproperty?",
      "options": [
        "None of the above.",
        "centered",
        "None of the above.",
        "not set \n(or set to 100%)"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Center aligning has no effect if the\nwidth\nproperty is 'not set \n(or set to 100%)'."
    }
  ],
  "summary": "This tutorial covers CSSLayout - Horizontal & Vertical Align concepts and techniques. You'll learn how to use CSSLayout - Horizontal & Vertical Align effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of CSSLayout - Horizontal & Vertical Align and how to apply it in your projects."
}