{
  "id": "2102db65-df88-44a9-b64b-9cb66e66d2b8",
  "title": "CSSFunctionsReference",
  "slug": "cssfunctionsreference",
  "metadata": {
    "description": "Learn about CSSFunctionsReference with clear explanations and practical examples.",
    "keywords": [
      "element",
      "color",
      "defines",
      "returns",
      "number",
      "value",
      "gradient",
      "values",
      "axis",
      "allows"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnRWD",
    "subcategory": "CSS Functions"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "CSS\nFunctions\nReference",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "CSS Functions\nCSS functions can be used to calculate values, manipulate strings or colors, \ncreate complex gradients and shapes, and more.\nCSS functions are typically used as values for various CSS properties.\nFunction\nDescription\nacos()\nReturns the inverse cosine of a number between -1 and 1\nasin()\nReturns the inverse sine of a number between -1 and 1\natan()\nReturns the inverse tangent of a number between -\u221e and \u221e\natan2()\nReturns the inverse tangent of two values between -infinity and infinity\nattr()\nReturns the value of an attribute of the selected element\nblur()\nApplies a blur effect to an element\nbrightness()\nAdjusts the brightness of an element (brighter or darker)\ncalc()\nAllows you to perform calculations to determine CSS property values\ncircle()\nDefines a circle\nclamp()\nSets a value that will adjust responsively between a minimum value and a \n    maximum value depending on the size of the viewport\ncolor()\nAllows a color to be specified in a particular, specified color space\ncolor-mix()\nMixes two color values in a given color space, by a given amount\nconic-gradient()\nCreates a conic gradient\ncontrast()\nAdjusts the contrast of an element\ncos()\nReturns the \ncosine of an angle\ncounter()\nReturns the current value of the named counter\ncounters()\nReturns the current values of the named and nested counters\ncubic-bezier()\nDefines a Cubic Bezier curve\ndrop-shadow()\nApplies a drop shadow effect to an image\nellipse()\nDefines an ellipse\nexp()\nReturns E raised to the power of the specified number x (E\nx\n)\nfit-content()\nAllows you to size an element based on its content\ngrayscale()\nConverts an image to grayscale\nhsl() / hsla()\nDefines a color using the Hue-Saturation-Lightness model (HSL); with an \n    optional alpha component\nhue-rotate()\nApplies a color rotation to an element\nhwb()\nDefines a color using the Hue-Whiteness-Blackness model (HWB); with an \n    optional alpha component\nhypot()\nReturns the square root of the sum of squares of its parameters\ninset()\nDefines a rectangle at the specified inset distances from each side of \n    the reference box\ninvert()\nInverts the color of an image\nlab()\nSpecifies a color in the CIE L*a*b color space\nlch()\nSpecifies a color in the LCH (Lightness-Chroma-Hue) color space\nlight-dark()\nEnables two color-value settings, and returns the first value if the \n    user has set a light color theme, and the second value if the user has set a \n    dark color theme\nlinear-gradient()\nCreates a linear gradient\nlog()\nReturns the natural logarithm (base E) of a specified number, or the \n    logarithm of the number to the specified base\nmatrix()\nDefines a 2D transformation, using a matrix of six values\nmatrix3d()\nDefines a 3D transformation, using a 4x4 matrix of 16 values\nmax()\nUses the largest value, from a comma-separated list of values, as the \n    property value\nmin()\nUses the smallest value, from a comma-separated list of values, as the \n    property value\nminmax()\nDefines a size range greater than or equal to a\nmin\nvalue and less than or \n    equal to a\nmax\nvalue (used with CSS grids)\nmod()\nReturns the remainder left over when a number is divided by another \n    number\noklab()\nSpecifies a color in the OKLAB color space\noklch()\nSpecifies a color in the OKLCH color space\nopacity()\nApplies an opacity effect to an element\nperspective()\nDefines a perspective view for a 3D transformed element\npolygon()\nDefines a polygon\npow()\nReturns the value of a number (x) raised to the power of another number \n    (y)\nradial-gradient()\nCreates a radial gradient\nray()\nDefines the offset-path line segment that an animated element should \n    follow\nrem()\nReturns the remainder left over when a number is divided by another \n    number\nrepeat()\nRepeats a set of columns or rows in a grid\nrepeating-conic-gradient()\nRepeats a conic gradient\nrepeating-linear-gradient()\nRepeats a linear gradient\nrepeating-radial-gradient()\nRepeats a radial gradient\nrgb() / rgba()\nDefines colors using the Red-Green-Blue model (RGB); with an optional \n    alpha component\nrotate()\nDefines a 2D rotation of an element\nrotate3d()\nDefines a 3D rotation of an element\nrotateX()\nDefines a 3D rotation of an element around the x-axis (horizontal)\nrotateY()\nDefines a 3D rotation of an element around the y-axis (vertical)\nrotateZ()\nDefines a 3D rotation of an element around the z-axis\nround()\nRounds a number according to the specified rounding-strategy\nsaturate()\nAdjusts the saturation (color intensity) of an element\nscale()\nDefines a 2D scaling of an element\nscale3d()\nDefines a 3D scaling of an element\nscaleX()\nScales an element horizontally (the width)\nscaleY()\nScales an element vertically (the height)\nsepia()\nConverts an image to sepia\nsin()\nReturns the sine of a number (angle)\nskew()\nSkews an element along the x- and y-axis\nskewX()\nSkews an element along the x-axis\nskewY()\nSkews an element along the y-axis\nsqrt()\nReturns the square root of a number\nsteps()\nCreates a stepped timing function for animations\ntan()\nReturns the tangent of a number\ntranslate()\nAllows you to re-position  \nan element along the x- and y-axis\ntranslateX()\nAllows you to re-position  \nan element along the x-axis\ntranslateY()\nAllows you to re-position  \nan element along the y-axis\nurl()\nAllows you to include a file in the stylesheet\nvar()\nInserts the value of a custom property\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "71b47fc7-d3cb-4486-a279-f0c32ac69b8a",
      "title": "Advanced C Techniques",
      "relationship": "next_topic"
    },
    {
      "id": "9c7e411c-f9d7-49f2-bf1a-4a87f066f097",
      "title": "C Project: Build a Real-World Application",
      "relationship": "suggested_next"
    },
    {
      "id": "6525d533-7c6a-410b-98bc-539de2b56ead",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is CSS functions?",
      "options": [
        "typically used as values for various CSS properties",
        "None of the above.",
        "divided by another \n    number\noklab()\nSpecifies a color in the OKLAB color space\noklch()\nSpecifies a color in the OKLCH color space\nopacity()\nApplies an opacity effect to an element\nperspective()\nDefines a perspective view for a 3D transformed element\npolygon()\nDefines a polygon\npow()\nReturns the value of a number (x) raised to the power of another number \n    (y)\nradial-gradient()\nCreates a radial gradient\nray()\nDefines the offset-path line segment that an animated element should \n    follow\nrem()\nReturns the remainder left over when a number is divided by another \n    number\nrepeat()\nRepeats a set of columns or rows in a grid\nrepeating-conic-gradient()\nRepeats a conic gradient\nrepeating-linear-gradient()\nRepeats a linear gradient\nrepeating-radial-gradient()\nRepeats a radial gradient\nrgb() / rgba()\nDefines colors using the Red-Green-Blue model (RGB); with an optional \n    alpha component\nrotate()\nDefines a 2D rotation of an element\nrotate3d()\nDefines a 3D rotation of an element\nrotateX()\nDefines a 3D rotation of an element around the x-axis (horizontal)\nrotateY()\nDefines a 3D rotation of an element around the y-axis (vertical)\nrotateZ()\nDefines a 3D rotation of an element around the z-axis\nround()\nRounds a number according to the specified rounding-strategy\nsaturate()\nAdjusts the saturation (color intensity) of an element\nscale()\nDefines a 2D scaling of an element\nscale3d()\nDefines a 3D scaling of an element\nscaleX()\nScales an element horizontally (the width)\nscaleY()\nScales an element vertically (the height)\nsepia()\nConverts an image to sepia\nsin()\nReturns the sine of a number (angle)\nskew()\nSkews an element along the x- and y-axis\nskewX()\nSkews an element along the x-axis\nskewY()\nSkews an element along the y-axis\nsqrt()\nReturns the square root of a number\nsteps()\nCreates a stepped timing function for animations\ntan()\nReturns the tangent of a number\ntranslate()\nAllows you to re-position  \nan element along the x- and y-axis\ntranslateX()\nAllows you to re-position  \nan element along the x-axis\ntranslateY()\nAllows you to re-position  \nan element along the y-axis\nurl()\nAllows you to include a file in the stylesheet\nvar()\nInserts the value of a custom property\n\n\u2605\n+1",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of CSS functions is 'typically used as values for various CSS properties'."
    },
    {
      "question": "What is Returns the remainder left over when a number?",
      "options": [
        "divided by another \n    number\noklab()\nSpecifies a color in the OKLAB color space\noklch()\nSpecifies a color in the OKLCH color space\nopacity()\nApplies an opacity effect to an element\nperspective()\nDefines a perspective view for a 3D transformed element\npolygon()\nDefines a polygon\npow()\nReturns the value of a number (x) raised to the power of another number \n    (y)\nradial-gradient()\nCreates a radial gradient\nray()\nDefines the offset-path line segment that an animated element should \n    follow\nrem()\nReturns the remainder left over when a number is divided by another \n    number\nrepeat()\nRepeats a set of columns or rows in a grid\nrepeating-conic-gradient()\nRepeats a conic gradient\nrepeating-linear-gradient()\nRepeats a linear gradient\nrepeating-radial-gradient()\nRepeats a radial gradient\nrgb() / rgba()\nDefines colors using the Red-Green-Blue model (RGB); with an optional \n    alpha component\nrotate()\nDefines a 2D rotation of an element\nrotate3d()\nDefines a 3D rotation of an element\nrotateX()\nDefines a 3D rotation of an element around the x-axis (horizontal)\nrotateY()\nDefines a 3D rotation of an element around the y-axis (vertical)\nrotateZ()\nDefines a 3D rotation of an element around the z-axis\nround()\nRounds a number according to the specified rounding-strategy\nsaturate()\nAdjusts the saturation (color intensity) of an element\nscale()\nDefines a 2D scaling of an element\nscale3d()\nDefines a 3D scaling of an element\nscaleX()\nScales an element horizontally (the width)\nscaleY()\nScales an element vertically (the height)\nsepia()\nConverts an image to sepia\nsin()\nReturns the sine of a number (angle)\nskew()\nSkews an element along the x- and y-axis\nskewX()\nSkews an element along the x-axis\nskewY()\nSkews an element along the y-axis\nsqrt()\nReturns the square root of a number\nsteps()\nCreates a stepped timing function for animations\ntan()\nReturns the tangent of a number\ntranslate()\nAllows you to re-position  \nan element along the x- and y-axis\ntranslateX()\nAllows you to re-position  \nan element along the x-axis\ntranslateY()\nAllows you to re-position  \nan element along the y-axis\nurl()\nAllows you to include a file in the stylesheet\nvar()\nInserts the value of a custom property\n\n\u2605\n+1",
        "typically used as values for various CSS properties",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of Returns the remainder left over when a number is 'divided by another \n    number\noklab()\nSpecifies a color in the OKLAB color space\noklch()\nSpecifies a color in the OKLCH color space\nopacity()\nApplies an opacity effect to an element\nperspective()\nDefines a perspective view for a 3D transformed element\npolygon()\nDefines a polygon\npow()\nReturns the value of a number (x) raised to the power of another number \n    (y)\nradial-gradient()\nCreates a radial gradient\nray()\nDefines the offset-path line segment that an animated element should \n    follow\nrem()\nReturns the remainder left over when a number is divided by another \n    number\nrepeat()\nRepeats a set of columns or rows in a grid\nrepeating-conic-gradient()\nRepeats a conic gradient\nrepeating-linear-gradient()\nRepeats a linear gradient\nrepeating-radial-gradient()\nRepeats a radial gradient\nrgb() / rgba()\nDefines colors using the Red-Green-Blue model (RGB); with an optional \n    alpha component\nrotate()\nDefines a 2D rotation of an element\nrotate3d()\nDefines a 3D rotation of an element\nrotateX()\nDefines a 3D rotation of an element around the x-axis (horizontal)\nrotateY()\nDefines a 3D rotation of an element around the y-axis (vertical)\nrotateZ()\nDefines a 3D rotation of an element around the z-axis\nround()\nRounds a number according to the specified rounding-strategy\nsaturate()\nAdjusts the saturation (color intensity) of an element\nscale()\nDefines a 2D scaling of an element\nscale3d()\nDefines a 3D scaling of an element\nscaleX()\nScales an element horizontally (the width)\nscaleY()\nScales an element vertically (the height)\nsepia()\nConverts an image to sepia\nsin()\nReturns the sine of a number (angle)\nskew()\nSkews an element along the x- and y-axis\nskewX()\nSkews an element along the x-axis\nskewY()\nSkews an element along the y-axis\nsqrt()\nReturns the square root of a number\nsteps()\nCreates a stepped timing function for animations\ntan()\nReturns the tangent of a number\ntranslate()\nAllows you to re-position  \nan element along the x- and y-axis\ntranslateX()\nAllows you to re-position  \nan element along the x-axis\ntranslateY()\nAllows you to re-position  \nan element along the y-axis\nurl()\nAllows you to include a file in the stylesheet\nvar()\nInserts the value of a custom property\n\n\u2605\n+1'."
    }
  ],
  "summary": "This tutorial covers CSSFunctionsReference concepts and techniques. You'll learn how to use CSSFunctionsReference effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of CSSFunctionsReference and how to apply it in your projects."
}