{
  "id": "c95488e8-5d5d-49f7-89b9-4cc610ca37d8",
  "title": "CSSUnits",
  "slug": "cssunits",
  "metadata": {
    "description": "Learn about CSSUnits with clear explanations and practical examples.",
    "keywords": [
      "c",
      "length",
      "relative",
      "units",
      "size",
      "font",
      "unit",
      "viewport",
      "pixels",
      "absolute",
      "different"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnRWD",
    "subcategory": "CSS Units"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "CSS\nUnits",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "CSS Units\nCSS has several different units for expressing a length.\nMany CSS properties take \"length\" values, such as\nwidth\n,\nmargin\n,\npadding\n,\nfont-size\n, etc.\nLength\nis a number followed by a length unit, such as\n10px\n,\n2em\n, etc.\nExample\nSet different length values, using px (pixels):\nh1 {\nfont-size: 60px;\n}\np {\nfont-size: 25px;\nline-height: 50px;\n}\n\nNote:\nA whitespace cannot appear between the number and the unit. However, if the value is\n0\n, the unit can be omitted.\nFor some CSS properties, negative lengths are allowed.\nThere are two types of length units:\nabsolute\nand\nrelative\n.\nAbsolute Lengths\nThe absolute length units are fixed and a length expressed in any of these will appear as exactly that size.\nAbsolute length units are not recommended for use on screen, because screen sizes vary so much. \nHowever, they can be used if the output medium is known, such \nas for print layout.\nUnit\nDescription\ncm\ncentimeters\nTry it\nmm\nmillimeters\nTry it\nin\ninches (1in = 96px = 2.54cm)\nTry it\npx *\npixels (1px = 1/96th of 1in)\nTry it\npt\npoints (1pt = 1/72 of 1in)\nTry it\npc\npicas (1pc = 12 pt)\nTry it\n* Pixels (px) are relative to the viewing device. For low-dpi devices, 1px is one device pixel (dot) of the display. For printers and high resolution \nscreens 1px implies multiple device pixels.\nRelative Lengths\nRelative length units specify a length relative to another length property. \nRelative length units scale better between different rendering medium.\nUnit\nDescription\nem\nRelative to the font-size of the element (2em means 2 times the size of the current font)\nTry it\nex\nRelative to the x-height of the current font (rarely used)\nTry it\nch\nRelative to the width of the \"0\" (zero)\nTry it\nrem\nRelative to font-size of the root element\nTry it\nvw\nRelative to 1% of the width of the viewport*\nTry it\nvh\nRelative to 1% of the height of the viewport*\nTry it\nvmin\nRelative to 1% of viewport's* smaller dimension\nTry it\nvmax\nRelative to 1% of viewport's* larger dimension\nTry it\n%\nRelative to the parent element\nTry it\nTip:\nThe em and rem units are practical in creating perfectly \nscalable layout!\n* Viewport = the browser window size. If the viewport is 50cm \nwide, 1vw = 0.5cm.\nBrowser Support\nThe numbers in the table specify the first browser version that fully supports the \nlength unit.\nLength Unit\nem, ex, %, px, cm, mm, in, pt, pc\n1.0\n3.0\n1.0\n1.0\n3.5\nch\n27.0\n9.0\n1.0\n7.0\n20.0\nrem\n4.0\n9.0\n3.6\n4.1\n11.6\nvh, vw\n20.0\n9.0\n19.0\n6.0\n20.0\nvmin\n20.0\n12.0\n19.0\n6.0\n20.0\nvmax\n26.0\n16.0\n19.0\n7.0\n20.0\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "h1 {\nfont-size: 60px;\n}\np {\nfont-size: 25px;\nline-height: 50px;\n}",
      "language": "css",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "h1 {\n# TODO: Complete this line\n}\np {\nfont-size: 25px;\nline-height: 50px;\n}",
      "solution": "h1 {\nfont-size: 60px;\n}\np {\nfont-size: 25px;\nline-height: 50px;\n}"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "f9b7f16c-41f8-4dbd-82eb-ca33866981a4",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "7235d86a-ae56-4bec-94f7-55e7192f38ba",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "6785afff-a8ce-464d-ad5d-aac23d7b455c",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Length?",
      "options": [
        "None of the above.",
        "0",
        "a number followed by a length unit",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Length is 'a number followed by a length unit'."
    },
    {
      "question": "What is if the value?",
      "options": [
        "a number followed by a length unit",
        "None of the above.",
        "0",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of if the value is '0'."
    }
  ],
  "summary": "This tutorial covers CSSUnits concepts and techniques. You'll learn how to use CSSUnits effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of CSSUnits and how to apply it in your projects."
}