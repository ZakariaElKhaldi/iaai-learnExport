{
  "id": "90a283a2-5727-41fd-a9e2-0439a9eb21ad",
  "title": "CSSMedia Queries - Examples",
  "slug": "cssmedia-queries-examples",
  "metadata": {
    "description": "Learn about CSSMedia Queries - Examples with clear explanations and practical examples.",
    "keywords": [
      "c",
      "media",
      "width",
      "example",
      "screen",
      "queries",
      "screens",
      "background",
      "size",
      "color",
      "columns"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnRWD",
    "subcategory": "CSS MQ Examples"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "CSS\nMedia Queries - Examples",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "CSS Media Queries - More Examples\nLet us look at some more examples of using media queries.\nMedia queries are a popular technique for delivering a tailored style sheet to different devices. To demonstrate a simple example, we can change the background color for different devices:\nExample\n/* Set the background color of body to tan */\nbody {\nbackground-color: tan;\n}\n/* On \n  screens that are 992px or less, set the background color to blue */\n@media \n  screen and (max-width: 992px) {\nbody {\nbackground-color: blue;\n}\n}\n/* On screens that are 600px or less, \n  set the \n  background color to olive */\n@media screen and (max-width: 600px) {\nbody {\nbackground-color: olive;\n}\n}\n\nDo you wonder why we use exactly 992px and 600px? They are what we call \"typical breakpoints\" for devices. You can read more about typical breakpoints in our\nResponsive Web Design Tutorial\n.\nMedia Queries For Menus\nIn this example, we use media queries to create a responsive navigation menu, that varies \nin design on different screen sizes.\nLarge screens:\nHome\nLink 1\nLink 2\nLink 3\nSmall screens:\nHome\nLink 1\nLink 2\nLink 3\nExample\n/* The navbar container */\n.topnav {\noverflow: hidden;\nbackground-color: #333;\n}\n/* Navbar links */\n.topnav a {\nfloat: \n   left;\ndisplay: block;\ncolor: \n   white;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\n}\n/* On screens that are 600px wide or less, make the menu links stack on top \n   of each other instead of \n@media screen and (max-width: 600px) {\n.topnav a {\nfloat: none;\nwidth: \n   100%;\n}\n}\n\nMedia Queries For Columns\nA common use of media queries, is to create a flexible layout. In this example, we create a layout that varies between four, two and full-width columns, depending on different screen sizes:\nLarge screens:\nMedium screens:\nSmall screens:\nExample\n/* Create four equal columns that floats \n.column {\nfloat: left;\nwidth: 25%;\n}\n/* On screens that are 992px \n  wide or less, go from \n  four columns to two columns */\n@media screen and (max-width: 992px) {\n.column {\nwidth: 50%;\n}\n}\n/* On screens that are \n  600px wide or less, make \n  the columns stack on top of each other instead of \n@media screen and (max-width: 600px) {\n.column {\nwidth: \n  100%;\n}\n}\n\nTip:\nA more modern way of creating column layouts, is to use CSS Flexbox (see example below). \nHowever, it is not supported in Internet Explorer 10 and earlier versions. If you require IE6-10 support, use floats (as shown above).\nTo learn more about the Flexible Box Layout Module,\nread our CSS Flexbox chapter\n.\nTo learn more about Responsive Web Design,\nread our Responsive Web Design Tutorial\n.\nExample\n/* Container for flexboxes */\n.row {\ndisplay: flex;\nflex-wrap: wrap;\n}\n/* Create four equal columns */\n.column {\nflex: 25%;\npadding: 20px;\n}\n/* On screens that are 992px wide or less, go from \n  four columns to two columns */\n@media screen and (max-width: 992px) {\n.column {\nflex: 50%;\n}\n}\n/* On screens that are 600px wide or less, make \n  the columns stack on top of each other instead of \n@media screen and (max-width: 600px) {\n.row {\nflex-direction: column;\n}\n}\n\nHide Elements With Media Queries\nAnother common use of media queries, is to hide elements on different screen sizes:\nI will be hidden on small screens.\nExample\n/* If the screen size is 600px wide or less, hide the element */\n@media \n  screen and (max-width: 600px) {\ndiv.example {\ndisplay: none;\n}\n}\n\nChange Font Size With Media Queries\nYou can also use media queries to change the font size of an element on \ndifferent screen sizes:\nVariable Font Size.\nExample\n/* If screen size is more than 600px wide, set the font-size of <div> to 80px */\n@media screen and (min-width: \n  600px) {\ndiv.example {\nfont-size: 80px;\n}\n}\n/* If screen size is 600px wide, or less, \n  set the font-size of <div> to 30px */\n@media screen and (max-width: 600px) {\ndiv.example {\nfont-size: 30px;\n}\n}\n\nFlexible Image Gallery\nIn this example, we use media queries together with flexbox to create a responsive image gallery:\nExample\n\nFlexible Website\nIn this example, we use media queries together with flexbox to create a responsive website, containing a flexible navigation bar and flexible content.\nExample\n\nOrientation: Portrait / Landscape\nMedia queries can also be used to change layout of a page depending on the \norientation of the browser.\nYou can have a set of CSS properties that will only \napply when the browser window is wider than its height, a so called \"Landscape\" \norientation:\nExample\nUse a lightblue background color if the orientation is in landscape mode:\n@media only screen and (orientation: \nlandscape) {\nbody {\nbackground-color: lightblue;\n}\n}\n\nMin Width to Max Width\nYou can also use the\n(max-width:\n..\n) and (min-width:\n..\n)\nvalues to set a minimum width and a maximum width.\nFor example, when the browser's width is between 600 and 900px, change the \nappearance of a <div> element:\nExample\n@media screen and (max-width: 900px) and (min-width: 600px) {\ndiv.example {\nfont-size: 50px;\npadding: 50px;\nborder: 8px solid black;\nbackground: yellow;\n}\n}\n\nUsing an additional value:\nIn the example below, we add an additional media query to our already \nexisting one using a comma:\nExample\n/* When the width is between 600px and 900px or above 1100px \n  - change the appearance of <div> */\n@media screen and (max-width: 900px) and (min-width: \n  600px), (min-width: \n1100px) {\ndiv.example {\nfont-size: 50px;\npadding: 50px;\nborder: 8px solid black;\nbackground: yellow;\n}\n}\n\nCSS @media Reference\nFor a full overview of all the media types and features/expressions, please look at the\n@media rule in our CSS reference\n.\nTip:\nTo learn more about responsive web design (how to target different devices and screens), using media query breakpoints, read our\nResponsive Web Design Tutorial\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "/* Set the background color of body to tan */\nbody {\nbackground-color: tan;\n}\n/* On \n  screens that are 992px or less, set the background color to blue */\n@media \n  screen and (max-width: 992px) {\nbody {\nbackground-color: blue;\n}\n}\n/* On screens that are 600px or less, \n  set the \n  background color to olive */\n@media screen and (max-width: 600px) {\nbody {\nbackground-color: olive;\n}\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "/* The navbar container */\n.topnav {\noverflow: hidden;\nbackground-color: #333;\n}\n/* Navbar links */\n.topnav a {\nfloat: \n   left;\ndisplay: block;\ncolor: \n   white;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\n}\n/* On screens that are 600px wide or less, make the menu links stack on top \n   of each other instead of next to each other */\n@media screen and (max-width: 600px) {\n.topnav a {\nfloat: none;\nwidth: \n   100%;\n}\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "/* Create four equal columns that floats next to each other */\n.column {\nfloat: left;\nwidth: 25%;\n}\n/* On screens that are 992px \n  wide or less, go from \n  four columns to two columns */\n@media screen and (max-width: 992px) {\n.column {\nwidth: 50%;\n}\n}\n/* On screens that are \n  600px wide or less, make \n  the columns stack on top of each other instead of next to each other */\n@media screen and (max-width: 600px) {\n.column {\nwidth: \n  100%;\n}\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "/* Container for flexboxes */\n.row {\ndisplay: flex;\nflex-wrap: wrap;\n}\n/* Create four equal columns */\n.column {\nflex: 25%;\npadding: 20px;\n}\n/* On screens that are 992px wide or less, go from \n  four columns to two columns */\n@media screen and (max-width: 992px) {\n.column {\nflex: 50%;\n}\n}\n/* On screens that are 600px wide or less, make \n  the columns stack on top of each other instead of next to each other */\n@media screen and (max-width: 600px) {\n.row {\nflex-direction: column;\n}\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "/* If the screen size is 600px wide or less, hide the element */\n@media \n  screen and (max-width: 600px) {\ndiv.example {\ndisplay: none;\n}\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "/* If screen size is more than 600px wide, set the font-size of <div> to 80px */\n@media screen and (min-width: \n  600px) {\ndiv.example {\nfont-size: 80px;\n}\n}\n/* If screen size is 600px wide, or less, \n  set the font-size of <div> to 30px */\n@media screen and (max-width: 600px) {\ndiv.example {\nfont-size: 30px;\n}\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "@media only screen and (orientation: \nlandscape) {\nbody {\nbackground-color: lightblue;\n}\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "@media screen and (max-width: 900px) and (min-width: 600px) {\ndiv.example {\nfont-size: 50px;\npadding: 50px;\nborder: 8px solid black;\nbackground: yellow;\n}\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "/* When the width is between 600px and 900px or above 1100px \n  - change the appearance of <div> */\n@media screen and (max-width: 900px) and (min-width: \n  600px), (min-width: \n1100px) {\ndiv.example {\nfont-size: 50px;\npadding: 50px;\nborder: 8px solid black;\nbackground: yellow;\n}\n}",
      "language": "css",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "/* Set the background color of body to tan */\nbody {\nbackground-color: tan;\n}\n/* On \n  screens that are 992px or less, set the background color to blue */\n@media \n  screen and (max-width: 992px) {\n# TODO: Complete this line\nbackground-color: blue;\n}\n}\n/* On screens that are 600px or less, \n  set the \n  background color to olive */\n@media screen and (max-width: 600px) {\nbody {\nbackground-color: olive;\n}\n}",
      "solution": "/* Set the background color of body to tan */\nbody {\nbackground-color: tan;\n}\n/* On \n  screens that are 992px or less, set the background color to blue */\n@media \n  screen and (max-width: 992px) {\nbody {\nbackground-color: blue;\n}\n}\n/* On screens that are 600px or less, \n  set the \n  background color to olive */\n@media screen and (max-width: 600px) {\nbody {\nbackground-color: olive;\n}\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "/* The navbar container */\n.topnav {\noverflow: hidden;\nbackground-color: #333;\n}\n/* Navbar links */\n.topnav a {\nfloat: \n   left;\ndisplay: block;\ncolor: \n   white;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\n}\n/* On screens that are 600px wide or less, make the menu links stack on top \n   of each other instead of next to each other */\n@media screen and (max-width: 600px) {\n.topnav a {\nfloat: none;\n# TODO: Complete this line\n   100%;\n}\n}",
      "solution": "/* The navbar container */\n.topnav {\noverflow: hidden;\nbackground-color: #333;\n}\n/* Navbar links */\n.topnav a {\nfloat: \n   left;\ndisplay: block;\ncolor: \n   white;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\n}\n/* On screens that are 600px wide or less, make the menu links stack on top \n   of each other instead of next to each other */\n@media screen and (max-width: 600px) {\n.topnav a {\nfloat: none;\nwidth: \n   100%;\n}\n}"
    }
  ],
  "related_topics": [
    {
      "id": "27353ef8-8819-4312-9d5e-6bc3896ae5ae",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "da03573a-7016-423f-80ca-852bc0caf77b",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "c8a554f9-337f-4b93-a1bd-02e428125ae7",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Media queries?",
      "options": [
        "None of the above.",
        "992px or less",
        "a popular technique for delivering a tailored style sheet to different devices",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Media queries is 'a popular technique for delivering a tailored style sheet to different devices'."
    },
    {
      "question": "What is On \n  screens that?",
      "options": [
        "None of the above.",
        "a popular technique for delivering a tailored style sheet to different devices",
        "None of the above.",
        "992px or less"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of On \n  screens that is '992px or less'."
    }
  ],
  "summary": "This tutorial covers CSSMedia Queries - Examples concepts and techniques. You'll learn how to use CSSMedia Queries - Examples effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of CSSMedia Queries - Examples and how to apply it in your projects."
}