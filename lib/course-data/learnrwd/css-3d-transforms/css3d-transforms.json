{
  "id": "04a7fb6c-6488-4de6-b8c0-319c19e2b438",
  "title": "CSS3D Transforms",
  "slug": "css3d-transforms",
  "metadata": {
    "description": "Learn about CSS3D Transforms with clear explanations and practical examples.",
    "keywords": [
      "c",
      "transform",
      "defines",
      "axis",
      "function",
      "transformation",
      "element",
      "elements",
      "rotatex",
      "rotatey",
      "rotatez"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnRWD",
    "subcategory": "CSS 3D Transforms"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "CSS\n3D Transforms",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "CSS 3D Transforms\nCSS also supports 3D transformations.\nMouse over the elements below to see the difference between a 2D \nand a 3D transformation:\n2D rotate\n3D rotate\nIn this chapter you will learn about the following CSS property:\ntransform\nCSS 3D Transforms Functions\nWith the CSS\ntransform\nproperty you can use \nthe following 3D transformation functions:\nrotateX()\nrotateY()\nrotateZ()\nThe rotateX() Function\nThe\nrotateX()\nfunction rotates an element around its X-axis at a given degree:\nExample\n#myDiv\n{\ntransform: rotateX(150deg);\n}\n\nThe rotateY() Function\nThe\nrotateY()\nfunction rotates an element around its Y-axis at a given degree:\nExample\n#myDiv\n{\ntransform: rotateY(150deg);\n}\n\nThe rotateZ() Function\nThe\nrotateZ()\nfunction rotates an element around its Z-axis at a given degree:\nExample\n#myDiv\n{\ntransform: rotateZ(90deg);\n}\n\nCSS Transform Properties\nThe following table lists all the 3D transform properties:\nProperty\nDescription\ntransform\nApplies a 2D or 3D transformation to an element\ntransform-origin\nAllows you to change the position on transformed elements\ntransform-style\nSpecifies how nested elements are rendered in 3D space\nperspective\nSpecifies the perspective on how 3D elements are viewed\nperspective-origin\nSpecifies the bottom position of 3D elements\nbackface-visibility\nDefines whether or not an element should be visible when not facing the screen\nCSS 3D Transform Functions\nFunction\nDescription\nmatrix3d()\nDefines a 3D transformation, using a 4x4 matrix of 16 values\ntranslate3d()\nDefines a 3D translation\ntranslateZ()\nDefines a 3D translation, using only the value for the Z-axis\nscale3d()\nDefines a 3D scale transformation\nscaleZ()\nDefines a 3D scale transformation by giving a value for the Z-axis\nrotate3d()\nDefines a 3D rotation\nrotateX()\nDefines a 3D rotation along the X-axis\nrotateY()\nDefines a 3D rotation along the Y-axis\nrotateZ()\nDefines a 3D rotation along the Z-axis\nperspective()\nDefines a perspective view for a 3D transformed element\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "#myDiv\n{\ntransform: rotateX(150deg);\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "#myDiv\n{\ntransform: rotateY(150deg);\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "#myDiv\n{\ntransform: rotateZ(90deg);\n}",
      "language": "css",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "#myDiv\n{\ntransform: rotateX(150deg);\n# TODO: Complete this line",
      "solution": "#myDiv\n{\ntransform: rotateX(150deg);\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "#myDiv\n# TODO: Complete this line\ntransform: rotateY(150deg);\n}",
      "solution": "#myDiv\n{\ntransform: rotateY(150deg);\n}"
    }
  ],
  "related_topics": [
    {
      "id": "333c7a8b-6868-410c-acb7-70245e5c20a2",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "c9c1d0fc-a5de-4157-a882-9b2a085c91cf",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "a828b6fb-08ef-4c38-8109-d94ab909499e",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is style\nSpecifies how nested elements?",
      "options": [
        "None of the above.",
        "rendered in 3D space\nperspective\nSpecifies the perspective on how 3D elements are viewed\nperspective-origin\nSpecifies the bottom position of 3D elements\nbackface-visibility\nDefines whether or not an element should be visible when not facing the screen\nCSS 3D Transform Functions\nFunction\nDescription\nmatrix3d()\nDefines a 3D transformation",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of style\nSpecifies how nested elements is 'rendered in 3D space\nperspective\nSpecifies the perspective on how 3D elements are viewed\nperspective-origin\nSpecifies the bottom position of 3D elements\nbackface-visibility\nDefines whether or not an element should be visible when not facing the screen\nCSS 3D Transform Functions\nFunction\nDescription\nmatrix3d()\nDefines a 3D transformation'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers CSS3D Transforms concepts and techniques. You'll learn how to use CSS3D Transforms effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of CSS3D Transforms and how to apply it in your projects."
}