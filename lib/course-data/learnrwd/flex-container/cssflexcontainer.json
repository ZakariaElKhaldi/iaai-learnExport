{
  "id": "21097770-61b6-4ec8-8df3-1f1a6f602250",
  "title": "CSSFlexContainer",
  "slug": "cssflexcontainer",
  "metadata": {
    "description": "Learn about CSSFlexContainer with clear explanations and practical examples.",
    "keywords": [
      "c",
      "flex",
      "container",
      "items",
      "wrap",
      "display",
      "align",
      "space",
      "example",
      "content",
      "property"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 7,
    "category": "LearnRWD",
    "subcategory": "Flex Container"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "CSS\nFlex\nContainer",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The CSS Flex Container\nLike we specified in the \nflex container\n(the blue area) with three\nflex items\n:\n1\n2\n3\nThe flex container becomes flexible by setting the\ndisplay\nproperty to\nflex\n:\nExample\n.flex-container {\ndisplay: flex;\n}\n\nThe CSS properties we use for the flex container are:\nflex-direction\nflex-wrap\nflex-flow\njustify-content\nalign-items\nalign-content\nThe CSS flex-direction Property\nThe\nflex-direction\nproperty specifies the display-direction of flex items in the flex container.\nThe\nflex-direction\nproperty can have one of the following values:\nrow\ncolumn\nrow-reverse\ncolumn-reverse\nExample\nThe\nrow\nvalue is the default value, and it \ndisplays the flex items horizontally (from left to right):\n.flex-container {\ndisplay: flex;\nflex-direction: row;\n}\nResult:\n1\n2\n3\n\nExample\nThe\ncolumn\nvalue displays the flex items vertically (from top to bottom):\n.flex-container {\ndisplay: flex;\nflex-direction: column;\n}\nResult:\n1\n2\n3\n\nExample\nThe\nrow-reverse\nvalue displays the flex items horizontally (but from right to left):\n.flex-container {\ndisplay: flex;\nflex-direction: row-reverse;\n}\nResult:\n1\n2\n3\n\nExample\nThe\ncolumn-reverse\nvalue displays the flex items vertically (but from bottom to top):\n.flex-container {\ndisplay: flex;\nflex-direction: column-reverse;\n}\nResult:\n1\n2\n3\n\nThe CSS flex-wrap Property\nThe\nflex-wrap\nproperty specifies whether the flex items should wrap or not, \nif there is not enough room for them on one flex line.\nThe\nflex-wrap\nproperty can have one of the following values:\nnowrap\nwrap\nwrap-reverse\nExample\nThe\nnowrap\nvalue specifies that the flex items will not wrap (this \nis default):\n.flex-container {\ndisplay: flex;\nflex-wrap: nowrap;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\nExample\nThe\nwrap\nvalue specifies that the flex items will wrap if necessary:\n.flex-container {\ndisplay: flex;\nflex-wrap: wrap;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\nExample\nThe\nwrap-reverse\nvalue specifies that the flex items will wrap \nif necessary, in reverse order:\n.flex-container {\ndisplay: flex;\nflex-wrap: wrap-reverse;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\nThe CSS flex-flow Property\nThe\nflex-flow\nproperty is a shorthand property for setting both the\nflex-direction\nand\nflex-wrap\nproperties.\nExample\n.flex-container {\ndisplay: flex;\nflex-flow: row wrap;\n}\n\nThe CSS justify-content Property\nThe\njustify-content\nproperty is used to \nalign the flex items when they do not use all available space on the main-axis (horizontally).\nThe\njustify-content\nproperty can have one of the following values:\ncenter\nflex-start\nflex-end\nspace-around\nspace-between\nspace-evenly\nExample\nThe\ncenter\nvalue positions the flex items in the center of the container:\n.flex-container {\ndisplay: flex;\njustify-content: center;\n}\nResult:\n1\n2\n3\n\nExample\nThe\nflex-start\nvalue positions the flex items at the beginning of the container \n(this is default):\n.flex-container {\ndisplay: flex;\njustify-content: flex-start;\n}\nResult:\n1\n2\n3\n\nExample\nThe\nflex-end\nvalue positions the flex items at the end of the container:\n.flex-container {\ndisplay: flex;\njustify-content: flex-end;\n}\nResult:\n1\n2\n3\n\nExample\nThe\nspace-around\nvalue displays the flex items with space \naround them:\n.flex-container {\ndisplay: flex;\njustify-content: space-around;\n}\nResult:\n1\n2\n3\n\nExample\nThe\nspace-between\nvalue displays the flex items with space between them:\n.flex-container {\ndisplay: flex;\njustify-content: space-between;\n}\nResult:\n1\n2\n3\n\nExample\nThe\nspace-evenly\nvalue displays the flex items with equal space around them:\n.flex-container {\ndisplay: flex;\njustify-content: space-evenly;\n}\nResult:\n1\n2\n3\n\nThe CSS align-items Property\nThe\nalign-items\nproperty is used to \nalign the flex items when they do not use all available space on \nthe cross-axis (vertically).\nThe\nalign-items\nproperty can have one of the following values:\ncenter\nflex-start\nflex-end\nstretch\nbaseline\nnormal\nIn the following examples we use a 200 pixels high container, to better demonstrate the\nalign-items\nproperty.\nExample\nThe\ncenter\nvalue positions the flex items in the middle of the container:\n.flex-container {\ndisplay: flex;\nheight: 200px;\nalign-items: center;\n}\nResult:\n1\n2\n3\n\nExample\nThe\nflex-start\nvalue positions the flex items at the top of the container:\n.flex-container {\ndisplay: flex;\nheight: 200px;\nalign-items: flex-start;\n}\nResult:\n1\n2\n3\n\nExample\nThe\nflex-end\nvalue positions the flex items at the bottom of the container:\n.flex-container {\ndisplay: flex;\nheight: 200px;\nalign-items: flex-end;\n}\nResult:\n1\n2\n3\n\nExample\nThe\nstretch\nvalue stretches the flex items to fill the container \n(this is equal to \"normal\" which is default):\n.flex-container {\ndisplay: flex;\nheight: 200px;\nalign-items: stretch;\n}\nResult:\n1\n2\n3\n\nExample\nThe\nbaseline\nvalue positions the flex items \nat the baseline of the container:\n.flex-container {\ndisplay: flex;\nheight: 200px;\nalign-items: baseline;\n}\nNote:\nThe example uses different font-size to demonstrate that the items gets aligned by the text baseline:\n1\n2\n3\n4\n\nThe CSS align-content Property\nThe\nalign-content\nproperty is used to align the flex lines.\nThe\nalign-content\nproperty is \nsimilar to\nalign-items\n, but instead of aligning \nflex items, it aligns the flex lines.\nThe\nalign-content\nproperty can have one of the following values:\ncenter\nstretch\nflex-start\nflex-end\nspace-around\nspace-between\nspace-evenly\nIn the following examples we use a 600 pixels high container, with the\nflex-wrap\nproperty set to\nwrap\n, to better demonstrate the\nalign-content\nproperty.\nExample\nWith\ncenter\n, the flex lines are packed toward the center of the container:\n.flex-container {\ndisplay: flex;\nheight: 600px;\nflex-wrap: wrap;\nalign-content: center;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\nExample\nWith\nstretch\n, the flex lines stretch to take \nup the remaining space of the container (this is default):\n.flex-container {\ndisplay: flex;\nheight: 600px;\nflex-wrap: wrap;\nalign-content: stretch;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\nExample\nWith\nflex-start\n, the flex lines are packed \ntoward the start of the container:\n.flex-container {\ndisplay: flex;\nheight: 600px;\nflex-wrap: wrap;\nalign-content: flex-start;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\nExample\nWith\nflex-end\n, the flex lines are packed \ntoward the end of the container:\n.flex-container {\ndisplay: flex;\nheight: 600px;\nflex-wrap: wrap;\nalign-content: flex-end;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\nExample\nWith\nspace-between\n, the space between the flex lines are \nequal, but the first item is flush with the start edge of the container, and the \nlast item is flush with the end edge of the container:\n.flex-container {\ndisplay: flex;\nheight: 600px;\nflex-wrap: wrap;\nalign-content: space-between;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\nExample\nWith\nspace-around\n, the space between the flex lines are \nequal, but the space before the first item and after the last item is set to \nhalf of the space between the flex lines:\n.flex-container {\ndisplay: flex;\nheight: 600px;\nflex-wrap: wrap;\nalign-content: space-around;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\nExample\nWith\nspace-evenly\n, the flex lines are evenly distributed in the flex container, with equal space \non top, bottom and between:\n.flex-container {\ndisplay: flex;\nheight: 600px;\nflex-wrap: wrap;\nalign-content: space-evenly;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\nPerfect Centering\nIn the following example we will solve a common style problem: perfect \ncentering.\nSOLUTION:\nSet both the\njustify-content\nand\nalign-items\nproperties to\ncenter\n, and the flex item will be perfectly centered:\nExample\n.flex-container {\ndisplay: flex;\nheight: 300px;\njustify-content: \n  center;\nalign-items: center;\n}\n\nThe CSS Flex Container Properties\nThe following table lists all the CSS Flex Container properties:\nProperty\nDescription\nalign-content\nModifies the behavior of the flex-wrap property. It is similar to align-items, but instead of aligning flex items, it aligns flex lines\nalign-items\nVertically aligns the flex items when the items do not use all available space on the cross-axis\ndisplay\nSpecifies the display behavior (the type of rendering box) for an \n    element\nflex-direction\nSpecifies the direction of the flex items inside a flex container\nflex-flow\nA shorthand property for flex-direction and flex-wrap\nflex-wrap\nSpecifies whether the flex items should wrap or not, if there is not enough room for them on one flex line\njustify-content\nHorizontally aligns the flex items when the items do not use all available space on the main-axis\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": ".flex-container {\ndisplay: flex;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": ".flex-container {\ndisplay: flex;\nflex-direction: row;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": ".flex-container {\ndisplay: flex;\nflex-direction: column;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": ".flex-container {\ndisplay: flex;\nflex-direction: row-reverse;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": ".flex-container {\ndisplay: flex;\nflex-direction: column-reverse;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": ".flex-container {\ndisplay: flex;\nflex-wrap: nowrap;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": ".flex-container {\ndisplay: flex;\nflex-wrap: wrap;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": ".flex-container {\ndisplay: flex;\nflex-wrap: wrap-reverse;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": ".flex-container {\ndisplay: flex;\nflex-flow: row wrap;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": ".flex-container {\ndisplay: flex;\njustify-content: center;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 13,
      "code": ".flex-container {\ndisplay: flex;\njustify-content: flex-start;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 14,
      "code": ".flex-container {\ndisplay: flex;\njustify-content: flex-end;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 15,
      "code": ".flex-container {\ndisplay: flex;\njustify-content: space-around;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 16,
      "code": ".flex-container {\ndisplay: flex;\njustify-content: space-between;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 17,
      "code": ".flex-container {\ndisplay: flex;\njustify-content: space-evenly;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 18,
      "code": ".flex-container {\ndisplay: flex;\nheight: 200px;\nalign-items: center;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 19,
      "code": ".flex-container {\ndisplay: flex;\nheight: 200px;\nalign-items: flex-start;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 20,
      "code": ".flex-container {\ndisplay: flex;\nheight: 200px;\nalign-items: flex-end;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 21,
      "code": ".flex-container {\ndisplay: flex;\nheight: 200px;\nalign-items: stretch;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 22,
      "code": ".flex-container {\ndisplay: flex;\nheight: 200px;\nalign-items: baseline;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 23,
      "code": ".flex-container {\ndisplay: flex;\nheight: 600px;\nflex-wrap: wrap;\nalign-content: center;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 24,
      "code": ".flex-container {\ndisplay: flex;\nheight: 600px;\nflex-wrap: wrap;\nalign-content: stretch;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 25,
      "code": ".flex-container {\ndisplay: flex;\nheight: 600px;\nflex-wrap: wrap;\nalign-content: flex-start;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 26,
      "code": ".flex-container {\ndisplay: flex;\nheight: 600px;\nflex-wrap: wrap;\nalign-content: flex-end;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 27,
      "code": ".flex-container {\ndisplay: flex;\nheight: 600px;\nflex-wrap: wrap;\nalign-content: space-between;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 28,
      "code": ".flex-container {\ndisplay: flex;\nheight: 600px;\nflex-wrap: wrap;\nalign-content: space-around;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 29,
      "code": ".flex-container {\ndisplay: flex;\nheight: 600px;\nflex-wrap: wrap;\nalign-content: space-evenly;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 30,
      "code": ".flex-container {\ndisplay: flex;\nheight: 300px;\njustify-content: \n  center;\nalign-items: center;\n}",
      "language": "css",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": ".flex-container {\n# TODO: Complete this line\n}",
      "solution": ".flex-container {\ndisplay: flex;\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": ".flex-container {\ndisplay: flex;\nflex-direction: row;\n# TODO: Complete this line",
      "solution": ".flex-container {\ndisplay: flex;\nflex-direction: row;\n}"
    }
  ],
  "related_topics": [
    {
      "id": "33fc6ee3-e665-4db8-96c1-269a571e7008",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "3b523e73-4b55-45d9-b4ef-79912b66f198",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "60248af7-e011-4b8a-b74f-4b01c0706395",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is reverse\nExample\nThe\nrow\nvalue?",
      "options": [
        "None of the above.",
        "the default value",
        "Not a reverse\nExample\nThe\nrow\nvalue.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of reverse\nExample\nThe\nrow\nvalue is 'the default value'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers CSSFlexContainer concepts and techniques. You'll learn how to use CSSFlexContainer effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of CSSFlexContainer and how to apply it in your projects."
}