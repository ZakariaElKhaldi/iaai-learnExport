{
  "id": "241e43ef-7850-4395-8fbb-29136e35d704",
  "title": "CSSLayout - clear and clearfix",
  "slug": "csslayout-clear-and-clearfix",
  "metadata": {
    "description": "Learn about CSSLayout - clear and clearfix with clear explanations and practical examples.",
    "keywords": [
      "c",
      "element",
      "clear",
      "left",
      "clearfix",
      "floated",
      "float",
      "property",
      "pushed",
      "right",
      "elements"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnRWD",
    "subcategory": "Clear"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "CSS\nLayout - clear and clearfix",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The clear Property\nWhen we use the\nfloat\nproperty, and we want \nthe \nclear\nproperty.\nThe\nclear\nproperty specifies what \nshould happen with the element that is \nThe\nclear\nproperty can have one of the \nfollowing values:\nnone\n- The element is not pushed below \n  left or right floated elements. This is default\nleft\n- The element is pushed below left \n  floated elements\nright\n- The element is pushed below \n  right floated elements\nboth\n- The element is pushed below both \n  left and right floated elements\ninherit\n- The element inherits the clear value \n  from its parent\nWhen clearing floats, you should match the clear to the float: If an element \nis floated to the left, then you should clear to the left. Your floated element \nwill continue to float, but the cleared element will appear below it on the web \npage.\nExample\nThis example clears the float to the left. Here, it means that the <div2> \nelement is pushed below the left floated <div1> element:\ndiv1 {\nfloat: left;\n}\ndiv2 {\nclear: left;\n}\n\nThe clearfix Hack\nIf a floated element is taller than the containing element, it \nwill \"overflow\" outside of its container. We can then add a clearfix hack to \nsolve this problem:\nWithout Clearfix\nWith Clearfix\nExample\n.clearfix {\noverflow: auto;\n}\n\nThe\noverflow: auto\nclearfix works well as long as you are able to keep control of your margins and padding (else you \nmight see scrollbars). The\nnew, modern clearfix hack\nhowever, is safer to use, and the following code is used for most webpages:\nExample\n.clearfix::after {\ncontent: \"\";\nclear: both;\ndisplay: table;\n}\n\nYou will learn more about the\n::after\npseudo-element in a later chapter.\nCSS Properties\nProperty\nDescription\nclear\nSpecifies what should happen with the element that is \n    element\nfloat\nSpecifies whether an element should float to the left, right, or not at \n    all\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "div1 {\nfloat: left;\n}\ndiv2 {\nclear: left;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": ".clearfix {\noverflow: auto;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": ".clearfix::after {\ncontent: \"\";\nclear: both;\ndisplay: table;\n}",
      "language": "css",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "div1 {\n# TODO: Complete this line\n}\ndiv2 {\nclear: left;\n}",
      "solution": "div1 {\nfloat: left;\n}\ndiv2 {\nclear: left;\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": ".clearfix {\n# TODO: Complete this line\n}",
      "solution": ".clearfix {\noverflow: auto;\n}"
    }
  ],
  "related_topics": [
    {
      "id": "64b22bdc-9028-4978-bd06-53cee95b93b7",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "d5860dd1-8817-4931-b8c3-570232c3e9b2",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "13827cb4-2aaa-459b-b23e-e9d1f424d308",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The\nclear\nproperty specifies what \nshould happen with the element that?",
      "options": [
        "None of the above.",
        "The\nclear\nproperty can have one of the \nfollowing values:\nnone\n- The element is not pushed below \n  left or right floated elements",
        "None of the above.",
        "default\nleft\n- The element is pushed below left \n  floated elements\nright\n- The element is pushed below \n  right floated elements\nboth\n- The element is pushed below both \n  left and right floated elements\ninherit\n- The element inherits the clear value \n  from its parent\nWhen clearing floats"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of The\nclear\nproperty specifies what \nshould happen with the element that is 'The\nclear\nproperty can have one of the \nfollowing values:\nnone\n- The element is not pushed below \n  left or right floated elements'."
    },
    {
      "question": "What is This?",
      "options": [
        "default\nleft\n- The element is pushed below left \n  floated elements\nright\n- The element is pushed below \n  right floated elements\nboth\n- The element is pushed below both \n  left and right floated elements\ninherit\n- The element inherits the clear value \n  from its parent\nWhen clearing floats",
        "None of the above.",
        "None of the above.",
        "The\nclear\nproperty can have one of the \nfollowing values:\nnone\n- The element is not pushed below \n  left or right floated elements"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of This is 'default\nleft\n- The element is pushed below left \n  floated elements\nright\n- The element is pushed below \n  right floated elements\nboth\n- The element is pushed below both \n  left and right floated elements\ninherit\n- The element inherits the clear value \n  from its parent\nWhen clearing floats'."
    }
  ],
  "summary": "This tutorial covers CSSLayout - clear and clearfix concepts and techniques. You'll learn how to use CSSLayout - clear and clearfix effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of CSSLayout - clear and clearfix and how to apply it in your projects."
}