{
  "id": "0c69e5d7-5b6c-4bc0-ad41-6fdb9a9235ea",
  "title": "CSSWebsite Layout",
  "slug": "csswebsite-layout",
  "metadata": {
    "description": "Learn about CSSWebsite Layout with clear explanations and practical examples.",
    "keywords": [
      "c",
      "column",
      "layout",
      "content",
      "width",
      "amet",
      "website",
      "often",
      "color",
      "columns",
      "footer"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnRWD",
    "subcategory": "CSS Website Layout"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "CSS\nWebsite Layout",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Website Layout\nA website is often divided into headers, menus, content and a footer:\nHeader\nNavigation Menu\nContent\nMain Content\nContent\nFooter\nThere are tons of different layout designs to choose from. However, the structure above, is one of the most common, and we will take a closer look at it in this tutorial.\nHeader\nA header is usually located at the top of the website (or right below a top navigation menu). It often contains a logo or the website name:\nExample\n.header {\nbackground-color: #F1F1F1;\ntext-align: \n   center;\npadding: 20px;\n}\nResult\nHeader\n\nNavigation Bar\nA navigation bar contains a list of links to help visitors navigating through your website:\nExample\n/* The navbar container */\n.topnav {\noverflow: hidden;\nbackground-color: #333;\n}\n/* Navbar links */\n.topnav a {\nfloat: \n   left;\ndisplay: block;\ncolor: \n   #f2f2f2;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\n}\n/* Links - change color on hover */\n.topnav a:hover {\nbackground-color: #ddd;\ncolor: black;\n}\nResult\nLink\nLink\nLink\n\nContent\nThe layout in this section, often depends on the target users. The most common layout is \none (or combining them) of the following:\n1-column\n(often used for mobile browsers)\n2-column\n(often used for tablets and laptops)\n3-column layout\n(only used for desktops)\n1-column:\n2-column:\n3-column:\nWe will create a 3-column layout, and change it to a 1-column layout on smaller screens:\nExample\n/* Create three equal columns that float \n.column {\nfloat: left;\nwidth: 33.33%;\n}\n/* Clear floats after the \n   columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n/* Responsive \n   layout - makes the three columns stack on top of each other instead of \n   to each other on smaller screens (600px wide or less) */\n@media screen and (max-width: \n   600px) {\n.column \n   {\nwidth: 100%;\n}\n}\nResult\nColumn\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas sit amet pretium urna. Vivamus venenatis velit nec neque ultricies, eget elementum magna tristique.\nColumn\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas sit amet pretium urna. Vivamus venenatis velit nec neque ultricies, eget elementum magna tristique.\nColumn\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas sit amet pretium urna. Vivamus venenatis velit nec neque ultricies, eget elementum magna tristique.\n\nTip:\nTo create a 2-column layout, change the width to 50%. To create a 4-column layout, use 25%, etc.\nTip:\nDo you wonder how the @media rule works?\nRead more about \nit in our CSS Media Queries chapter\n.\nTip:\nA more modern way of creating column layouts, is to use CSS Flexbox. \nHowever, it is not supported in Internet Explorer 10 and earlier versions. If you require IE6-10 support, use floats (as shown above).\nTo learn more about the Flexible Box Layout Module,\nread our  \nCSS Flexbox chapter\n.\nUnequal Columns\nThe main content is the biggest and the most important part of your site.\nIt is common with\nunequal\ncolumn widths, so that most of the space \nis reserved for \nthe main content. The side content (if any) is often used as an alternative \nnavigation or to specify information relevant to the main content. Change the widths as you like, only remember that it should add up to 100% in total:\nExample\n.column {\nfloat: left;\n}\n/* Left and right column */\n.column.side {\nwidth: 25%;\n}\n/* Middle column */\n.column.middle \n   {\nwidth: 50%;\n}\n/* Responsive layout - makes \n   the three columns stack on top of each other instead of \n@media screen and (max-width: 600px) {\n.column.side, .column.middle \n   {\nwidth: 100%;\n}\n}\nResult\nSide\nLorem ipsum dolor sit amet, consectetur adipiscing elit...\nMain Content\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas sit amet pretium urna. Vivamus venenatis velit nec neque ultricies, eget elementum magna tristique. Quisque vehicula, risus eget aliquam placerat, purus leo tincidunt eros, eget luctus quam orci in velit. Praesent scelerisque tortor sed accumsan convallis.\nSide\nLorem ipsum dolor sit amet, consectetur adipiscing elit...\n\nFooter\nThe footer is placed at the bottom of your page. It often contains \ninformation like copyright and contact info:\nExample\n.footer {\nbackground-color: #F1F1F1;\ntext-align: \n   center;\npadding: 10px;\n}\nResult\nFooter\n\nResponsive Website Layout\nBy using some of the CSS code above, we have created a responsive website layout, which varies between two columns and full-width columns depending on screen width:\n\nEver heard about\n Spaces\n? Here you can create your website from scratch or use a template, and host it for free.\nGet started for free \u276f\n* no credit card required\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": ".header {\nbackground-color: #F1F1F1;\ntext-align: \n   center;\npadding: 20px;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "/* The navbar container */\n.topnav {\noverflow: hidden;\nbackground-color: #333;\n}\n/* Navbar links */\n.topnav a {\nfloat: \n   left;\ndisplay: block;\ncolor: \n   #f2f2f2;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\n}\n/* Links - change color on hover */\n.topnav a:hover {\nbackground-color: #ddd;\ncolor: black;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "/* Create three equal columns that float next to each other */\n.column {\nfloat: left;\nwidth: 33.33%;\n}\n/* Clear floats after the \n   columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n/* Responsive \n   layout - makes the three columns stack on top of each other instead of next \n   to each other on smaller screens (600px wide or less) */\n@media screen and (max-width: \n   600px) {\n.column \n   {\nwidth: 100%;\n}\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": ".column {\nfloat: left;\n}\n/* Left and right column */\n.column.side {\nwidth: 25%;\n}\n/* Middle column */\n.column.middle \n   {\nwidth: 50%;\n}\n/* Responsive layout - makes \n   the three columns stack on top of each other instead of next to each other */\n@media screen and (max-width: 600px) {\n.column.side, .column.middle \n   {\nwidth: 100%;\n}\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": ".footer {\nbackground-color: #F1F1F1;\ntext-align: \n   center;\npadding: 10px;\n}",
      "language": "css",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": ".header {\nbackground-color: #F1F1F1;\ntext-align: \n   center;\n# TODO: Complete this line\n}",
      "solution": ".header {\nbackground-color: #F1F1F1;\ntext-align: \n   center;\npadding: 20px;\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "/* The navbar container */\n.topnav {\noverflow: hidden;\nbackground-color: #333;\n}\n/* Navbar links */\n.topnav a {\nfloat: \n   left;\ndisplay: block;\ncolor: \n   #f2f2f2;\ntext-align: center;\npadding: 14px 16px;\n# TODO: Complete this line\n}\n/* Links - change color on hover */\n.topnav a:hover {\nbackground-color: #ddd;\ncolor: black;\n}",
      "solution": "/* The navbar container */\n.topnav {\noverflow: hidden;\nbackground-color: #333;\n}\n/* Navbar links */\n.topnav a {\nfloat: \n   left;\ndisplay: block;\ncolor: \n   #f2f2f2;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\n}\n/* Links - change color on hover */\n.topnav a:hover {\nbackground-color: #ddd;\ncolor: black;\n}"
    }
  ],
  "related_topics": [
    {
      "id": "6edfbb9e-4aca-4f6a-96c7-876f8deb859d",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "42781998-dc1b-43c1-9381-05b32b4080a2",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "6ebe74ae-9c95-4980-95d3-d47128e73e98",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is CSS\nWebsite Layout\n\nWebsite Layout\nA website?",
      "options": [
        "often divided into headers",
        "Not a CSS\nWebsite Layout\n\nWebsite Layout\nA website.",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of CSS\nWebsite Layout\n\nWebsite Layout\nA website is 'often divided into headers'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers CSSWebsite Layout concepts and techniques. You'll learn how to use CSSWebsite Layout effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of CSSWebsite Layout and how to apply it in your projects."
}