{
  "id": "09b8c90d-ad12-468e-b076-50431deb450c",
  "title": "Python -Global Variables",
  "slug": "python-global-variables",
  "metadata": {
    "description": "Learn about Python -Global Variables with clear explanations and practical examples.",
    "keywords": [
      "global",
      "variable",
      "function",
      "inside",
      "myfunc",
      "python",
      "variables",
      "create",
      "print",
      "keyword"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Python Basics"
    ],
    "estimated_time": 5,
    "category": "LearnMatplotlib",
    "subcategory": "Global Variables"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Python -\nGlobal Variables",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Global Variables\nVariables that are created outside of a function (as in all of the examples \nin the \nGlobal variables can be used by everyone, both inside of \nfunctions and outside.\nExample\nCreate a variable outside of a function, and use it inside the function\nx = \"awesome\"\ndef myfunc():\nprint(\"Python is \" + x)\nmyfunc()\n\nIf you create a variable with the same name inside a function, this variable \nwill be local, and can only be used inside the function. The global variable \nwith the same name will remain as it was, global and with the original value.\nExample\nCreate a variable inside a function, with the same name as the global \n  variable\nx = \"awesome\"\ndef myfunc():\nx = \"fantastic\"\nprint(\"Python is \" + x)\nmyfunc()\nprint(\"Python is \" + x)\n\nThe global Keyword\nNormally, when you create a variable inside a function, that variable is \nlocal, and can only be used inside that function.\nTo create a global variable inside a function, you can use the\nglobal\nkeyword.\nExample\nIf you use the\nglobal\nkeyword, the variable belongs to the global scope:\ndef myfunc():\nglobal x\nx = \"fantastic\"\nmyfunc()\nprint(\"Python is \" + x)\n\nAlso, use the\nglobal\nkeyword if you want to change a global variable inside a function.\nExample\nTo change the value of a global variable inside a function, refer to the \n  variable by using the\nglobal\nkeyword:\nx = \"awesome\"\ndef myfunc():\nglobal x\nx = \"fantastic\"\nmyfunc()\nprint(\"Python is \" + x)\n\nVideo: Python Global Variables\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "x = \"awesome\"\ndef myfunc():\nprint(\"Python is \" + x)\nmyfunc()",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "x = \"awesome\"\ndef myfunc():\nx = \"fantastic\"\nprint(\"Python is \" + x)\nmyfunc()\nprint(\"Python is \" + x)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "def myfunc():\nglobal x\nx = \"fantastic\"\nmyfunc()\nprint(\"Python is \" + x)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "x = \"awesome\"\ndef myfunc():\nglobal x\nx = \"fantastic\"\nmyfunc()\nprint(\"Python is \" + x)",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "x = \"awesome\"\ndef myfunc():\n# TODO: Complete this line\nmyfunc()",
      "solution": "x = \"awesome\"\ndef myfunc():\nprint(\"Python is \" + x)\nmyfunc()"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "x = \"awesome\"\ndef myfunc():\n# TODO: Complete this line\nprint(\"Python is \" + x)\nmyfunc()\nprint(\"Python is \" + x)",
      "solution": "x = \"awesome\"\ndef myfunc():\nx = \"fantastic\"\nprint(\"Python is \" + x)\nmyfunc()\nprint(\"Python is \" + x)"
    }
  ],
  "related_topics": [
    {
      "id": "4d13d8bc-f7db-458a-a736-27e63f064ccf",
      "title": "Python Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "1b3ed787-a21a-4b53-8262-d8687075ea24",
      "title": "Python Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "b20bd30f-e74d-44f5-87f2-4f8cd38df20b",
      "title": "Python Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Global Variables\n\nGlobal Variables\nVariables that?",
      "options": [
        "None of the above.",
        "\" + x)\nmyfunc()\n\nIf you create a variable with the same name inside a function",
        "created outside of a function (as in all of the examples \nin the \nGlobal variables can be used by everyone",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Global Variables\n\nGlobal Variables\nVariables that is 'created outside of a function (as in all of the examples \nin the \nGlobal variables can be used by everyone'."
    },
    {
      "question": "What is Python?",
      "options": [
        "None of the above.",
        "created outside of a function (as in all of the examples \nin the \nGlobal variables can be used by everyone",
        "\" + x)\nmyfunc()\n\nIf you create a variable with the same name inside a function",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Python is '\" + x)\nmyfunc()\n\nIf you create a variable with the same name inside a function'."
    }
  ],
  "summary": "This tutorial covers Python -Global Variables concepts and techniques. You'll learn how to use Python -Global Variables effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Python -Global Variables and how to apply it in your projects."
}