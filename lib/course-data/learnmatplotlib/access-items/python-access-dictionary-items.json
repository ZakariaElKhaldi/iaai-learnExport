{
  "id": "b6507a41-9b17-4aa6-bafc-9806e2c55d01",
  "title": "Python -Access Dictionary Items",
  "slug": "python-access-dictionary-items",
  "metadata": {
    "description": "Learn about Python -Access Dictionary Items with clear explanations and practical examples.",
    "keywords": [
      "python",
      "dictionary",
      "list",
      "model",
      "items",
      "change",
      "example",
      "print",
      "values",
      "keys",
      "thisdict"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Python Basics"
    ],
    "estimated_time": 5,
    "category": "LearnMatplotlib",
    "subcategory": "Access Items"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Python -\nAccess Dictionary Items",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Accessing Items\nYou can access the items of a dictionary by referring to its key name, inside \nsquare brackets:\nExample\nGet the value of the \"model\" key:\nthisdict =\t{\n\"brand\": \"Ford\",\n\"model\": \"Mustang\",\n\"year\": 1964\n}\nx = thisdict[\"model\"]\n\nThere is also a method called\nget()\nthat will give you the same result:\nExample\nGet the value of the \"model\" key:\nx = thisdict.get(\"model\")\n\nGet Keys\nThe\nkeys()\nmethod will return a list of all the keys in the dictionary.\nExample\nGet a list of the keys:\nx = thisdict.keys()\n\nThe list of the keys is a\nview\nof the dictionary, meaning that any \nchanges done to the dictionary will be reflected in the keys list.\nExample\nAdd a new item to the original dictionary, and see that the keys list gets \nupdated as well:\ncar = {\n\"brand\": \"Ford\",\n\"model\": \"Mustang\",\n\"year\": 1964\n}\nx = car.keys()\nprint(x) #before the change\ncar[\"color\"] = \n  \"white\"\nprint(x) #after the change\n\nGet Values\nThe\nvalues()\nmethod will return a list of all the values in the dictionary.\nExample\nGet a list of the values:\nx = thisdict.values()\n\nThe list of the values is a\nview\nof the dictionary, meaning that any \nchanges done to the dictionary will be reflected in the values list.\nExample\nMake a change in the original dictionary, and see that the values list gets \nupdated as well:\ncar = {\n\"brand\": \"Ford\",\n\"model\": \"Mustang\",\n\"year\": 1964\n}\nx = car.values()\nprint(x) #before the change\ncar[\"year\"] \n  = 2020\nprint(x) #after the change\n\nExample\nAdd a new item to the original dictionary, and see that the values list gets \nupdated as well:\ncar = {\n\"brand\": \"Ford\",\n\"model\": \"Mustang\",\n\"year\": 1964\n}\nx = car.values()\nprint(x) #before the change\ncar[\"color\"] \n  = \"red\"\nprint(x) #after the change\n\nGet Items\nThe\nitems()\nmethod will return each item in a dictionary, as tuples in a list.\nExample\nGet a list of the key:value pairs\nx = thisdict.items()\n\nThe returned list is a\nview\nof the items of the dictionary, meaning that any \nchanges done to the dictionary will be reflected in the items list.\nExample\nMake a change in the original dictionary, and see that the items list gets \nupdated as well:\ncar = {\n\"brand\": \"Ford\",\n\"model\": \"Mustang\",\n\"year\": 1964\n}\nx = car.items()\nprint(x) #before the change\ncar[\"year\"] \n  = 2020\nprint(x) #after the change\n\nExample\nAdd a new item to the original dictionary, and see that the items list gets \nupdated as well:\ncar = {\n\"brand\": \"Ford\",\n\"model\": \"Mustang\",\n\"year\": 1964\n}\nx = car.items()\nprint(x) #before the change\ncar[\"color\"] \n  = \"red\"\nprint(x) #after the change\n\nCheck if Key Exists\nTo determine if a specified key is present in a dictionary use the\nin\nkeyword:\nExample\nCheck if \"model\" is present in the dictionary:\nthisdict =\t{\n\"brand\": \"Ford\",\n\"model\": \"Mustang\",\n\"year\": 1964\n}\nif \"model\" in thisdict:\nprint(\"Yes, 'model' is \n  one of the keys in the thisdict dictionary\")\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "thisdict =\t{\n\"brand\": \"Ford\",\n\"model\": \"Mustang\",\n\"year\": 1964\n}\nx = thisdict[\"model\"]",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "x = thisdict.get(\"model\")",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "x = thisdict.keys()",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "car = {\n\"brand\": \"Ford\",\n\"model\": \"Mustang\",\n\"year\": 1964\n}\nx = car.keys()\nprint(x) #before the change\ncar[\"color\"] = \n  \"white\"\nprint(x) #after the change",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "x = thisdict.values()",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "car = {\n\"brand\": \"Ford\",\n\"model\": \"Mustang\",\n\"year\": 1964\n}\nx = car.values()\nprint(x) #before the change\ncar[\"year\"] \n  = 2020\nprint(x) #after the change",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "car = {\n\"brand\": \"Ford\",\n\"model\": \"Mustang\",\n\"year\": 1964\n}\nx = car.values()\nprint(x) #before the change\ncar[\"color\"] \n  = \"red\"\nprint(x) #after the change",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "x = thisdict.items()",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "car = {\n\"brand\": \"Ford\",\n\"model\": \"Mustang\",\n\"year\": 1964\n}\nx = car.items()\nprint(x) #before the change\ncar[\"year\"] \n  = 2020\nprint(x) #after the change",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": "car = {\n\"brand\": \"Ford\",\n\"model\": \"Mustang\",\n\"year\": 1964\n}\nx = car.items()\nprint(x) #before the change\ncar[\"color\"] \n  = \"red\"\nprint(x) #after the change",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 13,
      "code": "thisdict =\t{\n\"brand\": \"Ford\",\n\"model\": \"Mustang\",\n\"year\": 1964\n}\nif \"model\" in thisdict:\nprint(\"Yes, 'model' is \n  one of the keys in the thisdict dictionary\")",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "thisdict =\t{\n\"brand\": \"Ford\",\n\"model\": \"Mustang\",\n\"year\": 1964\n}\n# TODO: Complete this line",
      "solution": "thisdict =\t{\n\"brand\": \"Ford\",\n\"model\": \"Mustang\",\n\"year\": 1964\n}\nx = thisdict[\"model\"]"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your python code here",
      "solution": "x = thisdict.get(\"model\")"
    }
  ],
  "related_topics": [
    {
      "id": "b48078be-f2d5-4cd2-9266-0d6f33231752",
      "title": "Python Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "a1e47fac-655b-4d4e-8a6e-ce57515ca35f",
      "title": "Python Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "ebd480d4-13a9-4977-b01c-bf9f065c94b6",
      "title": "Python Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is There?",
      "options": [
        "also a method called\nget()\nthat will give you the same result:\nExample\nGet the value of the \"model\" key:\nx = thisdict",
        "None of the above.",
        "None of the above.",
        "a\nview\nof the dictionary"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of There is 'also a method called\nget()\nthat will give you the same result:\nExample\nGet the value of the \"model\" key:\nx = thisdict'."
    },
    {
      "question": "What is The list of the keys?",
      "options": [
        "also a method called\nget()\nthat will give you the same result:\nExample\nGet the value of the \"model\" key:\nx = thisdict",
        "a\nview\nof the dictionary",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of The list of the keys is 'a\nview\nof the dictionary'."
    }
  ],
  "summary": "This tutorial covers Python -Access Dictionary Items concepts and techniques. You'll learn how to use Python -Access Dictionary Items effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Python -Access Dictionary Items and how to apply it in your projects."
}