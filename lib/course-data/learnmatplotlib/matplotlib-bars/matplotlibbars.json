{
  "id": "1ac91980-94c8-45a4-bf68-077ebf748ffb",
  "title": "MatplotlibBars",
  "slug": "matplotlibbars",
  "metadata": {
    "description": "Learn about MatplotlibBars with clear explanations and practical examples.",
    "keywords": [
      "bars",
      "import",
      "array",
      "color",
      "matplotlib",
      "pyplot",
      "draw",
      "example",
      "numpy",
      "show"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnMatplotlib",
    "subcategory": "Matplotlib Bars"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Matplotlib\nBars",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Creating Bars\nWith Pyplot, you can use the\nbar()\nfunction \nto draw bar graphs:\nExample\nDraw 4 bars:\nimport matplotlib.pyplot as plt\nimport numpy as np\nx = np.array([\"A\", \n  \"B\", \"C\", \"D\"])\ny = np.array([3, 8, 1, 10])\nplt.bar(x,y)\nplt.show()\nResult:\n\nThe\nbar()\nfunction takes arguments that describes the \nlayout of the bars.\nThe categories and their values represented by the\nfirst\nand\nsecond\nargument as arrays.\nExample\nx = [\"APPLES\", \"BANANAS\"]\ny = [400, 350]\nplt.bar(x, y)\n\nHorizontal Bars\nIf you want the bars to be displayed horizontally instead of vertically,\nuse the\nbarh()\nfunction:\nExample\nDraw 4 horizontal bars:\nimport matplotlib.pyplot as plt\nimport numpy as np\nx = np.array([\"A\", \n  \"B\", \"C\", \"D\"])\ny = np.array([3, 8, 1, 10])\nplt.barh(x, y)\nplt.show()\nResult:\n\nBar Color\nThe\nbar()\nand\nbarh()\ntake the keyword argument\ncolor\nto set the color of the bars:\nExample\nDraw 4 red bars:\nimport matplotlib.pyplot as plt\nimport numpy as np\nx = np.array([\"A\", \n  \"B\", \"C\", \"D\"])\ny = np.array([3, 8, 1, 10])\nplt.bar(x, y, color = \"red\")\nplt.show()\nResult:\n\nColor Names\nYou can use any of the\n140 supported color names\n.\nExample\nDraw 4 \"hot pink\" bars:\nimport matplotlib.pyplot as plt\nimport numpy as np\nx = np.array([\"A\", \n  \"B\", \"C\", \"D\"])\ny = np.array([3, 8, 1, 10])\nplt.bar(x, y, color = \"hotpink\")\nplt.show()\nResult:\n\nColor Hex\nOr you can use\nHexadecimal color values\n:\nExample\nDraw 4 bars with a beautiful green color:\nimport matplotlib.pyplot as plt\nimport numpy as np\nx = np.array([\"A\", \n  \"B\", \"C\", \"D\"])\ny = np.array([3, 8, 1, 10])\nplt.bar(x, y, color = \"#4CAF50\")\nplt.show()\nResult:\n\nBar Width\nThe\nbar()\ntakes the keyword argument\nwidth\nto set the width of the bars:\nExample\nDraw 4 very thin bars:\nimport matplotlib.pyplot as plt\nimport numpy as np\nx = np.array([\"A\", \n  \"B\", \"C\", \"D\"])\ny = np.array([3, 8, 1, 10])\nplt.bar(x, y, width = 0.1)\nplt.show()\nResult:\n\nThe default width value is 0.8\nNote:\nFor horizontal bars, use\nheight\ninstead of\nwidth\n.\nBar Height\nThe\nbarh()\ntakes the keyword argument\nheight\nto set the height of the bars:\nExample\nDraw 4 very thin bars:\nimport matplotlib.pyplot as plt\nimport numpy as np\nx = np.array([\"A\", \n  \"B\", \"C\", \"D\"])\ny = np.array([3, 8, 1, 10])\nplt.barh(x, y, height = 0.1)\nplt.show()\nResult:\n\nThe default height value is 0.8\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "import matplotlib.pyplot as plt\nimport numpy as np\nx = np.array([\"A\", \n  \"B\", \"C\", \"D\"])\ny = np.array([3, 8, 1, 10])\nplt.bar(x,y)\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "x = [\"APPLES\", \"BANANAS\"]\ny = [400, 350]\nplt.bar(x, y)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "import matplotlib.pyplot as plt\nimport numpy as np\nx = np.array([\"A\", \n  \"B\", \"C\", \"D\"])\ny = np.array([3, 8, 1, 10])\nplt.barh(x, y)\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "import matplotlib.pyplot as plt\nimport numpy as np\nx = np.array([\"A\", \n  \"B\", \"C\", \"D\"])\ny = np.array([3, 8, 1, 10])\nplt.bar(x, y, color = \"red\")\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "import matplotlib.pyplot as plt\nimport numpy as np\nx = np.array([\"A\", \n  \"B\", \"C\", \"D\"])\ny = np.array([3, 8, 1, 10])\nplt.bar(x, y, color = \"hotpink\")\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "import matplotlib.pyplot as plt\nimport numpy as np\nx = np.array([\"A\", \n  \"B\", \"C\", \"D\"])\ny = np.array([3, 8, 1, 10])\nplt.bar(x, y, color = \"#4CAF50\")\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "import matplotlib.pyplot as plt\nimport numpy as np\nx = np.array([\"A\", \n  \"B\", \"C\", \"D\"])\ny = np.array([3, 8, 1, 10])\nplt.bar(x, y, width = 0.1)\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "import matplotlib.pyplot as plt\nimport numpy as np\nx = np.array([\"A\", \n  \"B\", \"C\", \"D\"])\ny = np.array([3, 8, 1, 10])\nplt.barh(x, y, height = 0.1)\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "import matplotlib.pyplot as plt\nimport numpy as np\nx = np.array([\"A\", \n# TODO: Complete this line\ny = np.array([3, 8, 1, 10])\nplt.bar(x,y)\nplt.show()",
      "solution": "import matplotlib.pyplot as plt\nimport numpy as np\nx = np.array([\"A\", \n  \"B\", \"C\", \"D\"])\ny = np.array([3, 8, 1, 10])\nplt.bar(x,y)\nplt.show()"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "x = [\"APPLES\", \"BANANAS\"]\ny = [400, 350]\n# TODO: Complete this line",
      "solution": "x = [\"APPLES\", \"BANANAS\"]\ny = [400, 350]\nplt.bar(x, y)"
    }
  ],
  "related_topics": [
    {
      "id": "9f22e110-c70e-4f64-95ba-13f3f8130dcd",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "50af1a3c-0758-4251-92fe-8a4c1b522c5b",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "b203a07e-9aff-4cee-8f49-f9ef1b5e2acc",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The default width value?",
      "options": [
        "0",
        "0",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of The default width value is '0'."
    },
    {
      "question": "What is The default height value?",
      "options": [
        "None of the above.",
        "0",
        "0",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of The default height value is '0'."
    }
  ],
  "summary": "This tutorial covers MatplotlibBars concepts and techniques. You'll learn how to use MatplotlibBars effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of MatplotlibBars and how to apply it in your projects."
}