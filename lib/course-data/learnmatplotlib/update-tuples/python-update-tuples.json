{
  "id": "7510e87f-d9ea-4232-a85c-35186ff531ce",
  "title": "Python -Update Tuples",
  "slug": "python-update-tuples",
  "metadata": {
    "description": "Learn about Python -Update Tuples with clear explanations and practical examples.",
    "keywords": [
      "python",
      "tuple",
      "thistuple",
      "list",
      "convert",
      "tuples",
      "items",
      "apple",
      "remove",
      "change",
      "example"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Python Basics"
    ],
    "estimated_time": 5,
    "category": "LearnMatplotlib",
    "subcategory": "Update Tuples"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Python -\nUpdate Tuples",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Tuples are unchangeable, meaning that you cannot change, add, or remove items once the tuple is created.\nBut there are some workarounds.\nChange Tuple Values\nOnce a tuple is created, you cannot change its values. Tuples are\nunchangeable\n, \nor\nimmutable\nas it also is called.\nBut there is a workaround. You can convert the tuple into a list, change the \nlist, and convert the list back into a tuple.\nExample\nConvert the tuple into a list to be able to change it:\nx = (\"apple\", \"banana\", \"cherry\")\ny = list(x)\ny[1] = \"kiwi\"\nx = \n  tuple(y)\nprint(x)\n\nAdd Items\nSince tuples are immutable, they do not have a built-in\nappend()\nmethod, but \nthere are other ways to add items to a tuple.\n1.\nConvert into a list\n: Just like the workaround for\nchanging\na tuple, you can convert it into a list, add your item(s), and convert it back into a tuple.\nExample\nConvert the tuple into a list, add \"orange\", and convert it back into a tuple:\nthistuple = (\"apple\", \"banana\", \"cherry\")\ny = list(thistuple)\ny.append(\"orange\")\nthistuple = \n  tuple(y)\n\n2.\nAdd tuple to a tuple\n. You are allowed to add tuples to \ntuples, so if you want to add one item, (or many), create a new tuple with the \nitem(s), and add it to the existing tuple:\nExample\nCreate a new tuple with the value \"orange\", and add that tuple:\nthistuple = (\"apple\", \"banana\", \"cherry\")\ny = (\"orange\",)\nthistuple += y\nprint(thistuple)\n\nNote:\nWhen creating a tuple with only one item, remember to include a comma \n  after the item, otherwise it will not be identified as a tuple.\nRemove Items\nNote:\nYou cannot remove items in a tuple.\nTuples are\nunchangeable\n, so you cannot remove items \nfrom it, but you can use the same workaround as we used for changing and adding tuple items:\nExample\nConvert the tuple into a list, remove \"apple\", and convert it back into a tuple:\nthistuple = (\"apple\", \"banana\", \"cherry\")\ny = list(thistuple)\ny.remove(\"apple\")\nthistuple = \n  tuple(y)\n\nOr you can delete the tuple completely:\nExample\nThe\ndel\nkeyword can delete the tuple \ncompletely:\nthistuple = (\"apple\", \"banana\", \"cherry\")\ndel\nthistuple\nprint(thistuple)\n  #this will raise an error because the tuple no longer exists\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "x = (\"apple\", \"banana\", \"cherry\")\ny = list(x)\ny[1] = \"kiwi\"\nx = \n  tuple(y)\nprint(x)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "thistuple = (\"apple\", \"banana\", \"cherry\")\ny = list(thistuple)\ny.append(\"orange\")\nthistuple = \n  tuple(y)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "thistuple = (\"apple\", \"banana\", \"cherry\")\ny = (\"orange\",)\nthistuple += y\nprint(thistuple)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "thistuple = (\"apple\", \"banana\", \"cherry\")\ny = list(thistuple)\ny.remove(\"apple\")\nthistuple = \n  tuple(y)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "thistuple = (\"apple\", \"banana\", \"cherry\")\ndel\nthistuple\nprint(thistuple)\n  #this will raise an error because the tuple no longer exists",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "x = (\"apple\", \"banana\", \"cherry\")\ny = list(x)\ny[1] = \"kiwi\"\n# TODO: Complete this line\n  tuple(y)\nprint(x)",
      "solution": "x = (\"apple\", \"banana\", \"cherry\")\ny = list(x)\ny[1] = \"kiwi\"\nx = \n  tuple(y)\nprint(x)"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "thistuple = (\"apple\", \"banana\", \"cherry\")\ny = list(thistuple)\n# TODO: Complete this line\nthistuple = \n  tuple(y)",
      "solution": "thistuple = (\"apple\", \"banana\", \"cherry\")\ny = list(thistuple)\ny.append(\"orange\")\nthistuple = \n  tuple(y)"
    }
  ],
  "related_topics": [
    {
      "id": "6a9a621f-73bd-48ad-9cec-d82e00ab6f0e",
      "title": "Python Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "0085fc7d-12a7-4a4f-9dc5-43ecbbba40ba",
      "title": "Python Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "6abf8ed9-a393-4ac5-b1bd-dccb93a12e9e",
      "title": "Python Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Update Tuples\n\nTuples?",
      "options": [
        "some workarounds",
        "None of the above.",
        "unchangeable",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Update Tuples\n\nTuples is 'unchangeable'."
    },
    {
      "question": "What is But there?",
      "options": [
        "None of the above.",
        "unchangeable",
        "some workarounds",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of But there is 'some workarounds'."
    }
  ],
  "summary": "This tutorial covers Python -Update Tuples concepts and techniques. You'll learn how to use Python -Update Tuples effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Python -Update Tuples and how to apply it in your projects."
}