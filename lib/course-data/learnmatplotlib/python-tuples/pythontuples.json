{
  "id": "5d16c2d4-3832-49bd-8ee2-baba65f86224",
  "title": "PythonTuples",
  "slug": "pythontuples",
  "metadata": {
    "description": "Learn about PythonTuples with clear explanations and practical examples.",
    "keywords": [
      "tuple",
      "items",
      "thistuple",
      "apple",
      "data",
      "type",
      "python",
      "tuples",
      "cherry",
      "ordered"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Python Basics"
    ],
    "estimated_time": 5,
    "category": "LearnMatplotlib",
    "subcategory": "Python Tuples"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Python\nTuples",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "mytuple = (\"apple\", \"banana\", \"cherry\")\nTuple\nTuples are used to store multiple items in a single variable.\nTuple is one of 4 built-in data types in Python used to store collections of \ndata, the other 3 are\nList\n,\nSet\n, and\nDictionary\n, all with different qualities and usage.\nA tuple is a collection which is ordered and\nunchangeable\n.\nTuples are written with round brackets.\nExample\nCreate a Tuple:\nthistuple = (\"apple\", \"banana\", \"cherry\")\nprint(thistuple)\n\nTuple Items\nTuple items are ordered, unchangeable, and allow duplicate values.\nTuple items are indexed, the first item has index\n[0]\n, the second item has index\n[1]\netc.\nOrdered\nWhen we say that tuples are ordered, it means that the items have a defined order, and that order will not change.\nUnchangeable\nTuples are unchangeable, meaning that we cannot change, add or remove items after the tuple has been created.\nAllow Duplicates\nSince tuples are indexed, they can have items with the same value:\nExample\nTuples allow duplicate values:\nthistuple = (\"apple\", \"banana\", \"cherry\", \"apple\", \"cherry\")\nprint(thistuple)\n\nTuple Length\nTo determine how many items a tuple has, use the\nlen()\nfunction:\nExample\nPrint the number of items in the tuple:\nthistuple = (\"apple\", \"banana\", \"cherry\")\nprint(len(thistuple))\n\nCreate Tuple With One Item\nTo create a tuple with only one item, you have to add a comma after the item, \notherwise Python will not recognize it as a tuple.\nExample\nOne item tuple, remember the comma:\nthistuple = (\"apple\",)\nprint(type(thistuple))\n#NOT a tuple\nthistuple = (\"apple\")\nprint(type(thistuple))\n\nTuple Items - Data Types\nTuple items can be of any data type:\nExample\nString, int and boolean data types:\ntuple1 = (\"apple\", \"banana\", \"cherry\")\ntuple2 = (1, 5, 7, 9, 3)\ntuple3 = (True, False, False)\n\nA tuple can contain different data types:\nExample\nA tuple with strings, integers and boolean values:\ntuple1 = (\"abc\", 34, True, 40, \"male\")\n\ntype()\nFrom Python's perspective, tuples are defined as objects with the data type 'tuple':\n<class 'tuple'>\nExample\nWhat is the data type of a tuple?\nmytuple = (\"apple\", \"banana\", \"cherry\")\nprint(type(mytuple))\n\nThe tuple() Constructor\nIt is also possible to use the\ntuple()\nconstructor to make a tuple.\nExample\nUsing the tuple() method to make a tuple:\nthistuple = tuple((\"apple\", \"banana\", \"cherry\")) # note the double round-brackets\nprint(thistuple)\n\nPython Collections (Arrays)\nThere are four collection data types in the Python programming language:\nList\nis a collection which is ordered and changeable. Allows duplicate members.\nTuple\nis a collection which is ordered and unchangeable. Allows duplicate members.\nSet\nis a collection which is unordered, \nunchangeable*, and unindexed. No duplicate members.\nDictionary\nis a collection which is ordered** \nand changeable. No duplicate members.\n*Set\nitems\nare unchangeable, but you can remove and/or add items \n  whenever you like.\n**As of Python version 3.7, dictionaries are\nordered\n. \n  In Python 3.6 and earlier, dictionaries are\nunordered\n.\nWhen choosing a collection type, it is useful to understand the properties of that type. Choosing the right type for a particular data set could mean retention of meaning, and, it could mean an increase in efficiency or security.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "thistuple = (\"apple\", \"banana\", \"cherry\")\nprint(thistuple)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "thistuple = (\"apple\", \"banana\", \"cherry\", \"apple\", \"cherry\")\nprint(thistuple)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "thistuple = (\"apple\", \"banana\", \"cherry\")\nprint(len(thistuple))",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "thistuple = (\"apple\",)\nprint(type(thistuple))\n#NOT a tuple\nthistuple = (\"apple\")\nprint(type(thistuple))",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "tuple1 = (\"apple\", \"banana\", \"cherry\")\ntuple2 = (1, 5, 7, 9, 3)\ntuple3 = (True, False, False)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "tuple1 = (\"abc\", 34, True, 40, \"male\")",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "mytuple = (\"apple\", \"banana\", \"cherry\")\nprint(type(mytuple))",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "thistuple = tuple((\"apple\", \"banana\", \"cherry\")) # note the double round-brackets\nprint(thistuple)",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your python code here",
      "solution": "thistuple = (\"apple\", \"banana\", \"cherry\")\nprint(thistuple)"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your python code here",
      "solution": "thistuple = (\"apple\", \"banana\", \"cherry\", \"apple\", \"cherry\")\nprint(thistuple)"
    }
  ],
  "related_topics": [
    {
      "id": "0aaa92a1-829b-4d81-89b4-549cf22e6a44",
      "title": "Python Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "ac97800a-dc67-4451-ab1f-8c69e7544d86",
      "title": "Python Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "09295084-d7eb-414b-b981-f1ef89b37709",
      "title": "Python Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Tuple\nTuples?",
      "options": [
        "used to store multiple items in a single variable",
        "one of 4 built-in data types in Python used to store collections of \ndata",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of Tuple\nTuples is 'used to store multiple items in a single variable'."
    },
    {
      "question": "What is Tuple?",
      "options": [
        "used to store multiple items in a single variable",
        "None of the above.",
        "one of 4 built-in data types in Python used to store collections of \ndata",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Tuple is 'one of 4 built-in data types in Python used to store collections of \ndata'."
    }
  ],
  "summary": "This tutorial covers PythonTuples concepts and techniques. You'll learn how to use PythonTuples effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PythonTuples and how to apply it in your projects."
}