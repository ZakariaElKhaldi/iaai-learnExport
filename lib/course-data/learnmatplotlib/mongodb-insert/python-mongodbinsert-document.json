{
  "id": "cde4f992-f710-4c07-9fa9-ed0ba902d963",
  "title": "Python MongoDBInsert Document",
  "slug": "python-mongodbinsert-document",
  "metadata": {
    "description": "Learn about Python MongoDBInsert Document with clear explanations and practical examples.",
    "keywords": [
      "python",
      "name",
      "address",
      "insert",
      "mongodb",
      "document",
      "example",
      "mycol",
      "documents",
      "method",
      "field"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Python Basics"
    ],
    "estimated_time": 5,
    "category": "LearnMatplotlib",
    "subcategory": "MongoDB Insert"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Python MongoDB\nInsert Document",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "A\ndocument\nin MongoDB is the same as a\nrecord\nin SQL databases.\nInsert Into Collection\nTo insert a record, or\ndocument\nas it is called in MongoDB, into a collection, we use the\ninsert_one()\nmethod.\nThe first parameter of the\ninsert_one()\nmethod is a \ndictionary containing the \nname(s) and value(s) of each field in the document you want to insert.\nExample\nInsert a record in the \"customers\" collection:\nimport pymongo\nmyclient = pymongo.MongoClient(\"mongodb://localhost:27017/\")\nmydb = myclient[\"mydatabase\"]\nmycol = mydb[\"customers\"]\nmydict = { \"name\": \"John\", \"address\": \"Highway 37\" }\nx =\n  mycol.insert_one(mydict)\nRun example \u00bb\nReturn the _id Field\nThe\ninsert_one()\nmethod returns a InsertOneResult object, which has a \nproperty,\ninserted_id\n, that holds the id of the inserted document.\nExample\nInsert another record in the \"customers\" collection, and return the value of the\n_id\nfield:\nmydict = { \"name\": \"Peter\", \"address\": \"Lowstreet 27\" }\nx = mycol.insert_one(mydict)\nprint(x.inserted_id)\nRun example \u00bb\nIf you do not specify an\n_id\nfield, then MongoDB \nwill add one for you and assign a unique id for each document.\nIn the example above no\n_id\nfield was \nspecified, so MongoDB assigned a unique \n_id for the record (document).\nInsert Multiple Documents\nTo insert multiple documents into a collection in MongoDB, we use the\ninsert_many()\nmethod.\nThe first parameter of the\ninsert_many()\nmethod \nis a list containing dictionaries with the data you want to insert:\nExample\nimport pymongo\nmyclient = pymongo.MongoClient(\"mongodb://localhost:27017/\")\nmydb = myclient[\"mydatabase\"]\nmycol = mydb[\"customers\"]\nmylist = [\n{ \"name\": \"Amy\", \"address\": \"Apple st 652\"},\n{ \"name\": \"Hannah\", \"address\": \"Mountain 21\"},\n{ \"name\": \n    \"Michael\", \"address\": \"Valley 345\"},\n{ \"name\": \"Sandy\", \"address\": \n    \"Ocean blvd 2\"},\n{ \"name\": \"Betty\", \"address\": \"Green Grass 1\"},\n{ \"name\": \"Richard\", \"address\": \"Sky st 331\"},\n{ \"name\": \"Susan\", \n    \"address\": \"One way 98\"},\n{ \"name\": \"Vicky\", \"address\": \"Yellow \n    Garden 2\"},\n{ \"name\": \"Ben\", \"address\": \"Park Lane 38\"},\n{ \"name\": \"William\", \"address\": \"Central st 954\"},\n{ \"name\": \n    \"Chuck\", \"address\": \"Main Road 989\"},\n{ \"name\": \"Viola\", \n    \"address\": \"Sideway 1633\"}\n]\nx = mycol.insert_many(mylist)\n#print list of the _id values of the inserted \n    documents:\nprint(x.inserted_ids)\nRun example \u00bb\nThe\ninsert_many()\nmethod returns a InsertManyResult object, which has a property,\ninserted_ids\n, that holds the ids of the inserted documents.\nInsert Multiple Documents, with Specified IDs\nIf you do not want MongoDB to assign unique ids for your document, you can \nspecify the _id field when you insert the document(s).\nRemember that the values has to be unique. Two documents cannot have the same \n_id.\nExample\nimport pymongo\nmyclient = pymongo.MongoClient(\"mongodb://localhost:27017/\")\nmydb = myclient[\"mydatabase\"]\nmycol = mydb[\"customers\"]\nmylist = [\n{ \"_id\": 1, \"name\": \"John\", \"address\": \"Highway 37\"},\n{ \"_id\": 2, \"name\": \"Peter\", \"address\": \"Lowstreet 27\"},\n{ \"_id\": \n    3, \"name\": \"Amy\", \"address\": \"Apple st 652\"},\n{ \"_id\": 4, \"name\": \n    \"Hannah\", \"address\": \"Mountain 21\"},\n{ \"_id\": 5, \"name\": \n    \"Michael\", \"address\": \"Valley 345\"},\n{ \"_id\": 6, \"name\": \"Sandy\", \n    \"address\": \"Ocean blvd 2\"},\n{ \"_id\": 7, \"name\": \"Betty\", \n    \"address\": \"Green Grass 1\"},\n{ \"_id\": 8, \"name\": \"Richard\", \n    \"address\": \"Sky st 331\"},\n{ \"_id\": 9, \"name\": \"Susan\", \"address\": \n    \"One way 98\"},\n{ \"_id\": 10, \"name\": \"Vicky\", \"address\": \"Yellow \n    Garden 2\"},\n{ \"_id\": 11, \"name\": \"Ben\", \"address\": \"Park Lane \n    38\"},\n{ \"_id\": 12, \"name\": \"William\", \"address\": \"Central st \n    954\"},\n{ \"_id\": 13, \"name\": \"Chuck\", \"address\": \"Main Road 989\"},\n{ \"_id\": 14, \"name\": \"Viola\", \"address\": \"Sideway 1633\"}\n]\nx = mycol.insert_many(mylist)\n#print list of the _id values of the inserted \n    documents:\nprint(x.inserted_ids)\nRun example \u00bb\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "import pymongo\nmyclient = pymongo.MongoClient(\"mongodb://localhost:27017/\")\nmydb = myclient[\"mydatabase\"]\nmycol = mydb[\"customers\"]\nmydict = { \"name\": \"John\", \"address\": \"Highway 37\" }\nx =\n  mycol.insert_one(mydict)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "mydict = { \"name\": \"Peter\", \"address\": \"Lowstreet 27\" }\nx = mycol.insert_one(mydict)\nprint(x.inserted_id)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "import pymongo\nmyclient = pymongo.MongoClient(\"mongodb://localhost:27017/\")\nmydb = myclient[\"mydatabase\"]\nmycol = mydb[\"customers\"]\nmylist = [\n{ \"name\": \"Amy\", \"address\": \"Apple st 652\"},\n{ \"name\": \"Hannah\", \"address\": \"Mountain 21\"},\n{ \"name\": \n    \"Michael\", \"address\": \"Valley 345\"},\n{ \"name\": \"Sandy\", \"address\": \n    \"Ocean blvd 2\"},\n{ \"name\": \"Betty\", \"address\": \"Green Grass 1\"},\n{ \"name\": \"Richard\", \"address\": \"Sky st 331\"},\n{ \"name\": \"Susan\", \n    \"address\": \"One way 98\"},\n{ \"name\": \"Vicky\", \"address\": \"Yellow \n    Garden 2\"},\n{ \"name\": \"Ben\", \"address\": \"Park Lane 38\"},\n{ \"name\": \"William\", \"address\": \"Central st 954\"},\n{ \"name\": \n    \"Chuck\", \"address\": \"Main Road 989\"},\n{ \"name\": \"Viola\", \n    \"address\": \"Sideway 1633\"}\n]\nx = mycol.insert_many(mylist)\n#print list of the _id values of the inserted \n    documents:\nprint(x.inserted_ids)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "import pymongo\nmyclient = pymongo.MongoClient(\"mongodb://localhost:27017/\")\nmydb = myclient[\"mydatabase\"]\nmycol = mydb[\"customers\"]\nmylist = [\n{ \"_id\": 1, \"name\": \"John\", \"address\": \"Highway 37\"},\n{ \"_id\": 2, \"name\": \"Peter\", \"address\": \"Lowstreet 27\"},\n{ \"_id\": \n    3, \"name\": \"Amy\", \"address\": \"Apple st 652\"},\n{ \"_id\": 4, \"name\": \n    \"Hannah\", \"address\": \"Mountain 21\"},\n{ \"_id\": 5, \"name\": \n    \"Michael\", \"address\": \"Valley 345\"},\n{ \"_id\": 6, \"name\": \"Sandy\", \n    \"address\": \"Ocean blvd 2\"},\n{ \"_id\": 7, \"name\": \"Betty\", \n    \"address\": \"Green Grass 1\"},\n{ \"_id\": 8, \"name\": \"Richard\", \n    \"address\": \"Sky st 331\"},\n{ \"_id\": 9, \"name\": \"Susan\", \"address\": \n    \"One way 98\"},\n{ \"_id\": 10, \"name\": \"Vicky\", \"address\": \"Yellow \n    Garden 2\"},\n{ \"_id\": 11, \"name\": \"Ben\", \"address\": \"Park Lane \n    38\"},\n{ \"_id\": 12, \"name\": \"William\", \"address\": \"Central st \n    954\"},\n{ \"_id\": 13, \"name\": \"Chuck\", \"address\": \"Main Road 989\"},\n{ \"_id\": 14, \"name\": \"Viola\", \"address\": \"Sideway 1633\"}\n]\nx = mycol.insert_many(mylist)\n#print list of the _id values of the inserted \n    documents:\nprint(x.inserted_ids)",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "import pymongo\nmyclient = pymongo.MongoClient(\"mongodb://localhost:27017/\")\n# TODO: Complete this line\nmycol = mydb[\"customers\"]\nmydict = { \"name\": \"John\", \"address\": \"Highway 37\" }\nx =\n  mycol.insert_one(mydict)",
      "solution": "import pymongo\nmyclient = pymongo.MongoClient(\"mongodb://localhost:27017/\")\nmydb = myclient[\"mydatabase\"]\nmycol = mydb[\"customers\"]\nmydict = { \"name\": \"John\", \"address\": \"Highway 37\" }\nx =\n  mycol.insert_one(mydict)"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "mydict = { \"name\": \"Peter\", \"address\": \"Lowstreet 27\" }\nx = mycol.insert_one(mydict)\n# TODO: Complete this line",
      "solution": "mydict = { \"name\": \"Peter\", \"address\": \"Lowstreet 27\" }\nx = mycol.insert_one(mydict)\nprint(x.inserted_id)"
    }
  ],
  "related_topics": [
    {
      "id": "29d814b1-336b-4272-848a-6bdaa32a7ee2",
      "title": "Python Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "e9c94544-c5ab-444a-b375-b7ef5c99b9eb",
      "title": "Python Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "bfc59749-8ef8-4d82-9aff-fedffeac9862",
      "title": "Python Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Python MongoDB\nInsert Document\n\nA\ndocument\nin MongoDB?",
      "options": [
        "called in MongoDB",
        "None of the above.",
        "None of the above.",
        "the same as a\nrecord\nin SQL databases"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Python MongoDB\nInsert Document\n\nA\ndocument\nin MongoDB is 'the same as a\nrecord\nin SQL databases'."
    },
    {
      "question": "What is or\ndocument\nas it?",
      "options": [
        "None of the above.",
        "called in MongoDB",
        "the same as a\nrecord\nin SQL databases",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of or\ndocument\nas it is 'called in MongoDB'."
    }
  ],
  "summary": "This tutorial covers Python MongoDBInsert Document concepts and techniques. You'll learn how to use Python MongoDBInsert Document effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Python MongoDBInsert Document and how to apply it in your projects."
}