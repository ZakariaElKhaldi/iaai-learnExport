{
  "id": "9fe4626c-2a3b-4857-a83c-9693f4e94131",
  "title": "Data Science- Plotting Linear Functions",
  "slug": "data-science-plotting-linear-functions",
  "metadata": {
    "description": "Learn about Data Science- Plotting Linear Functions with clear explanations and practical examples.",
    "keywords": [
      "c",
      "plot",
      "line",
      "calorie",
      "burnage",
      "data",
      "average",
      "pulse",
      "want",
      "increases",
      "first"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnData Science",
    "subcategory": "DS Plotting Functions"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Data Science\n- Plotting Linear Functions",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The Sports Watch Data Set\nTake a look at our health data set:\nDuration\nAverage_Pulse\nMax_Pulse\nCalorie_Burnage\nHours_Work\nHours_Sleep\n30\n80\n120\n240\n10\n7\n30\n85\n120\n250\n10\n7\n45\n90\n130\n260\n8\n7\n45\n95\n130\n270\n8\n7\n45\n100\n140\n280\n0\n7\n60\n105\n140\n290\n7\n8\n60\n110\n145\n300\n7\n8\n60\n115\n145\n310\n8\n8\n75\n120\n150\n320\n0\n8\n75\n125\n150\n330\n8\n8\nPlot the Existing Data in Python\nNow, we can first plot the values of Average_Pulse against Calorie_Burnage using the matplotlib library.\nThe\nplot()\nfunction is used to make a 2D hexagonal binning plot of points x,y:\nExample\nimport matplotlib.pyplot as plt\nhealth_data.plot(x ='Average_Pulse', \n  y='Calorie_Burnage', kind='line'),\nplt.ylim(ymin=0)\nplt.xlim(xmin=0)\nplt.show()\n\nExample Explained\nImport the pyplot module of the matplotlib library\nPlot the data from Average_Pulse against Calorie_Burnage\nkind='line'\ntells us which type of plot we want. Here, we \n  want to have a straight line\nplt.ylim() and plt.xlim() tells us what value we want the axis to start \n  on. Here, we want the axis to begin from zero\nplt.show() shows us the output\nThe code above will produce the following result:\nThe Graph Output\nAs we can see, there is a relationship between Average_Pulse and \nCalorie_Burnage. Calorie_Burnage increases proportionally with Average_Pulse. It means that we can use Average_Pulse to predict Calorie_Burnage.\nWhy is The Line Not Fully Drawn Down to The y-axis?\nThe reason is that we do not have observations where Average_Pulse or \nCalorie_Burnage are equal to zero. 80 is the first observation of Average_Pulse \nand 240 is the first observation of Calorie_Burnage.\nLook at the line. What happens to calorie burnage if average pulse increases from 80 to 90?\nWe can use the diagonal line to find the mathematical function to predict calorie burnage.\nAs it turns out:\nIf the average pulse is 80, the calorie burnage is 240\nIf the average pulse is 90, the calorie burnage is 260\nIf the average pulse is 100, the calorie burnage is 280\nThere is a pattern. If average pulse increases by 10, the calorie burnage increases by 20.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "import matplotlib.pyplot as plt\nhealth_data.plot(x ='Average_Pulse', \n  y='Calorie_Burnage', kind='line'),\nplt.ylim(ymin=0)\nplt.xlim(xmin=0)\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "import matplotlib.pyplot as plt\nhealth_data.plot(x ='Average_Pulse', \n# TODO: Complete this line\nplt.ylim(ymin=0)\nplt.xlim(xmin=0)\nplt.show()",
      "solution": "import matplotlib.pyplot as plt\nhealth_data.plot(x ='Average_Pulse', \n  y='Calorie_Burnage', kind='line'),\nplt.ylim(ymin=0)\nplt.xlim(xmin=0)\nplt.show()"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "3e605495-c5e5-4ce6-8154-18c44e79e14f",
      "title": "Advanced C Techniques",
      "relationship": "next_topic"
    },
    {
      "id": "bcf37c9e-5b0e-4060-83bd-8bed646c4c48",
      "title": "C Project: Build a Real-World Application",
      "relationship": "suggested_next"
    },
    {
      "id": "39171cfb-936e-4a83-8199-d6bd1bd90812",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is function?",
      "options": [
        "None of the above.",
        "a relationship between Average_Pulse and \nCalorie_Burnage",
        "used to make a 2D hexagonal binning plot of points x",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of function is 'used to make a 2D hexagonal binning plot of points x'."
    },
    {
      "question": "What is there?",
      "options": [
        "used to make a 2D hexagonal binning plot of points x",
        "None of the above.",
        "None of the above.",
        "a relationship between Average_Pulse and \nCalorie_Burnage"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of there is 'a relationship between Average_Pulse and \nCalorie_Burnage'."
    }
  ],
  "summary": "This tutorial covers Data Science- Plotting Linear Functions concepts and techniques. You'll learn how to use Data Science- Plotting Linear Functions effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Data Science- Plotting Linear Functions and how to apply it in your projects."
}