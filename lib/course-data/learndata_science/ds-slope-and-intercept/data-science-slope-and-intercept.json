{
  "id": "79a2ad34-1273-4833-b9a9-b1a7b12e8779",
  "title": "Data Science- Slope and Intercept",
  "slug": "data-science-slope-and-intercept",
  "metadata": {
    "description": "Learn about Data Science- Slope and Intercept with clear explanations and practical examples.",
    "keywords": [
      "c",
      "slope",
      "intercept",
      "function",
      "line",
      "average",
      "pulse",
      "calorie",
      "burnage",
      "example",
      "axis"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnData Science",
    "subcategory": "DS Slope and Intercept"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Data Science\n- Slope and Intercept",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Slope and Intercept\nNow we will explain how we found the slope and intercept of our function:\nf(x) = 2x + 80\nThe image below points to the Slope - which indicates how steep the line is, \nand the Intercept - which is the value of y, when x = 0 (the point where the \ndiagonal line crosses the vertical axis). The red line is the continuation of \nthe blue line from \nFind The Slope\nThe slope is defined as how much calorie burnage increases, if average pulse increases by one. \nIt tells us how \"steep\" the diagonal line is.\nWe can find the slope by using the proportional difference of two points from the graph.\nIf the average pulse is 80, the calorie burnage is 240\nIf the average pulse is 90, the calorie burnage is 260\nWe see that if average pulse increases with 10, the calorie burnage increases by 20.\nSlope = 20/10 = 2\nThe slope is 2.\nMathematically, Slope is Defined as:\nSlope = f(x2) - f(x1) / x2-x1\nf(x2) = Second observation of Calorie_Burnage = 260\nf(x1) = First \nobservation of Calorie_Burnage = 240\nx2 = Second observation of Average_Pulse = 90\nx1 = First observation of \nAverage_Pulse = 80\nSlope = (260-240) / (90 - 80) = 2\nBe consistent to define the observations in the correct order! If not, the \nprediction will not be correct!\nUse Python to Find the Slope\nCalculate the slope with the following code:\nExample\ndef slope(x1, y1, x2, y2):\ns = (y2-y1)/(x2-x1)\nreturn s\nprint (slope(80,240,90,260))\n\nFind The Intercept\nThe intercept is used to fine tune the functions ability to predict Calorie_Burnage.\nThe intercept is where the diagonal line crosses the y-axis, if it were fully drawn.\nThe intercept is the value of y, when x = 0.\nHere, we see that if average pulse (x) is zero, then the calorie burnage (y) is 80.\nSo, the intercept is 80.\nSometimes, the intercept has a practical meaning. Sometimes not.\nDoes it make sense that average pulse is zero?\nNo, you would be dead and you certainly would not burn any calories.\nHowever, we need to include the intercept in order to complete the \nmathematical function's ability to predict Calorie_Burnage correctly.\nOther examples where the intercept of a mathematical function can have a practical meaning:\nPredicting \nrevenue will we have \nto assume that a company will still have some revenue even though if it does not spend money on marketing.\nFuel usage with speed (How much fuel do we use if speed is equal to 0 mph?). \nA car that uses gasoline will still use fuel when it is idle.\nFind the Slope and Intercept Using Python\nThe\nnp.polyfit()\nfunction returns the slope and intercept.\nIf we proceed with the following code, we can both get the slope and intercept from the function.\nExample\nimport pandas as pd\nimport numpy as np\nhealth_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\nx = health_data[\"Average_Pulse\"]\ny = health_data[\"Calorie_Burnage\"]\nslope_intercept = np.polyfit(x,y,1)\nprint(slope_intercept)\n\nExample Explained:\nIsolate the variables Average_Pulse (x) and Calorie_Burnage (y) \nfrom health_data.\nCall the np.polyfit() function.\nThe last parameter of the function specifies the degree of the function, which in this case \nis \"1\".\nTip:\nlinear functions = 1.degree function. In our example, the function is linear, which is in the 1.degree. That means \nthat all coefficients (the numbers) are in the power of one.\nWe have now calculated the slope (2) and the intercept (80).\n\nWe can write the mathematical function as follow:\nPredict Calorie_Burnage by using a mathematical expression:\nf(x) = 2x + 80\nTask:\nNow, we want to predict calorie burnage if average pulse \nis 135.\nRemember that the intercept is a constant. A constant is a number that \ndoes not change.\nWe can now substitute the input x with 135:\nf(135) = 2 * 135 + 80 = 350\nIf average pulse is 135, the calorie burnage is 350.\nDefine the Mathematical Function in Python\nHere is the exact same mathematical function, but in Python. The function \nreturns 2*x + 80, with x as the input:\nExample\ndef my_function(x):\nreturn 2*x + 80\nprint (my_function(135))\n\nTry to replace x with 140 and 150.\nPlot a New Graph in Python\nHere, we plot the same graph as earlier, but formatted the axis a little bit.\nMax value of the y-axis is now 400 and for x-axis is 150:\nExample\nimport matplotlib.pyplot as plt\nhealth_data.plot(x ='Average_Pulse', \n  y='Calorie_Burnage', kind='line'),\nplt.ylim(ymin=0, ymax=400)\nplt.xlim(xmin=0, \n  xmax=150)\nplt.show()\n\nExample Explained\nImport the pyplot module of the matplotlib library\nPlot the data from Average_Pulse against Calorie_Burnage\nkind='line'\ntells us which type of plot we want. Here, we \n  want to have a straight line\nplt.ylim() and plt.xlim() tells us what value we want the axis to start \n  and stop on.\nplt.show() shows us the output\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "def slope(x1, y1, x2, y2):\ns = (y2-y1)/(x2-x1)\nreturn s\nprint (slope(80,240,90,260))",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "import pandas as pd\nimport numpy as np\nhealth_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\nx = health_data[\"Average_Pulse\"]\ny = health_data[\"Calorie_Burnage\"]\nslope_intercept = np.polyfit(x,y,1)\nprint(slope_intercept)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "def my_function(x):\nreturn 2*x + 80\nprint (my_function(135))",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "import matplotlib.pyplot as plt\nhealth_data.plot(x ='Average_Pulse', \n  y='Calorie_Burnage', kind='line'),\nplt.ylim(ymin=0, ymax=400)\nplt.xlim(xmin=0, \n  xmax=150)\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "def slope(x1, y1, x2, y2):\ns = (y2-y1)/(x2-x1)\n# TODO: Complete this line\nprint (slope(80,240,90,260))",
      "solution": "def slope(x1, y1, x2, y2):\ns = (y2-y1)/(x2-x1)\nreturn s\nprint (slope(80,240,90,260))"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "import pandas as pd\nimport numpy as np\nhealth_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\n# TODO: Complete this line\ny = health_data[\"Calorie_Burnage\"]\nslope_intercept = np.polyfit(x,y,1)\nprint(slope_intercept)",
      "solution": "import pandas as pd\nimport numpy as np\nhealth_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\nx = health_data[\"Average_Pulse\"]\ny = health_data[\"Calorie_Burnage\"]\nslope_intercept = np.polyfit(x,y,1)\nprint(slope_intercept)"
    }
  ],
  "related_topics": [
    {
      "id": "b2252d95-a4b4-45a2-896c-563d3f79c8c9",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "ae0c5cd7-2371-4e9d-90ee-33bad5118b4a",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "4f2610da-cca6-4255-b623-ff48459ccb7b",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is which?",
      "options": [
        "None of the above.",
        "the value of y",
        "how much calorie burnage increases",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of which is 'the value of y'."
    },
    {
      "question": "What is The red line is the continuation of \nthe blue line from \nFind The Slope\nThe slope is?",
      "options": [
        "None of the above.",
        "how much calorie burnage increases",
        "the value of y",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of The red line is the continuation of \nthe blue line from \nFind The Slope\nThe slope is is 'how much calorie burnage increases'."
    }
  ],
  "summary": "This tutorial covers Data Science- Slope and Intercept concepts and techniques. You'll learn how to use Data Science- Slope and Intercept effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Data Science- Slope and Intercept and how to apply it in your projects."
}