{
  "id": "da6f1308-9090-453b-ae5f-5e31d3a9a496",
  "title": "Data Science- Regression Table: R-Squared",
  "slug": "data-science-regression-table-r-squared",
  "metadata": {
    "description": "Learn about Data Science- Regression Table: R-Squared with clear explanations and practical examples.",
    "keywords": [
      "c",
      "squared",
      "regression",
      "data",
      "linear",
      "value",
      "function",
      "means",
      "line",
      "well",
      "points"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnData Science",
    "subcategory": "DS Regression R-Squared"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Data Science\n- Regression Table: R-Squared",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "R - Squared\nR-Squared and Adjusted R-Squared describes how well the linear regression model fits the data points:\nThe value of R-Squared is always between 0 to 1 (0% to 100%).\nA high R-Squared value means that many data points are close to the linear regression function line.\nA low R-Squared value means that the linear regression function line does not fit the data well.\nVisual Example of a Low R - Squared Value (0.00)\nOur regression model shows a R-Squared value of zero, which means that the \nlinear regression function line does not fit the data well.\nThis can be visualized when we plot the linear regression function \nthrough the data points of Average_Pulse and Calorie_Burnage.\nVisual Example of a High R - Squared Value (0.79)\nHowever, if we plot\nDuration\nand\nCalorie_Burnage\n, the R-Squared increases. \nHere, we see that the data points are close to the linear regression function line:\nHere is the code in Python:\nExample\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom scipy \n  import stats\nfull_health_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\nx = full_health_data[\"Duration\"]\ny = \nfull_health_data [\"Calorie_Burnage\"]\nslope, intercept, r, p, std_err = \nstats.linregress(x, y)\ndef myfunc(x):\nreturn slope * x + intercept\nmymodel = list(map(myfunc, x))\nprint(mymodel)\nplt.scatter(x, \ny)\nplt.plot(x, mymodel)\nplt.ylim(ymin=0, ymax=2000)\nplt.xlim(xmin=0, \nxmax=200)\nplt.xlabel(\"Duration\")\nplt.ylabel (\"Calorie_Burnage\")\nplt.show()\n\nSummary - Predicting Calorie_Burnage with Average_Pulse\nHow can we summarize the linear regression function with Average_Pulse as explanatory variable?\nCoefficient of 0.3296, which means that Average_Pulse has a very small effect on Calorie_Burnage.\nHigh P-value (0.824), which means that we cannot conclude a relationship between Average_Pulse and Calorie_Burnage.\nR-Squared value of 0, which means that the linear regression function line does not fit the data well.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "import pandas as pd\nimport matplotlib.pyplot as plt\nfrom scipy \n  import stats\nfull_health_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\nx = full_health_data[\"Duration\"]\ny = \nfull_health_data [\"Calorie_Burnage\"]\nslope, intercept, r, p, std_err = \nstats.linregress(x, y)\ndef myfunc(x):\nreturn slope * x + intercept\nmymodel = list(map(myfunc, x))\nprint(mymodel)\nplt.scatter(x, \ny)\nplt.plot(x, mymodel)\nplt.ylim(ymin=0, ymax=2000)\nplt.xlim(xmin=0, \nxmax=200)\nplt.xlabel(\"Duration\")\nplt.ylabel (\"Calorie_Burnage\")\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "import pandas as pd\nimport matplotlib.pyplot as plt\nfrom scipy \n  import stats\nfull_health_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\nx = full_health_data[\"Duration\"]\ny = \nfull_health_data [\"Calorie_Burnage\"]\nslope, intercept, r, p, std_err = \nstats.linregress(x, y)\ndef myfunc(x):\nreturn slope * x + intercept\nmymodel = list(map(myfunc, x))\nprint(mymodel)\nplt.scatter(x, \ny)\nplt.plot(x, mymodel)\nplt.ylim(ymin=0, ymax=2000)\nplt.xlim(xmin=0, \n# TODO: Complete this line\nplt.xlabel(\"Duration\")\nplt.ylabel (\"Calorie_Burnage\")\nplt.show()",
      "solution": "import pandas as pd\nimport matplotlib.pyplot as plt\nfrom scipy \n  import stats\nfull_health_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\nx = full_health_data[\"Duration\"]\ny = \nfull_health_data [\"Calorie_Burnage\"]\nslope, intercept, r, p, std_err = \nstats.linregress(x, y)\ndef myfunc(x):\nreturn slope * x + intercept\nmymodel = list(map(myfunc, x))\nprint(mymodel)\nplt.scatter(x, \ny)\nplt.plot(x, mymodel)\nplt.ylim(ymin=0, ymax=2000)\nplt.xlim(xmin=0, \nxmax=200)\nplt.xlabel(\"Duration\")\nplt.ylabel (\"Calorie_Burnage\")\nplt.show()"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "d0ffc17d-1936-4db1-9ec9-a1d07ad59576",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "013e4d0f-f49e-4386-aa2b-7496356fedf0",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "c60109f3-2f2a-4f74-8ade-b7a4c89b1de6",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Squared?",
      "options": [
        "close to the linear regression function line",
        "always between 0 to 1 (0% to 100%)",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Squared is 'always between 0 to 1 (0% to 100%)'."
    },
    {
      "question": "What is Squared value means that many data points?",
      "options": [
        "None of the above.",
        "None of the above.",
        "close to the linear regression function line",
        "always between 0 to 1 (0% to 100%)"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Squared value means that many data points is 'close to the linear regression function line'."
    }
  ],
  "summary": "This tutorial covers Data Science- Regression Table: R-Squared concepts and techniques. You'll learn how to use Data Science- Regression Table: R-Squared effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Data Science- Regression Table: R-Squared and how to apply it in your projects."
}