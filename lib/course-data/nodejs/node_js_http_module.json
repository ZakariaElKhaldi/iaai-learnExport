{
  "title": "Node.js HTTP Module",
  "url": "https://www.w3schools.com/nodejs/nodejs_http.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Node.js HTTP Module",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Built-in HTTP Module",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Node.js has a built-in module called HTTP, which allows Node.js to transfer data over the Hyper Text Transfer Protocol (HTTP).",
      "html": "<p>Node.js has a built-in module called HTTP, which allows Node.js to transfer \ndata over the Hyper Text Transfer Protocol (HTTP).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To include the HTTP module, use the require() method:",
      "html": "<p>To include the HTTP module, use the\n<code>require()</code> method:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  var http = require('http'); ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "'http'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "var http = require('http');",
      "syntax_highlighting": [
        {
          "text": "\n var http = require('http'); ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "'http'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> http = require(<span class=\"jsstringcolor\" style=\"color:green\">'http'</span>); </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  var http = require('http'); ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "'http'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Node.js as a Web Server",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The HTTP module can create an HTTP server that listens to server ports and gives a response back to the client.",
      "html": "<p>The HTTP module can create an HTTP server that listens to \nserver ports and gives a response back to \nthe client.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Use the createServer() method to create an HTTP server:",
      "html": "<p>Use the <code>createServer()</code> method to create an \nHTTP server:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  var http = require('http');//create a server object:http.createServer(function \n  (req, res) {\u00a0 res.write('Hello World!'); //write a response to the \n  client\u00a0 res.end(); //end the response}).listen(8080); //the \n  server object listens on port 8080 ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "'http'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "//create a server object:",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "createServer",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "write",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "'Hello World!'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "//write a response to the \n  client",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "end",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "//end the response",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "listen",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "8080",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "//the \n  server object listens on port 8080 ",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "var http = require('http');//create a server object:http.createServer(function\n(req, res) {\u00a0 res.write('Hello World!'); //write a response to the\nclient\u00a0 res.end(); //end the response}).listen(8080); //the\nserver object listens on port 8080",
      "syntax_highlighting": [
        {
          "text": "\n var http = require('http');//create a server object:http.createServer(function \n  (req, res) {\u00a0 res.write('Hello World!'); //write a response to the \n  client\u00a0 res.end(); //end the response}).listen(8080); //the \n  server object listens on port 8080 ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "'http'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "//create a server object:",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "createServer",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "write",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "'Hello World!'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "//write a response to the \n  client",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "end",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "//end the response",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "listen",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "8080",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "//the \n  server object listens on port 8080 ",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> http = require(<span class=\"jsstringcolor\" style=\"color:green\">'http'</span>);<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">//create a server object:<br/></span>http.<span class=\"jspropertycolor\" style=\"color:black\">createServer</span>(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  (req, res) {<br/>\u00a0 res.<span class=\"jspropertycolor\" style=\"color:black\">write</span>(<span class=\"jsstringcolor\" style=\"color:green\">'Hello World!'</span>); <span class=\"commentcolor\" style=\"color:slategray\">//write a response to the \n  client<br/></span>\u00a0 res.<span class=\"jspropertycolor\" style=\"color:black\">end</span>(); <span class=\"commentcolor\" style=\"color:slategray\">//end the response<br/></span>}).<span class=\"jspropertycolor\" style=\"color:black\">listen</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">8080</span>); <span class=\"commentcolor\" style=\"color:slategray\">//the \n  server object listens on port 8080 </span></span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  var http = require('http');//create a server object:http.createServer(function \n  (req, res) {\u00a0 res.write('Hello World!'); //write a response to the \n  client\u00a0 res.end(); //end the response}).listen(8080); //the \n  server object listens on port 8080 ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "'http'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "//create a server object:",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "createServer",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "write",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "'Hello World!'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "//write a response to the \n  client",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "end",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "//end the response",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "listen",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "8080",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "//the \n  server object listens on port 8080 ",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The function passed into the http.createServer() method, will be executed when someone tries to access the computer on port 8080.",
      "html": "<p>The function passed into the <code>http.createServer()</code> \nmethod, will be executed when someone tries to access the \ncomputer on port 8080.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Save the code above in a file called \"demo_http.js\", and initiate the file:",
      "html": "<p>Save the code above in a file called \"demo_http.js\", and initiate \nthe file:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate",
          "w3-black"
        ],
        "isNotranslate": true
      },
      "code": "C:\\Users\\>node demo_http.js",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;node demo_http.js\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "http://localhost:8080",
          "href": "http://localhost:8080",
          "title": ""
        }
      ],
      "text": "If you have followed the same steps on your computer, you will see the same result as the example: http://localhost:8080",
      "html": "<p>If you have followed the same steps on your computer, you will see the same result as the example: <a href=\"http://localhost:8080\" target=\"_blank\">http://localhost:8080</a></p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Add an HTTP Header",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the response from the HTTP server is supposed to be displayed as HTML, you should include an HTTP header with the correct content type:",
      "html": "<p>If the response from the HTTP server is supposed to be displayed as HTML, you \nshould include an HTTP header with the correct content type:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  var http = require('http');http.createServer(function \n  (req, res) {\u00a0 res.writeHead(200, \n  {'Content-Type': 'text/html'});\u00a0 res.write('Hello \n  World!');\u00a0 res.end();}).listen(8080); ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "'http'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "createServer",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "writeHead",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "200",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "'Content-Type'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "'text/html'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "write",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "'Hello \n  World!'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "end",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "listen",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "8080",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "var http = require('http');http.createServer(function\n(req, res) {\u00a0 res.writeHead(200,\n{'Content-Type': 'text/html'});\u00a0 res.write('Hello\nWorld!');\u00a0 res.end();}).listen(8080);",
      "syntax_highlighting": [
        {
          "text": "\n var http = require('http');http.createServer(function \n  (req, res) {\u00a0 res.writeHead(200, \n  {'Content-Type': 'text/html'});\u00a0 res.write('Hello \n  World!');\u00a0 res.end();}).listen(8080); ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "'http'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "createServer",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "writeHead",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "200",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "'Content-Type'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "'text/html'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "write",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "'Hello \n  World!'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "end",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "listen",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "8080",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> http = require(<span class=\"jsstringcolor\" style=\"color:green\">'http'</span>);<br/>http.<span class=\"jspropertycolor\" style=\"color:black\">createServer</span>(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  (req, res) {<br/><strong>\u00a0 res.<span class=\"jspropertycolor\" style=\"color:black\">writeHead</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">200</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  {<span class=\"jsstringcolor\" style=\"color:green\">'Content-Type'</span>: <span class=\"jsstringcolor\" style=\"color:green\">'text/html'</span>});<br/></strong>\u00a0 res.<span class=\"jspropertycolor\" style=\"color:black\">write</span>(<span class=\"jsstringcolor\" style=\"color:green\">'Hello \n  World!'</span>);<br/>\u00a0 res.<span class=\"jspropertycolor\" style=\"color:black\">end</span>();<br/>}).<span class=\"jspropertycolor\" style=\"color:black\">listen</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">8080</span>); </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  var http = require('http');http.createServer(function \n  (req, res) {\u00a0 res.writeHead(200, \n  {'Content-Type': 'text/html'});\u00a0 res.write('Hello \n  World!');\u00a0 res.end();}).listen(8080); ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "'http'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "createServer",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "writeHead",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "200",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "'Content-Type'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "'text/html'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "write",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "'Hello \n  World!'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "end",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "listen",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "8080",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The first argument of the res.writeHead() method is the status code, 200 means that all is OK, the second argument is an object containing the response headers.",
      "html": "<p>The first argument of the <code>res.writeHead()</code> method is the status code, 200 means \nthat \nall is OK, the second argument is an object containing the response headers.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Read the Query String",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The function passed into the http.createServer() has a req argument that represents the request from the client, as an object (http.IncomingMessage object).",
      "html": "<p>The function passed into the <code>http.createServer()</code> \nhas a <code>req</code> argument that represents the request from the \nclient, as an object (http.IncomingMessage object).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This object has a property called \"url\" which holds the part of the url that comes after the domain name:",
      "html": "<p>This object has a property called \"url\" which holds the \npart of the url that comes after the domain name:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  var http = require('http');http.createServer(function \n  (req, res) {\u00a0\u00a0res.writeHead(200, {'Content-Type': 'text/html'});\n  \u00a0 res.write(req.url);\u00a0 \n  res.end();}).listen(8080); ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "'http'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "createServer",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "writeHead",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "200",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "'Content-Type'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "'text/html'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "write",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "url",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "end",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "listen",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "8080",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "var http = require('http');http.createServer(function\n(req, res) {\u00a0\u00a0res.writeHead(200, {'Content-Type': 'text/html'});\nres.write(req.url);\nres.end();}).listen(8080);",
      "syntax_highlighting": [
        {
          "text": "\n var http = require('http');http.createServer(function \n  (req, res) {\u00a0\u00a0res.writeHead(200, {'Content-Type': 'text/html'});\n  \u00a0 res.write(req.url);\u00a0 \n  res.end();}).listen(8080); ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "'http'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "createServer",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "writeHead",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "200",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "'Content-Type'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "'text/html'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "write",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "url",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "end",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "listen",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "8080",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> http = require(<span class=\"jsstringcolor\" style=\"color:green\">'http'</span>);<br/>http.<span class=\"jspropertycolor\" style=\"color:black\">createServer</span>(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  (<strong>req</strong>, res) {<br/>\u00a0\u00a0res.<span class=\"jspropertycolor\" style=\"color:black\">writeHead</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">200</span>, {<span class=\"jsstringcolor\" style=\"color:green\">'Content-Type'</span>: <span class=\"jsstringcolor\" style=\"color:green\">'text/html'</span>});<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0 res.<span class=\"jspropertycolor\" style=\"color:black\">write</span>(<strong>req.<span class=\"jspropertycolor\" style=\"color:black\">url</span></strong>);<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  res.<span class=\"jspropertycolor\" style=\"color:black\">end</span>();<br/>}).<span class=\"jspropertycolor\" style=\"color:black\">listen</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">8080</span>); </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  var http = require('http');http.createServer(function \n  (req, res) {\u00a0\u00a0res.writeHead(200, {'Content-Type': 'text/html'});\n  \u00a0 res.write(req.url);\u00a0 \n  res.end();}).listen(8080); ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "'http'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "createServer",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "writeHead",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "200",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "'Content-Type'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "'text/html'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "write",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "url",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "end",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "listen",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "8080",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Save the code above in a file called \"demo_http_url.js\" and initiate the file:",
      "html": "<p>Save the code above in a file called \"demo_http_url.js\" and \ninitiate the file:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate",
          "w3-black"
        ],
        "isNotranslate": true
      },
      "code": "C:\\Users\\>node demo_http_url.js",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;node demo_http_url.js\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you have followed the same steps on your computer, you should see two different results when opening these two addresses:",
      "html": "<p>If you have followed the same steps on your computer, you should see two \ndifferent results when opening these two addresses:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "http://localhost:8080/summer",
          "href": "http://localhost:8080/summer",
          "title": ""
        }
      ],
      "text": "http://localhost:8080/summer",
      "html": "<p><a href=\"http://localhost:8080/summer\" target=\"_blank\">http://localhost:8080/summer</a></p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "/summer",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n/summer</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "http://localhost:8080/winter",
          "href": "http://localhost:8080/winter",
          "title": ""
        }
      ],
      "text": "http://localhost:8080/winter",
      "html": "<p><a href=\"http://localhost:8080/winter\" target=\"_blank\">http://localhost:8080/winter</a></p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "/winter",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n/winter</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Split the Query String",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "There are built-in modules to easily split the query string into readable parts, such as the URL module.",
      "html": "<p>There are built-in modules to easily split the query string into readable \nparts, such as the URL module.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n    var http = require('http');var url = require('url');\n    \n    http.createServer(function (req, res) {\u00a0 res.writeHead(200, \n    {'Content-Type': 'text/html'});\u00a0 var q = url.parse(req.url, \n    true).query;\u00a0 var txt = q.year + \" \" + \n    q.month;\u00a0 res.end(txt);\n    }).listen(8080);\n   ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "'http'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "'url'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "createServer",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "writeHead",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "200",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "'Content-Type'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "'text/html'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "parse",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "url",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "true",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "query",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "year",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\" \"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "month",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "end",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "listen",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "8080",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "var http = require('http');var url = require('url');\n\nhttp.createServer(function (req, res) {\u00a0 res.writeHead(200,\n{'Content-Type': 'text/html'});\u00a0 var q = url.parse(req.url,\ntrue).query;\u00a0 var txt = q.year + \" \" +\nq.month;\u00a0 res.end(txt);\n}).listen(8080);",
      "syntax_highlighting": [
        {
          "text": "\n var http = require('http');var url = require('url');\n \n    http.createServer(function (req, res) {\u00a0 res.writeHead(200, \n    {'Content-Type': 'text/html'});\u00a0 var q = url.parse(req.url, \n true).query;\u00a0 var txt = q.year + \" \" + \n q.month;\u00a0 res.end(txt);\n    }).listen(8080);\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "'http'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "'url'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "createServer",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "writeHead",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "200",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "'Content-Type'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "'text/html'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "parse",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "url",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "true",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "query",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "year",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\" \"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "month",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "end",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "listen",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "8080",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> http = require(<span class=\"jsstringcolor\" style=\"color:green\">'http'</span>);<br/><strong><span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> url = require(<span class=\"jsstringcolor\" style=\"color:green\">'url'</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </strong><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>    http.<span class=\"jspropertycolor\" style=\"color:black\">createServer</span>(<span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> (req, res) {<br/>\u00a0 res.<span class=\"jspropertycolor\" style=\"color:black\">writeHead</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">200</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>    {<span class=\"jsstringcolor\" style=\"color:green\">'Content-Type'</span>: <span class=\"jsstringcolor\" style=\"color:green\">'text/html'</span>});<br/><strong>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> q = url.<span class=\"jspropertycolor\" style=\"color:black\">parse</span>(req.<span class=\"jspropertycolor\" style=\"color:black\">url</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">true</span>).<span class=\"jspropertycolor\" style=\"color:black\">query</span>;<br/></strong>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> txt = <strong>q.<span class=\"jspropertycolor\" style=\"color:black\">year</span></strong> + <span class=\"jsstringcolor\" style=\"color:green\">\" \"</span> + <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <strong>q.<span class=\"jspropertycolor\" style=\"color:black\">month</span></strong>;<br/>\u00a0 res.<span class=\"jspropertycolor\" style=\"color:black\">end</span>(txt);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>    }).<span class=\"jspropertycolor\" style=\"color:black\">listen</span>(<span class=\"jsnumbercolor\" style=\"color:#905\">8080</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n    var http = require('http');var url = require('url');\n    \n    http.createServer(function (req, res) {\u00a0 res.writeHead(200, \n    {'Content-Type': 'text/html'});\u00a0 var q = url.parse(req.url, \n    true).query;\u00a0 var txt = q.year + \" \" + \n    q.month;\u00a0 res.end(txt);\n    }).listen(8080);\n   ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "'http'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "'url'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "createServer",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "writeHead",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "200",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "'Content-Type'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "'text/html'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "parse",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "url",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "true",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "query",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "year",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\" \"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "month",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "end",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "listen",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "8080",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Save the code above in a file called \"demo_querystring.js\" and initiate the file:",
      "html": "<p>Save the code above in a file called \"demo_querystring.js\" and \ninitiate the file:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate",
          "w3-black"
        ],
        "isNotranslate": true
      },
      "code": "C:\\Users\\>node demo_querystring.js",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;node demo_querystring.js\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The address:",
      "html": "<p>The address:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "http://localhost:8080/?year=2017&month=July",
          "href": "http://localhost:8080/?year=2017&month=July",
          "title": ""
        }
      ],
      "text": "http://localhost:8080/?year=2017&month=July",
      "html": "<p>\n<a href=\"http://localhost:8080/?year=2017&amp;month=July\" target=\"_blank\">http://localhost:8080/?year=2017&amp;month=July</a>\n</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "2017 July",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n2017 July</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Node.js URL \nModule",
          "href": "https://www.w3schools.com/nodejs_url.asp",
          "title": ""
        }
      ],
      "text": "Read more about the URL module in the Node.js URL Module chapter.",
      "html": "<p>Read more about the URL module in the <a href=\"nodejs_url.asp\">Node.js URL \nModule</a> chapter.</p>"
    }
  ]
}