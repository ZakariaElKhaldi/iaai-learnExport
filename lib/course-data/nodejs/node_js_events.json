{
  "title": "Node.js Events",
  "url": "https://www.w3schools.com/nodejs/nodejs_events.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Node.js Events",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Node.js is perfect for event-driven applications.",
      "html": "<p class=\"intro\">Node.js is perfect for event-driven applications.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Events in Node.js",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Every action on a computer is an event. Like when a connection is made or a file is opened.",
      "html": "<p>Every action on a computer is an event. Like when a connection is made or a \nfile is opened.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Objects in Node.js can fire events, like the readStream object fires events when opening and closing a file:",
      "html": "<p>Objects in Node.js can fire events, like the readStream object fires \nevents when opening and closing a file:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  var fs = require('fs');var rs = fs.createReadStream('./demofile.txt');\n  rs.on('open', function () {\u00a0 console.log('The file is open');\n  }); ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "'fs'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "createReadStream",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "'./demofile.txt'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "on",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "'open'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "log",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "'The file is open'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "var fs = require('fs');var rs = fs.createReadStream('./demofile.txt');\nrs.on('open', function () {\u00a0 console.log('The file is open');\n});",
      "syntax_highlighting": [
        {
          "text": "\n var fs = require('fs');var rs = fs.createReadStream('./demofile.txt');\n  rs.on('open', function () {\u00a0 console.log('The file is open');\n  }); ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "'fs'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "createReadStream",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "'./demofile.txt'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "on",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "'open'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "log",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "'The file is open'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> fs = require(<span class=\"jsstringcolor\" style=\"color:green\">'fs'</span>);<br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> rs = fs.<span class=\"jspropertycolor\" style=\"color:black\">createReadStream</span>(<span class=\"jsstringcolor\" style=\"color:green\">'./demofile.txt'</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  rs.<span class=\"jspropertycolor\" style=\"color:black\">on</span>(<span class=\"jsstringcolor\" style=\"color:green\">'open'</span>, <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> () {<br/>\u00a0 console.<span class=\"jspropertycolor\" style=\"color:black\">log</span>(<span class=\"jsstringcolor\" style=\"color:green\">'The file is open'</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  }); </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  var fs = require('fs');var rs = fs.createReadStream('./demofile.txt');\n  rs.on('open', function () {\u00a0 console.log('The file is open');\n  }); ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "'fs'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "createReadStream",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "'./demofile.txt'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "on",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "'open'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "log",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "'The file is open'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Events Module",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Node.js has a built-in module, called \"Events\", where you can create-, fire-, and listen for- your own events.",
      "html": "<p>Node.js has a \nbuilt-in module, called \"Events\", where you can create-, fire-, and listen for- your own \nevents.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To include the built-in Events module use the require() method. In addition, all event properties and methods are an instance of an EventEmitter object. To be able to access these properties and methods, create an EventEmitter object:",
      "html": "<p>To include the built-in Events module use the <code>require()</code> \nmethod. In addition, all event properties and methods are an instance of an \nEventEmitter object. To be able to access these properties and methods, create \nan EventEmitter object:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  var events = require('events');var eventEmitter = new events.EventEmitter(); ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "'events'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "EventEmitter",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "var events = require('events');var eventEmitter = new events.EventEmitter();",
      "syntax_highlighting": [
        {
          "text": "\n var events = require('events');var eventEmitter = new events.EventEmitter(); ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "'events'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "EventEmitter",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> events = require(<span class=\"jsstringcolor\" style=\"color:green\">'events'</span>);<br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> eventEmitter = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> events.<span class=\"jspropertycolor\" style=\"color:black\">EventEmitter</span>(); </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  var events = require('events');var eventEmitter = new events.EventEmitter(); ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "'events'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "EventEmitter",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The EventEmitter Object",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can assign event handlers to your own events with the EventEmitter object.",
      "html": "<p>You can assign event handlers to your own events with the EventEmitter \nobject.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the example below we have created a function that will be executed when a \"scream\" event is fired.",
      "html": "<p>In the example below we have created a function that will be \nexecuted when a \"scream\" event is fired.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To fire an event, use the emit() method.",
      "html": "<p>To fire an event, use the <code>emit()</code> method.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  var events = require('events');var eventEmitter = new events.EventEmitter();\n  //Create an event handler:var myEventHandler = function () {\u00a0 \n  console.log('I hear a scream!');}//Assign the event handler to an \n  event:eventEmitter.on('scream', myEventHandler);//Fire the \n  'scream' event:eventEmitter.emit('scream'); ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "'events'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "new",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "EventEmitter",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "//Create an event handler:",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "log",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "'I hear a scream!'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "//Assign the event handler to an \n  event:",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "on",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "'scream'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "//Fire the \n  'scream' event:",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "emit",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "'scream'",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "var events = require('events');var eventEmitter = new events.EventEmitter();\n//Create an event handler:var myEventHandler = function () {\nconsole.log('I hear a scream!');}//Assign the event handler to an\nevent:eventEmitter.on('scream', myEventHandler);//Fire the\n'scream' event:eventEmitter.emit('scream');",
      "syntax_highlighting": [
        {
          "text": "\n var events = require('events');var eventEmitter = new events.EventEmitter();\n //Create an event handler:var myEventHandler = function () {\u00a0 \n  console.log('I hear a scream!');}//Assign the event handler to an \n  event:eventEmitter.on('scream', myEventHandler);//Fire the \n  'scream' event:eventEmitter.emit('scream'); ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "'events'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "new",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "EventEmitter",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "//Create an event handler:",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "log",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "'I hear a scream!'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "//Assign the event handler to an \n  event:",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "on",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "'scream'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "//Fire the \n  'scream' event:",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "emit",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "'scream'",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> events = require(<span class=\"jsstringcolor\" style=\"color:green\">'events'</span>);<br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> eventEmitter = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">new</span> events.<span class=\"jspropertycolor\" style=\"color:black\">EventEmitter</span>();<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <br/><span class=\"commentcolor\" style=\"color:slategray\">//Create an event handler:<br/></span><span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> myEventHandler = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> () {<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  console.<span class=\"jspropertycolor\" style=\"color:black\">log</span>(<span class=\"jsstringcolor\" style=\"color:green\">'I hear a scream!'</span>);<br/>}<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">//Assign the event handler to an \n  event:<br/></span>eventEmitter.<span class=\"jspropertycolor\" style=\"color:black\">on</span>(<span class=\"jsstringcolor\" style=\"color:green\">'scream'</span>, myEventHandler);<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">//Fire the \n  'scream' event:<br/></span>eventEmitter.<span class=\"jspropertycolor\" style=\"color:black\">emit</span>(<span class=\"jsstringcolor\" style=\"color:green\">'scream'</span>);<br/> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  var events = require('events');var eventEmitter = new events.EventEmitter();\n  //Create an event handler:var myEventHandler = function () {\u00a0 \n  console.log('I hear a scream!');}//Assign the event handler to an \n  event:eventEmitter.on('scream', myEventHandler);//Fire the \n  'scream' event:eventEmitter.emit('scream'); ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "'events'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "new",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "EventEmitter",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "//Create an event handler:",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "log",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "'I hear a scream!'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "//Assign the event handler to an \n  event:",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "on",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "'scream'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "//Fire the \n  'scream' event:",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "emit",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "'scream'",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    }
  ]
}