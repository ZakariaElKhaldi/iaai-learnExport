{
  "id": "b926c4d9-f7bc-45c1-b914-1ae24f5ce381",
  "title": "Node.jsGet Started",
  "slug": "nodejsget-started",
  "metadata": {
    "description": "Learn about Node.jsGet Started with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "node",
      "computer",
      "myfirst",
      "command",
      "file",
      "line",
      "interface",
      "hello",
      "world",
      "http"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnNode.js",
    "subcategory": "Node.js Get Started"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Node.js\nGet Started",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Download Node.js\nThe official Node.js website has installation instructions for Node.js:\nhttps://nodejs.org\nGetting Started\nOnce you have downloaded and installed Node.js on your computer, let's try to \ndisplay \"Hello World\" in a web browser.\nCreate a Node.js file named \"myfirst.js\", and add the following \ncode:\nmyfirst.js\nvar http = require('http');\nhttp.createServer(function (req, res) {\nres.writeHead(200, {'Content-Type': 'text/html'});\nres.end('Hello World!');\n}).listen(8080);\nSave the file on your computer: C:\\Users\\\nYour Name\n\\myfirst.js\nThe code \ntells the computer to write \"Hello World!\" if anyone (e.g. a web browser) tries \nto access your computer on port 8080.\nFor now, you do not have to \nunderstand the code. It will be explained later.\nCommand Line Interface\nNode.js files must be initiated in the \"Command Line Interface\" program \nof your computer.\nHow to open the command line interface on your computer depends on the operating system. For Windows users, press the start button and look for \n\"Command \nPrompt\", or simply write \"cmd\" in the search field.\nNavigate to the folder that contains the file \"myfirst.js\", the \ncommand line interface \nwindow should look something like this:\nC:\\Users\\\nYour Name\n>_\nInitiate the Node.js File\nThe file you have just created must be initiated by Node.js before any action \ncan take place.\nStart your command line interface, write\nnode myfirst.js\nand hit enter:\nInitiate \"myfirst.js\":\nC:\\Users\\\nYour Name\n>node myfirst.js\nNow, your computer works as a server!\nIf anyone tries to access your computer on port 8080, they will get a \"Hello \nWorld!\" message in return!\nStart your internet browser, and type in the address:\nhttp://localhost:8080\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "var http = require('http');\nhttp.createServer(function (req, res) {\nres.writeHead(200, {'Content-Type': 'text/html'});\nres.end('Hello World!');\n}).listen(8080);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "C:\\Users\\\nYour Name\n>_",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "C:\\Users\\\nYour Name\n>node myfirst.js",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "var http = require('http');\nhttp.createServer(function (req, res) {\nres.writeHead(200, {'Content-Type': 'text/html'});\nres.end('Hello World!');\n# TODO: Complete this line",
      "solution": "var http = require('http');\nhttp.createServer(function (req, res) {\nres.writeHead(200, {'Content-Type': 'text/html'});\nres.end('Hello World!');\n}).listen(8080);"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "C:\\Users\\\nYour Name\n# TODO: Complete this line",
      "solution": "C:\\Users\\\nYour Name\n>_"
    }
  ],
  "related_topics": [
    {
      "id": "ed8e3a37-c91d-424f-8eb6-bb9ae0aa9d0b",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "838da687-77bf-4018-aa0d-865025eeb436",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "0e9e4e4d-e1f6-425c-8476-81aa228bbcf8",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers Node.jsGet Started concepts and techniques. You'll learn how to use Node.jsGet Started effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Node.jsGet Started and how to apply it in your projects."
}