{
  "id": "b721956c-91b0-4c96-a82f-c6a479e6dea2",
  "title": "Node.jsNPM",
  "slug": "nodejsnpm",
  "metadata": {
    "description": "Learn about Node.jsNPM with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "package",
      "upper",
      "case",
      "node",
      "download",
      "http",
      "packages",
      "installed",
      "computer",
      "install"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnNode.js",
    "subcategory": "Node.js NPM"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Node.js\nNPM",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "What is NPM?\nNPM is a package manager for Node.js packages, or modules if you like.\nwww.npmjs.com\nhosts thousands of \nfree packages to download and use.\nThe NPM program is installed on your computer when you install Node.js\nNPM is already ready to run on your computer!\nWhat is a Package?\nA package in Node.js contains all the files you need for a module.\nModules are JavaScript libraries you can include in your project.\nDownload a Package\nDownloading a package is very easy.\nOpen the command line interface and tell NPM to download the package you want.\nI want to download a package called \"upper-case\":\nDownload \"upper-case\":\nC:\\Users\\\nYour Name\n>npm install upper-case\nNow you have downloaded and installed your first package!\nNPM creates a folder named \"node_modules\", where the package will be placed. \nAll packages you install in the future will be \nplaced in this folder.\nMy project now has a folder structure like this:\nC:\\Users\\\nMy Name\n\\node_modules\\upper-case\nUsing a Package\nOnce the package is installed, it is ready to use.\nInclude the \"upper-case\" package the same way you include any other \nmodule:\nvar uc = require('upper-case');\nCreate a Node.js file that will convert the output \"Hello World!\" into upper-case letters:\nExample\nvar http = require('http');\nvar uc = require('upper-case');\nhttp.createServer(function \n  (req, res) {\nres.writeHead(200, {'Content-Type': 'text/html'});\nres.write(\nuc.upperCase(\"Hello \n  World!\")\n);\nres.end();\n}).listen(8080);\nRun example \u00bb\nSave the code above in a file called \"demo_uppercase.js\", and initiate the file:\nInitiate demo_uppercase:\nC:\\Users\\\nYour Name\n>node demo_uppercase.js\nIf you have followed the same steps on your computer, you will see the same result as the example:\nhttp://localhost:8080\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "C:\\Users\\\nYour Name\n>npm install upper-case",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "var uc = require('upper-case');",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "var http = require('http');\nvar uc = require('upper-case');\nhttp.createServer(function \n  (req, res) {\nres.writeHead(200, {'Content-Type': 'text/html'});\nres.write(\nuc.upperCase(\"Hello \n  World!\")\n);\nres.end();\n}).listen(8080);",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "C:\\Users\\\nYour Name\n>node demo_uppercase.js",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "C:\\Users\\\nYour Name\n# TODO: Complete this line",
      "solution": "C:\\Users\\\nYour Name\n>npm install upper-case"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "var uc = require('upper-case');"
    }
  ],
  "related_topics": [
    {
      "id": "9971600d-34c2-4730-bc09-0ad00fb41e48",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "c43d3145-2c08-4dc1-9b96-a80885ec373a",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "d044f5a5-c13f-453a-a36d-4c1a889d12e0",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is js\nNPM\n\nWhat?",
      "options": [
        "NPM",
        "None of the above.",
        "a package manager for Node",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of js\nNPM\n\nWhat is 'NPM'."
    },
    {
      "question": "What is NPM?",
      "options": [
        "None of the above.",
        "a package manager for Node",
        "NPM",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of NPM is 'a package manager for Node'."
    }
  ],
  "summary": "This tutorial covers Node.jsNPM concepts and techniques. You'll learn how to use Node.jsNPM effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Node.jsNPM and how to apply it in your projects."
}