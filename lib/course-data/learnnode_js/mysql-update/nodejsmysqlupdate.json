{
  "id": "40673471-2d62-4ae1-8fcb-cbc01b836599",
  "title": "Node.jsMySQLUpdate",
  "slug": "nodejsmysqlupdate",
  "metadata": {
    "description": "Learn about Node.jsMySQLUpdate with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "result",
      "update",
      "mysql",
      "example",
      "updated",
      "object",
      "table",
      "records",
      "address",
      "query"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnNode.js",
    "subcategory": "MySQL Update"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Node.js\nMySQL\nUpdate",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Update Table\nYou can update existing records in a table by using \nthe \"UPDATE\" statement:\nExample\nOverwrite the address column from \"Valley 345\" to \"Canyon 123\":\nvar mysql = require('mysql');\nvar con = mysql.createConnection({\nhost: \"localhost\",\nuser: \"yourusername\",\npassword: \"yourpassword\",\ndatabase: \"mydb\"\n});\ncon.connect(function(err) {\nif (err) throw err;\nvar sql = \"UPDATE customers SET address = 'Canyon 123' WHERE address = \n  'Valley 345'\";\ncon.query(\nsql,\nfunction (err, result) {\nif (err) throw err;\nconsole.log(result.affectedRows + \" \n  record(s) updated\");\n});\n});\nRun example \u00bb\nNotice the WHERE clause in the UPDATE syntax:\nThe WHERE clause \nspecifies which record or records that should be updated. If you omit the WHERE \nclause, all records will be updated!\nSave the code above in a file called \"demo_db_update.js\" and run the file:\nRun \"demo_db_update.js\"\nC:\\Users\\\nYour Name\n>node demo_db_update.js\nWhich will give you this result:\n1 record(s) updated\nThe Result Object\nWhen executing a query, a result object is returned.\nThe result object contains information about how the query  \naffected the table.\nThe result object returned from the example above looks like this:\n{\nfieldCount: 0,\naffectedRows: 1,\ninsertId: 0,\nserverStatus: 34,\nwarningCount: 0,\nmessage: '(Rows \n  matched: 1 Changed: 1 Warnings: 0',\nprotocol41: true,\nchangedRows: 1\n}\nThe values of the properties can be displayed like this:\nExample\nReturn the  number of affected rows:\nconsole.log(result.affectedRows)\nWhich will produce this result:\n1\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "var mysql = require('mysql');\nvar con = mysql.createConnection({\nhost: \"localhost\",\nuser: \"yourusername\",\npassword: \"yourpassword\",\ndatabase: \"mydb\"\n});\ncon.connect(function(err) {\nif (err) throw err;\nvar sql = \"UPDATE customers SET address = 'Canyon 123' WHERE address = \n  'Valley 345'\";\ncon.query(\nsql,\nfunction (err, result) {\nif (err) throw err;\nconsole.log(result.affectedRows + \" \n  record(s) updated\");\n});\n});",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "C:\\Users\\\nYour Name\n>node demo_db_update.js",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "1 record(s) updated",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "{\nfieldCount: 0,\naffectedRows: 1,\ninsertId: 0,\nserverStatus: 34,\nwarningCount: 0,\nmessage: '(Rows \n  matched: 1 Changed: 1 Warnings: 0',\nprotocol41: true,\nchangedRows: 1\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "console.log(result.affectedRows)",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "1",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "var mysql = require('mysql');\nvar con = mysql.createConnection({\nhost: \"localhost\",\nuser: \"yourusername\",\npassword: \"yourpassword\",\ndatabase: \"mydb\"\n});\ncon.connect(function(err) {\nif (err) throw err;\nvar sql = \"UPDATE customers SET address = 'Canyon 123' WHERE address = \n  'Valley 345'\";\ncon.query(\nsql,\nfunction (err, result) {\nif (err) throw err;\nconsole.log(result.affectedRows + \" \n  record(s) updated\");\n});\n# TODO: Complete this line",
      "solution": "var mysql = require('mysql');\nvar con = mysql.createConnection({\nhost: \"localhost\",\nuser: \"yourusername\",\npassword: \"yourpassword\",\ndatabase: \"mydb\"\n});\ncon.connect(function(err) {\nif (err) throw err;\nvar sql = \"UPDATE customers SET address = 'Canyon 123' WHERE address = \n  'Valley 345'\";\ncon.query(\nsql,\nfunction (err, result) {\nif (err) throw err;\nconsole.log(result.affectedRows + \" \n  record(s) updated\");\n});\n});"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "C:\\Users\\\n# TODO: Complete this line\n>node demo_db_update.js",
      "solution": "C:\\Users\\\nYour Name\n>node demo_db_update.js"
    }
  ],
  "related_topics": [
    {
      "id": "421cd3cf-b11a-419b-bc88-007cbcde7a23",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "30310cae-37f2-4853-b315-f55c2755e327",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "e83d2475-7780-4471-9fe2-ec55d768fbe8",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is a result object?",
      "options": [
        "returned",
        "None of the above.",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of a result object is 'returned'."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers Node.jsMySQLUpdate concepts and techniques. You'll learn how to use Node.jsMySQLUpdate effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Node.jsMySQLUpdate and how to apply it in your projects."
}