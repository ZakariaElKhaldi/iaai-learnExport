{
  "id": "a7de3ee4-99e5-4312-a33f-42639233d6e2",
  "title": "Node.jsRaspberry Pi - GPIO Introduction",
  "slug": "nodejsraspberry-pi-gpio-introduction",
  "metadata": {
    "description": "Learn about Node.jsRaspberry Pi - GPIO Introduction with clear explanations and practical examples.",
    "keywords": [
      "gpio",
      "raspberry",
      "points",
      "pins",
      "connected",
      "rows",
      "breadboard",
      "power",
      "ground",
      "connect"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnNode.js",
    "subcategory": "RasPi GPIO Introduction"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Node",
      "content": ".js\nRaspberry Pi - GPIO Introduction\n\nWhat is GPIO?\nGPIO stands for General Purpose Input Output.\nThe Raspberry Pi has two rows of GPIO pins, which are connections between the \nRaspberry Pi, and the real world.\nOutput pins are like switches that the Raspberry Pi can turn on or off (like \nturning on/off a LED light). But it can also send a signal to another device.\nInput pins are like switches that you can turn on or off from the outside \nworld (like a on/off light switch). But it can also be a data from a sensor, or \na signal from another device.\nThat means that you can interact with the real world, and control devices and \nelectronics using the Raspberry PI and its GPIO pins!\nTaking a Closer Look at the GPIO Pins\nThis is an illustration of the Raspberry Pi 3.\nThe GPIO pins are the small \nred squares in two rows on the right side of the Raspberry Pi, on the actual Raspberry Pi they are small metal pins.\nThe Raspberry Pi 3 has 26 GPIO pins, the rest of the pins are power, ground \nor \"other\".\nThe pin placements correspond with the table below.\nRaspberry Pi B+, 2, 3 & Zero\n3V3\n1\n2\n5V\nGPIO 2\n3\n4\n5V\nGPIO 3\n5\n6\nGND\nGPIO 4\n7\n8\nGPIO 14\nGND\n9\n10\nGPIO 15\nGPIO 17\n11\n12\nGPIO 18\nGPIO 27\n13\n14\nGND\nGPIO 22\n15\n16\nGPIO 23\n3V3\n17\n18\nGPIO 24\nGPIO 10\n19\n20\nGND\nGPIO 9\n21\n22\nGPIO 25\nGPIO 11\n23\n24\nGPIO 8\nGND\n25\n26\nGPIO 7\nDNC\n27\n28\nDNC\nGPIO 5\n29\n30\nGND\nGPIO 6\n31\n32\nGPIO 12\nGPIO 13\n33\n34\nGND\nGPIO 19\n35\n36\nGPIO 16\nGPIO 26\n37\n38\nGPIO 20\nGND\n39\n40\nGPIO 21\nLegend\nPhysical Pin Number\nPower +\nGround\nUART\nI2C\nSPI\nGPIO\nDo Not Connect\nTaking a Closer Look at the Breadboard\nA breadboard is used for prototyping electronics, it allows you to create \ncircuits without soldering. It is basically a plastic board, with a grid of \ntie-points (holes). Inside the board there are metal strips connecting the \ndifferent tie-points in specific ways.\nIn the illustration below we have highlighted some of the sections with different colors. This is to show you how the grid is connected.\nThe different sections of the breadboard:\nOn the left, and right, side there are 2 columns of tie-points. All the \n    tie points in each of these columns are connected.",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "The Power Bus",
      "content": "- The columns highlighted with red. There are usually used \n    to connect power to the Breadboard. Since the entire column is connected, \n    you can connect power to any of the tie-points in the column.",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "The Ground Bus",
      "content": "- The columns highlighted with blue. There are usually \n    used to connect Ground to the Breadboard. Since the entire column is \n    connected, you can connect ground to any of the tie-points in the column.\nRows of connected Tie-Points\n- The rows highlighted with green. The \n    tie-points of each of these rows are connected, but not the entire row! The \n    left side tie-points are connected (A-B-C-D-E), and the right side \n    tie-points are connected (F-G-H-I-J).\nIn the center of the Breadboard there is a Trench, this separates the \n    left and right rows. The width of the trench is designed so that many \n    Integrated Circuits fit across it.\nInstall the onoff Module\nTo interface with the GPIO on the Raspberry Pi using Node.js, we will use a \nModule called \"onoff\".\nInstall the onoff module using npm:\npi@w3demopi:~ $ npm install onoff\nNow onoff should be installed and we can interact with the GPIO of the Raspberry Pi.\n\n\u2605\n+1",
      "order": 3,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Implement a Function",
      "description": "Create a function that demonstrates the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Write your javascript function here\n",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "d4becd1b-69ac-4739-91b6-7ed1c6d3292d",
      "title": "Javascript Functions and Methods",
      "relationship": "next_topic"
    },
    {
      "id": "47c338f4-6986-4e46-ba7a-4e9f86285ea4",
      "title": "Javascript Data Structures",
      "relationship": "suggested_next"
    }
  ],
  "quiz": [
    {
      "question": "What is GPIO Introduction\n\nWhat?",
      "options": [
        "None of the above.",
        "connections between the \nRaspberry Pi",
        "None of the above.",
        "GPIO"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of GPIO Introduction\n\nWhat is 'GPIO'."
    },
    {
      "question": "What is which?",
      "options": [
        "connections between the \nRaspberry Pi",
        "None of the above.",
        "GPIO",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of which is 'connections between the \nRaspberry Pi'."
    }
  ],
  "summary": "This tutorial covers Node.jsRaspberry Pi - GPIO Introduction concepts and techniques. You'll learn how to use Node.jsRaspberry Pi - GPIO Introduction effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Node.jsRaspberry Pi - GPIO Introduction and how to apply it in your projects."
}