{
  "id": "7b60f36b-f2df-450b-b02d-10db736df6af",
  "title": "MySQLAliases",
  "slug": "mysqlaliases",
  "metadata": {
    "description": "Learn about MySQLAliases with clear explanations and practical examples.",
    "keywords": [
      "sql",
      "aliases",
      "customers",
      "customername",
      "customerid",
      "column",
      "alias",
      "orders",
      "table",
      "select",
      "example"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Sql Basics"
    ],
    "estimated_time": 5,
    "category": "LearnMySQL",
    "subcategory": "MySQL Aliases"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "MySQL\nAliases",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "MySQL Aliases\nAliases are used to give a table, or a column in a table, a temporary name.\nAliases are often used to make column names more readable.\nAn alias only exists for the duration of that query.\nAn alias is created with the\nAS\nkeyword.\nAlias Column Syntax\nSELECT\ncolumn_name\nAS\nalias_name\nFROM\ntable_name;\nAlias Table Syntax\nSELECT\ncolumn_name(s)\nFROM\ntable_name\nAS\nalias_name;\nDemo Database\nIn this tutorial we will use the well-known Northwind sample database.\nBelow is a selection from the \"Customers\" table:\nCustomerID\nCustomerName\nContactName\nAddress\nCity\nPostalCode\nCountry\n2\nAna Trujillo Emparedados y helados\nAna Trujillo\nAvda. de la Constituci\u00f3n 2222\nM\u00e9xico D.F.\n05021\nMexico\n3\nAntonio Moreno Taquer\u00eda\nAntonio Moreno\nMataderos 2312\nM\u00e9xico D.F.\n05023\nMexico\n4\nAround the Horn\nThomas Hardy\n120 Hanover Sq.\nLondon\nWA1 1DP\nUK\nAnd a selection from the \"Orders\" table:\nOrderID\nCustomerID\nEmployeeID\nOrderDate\nShipperID\n10354\n58\n8\n1996-11-14\n3\n10355\n4\n6\n1996-11-15\n1\n10356\n86\n6\n1996-11-18\n2\nAlias for Columns Examples\nThe following SQL statement creates two aliases, one for the CustomerID \ncolumn and one for the CustomerName column:\nExample\nSELECT CustomerID AS ID, CustomerName AS Customer\nFROM Customers;\n\nThe following SQL statement creates two aliases, one for the CustomerName \ncolumn and one for the ContactName column.\nNote:\nSingle or double quotation marks \nare required if the alias name contains spaces:\nExample\nSELECT CustomerName AS Customer, ContactName AS \"Contact Person\"\nFROM Customers;\n\nThe following SQL statement creates an alias named \"Address\" that combine four columns (Address, PostalCode, \nCity and Country):\nExample\nSELECT CustomerName, CONCAT_WS(', ', Address, PostalCode, City, Country) \n  AS Address\nFROM Customers;\n\nAlias for Tables Example\nThe following SQL statement selects all the orders from the customer with \nCustomerID=4 (Around the Horn). We use the \"Customers\" and \"Orders\" tables, and \ngive them the table aliases of \"c\" and \"o\" respectively (Here we use \naliases to make the SQL shorter):\nExample\nSELECT o.OrderID, o.OrderDate, c.CustomerName\nFROM Customers AS c, Orders AS o\nWHERE c.CustomerName='Around the Horn' AND c.CustomerID=o.CustomerID;\n\nThe following SQL statement is the same as above, but without aliases:\nExample\nSELECT Orders.OrderID, Orders.OrderDate, Customers.CustomerName\nFROM Customers, Orders\nWHERE Customers.CustomerName='Around the Horn' AND Customers.CustomerID=Orders.CustomerID;\n\nAliases can be useful when:\nThere are more than one table involved in a query\nFunctions are used in the query\nColumn names are big or not very readable\nTwo or more columns are combined together\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "SELECT\ncolumn_name\nAS\nalias_name\nFROM\ntable_name;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "SELECT\ncolumn_name(s)\nFROM\ntable_name\nAS\nalias_name;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "SELECT CustomerID AS ID, CustomerName AS Customer\nFROM Customers;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "SELECT CustomerName AS Customer, ContactName AS \"Contact Person\"\nFROM Customers;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "SELECT CustomerName, CONCAT_WS(', ', Address, PostalCode, City, Country) \n  AS Address\nFROM Customers;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "SELECT o.OrderID, o.OrderDate, c.CustomerName\nFROM Customers AS c, Orders AS o\nWHERE c.CustomerName='Around the Horn' AND c.CustomerID=o.CustomerID;",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "SELECT Orders.OrderID, Orders.OrderDate, Customers.CustomerName\nFROM Customers, Orders\nWHERE Customers.CustomerName='Around the Horn' AND Customers.CustomerID=Orders.CustomerID;",
      "language": "sql",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "SELECT\n# TODO: Complete this line\nAS\nalias_name\nFROM\ntable_name;",
      "solution": "SELECT\ncolumn_name\nAS\nalias_name\nFROM\ntable_name;"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "SELECT\ncolumn_name(s)\nFROM\ntable_name\n# TODO: Complete this line\nalias_name;",
      "solution": "SELECT\ncolumn_name(s)\nFROM\ntable_name\nAS\nalias_name;"
    }
  ],
  "related_topics": [
    {
      "id": "decf2612-d931-4e0f-84ac-3fbb064d8e10",
      "title": "Sql Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "f757dc2a-3ddb-47f8-9df2-03db88bd35e3",
      "title": "Sql Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "20fd60a9-765d-4888-8c88-5d1b96cf2294",
      "title": "Sql Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is MySQL\nAliases\n\nMySQL Aliases\nAliases?",
      "options": [
        "often used to make column names more readable",
        "None of the above.",
        "used to give a table",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of MySQL\nAliases\n\nMySQL Aliases\nAliases is 'used to give a table'."
    },
    {
      "question": "What is Aliases?",
      "options": [
        "None of the above.",
        "used to give a table",
        "often used to make column names more readable",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Aliases is 'often used to make column names more readable'."
    }
  ],
  "summary": "This tutorial covers MySQLAliases concepts and techniques. You'll learn how to use MySQLAliases effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of MySQLAliases and how to apply it in your projects."
}