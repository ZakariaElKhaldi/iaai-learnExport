{
  "id": "1b6695af-bff5-4c5d-a07c-a7a3c25f7b8d",
  "title": "MySQLPRIMARY KEYConstraint",
  "slug": "mysqlprimary-keyconstraint",
  "metadata": {
    "description": "Learn about MySQLPRIMARY KEYConstraint with clear explanations and practical examples.",
    "keywords": [
      "c",
      "primary",
      "table",
      "constraint",
      "null",
      "persons",
      "following",
      "lastname",
      "alter",
      "columns",
      "create"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnMySQL",
    "subcategory": "MySQL Primary Key"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "MySQL\nPRIMARY KEY\nConstraint",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "MySQL PRIMARY KEY Constraint\nThe\nPRIMARY KEY\nconstraint uniquely identifies each record in a table.\nPrimary keys must contain UNIQUE values, and cannot contain NULL values.\nA table can have only ONE primary key; and in the table, this primary key can \nconsist of single or multiple columns (fields).\nPRIMARY KEY on CREATE TABLE\nThe following SQL creates a\nPRIMARY KEY\non the \"ID\" column when the \"Persons\" table is created:\nCREATE TABLE Persons\n(\nID int NOT NULL,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\nAge int,\nPRIMARY KEY (ID)\n);\nTo allow naming of a\nPRIMARY KEY\nconstraint, and for defining a\nPRIMARY KEY\nconstraint on multiple columns, use the following SQL syntax:\nCREATE TABLE Persons\n(\nID int NOT NULL,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\nAge int,\nCONSTRAINT PK_Person PRIMARY KEY (ID,LastName)\n);\nNote:\nIn the example above there is only ONE\nPRIMARY KEY\n(PK_Person). \nHowever, the VALUE of the primary key is made up of TWO COLUMNS (ID + LastName).\nPRIMARY KEY on ALTER TABLE\nTo create a\nPRIMARY KEY\nconstraint on the \"ID\" column when the table is already created, use the following SQL:\nALTER TABLE Persons\nADD PRIMARY KEY (ID);\nTo allow naming of a\nPRIMARY KEY\nconstraint, and for defining a\nPRIMARY KEY\nconstraint on multiple columns, use the following SQL syntax:\nALTER TABLE Persons\nADD CONSTRAINT PK_Person PRIMARY KEY (ID,LastName);\nNote:\nIf you use\nALTER TABLE\nto add a primary key, the primary key column(s) must\nhave been declared to not contain NULL values (when the table was first created).\nDROP a PRIMARY KEY Constraint\nTo drop a\nPRIMARY KEY\nconstraint, use the following SQL:\nALTER TABLE Persons\nDROP PRIMARY KEY;\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "CREATE TABLE Persons\n(\nID int NOT NULL,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\nAge int,\nPRIMARY KEY (ID)\n);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "CREATE TABLE Persons\n(\nID int NOT NULL,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\nAge int,\nCONSTRAINT PK_Person PRIMARY KEY (ID,LastName)\n);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "ALTER TABLE Persons\nADD PRIMARY KEY (ID);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "ALTER TABLE Persons\nADD CONSTRAINT PK_Person PRIMARY KEY (ID,LastName);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "ALTER TABLE Persons\nDROP PRIMARY KEY;",
      "language": "sql",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "CREATE TABLE Persons\n(\nID int NOT NULL,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\n# TODO: Complete this line\nPRIMARY KEY (ID)\n);",
      "solution": "CREATE TABLE Persons\n(\nID int NOT NULL,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\nAge int,\nPRIMARY KEY (ID)\n);"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "CREATE TABLE Persons\n(\nID int NOT NULL,\n# TODO: Complete this line\nFirstName varchar(255),\nAge int,\nCONSTRAINT PK_Person PRIMARY KEY (ID,LastName)\n);",
      "solution": "CREATE TABLE Persons\n(\nID int NOT NULL,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\nAge int,\nCONSTRAINT PK_Person PRIMARY KEY (ID,LastName)\n);"
    }
  ],
  "related_topics": [
    {
      "id": "41d64c6a-3289-4d6c-b57b-ae35325c9c0f",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "a2461c4a-e940-41b9-ad14-001abf40332f",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "904ab9bb-6e73-43aa-addd-8e6f4c90d9ce",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is table?",
      "options": [
        "None of the above.",
        "created:\nCREATE TABLE Persons\n(\nID int NOT NULL",
        "None of the above.",
        "made up of TWO COLUMNS (ID + LastName)"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of table is 'created:\nCREATE TABLE Persons\n(\nID int NOT NULL'."
    },
    {
      "question": "What is the VALUE of the primary key?",
      "options": [
        "made up of TWO COLUMNS (ID + LastName)",
        "None of the above.",
        "created:\nCREATE TABLE Persons\n(\nID int NOT NULL",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of the VALUE of the primary key is 'made up of TWO COLUMNS (ID + LastName)'."
    }
  ],
  "summary": "This tutorial covers MySQLPRIMARY KEYConstraint concepts and techniques. You'll learn how to use MySQLPRIMARY KEYConstraint effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of MySQLPRIMARY KEYConstraint and how to apply it in your projects."
}