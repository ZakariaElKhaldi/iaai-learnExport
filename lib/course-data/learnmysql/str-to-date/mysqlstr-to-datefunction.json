{
  "id": "994d4396-06d5-48fa-ad95-b0b7c4a5787f",
  "title": "MySQLSTR_TO_DATE()Function",
  "slug": "mysqlstr-to-datefunction",
  "metadata": {
    "description": "Learn about MySQLSTR_TO_DATE()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "week",
      "format",
      "string",
      "month",
      "numeric",
      "hour",
      "date",
      "name",
      "value",
      "first"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnMySQL",
    "subcategory": "STR_TO_DATE"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "MySQL\nSTR_TO_DATE()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nReturn a date based on a string and a format:\nSELECT \n  STR_TO_DATE(\"August 10 2017\", \"%M %d %Y\");\n\nDefinition and Usage\nThe STR_TO_DATE() function returns a date based on a string and a format.\nSyntax\nSTR_TO_DATE(\nstring\n,\nformat\n)\nParameter Values\nParameter\nDescription\nstring\nRequired. The string to be formatted to a date\nformat\nRequired. The format to use. Can be one or a \n    combination of the following \n    values:\nFormat\nDescription\n%a\nAbbreviated weekday name (Sun to Sat)\n%b\nAbbreviated month name (Jan to Dec)\n%c\nNumeric month name (0 to 12)\n%D\nDay of the month as a numeric value, followed by suffix (1st, 2nd, 3rd, \n    ...)\n%d\nDay of the month as a numeric value (01 to 31)\n%e\nDay of the month as a numeric value (0 to 31)\n%f\nMicroseconds (000000 to 999999)\n%H\nHour (00 to 23)\n%h\nHour (00 to 12)\n%I\nHour (00 to 12)\n%i\nMinutes (00 to 59)\n%j\nDay of the year (001 to 366)\n%k\nHour (0 to 23)\n%l\nHour (1 to 12)\n%M\nMonth name in full (January to December)\n%m\nMonth name as a numeric value (01 to 12)\n%p\nAM or PM\n%r\nTime in 12 hour AM or PM format (hh:mm:ss AM/PM)\n%S\nSeconds (00 to 59)\n%s\nSeconds (00 to 59)\n%T\nTime in 24 hour format (hh:mm:ss)\n%U\nWeek where Sunday is the first day of the week (00 to 53)\n%u\nWeek where Monday is the first day of the week (00 to 53)\n%V\nWeek where Sunday is the first day of the week (01 to 53). Used with %X\n%v\nWeek where Monday is the first day of the week (01 to 53). Used with %X\n%W\nWeekday name in full (Sunday to Saturday)\n%w\nDay of the week where Sunday=0 and Saturday=6\n%X\nYear for the week where Sunday is the first day of the week. Used with \n    %V\n%x\nYear for the week where Monday is the first day of the week. Used with \n    %V\n%Y\nYear as a numeric, 4-digit value\n%y\nYear as a numeric, 2-digit value\nTechnical Details\nWorks in:\nFrom MySQL 4.0\nMore Examples\nExample\nReturn a date based on a string and a format:\nSELECT STR_TO_DATE(\"August,5,2017\", \"%M %e %Y\");\n\nExample\nReturn a date based on a string and a format:\nSELECT STR_TO_DATE(\"Monday, August 14, 2017\", \"%W %M %e %Y\");\n\nExample\nReturn a date based on a string and a format:\nSELECT STR_TO_DATE(\"2017,8,14 10,40,10\", \"%Y,%m,%d %h,%i,%s\");\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "SELECT \n  STR_TO_DATE(\"August 10 2017\", \"%M %d %Y\");",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "SELECT STR_TO_DATE(\"August,5,2017\", \"%M %e %Y\");",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "SELECT STR_TO_DATE(\"Monday, August 14, 2017\", \"%W %M %e %Y\");",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "SELECT STR_TO_DATE(\"2017,8,14 10,40,10\", \"%Y,%m,%d %h,%i,%s\");",
      "language": "sql",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your sql code here",
      "solution": "SELECT \n  STR_TO_DATE(\"August 10 2017\", \"%M %d %Y\");"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your sql code here",
      "solution": "SELECT STR_TO_DATE(\"August,5,2017\", \"%M %e %Y\");"
    }
  ],
  "related_topics": [
    {
      "id": "b19ea5de-6d2a-4e27-b8be-8cc7bb612f01",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "d649d8de-ab63-4823-9bb5-e84128236578",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "5403f52a-38eb-47a8-96a6-9a842645bf30",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is U\nWeek where Sunday?",
      "options": [
        "None of the above.",
        "None of the above.",
        "the first day of the week (01 to 53)",
        "the first day of the week (00 to 53)\n%u\nWeek where Monday is the first day of the week (00 to 53)\n%V\nWeek where Sunday is the first day of the week (01 to 53)"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of U\nWeek where Sunday is 'the first day of the week (00 to 53)\n%u\nWeek where Monday is the first day of the week (00 to 53)\n%V\nWeek where Sunday is the first day of the week (01 to 53)'."
    },
    {
      "question": "What is v\nWeek where Monday?",
      "options": [
        "None of the above.",
        "the first day of the week (00 to 53)\n%u\nWeek where Monday is the first day of the week (00 to 53)\n%V\nWeek where Sunday is the first day of the week (01 to 53)",
        "the first day of the week (01 to 53)",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of v\nWeek where Monday is 'the first day of the week (01 to 53)'."
    }
  ],
  "summary": "This tutorial covers MySQLSTR_TO_DATE()Function concepts and techniques. You'll learn how to use MySQLSTR_TO_DATE()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of MySQLSTR_TO_DATE()Function and how to apply it in your projects."
}