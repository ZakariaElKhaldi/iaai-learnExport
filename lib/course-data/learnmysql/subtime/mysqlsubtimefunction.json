{
  "id": "e41ae04f-6f4b-43ce-8e42-e74955989fe1",
  "title": "MySQLSUBTIME()Function",
  "slug": "mysqlsubtimefunction",
  "metadata": {
    "description": "Learn about MySQLSUBTIME()Function with clear explanations and practical examples.",
    "keywords": [
      "c",
      "subtime",
      "datetime",
      "time",
      "example",
      "subtract",
      "return",
      "select",
      "seconds",
      "minutes",
      "mysql"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnMySQL",
    "subcategory": "SUBTIME"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "MySQL\nSUBTIME()\nFunction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nSubtract 5.000001 seconds and return the datetime:\nSELECT SUBTIME(\"2017-06-15 10:24:21.000004\", \"5.000001\");\n\nDefinition and Usage\nThe SUBTIME() function subtracts time from a time/datetime expression and then returns the \nnew time/datetime.\nSyntax\nSUBTIME(\ndatetime\n,\ntime_interval\n)\nParameter Values\nParameter\nDescription\ndatetime\nRequired. The time or datetime to be modified\ntime_interval\nRequired. The time interval to subtract from\ndatetime\n. Both positive and negative values are allowed\nTechnical Details\nWorks in:\nFrom MySQL 4.0\nMore Examples\nExample\nSubtract 3 hours, 2 minutes, 5.000001 seconds and return the datetime:\nSELECT SUBTIME(\"2017-06-15 10:24:21.000004\", \"3:2:5.000001\");\n\nExample\nSubtract 5 seconds and return the time:\nSELECT SUBTIME(\"10:24:21\", \"5\");\n\nExample\nSubtract 3 minutes and return the time:\nSELECT SUBTIME(\"10:24:21\", \"300\");\n\nExample\nAdd 3 hours, 2 minutes, and 5 seconds, and return the time:\nSELECT SUBTIME(\"10:24:21\", \"-3:2:5\");\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "SELECT SUBTIME(\"2017-06-15 10:24:21.000004\", \"5.000001\");",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "SELECT SUBTIME(\"2017-06-15 10:24:21.000004\", \"3:2:5.000001\");",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "SELECT SUBTIME(\"10:24:21\", \"5\");",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "SELECT SUBTIME(\"10:24:21\", \"300\");",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "SELECT SUBTIME(\"10:24:21\", \"-3:2:5\");",
      "language": "sql",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your sql code here",
      "solution": "SELECT SUBTIME(\"2017-06-15 10:24:21.000004\", \"5.000001\");"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your sql code here",
      "solution": "SELECT SUBTIME(\"2017-06-15 10:24:21.000004\", \"3:2:5.000001\");"
    }
  ],
  "related_topics": [
    {
      "id": "f2cf6c3e-c313-489f-b3c6-534f960b81cc",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "1002894b-3e85-4ab1-8eed-4981978baa6c",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "3a7495c8-2411-49a8-b913-112918512375",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Both positive and negative values?",
      "options": [
        "None of the above.",
        "allowed\nTechnical Details\nWorks in:\nFrom MySQL 4",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Both positive and negative values is 'allowed\nTechnical Details\nWorks in:\nFrom MySQL 4'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers MySQLSUBTIME()Function concepts and techniques. You'll learn how to use MySQLSUBTIME()Function effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of MySQLSUBTIME()Function and how to apply it in your projects."
}