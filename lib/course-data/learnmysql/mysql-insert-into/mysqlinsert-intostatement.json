{
  "id": "7d826d9a-84fc-4563-916d-62f2051f955a",
  "title": "MySQLINSERT INTOStatement",
  "slug": "mysqlinsert-intostatement",
  "metadata": {
    "description": "Learn about MySQLINSERT INTOStatement with clear explanations and practical examples.",
    "keywords": [
      "sql",
      "insert",
      "table",
      "values",
      "statement",
      "customers",
      "customerid",
      "customername",
      "city",
      "country",
      "columns"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Sql Basics"
    ],
    "estimated_time": 5,
    "category": "LearnMySQL",
    "subcategory": "MySQL INSERT INTO"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "MySQL\nINSERT INTO\nStatement",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The MySQL INSERT INTO Statement\nThe\nINSERT INTO\nstatement is used to insert new records in a table.\nINSERT INTO Syntax\nIt is possible to write the\nINSERT INTO\nstatement in two ways:\n1. Specify both the column names and the values to be inserted:\nINSERT INTO\ntable_name\n(\ncolumn1\n,\ncolumn2\n,\ncolumn3\n, ...)\nVALUES (\nvalue1\n,\nvalue2\n,\nvalue3\n, ...);\n2. If you are adding values for all the columns of the table, you do not need to \nspecify the column names in the SQL query. However, make sure the order of the \nvalues is in the same order as the columns in the table. Here, the\nINSERT INTO\nsyntax \nwould be as follows:\nINSERT INTO\ntable_name\nVALUES (\nvalue1\n,\nvalue2\n,\nvalue3\n, ...);\nDemo Database\nBelow is a selection from the \"Customers\" table in the Northwind \nsample database:\nCustomerID\nCustomerName\nContactName\nAddress\nCity\nPostalCode\nCountry\n89\nWhite Clover Markets\nKarl Jablonski\n305 - 14th Ave. S. Suite 3B\nSeattle\n98128\nUSA\n90\nWilman Kala\nMatti Karttunen\nKeskuskatu 45\nHelsinki\n21240\nFinland\n91\nWolski\nZbyszek\nul. Filtrowa 68\nWalla\n01-012\nPoland\nINSERT INTO Example\nThe following SQL statement inserts a new record in the \"Customers\" table:\nExample\nINSERT INTO Customers (CustomerName, ContactName, Address, City, PostalCode, Country)\nVALUES ('Cardinal', 'Tom B. Erichsen', 'Skagen 21', 'Stavanger', '4006', 'Norway');\nThe selection from the \"Customers\" table will now look like this:\nCustomerID\nCustomerName\nContactName\nAddress\nCity\nPostalCode\nCountry\n89\nWhite Clover Markets\nKarl Jablonski\n305 - 14th Ave. S. Suite 3B\nSeattle\n98128\nUSA\n90\nWilman Kala\nMatti Karttunen\nKeskuskatu 45\nHelsinki\n21240\nFinland\n91\nWolski\nZbyszek\nul. Filtrowa 68\nWalla\n01-012\nPoland\n92\nCardinal\nTom B. Erichsen\nSkagen 21\nStavanger\n4006\nNorway\nDid you notice that we did not insert any number into the CustomerID \nfield?\nThe CustomerID column is \nan\nauto-increment\nfield and will be \ngenerated automatically when a new record is inserted into the table.\nInsert Data Only in Specified Columns\nIt is also possible to only insert data in specific columns.\nThe following SQL statement will insert a new record, but only insert data in the \"CustomerName\", \n\"City\", and \"Country\" columns (CustomerID will \nbe updated automatically):\nExample\nINSERT INTO Customers (CustomerName, City, Country)\nVALUES ('Cardinal', 'Stavanger', 'Norway');\nThe selection from the \"Customers\" table will now look like this:\nCustomerID\nCustomerName\nContactName\nAddress\nCity\nPostalCode\nCountry\n89\nWhite Clover Markets\nKarl Jablonski\n305 - 14th Ave. S. Suite 3B\nSeattle\n98128\nUSA\n90\nWilman Kala\nMatti Karttunen\nKeskuskatu 45\nHelsinki\n21240\nFinland\n91\nWolski\nZbyszek\nul. Filtrowa 68\nWalla\n01-012\nPoland\n92\nCardinal\nnull\nnull\nStavanger\nnull\nNorway\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "INSERT INTO\ntable_name\n(\ncolumn1\n,\ncolumn2\n,\ncolumn3\n, ...)\nVALUES (\nvalue1\n,\nvalue2\n,\nvalue3\n, ...);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "INSERT INTO\ntable_name\nVALUES (\nvalue1\n,\nvalue2\n,\nvalue3\n, ...);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "INSERT INTO Customers (CustomerName, ContactName, Address, City, PostalCode, Country)\nVALUES ('Cardinal', 'Tom B. Erichsen', 'Skagen 21', 'Stavanger', '4006', 'Norway');",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "INSERT INTO Customers (CustomerName, City, Country)\nVALUES ('Cardinal', 'Stavanger', 'Norway');",
      "language": "sql",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "INSERT INTO\n# TODO: Complete this line\n(\ncolumn1\n,\ncolumn2\n,\ncolumn3\n, ...)\nVALUES (\nvalue1\n,\nvalue2\n,\nvalue3\n, ...);",
      "solution": "INSERT INTO\ntable_name\n(\ncolumn1\n,\ncolumn2\n,\ncolumn3\n, ...)\nVALUES (\nvalue1\n,\nvalue2\n,\nvalue3\n, ...);"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "INSERT INTO\ntable_name\nVALUES (\nvalue1\n,\nvalue2\n,\n# TODO: Complete this line\n, ...);",
      "solution": "INSERT INTO\ntable_name\nVALUES (\nvalue1\n,\nvalue2\n,\nvalue3\n, ...);"
    }
  ],
  "related_topics": [
    {
      "id": "8de9c806-f31c-44ac-af53-a03dec757cb0",
      "title": "Sql Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "f11ffb36-155d-4286-9184-4cc2ce547ca3",
      "title": "Sql Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "a6576a56-9f02-427e-b5b6-416ee499b1a2",
      "title": "Sql Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is MySQL\nINSERT INTO\nStatement\n\nThe MySQL INSERT INTO Statement\nThe\nINSERT INTO\nstatement?",
      "options": [
        "possible to write the\nINSERT INTO\nstatement in two ways:\n1",
        "None of the above.",
        "used to insert new records in a table",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of MySQL\nINSERT INTO\nStatement\n\nThe MySQL INSERT INTO Statement\nThe\nINSERT INTO\nstatement is 'used to insert new records in a table'."
    },
    {
      "question": "What is INSERT INTO Syntax\nIt?",
      "options": [
        "None of the above.",
        "used to insert new records in a table",
        "possible to write the\nINSERT INTO\nstatement in two ways:\n1",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of INSERT INTO Syntax\nIt is 'possible to write the\nINSERT INTO\nstatement in two ways:\n1'."
    }
  ],
  "summary": "This tutorial covers MySQLINSERT INTOStatement concepts and techniques. You'll learn how to use MySQLINSERT INTOStatement effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of MySQLINSERT INTOStatement and how to apply it in your projects."
}