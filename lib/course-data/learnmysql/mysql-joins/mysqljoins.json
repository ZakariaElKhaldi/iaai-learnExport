{
  "id": "cc7e4c6e-667c-4cef-99e0-1a808dd78de0",
  "title": "MySQLJoins",
  "slug": "mysqljoins",
  "metadata": {
    "description": "Learn about MySQLJoins with clear explanations and practical examples.",
    "keywords": [
      "sql",
      "table",
      "join",
      "customerid",
      "records",
      "tables",
      "orders",
      "customers",
      "returns",
      "mysql",
      "column"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Sql Basics"
    ],
    "estimated_time": 5,
    "category": "LearnMySQL",
    "subcategory": "MySQL Joins"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "MySQL\nJoins",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "MySQL Joining Tables\nA\nJOIN\nclause is used to combine rows from two or more tables, based on \na related column between them.\nLet's look at a selection from the \"Orders\" table:\nOrderID\nCustomerID\nOrderDate\n10308\n2\n1996-09-18\n10309\n37\n1996-09-19\n10310\n77\n1996-09-20\nThen, look at a selection from the \"Customers\" table:\nCustomerID\nCustomerName\nContactName\nCountry\n1\nAlfreds Futterkiste\nMaria Anders\nGermany\n2\nAna Trujillo Emparedados y helados\nAna Trujillo\nMexico\n3\nAntonio Moreno Taquer\u00eda\nAntonio Moreno\nMexico\nNotice that the \"CustomerID\" column in the \"Orders\" table refers to the \n\"CustomerID\" in the \"Customers\" table. The relationship between the two tables above \nis the \"CustomerID\" column.\nThen, we can create the following SQL statement (that contains an\nINNER JOIN\n), \nthat selects records that have matching values in both tables:\nExample\nSELECT Orders.OrderID, Customers.CustomerName, Orders.OrderDate\nFROM Orders\nINNER JOIN Customers ON Orders.CustomerID=Customers.CustomerID;\n\nand it will produce something like this:\nOrderID\nCustomerName\nOrderDate\n10308\nAna Trujillo Emparedados y helados\n9/18/1996\n10365\nAntonio Moreno Taquer\u00eda\n11/27/1996\n10383\nAround the Horn\n12/16/1996\n10355\nAround the Horn\n11/15/1996\n10278\nBerglunds snabbk\u00f6p\n8/12/1996\nSupported Types of Joins in MySQL\nINNER JOIN\n: Returns records that have matching values in both tables\nLEFT JOIN\n: Returns all records from the left table, and the matched records from the right table\nRIGHT JOIN\n: Returns all records from the right table, and the matched records from the left table\nCROSS JOIN\n: Returns all records from both \n  tables\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "SELECT Orders.OrderID, Customers.CustomerName, Orders.OrderDate\nFROM Orders\nINNER JOIN Customers ON Orders.CustomerID=Customers.CustomerID;",
      "language": "sql",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "SELECT Orders.OrderID, Customers.CustomerName, Orders.OrderDate\nFROM Orders\n# TODO: Complete this line",
      "solution": "SELECT Orders.OrderID, Customers.CustomerName, Orders.OrderDate\nFROM Orders\nINNER JOIN Customers ON Orders.CustomerID=Customers.CustomerID;"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "7641ca8b-0c36-471b-8694-a43d5dec502d",
      "title": "Sql Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "610ad29e-fb85-4c47-b8bc-66ef7ef7f4ff",
      "title": "Sql Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "d4a8ebaa-4d89-4aad-b90b-8cbf5fdf88c9",
      "title": "Sql Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is MySQL\nJoins\n\nMySQL Joining Tables\nA\nJOIN\nclause?",
      "options": [
        "None of the above.",
        "the \"CustomerID\" column",
        "None of the above.",
        "used to combine rows from two or more tables"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of MySQL\nJoins\n\nMySQL Joining Tables\nA\nJOIN\nclause is 'used to combine rows from two or more tables'."
    },
    {
      "question": "What is The relationship between the two tables above?",
      "options": [
        "None of the above.",
        "used to combine rows from two or more tables",
        "the \"CustomerID\" column",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of The relationship between the two tables above is 'the \"CustomerID\" column'."
    }
  ],
  "summary": "This tutorial covers MySQLJoins concepts and techniques. You'll learn how to use MySQLJoins effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of MySQLJoins and how to apply it in your projects."
}