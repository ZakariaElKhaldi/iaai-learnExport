{
  "id": "252c8c71-5e18-41f0-8c9d-746a50cee9d8",
  "title": "MySQLFOREIGN KEYConstraint",
  "slug": "mysqlforeign-keyconstraint",
  "metadata": {
    "description": "Learn about MySQLFOREIGN KEYConstraint with clear explanations and practical examples.",
    "keywords": [
      "c",
      "table",
      "foreign",
      "personid",
      "constraint",
      "orders",
      "persons",
      "column",
      "following",
      "primary",
      "orderid"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnMySQL",
    "subcategory": "MySQL Foreign Key"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "MySQL\nFOREIGN KEY\nConstraint",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "MySQL FOREIGN KEY Constraint\nThe\nFOREIGN KEY\nconstraint is used to prevent actions that would destroy links between tables.\nA\nFOREIGN KEY\nis a field (or collection of fields) in one table, that refers to \nthe\nPRIMARY KEY\nin another table.\nThe table with the foreign key is called the child table, and the table \nwith the primary key is called the referenced or parent table.\nLook at the following two tables:\nPersons Table\nPersonID\nLastName\nFirstName\nAge\n1\nHansen\nOla\n30\n2\nSvendson\nTove\n23\n3\nPettersen\nKari\n20\nOrders Table\nOrderID\nOrderNumber\nPersonID\n1\n77895\n3\n2\n44678\n3\n3\n22456\n2\n4\n24562\n1\nNotice that the \"PersonID\" column in the \"Orders\" table points to the \"PersonID\" column in the \"Persons\" table.\nThe \"PersonID\" column in the \"Persons\" table is the\nPRIMARY KEY\nin the \"Persons\" table.\nThe \"PersonID\" column in the \"Orders\" table is a\nFOREIGN KEY\nin the \"Orders\" table.\nThe\nFOREIGN KEY\nconstraint prevents invalid data from being inserted into the foreign key column,\nbecause it has to be one of the values contained in the parent table.\nFOREIGN KEY on CREATE TABLE\nThe following SQL creates a\nFOREIGN KEY\non the \"PersonID\" column when the \"Orders\" table is created:\nCREATE TABLE Orders\n(\nOrderID int NOT NULL,\nOrderNumber int NOT NULL,\nPersonID int,\nPRIMARY KEY (OrderID),\nFOREIGN KEY (PersonID) REFERENCES Persons(PersonID)\n);\nTo allow naming of a\nFOREIGN KEY\nconstraint, and for defining a\nFOREIGN KEY\nconstraint on multiple columns, use the following SQL syntax:\nCREATE TABLE Orders\n(\nOrderID int NOT NULL,\nOrderNumber int NOT NULL,\nPersonID int,\nPRIMARY KEY (OrderID),\nCONSTRAINT FK_PersonOrder FOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID)\n);\nFOREIGN KEY on ALTER TABLE\nTo create a\nFOREIGN KEY\nconstraint on the \"PersonID\" column when the \"Orders\" table is already created, use the following SQL:\nALTER TABLE Orders\nADD FOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID);\nTo allow naming of a\nFOREIGN KEY\nconstraint, and for defining a\nFOREIGN KEY\nconstraint on multiple columns, use the following SQL syntax:\nALTER TABLE Orders\nADD CONSTRAINT FK_PersonOrder\nFOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID);\nDROP a FOREIGN KEY Constraint\nTo drop a\nFOREIGN KEY\nconstraint, use the following SQL:\nALTER TABLE Orders\nDROP FOREIGN KEY FK_PersonOrder;\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "CREATE TABLE Orders\n(\nOrderID int NOT NULL,\nOrderNumber int NOT NULL,\nPersonID int,\nPRIMARY KEY (OrderID),\nFOREIGN KEY (PersonID) REFERENCES Persons(PersonID)\n);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "CREATE TABLE Orders\n(\nOrderID int NOT NULL,\nOrderNumber int NOT NULL,\nPersonID int,\nPRIMARY KEY (OrderID),\nCONSTRAINT FK_PersonOrder FOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID)\n);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "ALTER TABLE Orders\nADD FOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "ALTER TABLE Orders\nADD CONSTRAINT FK_PersonOrder\nFOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID);",
      "language": "sql",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "ALTER TABLE Orders\nDROP FOREIGN KEY FK_PersonOrder;",
      "language": "sql",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "CREATE TABLE Orders\n(\nOrderID int NOT NULL,\nOrderNumber int NOT NULL,\nPersonID int,\nPRIMARY KEY (OrderID),\n# TODO: Complete this line\n);",
      "solution": "CREATE TABLE Orders\n(\nOrderID int NOT NULL,\nOrderNumber int NOT NULL,\nPersonID int,\nPRIMARY KEY (OrderID),\nFOREIGN KEY (PersonID) REFERENCES Persons(PersonID)\n);"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "CREATE TABLE Orders\n(\nOrderID int NOT NULL,\nOrderNumber int NOT NULL,\nPersonID int,\nPRIMARY KEY (OrderID),\nCONSTRAINT FK_PersonOrder FOREIGN KEY (PersonID)\n# TODO: Complete this line\n);",
      "solution": "CREATE TABLE Orders\n(\nOrderID int NOT NULL,\nOrderNumber int NOT NULL,\nPersonID int,\nPRIMARY KEY (OrderID),\nCONSTRAINT FK_PersonOrder FOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID)\n);"
    }
  ],
  "related_topics": [
    {
      "id": "b1eb6712-2239-4177-babf-d0ad71a89ac2",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "ef3a0563-8e52-43ec-8f39-a1f0977ca048",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "d9a9d41d-6caf-4571-84b0-ecaabc3dbd3d",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is MySQL\nFOREIGN KEY\nConstraint\n\nMySQL FOREIGN KEY Constraint\nThe\nFOREIGN KEY\nconstraint?",
      "options": [
        "a field (or collection of fields) in one table",
        "None of the above.",
        "None of the above.",
        "used to prevent actions that would destroy links between tables"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of MySQL\nFOREIGN KEY\nConstraint\n\nMySQL FOREIGN KEY Constraint\nThe\nFOREIGN KEY\nconstraint is 'used to prevent actions that would destroy links between tables'."
    },
    {
      "question": "What is A\nFOREIGN KEY?",
      "options": [
        "None of the above.",
        "None of the above.",
        "a field (or collection of fields) in one table",
        "used to prevent actions that would destroy links between tables"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of A\nFOREIGN KEY is 'a field (or collection of fields) in one table'."
    }
  ],
  "summary": "This tutorial covers MySQLFOREIGN KEYConstraint concepts and techniques. You'll learn how to use MySQLFOREIGN KEYConstraint effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of MySQLFOREIGN KEYConstraint and how to apply it in your projects."
}