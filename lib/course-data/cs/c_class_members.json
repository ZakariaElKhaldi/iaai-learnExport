{
  "title": "C# Class Members (Fields and Methods)",
  "url": "https://www.w3schools.com/cs/cs_class_members.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C# Class Members",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Class Members",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Fields and methods inside classes are often referred to as \"Class Members\":",
      "html": "<p>Fields and methods inside classes are often referred to as \"Class Members\":</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "// The class\n\n\nclass\n\nMyClass\n\n\n{\n\n\n// Class members\n\nstring color\n=\n\n\"red\"\n;\n\n// field\n\n\nint\nmaxSpeed\n=\n\n200\n;\n\n// field\n\n\npublic\n\nvoid\n\nfullThrottle\n(\n)\n\n// method\n\n\n{\n\n\nConsole\n.\nWriteLine\n(\n\"The car is going as fast as it can!\"\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token comment\">// The class</span>\n<span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">MyClass</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Class members</span>\n  string color <span class=\"token operator\">=</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// field</span>\n  <span class=\"token keyword keyword-int\">int</span> maxSpeed <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// field</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token function\">fullThrottle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// method</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Console<span class=\"token punctuation\">.</span>WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The car is going as fast as it can!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Fields",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the previous chapter, you learned that variables inside a class are called fields, and that you can access them by creating an object of the class, and by using the dot syntax ( . ).",
      "html": "<p>In the previous chapter, you learned that variables inside a class are called fields, \nand that you can access them by creating an object of the class, and by using the dot syntax (<code>.</code>).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The following example will create an object of the Car class, with the name myObj . Then we print the value of the fields color and maxSpeed :",
      "html": "<p>The following example will create an object of the <code>Car</code> class, with the \nname <code>myObj</code>. Then we print the value of the \nfields <code>color</code> \nand <code>maxSpeed</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_fields",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nCar\n\n\n{\n\n\nstring\ncolor\n=\n\n\"red\"\n;\n\n\nint\nmaxSpeed\n=\n\n200\n;\n\n\n\nstatic\n\nvoid\n\nMain\n(\nstring\n[\n]\nargs\n)\n\n\n{\n\n\nCar\n\nmyObj\n\n=\n\nnew\n\nCar\n(\n)\n;\n\nConsole\n.\nWriteLine\n(\nmyObj\n.\ncolor\n)\n;\n\nConsole\n.\nWriteLine\n(\nmyObj\n.\nmaxSpeed\n)\n;\n\n\n}\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" data-line=\"8,9,10\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Car</span> \n<span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span></span> color <span class=\"token operator\">=</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> maxSpeed <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-void\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Car</span> <strong>myObj</strong> <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token constructor-invocation class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>myObj<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>myObj<span class=\"token punctuation\">.</span>maxSpeed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"8\" data-start=\"8\" style=\"top: 154px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"9\" data-start=\"9\" style=\"top: 176px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"10\" data-start=\"10\" style=\"top: 198px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_fields",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also leave the fields blank, and modify them when creating the object:",
      "html": "<p>You can also leave the fields blank, and modify them when creating the object:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_fields2",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nCar\n\n\n{\n\n\nstring\ncolor\n;\n\n\nint\nmaxSpeed\n;\n\n\n\nstatic\n\nvoid\n\nMain\n(\nstring\n[\n]\nargs\n)\n\n\n{\n\n\nCar\n\nmyObj\n\n=\n\nnew\n\nCar\n(\n)\n;\n\nmyObj\n.\ncolor\n=\n\n\"red\"\n;\n\nmyObj\n.\nmaxSpeed\n=\n\n200\n;\n\nConsole\n.\nWriteLine\n(\nmyObj\n.\ncolor\n)\n;\n\nConsole\n.\nWriteLine\n(\nmyObj\n.\nmaxSpeed\n)\n;\n\n\n}\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" data-line=\"9,10\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Car</span> \n<span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span></span> color<span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> maxSpeed<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-void\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Car</span> <strong>myObj</strong> <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token constructor-invocation class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    myObj<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">;</span>\n    myObj<span class=\"token punctuation\">.</span>maxSpeed <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>myObj<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>myObj<span class=\"token punctuation\">.</span>maxSpeed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"9\" data-start=\"9\" style=\"top: 176px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"10\" data-start=\"10\" style=\"top: 198px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_fields2",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This is especially useful when creating multiple objects of one class:",
      "html": "<p>This is especially useful when creating multiple objects of one class:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_fields3",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nCar\n\n\n{\n\n\nstring\nmodel\n;\n\n\nstring\ncolor\n;\n\n\nint\nyear\n;\n\n\n\nstatic\n\nvoid\n\nMain\n(\nstring\n[\n]\nargs\n)\n\n\n{\n\n\nCar\nFord\n=\n\nnew\n\nCar\n(\n)\n;\n\nFord\n.\nmodel\n=\n\n\"Mustang\"\n;\n\nFord\n.\ncolor\n=\n\n\"red\"\n;\n\nFord\n.\nyear\n=\n\n1969\n;\n\n\n\nCar\nOpel\n=\n\nnew\n\nCar\n(\n)\n;\n\nOpel\n.\nmodel\n=\n\n\"Astra\"\n;\n\nOpel\n.\ncolor\n=\n\n\"white\"\n;\n\nOpel\n.\nyear\n=\n\n2005\n;\n\n\nConsole\n.\nWriteLine\n(\nFord\n.\nmodel\n)\n;\n\nConsole\n.\nWriteLine\n(\nOpel\n.\nmodel\n)\n;\n\n\n}\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" data-line=\"9,10,11,12,14,15,16,17\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Car</span> \n<span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span></span> model<span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span></span> color<span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> year<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-void\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Car</span> Ford <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token constructor-invocation class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Ford<span class=\"token punctuation\">.</span>model <span class=\"token operator\">=</span> <span class=\"token string\">\"Mustang\"</span><span class=\"token punctuation\">;</span>\n    Ford<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">;</span>\n    Ford<span class=\"token punctuation\">.</span>year <span class=\"token operator\">=</span> <span class=\"token number\">1969</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">Car</span> Opel <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token constructor-invocation class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Opel<span class=\"token punctuation\">.</span>model <span class=\"token operator\">=</span> <span class=\"token string\">\"Astra\"</span><span class=\"token punctuation\">;</span>\n    Opel<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"white\"</span><span class=\"token punctuation\">;</span>\n    Opel<span class=\"token punctuation\">.</span>year <span class=\"token operator\">=</span> <span class=\"token number\">2005</span><span class=\"token punctuation\">;</span>\n\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>Ford<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>Opel<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"9\" data-start=\"9\" style=\"top: 176px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"10\" data-start=\"10\" style=\"top: 198px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"11\" data-start=\"11\" style=\"top: 220px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"12\" data-start=\"12\" style=\"top: 242px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"14\" data-start=\"14\" style=\"top: 286px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"15\" data-start=\"15\" style=\"top: 308px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"16\" data-start=\"16\" style=\"top: 330px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"17\" data-start=\"17\" style=\"top: 352px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_fields3",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Object Methods",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "C# Methods",
          "href": "https://www.w3schools.com/cs_methods.php",
          "title": ""
        }
      ],
      "text": "You learned from the C# Methods chapter that methods are used to perform certain actions.",
      "html": "<p>You learned from the <a href=\"cs_methods.php\">C# Methods</a> chapter that methods are used to perform certain actions.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Methods normally belong to a class, and they define how an object of a class behaves.",
      "html": "<p>Methods normally belong to a class, and they define how an object of a class behaves.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Just like with fields, you can access methods with the dot syntax. However, note that the method must be public . And remember that we use the name of the method followed by two parentheses () and a semicolon ; to call (execute) the method:",
      "html": "<p>Just like with fields, you can access methods with the dot syntax. However, note that \nthe method must be <code>public</code>. And remember that we use the name of the method followed by two \nparentheses <code>()</code> and a semicolon <code>;</code> to call (execute) the method:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_class_methods",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nCar\n\n\n{\n\n\nstring\ncolor\n;\n\n// field\n\n\nint\nmaxSpeed\n;\n\n// field\n\n\npublic\n\nvoid\n\nfullThrottle\n(\n)\n\n// method\n\n\n{\n\nConsole\n.\nWriteLine\n(\n\"The car is going as fast as it can!\"\n)\n;\n\n\n}\n\n\n\nstatic\n\nvoid\n\nMain\n(\nstring\n[\n]\nargs\n)\n\n\n{\n\n\nCar\n\nmyObj\n\n=\n\nnew\n\nCar\n(\n)\n;\n\nmyObj\n.\nfullThrottle\n(\n)\n;\n\n// Call the method\n\n\n}\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" data-line=\"5,13\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Car</span> \n<span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span></span> color<span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// field</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> maxSpeed<span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// field</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-void\">void</span></span> <span class=\"token function\">fullThrottle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// method</span>\n  <span class=\"token punctuation\">{</span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The car is going as fast as it can!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-void\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Car</span> <strong>myObj</strong> <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token constructor-invocation class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    myObj<span class=\"token punctuation\">.</span><span class=\"token function\">fullThrottle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Call the method</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"5\" data-start=\"5\" style=\"top: 88px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"13\" data-start=\"13\" style=\"top: 264px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_class_methods",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "C# Methods Chapter",
          "href": "https://www.w3schools.com/cs_methods.php",
          "title": ""
        }
      ],
      "text": "Why did we declare the method as public , and not static , like in the examples from the C# Methods Chapter ?",
      "html": "<p>Why did we declare the method as <code>public</code>, and not <code>static</code>, like in the examples from the <a href=\"cs_methods.php\">C# Methods Chapter</a>?</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The reason is simple: a static method can be accessed without creating an object of the class, while public methods can only be accessed by objects.",
      "html": "<p>The reason is simple: a <code>static</code> method can be accessed without creating an object of the class, while <code>public</code> methods can only be accessed by objects.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Use Multiple Classes",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Remember from the last chapter, that we can use multiple classes for better organization (one for fields and methods, and another one for execution). This is recommended:",
      "html": "<p>Remember from the last chapter, that we can use multiple classes for better organization \n(one for fields and methods, and another one for execution). This is \nrecommended:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nCar\n\n\n{\n\n\npublic\n\nstring\nmodel\n;\n\n\npublic\n\nstring\ncolor\n;\n\n\npublic\n\nint\nyear\n;\n\n\npublic\n\nvoid\n\nfullThrottle\n(\n)\n\n\n{\n\nConsole\n.\nWriteLine\n(\n\"The car is going as fast as it can!\"\n)\n;\n\n\n}\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Car</span> \n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span></span> model<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span></span> color<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> year<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-void\">void</span></span> <span class=\"token function\">fullThrottle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The car is going as fast as it can!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs_multi.php?filename=demo_fields_classes&multi=demo_fields_classes_multi",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nProgram\n\n\n{\n\n\nstatic\n\nvoid\n\nMain\n(\nstring\n[\n]\nargs\n)\n\n\n{\n\n\nCar\nFord\n=\n\nnew\n\nCar\n(\n)\n;\n\nFord\n.\nmodel\n=\n\n\"Mustang\"\n;\n\nFord\n.\ncolor\n=\n\n\"red\"\n;\n\nFord\n.\nyear\n=\n\n1969\n;\n\n\n\nCar\nOpel\n=\n\nnew\n\nCar\n(\n)\n;\n\nOpel\n.\nmodel\n=\n\n\"Astra\"\n;\n\nOpel\n.\ncolor\n=\n\n\"white\"\n;\n\nOpel\n.\nyear\n=\n\n2005\n;\n\n\nConsole\n.\nWriteLine\n(\nFord\n.\nmodel\n)\n;\n\nConsole\n.\nWriteLine\n(\nOpel\n.\nmodel\n)\n;\n\n\n}\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Program</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-void\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Car</span> Ford <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token constructor-invocation class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Ford<span class=\"token punctuation\">.</span>model <span class=\"token operator\">=</span> <span class=\"token string\">\"Mustang\"</span><span class=\"token punctuation\">;</span>\n    Ford<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">;</span>\n    Ford<span class=\"token punctuation\">.</span>year <span class=\"token operator\">=</span> <span class=\"token number\">1969</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">Car</span> Opel <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token constructor-invocation class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Opel<span class=\"token punctuation\">.</span>model <span class=\"token operator\">=</span> <span class=\"token string\">\"Astra\"</span><span class=\"token punctuation\">;</span>\n    Opel<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"white\"</span><span class=\"token punctuation\">;</span>\n    Opel<span class=\"token punctuation\">.</span>year <span class=\"token operator\">=</span> <span class=\"token number\">2005</span><span class=\"token punctuation\">;</span>\n\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>Ford<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>Opel<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs_multi.php?filename=demo_fields_classes&multi=demo_fields_classes_multi",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The public keyword is called an access modifier , which specifies that the fields of Car are accessible for other classes as well, such as Program .",
      "html": "<p>The <code>public</code> keyword is called an <strong>access modifier</strong>, \nwhich specifies that the fields of <code>Car</code> are accessible for other classes as well, such as <code>\nProgram</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Access Modifiers",
          "href": "https://www.w3schools.com/cs_access_modifiers.php",
          "title": ""
        }
      ],
      "text": "You will learn more about Access Modifiers in a later chapter.",
      "html": "<p>You will learn more about <a href=\"cs_access_modifiers.php\">Access Modifiers</a> in a later chapter.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "constructors",
          "href": "https://www.w3schools.com/cs_constructors.php",
          "title": ""
        },
        {
          "text": "properties",
          "href": "https://www.w3schools.com/cs_properties.php",
          "title": ""
        }
      ],
      "text": "Tip: As you continue to read, you will also learn more about other class members, such as constructors and properties .",
      "html": "<p><strong>Tip:</strong> As you continue to read, you will also learn more about other class members, such as <a href=\"cs_constructors.php\">constructors</a> and <a href=\"cs_properties.php\">properties</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What are class members in C#?",
      "html": "<p>What are class members in C#?</p>"
    }
  ]
}