{
  "title": "C# Exceptions (Try..Catch)",
  "url": "https://www.w3schools.com/cs/cs_exceptions.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C# Exceptions - Try..Catch",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "C# Exceptions",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When executing C# code, different errors can occur: coding errors made by the programmer, errors due to wrong input, or other unforeseeable things.",
      "html": "<p>When executing C# code, different errors can occur: coding errors made by the programmer, errors due to wrong input, \nor other unforeseeable things.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When an error occurs, C# will normally stop and generate an error message. The technical term for this is: C# will throw an exception (throw an error).",
      "html": "<p>When an error occurs, C# will normally stop and generate an error message. The technical term for this is: C# will throw an <b>exception</b> (throw an error).</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "C# try and catch",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The try statement allows you to define a block of code to be tested for errors while it is being executed.",
      "html": "<p>The <code>try</code> statement allows you to define a block of code to be \ntested for errors while it is being executed.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The catch statement allows you to define a block of code to be executed, if an error occurs in the try block.",
      "html": "<p>The <code>catch</code> statement allows you to define a block of code to \nbe executed, if an error occurs in the try block.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The try and catch keywords come in pairs:",
      "html": "<p>The <code>try</code> and <code>catch</code> keywords \ncome in pairs:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "try\n\n\n{\n\n\n//\nBlock of code to try\n\n\n}\n\n\ncatch\n\n(\nException\ne\n)\n\n\n{\n\n\n//\nBlock of code to handle errors\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-try\">try</span> \n<span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//  </span><em><span class=\"token comment\">Block of code to try</span>\n</em><span class=\"token punctuation\">}</span>\n<span class=\"token keyword keyword-catch\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//  </span><em><span class=\"token comment\">Block of code to handle errors</span>\n</em><span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Consider the following example, where we create an array of three integers:",
      "html": "<p>Consider the following example, where we create an array of three integers:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "w3-border-red",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "int\n[\n]\nmyNumbers\n=\n\n{\n1\n,\n\n2\n,\n\n3\n}\n;\n\nConsole\n.\nWriteLine\n(\nmyNumbers\n[\n10\n]\n)\n;\n\n// error!",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white w3-border-red language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> myNumbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>myNumbers<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// error!</span></code></pre>",
      "code_classes": [
        "w3-white",
        "w3-border-red",
        "language-csharp"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "w3-border-red",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If an error occurs, we can use try...catch to catch the error and execute some code to handle it.",
      "html": "<p>If an error occurs, we can use <code>try...catch</code> \nto catch the error and execute some code to handle it.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the following example, we use the variable inside the catch block ( e ) together with the built-in Message property, which outputs a message that describes the exception:",
      "html": "<p>In the following example, we use the variable inside the catch block (<code>e</code>) together with the built-in <code>Message</code> property, which outputs a message that describes the exception:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_try_catch_message",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "try\n\n\n{\n\n\nint\n[\n]\nmyNumbers\n=\n\n{\n1\n,\n\n2\n,\n\n3\n}\n;\n\nConsole\n.\nWriteLine\n(\nmyNumbers\n[\n10\n]\n)\n;\n\n\n}\n\n\ncatch\n\n(\nException\ne\n)\n\n\n{\n\nConsole\n.\nWriteLine\n(\ne\n.\nMessage\n)\n;\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-try\">try</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> myNumbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>myNumbers<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword keyword-catch\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>Message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_try_catch_message",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also output your own error message:",
      "html": "<p>You can also output your own error message:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_try_catch",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "try\n\n\n{\n\n\nint\n[\n]\nmyNumbers\n=\n\n{\n1\n,\n\n2\n,\n\n3\n}\n;\n\nConsole\n.\nWriteLine\n(\nmyNumbers\n[\n10\n]\n)\n;\n\n\n}\n\n\ncatch\n\n(\nException\ne\n)\n\n\n{\n\nConsole\n.\nWriteLine\n(\n\"Something went wrong.\"\n)\n;\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-try\">try</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> myNumbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>myNumbers<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword keyword-catch\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Something went wrong.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_try_catch",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Finally",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The finally statement lets you execute code, after try...catch , regardless of the result:",
      "html": "<p>The <code>finally</code> statement lets you execute code, after <code>try...catch</code>, regardless of the result:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_try_catch_finally",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "try\n\n\n{\n\n\nint\n[\n]\nmyNumbers\n=\n\n{\n1\n,\n\n2\n,\n\n3\n}\n;\n\nConsole\n.\nWriteLine\n(\nmyNumbers\n[\n10\n]\n)\n;\n\n\n}\n\n\ncatch\n\n(\nException\ne\n)\n\n\n{\n\nConsole\n.\nWriteLine\n(\n\"Something went wrong.\"\n)\n;\n\n\n}\n\n\nfinally\n\n\n{\n\nConsole\n.\nWriteLine\n(\n\"The 'try catch' is finished.\"\n)\n;\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-try\">try</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> myNumbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>myNumbers<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword keyword-catch\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Something went wrong.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword keyword-finally\">finally</span>\n<span class=\"token punctuation\">{</span>\n  Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The 'try catch' is finished.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_try_catch_finally",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The throw keyword",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The throw statement allows you to create a custom error.",
      "html": "<p>The <code>throw</code> statement allows you to create a custom error.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The throw statement is used together with an exception class . There are many exception classes available in C#: ArithmeticException , FileNotFoundException , IndexOutOfRangeException , TimeOutException , etc:",
      "html": "<p>The <code>throw</code> statement is used together with an <strong>exception class</strong>. There are many exception classes available in C#: <code>ArithmeticException</code>, \n<code>FileNotFoundException</code>, <code>\nIndexOutOfRangeException</code>, <code>TimeOutException</code>, etc:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "static\n\nvoid\n\ncheckAge\n(\nint\nage\n)\n\n\n{\n\n\nif\n\n(\nage\n<\n\n18\n)\n\n\n{\n\n\nthrow\n\nnew\n\nArithmeticException\n(\n\"Access denied - You must be at least 18 years old.\"\n)\n;\n\n\n}\n\n\nelse\n\n\n{\n\nConsole\n.\nWriteLine\n(\n\"Access granted - You are old enough!\"\n)\n;\n\n\n}\n\n\n}\n\n\n\nstatic\n\nvoid\n\nMain\n(\nstring\n[\n]\nargs\n)\n\n\n{\n\n\ncheckAge\n(\n15\n)\n;\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-void\">void</span></span> <span class=\"token function\">checkAge</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> age<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span>age <span class=\"token operator\">&lt;</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-throw\">throw</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token constructor-invocation class-name\">ArithmeticException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access denied - You must be at least 18 years old.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword keyword-else\">else</span>\n  <span class=\"token punctuation\">{</span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access granted - You are old enough!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-void\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token function\">checkAge</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If age was 20, you would not get an exception:",
      "html": "<p>If <code>age</code> was 20, you would <strong>not</strong> get an exception:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_throw",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "checkAge\n(\n20\n)\n;",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token function\">checkAge</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_throw",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What will happen if an exception occurs inside a try block and there is no catch block?",
      "html": "<p>What will happen if an exception occurs inside a try block and there is no catch block?</p>"
    }
  ]
}