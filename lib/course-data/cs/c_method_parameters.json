{
  "title": "C# Method Parameters",
  "url": "https://www.w3schools.com/cs/cs_method_parameters.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C# Method Parameters",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Parameters and Arguments",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Information can be passed to methods as parameter. Parameters act as variables inside the method.",
      "html": "<p>Information can be passed to methods as parameter. Parameters act as variables inside the method.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "They are specified after the method name, inside the parentheses. You can add as many parameters as you want, just separate them with a comma.",
      "html": "<p>They are specified after the method name, inside the parentheses.\nYou can add as many parameters as you want, just separate them with a comma.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The following example has a method that takes a string called fname as parameter. When the method is called, we pass along a first name, which is used inside the method to print the full name:",
      "html": "<p>\nThe following example has a \nmethod that takes a <code>string</code> called <b>fname</b> as parameter.\nWhen the method is called, we pass along a first name,\nwhich is used inside the method to print the full name:\n</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_method_param",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "static\n\nvoid\n\nMyMethod\n(\nstring\nfname\n)\n\n\n{\n\nConsole\n.\nWriteLine\n(\nfname\n+\n\n\" Refsnes\"\n)\n;\n\n\n}\n\n\n\nstatic\n\nvoid\n\nMain\n(\nstring\n[\n]\nargs\n)\n\n\n{\n\n\nMyMethod\n(\n\"Liam\"\n)\n;\n\n\nMyMethod\n(\n\"Jenny\"\n)\n;\n\n\nMyMethod\n(\n\"Anja\"\n)\n;\n\n\n}\n\n\n\n// Liam Refsnes\n\n\n// Jenny Refsnes\n\n\n// Anja Refsnes",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" data-line=\"1,3,10,8,9\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-void\">void</span></span> <span class=\"token function\">MyMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span></span> fname<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{</span>\n  Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>fname <span class=\"token operator\">+</span> <span class=\"token string\">\" Refsnes\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-void\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token function\">MyMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Liam\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">MyMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Jenny\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">MyMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Anja\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Liam Refsnes</span>\n<span class=\"token comment\">// Jenny Refsnes</span>\n<span class=\"token comment\">// Anja Refsnes</span>\n<div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"1\" data-start=\"1\" style=\"top: 0px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"3\" data-start=\"3\" style=\"top: 44px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"10\" data-start=\"10\" style=\"top: 198px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"8\" data-start=\"8\" style=\"top: 154px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"9\" data-start=\"9\" style=\"top: 176px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_method_param",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When a parameter is passed to the method, it is called an argument . So, from the example above: fname is a parameter , while Liam , Jenny and Anja are arguments .",
      "html": "<p>When a <strong>parameter</strong> is passed to the method, it is called an <strong>argument</strong>. So, from the example above: <code>fname</code> is a <strong>parameter</strong>, while <code>Liam</code>, <code>Jenny</code> and <code>Anja</code> are <strong>arguments</strong>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Multiple Parameters",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can have as many parameters as you like, just separate them with commas:",
      "html": "<p>You can have as many parameters as you like, just separate them with commas:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_method_param2",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "static\n\nvoid\n\nMyMethod\n(\nstring\nfname\n,\n\nint\nage\n)\n\n\n{\n\nConsole\n.\nWriteLine\n(\nfname\n+\n\n\" is \"\n\n+\nage\n)\n;\n\n\n}\n\n\n\nstatic\n\nvoid\n\nMain\n(\nstring\n[\n]\nargs\n)\n\n\n{\n\n\nMyMethod\n(\n\"Liam\"\n,\n\n5\n)\n;\n\n\nMyMethod\n(\n\"Jenny\"\n,\n\n8\n)\n;\n\n\nMyMethod\n(\n\"Anja\"\n,\n\n31\n)\n;\n\n\n}\n\n\n\n// Liam is 5\n\n\n// Jenny is 8\n\n\n// Anja is 31",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" data-line=\"1\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-void\">void</span></span> <span class=\"token function\">MyMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span></span> fname<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> age<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{</span>\n  Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>fname <span class=\"token operator\">+</span> <span class=\"token string\">\" is \"</span> <span class=\"token operator\">+</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-void\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token function\">MyMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Liam\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">MyMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Jenny\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">MyMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Anja\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Liam is 5</span>\n<span class=\"token comment\">// Jenny is 8</span>\n<span class=\"token comment\">// Anja is 31</span>\n<div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"1\" data-start=\"1\" style=\"top: 0px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_method_param2",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note that when you are working with multiple parameters, the method call must have the same number of arguments as there are parameters, and the arguments must be passed in the same order.",
      "html": "<p>Note that when you are working with multiple parameters, the method call must \nhave the same number of arguments as there are parameters, and the arguments must be passed in the same order.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When a parameter is passed to the method, it is called an",
      "html": "<p>When a parameter is passed to the method, it is called an</p>"
    }
  ]
}