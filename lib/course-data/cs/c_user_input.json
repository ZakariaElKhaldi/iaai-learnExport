{
  "title": "C# User Input",
  "url": "https://www.w3schools.com/cs/cs_user_input.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C# User Input",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Get User Input",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You have already learned that Console.WriteLine() is used to output (print) values. Now we will use Console.ReadLine() to get user input.",
      "html": "<p>You have already learned that <code>Console.WriteLine()</code> is used to output (print) values. Now we will use <code>\nConsole.ReadLine()</code> to get user input.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the following example, the user can input his or hers username, which is stored in the variable userName . Then we print the value of userName :",
      "html": "<p>In the following example, the user can input his or hers username, which is stored in the \nvariable <code>userName</code>. Then we print the value of \n<code>\nuserName</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "// Type your username and press enter\n\nConsole\n.\nWriteLine\n(\n\"Enter username:\"\n)\n;\n\n\n\n// Create a string variable and get user input from the keyboard and store it in the variable\n\n\nstring\nuserName\n=\nConsole\n.\nReadLine\n(\n)\n;\n\n\n\n// Print the value of the variable (userName), which will display the input value\n\nConsole\n.\nWriteLine\n(\n\"Username is: \"\n\n+\nuserName\n)\n;",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token comment\">// Type your username and press enter</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter username:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create a string variable and get user input from the keyboard and store it in the variable</span>\n<span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span></span> userName <span class=\"token operator\">=</span> Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Print the value of the variable (userName), which will display the input value</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Username is: \"</span> <span class=\"token operator\">+</span> userName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "User Input and Numbers",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Console.ReadLine() method returns a string . Therefore, you cannot get information from another data type, such as int . The following program will cause an error:",
      "html": "<p>The <code>Console.ReadLine()</code> method returns a <code>string</code>. Therefore, you cannot get information from another data type, such as <code>int</code>. The following program will cause an error:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "w3-border-red",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "Console\n.\nWriteLine\n(\n\"Enter your age:\"\n)\n;\n\n\nint\nage\n=\nConsole\n.\nReadLine\n(\n)\n;\n\nConsole\n.\nWriteLine\n(\n\"Your age is: \"\n\n+\nage\n)\n;",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white w3-border-red language-csharp\" tabindex=\"0\"><code class=\"language-csharp\">Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter your age:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> age <span class=\"token operator\">=</span> Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Your age is: \"</span> <span class=\"token operator\">+</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>",
      "code_classes": [
        "w3-white",
        "w3-border-red",
        "language-csharp"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "w3-border-red",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Like the error message says, you cannot implicitly convert type 'string' to 'int'.",
      "html": "<p>Like the error message says, you cannot implicitly convert type 'string' to \n'int'. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "previous chapter (Type Casting)",
          "href": "https://www.w3schools.com/cs_type_casting.php",
          "title": ""
        }
      ],
      "text": "Luckily, for you, you just learned from the previous chapter (Type Casting) , that you can convert any type explicitly, by using one of the Convert.To methods:",
      "html": "<p>Luckily, for you, you just learned from the <a href=\"cs_type_casting.php\">previous chapter (Type Casting)</a>, that you can convert \nany type explicitly, by using one of the <code>\nConvert.To</code> methods:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "Console\n.\nWriteLine\n(\n\"Enter your age:\"\n)\n;\n\n\nint\nage\n=\nConvert\n.\nToInt32\n(\nConsole\n.\nReadLine\n(\n)\n)\n;\n\nConsole\n.\nWriteLine\n(\n\"Your age is: \"\n\n+\nage\n)\n;",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\">Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter your age:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> age <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToInt32</span><span class=\"token punctuation\">(</span>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Your age is: \"</span> <span class=\"token operator\">+</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: If you enter wrong input (e.g. text in a numerical input), you will get an exception/error message (like System.FormatException: 'Input string was not in a correct format.').",
      "html": "<p><strong>Note:</strong> If you enter wrong input (e.g. text in a numerical input), you will get an exception/error message (like System.FormatException: 'Input string was not in a correct format.').</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Exceptions",
          "href": "https://www.w3schools.com/cs_exceptions.php",
          "title": ""
        }
      ],
      "text": "You will learn more about Exceptions and how to handle errors in a later chapter.",
      "html": "<p>You will learn more about <a href=\"cs_exceptions.php\">Exceptions</a> and how to handle errors in a later chapter.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Which method can be used in C# to get user input from the console?",
      "html": "<p>Which method can be used in C# to get user input from the console?</p>"
    }
  ]
}