{
  "title": "C# Type Casting",
  "url": "https://www.w3schools.com/cs/cs_type_casting.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C# Type Casting",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "C# Type Casting",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Type casting is when you assign a value of one data type to another type.",
      "html": "<p>Type casting is when you assign a value of one data type to another type.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In C#, there are two types of casting:",
      "html": "<p>In C#, there are two types of casting:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Implicit Casting",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Implicit casting is done automatically when passing a smaller size type to a larger size type:",
      "html": "<p>Implicit casting is done automatically when passing a smaller size type to a \nlarger size type:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_casting_impl",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "int\nmyInt\n=\n\n9\n;\n\n\ndouble\nmyDouble\n=\nmyInt\n;\n\n// Automatic casting: int to double\n\n\nConsole\n.\nWriteLine\n(\nmyInt\n)\n;\n\n// Outputs 9\n\nConsole\n.\nWriteLine\n(\nmyDouble\n)\n;\n\n// Outputs 9",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> myInt <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> myDouble <span class=\"token operator\">=</span> myInt<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// Automatic casting: int to double</span>\n\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>myInt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// Outputs 9</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>myDouble<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// Outputs 9</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_casting_impl",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Explicit Casting",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Explicit casting must be done manually by placing the type in parentheses in front of the value:",
      "html": "<p>Explicit casting must be done manually by placing the type in parentheses \nin front of the value:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_casting_expl",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "double\nmyDouble\n=\n\n9.78\n;\n\n\nint\nmyInt\n=\n\n(\nint\n)\nmyDouble\n;\n\n// Manual casting: double to int\n\n\nConsole\n.\nWriteLine\n(\nmyDouble\n)\n;\n\n// Outputs 9.78\n\nConsole\n.\nWriteLine\n(\nmyInt\n)\n;\n\n// Outputs 9",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> myDouble <span class=\"token operator\">=</span> <span class=\"token number\">9.78</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> myInt <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword keyword-int\">int</span><span class=\"token punctuation\">)</span> myDouble<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Manual casting: double to int</span>\n\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>myDouble<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// Outputs 9.78</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>myInt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// Outputs 9</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_casting_expl",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Type Conversion Methods",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It is also possible to convert data types explicitly by using built-in methods, such as Convert.ToBoolean , Convert.ToDouble , Convert.ToString , Convert.ToInt32 ( int ) and Convert.ToInt64 ( long ):",
      "html": "<p>It is also possible to convert data types explicitly by using built-in methods, such as <code>Convert.ToBoolean</code>, <code>Convert.ToDouble</code>, <code>Convert.ToString</code>, <code>Convert.ToInt32</code> (<code>int</code>) and <code>Convert.ToInt64</code> (<code>long</code>):</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_convertto",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "int\nmyInt\n=\n\n10\n;\n\n\ndouble\nmyDouble\n=\n\n5.25\n;\n\n\nbool\nmyBool\n=\n\ntrue\n;\n\n\nConsole\n.\nWriteLine\n(\nConvert\n.\nToString\n(\nmyInt\n)\n)\n;\n\n// convert int to string\n\nConsole\n.\nWriteLine\n(\nConvert\n.\nToDouble\n(\nmyInt\n)\n)\n;\n\n// convert int to double\n\nConsole\n.\nWriteLine\n(\nConvert\n.\nToInt32\n(\nmyDouble\n)\n)\n;\n\n// convert double to int\n\nConsole\n.\nWriteLine\n(\nConvert\n.\nToString\n(\nmyBool\n)\n)\n;\n\n// convert bool to string",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> myInt <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> myDouble <span class=\"token operator\">=</span> <span class=\"token number\">5.25</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword keyword-bool\">bool</span></span> myBool <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span>myInt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// convert int to string</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToDouble</span><span class=\"token punctuation\">(</span>myInt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// convert int to double</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToInt32</span><span class=\"token punctuation\">(</span>myDouble<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// convert double to int</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span>myBool<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// convert bool to string</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_convertto",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Why Conversion?",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "user input",
          "href": "https://www.w3schools.com/cs_user_input.php",
          "title": ""
        }
      ],
      "text": "Many times, there's no need for type conversion. But sometimes you have to. Take a look at the next chapter, when working with user input , to see an example of this.",
      "html": "<p>Many times, there's no need for type conversion. But sometimes you have to. Take a look at the next chapter, when working with <a href=\"cs_user_input.php\">user input</a>, to see an example of this.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is implicit casting in C#?",
      "html": "<p>What is implicit casting in C#?</p>"
    }
  ]
}