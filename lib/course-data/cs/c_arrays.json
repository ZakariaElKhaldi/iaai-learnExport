{
  "title": "C# Arrays",
  "url": "https://www.w3schools.com/cs/cs_arrays.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C# Arrays",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Create an Array",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Arrays are used to store multiple values in a single variable, instead of declaring separate variables for each value.",
      "html": "<p>Arrays are used to store multiple values in a single variable, instead of declaring separate variables for each \nvalue.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To declare an array, define the variable type with square brackets :",
      "html": "<p>To declare an array, define the variable type with <strong>square brackets</strong>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "string\n[\n]\ncars\n;",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> cars<span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We have now declared a variable that holds an array of strings.",
      "html": "<p>We have now declared a variable that holds an array of strings.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To insert values to it, we can use an array literal - place the values in a comma-separated list, inside curly braces:",
      "html": "<p>To insert values to it, we can use an array literal - place the values in a comma-separated list, inside curly braces:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "string\n[\n]\ncars\n=\n\n{\n\"Volvo\"\n,\n\n\"BMW\"\n,\n\n\"Ford\"\n,\n\n\"Mazda\"\n}\n;",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> cars <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"Volvo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Ford\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Mazda\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To create an array of integers, you could write:",
      "html": "<p>To create an array of integers, you could write:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "int\n[\n]\nmyNum\n=\n\n{\n10\n,\n\n20\n,\n\n30\n,\n\n40\n}\n;",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> myNum <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Access the Elements of an Array",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You access an array element by referring to the index number.",
      "html": "<p>You access an array element by referring to the index number.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This statement accesses the value of the first element in cars :",
      "html": "<p>This statement accesses the value of the first element in <strong>cars</strong>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_array",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "string\n[\n]\ncars\n=\n\n{\n\"Volvo\"\n,\n\n\"BMW\"\n,\n\n\"Ford\"\n,\n\n\"Mazda\"\n}\n;\n\nConsole\n.\nWriteLine\n(\ncars\n[\n0\n]\n)\n;\n\n\n// Outputs Volvo",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> cars <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"Volvo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Ford\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Mazda\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>cars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Outputs Volvo</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_array",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: Array indexes start with 0: [0] is the first element. [1] is the second element, etc.",
      "html": "<p><strong>Note:</strong> Array indexes start with 0: [0] is the first element. [1] is the second \nelement, etc.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Change an Array Element",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To change the value of a specific element, refer to the index number:",
      "html": "<p>To change the value of a specific element, refer to the index number:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "cars\n[\n0\n]\n\n=\n\n\"Opel\"\n;",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\">cars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Opel\"</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_array_change",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "string\n[\n]\ncars\n=\n\n{\n\"Volvo\"\n,\n\n\"BMW\"\n,\n\n\"Ford\"\n,\n\n\"Mazda\"\n}\n;\n\ncars\n[\n0\n]\n\n=\n\n\"Opel\"\n;\n\nConsole\n.\nWriteLine\n(\ncars\n[\n0\n]\n)\n;\n\n\n// Now outputs Opel instead of Volvo",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> cars <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"Volvo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Ford\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Mazda\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\ncars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Opel\"</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>cars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Now outputs Opel instead of Volvo</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_array_change",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Array Length",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To find out how many elements an array has, use the Length property:",
      "html": "<p>To find out how many elements an array has, use the <code>\nLength</code> property:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_array_length",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "string\n[\n]\ncars\n=\n\n{\n\"Volvo\"\n,\n\n\"BMW\"\n,\n\n\"Ford\"\n,\n\n\"Mazda\"\n}\n;\n\nConsole\n.\nWriteLine\n(\ncars\n.\nLength\n)\n;\n\n\n// Outputs 4",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> cars <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"Volvo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Ford\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Mazda\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>cars<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Outputs 4</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_array_length",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Other Ways to Create an Array",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you are familiar with C#, you might have seen arrays created with the new keyword, and perhaps you have seen arrays with a specified size as well. In C#, there are different ways to create an array:",
      "html": "<p>If you are familiar with C#, you might have seen arrays created with the <code>new</code> keyword, and perhaps you have seen arrays with a specified size as well. In C#, there are different ways to create an array:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "// Create an array of four elements, and add values later\n\n\nstring\n[\n]\ncars\n=\n\nnew\n\nstring\n[\n4\n]\n;\n\n\n\n// Create an array of four elements and add values right away\n\n\nstring\n[\n]\ncars\n=\n\nnew\n\nstring\n[\n4\n]\n\n{\n\"Volvo\"\n,\n\n\"BMW\"\n,\n\n\"Ford\"\n,\n\n\"Mazda\"\n}\n;\n\n\n\n// Create an array of four elements without specifying the size\n\n\nstring\n[\n]\ncars\n=\n\nnew\n\nstring\n[\n]\n\n{\n\"Volvo\"\n,\n\n\"BMW\"\n,\n\n\"Ford\"\n,\n\n\"Mazda\"\n}\n;\n\n\n\n// Create an array of four elements, omitting the new keyword, and without specifying the size\n\n\nstring\n[\n]\ncars\n=\n\n{\n\"Volvo\"\n,\n\n\"BMW\"\n,\n\n\"Ford\"\n,\n\n\"Mazda\"\n}\n;",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token comment\">// Create an array of four elements, and add values later</span>\n<span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> cars <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword keyword-string\">string</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create an array of four elements and add values right away </span>\n<span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> cars <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword keyword-string\">string</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"Volvo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Ford\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Mazda\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create an array of four elements without specifying the size </span>\n<span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> cars <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"Volvo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Ford\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Mazda\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create an array of four elements, omitting the new keyword, and without specifying the size</span>\n<span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> cars <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"Volvo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Ford\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Mazda\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It is up to you which option you choose. In our tutorial, we will often use the last option, as it is faster and easier to read.",
      "html": "<p>It is up to you which option you choose. In our tutorial, we will often use the last option, as it is faster and easier to read.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "However, you should note that if you declare an array and initialize it later, you have to use the new keyword:",
      "html": "<p>However, you should note that if you declare an array and initialize it later, you have to use the <code>new</code> keyword:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_array_init",
        "syntaxHighlighting": [
          {
            "text": "=",
            "color": "rgb(128, 128, 128)",
            "class": ""
          }
        ],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "// Declare an array\n\n\nstring\n[\n]\ncars\n;\n\n\n\n// Add values, using new\n\ncars\n=\n\nnew\n\nstring\n[\n]\n\n{\n\"Volvo\"\n,\n\n\"BMW\"\n,\n\n\"Ford\"\n}\n;\n\n\n\n// Add values without using new (this will cause an error)\n\ncars\n=\n\n{\n\"Volvo\"\n,\n\n\"BMW\"\n,\n\n\"Ford\"\n}\n;",
      "syntax_highlighting": [
        {
          "text": "=",
          "color": "grey!important",
          "class": []
        }
      ],
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token comment\">// Declare an array</span>\n<span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> cars<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Add values, using new</span>\ncars <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"Volvo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Ford\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"></span><div style=\"background-color:#ffdddd!important;color:grey!important;margin-bottom:-16px\"><span class=\"token comment\">// Add values without using new (this will cause an error)</span>\ncars <span class=\"token operator\"><span style=\"color:grey!important\">=</span></span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"Volvo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Ford\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></div><span class=\"token punctuation\"></span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_array_init",
      "syntax_highlighting_data": [
        {
          "text": "=",
          "color": "rgb(128, 128, 128)",
          "class": ""
        }
      ],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    }
  ]
}