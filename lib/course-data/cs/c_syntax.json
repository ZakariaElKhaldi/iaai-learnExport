{
  "title": "C# Syntax",
  "url": "https://www.w3schools.com/cs/cs_syntax.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C# Syntax",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "C# Syntax",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the previous chapter, we created a C# file called Program.cs, and we used the following code to print \"Hello World\" to the screen:",
      "html": "<p>In the previous chapter, we created a C# file called Program.cs, and we used the following code to print \"Hello World\" to the screen:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_helloworld",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "using\n\nSystem\n;\n\n\n\nnamespace\n\nHelloWorld\n\n\n{\n\n\nclass\n\nProgram\n\n\n{\n\n\nstatic\n\nvoid\n\nMain\n(\nstring\n[\n]\nargs\n)\n\n\n{\n\nConsole\n.\nWriteLine\n(\n\"Hello World!\"\n)\n;\n\n\n}\n\n\n}\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-using\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-namespace\">namespace</span> <span class=\"token namespace\">HelloWorld</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Program</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-void\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n      Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_helloworld",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Example explained",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Line 1: using System means that we can use classes from the System namespace.",
      "html": "<p><strong>Line 1:</strong> <code>using System</code> means \nthat we can use classes from the <code>System</code> namespace.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Line 2: A blank line. C# ignores white space. However, multiple lines makes the code more readable.",
      "html": "<p><strong>Line 2:</strong> A blank line. C# ignores white space. However, multiple lines makes the code more readable.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Line 3: namespace is used to organize your code, and it is a container for classes and other namespaces.",
      "html": "<p><strong>Line 3:</strong> <code>namespace</code> is used to organize your code, and it is a container for classes and other namespaces.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Line 4: The curly braces {} marks the beginning and the end of a block of code.",
      "html": "<p><strong>Line 4:</strong> The curly braces <code>{}</code> marks the beginning and the end of a block of code.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Line 5: class is a container for data and methods, which brings functionality to your program. Every line of code that runs in C# must be inside a class. In our example, we named the class Program.",
      "html": "<p><strong>Line 5:</strong> <code>class</code> is a \ncontainer for data and methods, which brings functionality to your program. Every line of code that runs in C# must be inside a class. In our example, we named the class Program.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Don't worry if you don't understand how using System , namespace and class works. Just think of it as something that (almost) always appears in your program, and that you will learn more about them in a later chapter.",
      "html": "<p>Don't worry if you don't understand how <code>using \nSystem</code>, <code>namespace</code> and <code>class</code> works. Just think of it as something that (almost) always appears in your program, and that you will learn more about them in a later chapter.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Line 7: Another thing that always appear in a C# program is the Main method. Any code inside its curly brackets {} will be executed. You don't have to understand the keywords before and after Main. You will get to know them bit by bit while reading this tutorial.",
      "html": "<p><strong>Line 7:</strong> Another thing that always appear in a C# program is \nthe <code>Main</code> method. Any code inside its curly brackets <code>{}</code> will be executed.\nYou don't have to understand the keywords before and after Main. You will get to \nknow them bit by bit while reading this tutorial.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Line 9: Console is a class of the System namespace, which has a WriteLine() method that is used to output/print text. In our example, it will output \"Hello World!\".",
      "html": "<p><strong>Line 9:</strong> <code>Console</code> is a class of the <code>System</code> namespace, which \nhas a <code>WriteLine()</code> method that is used to output/print text. In our example, it will output \"Hello World!\". </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you omit the using System line, you would have to write System.Console.WriteLine() to print/output text.",
      "html": "<p>If you omit the <code>using System</code> line, you would have to write \n<code>System.Console.WriteLine()</code> to print/output text.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: Every C# statement ends with a semicolon ; .",
      "html": "<p><strong>Note:</strong> Every C# statement ends with a semicolon <code>;</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: C# is case-sensitive; \"MyClass\" and \"myclass\" have different meaning.",
      "html": "<p><strong>Note:</strong> C# is case-sensitive; \"MyClass\" and \"myclass\" \nhave \ndifferent meaning.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Java",
          "href": "https://www.w3schools.com/java/default.asp",
          "title": ""
        },
        {
          "text": "Get Started Chapter",
          "href": "https://www.w3schools.com/cs_getstarted.php",
          "title": ""
        }
      ],
      "text": "Note: Unlike Java , the name of the C# file does not have to match the class name, but they often do (for better organization). When saving the file, save it using a proper name and add \".cs\" to the end of the filename. To run the example above on your computer, make sure that C# is properly installed: Go to the Get Started Chapter for how to install C#. The output should be:",
      "html": "<p><strong>Note:</strong> Unlike <a href=\"/java/default.asp\">Java</a>, the name of the C# file does not have to match the class name, but they often do (for better organization).\nWhen saving the file, save it using a proper name and add \".cs\" to the end of \nthe filename. To run the example above on your computer, make sure that C# is \nproperly installed: Go to the <a href=\"cs_getstarted.php\">Get Started Chapter</a> for how to install C#. The output should be:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-black",
          "w3-padding"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<div class=\"notranslate w3-black w3-padding\">\n<code class=\"notranslate\">\nHello World!\n</code>\n</div>",
      "code_classes": [
        "notranslate",
        "w3-black",
        "w3-padding"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-black",
        "w3-padding"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "True or False: C# is case-sensitive; MyClass and myclass have different meaning.",
      "html": "<p>True or False:<br/>C# is case-sensitive; <code>MyClass</code> and <code>myclass</code> have different meaning.</p>"
    }
  ]
}