{
  "title": "C# Multidimensional Arrays",
  "url": "https://www.w3schools.com/cs/cs_arrays_multi.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C# Multidimensional Arrays",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Multidimensional Arrays",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "arrays",
          "href": "https://www.w3schools.com/cs_arrays.php",
          "title": ""
        }
      ],
      "text": "In the previous chapter, you learned about arrays , which is also known as single dimension arrays . These are great, and something you will use a lot while programming in C#. However, if you want to store data as a tabular form, like a table with rows and columns, you need to get familiar with multidimensional arrays .",
      "html": "<p>In the previous chapter, you learned about <a href=\"cs_arrays.php\">arrays</a>, \nwhich is also known as <strong>single dimension arrays</strong>. These are great, and something you will use a lot while programming in C#. However, if you want to store data as a tabular form, like a table with rows and columns, \nyou need to get familiar with \n<strong>multidimensional arrays</strong>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A multidimensional array is basically an array of arrays.",
      "html": "<p>A multidimensional array is basically an array of arrays.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Arrays can have any number of dimensions. The most common are two-dimensional arrays (2D).",
      "html": "<p>Arrays can have any number of dimensions. The most common are two-dimensional arrays (2D).</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Two-Dimensional Arrays",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To create a 2D array, add each array within its own set of curly braces, and insert a comma ( , ) inside the square brackets:",
      "html": "<p>To create a 2D array, add each array within its own set of curly braces, and insert a comma (<code>,</code>) inside the square brackets:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "int\n[\n,\n]\nnumbers\n=\n\n{\n\n{\n1\n,\n\n4\n,\n\n2\n}\n,\n\n{\n3\n,\n\n6\n,\n\n8\n}\n\n}\n;",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span></span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Good to know: The single comma [,] specifies that the array is two-dimensional. A three-dimensional array would have two commas: int[,,] .",
      "html": "<p><strong>Good to know:</strong> The single comma <code>[,]</code> specifies that the array is two-dimensional. A three-dimensional array would have two commas: <code>int[,,]</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "numbers is now an array with two arrays as its elements. The first array element contains three elements: 1, 4 and 2, while the second array element contains 3, 6 and 8. To visualize it, think of the array as a table with rows and columns:",
      "html": "<p><code>numbers</code> is now an array with two arrays as its elements. \nThe first array element contains three elements: 1, 4 and 2, while the second \narray element contains 3, 6 and 8. To visualize it, think of the array as a table with rows and columns:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Access Elements of a 2D Array",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To access an element of a two-dimensional array, you must specify two indexes: one for the array, and one for the element inside that array. Or better yet, with the table visualization in mind; one for the row and one for the column (see example below).",
      "html": "<p>To access an element of a two-dimensional array, you must specify two indexes: one for the array, and one for the element inside that array. Or better yet, with the table visualization in mind; one for the row and one for the column (see example below).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This statement accesses the value of the element in the first row (0) and third column (2) of the numbers array:",
      "html": "<p>This statement accesses the value of the element in the\n<strong>first row (0)</strong> and \n<strong>third column (2)</strong> of the <code>numbers</code> array:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_array_multi",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "int\n[\n,\n]\nnumbers\n=\n\n{\n\n{\n1\n,\n\n4\n,\n\n2\n}\n,\n\n{\n3\n,\n\n6\n,\n\n8\n}\n\n}\n;\n\nConsole\n.\nWriteLine\n(\nnumbers\n[\n0\n,\n\n2\n]\n)\n;\n\n// Outputs 2",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span></span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Outputs 2</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_array_multi",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Remember that: Array indexes start with 0: [0] is the first element. [1] is the second element, etc.",
      "html": "<p><strong>Remember that:</strong> Array indexes start with 0: [0] is the first element. [1] is the second element, etc.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Change Elements of a 2D Array",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also change the value of an element.",
      "html": "<p>You can also change the value of an element.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The following example will change the value of the element in the first row (0) and first column (0) :",
      "html": "<p>The following example will change the value of the element in the <strong>first row (0)</strong> and <strong>first column (0)</strong>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_array_multi_change",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "int\n[\n,\n]\nnumbers\n=\n\n{\n\n{\n1\n,\n\n4\n,\n\n2\n}\n,\n\n{\n3\n,\n\n6\n,\n\n8\n}\n\n}\n;\n\nnumbers\n[\n0\n,\n\n0\n]\n\n=\n\n5\n;\n\n// Change value to 5\n\nConsole\n.\nWriteLine\n(\nnumbers\n[\n0\n,\n\n0\n]\n)\n;\n\n// Outputs 5 instead of 1",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span></span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nnumbers<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Change value to 5</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Outputs 5 instead of 1</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_array_multi_change",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Loop Through a 2D Array",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can easily loop through the elements of a two-dimensional array with a foreach loop:",
      "html": "<p>You can easily loop through the elements of a two-dimensional array with a \n<code>foreach</code> loop:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_array_multi_loop",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "int\n[\n,\n]\nnumbers\n=\n\n{\n\n{\n1\n,\n\n4\n,\n\n2\n}\n,\n\n{\n3\n,\n\n6\n,\n\n8\n}\n\n}\n;\n\n\n\nforeach\n\n(\nint\ni\nin\nnumbers\n)\n\n\n{\n\nConsole\n.\nWriteLine\n(\ni\n)\n;\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span></span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-foreach\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> i <span class=\"token keyword keyword-in\">in</span> numbers<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> </code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_array_multi_loop",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "for loop",
          "href": "https://www.w3schools.com/cs_for_loop.php",
          "title": ""
        }
      ],
      "text": "You can also use a for loop . For multidimensional arrays, you need one loop for each of the array's dimensions.",
      "html": "<p>You can also use a <a href=\"cs_for_loop.php\">for loop</a>. For multidimensional arrays, \nyou need one loop for each of the array's dimensions. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Also note that we have to use GetLength() instead of Length to specify how many times the loop should run:",
      "html": "<p>Also note that we have to use <code>GetLength()</code> instead of <code>Length</code> \nto specify how many times the loop should run:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_array_multi_loop2",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "int\n[\n,\n]\nnumbers\n=\n\n{\n\n{\n1\n,\n\n4\n,\n\n2\n}\n,\n\n{\n3\n,\n\n6\n,\n\n8\n}\n\n}\n;\n\n\n\nfor\n\n(\nint\ni\n=\n\n0\n;\ni\n<\nnumbers\n.\nGetLength\n(\n0\n)\n;\ni\n++\n)\n\n\n{\n\n\nfor\n\n(\nint\nj\n=\n\n0\n;\nj\n<\nnumbers\n.\nGetLength\n(\n1\n)\n;\nj\n++\n)\n\n\n{\n\nConsole\n.\nWriteLine\n(\nnumbers\n[\ni\n,\nj\n]\n)\n;\n\n\n}\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span></span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-for\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">GetLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{</span> \n  <span class=\"token keyword keyword-for\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">GetLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n  <span class=\"token punctuation\">{</span> \n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n  <span class=\"token punctuation\">}</span> \n<span class=\"token punctuation\">}</span>  </code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_array_multi_loop2",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What does the single comma ( [,] ) in the array declaration specify in C#?",
      "html": "<p>What does the single comma (<code>[,]</code>) in the array declaration specify in C#?</p>"
    }
  ]
}