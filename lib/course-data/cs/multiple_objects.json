{
  "title": "C# Multiple Classes and Objects",
  "url": "https://www.w3schools.com/cs/cs_classes_multi.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C# Multiple Classes and Objects",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Multiple Objects",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can create multiple objects of one class:",
      "html": "<p>You can create multiple objects of one class:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_class_multi_obj",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nCar\n\n\n{\n\n\nstring\ncolor\n=\n\n\"red\"\n;\n\n\nstatic\n\nvoid\n\nMain\n(\nstring\n[\n]\nargs\n)\n\n\n{\n\n\nCar\nmyObj1\n=\n\nnew\n\nCar\n(\n)\n;\n\n\nCar\nmyObj2\n=\n\nnew\n\nCar\n(\n)\n;\n\nConsole\n.\nWriteLine\n(\nmyObj1\n.\ncolor\n)\n;\n\nConsole\n.\nWriteLine\n(\nmyObj2\n.\ncolor\n)\n;\n\n\n}\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" data-line=\"7,8\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Car</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span></span> color <span class=\"token operator\">=</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-void\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Car</span> myObj1 <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token constructor-invocation class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Car</span> myObj2 <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token constructor-invocation class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>myObj1<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>myObj2<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"7\" data-start=\"7\" style=\"top: 132px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"8\" data-start=\"8\" style=\"top: 154px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_class_multi_obj",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Using Multiple Classes",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also create an object of a class and access it in another class. This is often used for better organization of classes (one class has all the fields and methods, while the other class holds the Main() method (code to be executed)).",
      "html": "<p>You can also create an object of a class and access it in another class. This \nis often used for better organization of classes (one class has all the \nfields and methods, while the other class holds the <code>Main()</code> method (code to \nbe executed)). </p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nCar\n\n\n{\n\n\npublic\n\nstring\ncolor\n=\n\n\"red\"\n;\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Car</span> \n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-public\">public</span> <span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span></span> color <span class=\"token operator\">=</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs_multi.php?filename=demo_classes&multi=demo_classes_multi",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nProgram\n\n\n{\n\n\nstatic\n\nvoid\n\nMain\n(\nstring\n[\n]\nargs\n)\n\n\n{\n\n\nCar\nmyObj\n=\n\nnew\n\nCar\n(\n)\n;\n\nConsole\n.\nWriteLine\n(\nmyObj\n.\ncolor\n)\n;\n\n\n}\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Program</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-void\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Car</span> myObj <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token constructor-invocation class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>myObj<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs_multi.php?filename=demo_classes&multi=demo_classes_multi",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Did you notice the public keyword? It is called an access modifier , which specifies that the color variable/field of Car is accessible for other classes as well, such as Program .",
      "html": "<p>Did you notice the <code>public</code> keyword? It is called an <strong>access modifier</strong>, \nwhich specifies that the <code>color</code> variable/field of <code>Car</code> is accessible for other classes as well, such as <code>\nProgram</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You will learn much more about access modifiers and classes/objects in the next chapters.",
      "html": "<p>You will learn much more about <strong>access modifiers</strong> and <strong>classes/objects</strong> in the next chapters.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    }
  ]
}