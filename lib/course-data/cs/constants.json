{
  "title": "C# Constant Variables",
  "url": "https://www.w3schools.com/cs/cs_variables_constants.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C# Constants",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Constants",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you don't want others (or yourself) to overwrite existing values, you can add the const keyword in front of the variable type.",
      "html": "<p>If you don't want others (or yourself) to overwrite existing values, you can add the  <code>const</code> keyword \nin front of the variable type.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This will declare the variable as \"constant\", which means unchangeable and read-only:",
      "html": "<p>This will declare the variable as \"constant\", which means unchangeable and read-only:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_variables_const",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "w3-border-red",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "const\n\nint\nmyNum\n=\n\n15\n;\n\nmyNum\n=\n\n20\n;\n\n// error",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white w3-border-red language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-const\"><strong>const</strong></span> <span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> myNum <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>\nmyNum <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// error</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "w3-border-red",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_variables_const",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "w3-border-red",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The const keyword is useful when you want a variable to always store the same value, so that others (or yourself) won't mess up your code. An example that is often referred to as a constant, is PI (3.14159...).",
      "html": "<p>The <code>const</code> keyword is useful when you want a variable to always store the same value, so that others (or yourself) won't mess up your code. An example that is often referred to as a constant, is PI (3.14159...).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: You cannot declare a constant variable without assigning the value. If you do, an error will occur: A const field requires a value to be provided .",
      "html": "<p><strong>Note:</strong> You cannot declare a constant variable without assigning the value. If you do, an error will occur: <span>A const field requires a value to be provided</span>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What does the const keyword in C# do?",
      "html": "<p>What does the <code>const</code> keyword in C# do?</p>"
    }
  ]
}