{
  "title": "C# Enums",
  "url": "https://www.w3schools.com/cs/cs_enums.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C# Enum",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "C# Enums",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "An enum is a special \"class\" that represents a group of constants (unchangeable/read-only variables).",
      "html": "<p>An <code>enum</code> is a special \"class\" that represents a group of \n<strong>constants</strong> (unchangeable/read-only variables).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To create an enum , use the enum keyword (instead of class or interface), and separate the enum items with a comma:",
      "html": "<p>To create an <code>enum</code>, use the <code>enum</code> keyword (instead of class or interface), and separate \nthe enum items with a comma:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_enums",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "enum\n\nLevel\n\n\n{\n\nLow\n,\n\nMedium\n,\n\nHigh\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-enum\">enum</span> <span class=\"token class-name\">Level</span> \n<span class=\"token punctuation\">{</span>\n  Low<span class=\"token punctuation\">,</span>\n  Medium<span class=\"token punctuation\">,</span>\n  High\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_enums",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Enum is short for \"enumerations\", which means \"specifically listed\".",
      "html": "<p>Enum is short for \"enumerations\", which means \"specifically listed\".</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Enum inside a Class",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also have an enum inside a class:",
      "html": "<p>You can also have an <code>enum</code> inside a class:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_enums_class",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nProgram\n\n\n{\n\n\nenum\n\nLevel\n\n\n{\n\n\nLow\n,\n\n\nMedium\n,\n\n\nHigh\n\n\n}\n\n\nstatic\n\nvoid\n\nMain\n(\nstring\n[\n]\nargs\n)\n\n\n{\n\n\nLevel\nmyVar\n=\n\nLevel\n.\nMedium\n;\n\n\nConsole\n.\nWriteLine\n(\nmyVar\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Program</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-enum\">enum</span> <span class=\"token class-name\">Level</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Low</span><span class=\"token punctuation\">,</span>\n    <span class=\"token class-name\">Medium</span><span class=\"token punctuation\">,</span>\n    <span class=\"token class-name\">High</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Level</span> myVar <span class=\"token operator\">=</span> <span class=\"token class-name\">Level<span class=\"token punctuation\">.</span>Medium</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Console<span class=\"token punctuation\">.</span>WriteLine</span><span class=\"token punctuation\">(</span>myVar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_enums_class",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Enum Values",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "By default, the first item of an enum has the value 0. The second has the value 1, and so on.",
      "html": "<p>By default, the first item of an enum has the value 0. The second has the value 1, and so on.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "explicitly convert",
          "href": "https://www.w3schools.com/cs_type_casting.php",
          "title": ""
        }
      ],
      "text": "To get the integer value from an item, you must explicitly convert the item to an int :",
      "html": "<p>To get the integer value from an item, you must <a href=\"cs_type_casting.php\">explicitly convert</a> the item to an \n<code>int</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_enums_months",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "enum\n\nMonths\n\n\n{\n\n\nJanuary\n,\n\n// 0\n\n\nFebruary\n,\n\n// 1\n\n\nMarch\n,\n\n// 2\n\n\nApril\n,\n\n// 3\n\n\nMay\n,\n\n// 4\n\n\nJune\n,\n\n// 5\n\n\nJuly\n\n// 6\n\n\n}\n\n\n\nstatic\n\nvoid\n\nMain\n(\nstring\n[\n]\nargs\n)\n\n\n{\n\n\nint\nmyNum\n=\n\n(\nint\n)\n\nMonths\n.\nApril\n;\n\n\nConsole\n.\nWriteLine\n(\nmyNum\n)\n;\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-enum\">enum</span> <span class=\"token class-name\">Months</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">January</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 0</span>\n  <span class=\"token class-name\">February</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 1</span>\n  <span class=\"token class-name\">March</span><span class=\"token punctuation\">,</span>      <span class=\"token comment\">// 2</span>\n  <span class=\"token class-name\">April</span><span class=\"token punctuation\">,</span>      <span class=\"token comment\">// 3</span>\n  <span class=\"token class-name\">May</span><span class=\"token punctuation\">,</span>        <span class=\"token comment\">// 4</span>\n  <span class=\"token class-name\">June</span><span class=\"token punctuation\">,</span>       <span class=\"token comment\">// 5</span>\n  <span class=\"token class-name\">July</span>        <span class=\"token comment\">// 6</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-int\">int</span> myNum <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword keyword-int\">int</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Months<span class=\"token punctuation\">.</span>April</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">Console<span class=\"token punctuation\">.</span>WriteLine</span><span class=\"token punctuation\">(</span>myNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_enums_months",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also assign your own enum values, and the next items will update their numbers accordingly:",
      "html": "<p>You can also assign your own enum values, and the next items will update their numbers accordingly:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_enums_months_assign",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "enum\n\nMonths\n\n\n{\n\n\nJanuary\n,\n\n// 0\n\n\nFebruary\n,\n\n// 1\n\n\nMarch\n=\n6\n,\n\n// 6\n\n\nApril\n,\n\n// 7\n\n\nMay\n,\n\n// 8\n\n\nJune\n,\n\n// 9\n\n\nJuly\n\n// 10\n\n\n}\n\n\n\nstatic\n\nvoid\n\nMain\n(\nstring\n[\n]\nargs\n)\n\n\n{\n\n\nint\nmyNum\n=\n\n(\nint\n)\n\nMonths\n.\nApril\n;\n\n\nConsole\n.\nWriteLine\n(\nmyNum\n)\n;\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-enum\">enum</span> <span class=\"token class-name\">Months</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">January</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 0</span>\n  <span class=\"token class-name\">February</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 1</span>\n  <span class=\"token class-name\">March</span><span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 6</span>\n  <span class=\"token class-name\">April</span><span class=\"token punctuation\">,</span>      <span class=\"token comment\">// 7</span>\n  <span class=\"token class-name\">May</span><span class=\"token punctuation\">,</span>        <span class=\"token comment\">// 8</span>\n  <span class=\"token class-name\">June</span><span class=\"token punctuation\">,</span>       <span class=\"token comment\">// 9</span>\n  <span class=\"token class-name\">July</span>        <span class=\"token comment\">// 10</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-int\">int</span> myNum <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword keyword-int\">int</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Months<span class=\"token punctuation\">.</span>April</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">Console<span class=\"token punctuation\">.</span>WriteLine</span><span class=\"token punctuation\">(</span>myNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_enums_months_assign",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Enum in a Switch Statement",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Enums are often used in switch statements to check for corresponding values:",
      "html": "<p>Enums are often used in <code>switch</code> statements to check for corresponding values:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_enums_switch",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-java"
        ],
        "isNotranslate": false
      },
      "code": "enum\n\nLevel\n\n\n{\n\n\nLow\n,\n\n\nMedium\n,\n\n\nHigh\n\n\n}\n\n\n\nstatic\n\nvoid\n\nMain\n(\nstring\n[\n]\nargs\n)\n\n\n{\n\n\nLevel\nmyVar\n=\n\nLevel\n.\nMedium\n;\n\n\nswitch\n(\nmyVar\n)\n\n\n{\n\n\ncase\n\nLevel\n.\nLow\n:\n\n\nConsole\n.\nWriteLine\n(\n\"Low level\"\n)\n;\n\n\nbreak\n;\n\n\ncase\n\nLevel\n.\nMedium\n:\n\n\nConsole\n.\nWriteLine\n(\n\"Medium level\"\n)\n;\n\n\nbreak\n;\n\n\ncase\n\nLevel\n.\nHigh\n:\n\n\nConsole\n.\nWriteLine\n(\n\"High level\"\n)\n;\n\n\nbreak\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token keyword keyword-enum\">enum</span> <span class=\"token class-name\">Level</span> \n<span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">Low</span><span class=\"token punctuation\">,</span>\n  <span class=\"token class-name\">Medium</span><span class=\"token punctuation\">,</span>\n  <span class=\"token class-name\">High</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-static\">static</span> <span class=\"token keyword keyword-void\">void</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">Level</span> myVar <span class=\"token operator\">=</span> <span class=\"token class-name\">Level<span class=\"token punctuation\">.</span>Medium</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword keyword-switch\">switch</span><span class=\"token punctuation\">(</span>myVar<span class=\"token punctuation\">)</span> \n  <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-case\">case</span> <span class=\"token class-name\">Level<span class=\"token punctuation\">.</span>Low</span><span class=\"token operator\">:</span>\n      <span class=\"token class-name\">Console<span class=\"token punctuation\">.</span>WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Low level\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword keyword-break\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-case\">case</span> <span class=\"token class-name\">Level<span class=\"token punctuation\">.</span>Medium</span><span class=\"token operator\">:</span>\n       <span class=\"token class-name\">Console<span class=\"token punctuation\">.</span>WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Medium level\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword keyword-break\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-case\">case</span> <span class=\"token class-name\">Level<span class=\"token punctuation\">.</span>High</span><span class=\"token operator\">:</span>\n      <span class=\"token class-name\">Console<span class=\"token punctuation\">.</span>WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"High level\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword keyword-break\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-java"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_enums_switch",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-java"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h4"
      },
      "text": "Why And When To Use Enums?",
      "level": "h4"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Use enums when you have values that you know aren't going to change, like month days, days, colors, deck of cards, etc.",
      "html": "<p>Use enums when you have values that you know aren't going to change, like month days, days, colors, deck of cards, etc.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is an enum in C#?",
      "html": "<p>What is an enum in C#?</p>"
    }
  ]
}