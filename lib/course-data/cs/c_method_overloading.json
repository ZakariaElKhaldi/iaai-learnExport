{
  "title": "C# Method Overloading",
  "url": "https://www.w3schools.com/cs/cs_method_overloading.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C# Method Overloading",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Method Overloading",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "With method overloading , multiple methods can have the same name with different parameters:",
      "html": "<p>With<strong> method overloading</strong>, multiple methods can have the same name with different\nparameters:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "int\n\nMyMethod\n(\nint\nx\n)\n\n\nfloat\n\nMyMethod\n(\nfloat\nx\n)\n\n\ndouble\n\nMyMethod\n(\ndouble\nx\n,\n\ndouble\ny\n)",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token return-type class-name\"><span class=\"token keyword keyword-int\">int</span></span> <span class=\"token function\">MyMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> x<span class=\"token punctuation\">)</span>\n<span class=\"token return-type class-name\"><span class=\"token keyword keyword-float\">float</span></span> <span class=\"token function\">MyMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-float\">float</span></span> x<span class=\"token punctuation\">)</span>\n<span class=\"token return-type class-name\"><span class=\"token keyword keyword-double\">double</span></span> <span class=\"token function\">MyMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> y<span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Consider the following example, which have two methods that add numbers of different type:",
      "html": "<p>Consider the following example, which have two methods that add numbers of different type:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_method_overloading",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "static\n\nint\n\nPlusMethodInt\n(\nint\nx\n,\n\nint\ny\n)\n\n\n{\n\n\nreturn\nx\n+\ny\n;\n\n\n}\n\n\n\nstatic\n\ndouble\n\nPlusMethodDouble\n(\ndouble\nx\n,\n\ndouble\ny\n)\n\n\n{\n\n\nreturn\nx\n+\ny\n;\n\n\n}\n\n\n\nstatic\n\nvoid\n\nMain\n(\nstring\n[\n]\nargs\n)\n\n\n{\n\n\nint\nmyNum1\n=\n\nPlusMethodInt\n(\n8\n,\n\n5\n)\n;\n\n\ndouble\nmyNum2\n=\n\nPlusMethodDouble\n(\n4.3\n,\n\n6.26\n)\n;\n\nConsole\n.\nWriteLine\n(\n\"Int: \"\n\n+\nmyNum1\n)\n;\n\nConsole\n.\nWriteLine\n(\n\"Double: \"\n\n+\nmyNum2\n)\n;\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-int\">int</span></span> <span class=\"token function\">PlusMethodInt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> y<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-return\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-double\">double</span></span> <span class=\"token function\">PlusMethodDouble</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> y<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-return\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-void\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> myNum1 <span class=\"token operator\">=</span> <span class=\"token function\">PlusMethodInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> myNum2 <span class=\"token operator\">=</span> <span class=\"token function\">PlusMethodDouble</span><span class=\"token punctuation\">(</span><span class=\"token number\">4.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Int: \"</span> <span class=\"token operator\">+</span> myNum1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Double: \"</span> <span class=\"token operator\">+</span> myNum2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_method_overloading",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Instead of defining two methods that should do the same thing, it is better to overload one.",
      "html": "<p>Instead of defining two methods that should do the same thing, it is better to overload one. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the example below, we overload the PlusMethod method to work for both int and double :",
      "html": "<p>In the example below, we overload the <code>PlusMethod</code> \nmethod to work for both <code>int</code> \nand <code>double</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_method_overloading2",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "static\n\nint\n\nPlusMethod\n(\nint\nx\n,\n\nint\ny\n)\n\n\n{\n\n\nreturn\nx\n+\ny\n;\n\n\n}\n\n\n\nstatic\n\ndouble\n\nPlusMethod\n(\ndouble\nx\n,\n\ndouble\ny\n)\n\n\n{\n\n\nreturn\nx\n+\ny\n;\n\n\n}\n\n\n\nstatic\n\nvoid\n\nMain\n(\nstring\n[\n]\nargs\n)\n\n\n{\n\n\nint\nmyNum1\n=\n\nPlusMethod\n(\n8\n,\n\n5\n)\n;\n\n\ndouble\nmyNum2\n=\n\nPlusMethod\n(\n4.3\n,\n\n6.26\n)\n;\n\nConsole\n.\nWriteLine\n(\n\"Int: \"\n\n+\nmyNum1\n)\n;\n\nConsole\n.\nWriteLine\n(\n\"Double: \"\n\n+\nmyNum2\n)\n;\n\n\n}",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" data-line=\"1,6,13,14\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-int\">int</span></span> <span class=\"token function\">PlusMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> y<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-return\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-double\">double</span></span> <span class=\"token function\">PlusMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> y<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-return\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-static\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword keyword-void\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> myNum1 <span class=\"token operator\">=</span> <span class=\"token function\">PlusMethod</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> myNum2 <span class=\"token operator\">=</span> <span class=\"token function\">PlusMethod</span><span class=\"token punctuation\">(</span><span class=\"token number\">4.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Int: \"</span> <span class=\"token operator\">+</span> myNum1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Double: \"</span> <span class=\"token operator\">+</span> myNum2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"1\" data-start=\"1\" style=\"top: 0px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"6\" data-start=\"6\" style=\"top: 110px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"13\" data-start=\"13\" style=\"top: 264px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"14\" data-start=\"14\" style=\"top: 286px; width: 789px;\"> \n</div></code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_method_overloading2",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: Multiple methods can have the same name as long as the number and/or type of parameters are different.",
      "html": "<p><strong>Note:</strong> Multiple methods can have the same name \n  as long as the number and/or type of parameters are different.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "True or False: With method overloading, multiple methods can have the same name with different parameters.",
      "html": "<p>True or False:<br/>With method overloading, multiple methods can have the same name with different parameters.</p>"
    }
  ]
}