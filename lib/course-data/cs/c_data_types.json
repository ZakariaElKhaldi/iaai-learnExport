{
  "title": "C# Data Types",
  "url": "https://www.w3schools.com/cs/cs_data_types.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "C# Data Types",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "C# Data Types",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "As explained in the variables chapter, a variable in C# must be a specified data type:",
      "html": "<p>As explained in the variables chapter, a variable in C# must be a specified data type:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_data_types",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "int\nmyNum\n=\n\n5\n;\n\n// Integer (whole number)\n\n\ndouble\nmyDoubleNum\n=\n\n5.99D\n;\n\n// Floating point number\n\n\nchar\nmyLetter\n=\n\n'D'\n;\n\n// Character\n\n\nbool\nmyBool\n=\n\ntrue\n;\n\n// Boolean\n\n\nstring\nmyText\n=\n\n\"Hello\"\n;\n\n// String",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> myNum <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">// Integer (whole number)</span>\n<span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> myDoubleNum <span class=\"token operator\">=</span> <span class=\"token number\">5.99D</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Floating point number</span>\n<span class=\"token class-name\"><span class=\"token keyword keyword-char\">char</span></span> myLetter <span class=\"token operator\">=</span> <span class=\"token char\">'D'</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// Character</span>\n<span class=\"token class-name\"><span class=\"token keyword keyword-bool\">bool</span></span> myBool <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// Boolean</span>\n<span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span></span> myText <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// String</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_data_types",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A data type specifies the size and type of variable values.",
      "html": "<p>A data type specifies the size and type of variable values.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It is important to use the correct data type for the corresponding variable; to avoid errors, to save time and memory, but it will also make your code more maintainable and readable. The most common data types are:",
      "html": "<p>It is important to use the correct data type for the corresponding variable; to avoid errors, to save time and memory, but it will also make your code more maintainable and readable. The most common \ndata types are:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:20%\">Data Type</th>\n<th style=\"width:17%\">Size</th>\n<th style=\"width:63%\">Description</th>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">int</code></td>\n<td>4 bytes</td>\n<td>Stores whole numbers from -2,147,483,648 to 2,147,483,647</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">long</code></td>\n<td>8 bytes</td>\n<td>Stores whole numbers from -9,223,372,036,854,775,808 to \n9,223,372,036,854,775,807</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">float</code></td>\n<td>4 bytes</td>\n<td>Stores fractional numbers. Sufficient for \nstoring 6 to 7 decimal digits</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">double</code></td>\n<td>8 bytes</td>\n<td>Stores fractional numbers. Sufficient for \nstoring 15 decimal digits</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">bool</code></td>\n<td>1 byte</td>\n<td>Stores true or false values</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">char</code></td>\n<td>2 bytes</td>\n<td>Stores a single character/letter, surrounded by single quotes</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">string</code></td>\n<td>2 bytes per character</td>\n<td>Stores a sequence of characters, surrounded by double quotes</td>\n</tr>\n</tbody>\n</table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Numbers",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Number types are divided into two groups:",
      "html": "<p>Number types are divided into two groups:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Integer types stores whole numbers, positive or negative (such as 123 or -456), without decimals. Valid types are int and long . Which type you should use, depends on the numeric value.",
      "html": "<p><strong>Integer types</strong> stores whole numbers, positive or negative (such as 123 or -456), without decimals. \nValid types are <code>int</code> \nand <code>long</code>. Which type you should use, depends on the numeric value.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Floating point types represents numbers with a fractional part, containing one or more decimals. Valid types are float and double .",
      "html": "<p><strong>Floating point types</strong> represents numbers with a fractional \npart, containing one or more decimals. Valid types are <code>float</code> and <code>double</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Even though there are many numeric types in C#, the most used for numbers are int (for whole numbers) and double (for floating point numbers). However, we will describe them all as you continue to read.",
      "html": "<p>Even though there are many numeric types in C#, the most used for numbers \nare <code>int</code> (for whole numbers) and <code>double</code> (for floating point numbers). However, we will describe them all as you continue to \nread.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Integer Types",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Int",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The int data type can store whole numbers from -2147483648 to 2147483647. In general, and in our tutorial, the int data type is the preferred data type when we create variables with a numeric value.",
      "html": "<p>The <code>int</code> data type can store whole numbers from -2147483648 to 2147483647. <!-- This is used when short and byte is not large enough. --> In general, and in our tutorial, the <code>int</code> data type is \nthe preferred data type when we create variables with a numeric value.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_type_int",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "int\nmyNum\n=\n\n100000\n;\n\nConsole\n.\nWriteLine\n(\nmyNum\n)\n;",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-int\">int</span></span> myNum <span class=\"token operator\">=</span> <span class=\"token number\">100000</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>myNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_type_int",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Long",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The long data type can store whole numbers from -9223372036854775808 to 9223372036854775807. This is used when int is not large enough to store the value. Note that you should end the value with an \"L\":",
      "html": "<p>The <code>long</code> data type can store whole numbers from -9223372036854775808 to 9223372036854775807. This is used when <code>int</code> is not large enough to store the value. Note that you should end the value with an \"L\":</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_type_long",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "long\nmyNum\n=\n\n15000000000L\n;\n\nConsole\n.\nWriteLine\n(\nmyNum\n)\n;",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-long\">long</span></span> myNum <span class=\"token operator\">=</span> <span class=\"token number\">15000000000L</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>myNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_type_long",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Floating Point Types",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You should use a floating point type whenever you need a number with a decimal, such as 9.99 or 3.14515.",
      "html": "<p>You should use a floating point type whenever you need a number with a decimal, such as 9.99 or 3.14515.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The float and double data types can store fractional numbers. Note that you should end the value with an \"F\" for floats and \"D\" for doubles:",
      "html": "<p>The <code>float</code> and <code>double</code> data types can store fractional numbers. Note that you should end the value with an \"F\" for floats and \"D\" for doubles:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_type_float",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "float\nmyNum\n=\n\n5.75F\n;\n\nConsole\n.\nWriteLine\n(\nmyNum\n)\n;",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-float\">float</span></span> myNum <span class=\"token operator\">=</span> <span class=\"token number\">5.75F</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>myNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_type_float",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_type_double",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "double\nmyNum\n=\n\n19.99D\n;\n\nConsole\n.\nWriteLine\n(\nmyNum\n)\n;",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> myNum <span class=\"token operator\">=</span> <span class=\"token number\">19.99D</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>myNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_type_double",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Use float or double ?",
      "html": "<p>Use <code>float</code> or <code>double</code>?</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The precision of a floating point value indicates how many digits the value can have after the decimal point. The precision of float is only six or seven decimal digits, while double variables have a precision of about 15 digits. Therefore it is safer to use double for most calculations.",
      "html": "<p>The <strong>precision</strong> of a floating point value indicates how many digits the value can have \nafter the decimal point.\nThe precision of <code>float</code> is only six or seven \ndecimal digits, while <code>double</code> variables have a precision \nof about 15 digits. Therefore it is safer to use <code>double</code> for most calculations.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Scientific Numbers",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A floating point number can also be a scientific number with an \"e\" to indicate the power of 10:",
      "html": "<p>A floating point number can also be a scientific number with an \"e\" to indicate the power of 10:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_type_scientific",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "float\nf1\n=\n\n35e3F\n;\n\n\ndouble\nd1\n=\n\n12E4D\n;\n\nConsole\n.\nWriteLine\n(\nf1\n)\n;\n\nConsole\n.\nWriteLine\n(\nd1\n)\n;",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-float\">float</span></span> f1 <span class=\"token operator\">=</span> <span class=\"token number\">35e3F</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword keyword-double\">double</span></span> d1 <span class=\"token operator\">=</span> <span class=\"token number\">12E4D</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>f1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>d1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_type_scientific",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Booleans",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A boolean data type is declared with the bool keyword and can only take the values true or false :",
      "html": "<p>A boolean data type is declared with the <code>bool</code> keyword and can only take the values <code>true</code> or <code>false</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_type_bool",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "bool\nisCSharpFun\n=\n\ntrue\n;\n\n\nbool\nisFishTasty\n=\n\nfalse\n;\n\nConsole\n.\nWriteLine\n(\nisCSharpFun\n)\n;\n\n// Outputs True\n\nConsole\n.\nWriteLine\n(\nisFishTasty\n)\n;\n\n// Outputs False",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-bool\">bool</span></span> isCSharpFun <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword keyword-bool\">bool</span></span> isFishTasty <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>isCSharpFun<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// Outputs True</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>isFishTasty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// Outputs False</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_type_bool",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Boolean values are mostly used for conditional testing, which you will learn more about in a later chapter.",
      "html": "<p>Boolean values are mostly used for conditional testing, which you will learn more about in a later chapter.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Characters",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The char data type is used to store a single character. The character must be surrounded by single quotes, like 'A' or 'c':",
      "html": "<p>The <code>char</code> data type is used to store a \n<strong>single</strong> character. The character must be \nsurrounded by single quotes, like 'A' or 'c':</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_type_char",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "char\nmyGrade\n=\n\n'B'\n;\n\nConsole\n.\nWriteLine\n(\nmyGrade\n)\n;",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-char\">char</span></span> myGrade <span class=\"token operator\">=</span> <span class=\"token char\">'B'</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>myGrade<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_type_char",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Strings",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The string data type is used to store a sequence of characters (text). String values must be surrounded by double quotes:",
      "html": "<p>The <code>string</code> data type is used to store a sequence of characters (text). String values must be surrounded by double quotes:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "csharp",
        "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_type_string",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-csharp"
        ],
        "isNotranslate": false
      },
      "code": "string\ngreeting\n=\n\n\"Hello World\"\n;\n\nConsole\n.\nWriteLine\n(\ngreeting\n)\n;",
      "language": "csharp",
      "code_html": "<pre class=\"w3-white language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword keyword-string\">string</span></span> greeting <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>greeting<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-csharp"
      ],
      "tryItLink": "https://www.w3schools.com/cs/trycs.php?filename=demo_type_string",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-csharp"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Which C# data type is used to store a single character?",
      "html": "<p>Which C# data type is used to store a single character?</p>"
    }
  ]
}