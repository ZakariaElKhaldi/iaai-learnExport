{
  "title": "How To Draw on Scroll",
  "url": "https://www.w3schools.com/howto/howto_js_scrolldrawing.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "How TO - Scroll Drawing",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Learn how to draw on scroll using JavaScript and SVG.",
      "html": "<p class=\"intro\">Learn how to draw on scroll using JavaScript and SVG.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Try it Yourself \u00bb",
          "href": "https://www.w3schools.com/tryit.asp?filename=tryhow_js_svg_scrolldrawing",
          "title": ""
        }
      ],
      "text": "Try it Yourself \u00bb",
      "html": "<p><a class=\"ws-btn\" href=\"tryit.asp?filename=tryhow_js_svg_scrolldrawing\" target=\"_blank\">Try it Yourself \u00bb</a></p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Scroll Drawing",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Using SVG and JavaScript to draw a triangle on scroll - note that it has to be a <path> element:",
      "html": "<p>Using SVG and JavaScript to draw a triangle on scroll - note that it has to be a \n&lt;path&gt; element:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n<svg id=\"mySVG\">\u00a0 <path fill=\"none\" stroke=\"red\" stroke-width=\"3\" \nid=\"triangle\" d=\"M150 0 L75 200 L225 200 Z\"/></svg><script>// Get the id of the \n<path> element and the length of <path>var triangle = \ndocument.getElementById(\"triangle\");var length = triangle.getTotalLength();\n// The start position of the drawingtriangle.style.strokeDasharray = \nlength;// Hide the triangle by offsetting dash. Remove this line to \nshow the triangle before scroll drawtriangle.style.strokeDashoffset = \nlength;// Find scroll percentage on scroll (using cross-browser \nproperties), and offset dash same amount as percentage scrolled\nwindow.addEventListener(\"scroll\", myFunction);function myFunction() \n{\u00a0 var scrollpercent = (document.body.scrollTop + \ndocument.documentElement.scrollTop) / (document.documentElement.scrollHeight \n- document.documentElement.clientHeight);\u00a0 var draw = length * \nscrollpercent;\u00a0 // Reverse the drawing (when scrolling upwards)\u00a0 \ntriangle.style.strokeDashoffset = length - draw;}</script> ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"mySVG\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"none\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"red\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"3\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"triangle\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"M150 0 L75 200 L225 200 Z\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// Get the id of the \n<path> element and the length of <path>",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"triangle\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "getTotalLength",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// The start position of the drawing",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "style",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "strokeDasharray",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "// Hide the triangle by offsetting dash. Remove this line to \nshow the triangle before scroll draw",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "style",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "strokeDashoffset",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "// Find scroll percentage on scroll (using cross-browser \nproperties), and offset dash same amount as percentage scrolled",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "addEventListener",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"scroll\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "body",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "scrollTop",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "documentElement",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "scrollTop",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "documentElement",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "scrollHeight",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "documentElement",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "clientHeight",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "// Reverse the drawing (when scrolling upwards)",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "style",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "strokeDashoffset",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "<svg id=\"mySVG\">\u00a0 <path fill=\"none\" stroke=\"red\" stroke-width=\"3\"\nid=\"triangle\" d=\"M150 0 L75 200 L225 200 Z\"/></svg><script>// Get the id of the\n<path> element and the length of <path>var triangle =\ndocument.getElementById(\"triangle\");var length = triangle.getTotalLength();\n// The start position of the drawingtriangle.style.strokeDasharray =\nlength;// Hide the triangle by offsetting dash. Remove this line to\nshow the triangle before scroll drawtriangle.style.strokeDashoffset =\nlength;// Find scroll percentage on scroll (using cross-browser\nproperties), and offset dash same amount as percentage scrolled\nwindow.addEventListener(\"scroll\", myFunction);function myFunction()\n{\u00a0 var scrollpercent = (document.body.scrollTop +\ndocument.documentElement.scrollTop) / (document.documentElement.scrollHeight\n- document.documentElement.clientHeight);\u00a0 var draw = length *\nscrollpercent;\u00a0 // Reverse the drawing (when scrolling upwards)\ntriangle.style.strokeDashoffset = length - draw;}</script>",
      "syntax_highlighting": [
        {
          "text": "\n<svg id=\"mySVG\">\u00a0 <path fill=\"none\" stroke=\"red\" stroke-width=\"3\" \nid=\"triangle\" d=\"M150 0 L75 200 L225 200 Z\"/></svg><script>// Get the id of the \n<path> element and the length of <path>var triangle = \ndocument.getElementById(\"triangle\");var length = triangle.getTotalLength();\n// The start position of the drawingtriangle.style.strokeDasharray = \nlength;// Hide the triangle by offsetting dash. Remove this line to \nshow the triangle before scroll drawtriangle.style.strokeDashoffset = \nlength;// Find scroll percentage on scroll (using cross-browser \nproperties), and offset dash same amount as percentage scrolled\nwindow.addEventListener(\"scroll\", myFunction);function myFunction() \n{\u00a0 var scrollpercent = (document.body.scrollTop + \ndocument.documentElement.scrollTop) / (document.documentElement.scrollHeight \n- document.documentElement.clientHeight);\u00a0 var draw = length * \nscrollpercent;\u00a0 // Reverse the drawing (when scrolling upwards)\u00a0 \ntriangle.style.strokeDashoffset = length - draw;}</script> ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"mySVG\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"none\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"red\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"3\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"triangle\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"M150 0 L75 200 L225 200 Z\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// Get the id of the \n<path> element and the length of <path>",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"triangle\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "getTotalLength",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// The start position of the drawing",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "style",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "strokeDasharray",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "// Hide the triangle by offsetting dash. Remove this line to \nshow the triangle before scroll draw",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "style",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "strokeDashoffset",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "// Find scroll percentage on scroll (using cross-browser \nproperties), and offset dash same amount as percentage scrolled",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "addEventListener",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"scroll\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "body",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "scrollTop",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "documentElement",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "scrollTop",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "documentElement",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "scrollHeight",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "documentElement",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "clientHeight",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "// Reverse the drawing (when scrolling upwards)",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "style",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "strokeDashoffset",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>&lt;svg id=<span class=\"jsstringcolor\" style=\"color:green\">\"mySVG\"</span>&gt;<br/>\u00a0 &lt;path fill=<span class=\"jsstringcolor\" style=\"color:green\">\"none\"</span> stroke=<span class=\"jsstringcolor\" style=\"color:green\">\"red\"</span> stroke-width=<span class=\"jsstringcolor\" style=\"color:green\">\"3\"</span> \nid=<span class=\"jsstringcolor\" style=\"color:green\">\"triangle\"</span> d=<span class=\"jsstringcolor\" style=\"color:green\">\"M150 0 L75 200 L225 200 Z\"</span>/&gt;<br/>&lt;/svg&gt;<br/><br/>&lt;script&gt;<br/><span class=\"commentcolor\" style=\"color:slategray\">// Get the id of the \n&lt;path&gt; element and the length of &lt;path&gt;<br/></span><span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> triangle = \ndocument.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"triangle\"</span>);<br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> length = triangle.<span class=\"jspropertycolor\" style=\"color:black\">getTotalLength</span>();<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span><br/><span class=\"commentcolor\" style=\"color:slategray\">// The start position of the drawing<br/></span>triangle.<span class=\"jspropertycolor\" style=\"color:black\">style</span>.<span class=\"jspropertycolor\" style=\"color:black\">strokeDasharray</span> = \nlength;<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Hide the triangle by offsetting dash. Remove this line to \nshow the triangle before scroll draw<br/></span>triangle.<span class=\"jspropertycolor\" style=\"color:black\">style</span>.<span class=\"jspropertycolor\" style=\"color:black\">strokeDashoffset</span> = \nlength;<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">// Find scroll percentage on scroll (using cross-browser \nproperties), and offset dash same amount as percentage scrolled<br/></span>\nwindow.<span class=\"jspropertycolor\" style=\"color:black\">addEventListener</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"scroll\"</span>, myFunction);<br/><br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> myFunction() <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>{<br/>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> scrollpercent = (document.<span class=\"jspropertycolor\" style=\"color:black\">body</span>.<span class=\"jspropertycolor\" style=\"color:black\">scrollTop</span> + \ndocument.<span class=\"jspropertycolor\" style=\"color:black\">documentElement</span>.<span class=\"jspropertycolor\" style=\"color:black\">scrollTop</span>) / (document.<span class=\"jspropertycolor\" style=\"color:black\">documentElement</span>.<span class=\"jspropertycolor\" style=\"color:black\">scrollHeight</span> <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>- document.<span class=\"jspropertycolor\" style=\"color:black\">documentElement</span>.<span class=\"jspropertycolor\" style=\"color:black\">clientHeight</span>);<br/><br/>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> draw = length * \nscrollpercent;<br/><br/>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Reverse the drawing (when scrolling upwards)<br/></span>\u00a0 \ntriangle.<span class=\"jspropertycolor\" style=\"color:black\">style</span>.<span class=\"jspropertycolor\" style=\"color:black\">strokeDashoffset</span> = length - draw;<br/>}<br/>&lt;/script&gt;<br/> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n<svg id=\"mySVG\">\u00a0 <path fill=\"none\" stroke=\"red\" stroke-width=\"3\" \nid=\"triangle\" d=\"M150 0 L75 200 L225 200 Z\"/></svg><script>// Get the id of the \n<path> element and the length of <path>var triangle = \ndocument.getElementById(\"triangle\");var length = triangle.getTotalLength();\n// The start position of the drawingtriangle.style.strokeDasharray = \nlength;// Hide the triangle by offsetting dash. Remove this line to \nshow the triangle before scroll drawtriangle.style.strokeDashoffset = \nlength;// Find scroll percentage on scroll (using cross-browser \nproperties), and offset dash same amount as percentage scrolled\nwindow.addEventListener(\"scroll\", myFunction);function myFunction() \n{\u00a0 var scrollpercent = (document.body.scrollTop + \ndocument.documentElement.scrollTop) / (document.documentElement.scrollHeight \n- document.documentElement.clientHeight);\u00a0 var draw = length * \nscrollpercent;\u00a0 // Reverse the drawing (when scrolling upwards)\u00a0 \ntriangle.style.strokeDashoffset = length - draw;}</script> ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"mySVG\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"none\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"red\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"3\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"triangle\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"M150 0 L75 200 L225 200 Z\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// Get the id of the \n<path> element and the length of <path>",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"triangle\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "getTotalLength",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// The start position of the drawing",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "style",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "strokeDasharray",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "// Hide the triangle by offsetting dash. Remove this line to \nshow the triangle before scroll draw",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "style",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "strokeDashoffset",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "// Find scroll percentage on scroll (using cross-browser \nproperties), and offset dash same amount as percentage scrolled",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "addEventListener",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"scroll\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "body",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "scrollTop",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "documentElement",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "scrollTop",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "documentElement",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "scrollHeight",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "documentElement",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "clientHeight",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "// Reverse the drawing (when scrolling upwards)",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "style",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "strokeDashoffset",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Learn more about SVG in our SVG Tutorial",
          "href": "https://www.w3schools.com/graphics/svg_intro.asp",
          "title": ""
        }
      ],
      "text": "Tip: Learn more about SVG in our SVG Tutorial .",
      "html": "<p><strong>Tip:</strong> <a href=\"/graphics/svg_intro.asp\">Learn more about SVG in our SVG Tutorial</a>.</p>"
    }
  ]
}