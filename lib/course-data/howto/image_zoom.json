{
  "title": "How To Create an Image Zoom",
  "url": "https://www.w3schools.com/howto/howto_js_image_zoom.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "How TO - Image Zoom",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Learn how to create an image zoom.",
      "html": "<p class=\"intro\">Learn how to create an image zoom.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Image Zoom",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Mouse over the image:",
      "html": "<p>Mouse over the image:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Zoom Preview:",
      "html": "<p>Zoom Preview:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Try it Yourself \u00bb",
          "href": "https://www.w3schools.com/tryit.asp?filename=tryhow_js_image_zoom",
          "title": ""
        }
      ],
      "text": "Try it Yourself \u00bb",
      "html": "<p><a class=\"ws-btn\" href=\"tryit.asp?filename=tryhow_js_image_zoom\" target=\"_blank\">Try it Yourself \u00bb</a></p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Create an Image Zoom",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h5"
      },
      "text": "Step 1) Add HTML:",
      "level": "h5"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "<div class=\"img-zoom-container\">",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " class=\"img-zoom-container\"",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"img-zoom-container\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<img \n  id=\"myimage\" src=\"img_girl.jpg\" width=\"300\" height=\"240\" \n  alt=\"Girl\">",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " \n  id=\"myimage\" src=\"img_girl.jpg\" width=\"300\" height=\"240\" \n  alt=\"Girl\"",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"myimage\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": "=\"img_girl.jpg\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": "=\"300\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": "=\"240\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": "=\"Girl\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<div \n  id=\"myresult\" class=\"img-zoom-result\">",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " \n  id=\"myresult\" class=\"img-zoom-result\"",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"myresult\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": "=\"img-zoom-result\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</div>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</div>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "htmlHigh"
        ],
        "isNotranslate": true
      },
      "code": "<div class=\"img-zoom-container\">\n\u00a0 <img \nid=\"myimage\" src=\"img_girl.jpg\" width=\"300\" height=\"240\"\nalt=\"Girl\">\n\u00a0 <div \nid=\"myresult\" class=\"img-zoom-result\"></div>\n</div>",
      "syntax_highlighting": [
        {
          "text": "<div class=\"img-zoom-container\">",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " class=\"img-zoom-container\"",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"img-zoom-container\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<img \n  id=\"myimage\" src=\"img_girl.jpg\" width=\"300\" height=\"240\" \n  alt=\"Girl\">",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " \n  id=\"myimage\" src=\"img_girl.jpg\" width=\"300\" height=\"240\" \n  alt=\"Girl\"",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"myimage\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": "=\"img_girl.jpg\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": "=\"300\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": "=\"240\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": "=\"Girl\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<div \n  id=\"myresult\" class=\"img-zoom-result\">",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " \n  id=\"myresult\" class=\"img-zoom-result\"",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"myresult\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": "=\"img-zoom-result\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</div>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</div>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate htmlHigh\">\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>div<span class=\"attributecolor\" style=\"color:green\"> class<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"img-zoom-container\"</span></span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\u00a0 <span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>img<span class=\"attributecolor\" style=\"color:green\"> \n  id<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"myimage\"</span> src<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"img_girl.jpg\"</span> width<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"300\"</span> height<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"240\"</span> \n  alt<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"Girl\"</span></span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\u00a0 <span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>div<span class=\"attributecolor\" style=\"color:green\"> \n  id<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"myresult\"</span> class<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"img-zoom-result\"</span></span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/div<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/div<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/> </div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "<div class=\"img-zoom-container\">",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " class=\"img-zoom-container\"",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"img-zoom-container\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<img \n  id=\"myimage\" src=\"img_girl.jpg\" width=\"300\" height=\"240\" \n  alt=\"Girl\">",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " \n  id=\"myimage\" src=\"img_girl.jpg\" width=\"300\" height=\"240\" \n  alt=\"Girl\"",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"myimage\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": "=\"img_girl.jpg\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": "=\"300\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": "=\"240\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": "=\"Girl\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<div \n  id=\"myresult\" class=\"img-zoom-result\">",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " \n  id=\"myresult\" class=\"img-zoom-result\"",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"myresult\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": "=\"img-zoom-result\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</div>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</div>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h5"
      },
      "text": "Step 2) Add CSS:",
      "level": "h5"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The container must have a \"relative\" positioning.",
      "html": "<p>The container must have a \"relative\" positioning.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  * {box-sizing: border-box;}.img-zoom-container {\u00a0 \n  position: relative;}.img-zoom-lens {\u00a0 position: absolute;\u00a0 border: 1px solid \n  #d4d4d4;\u00a0 /*set the size of the lens:*/\u00a0 width: 40px;\u00a0 \n  height: 40px;}.img-zoom-result \n  {\u00a0 border: 1px solid #d4d4d4;\u00a0 /*set the size of the result \n  div:*/\u00a0 width: 300px;\u00a0 height: 300px;} ",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "box-sizing: border-box;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": border-box;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0 \n  position: relative;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": relative;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0 position: absolute;\u00a0 border: 1px solid \n  #d4d4d4;\u00a0 /*set the size of the lens:*/\u00a0 width: 40px;\u00a0 \n  height: 40px;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": absolute;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": 1px solid \n  #d4d4d4;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "/*set the size of the lens:*/",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": ": 40px;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": 40px;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0 border: 1px solid #d4d4d4;\u00a0 /*set the size of the result \n  div:*/\u00a0 width: 300px;\u00a0 height: 300px;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": 1px solid #d4d4d4;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "/*set the size of the result \n  div:*/",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": ": 300px;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": 300px;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "cssHigh"
        ],
        "isNotranslate": true
      },
      "code": "* {box-sizing: border-box;}.img-zoom-container {\nposition: relative;}.img-zoom-lens {\u00a0 position: absolute;\u00a0 border: 1px solid\n#d4d4d4;\u00a0 /*set the size of the lens:*/\u00a0 width: 40px;\nheight: 40px;}.img-zoom-result\n{\u00a0 border: 1px solid #d4d4d4;\u00a0 /*set the size of the result\ndiv:*/\u00a0 width: 300px;\u00a0 height: 300px;}",
      "syntax_highlighting": [
        {
          "text": "\n  * {box-sizing: border-box;}.img-zoom-container {\u00a0 \n  position: relative;}.img-zoom-lens {\u00a0 position: absolute;\u00a0 border: 1px solid \n  #d4d4d4;\u00a0 /*set the size of the lens:*/\u00a0 width: 40px;\u00a0 \n  height: 40px;}.img-zoom-result \n  {\u00a0 border: 1px solid #d4d4d4;\u00a0 /*set the size of the result \n  div:*/\u00a0 width: 300px;\u00a0 height: 300px;} ",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "box-sizing: border-box;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": border-box;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0 \n  position: relative;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": relative;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0 position: absolute;\u00a0 border: 1px solid \n  #d4d4d4;\u00a0 /*set the size of the lens:*/\u00a0 width: 40px;\u00a0 \n  height: 40px;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": absolute;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": 1px solid \n  #d4d4d4;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "/*set the size of the lens:*/",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": ": 40px;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": 40px;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0 border: 1px solid #d4d4d4;\u00a0 /*set the size of the result \n  div:*/\u00a0 width: 300px;\u00a0 height: 300px;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": 1px solid #d4d4d4;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "/*set the size of the result \n  div:*/",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": ": 300px;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": 300px;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate cssHigh\"><span class=\"cssselectorcolor\" style=\"color:#905\">\n  * <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\">box-sizing<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> border-box<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span><br/><br/>.img-zoom-container <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0 \n  position<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> relative<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span><br/><br/>.img-zoom-lens <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0 position<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> absolute<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 border<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 1px solid \n  #d4d4d4<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">/*set the size of the lens:*/</span><br/>\u00a0 width<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 40px<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 \n  height<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 40px<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span><br/><br/>.img-zoom-result \n  <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0 border<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 1px solid #d4d4d4<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">/*set the size of the result \n  div:*/</span><br/>\u00a0 width<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 300px<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 height<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 300px<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  * {box-sizing: border-box;}.img-zoom-container {\u00a0 \n  position: relative;}.img-zoom-lens {\u00a0 position: absolute;\u00a0 border: 1px solid \n  #d4d4d4;\u00a0 /*set the size of the lens:*/\u00a0 width: 40px;\u00a0 \n  height: 40px;}.img-zoom-result \n  {\u00a0 border: 1px solid #d4d4d4;\u00a0 /*set the size of the result \n  div:*/\u00a0 width: 300px;\u00a0 height: 300px;} ",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "box-sizing: border-box;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": border-box;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0 \n  position: relative;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": relative;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0 position: absolute;\u00a0 border: 1px solid \n  #d4d4d4;\u00a0 /*set the size of the lens:*/\u00a0 width: 40px;\u00a0 \n  height: 40px;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": absolute;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": 1px solid \n  #d4d4d4;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "/*set the size of the lens:*/",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": ": 40px;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": 40px;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0 border: 1px solid #d4d4d4;\u00a0 /*set the size of the result \n  div:*/\u00a0 width: 300px;\u00a0 height: 300px;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": 1px solid #d4d4d4;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "/*set the size of the result \n  div:*/",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": ": 300px;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": 300px;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h5"
      },
      "text": "Step 3) Add JavaScript:",
      "level": "h5"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  function imageZoom(imgID, resultID) {\u00a0 var img, lens, result, cx, cy;\u00a0 \n  img = document.getElementById(imgID);\u00a0 result = \n  document.getElementById(resultID);\u00a0 /* Create lens: */\u00a0 lens = \n  document.createElement(\"DIV\");\u00a0 lens.setAttribute(\"class\", \"img-zoom-lens\");\u00a0 \n  /* Insert lens: */\u00a0 img.parentElement.insertBefore(lens, img);\u00a0 \n  /* Calculate the ratio between result DIV and lens: */\u00a0 cx = \n  result.offsetWidth / lens.offsetWidth;\u00a0 cy = result.offsetHeight / \n  lens.offsetHeight;\u00a0 /* Set background properties for the result DIV */\u00a0 \n  result.style.backgroundImage = \"url('\" + img.src + \"')\";\u00a0 \n  result.style.backgroundSize = (img.width * cx) + \"px \" + (img.height * cy) + \"px\";\u00a0 \n  /* Execute a function when someone moves the cursor over the image, or the \n  lens: */\u00a0 lens.addEventListener(\"mousemove\", moveLens);\u00a0 \n  img.addEventListener(\"mousemove\", moveLens);\u00a0 \n  /* And also for touch screens: */\u00a0 lens.addEventListener(\"touchmove\", moveLens);\u00a0 \n  img.addEventListener(\"touchmove\", moveLens);\u00a0 function moveLens(e) {\u00a0\u00a0\u00a0 \n  var pos, x, y;\u00a0\u00a0\u00a0 /* Prevent any other actions that may \n  occur when moving over the image */\u00a0\u00a0\u00a0 e.preventDefault();\u00a0\u00a0\u00a0 /* \n  Get the cursor's x and y positions: */\u00a0\u00a0\u00a0 \n  pos = getCursorPos(e);\u00a0\u00a0\u00a0 /* Calculate the position of the \n  lens: */\u00a0\u00a0\u00a0 x = pos.x - (lens.offsetWidth / 2);\u00a0\u00a0\u00a0 \n  y = pos.y - (lens.offsetHeight / 2);\u00a0\u00a0\u00a0 /* Prevent the lens \n  from being positioned outside the image: */\u00a0\u00a0\u00a0 if (x > \n  img.width - lens.offsetWidth) {x = img.width - lens.offsetWidth;}\u00a0\u00a0\u00a0 \n  if (x < 0) {x = 0;}\u00a0\u00a0\u00a0 if (y > img.height - \n  lens.offsetHeight) {y = img.height - lens.offsetHeight;}\u00a0\u00a0\u00a0 \n  if (y < 0) {y = 0;}\u00a0\u00a0\u00a0 /* Set the position of the lens: */\u00a0\u00a0\u00a0 \n  lens.style.left = x + \"px\";\u00a0\u00a0\u00a0 lens.style.top = y + \"px\";\u00a0\u00a0\u00a0 \n  /* Display what the lens \"sees\": */\u00a0\u00a0\u00a0 \n  result.style.backgroundPosition = \"-\" + (x * cx) + \"px -\" + (y * cy) + \"px\";\u00a0 \n  }\u00a0 function getCursorPos(e) {\u00a0\u00a0\u00a0 var a, x = 0, y = \n  0;\u00a0\u00a0\u00a0 e = e || window.event;\u00a0\u00a0\u00a0 /* Get \n  the x and y positions of the image: */\u00a0\u00a0\u00a0 a = \n  img.getBoundingClientRect();\u00a0\u00a0\u00a0 /* Calculate the cursor's x \n  and y coordinates, relative to the image: */\u00a0\u00a0\u00a0 x = e.pageX \n  - a.left;\u00a0\u00a0\u00a0 y = e.pageY - a.top;\u00a0\u00a0\u00a0 \n  /* Consider any page scrolling: */\u00a0\u00a0\u00a0 x = x - \n  window.pageXOffset;\u00a0\u00a0\u00a0 y = y - window.pageYOffset;\u00a0\u00a0\u00a0 \n  return {x : x, y : y};\u00a0 }} ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "/* Create lens: */",
            "color": "rgb(238, 153, 0)",
            "class": "jsregexpcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "createElement",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"DIV\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "setAttribute",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"class\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"img-zoom-lens\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "/* Insert lens: */",
            "color": "rgb(238, 153, 0)",
            "class": "jsregexpcolor"
          },
          {
            "text": "parentElement",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "insertBefore",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "/* Calculate the ratio between result DIV and lens: */",
            "color": "rgb(238, 153, 0)",
            "class": "jsregexpcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "offsetWidth",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "offsetWidth",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "offsetHeight",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "offsetHeight",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "/* Set background properties for the result DIV */",
            "color": "rgb(238, 153, 0)",
            "class": "jsregexpcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "style",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "backgroundImage",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"url('\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "src",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"')\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "style",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "backgroundSize",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "width",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"px \"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "height",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"px\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "/* Execute a function when someone moves the cursor over the image, or the \n  lens: */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "addEventListener",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"mousemove\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "addEventListener",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"mousemove\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "/* And also for touch screens: */",
            "color": "rgb(238, 153, 0)",
            "class": "jsregexpcolor"
          },
          {
            "text": "addEventListener",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"touchmove\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "addEventListener",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"touchmove\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "/* Prevent any other actions that may \n  occur when moving over the image */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "preventDefault",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "/* \n  Get the cursor's x and y positions: */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "/* Calculate the position of the \n  lens: */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "x",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "offsetWidth",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "y",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "offsetHeight",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "/* Prevent the lens \n  from being positioned outside the image: */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "width",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "offsetWidth",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "width",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "offsetWidth",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "height",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "offsetHeight",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "height",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "offsetHeight",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "/* Set the position of the lens: */",
            "color": "rgb(238, 153, 0)",
            "class": "jsregexpcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "style",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "left",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"px\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "style",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "top",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"px\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "/* Display what the lens \"sees\": */",
            "color": "rgb(238, 153, 0)",
            "class": "jsregexpcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "style",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "backgroundPosition",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"-\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"px -\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"px\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "event",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "/* Get \n  the x and y positions of the image: */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getBoundingClientRect",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "/* Calculate the cursor's x \n  and y coordinates, relative to the image: */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "pageX",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "left",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "pageY",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "top",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "/* Consider any page scrolling: */",
            "color": "rgb(238, 153, 0)",
            "class": "jsregexpcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "pageXOffset",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "pageYOffset",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "function imageZoom(imgID, resultID) {\u00a0 var img, lens, result, cx, cy;\nimg = document.getElementById(imgID);\u00a0 result =\ndocument.getElementById(resultID);\u00a0 /* Create lens: */\u00a0 lens =\ndocument.createElement(\"DIV\");\u00a0 lens.setAttribute(\"class\", \"img-zoom-lens\");\n/* Insert lens: */\u00a0 img.parentElement.insertBefore(lens, img);\n/* Calculate the ratio between result DIV and lens: */\u00a0 cx =\nresult.offsetWidth / lens.offsetWidth;\u00a0 cy = result.offsetHeight /\nlens.offsetHeight;\u00a0 /* Set background properties for the result DIV */\nresult.style.backgroundImage = \"url('\" + img.src + \"')\";\nresult.style.backgroundSize = (img.width * cx) + \"px \" + (img.height * cy) + \"px\";\n/* Execute a function when someone moves the cursor over the image, or the\nlens: */\u00a0 lens.addEventListener(\"mousemove\", moveLens);\nimg.addEventListener(\"mousemove\", moveLens);\n/* And also for touch screens: */\u00a0 lens.addEventListener(\"touchmove\", moveLens);\nimg.addEventListener(\"touchmove\", moveLens);\u00a0 function moveLens(e) {\nvar pos, x, y;\u00a0\u00a0\u00a0 /* Prevent any other actions that may\noccur when moving over the image */\u00a0\u00a0\u00a0 e.preventDefault();\u00a0\u00a0\u00a0 /*\nGet the cursor's x and y positions: */\npos = getCursorPos(e);\u00a0\u00a0\u00a0 /* Calculate the position of the\nlens: */\u00a0\u00a0\u00a0 x = pos.x - (lens.offsetWidth / 2);\ny = pos.y - (lens.offsetHeight / 2);\u00a0\u00a0\u00a0 /* Prevent the lens\nfrom being positioned outside the image: */\u00a0\u00a0\u00a0 if (x >\nimg.width - lens.offsetWidth) {x = img.width - lens.offsetWidth;}\nif (x < 0) {x = 0;}\u00a0\u00a0\u00a0 if (y > img.height -\nlens.offsetHeight) {y = img.height - lens.offsetHeight;}\nif (y < 0) {y = 0;}\u00a0\u00a0\u00a0 /* Set the position of the lens: */\nlens.style.left = x + \"px\";\u00a0\u00a0\u00a0 lens.style.top = y + \"px\";\n/* Display what the lens \"sees\": */\nresult.style.backgroundPosition = \"-\" + (x * cx) + \"px -\" + (y * cy) + \"px\";\n}\u00a0 function getCursorPos(e) {\u00a0\u00a0\u00a0 var a, x = 0, y =\n0;\u00a0\u00a0\u00a0 e = e || window.event;\u00a0\u00a0\u00a0 /* Get\nthe x and y positions of the image: */\u00a0\u00a0\u00a0 a =\nimg.getBoundingClientRect();\u00a0\u00a0\u00a0 /* Calculate the cursor's x\nand y coordinates, relative to the image: */\u00a0\u00a0\u00a0 x = e.pageX\n- a.left;\u00a0\u00a0\u00a0 y = e.pageY - a.top;\n/* Consider any page scrolling: */\u00a0\u00a0\u00a0 x = x -\nwindow.pageXOffset;\u00a0\u00a0\u00a0 y = y - window.pageYOffset;\nreturn {x : x, y : y};\u00a0 }}",
      "syntax_highlighting": [
        {
          "text": "\n function imageZoom(imgID, resultID) {\u00a0 var img, lens, result, cx, cy;\u00a0 \n  img = document.getElementById(imgID);\u00a0 result = \n  document.getElementById(resultID);\u00a0 /* Create lens: */\u00a0 lens = \n  document.createElement(\"DIV\");\u00a0 lens.setAttribute(\"class\", \"img-zoom-lens\");\u00a0 \n /* Insert lens: */\u00a0 img.parentElement.insertBefore(lens, img);\u00a0 \n /* Calculate the ratio between result DIV and lens: */\u00a0 cx = \n  result.offsetWidth / lens.offsetWidth;\u00a0 cy = result.offsetHeight / \n  lens.offsetHeight;\u00a0 /* Set background properties for the result DIV */\u00a0 \n  result.style.backgroundImage = \"url('\" + img.src + \"')\";\u00a0 \n  result.style.backgroundSize = (img.width * cx) + \"px \" + (img.height * cy) + \"px\";\u00a0 \n /* Execute a function when someone moves the cursor over the image, or the \n  lens: */\u00a0 lens.addEventListener(\"mousemove\", moveLens);\u00a0 \n  img.addEventListener(\"mousemove\", moveLens);\u00a0 \n /* And also for touch screens: */\u00a0 lens.addEventListener(\"touchmove\", moveLens);\u00a0 \n  img.addEventListener(\"touchmove\", moveLens);\u00a0 function moveLens(e) {\u00a0\u00a0\u00a0 \n var pos, x, y;\u00a0\u00a0\u00a0 /* Prevent any other actions that may \n  occur when moving over the image */\u00a0\u00a0\u00a0 e.preventDefault();\u00a0\u00a0\u00a0 /* \n  Get the cursor's x and y positions: */\u00a0\u00a0\u00a0 \n  pos = getCursorPos(e);\u00a0\u00a0\u00a0 /* Calculate the position of the \n  lens: */\u00a0\u00a0\u00a0 x = pos.x - (lens.offsetWidth / 2);\u00a0\u00a0\u00a0 \n  y = pos.y - (lens.offsetHeight / 2);\u00a0\u00a0\u00a0 /* Prevent the lens \n  from being positioned outside the image: */\u00a0\u00a0\u00a0 if (x > \n  img.width - lens.offsetWidth) {x = img.width - lens.offsetWidth;}\u00a0\u00a0\u00a0 \n if (x < 0) {x = 0;}\u00a0\u00a0\u00a0 if (y > img.height - \n  lens.offsetHeight) {y = img.height - lens.offsetHeight;}\u00a0\u00a0\u00a0 \n if (y < 0) {y = 0;}\u00a0\u00a0\u00a0 /* Set the position of the lens: */\u00a0\u00a0\u00a0 \n  lens.style.left = x + \"px\";\u00a0\u00a0\u00a0 lens.style.top = y + \"px\";\u00a0\u00a0\u00a0 \n /* Display what the lens \"sees\": */\u00a0\u00a0\u00a0 \n  result.style.backgroundPosition = \"-\" + (x * cx) + \"px -\" + (y * cy) + \"px\";\u00a0 \n  }\u00a0 function getCursorPos(e) {\u00a0\u00a0\u00a0 var a, x = 0, y = \n 0;\u00a0\u00a0\u00a0 e = e || window.event;\u00a0\u00a0\u00a0 /* Get \n  the x and y positions of the image: */\u00a0\u00a0\u00a0 a = \n  img.getBoundingClientRect();\u00a0\u00a0\u00a0 /* Calculate the cursor's x \n  and y coordinates, relative to the image: */\u00a0\u00a0\u00a0 x = e.pageX \n  - a.left;\u00a0\u00a0\u00a0 y = e.pageY - a.top;\u00a0\u00a0\u00a0 \n /* Consider any page scrolling: */\u00a0\u00a0\u00a0 x = x - \n  window.pageXOffset;\u00a0\u00a0\u00a0 y = y - window.pageYOffset;\u00a0\u00a0\u00a0 \n return {x : x, y : y};\u00a0 }} ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "/* Create lens: */",
          "color": "#e90",
          "class": [
            "jsregexpcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "createElement",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"DIV\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "setAttribute",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"class\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"img-zoom-lens\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "/* Insert lens: */",
          "color": "#e90",
          "class": [
            "jsregexpcolor"
          ]
        },
        {
          "text": "parentElement",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "insertBefore",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "/* Calculate the ratio between result DIV and lens: */",
          "color": "#e90",
          "class": [
            "jsregexpcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "offsetWidth",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "offsetWidth",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "offsetHeight",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "offsetHeight",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "/* Set background properties for the result DIV */",
          "color": "#e90",
          "class": [
            "jsregexpcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "style",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "backgroundImage",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"url('\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "src",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"')\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "style",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "backgroundSize",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "width",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"px \"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "height",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"px\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "/* Execute a function when someone moves the cursor over the image, or the \n  lens: */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "addEventListener",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"mousemove\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "addEventListener",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"mousemove\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "/* And also for touch screens: */",
          "color": "#e90",
          "class": [
            "jsregexpcolor"
          ]
        },
        {
          "text": "addEventListener",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"touchmove\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "addEventListener",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"touchmove\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "/* Prevent any other actions that may \n  occur when moving over the image */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "preventDefault",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "/* \n  Get the cursor's x and y positions: */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "/* Calculate the position of the \n  lens: */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "x",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "offsetWidth",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "y",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "offsetHeight",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "/* Prevent the lens \n  from being positioned outside the image: */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "width",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "offsetWidth",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "width",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "offsetWidth",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "height",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "offsetHeight",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "height",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "offsetHeight",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "/* Set the position of the lens: */",
          "color": "#e90",
          "class": [
            "jsregexpcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "style",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "left",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"px\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "style",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "top",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"px\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "/* Display what the lens \"sees\": */",
          "color": "#e90",
          "class": [
            "jsregexpcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "style",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "backgroundPosition",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"-\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"px -\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"px\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "event",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "/* Get \n  the x and y positions of the image: */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getBoundingClientRect",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "/* Calculate the cursor's x \n  and y coordinates, relative to the image: */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "pageX",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "left",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "pageY",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "top",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "/* Consider any page scrolling: */",
          "color": "#e90",
          "class": [
            "jsregexpcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "pageXOffset",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "pageYOffset",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> imageZoom(imgID, resultID) {<br/>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> img, lens, result, cx, cy;<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  img = document.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(imgID);<br/>\u00a0 result = <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  document.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(resultID);<br/>\u00a0 <span class=\"jsregexpcolor\" style=\"color:#e90\">/* Create lens: */</span><br/>\u00a0 lens = <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  document.<span class=\"jspropertycolor\" style=\"color:black\">createElement</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"DIV\"</span>);<br/>\u00a0 lens.<span class=\"jspropertycolor\" style=\"color:black\">setAttribute</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"class\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"img-zoom-lens\"</span>);<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jsregexpcolor\" style=\"color:#e90\">/* Insert lens: */</span><br/>\u00a0 img.<span class=\"jspropertycolor\" style=\"color:black\">parentElement</span>.<span class=\"jspropertycolor\" style=\"color:black\">insertBefore</span>(lens, img);<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jsregexpcolor\" style=\"color:#e90\">/* Calculate the ratio between result DIV and lens: */</span><br/>\u00a0 cx = <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  result.<span class=\"jspropertycolor\" style=\"color:black\">offsetWidth</span> / lens.<span class=\"jspropertycolor\" style=\"color:black\">offsetWidth</span>;<br/>\u00a0 cy = result.<span class=\"jspropertycolor\" style=\"color:black\">offsetHeight</span> / <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  lens.<span class=\"jspropertycolor\" style=\"color:black\">offsetHeight</span>;<br/>\u00a0 <span class=\"jsregexpcolor\" style=\"color:#e90\">/* Set background properties for the result DIV */</span><br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  result.<span class=\"jspropertycolor\" style=\"color:black\">style</span>.<span class=\"jspropertycolor\" style=\"color:black\">backgroundImage</span> = <span class=\"jsstringcolor\" style=\"color:green\">\"url('\"</span> + img.<span class=\"jspropertycolor\" style=\"color:black\">src</span> + <span class=\"jsstringcolor\" style=\"color:green\">\"')\"</span>;<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  result.<span class=\"jspropertycolor\" style=\"color:black\">style</span>.<span class=\"jspropertycolor\" style=\"color:black\">backgroundSize</span> = (img.<span class=\"jspropertycolor\" style=\"color:black\">width</span> * cx) + <span class=\"jsstringcolor\" style=\"color:green\">\"px \"</span> + (img.<span class=\"jspropertycolor\" style=\"color:black\">height</span> * cy) + <span class=\"jsstringcolor\" style=\"color:green\">\"px\"</span>;<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">/* Execute a function when someone moves the cursor over the image, or the \n  lens: */</span><br/>\u00a0 lens.<span class=\"jspropertycolor\" style=\"color:black\">addEventListener</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"mousemove\"</span>, moveLens);<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  img.<span class=\"jspropertycolor\" style=\"color:black\">addEventListener</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"mousemove\"</span>, moveLens);<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jsregexpcolor\" style=\"color:#e90\">/* And also for touch screens: */</span><br/>\u00a0 lens.<span class=\"jspropertycolor\" style=\"color:black\">addEventListener</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"touchmove\"</span>, moveLens);<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  img.<span class=\"jspropertycolor\" style=\"color:black\">addEventListener</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"touchmove\"</span>, moveLens);<br/>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> moveLens(e) {<br/>\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> pos, x, y;<br/>\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">/* Prevent any other actions that may \n  occur when moving over the image */</span><br/>\u00a0\u00a0\u00a0 e.<span class=\"jspropertycolor\" style=\"color:black\">preventDefault</span>();<br/>\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">/* \n  Get the cursor's x and y positions: */</span><br/>\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  pos = getCursorPos(e);<br/>\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">/* Calculate the position of the \n  lens: */</span><br/>\u00a0\u00a0\u00a0 x = pos.<span class=\"jspropertycolor\" style=\"color:black\">x</span> - (lens.<span class=\"jspropertycolor\" style=\"color:black\">offsetWidth</span> / <span class=\"jsnumbercolor\" style=\"color:#905\">2</span>);<br/>\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  y = pos.<span class=\"jspropertycolor\" style=\"color:black\">y</span> - (lens.<span class=\"jspropertycolor\" style=\"color:black\">offsetHeight</span> / <span class=\"jsnumbercolor\" style=\"color:#905\">2</span>);<br/>\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">/* Prevent the lens \n  from being positioned outside the image: */</span><br/>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (x &gt; <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  img.<span class=\"jspropertycolor\" style=\"color:black\">width</span> - lens.<span class=\"jspropertycolor\" style=\"color:black\">offsetWidth</span>) {x = img.<span class=\"jspropertycolor\" style=\"color:black\">width</span> - lens.<span class=\"jspropertycolor\" style=\"color:black\">offsetWidth</span>;}<br/>\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (x &lt; <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>) {x = <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>;}<br/>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (y &gt; img.<span class=\"jspropertycolor\" style=\"color:black\">height</span> - <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  lens.<span class=\"jspropertycolor\" style=\"color:black\">offsetHeight</span>) {y = img.<span class=\"jspropertycolor\" style=\"color:black\">height</span> - lens.<span class=\"jspropertycolor\" style=\"color:black\">offsetHeight</span>;}<br/>\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (y &lt; <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>) {y = <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>;}<br/>\u00a0\u00a0\u00a0 <span class=\"jsregexpcolor\" style=\"color:#e90\">/* Set the position of the lens: */</span><br/>\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  lens.<span class=\"jspropertycolor\" style=\"color:black\">style</span>.<span class=\"jspropertycolor\" style=\"color:black\">left</span> = x + <span class=\"jsstringcolor\" style=\"color:green\">\"px\"</span>;<br/>\u00a0\u00a0\u00a0 lens.<span class=\"jspropertycolor\" style=\"color:black\">style</span>.<span class=\"jspropertycolor\" style=\"color:black\">top</span> = y + <span class=\"jsstringcolor\" style=\"color:green\">\"px\"</span>;<br/>\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jsregexpcolor\" style=\"color:#e90\">/* Display what the lens \"sees\": */</span><br/>\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  result.<span class=\"jspropertycolor\" style=\"color:black\">style</span>.<span class=\"jspropertycolor\" style=\"color:black\">backgroundPosition</span> = <span class=\"jsstringcolor\" style=\"color:green\">\"-\"</span> + (x * cx) + <span class=\"jsstringcolor\" style=\"color:green\">\"px -\"</span> + (y * cy) + <span class=\"jsstringcolor\" style=\"color:green\">\"px\"</span>;<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  }<br/>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> getCursorPos(e) {<br/>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> a, x = <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>, y = <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>;<br/>\u00a0\u00a0\u00a0 e = e || window.<span class=\"jskeywordcolor\" style=\"color:#005cc5\">event</span>;<br/>\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">/* Get \n  the x and y positions of the image: */</span><br/>\u00a0\u00a0\u00a0 a = <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  img.<span class=\"jspropertycolor\" style=\"color:black\">getBoundingClientRect</span>();<br/>\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">/* Calculate the cursor's x \n  and y coordinates, relative to the image: */</span><br/>\u00a0\u00a0\u00a0 x = e.<span class=\"jspropertycolor\" style=\"color:black\">pageX</span> <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  - a.<span class=\"jspropertycolor\" style=\"color:black\">left</span>;<br/>\u00a0\u00a0\u00a0 y = e.<span class=\"jspropertycolor\" style=\"color:black\">pageY</span> - a.<span class=\"jspropertycolor\" style=\"color:black\">top</span>;<br/>\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jsregexpcolor\" style=\"color:#e90\">/* Consider any page scrolling: */</span><br/>\u00a0\u00a0\u00a0 x = x - <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  window.<span class=\"jspropertycolor\" style=\"color:black\">pageXOffset</span>;<br/>\u00a0\u00a0\u00a0 y = y - window.<span class=\"jspropertycolor\" style=\"color:black\">pageYOffset</span>;<br/>\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">return</span> {x : x, y : y};<br/>\u00a0 }<br/>} </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  function imageZoom(imgID, resultID) {\u00a0 var img, lens, result, cx, cy;\u00a0 \n  img = document.getElementById(imgID);\u00a0 result = \n  document.getElementById(resultID);\u00a0 /* Create lens: */\u00a0 lens = \n  document.createElement(\"DIV\");\u00a0 lens.setAttribute(\"class\", \"img-zoom-lens\");\u00a0 \n  /* Insert lens: */\u00a0 img.parentElement.insertBefore(lens, img);\u00a0 \n  /* Calculate the ratio between result DIV and lens: */\u00a0 cx = \n  result.offsetWidth / lens.offsetWidth;\u00a0 cy = result.offsetHeight / \n  lens.offsetHeight;\u00a0 /* Set background properties for the result DIV */\u00a0 \n  result.style.backgroundImage = \"url('\" + img.src + \"')\";\u00a0 \n  result.style.backgroundSize = (img.width * cx) + \"px \" + (img.height * cy) + \"px\";\u00a0 \n  /* Execute a function when someone moves the cursor over the image, or the \n  lens: */\u00a0 lens.addEventListener(\"mousemove\", moveLens);\u00a0 \n  img.addEventListener(\"mousemove\", moveLens);\u00a0 \n  /* And also for touch screens: */\u00a0 lens.addEventListener(\"touchmove\", moveLens);\u00a0 \n  img.addEventListener(\"touchmove\", moveLens);\u00a0 function moveLens(e) {\u00a0\u00a0\u00a0 \n  var pos, x, y;\u00a0\u00a0\u00a0 /* Prevent any other actions that may \n  occur when moving over the image */\u00a0\u00a0\u00a0 e.preventDefault();\u00a0\u00a0\u00a0 /* \n  Get the cursor's x and y positions: */\u00a0\u00a0\u00a0 \n  pos = getCursorPos(e);\u00a0\u00a0\u00a0 /* Calculate the position of the \n  lens: */\u00a0\u00a0\u00a0 x = pos.x - (lens.offsetWidth / 2);\u00a0\u00a0\u00a0 \n  y = pos.y - (lens.offsetHeight / 2);\u00a0\u00a0\u00a0 /* Prevent the lens \n  from being positioned outside the image: */\u00a0\u00a0\u00a0 if (x > \n  img.width - lens.offsetWidth) {x = img.width - lens.offsetWidth;}\u00a0\u00a0\u00a0 \n  if (x < 0) {x = 0;}\u00a0\u00a0\u00a0 if (y > img.height - \n  lens.offsetHeight) {y = img.height - lens.offsetHeight;}\u00a0\u00a0\u00a0 \n  if (y < 0) {y = 0;}\u00a0\u00a0\u00a0 /* Set the position of the lens: */\u00a0\u00a0\u00a0 \n  lens.style.left = x + \"px\";\u00a0\u00a0\u00a0 lens.style.top = y + \"px\";\u00a0\u00a0\u00a0 \n  /* Display what the lens \"sees\": */\u00a0\u00a0\u00a0 \n  result.style.backgroundPosition = \"-\" + (x * cx) + \"px -\" + (y * cy) + \"px\";\u00a0 \n  }\u00a0 function getCursorPos(e) {\u00a0\u00a0\u00a0 var a, x = 0, y = \n  0;\u00a0\u00a0\u00a0 e = e || window.event;\u00a0\u00a0\u00a0 /* Get \n  the x and y positions of the image: */\u00a0\u00a0\u00a0 a = \n  img.getBoundingClientRect();\u00a0\u00a0\u00a0 /* Calculate the cursor's x \n  and y coordinates, relative to the image: */\u00a0\u00a0\u00a0 x = e.pageX \n  - a.left;\u00a0\u00a0\u00a0 y = e.pageY - a.top;\u00a0\u00a0\u00a0 \n  /* Consider any page scrolling: */\u00a0\u00a0\u00a0 x = x - \n  window.pageXOffset;\u00a0\u00a0\u00a0 y = y - window.pageYOffset;\u00a0\u00a0\u00a0 \n  return {x : x, y : y};\u00a0 }} ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "/* Create lens: */",
          "color": "rgb(238, 153, 0)",
          "class": "jsregexpcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "createElement",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"DIV\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "setAttribute",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"class\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"img-zoom-lens\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "/* Insert lens: */",
          "color": "rgb(238, 153, 0)",
          "class": "jsregexpcolor"
        },
        {
          "text": "parentElement",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "insertBefore",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "/* Calculate the ratio between result DIV and lens: */",
          "color": "rgb(238, 153, 0)",
          "class": "jsregexpcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "offsetWidth",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "offsetWidth",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "offsetHeight",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "offsetHeight",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "/* Set background properties for the result DIV */",
          "color": "rgb(238, 153, 0)",
          "class": "jsregexpcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "style",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "backgroundImage",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"url('\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "src",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"')\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "style",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "backgroundSize",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "width",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"px \"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "height",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"px\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "/* Execute a function when someone moves the cursor over the image, or the \n  lens: */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "addEventListener",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"mousemove\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "addEventListener",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"mousemove\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "/* And also for touch screens: */",
          "color": "rgb(238, 153, 0)",
          "class": "jsregexpcolor"
        },
        {
          "text": "addEventListener",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"touchmove\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "addEventListener",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"touchmove\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "/* Prevent any other actions that may \n  occur when moving over the image */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "preventDefault",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "/* \n  Get the cursor's x and y positions: */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "/* Calculate the position of the \n  lens: */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "x",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "offsetWidth",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "y",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "offsetHeight",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "/* Prevent the lens \n  from being positioned outside the image: */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "width",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "offsetWidth",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "width",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "offsetWidth",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "height",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "offsetHeight",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "height",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "offsetHeight",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "/* Set the position of the lens: */",
          "color": "rgb(238, 153, 0)",
          "class": "jsregexpcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "style",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "left",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"px\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "style",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "top",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"px\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "/* Display what the lens \"sees\": */",
          "color": "rgb(238, 153, 0)",
          "class": "jsregexpcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "style",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "backgroundPosition",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"-\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"px -\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"px\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "event",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "/* Get \n  the x and y positions of the image: */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getBoundingClientRect",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "/* Calculate the cursor's x \n  and y coordinates, relative to the image: */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "pageX",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "left",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "pageY",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "top",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "/* Consider any page scrolling: */",
          "color": "rgb(238, 153, 0)",
          "class": "jsregexpcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "pageXOffset",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "pageYOffset",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h5"
      },
      "text": "Step 4) Initiate the Zoom Effect:",
      "level": "h5"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "<script>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "imageZoom(\"myimage\", \"myresult\"); ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\"myimage\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\"myresult\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "</script>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "htmlHigh"
        ],
        "isNotranslate": true
      },
      "code": "<script>imageZoom(\"myimage\", \"myresult\"); </script>",
      "syntax_highlighting": [
        {
          "text": "<script>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "imageZoom(\"myimage\", \"myresult\"); ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\"myimage\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\"myresult\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "</script>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate htmlHigh\">\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>script<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><span class=\"jscolor\" style=\"color:black\"><br/>imageZoom(<span class=\"jsstringcolor\" style=\"color:green\">\"myimage\"</span>, <span class=\"jsstringcolor\" style=\"color:green\">\"myresult\"</span>); <br/></span><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/script<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span> </div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "<script>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "imageZoom(\"myimage\", \"myresult\"); ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\"myimage\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\"myresult\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "</script>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "is_notranslate": true
    }
  ]
}