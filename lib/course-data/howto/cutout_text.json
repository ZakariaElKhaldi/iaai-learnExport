{
  "title": "How To Create Cutout Text",
  "url": "https://www.w3schools.com/howto/howto_css_cutout_text.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "How TO - Cutout Text",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Learn how to create a responsive cutout/knockout text with CSS.",
      "html": "<p class=\"intro\">Learn how to create a responsive cutout/knockout text with CSS.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A cutout text (or knockout text) is a see-through text that appears cut out on top of a background image:",
      "html": "<p>A cutout text (or knockout text) is a see-through text that appears cut out on top of a background image:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: This example does not work in Internet Explorer or Edge.",
      "html": "<p><strong>Note:</strong> This example does not work in Internet Explorer or Edge.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "How To Create a Cutout Text",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h5"
      },
      "text": "Step 1) Add HTML:",
      "level": "h5"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "<div class=\"image-container\">",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " class=\"image-container\"",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"image-container\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<div class=\"text\">",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " class=\"text\"",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"text\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</div>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</div>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "htmlHigh"
        ],
        "isNotranslate": true
      },
      "code": "<div class=\"image-container\">\n\u00a0 <div class=\"text\">NATURE</div>\n\n</div>",
      "syntax_highlighting": [
        {
          "text": "<div class=\"image-container\">",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " class=\"image-container\"",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"image-container\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<div class=\"text\">",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " class=\"text\"",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"text\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</div>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</div>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate htmlHigh\">\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>div<span class=\"attributecolor\" style=\"color:green\"> class<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"image-container\"</span></span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\u00a0 <span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>div<span class=\"attributecolor\" style=\"color:green\"> class<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"text\"</span></span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>NATURE<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/div<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/div<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span> </div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "<div class=\"image-container\">",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " class=\"image-container\"",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"image-container\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<div class=\"text\">",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " class=\"text\"",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"text\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</div>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</div>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h5"
      },
      "text": "Step 2) Add CSS:",
      "level": "h5"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The mix-blend-mode property makes it possible to add the cutout text to the image. However, it is not supported in IE or Edge:",
      "html": "<p>The <code>mix-blend-mode</code> property makes it possible to add the cutout text to the image. However, it is not supported in IE or Edge:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  .image-container {\u00a0 background-image: url(\"img_nature.jpg\"); \n  /* The image used - important! */\n  \u00a0\n  background-size: cover; \u00a0 position: relative; /* Needed to position \n  the cutout text in the middle of the image */\u00a0 height: 300px; /* Some \n  height */}\n  .text {\u00a0 background-color: white;\u00a0 color: black;\u00a0 font-size: 10vw; \n  /* Responsive font size */\n  \u00a0\n  font-weight: bold;\u00a0 margin: 0 auto; /* Center the text container */\u00a0 padding: 10px;\u00a0 width: 50%;\n  \u00a0\n  text-align: center; /* Center text */\u00a0 position: absolute; /* Position text */\u00a0 \n  top: 50%; /* Position text in the middle */\u00a0 left: 50%; /* Position \n  text in the middle */\n  \u00a0\n  transform: translate(-50%, -50%); /* Position text in the middle */\u00a0 mix-blend-mode: screen; \n  /* This makes the cutout text possible */} ",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0 background-image: url(\"img_nature.jpg\"); \n  /* The image used - important! */\n  \u00a0\n  background-size: cover; \u00a0 position: relative; /* Needed to position \n  the cutout text in the middle of the image */\u00a0 height: 300px; /* Some \n  height */",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": url(\"img_nature.jpg\");",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "/* The image used - important! */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": ": cover;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": relative;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "/* Needed to position \n  the cutout text in the middle of the image */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": ": 300px;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "/* Some \n  height */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0 background-color: white;\u00a0 color: black;\u00a0 font-size: 10vw; \n  /* Responsive font size */\n  \u00a0\n  font-weight: bold;\u00a0 margin: 0 auto; /* Center the text container */\u00a0 padding: 10px;\u00a0 width: 50%;\n  \u00a0\n  text-align: center; /* Center text */\u00a0 position: absolute; /* Position text */\u00a0 \n  top: 50%; /* Position text in the middle */\u00a0 left: 50%; /* Position \n  text in the middle */\n  \u00a0\n  transform: translate(-50%, -50%); /* Position text in the middle */\u00a0 mix-blend-mode: screen; \n  /* This makes the cutout text possible */",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": white;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": black;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": 10vw;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "/* Responsive font size */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": ": bold;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": 0 auto;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "/* Center the text container */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": ": 10px;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": 50%;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": center;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "/* Center text */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": ": absolute;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "/* Position text */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": ": 50%;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "/* Position text in the middle */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": ": 50%;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "/* Position \n  text in the middle */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": ": translate(-50%, -50%);",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "/* Position text in the middle */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": ": screen;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "/* This makes the cutout text possible */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "cssHigh"
        ],
        "isNotranslate": true
      },
      "code": ".image-container {\u00a0 background-image: url(\"img_nature.jpg\");\n/* The image used - important! */\n\nbackground-size: cover; \u00a0 position: relative; /* Needed to position\nthe cutout text in the middle of the image */\u00a0 height: 300px; /* Some\nheight */}\n.text {\u00a0 background-color: white;\u00a0 color: black;\u00a0 font-size: 10vw;\n/* Responsive font size */\n\nfont-weight: bold;\u00a0 margin: 0 auto; /* Center the text container */\u00a0 padding: 10px;\u00a0 width: 50%;\n\ntext-align: center; /* Center text */\u00a0 position: absolute; /* Position text */\ntop: 50%; /* Position text in the middle */\u00a0 left: 50%; /* Position\ntext in the middle */\n\ntransform: translate(-50%, -50%); /* Position text in the middle */\u00a0 mix-blend-mode: screen;\n/* This makes the cutout text possible */}",
      "syntax_highlighting": [
        {
          "text": "\n  .image-container {\u00a0 background-image: url(\"img_nature.jpg\");\n/* The image used - important! */\n  \u00a0\n  background-size: cover; \u00a0 position: relative; /* Needed to position \n  the cutout text in the middle of the image */\u00a0 height: 300px; /* Some \n  height */}\n  .text {\u00a0 background-color: white;\u00a0 color: black;\u00a0 font-size: 10vw;\n/* Responsive font size */\n  \u00a0\n  font-weight: bold;\u00a0 margin: 0 auto; /* Center the text container */\u00a0 padding: 10px;\u00a0 width: 50%;\n  \u00a0\n  text-align: center; /* Center text */\u00a0 position: absolute; /* Position text */\u00a0 \n  top: 50%; /* Position text in the middle */\u00a0 left: 50%; /* Position \n  text in the middle */\n  \u00a0\n  transform: translate(-50%, -50%); /* Position text in the middle */\u00a0 mix-blend-mode: screen;\n/* This makes the cutout text possible */} ",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0 background-image: url(\"img_nature.jpg\");\n/* The image used - important! */\n  \u00a0\n  background-size: cover; \u00a0 position: relative; /* Needed to position \n  the cutout text in the middle of the image */\u00a0 height: 300px; /* Some \n  height */",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": url(\"img_nature.jpg\");",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "/* The image used - important! */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": ": cover;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": relative;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "/* Needed to position \n  the cutout text in the middle of the image */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": ": 300px;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "/* Some \n  height */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0 background-color: white;\u00a0 color: black;\u00a0 font-size: 10vw;\n/* Responsive font size */\n  \u00a0\n  font-weight: bold;\u00a0 margin: 0 auto; /* Center the text container */\u00a0 padding: 10px;\u00a0 width: 50%;\n  \u00a0\n  text-align: center; /* Center text */\u00a0 position: absolute; /* Position text */\u00a0 \n  top: 50%; /* Position text in the middle */\u00a0 left: 50%; /* Position \n  text in the middle */\n  \u00a0\n  transform: translate(-50%, -50%); /* Position text in the middle */\u00a0 mix-blend-mode: screen;\n/* This makes the cutout text possible */",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": white;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": black;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": 10vw;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "/* Responsive font size */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": ": bold;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": 0 auto;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "/* Center the text container */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": ": 10px;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": 50%;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": center;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "/* Center text */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": ": absolute;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "/* Position text */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": ": 50%;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "/* Position text in the middle */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": ": 50%;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "/* Position \n  text in the middle */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": ": translate(-50%, -50%);",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "/* Position text in the middle */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": ": screen;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "/* This makes the cutout text possible */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate cssHigh\"><span class=\"cssselectorcolor\" style=\"color:#905\">\n  .image-container <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0 background-image<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> url(\"img_nature.jpg\")<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span>\n<span class=\"commentcolor\" style=\"color:slategray\">/* The image used - important! */</span><br/>\n  \u00a0\n  background-size<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> cover<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span> <br/>\u00a0 position<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> relative<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span> <span class=\"commentcolor\" style=\"color:slategray\">/* Needed to position \n  the cutout text in the middle of the image */</span><br/>\u00a0 height<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 300px<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span> <span class=\"commentcolor\" style=\"color:slategray\">/* Some \n  height */</span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span><br/><br/>\n  .text <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0 background-color<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> white<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 color<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> black<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 font-size<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 10vw<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span>\n<span class=\"commentcolor\" style=\"color:slategray\">/* Responsive font size */</span><br/>\n  \u00a0\n  font-weight<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> bold<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 margin<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 0 auto<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span> <span class=\"commentcolor\" style=\"color:slategray\">/* Center the text container */</span><br/>\u00a0 padding<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 10px<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 width<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 50%<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\n  \u00a0\n  text-align<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> center<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span> <span class=\"commentcolor\" style=\"color:slategray\">/* Center text */</span><br/>\u00a0 position<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> absolute<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span> <span class=\"commentcolor\" style=\"color:slategray\">/* Position text */</span><br/>\u00a0 \n  top<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 50%<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span> <span class=\"commentcolor\" style=\"color:slategray\">/* Position text in the middle */</span><br/>\u00a0 left<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 50%<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span> <span class=\"commentcolor\" style=\"color:slategray\">/* Position \n  text in the middle */</span><br/>\n  \u00a0\n  transform<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> translate(-50%, -50%)<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span> <span class=\"commentcolor\" style=\"color:slategray\">/* Position text in the middle */</span><br/>\u00a0 mix-blend-mode<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> screen<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span>\n<span class=\"commentcolor\" style=\"color:slategray\">/* This makes the cutout text possible */</span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span><br/> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  .image-container {\u00a0 background-image: url(\"img_nature.jpg\"); \n  /* The image used - important! */\n  \u00a0\n  background-size: cover; \u00a0 position: relative; /* Needed to position \n  the cutout text in the middle of the image */\u00a0 height: 300px; /* Some \n  height */}\n  .text {\u00a0 background-color: white;\u00a0 color: black;\u00a0 font-size: 10vw; \n  /* Responsive font size */\n  \u00a0\n  font-weight: bold;\u00a0 margin: 0 auto; /* Center the text container */\u00a0 padding: 10px;\u00a0 width: 50%;\n  \u00a0\n  text-align: center; /* Center text */\u00a0 position: absolute; /* Position text */\u00a0 \n  top: 50%; /* Position text in the middle */\u00a0 left: 50%; /* Position \n  text in the middle */\n  \u00a0\n  transform: translate(-50%, -50%); /* Position text in the middle */\u00a0 mix-blend-mode: screen; \n  /* This makes the cutout text possible */} ",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0 background-image: url(\"img_nature.jpg\"); \n  /* The image used - important! */\n  \u00a0\n  background-size: cover; \u00a0 position: relative; /* Needed to position \n  the cutout text in the middle of the image */\u00a0 height: 300px; /* Some \n  height */",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": url(\"img_nature.jpg\");",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "/* The image used - important! */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": ": cover;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": relative;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "/* Needed to position \n  the cutout text in the middle of the image */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": ": 300px;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "/* Some \n  height */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0 background-color: white;\u00a0 color: black;\u00a0 font-size: 10vw; \n  /* Responsive font size */\n  \u00a0\n  font-weight: bold;\u00a0 margin: 0 auto; /* Center the text container */\u00a0 padding: 10px;\u00a0 width: 50%;\n  \u00a0\n  text-align: center; /* Center text */\u00a0 position: absolute; /* Position text */\u00a0 \n  top: 50%; /* Position text in the middle */\u00a0 left: 50%; /* Position \n  text in the middle */\n  \u00a0\n  transform: translate(-50%, -50%); /* Position text in the middle */\u00a0 mix-blend-mode: screen; \n  /* This makes the cutout text possible */",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": white;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": black;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": 10vw;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "/* Responsive font size */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": ": bold;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": 0 auto;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "/* Center the text container */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": ": 10px;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": 50%;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": center;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "/* Center text */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": ": absolute;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "/* Position text */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": ": 50%;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "/* Position text in the middle */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": ": 50%;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "/* Position \n  text in the middle */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": ": translate(-50%, -50%);",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "/* Position text in the middle */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": ": screen;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "/* This makes the cutout text possible */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you want a black container text, change the mix-blend-mode to \"multiply\" and background-color to black, and color to white:",
      "html": "<p>If you want a black container text, change the mix-blend-mode to \"multiply\" and background-color to black, and color to white:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  .text {\u00a0 background-color: black;\u00a0 color: white;\u00a0 mix-blend-mode: \n  multiply;\u00a0 ....} ",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0 background-color: black;\u00a0 color: white;\u00a0 mix-blend-mode: \n  multiply;\u00a0 ....",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": black;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": white;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": \n  multiply;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "cssHigh"
        ],
        "isNotranslate": true
      },
      "code": ".text {\u00a0 background-color: black;\u00a0 color: white;\u00a0 mix-blend-mode:\nmultiply;\u00a0 ....}",
      "syntax_highlighting": [
        {
          "text": "\n  .text {\u00a0 background-color: black;\u00a0 color: white;\u00a0 mix-blend-mode: \n  multiply;\u00a0 ....} ",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0 background-color: black;\u00a0 color: white;\u00a0 mix-blend-mode: \n  multiply;\u00a0 ....",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": black;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": white;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": \n  multiply;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate cssHigh\"><span class=\"cssselectorcolor\" style=\"color:#905\">\n  .text <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0 background-color<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> black<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 color<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> white<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 mix-blend-mode<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> \n  multiply<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 ....<br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span><br/> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  .text {\u00a0 background-color: black;\u00a0 color: white;\u00a0 mix-blend-mode: \n  multiply;\u00a0 ....} ",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0 background-color: black;\u00a0 color: white;\u00a0 mix-blend-mode: \n  multiply;\u00a0 ....",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": black;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": white;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": \n  multiply;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "is_notranslate": true
    }
  ]
}