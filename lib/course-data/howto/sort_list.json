{
  "title": "How To Sort a List",
  "url": "https://www.w3schools.com/howto/howto_js_sort_list.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "How TO - Sort a List",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Learn how to sort an HTML list, using JavaScript.",
      "html": "<p class=\"intro\">Learn how to sort an HTML list, using JavaScript.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Click the button to sort the list alphabetically:",
      "html": "<p>Click the button to sort the list alphabetically:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Try it Yourself \u00bb",
          "href": "https://www.w3schools.com/tryit.asp?filename=tryhow_js_sort_list",
          "title": ""
        }
      ],
      "text": "Try it Yourself \u00bb",
      "html": "<p><a class=\"ws-btn\" href=\"tryit.asp?filename=tryhow_js_sort_list\" target=\"_blank\">Try it Yourself \u00bb</a></p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Creating a Sort Function",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "<ul id=\"id01\">",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " id=\"id01\"",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"id01\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</ul>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<script>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "function sortList() {\u00a0 \n  var list, i, switching, b, shouldSwitch;\u00a0 list = \n  document.getElementById(\"id01\");\u00a0 switching = true;\u00a0 /* Make \n  a loop that will continue until\u00a0 no switching has been done: */\u00a0 \n  while (switching) {\u00a0\u00a0\u00a0 // Start by saying: no switching is \n  done:\u00a0\u00a0\u00a0 switching = false;\u00a0\u00a0\u00a0 b = \n  list.getElementsByTagName(\"LI\");\u00a0\u00a0\u00a0 // Loop through all \n  list items:\u00a0\u00a0\u00a0 for (i = 0; i < (b.length - 1); i++) {\u00a0\u00a0\u00a0\u00a0\u00a0 \n  // Start by saying there should be no switching:\u00a0\u00a0\u00a0\u00a0\u00a0 \n  shouldSwitch = false;\u00a0\u00a0\u00a0\u00a0\u00a0 /* Check if the next \n  item should\u00a0\u00a0\u00a0\u00a0\u00a0 switch place with the current \n  item: */\u00a0\u00a0\u00a0\u00a0\u00a0 if (b[i].innerHTML.toLowerCase() > \n  b[i + 1].innerHTML.toLowerCase()) {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  /* If next item is alphabetically lower than current item,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  shouldSwitch = true;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 break;\u00a0\u00a0\u00a0\u00a0\u00a0 \n  }\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0 if (shouldSwitch) {\u00a0\u00a0\u00a0\u00a0\u00a0 \n  /* If a switch has been marked, make the switch\u00a0\u00a0\u00a0\u00a0\u00a0 \n  and mark the switch as done: */\u00a0\u00a0\u00a0\u00a0\u00a0 \n  b[i].parentNode.insertBefore(b[i + 1], b[i]);\u00a0\u00a0\u00a0\u00a0\u00a0 \n  switching = true;\u00a0\u00a0\u00a0 }\u00a0 }}",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"id01\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "true",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "/* Make \n  a loop that will continue until\u00a0 no switching has been done: */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "while",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "// Start by saying: no switching is \n  done:",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "false",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getElementsByTagName",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"LI\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// Loop through all \n  list items:",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "length",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Start by saying there should be no switching:",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "false",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "/* Check if the next \n  item should\u00a0\u00a0\u00a0\u00a0\u00a0 switch place with the current \n  item: */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "toLowerCase",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "toLowerCase",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "/* If next item is alphabetically lower than current item,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "true",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "break",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "/* If a switch has been marked, make the switch\u00a0\u00a0\u00a0\u00a0\u00a0 \n  and mark the switch as done: */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "parentNode",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "insertBefore",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "true",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "</script>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "htmlHigh"
        ],
        "isNotranslate": true
      },
      "code": "<ul id=\"id01\">\n\u00a0 <li>Oslo</li>\n\u00a0 <li>Stockholm</li>\n\u00a0 \n<li>Helsinki</li>\n\u00a0 <li>Berlin</li>\n\u00a0 <li>Rome</li>\n\u00a0 \n<li>Madrid</li>\n</ul>\n\n<script>function sortList() {\u00a0 \nvar list, i, switching, b, shouldSwitch;\u00a0 list =\ndocument.getElementById(\"id01\");\u00a0 switching = true;\u00a0 /* Make\na loop that will continue until\u00a0 no switching has been done: */\nwhile (switching) {\u00a0\u00a0\u00a0 // Start by saying: no switching is\ndone:\u00a0\u00a0\u00a0 switching = false;\u00a0\u00a0\u00a0 b =\nlist.getElementsByTagName(\"LI\");\u00a0\u00a0\u00a0 // Loop through all\nlist items:\u00a0\u00a0\u00a0 for (i = 0; i < (b.length - 1); i++) {\n// Start by saying there should be no switching:\nshouldSwitch = false;\u00a0\u00a0\u00a0\u00a0\u00a0 /* Check if the next\nitem should\u00a0\u00a0\u00a0\u00a0\u00a0 switch place with the current\nitem: */\u00a0\u00a0\u00a0\u00a0\u00a0 if (b[i].innerHTML.toLowerCase() >\nb[i + 1].innerHTML.toLowerCase()) {\n/* If next item is alphabetically lower than current item,\nmark as a switch and break the loop: */\nshouldSwitch = true;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 break;\n}\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0 if (shouldSwitch) {\n/* If a switch has been marked, make the switch\nand mark the switch as done: */\nb[i].parentNode.insertBefore(b[i + 1], b[i]);\nswitching = true;\u00a0\u00a0\u00a0 }\u00a0 }}</script>",
      "syntax_highlighting": [
        {
          "text": "<ul id=\"id01\">",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " id=\"id01\"",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"id01\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</ul>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<script>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "function sortList() {\u00a0 \n var list, i, switching, b, shouldSwitch;\u00a0 list = \n  document.getElementById(\"id01\");\u00a0 switching = true;\u00a0 /* Make \n  a loop that will continue until\u00a0 no switching has been done: */\u00a0 \n while (switching) {\u00a0\u00a0\u00a0 // Start by saying: no switching is \n  done:\u00a0\u00a0\u00a0 switching = false;\u00a0\u00a0\u00a0 b = \n  list.getElementsByTagName(\"LI\");\u00a0\u00a0\u00a0 // Loop through all \n  list items:\u00a0\u00a0\u00a0 for (i = 0; i < (b.length - 1); i++) {\u00a0\u00a0\u00a0\u00a0\u00a0 \n // Start by saying there should be no switching:\u00a0\u00a0\u00a0\u00a0\u00a0 \n  shouldSwitch = false;\u00a0\u00a0\u00a0\u00a0\u00a0 /* Check if the next \n  item should\u00a0\u00a0\u00a0\u00a0\u00a0 switch place with the current \n  item: */\u00a0\u00a0\u00a0\u00a0\u00a0 if (b[i].innerHTML.toLowerCase() > \n  b[i + 1].innerHTML.toLowerCase()) {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n /* If next item is alphabetically lower than current item,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  shouldSwitch = true;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 break;\u00a0\u00a0\u00a0\u00a0\u00a0 \n  }\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0 if (shouldSwitch) {\u00a0\u00a0\u00a0\u00a0\u00a0 \n /* If a switch has been marked, make the switch\u00a0\u00a0\u00a0\u00a0\u00a0 \n  and mark the switch as done: */\u00a0\u00a0\u00a0\u00a0\u00a0 \n  b[i].parentNode.insertBefore(b[i + 1], b[i]);\u00a0\u00a0\u00a0\u00a0\u00a0 \n  switching = true;\u00a0\u00a0\u00a0 }\u00a0 }}",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"id01\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "true",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "/* Make \n  a loop that will continue until\u00a0 no switching has been done: */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "while",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "// Start by saying: no switching is \n  done:",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "false",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getElementsByTagName",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"LI\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// Loop through all \n  list items:",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "length",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Start by saying there should be no switching:",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "false",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "/* Check if the next \n  item should\u00a0\u00a0\u00a0\u00a0\u00a0 switch place with the current \n  item: */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "toLowerCase",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "toLowerCase",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "/* If next item is alphabetically lower than current item,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "true",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "break",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "/* If a switch has been marked, make the switch\u00a0\u00a0\u00a0\u00a0\u00a0 \n  and mark the switch as done: */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "parentNode",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "insertBefore",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "true",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "</script>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate htmlHigh\">\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>ul<span class=\"attributecolor\" style=\"color:green\"> id<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"id01\"</span></span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\u00a0 <span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>Oslo<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\u00a0 <span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>Stockholm<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\u00a0 \n  <span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>Helsinki<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\u00a0 <span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>Berlin<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\u00a0 <span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>Rome<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\u00a0 \n  <span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>Madrid<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/ul<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/><br/><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>script<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><span class=\"jscolor\" style=\"color:black\"><br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> sortList() {<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> list, i, switching, b, shouldSwitch;<br/>\u00a0 list = <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  document.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"id01\"</span>);<br/>\u00a0 switching = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">true</span>;<br/>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">/* Make \n  a loop that will continue until<br/>\u00a0 no switching has been done: */</span><br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">while</span> (switching) {<br/>\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Start by saying: no switching is \n  done:<br/></span>\u00a0\u00a0\u00a0 switching = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">false</span>;<br/>\u00a0\u00a0\u00a0 b = <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  list.<span class=\"jspropertycolor\" style=\"color:black\">getElementsByTagName</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"LI\"</span>);<br/>\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Loop through all \n  list items:<br/></span>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">for</span> (i = <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>; i &lt; (b.<span class=\"jspropertycolor\" style=\"color:black\">length</span> - <span class=\"jsnumbercolor\" style=\"color:#905\">1</span>); i++) {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Start by saying there should be no switching:<br/></span>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  shouldSwitch = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">false</span>;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">/* Check if the next \n  item should<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 switch place with the current \n  item: */</span><br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (b[i].<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span>.<span class=\"jspropertycolor\" style=\"color:black\">toLowerCase</span>() &gt; <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  b[i + <span class=\"jsnumbercolor\" style=\"color:#905\">1</span>].<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span>.<span class=\"jspropertycolor\" style=\"color:black\">toLowerCase</span>()) {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">/* If next item is alphabetically lower than current item,<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */</span><br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  shouldSwitch = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">true</span>;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">break</span>;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  }<br/>\u00a0\u00a0\u00a0 }<br/>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (shouldSwitch) {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">/* If a switch has been marked, make the switch<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 \n  and mark the switch as done: */</span><br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  b[i].<span class=\"jspropertycolor\" style=\"color:black\">parentNode</span>.<span class=\"jspropertycolor\" style=\"color:black\">insertBefore</span>(b[i + <span class=\"jsnumbercolor\" style=\"color:#905\">1</span>], b[i]);<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  switching = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">true</span>;<br/>\u00a0\u00a0\u00a0 }<br/>\u00a0 }<br/>}<br/></span><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/script<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/> </div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "<ul id=\"id01\">",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " id=\"id01\"",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"id01\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</ul>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<script>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "function sortList() {\u00a0 \n  var list, i, switching, b, shouldSwitch;\u00a0 list = \n  document.getElementById(\"id01\");\u00a0 switching = true;\u00a0 /* Make \n  a loop that will continue until\u00a0 no switching has been done: */\u00a0 \n  while (switching) {\u00a0\u00a0\u00a0 // Start by saying: no switching is \n  done:\u00a0\u00a0\u00a0 switching = false;\u00a0\u00a0\u00a0 b = \n  list.getElementsByTagName(\"LI\");\u00a0\u00a0\u00a0 // Loop through all \n  list items:\u00a0\u00a0\u00a0 for (i = 0; i < (b.length - 1); i++) {\u00a0\u00a0\u00a0\u00a0\u00a0 \n  // Start by saying there should be no switching:\u00a0\u00a0\u00a0\u00a0\u00a0 \n  shouldSwitch = false;\u00a0\u00a0\u00a0\u00a0\u00a0 /* Check if the next \n  item should\u00a0\u00a0\u00a0\u00a0\u00a0 switch place with the current \n  item: */\u00a0\u00a0\u00a0\u00a0\u00a0 if (b[i].innerHTML.toLowerCase() > \n  b[i + 1].innerHTML.toLowerCase()) {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  /* If next item is alphabetically lower than current item,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  shouldSwitch = true;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 break;\u00a0\u00a0\u00a0\u00a0\u00a0 \n  }\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0 if (shouldSwitch) {\u00a0\u00a0\u00a0\u00a0\u00a0 \n  /* If a switch has been marked, make the switch\u00a0\u00a0\u00a0\u00a0\u00a0 \n  and mark the switch as done: */\u00a0\u00a0\u00a0\u00a0\u00a0 \n  b[i].parentNode.insertBefore(b[i + 1], b[i]);\u00a0\u00a0\u00a0\u00a0\u00a0 \n  switching = true;\u00a0\u00a0\u00a0 }\u00a0 }}",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"id01\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "true",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "/* Make \n  a loop that will continue until\u00a0 no switching has been done: */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "while",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "// Start by saying: no switching is \n  done:",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "false",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getElementsByTagName",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"LI\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// Loop through all \n  list items:",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "length",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Start by saying there should be no switching:",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "false",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "/* Check if the next \n  item should\u00a0\u00a0\u00a0\u00a0\u00a0 switch place with the current \n  item: */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "toLowerCase",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "toLowerCase",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "/* If next item is alphabetically lower than current item,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "true",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "break",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "/* If a switch has been marked, make the switch\u00a0\u00a0\u00a0\u00a0\u00a0 \n  and mark the switch as done: */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "parentNode",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "insertBefore",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "true",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "</script>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Sorting Ascending and Descending",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The first time you click the button, the sorting direction is ascending (A to Z).",
      "html": "<p>The first time you click the button, the sorting direction is ascending (A to Z).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Click again, and the sorting direction will be descending (Z to A):",
      "html": "<p>Click again, and the sorting direction will be descending (Z to A):</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "<ul id=\"id01\">",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " id=\"id01\"",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"id01\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</li>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</ul>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<script>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "function sortListDir() {\u00a0 \n  var list, i, switching, b, shouldSwitch, dir, switchcount = 0;\u00a0 list \n  = document.getElementById(\"id01\");\u00a0 switching = true;\u00a0 // Set \n  the sorting direction to ascending:\u00a0 dir = \"asc\"; \u00a0 // Make a \n  loop that will continue until no switching has been done:\u00a0 while \n  (switching) {\u00a0\u00a0\u00a0 // Start by saying: no switching is done:\u00a0\u00a0\u00a0 \n  switching = false;\u00a0\u00a0\u00a0 b = list.getElementsByTagName(\"LI\");\u00a0\u00a0\u00a0 \n  // Loop through all list-items:\u00a0\u00a0\u00a0 for (i = 0; i < (b.length \n  - 1); i++) {\u00a0\u00a0\u00a0\u00a0\u00a0 // Start by saying there should \n  be no switching:\u00a0\u00a0\u00a0\u00a0\u00a0 shouldSwitch = false;\u00a0\u00a0\u00a0\u00a0\u00a0 \n  /* Check if the next item should switch place with the current item,\u00a0\u00a0\u00a0\u00a0\u00a0 \n  based on the sorting direction (asc or desc): */\u00a0\u00a0\u00a0\u00a0\u00a0 \n  if (dir == \"asc\") {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if (b[i].innerHTML.toLowerCase() \n  > b[i + 1].innerHTML.toLowerCase()) {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  /* If next item is alphabetically lower than current item,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  shouldSwitch = true;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  break;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0\u00a0\u00a0 \n  } else if (dir == \"desc\") {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if \n  (b[i].innerHTML.toLowerCase() < b[i + 1].innerHTML.toLowerCase()) {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  /* If next item is alphabetically higher than current item,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  shouldSwitch= true;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  break;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0\u00a0\u00a0 \n  }\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0 if (shouldSwitch) {\u00a0\u00a0\u00a0\u00a0\u00a0 \n  /* If a switch has been marked, make the switch\u00a0\u00a0\u00a0\u00a0\u00a0 \n  and mark that a switch has been done: */\u00a0\u00a0\u00a0\u00a0\u00a0 \n  b[i].parentNode.insertBefore(b[i + 1], b[i]);\u00a0\u00a0\u00a0\u00a0\u00a0 \n  switching = true;\u00a0\u00a0\u00a0\u00a0\u00a0 // Each time a switch is \n  done, increase switchcount by 1:\u00a0\u00a0\u00a0\u00a0\u00a0 switchcount \n  ++;\u00a0\u00a0\u00a0 } else {\u00a0\u00a0\u00a0\u00a0\u00a0 /* If no \n  switching has been done AND the direction is \"asc\",\u00a0\u00a0\u00a0\u00a0\u00a0 \n  set the direction to \"desc\" and run the while loop again. */\u00a0\u00a0\u00a0\u00a0\u00a0 \n  if (switchcount == 0 && dir == \"asc\") {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  dir = \"desc\";\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 switching = true;\u00a0\u00a0\u00a0\u00a0\u00a0 \n  }\u00a0\u00a0\u00a0 }\u00a0 }}",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getElementById",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"id01\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "true",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "// Set \n  the sorting direction to ascending:",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\"asc\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "// Make a \n  loop that will continue until no switching has been done:",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "while",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Start by saying: no switching is done:",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "false",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "getElementsByTagName",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"LI\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Loop through all list-items:",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "length",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "// Start by saying there should \n  be no switching:",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "false",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "/* Check if the next item should switch place with the current item,\u00a0\u00a0\u00a0\u00a0\u00a0 \n  based on the sorting direction (asc or desc): */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"asc\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "toLowerCase",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "toLowerCase",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "/* If next item is alphabetically lower than current item,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "true",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "break",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "else",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\"desc\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "toLowerCase",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "toLowerCase",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "/* If next item is alphabetically higher than current item,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "true",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "break",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "/* If a switch has been marked, make the switch\u00a0\u00a0\u00a0\u00a0\u00a0 \n  and mark that a switch has been done: */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "parentNode",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "insertBefore",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "true",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "// Each time a switch is \n  done, increase switchcount by 1:",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "else",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "/* If no \n  switching has been done AND the direction is \"asc\",\u00a0\u00a0\u00a0\u00a0\u00a0 \n  set the direction to \"desc\" and run the while loop again. */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"asc\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"desc\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "true",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "</script>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "htmlHigh"
        ],
        "isNotranslate": true
      },
      "code": "<ul id=\"id01\">\n\u00a0 <li>Oslo</li>\n\u00a0 <li>Stockholm</li>\n\u00a0 \n<li>Helsinki</li>\n\u00a0 <li>Berlin</li>\n\u00a0 <li>Rome</li>\n\u00a0 \n<li>Madrid</li>\n</ul>\n\n<script>function sortListDir() {\u00a0 \nvar list, i, switching, b, shouldSwitch, dir, switchcount = 0;\u00a0 list\n= document.getElementById(\"id01\");\u00a0 switching = true;\u00a0 // Set\nthe sorting direction to ascending:\u00a0 dir = \"asc\"; \u00a0 // Make a\nloop that will continue until no switching has been done:\u00a0 while\n(switching) {\u00a0\u00a0\u00a0 // Start by saying: no switching is done:\nswitching = false;\u00a0\u00a0\u00a0 b = list.getElementsByTagName(\"LI\");\n// Loop through all list-items:\u00a0\u00a0\u00a0 for (i = 0; i < (b.length\n- 1); i++) {\u00a0\u00a0\u00a0\u00a0\u00a0 // Start by saying there should\nbe no switching:\u00a0\u00a0\u00a0\u00a0\u00a0 shouldSwitch = false;\n/* Check if the next item should switch place with the current item,\nbased on the sorting direction (asc or desc): */\nif (dir == \"asc\") {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if (b[i].innerHTML.toLowerCase()\n> b[i + 1].innerHTML.toLowerCase()) {\n/* If next item is alphabetically lower than current item,\nmark as a switch and break the loop: */\nshouldSwitch = true;\nbreak;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\n} else if (dir == \"desc\") {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if\n(b[i].innerHTML.toLowerCase() < b[i + 1].innerHTML.toLowerCase()) {\n/* If next item is alphabetically higher than current item,\nmark as a switch and break the loop: */\nshouldSwitch= true;\nbreak;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\n}\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0 if (shouldSwitch) {\n/* If a switch has been marked, make the switch\nand mark that a switch has been done: */\nb[i].parentNode.insertBefore(b[i + 1], b[i]);\nswitching = true;\u00a0\u00a0\u00a0\u00a0\u00a0 // Each time a switch is\ndone, increase switchcount by 1:\u00a0\u00a0\u00a0\u00a0\u00a0 switchcount\n++;\u00a0\u00a0\u00a0 } else {\u00a0\u00a0\u00a0\u00a0\u00a0 /* If no\nswitching has been done AND the direction is \"asc\",\nset the direction to \"desc\" and run the while loop again. */\nif (switchcount == 0 && dir == \"asc\") {\ndir = \"desc\";\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 switching = true;\n}\u00a0\u00a0\u00a0 }\u00a0 }}</script>",
      "syntax_highlighting": [
        {
          "text": "<ul id=\"id01\">",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " id=\"id01\"",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"id01\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</li>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</ul>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<script>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "function sortListDir() {\u00a0 \n var list, i, switching, b, shouldSwitch, dir, switchcount = 0;\u00a0 list \n  = document.getElementById(\"id01\");\u00a0 switching = true;\u00a0 // Set \n  the sorting direction to ascending:\u00a0 dir = \"asc\"; \u00a0 // Make a \n  loop that will continue until no switching has been done:\u00a0 while \n  (switching) {\u00a0\u00a0\u00a0 // Start by saying: no switching is done:\u00a0\u00a0\u00a0 \n  switching = false;\u00a0\u00a0\u00a0 b = list.getElementsByTagName(\"LI\");\u00a0\u00a0\u00a0 \n // Loop through all list-items:\u00a0\u00a0\u00a0 for (i = 0; i < (b.length \n  - 1); i++) {\u00a0\u00a0\u00a0\u00a0\u00a0 // Start by saying there should \n  be no switching:\u00a0\u00a0\u00a0\u00a0\u00a0 shouldSwitch = false;\u00a0\u00a0\u00a0\u00a0\u00a0 \n /* Check if the next item should switch place with the current item,\u00a0\u00a0\u00a0\u00a0\u00a0 \n  based on the sorting direction (asc or desc): */\u00a0\u00a0\u00a0\u00a0\u00a0 \n if (dir == \"asc\") {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if (b[i].innerHTML.toLowerCase() \n  > b[i + 1].innerHTML.toLowerCase()) {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n /* If next item is alphabetically lower than current item,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  shouldSwitch = true;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n break;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0\u00a0\u00a0 \n  } else if (dir == \"desc\") {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if \n  (b[i].innerHTML.toLowerCase() < b[i + 1].innerHTML.toLowerCase()) {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n /* If next item is alphabetically higher than current item,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  shouldSwitch= true;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n break;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0\u00a0\u00a0 \n  }\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0 if (shouldSwitch) {\u00a0\u00a0\u00a0\u00a0\u00a0 \n /* If a switch has been marked, make the switch\u00a0\u00a0\u00a0\u00a0\u00a0 \n  and mark that a switch has been done: */\u00a0\u00a0\u00a0\u00a0\u00a0 \n  b[i].parentNode.insertBefore(b[i + 1], b[i]);\u00a0\u00a0\u00a0\u00a0\u00a0 \n  switching = true;\u00a0\u00a0\u00a0\u00a0\u00a0 // Each time a switch is \n  done, increase switchcount by 1:\u00a0\u00a0\u00a0\u00a0\u00a0 switchcount \n  ++;\u00a0\u00a0\u00a0 } else {\u00a0\u00a0\u00a0\u00a0\u00a0 /* If no \n  switching has been done AND the direction is \"asc\",\u00a0\u00a0\u00a0\u00a0\u00a0 \n  set the direction to \"desc\" and run the while loop again. */\u00a0\u00a0\u00a0\u00a0\u00a0 \n if (switchcount == 0 && dir == \"asc\") {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  dir = \"desc\";\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 switching = true;\u00a0\u00a0\u00a0\u00a0\u00a0 \n  }\u00a0\u00a0\u00a0 }\u00a0 }}",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getElementById",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"id01\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "true",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "// Set \n  the sorting direction to ascending:",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\"asc\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "// Make a \n  loop that will continue until no switching has been done:",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "while",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Start by saying: no switching is done:",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "false",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "getElementsByTagName",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"LI\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Loop through all list-items:",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "length",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "// Start by saying there should \n  be no switching:",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "false",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "/* Check if the next item should switch place with the current item,\u00a0\u00a0\u00a0\u00a0\u00a0 \n  based on the sorting direction (asc or desc): */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"asc\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "toLowerCase",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "toLowerCase",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "/* If next item is alphabetically lower than current item,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "true",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "break",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "else",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\"desc\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "toLowerCase",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "toLowerCase",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "/* If next item is alphabetically higher than current item,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "true",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "break",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "/* If a switch has been marked, make the switch\u00a0\u00a0\u00a0\u00a0\u00a0 \n  and mark that a switch has been done: */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "parentNode",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "insertBefore",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "true",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "// Each time a switch is \n  done, increase switchcount by 1:",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "else",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "/* If no \n  switching has been done AND the direction is \"asc\",\u00a0\u00a0\u00a0\u00a0\u00a0 \n  set the direction to \"desc\" and run the while loop again. */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"asc\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"desc\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "true",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "</script>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate htmlHigh\">\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>ul<span class=\"attributecolor\" style=\"color:green\"> id<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"id01\"</span></span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\u00a0 <span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>Oslo<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\u00a0 <span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>Stockholm<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\u00a0 \n  <span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>Helsinki<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\u00a0 <span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>Berlin<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\u00a0 <span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>Rome<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\u00a0 \n  <span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>Madrid<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/li<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/ul<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/><br/><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>script<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><span class=\"jscolor\" style=\"color:black\"><br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span> sortListDir() {<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> list, i, switching, b, shouldSwitch, dir, switchcount = <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>;<br/>\u00a0 list <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  = document.<span class=\"jspropertycolor\" style=\"color:black\">getElementById</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"id01\"</span>);<br/>\u00a0 switching = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">true</span>;<br/>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Set \n  the sorting direction to ascending:<br/></span>\u00a0 dir = <span class=\"jsstringcolor\" style=\"color:green\">\"asc\"</span>; <br/>\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Make a \n  loop that will continue until no switching has been done:<br/></span>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">while</span> <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  (switching) {<br/>\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Start by saying: no switching is done:<br/></span>\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  switching = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">false</span>;<br/>\u00a0\u00a0\u00a0 b = list.<span class=\"jspropertycolor\" style=\"color:black\">getElementsByTagName</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"LI\"</span>);<br/>\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">// Loop through all list-items:<br/></span>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">for</span> (i = <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>; i &lt; (b.<span class=\"jspropertycolor\" style=\"color:black\">length</span> <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  - <span class=\"jsnumbercolor\" style=\"color:#905\">1</span>); i++) {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Start by saying there should \n  be no switching:<br/></span>\u00a0\u00a0\u00a0\u00a0\u00a0 shouldSwitch = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">false</span>;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">/* Check if the next item should switch place with the current item,<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 \n  based on the sorting direction (asc or desc): */</span><br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (dir == <span class=\"jsstringcolor\" style=\"color:green\">\"asc\"</span>) {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (b[i].<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span>.<span class=\"jspropertycolor\" style=\"color:black\">toLowerCase</span>() <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  &gt; b[i + <span class=\"jsnumbercolor\" style=\"color:#905\">1</span>].<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span>.<span class=\"jspropertycolor\" style=\"color:black\">toLowerCase</span>()) {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">/* If next item is alphabetically lower than current item,<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */</span><br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  shouldSwitch = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">true</span>;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">break</span>;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  } <span class=\"jskeywordcolor\" style=\"color:#005cc5\">else</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (dir == <span class=\"jsstringcolor\" style=\"color:green\">\"desc\"</span>) {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  (b[i].<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span>.<span class=\"jspropertycolor\" style=\"color:black\">toLowerCase</span>() &lt; b[i + <span class=\"jsnumbercolor\" style=\"color:#905\">1</span>].<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span>.<span class=\"jspropertycolor\" style=\"color:black\">toLowerCase</span>()) {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">/* If next item is alphabetically higher than current item,<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */</span><br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  shouldSwitch= <span class=\"jskeywordcolor\" style=\"color:#005cc5\">true</span>;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">break</span>;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  }<br/>\u00a0\u00a0\u00a0 }<br/>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (shouldSwitch) {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"commentcolor\" style=\"color:slategray\">/* If a switch has been marked, make the switch<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 \n  and mark that a switch has been done: */</span><br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  b[i].<span class=\"jspropertycolor\" style=\"color:black\">parentNode</span>.<span class=\"jspropertycolor\" style=\"color:black\">insertBefore</span>(b[i + <span class=\"jsnumbercolor\" style=\"color:#905\">1</span>], b[i]);<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  switching = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">true</span>;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">// Each time a switch is \n  done, increase switchcount by 1:<br/></span>\u00a0\u00a0\u00a0\u00a0\u00a0 switchcount <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  ++;<br/>\u00a0\u00a0\u00a0 } <span class=\"jskeywordcolor\" style=\"color:#005cc5\">else</span> {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"commentcolor\" style=\"color:slategray\">/* If no \n  switching has been done AND the direction is \"asc\",<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 \n  set the direction to \"desc\" and run the while loop again. */</span><br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (switchcount == <span class=\"jsnumbercolor\" style=\"color:#905\">0</span> &amp;&amp; dir == <span class=\"jsstringcolor\" style=\"color:green\">\"asc\"</span>) {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  dir = <span class=\"jsstringcolor\" style=\"color:green\">\"desc\"</span>;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 switching = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">true</span>;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  }<br/>\u00a0\u00a0\u00a0 }<br/>\u00a0 }<br/>}<br/></span><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/script<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/> </div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "<ul id=\"id01\">",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " id=\"id01\"",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"id01\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</li>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</ul>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<script>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "function sortListDir() {\u00a0 \n  var list, i, switching, b, shouldSwitch, dir, switchcount = 0;\u00a0 list \n  = document.getElementById(\"id01\");\u00a0 switching = true;\u00a0 // Set \n  the sorting direction to ascending:\u00a0 dir = \"asc\"; \u00a0 // Make a \n  loop that will continue until no switching has been done:\u00a0 while \n  (switching) {\u00a0\u00a0\u00a0 // Start by saying: no switching is done:\u00a0\u00a0\u00a0 \n  switching = false;\u00a0\u00a0\u00a0 b = list.getElementsByTagName(\"LI\");\u00a0\u00a0\u00a0 \n  // Loop through all list-items:\u00a0\u00a0\u00a0 for (i = 0; i < (b.length \n  - 1); i++) {\u00a0\u00a0\u00a0\u00a0\u00a0 // Start by saying there should \n  be no switching:\u00a0\u00a0\u00a0\u00a0\u00a0 shouldSwitch = false;\u00a0\u00a0\u00a0\u00a0\u00a0 \n  /* Check if the next item should switch place with the current item,\u00a0\u00a0\u00a0\u00a0\u00a0 \n  based on the sorting direction (asc or desc): */\u00a0\u00a0\u00a0\u00a0\u00a0 \n  if (dir == \"asc\") {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if (b[i].innerHTML.toLowerCase() \n  > b[i + 1].innerHTML.toLowerCase()) {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  /* If next item is alphabetically lower than current item,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  shouldSwitch = true;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  break;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0\u00a0\u00a0 \n  } else if (dir == \"desc\") {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if \n  (b[i].innerHTML.toLowerCase() < b[i + 1].innerHTML.toLowerCase()) {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  /* If next item is alphabetically higher than current item,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  shouldSwitch= true;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  break;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0\u00a0\u00a0 \n  }\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0 if (shouldSwitch) {\u00a0\u00a0\u00a0\u00a0\u00a0 \n  /* If a switch has been marked, make the switch\u00a0\u00a0\u00a0\u00a0\u00a0 \n  and mark that a switch has been done: */\u00a0\u00a0\u00a0\u00a0\u00a0 \n  b[i].parentNode.insertBefore(b[i + 1], b[i]);\u00a0\u00a0\u00a0\u00a0\u00a0 \n  switching = true;\u00a0\u00a0\u00a0\u00a0\u00a0 // Each time a switch is \n  done, increase switchcount by 1:\u00a0\u00a0\u00a0\u00a0\u00a0 switchcount \n  ++;\u00a0\u00a0\u00a0 } else {\u00a0\u00a0\u00a0\u00a0\u00a0 /* If no \n  switching has been done AND the direction is \"asc\",\u00a0\u00a0\u00a0\u00a0\u00a0 \n  set the direction to \"desc\" and run the while loop again. */\u00a0\u00a0\u00a0\u00a0\u00a0 \n  if (switchcount == 0 && dir == \"asc\") {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  dir = \"desc\";\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 switching = true;\u00a0\u00a0\u00a0\u00a0\u00a0 \n  }\u00a0\u00a0\u00a0 }\u00a0 }}",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getElementById",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"id01\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "true",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "// Set \n  the sorting direction to ascending:",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\"asc\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "// Make a \n  loop that will continue until no switching has been done:",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "while",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Start by saying: no switching is done:",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "false",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "getElementsByTagName",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"LI\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Loop through all list-items:",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "length",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "// Start by saying there should \n  be no switching:",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "false",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "/* Check if the next item should switch place with the current item,\u00a0\u00a0\u00a0\u00a0\u00a0 \n  based on the sorting direction (asc or desc): */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"asc\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "toLowerCase",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "toLowerCase",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "/* If next item is alphabetically lower than current item,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "true",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "break",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "else",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\"desc\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "toLowerCase",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "toLowerCase",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "/* If next item is alphabetically higher than current item,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  mark as a switch and break the loop: */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "true",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "break",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "/* If a switch has been marked, make the switch\u00a0\u00a0\u00a0\u00a0\u00a0 \n  and mark that a switch has been done: */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "parentNode",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "insertBefore",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "true",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "// Each time a switch is \n  done, increase switchcount by 1:",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "else",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "/* If no \n  switching has been done AND the direction is \"asc\",\u00a0\u00a0\u00a0\u00a0\u00a0 \n  set the direction to \"desc\" and run the while loop again. */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"asc\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"desc\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "true",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "</script>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Sort List Numerically",
      "level": "h2"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  if (Number(b[i].innerHTML) > Number(b[i + 1].innerHTML)) {\u00a0 \n  shouldSwitch =\u00a0 true;\u00a0 break;} ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "innerHTML",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "true",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "break",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "if (Number(b[i].innerHTML) > Number(b[i + 1].innerHTML)) {\nshouldSwitch =\u00a0 true;\u00a0 break;}",
      "syntax_highlighting": [
        {
          "text": "\n if (Number(b[i].innerHTML) > Number(b[i + 1].innerHTML)) {\u00a0 \n  shouldSwitch =\u00a0 true;\u00a0 break;} ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "innerHTML",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "true",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "break",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (Number(b[i].<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span>) &gt; Number(b[i + <span class=\"jsnumbercolor\" style=\"color:#905\">1</span>].<span class=\"jspropertycolor\" style=\"color:black\">innerHTML</span>)) {<br/>\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  shouldSwitch =\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">true</span>;<br/>\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">break</span>;<br/>}<br/> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  if (Number(b[i].innerHTML) > Number(b[i + 1].innerHTML)) {\u00a0 \n  shouldSwitch =\u00a0 true;\u00a0 break;} ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "innerHTML",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "true",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "break",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    }
  ]
}