{
  "title": "How To Create a Collapsible",
  "url": "https://www.w3schools.com/howto/howto_js_collapsible.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "How TO - Collapse",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Learn how to create a collapsible section.",
      "html": "<p class=\"intro\">Learn how to create a collapsible section.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Collapsible",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Click the button to toggle between showing and hiding the collapsible content.",
      "html": "<p>Click the button to toggle between showing and hiding the collapsible content.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Some collapsible content. Click the button to toggle between showing and hiding the collapsible content. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
      "html": "<p>Some collapsible content. Click the button to toggle between showing and hiding the collapsible content. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Try it Yourself \u00bb",
          "href": "https://www.w3schools.com/tryit.asp?filename=tryhow_js_collapsible",
          "title": ""
        }
      ],
      "text": "Try it Yourself \u00bb",
      "html": "<p>\n<a class=\"ws-btn\" href=\"tryit.asp?filename=tryhow_js_collapsible\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Create A Collapsible",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h5"
      },
      "text": "Step 1) Add HTML:",
      "level": "h5"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "<button type=\"button\" class=\"collapsible\">",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " type=\"button\" class=\"collapsible\"",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"button\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": "=\"collapsible\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</button>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<div class=\"content\">",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": " class=\"content\"",
            "color": "rgb(0, 128, 0)",
            "class": "attributecolor"
          },
          {
            "text": "=\"content\"",
            "color": "rgb(0, 92, 197)",
            "class": "attributevaluecolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<p>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</p>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "</div>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "htmlHigh"
        ],
        "isNotranslate": true
      },
      "code": "<button type=\"button\" class=\"collapsible\">Open Collapsible</button>\n<div class=\"content\">\n\u00a0 \n<p>Lorem ipsum...</p>\n</div>",
      "syntax_highlighting": [
        {
          "text": "<button type=\"button\" class=\"collapsible\">",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " type=\"button\" class=\"collapsible\"",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"button\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": "=\"collapsible\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</button>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<div class=\"content\">",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": " class=\"content\"",
          "color": "green",
          "class": [
            "attributecolor"
          ]
        },
        {
          "text": "=\"content\"",
          "color": "#005cc5",
          "class": [
            "attributevaluecolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<p>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</p>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "</div>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate htmlHigh\">\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>button<span class=\"attributecolor\" style=\"color:green\"> type<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"button\"</span> class<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"collapsible\"</span></span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>Open Collapsible<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/button<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>div<span class=\"attributecolor\" style=\"color:green\"> class<span class=\"attributevaluecolor\" style=\"color:#005cc5\">=\"content\"</span></span><span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/>\u00a0 \n  <span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>p<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span>Lorem ipsum...<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/p<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/div<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span> </div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "<button type=\"button\" class=\"collapsible\">",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " type=\"button\" class=\"collapsible\"",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"button\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": "=\"collapsible\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</button>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<div class=\"content\">",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": " class=\"content\"",
          "color": "rgb(0, 128, 0)",
          "class": "attributecolor"
        },
        {
          "text": "=\"content\"",
          "color": "rgb(0, 92, 197)",
          "class": "attributevaluecolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<p>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</p>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "</div>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h5"
      },
      "text": "Step 2) Add CSS:",
      "level": "h5"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Style the accordion:",
      "html": "<p>Style the accordion:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n/* Style the button that is used to open and close the \n  collapsible content */.collapsible {\u00a0 background-color: #eee;\u00a0 \n  color: #444;\u00a0 cursor: pointer;\u00a0 padding: 18px;\u00a0 \n  width: 100%;\u00a0 border: none;\u00a0 text-align: left;\u00a0 \n  outline: none;\u00a0 font-size: 15px;}/* Add a background color to the button if it is clicked on (add the \n.active class with JS), and when you move the mouse over it (hover) */\n  .active, .collapsible:hover {\u00a0 background-color: #ccc;}/* Style the \n  collapsible content. Note: \nhidden by default */.content {\u00a0 padding: 0 18px;\u00a0 display: \n  none;\u00a0 overflow: hidden;\u00a0 background-color: #f1f1f1;} ",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "/* Style the button that is used to open and close the \n  collapsible content */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0 background-color: #eee;\u00a0 \n  color: #444;\u00a0 cursor: pointer;\u00a0 padding: 18px;\u00a0 \n  width: 100%;\u00a0 border: none;\u00a0 text-align: left;\u00a0 \n  outline: none;\u00a0 font-size: 15px;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": #eee;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": #444;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": pointer;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": 18px;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": 100%;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": none;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": left;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": none;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": 15px;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "/* Add a background color to the button if it is clicked on (add the \n.active class with JS), and when you move the mouse over it (hover) */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0 background-color: #ccc;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": #ccc;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "/* Style the \n  collapsible content. Note: \nhidden by default */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0 padding: 0 18px;\u00a0 display: \n  none;\u00a0 overflow: hidden;\u00a0 background-color: #f1f1f1;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": 0 18px;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": \n  none;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": hidden;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": #f1f1f1;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "cssHigh"
        ],
        "isNotranslate": true
      },
      "code": "/* Style the button that is used to open and close the\ncollapsible content */.collapsible {\u00a0 background-color: #eee;\ncolor: #444;\u00a0 cursor: pointer;\u00a0 padding: 18px;\nwidth: 100%;\u00a0 border: none;\u00a0 text-align: left;\noutline: none;\u00a0 font-size: 15px;}/* Add a background color to the button if it is clicked on (add the\n.active class with JS), and when you move the mouse over it (hover) */\n.active, .collapsible:hover {\u00a0 background-color: #ccc;}/* Style the\ncollapsible content. Note:\nhidden by default */.content {\u00a0 padding: 0 18px;\u00a0 display:\nnone;\u00a0 overflow: hidden;\u00a0 background-color: #f1f1f1;}",
      "syntax_highlighting": [
        {
          "text": "\n/* Style the button that is used to open and close the \n  collapsible content */.collapsible {\u00a0 background-color: #eee;\u00a0 \n  color: #444;\u00a0 cursor: pointer;\u00a0 padding: 18px;\u00a0 \n  width: 100%;\u00a0 border: none;\u00a0 text-align: left;\u00a0 \n  outline: none;\u00a0 font-size: 15px;}/* Add a background color to the button if it is clicked on (add the \n.active class with JS), and when you move the mouse over it (hover) */\n  .active, .collapsible:hover {\u00a0 background-color: #ccc;}/* Style the \n  collapsible content. Note: \nhidden by default */.content {\u00a0 padding: 0 18px;\u00a0 display: \n  none;\u00a0 overflow: hidden;\u00a0 background-color: #f1f1f1;} ",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "/* Style the button that is used to open and close the \n  collapsible content */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0 background-color: #eee;\u00a0 \n  color: #444;\u00a0 cursor: pointer;\u00a0 padding: 18px;\u00a0 \n  width: 100%;\u00a0 border: none;\u00a0 text-align: left;\u00a0 \n  outline: none;\u00a0 font-size: 15px;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": #eee;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": #444;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": pointer;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": 18px;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": 100%;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": none;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": left;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": none;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": 15px;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "/* Add a background color to the button if it is clicked on (add the \n.active class with JS), and when you move the mouse over it (hover) */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0 background-color: #ccc;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": #ccc;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "/* Style the \n  collapsible content. Note: \nhidden by default */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0 padding: 0 18px;\u00a0 display: \n  none;\u00a0 overflow: hidden;\u00a0 background-color: #f1f1f1;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": 0 18px;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": \n  none;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": hidden;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": #f1f1f1;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate cssHigh\"><span class=\"cssselectorcolor\" style=\"color:#905\">\n<span class=\"commentcolor\" style=\"color:slategray\">/* Style the button that is used to open and close the \n  collapsible content */</span><br/>.collapsible <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0 background-color<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> #eee<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 \n  color<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> #444<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 cursor<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> pointer<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 padding<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 18px<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 \n  width<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 100%<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 border<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> none<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 text-align<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> left<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 \n  outline<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> none<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 font-size<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 15px<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span><br/><br/><span class=\"commentcolor\" style=\"color:slategray\">/* Add a background color to the button if it is clicked on (add the \n.active class with JS), and when you move the mouse over it (hover) */</span><br/>\n  .active, .collapsible:hover <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0 background-color<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> #ccc<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span><br/><br/><span class=\"commentcolor\" style=\"color:slategray\">/* Style the \n  collapsible content. Note: \nhidden by default */</span><br/>.content <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0 padding<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 0 18px<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 display<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> \n  none<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 overflow<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> hidden<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 background-color<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> #f1f1f1<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n/* Style the button that is used to open and close the \n  collapsible content */.collapsible {\u00a0 background-color: #eee;\u00a0 \n  color: #444;\u00a0 cursor: pointer;\u00a0 padding: 18px;\u00a0 \n  width: 100%;\u00a0 border: none;\u00a0 text-align: left;\u00a0 \n  outline: none;\u00a0 font-size: 15px;}/* Add a background color to the button if it is clicked on (add the \n.active class with JS), and when you move the mouse over it (hover) */\n  .active, .collapsible:hover {\u00a0 background-color: #ccc;}/* Style the \n  collapsible content. Note: \nhidden by default */.content {\u00a0 padding: 0 18px;\u00a0 display: \n  none;\u00a0 overflow: hidden;\u00a0 background-color: #f1f1f1;} ",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "/* Style the button that is used to open and close the \n  collapsible content */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0 background-color: #eee;\u00a0 \n  color: #444;\u00a0 cursor: pointer;\u00a0 padding: 18px;\u00a0 \n  width: 100%;\u00a0 border: none;\u00a0 text-align: left;\u00a0 \n  outline: none;\u00a0 font-size: 15px;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": #eee;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": #444;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": pointer;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": 18px;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": 100%;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": none;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": left;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": none;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": 15px;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "/* Add a background color to the button if it is clicked on (add the \n.active class with JS), and when you move the mouse over it (hover) */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0 background-color: #ccc;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": #ccc;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "/* Style the \n  collapsible content. Note: \nhidden by default */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0 padding: 0 18px;\u00a0 display: \n  none;\u00a0 overflow: hidden;\u00a0 background-color: #f1f1f1;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": 0 18px;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": \n  none;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": hidden;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": #f1f1f1;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h5"
      },
      "text": "Step 3) Add JavaScript:",
      "level": "h5"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  var coll = document.getElementsByClassName(\"collapsible\");var i;\n  for (i = 0; i < coll.length; i++) {\u00a0 coll[i].addEventListener(\"click\", \n  function() {\u00a0\u00a0\u00a0 this.classList.toggle(\"active\");\u00a0\u00a0\u00a0 \n  var content = this.nextElementSibling;\u00a0\u00a0\u00a0 if (content.style.display \n  === \"block\") {\u00a0\u00a0\u00a0\u00a0\u00a0 content.style.display = \n  \"none\";\u00a0\u00a0\u00a0 } else {\u00a0\u00a0\u00a0\u00a0\u00a0 \n  content.style.display = \"block\";\u00a0\u00a0\u00a0 }\u00a0 });} ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "getElementsByClassName",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"collapsible\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "length",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "addEventListener",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"click\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "classList",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "toggle",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"active\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "nextElementSibling",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "style",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "display",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"block\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "style",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "display",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\"none\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "else",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "style",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "display",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"block\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "jsHigh"
        ],
        "isNotranslate": true
      },
      "code": "var coll = document.getElementsByClassName(\"collapsible\");var i;\nfor (i = 0; i < coll.length; i++) {\u00a0 coll[i].addEventListener(\"click\",\nfunction() {\u00a0\u00a0\u00a0 this.classList.toggle(\"active\");\nvar content = this.nextElementSibling;\u00a0\u00a0\u00a0 if (content.style.display\n=== \"block\") {\u00a0\u00a0\u00a0\u00a0\u00a0 content.style.display =\n\"none\";\u00a0\u00a0\u00a0 } else {\ncontent.style.display = \"block\";\u00a0\u00a0\u00a0 }\u00a0 });}",
      "syntax_highlighting": [
        {
          "text": "\n var coll = document.getElementsByClassName(\"collapsible\");var i;\n for (i = 0; i < coll.length; i++) {\u00a0 coll[i].addEventListener(\"click\", \n function() {\u00a0\u00a0\u00a0 this.classList.toggle(\"active\");\u00a0\u00a0\u00a0 \n var content = this.nextElementSibling;\u00a0\u00a0\u00a0 if (content.style.display \n  === \"block\") {\u00a0\u00a0\u00a0\u00a0\u00a0 content.style.display = \n \"none\";\u00a0\u00a0\u00a0 } else {\u00a0\u00a0\u00a0\u00a0\u00a0 \n  content.style.display = \"block\";\u00a0\u00a0\u00a0 }\u00a0 });} ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "getElementsByClassName",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"collapsible\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "length",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "addEventListener",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"click\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "classList",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "toggle",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"active\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "nextElementSibling",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "style",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "display",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"block\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "style",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "display",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\"none\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "else",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "style",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "display",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"block\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> coll = document.<span class=\"jspropertycolor\" style=\"color:black\">getElementsByClassName</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"collapsible\"</span>);<br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> i;<br/><br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">for</span> (i = <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>; i &lt; coll.<span class=\"jspropertycolor\" style=\"color:black\">length</span>; i++) {<br/>\u00a0 coll[i].<span class=\"jspropertycolor\" style=\"color:black\">addEventListener</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"click\"</span>, <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span>() {<br/>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">classList</span>.<span class=\"jspropertycolor\" style=\"color:black\">toggle</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"active\"</span>);<br/>\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> content = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">nextElementSibling</span>;<br/>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (content.<span class=\"jspropertycolor\" style=\"color:black\">style</span>.<span class=\"jspropertycolor\" style=\"color:black\">display</span> <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  === <span class=\"jsstringcolor\" style=\"color:green\">\"block\"</span>) {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 content.<span class=\"jspropertycolor\" style=\"color:black\">style</span>.<span class=\"jspropertycolor\" style=\"color:black\">display</span> = <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jsstringcolor\" style=\"color:green\">\"none\"</span>;<br/>\u00a0\u00a0\u00a0 } <span class=\"jskeywordcolor\" style=\"color:#005cc5\">else</span> {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  content.<span class=\"jspropertycolor\" style=\"color:black\">style</span>.<span class=\"jspropertycolor\" style=\"color:black\">display</span> = <span class=\"jsstringcolor\" style=\"color:green\">\"block\"</span>;<br/>\u00a0\u00a0\u00a0 }<br/>\u00a0 });<br/>} </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  var coll = document.getElementsByClassName(\"collapsible\");var i;\n  for (i = 0; i < coll.length; i++) {\u00a0 coll[i].addEventListener(\"click\", \n  function() {\u00a0\u00a0\u00a0 this.classList.toggle(\"active\");\u00a0\u00a0\u00a0 \n  var content = this.nextElementSibling;\u00a0\u00a0\u00a0 if (content.style.display \n  === \"block\") {\u00a0\u00a0\u00a0\u00a0\u00a0 content.style.display = \n  \"none\";\u00a0\u00a0\u00a0 } else {\u00a0\u00a0\u00a0\u00a0\u00a0 \n  content.style.display = \"block\";\u00a0\u00a0\u00a0 }\u00a0 });} ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "getElementsByClassName",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"collapsible\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "length",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "addEventListener",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"click\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "classList",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "toggle",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"active\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "nextElementSibling",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "style",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "display",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"block\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "style",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "display",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\"none\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "else",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "style",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "display",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"block\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "jsHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Animated Collapsible (Slide Down)",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To make an animated collapsible, add max-height: 0 , overflow: hidden and a transition for the max-height property, to the panel class.",
      "html": "<p>To make an animated collapsible, add <code>max-height: 0</code>, <code>overflow: hidden</code> and \na <code>transition</code> for the max-height property, to \nthe <code>panel</code> class.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Then, use JavaScript to slide down the content by setting a calculated max-height , depending on the panel's height on different screen sizes:",
      "html": "<p>Then, use JavaScript to slide down the content by setting a calculated \n<code>max-height</code>, depending on the panel's height on different screen sizes: </p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "<style>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ".content {\u00a0\u00a0padding: 0 18px;\u00a0 background-color: white;\n  \u00a0 \n  max-height: 0;\u00a0 overflow: hidden;\u00a0 \n  transition: max-height 0.2s ease-out;}",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0\u00a0padding: 0 18px;\u00a0 background-color: white;\n  \u00a0 \n  max-height: 0;\u00a0 overflow: hidden;\u00a0 \n  transition: max-height 0.2s ease-out;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": 0 18px;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": white;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": 0;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": hidden;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": max-height 0.2s ease-out;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "</style>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "<script>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": "var \n  coll = \n  document.getElementsByClassName(\"collapsible\");var i;for (i = 0; i < \n  coll.length; i++) {\u00a0 coll[i].addEventListener(\"click\", function() {\u00a0\u00a0\u00a0 this.classList.toggle(\"active\");\n  \u00a0\u00a0\u00a0\n  var content = this.nextElementSibling;\u00a0\u00a0\u00a0 if (content.style.maxHeight){\n  \u00a0\u00a0\u00a0\u00a0\u00a0\n  content.style.maxHeight = null;\u00a0\u00a0\u00a0 } else {\u00a0\u00a0\u00a0\u00a0\u00a0 \n  content.style.maxHeight = \n  content.scrollHeight + \"px\";\u00a0\u00a0\u00a0 } \u00a0 });}\n  ",
            "color": "rgb(0, 0, 0)",
            "class": "jscolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "getElementsByClassName",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"collapsible\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "for",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "length",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "addEventListener",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"click\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "function",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "classList",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "toggle",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"active\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "var",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "this",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "nextElementSibling",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "if",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "style",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "maxHeight",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "style",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "maxHeight",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "null",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "else",
            "color": "rgb(0, 92, 197)",
            "class": "jskeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "style",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "maxHeight",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "scrollHeight",
            "color": "rgb(0, 0, 0)",
            "class": "jspropertycolor"
          },
          {
            "text": "\"px\"",
            "color": "rgb(0, 128, 0)",
            "class": "jsstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "jsnumbercolor"
          },
          {
            "text": "</script>",
            "color": "rgb(153, 0, 85)",
            "class": "tagnamecolor"
          },
          {
            "text": "<",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          },
          {
            "text": ">",
            "color": "rgb(153, 153, 153)",
            "class": "tagcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "htmlHigh"
        ],
        "isNotranslate": true
      },
      "code": "<style>.content {\u00a0\u00a0padding: 0 18px;\u00a0 background-color: white;\n\nmax-height: 0;\u00a0 overflow: hidden;\ntransition: max-height 0.2s ease-out;}</style>\n\n<script>var \ncoll =\ndocument.getElementsByClassName(\"collapsible\");var i;for (i = 0; i <\ncoll.length; i++) {\u00a0 coll[i].addEventListener(\"click\", function() {\u00a0\u00a0\u00a0 this.classList.toggle(\"active\");\n\nvar content = this.nextElementSibling;\u00a0\u00a0\u00a0 if (content.style.maxHeight){\n\ncontent.style.maxHeight = null;\u00a0\u00a0\u00a0 } else {\ncontent.style.maxHeight =\ncontent.scrollHeight + \"px\";\u00a0\u00a0\u00a0 } \u00a0 });}\n</script>",
      "syntax_highlighting": [
        {
          "text": "<style>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ".content {\u00a0\u00a0padding: 0 18px;\u00a0 background-color: white;\n  \u00a0 \n  max-height: 0;\u00a0 overflow: hidden;\u00a0 \n  transition: max-height 0.2s ease-out;}",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0\u00a0padding: 0 18px;\u00a0 background-color: white;\n  \u00a0 \n  max-height: 0;\u00a0 overflow: hidden;\u00a0 \n  transition: max-height 0.2s ease-out;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": 0 18px;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": white;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": 0;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": hidden;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": max-height 0.2s ease-out;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "</style>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "<script>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": "var \n  coll = \n  document.getElementsByClassName(\"collapsible\");var i;for (i = 0; i < \n  coll.length; i++) {\u00a0 coll[i].addEventListener(\"click\", function() {\u00a0\u00a0\u00a0 this.classList.toggle(\"active\");\n  \u00a0\u00a0\u00a0\n var content = this.nextElementSibling;\u00a0\u00a0\u00a0 if (content.style.maxHeight){\n  \u00a0\u00a0\u00a0\u00a0\u00a0\n  content.style.maxHeight = null;\u00a0\u00a0\u00a0 } else {\u00a0\u00a0\u00a0\u00a0\u00a0 \n  content.style.maxHeight = \n  content.scrollHeight + \"px\";\u00a0\u00a0\u00a0 } \u00a0 });}\n ",
          "color": "black",
          "class": [
            "jscolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "getElementsByClassName",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"collapsible\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "for",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "length",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "addEventListener",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"click\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "function",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "classList",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "toggle",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"active\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "var",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "this",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "nextElementSibling",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "if",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "style",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "maxHeight",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "style",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "maxHeight",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "null",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "else",
          "color": "#005cc5",
          "class": [
            "jskeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "style",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "maxHeight",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "scrollHeight",
          "color": "black",
          "class": [
            "jspropertycolor"
          ]
        },
        {
          "text": "\"px\"",
          "color": "green",
          "class": [
            "jsstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "jsnumbercolor"
          ]
        },
        {
          "text": "</script>",
          "color": "#905",
          "class": [
            "tagnamecolor"
          ]
        },
        {
          "text": "<",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        },
        {
          "text": ">",
          "color": "#999",
          "class": [
            "tagcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate htmlHigh\">\n<span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>style<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><span class=\"cssselectorcolor\" style=\"color:#905\"><br/>.content <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0\u00a0padding<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 0 18px<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 background-color<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> white<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\n  \u00a0 \n  max-height<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 0<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 overflow<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> hidden<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 \n  transition<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> max-height 0.2s ease-out<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span><br/></span><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/style<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/><br/><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>script<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><span class=\"jscolor\" style=\"color:black\"><br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  coll = <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  document.<span class=\"jspropertycolor\" style=\"color:black\">getElementsByClassName</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"collapsible\"</span>);<br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> i;<br/><br/><span class=\"jskeywordcolor\" style=\"color:#005cc5\">for</span> (i = <span class=\"jsnumbercolor\" style=\"color:#905\">0</span>; i &lt; <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  coll.<span class=\"jspropertycolor\" style=\"color:black\">length</span>; i++) {<br/>\u00a0 coll[i].<span class=\"jspropertycolor\" style=\"color:black\">addEventListener</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"click\"</span>, <span class=\"jskeywordcolor\" style=\"color:#005cc5\">function</span>() {<br/>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">classList</span>.<span class=\"jspropertycolor\" style=\"color:black\">toggle</span>(<span class=\"jsstringcolor\" style=\"color:green\">\"active\"</span>);<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0\u00a0\u00a0<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> <span class=\"jskeywordcolor\" style=\"color:#005cc5\">var</span> content = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">this</span>.<span class=\"jspropertycolor\" style=\"color:black\">nextElementSibling</span>;<br/>\u00a0\u00a0\u00a0 <span class=\"jskeywordcolor\" style=\"color:#005cc5\">if</span> (content.<span class=\"jspropertycolor\" style=\"color:black\">style</span>.<span class=\"jspropertycolor\" style=\"color:black\">maxHeight</span>){<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  \u00a0\u00a0\u00a0\u00a0\u00a0<span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  content.<span class=\"jspropertycolor\" style=\"color:black\">style</span>.<span class=\"jspropertycolor\" style=\"color:black\">maxHeight</span> = <span class=\"jskeywordcolor\" style=\"color:#005cc5\">null</span>;<br/>\u00a0\u00a0\u00a0 } <span class=\"jskeywordcolor\" style=\"color:#005cc5\">else</span> {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  content.<span class=\"jspropertycolor\" style=\"color:black\">style</span>.<span class=\"jspropertycolor\" style=\"color:black\">maxHeight</span> = <span class=\"jsnumbercolor\" style=\"color:#905\">\n</span>  content.<span class=\"jspropertycolor\" style=\"color:black\">scrollHeight</span> + <span class=\"jsstringcolor\" style=\"color:green\">\"px\"</span>;<br/>\u00a0\u00a0\u00a0 } <br/>\u00a0 });<br/>}<br/><span class=\"jsnumbercolor\" style=\"color:#905\">\n</span> </span><span class=\"tagnamecolor\" style=\"color:#905\"><span class=\"tagcolor\" style=\"color:#999\">&lt;</span>/script<span class=\"tagcolor\" style=\"color:#999\">&gt;</span></span><br/> </div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "<style>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ".content {\u00a0\u00a0padding: 0 18px;\u00a0 background-color: white;\n  \u00a0 \n  max-height: 0;\u00a0 overflow: hidden;\u00a0 \n  transition: max-height 0.2s ease-out;}",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0\u00a0padding: 0 18px;\u00a0 background-color: white;\n  \u00a0 \n  max-height: 0;\u00a0 overflow: hidden;\u00a0 \n  transition: max-height 0.2s ease-out;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": 0 18px;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": white;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": 0;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": hidden;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": max-height 0.2s ease-out;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "</style>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "<script>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": "var \n  coll = \n  document.getElementsByClassName(\"collapsible\");var i;for (i = 0; i < \n  coll.length; i++) {\u00a0 coll[i].addEventListener(\"click\", function() {\u00a0\u00a0\u00a0 this.classList.toggle(\"active\");\n  \u00a0\u00a0\u00a0\n  var content = this.nextElementSibling;\u00a0\u00a0\u00a0 if (content.style.maxHeight){\n  \u00a0\u00a0\u00a0\u00a0\u00a0\n  content.style.maxHeight = null;\u00a0\u00a0\u00a0 } else {\u00a0\u00a0\u00a0\u00a0\u00a0 \n  content.style.maxHeight = \n  content.scrollHeight + \"px\";\u00a0\u00a0\u00a0 } \u00a0 });}\n  ",
          "color": "rgb(0, 0, 0)",
          "class": "jscolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "getElementsByClassName",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"collapsible\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "for",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "length",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "addEventListener",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"click\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "function",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "classList",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "toggle",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"active\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "var",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "this",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "nextElementSibling",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "if",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "style",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "maxHeight",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "style",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "maxHeight",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "null",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "else",
          "color": "rgb(0, 92, 197)",
          "class": "jskeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "style",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "maxHeight",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "scrollHeight",
          "color": "rgb(0, 0, 0)",
          "class": "jspropertycolor"
        },
        {
          "text": "\"px\"",
          "color": "rgb(0, 128, 0)",
          "class": "jsstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "jsnumbercolor"
        },
        {
          "text": "</script>",
          "color": "rgb(153, 0, 85)",
          "class": "tagnamecolor"
        },
        {
          "text": "<",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        },
        {
          "text": ">",
          "color": "rgb(153, 153, 153)",
          "class": "tagcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "htmlHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Add Icons",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Add a symbol to each button to indicate whether the collapsible content is open or closed:",
      "html": "<p>Add a symbol to each button to indicate whether the collapsible content is \nopen or closed:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  .collapsible:after {\u00a0\u00a0content: '\\02795'; /* Unicode \ncharacter for \"plus\" sign (+) */\u00a0 font-size: 13px;\n  \u00a0 color: white;\u00a0 float: right;\u00a0 \nmargin-left: 5px;}\n  .active:after {\u00a0\u00a0content: \"\\2796\"; /* \nUnicode character for \"minus\" sign (-) */} ",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0\u00a0content: '\\02795'; /* Unicode \ncharacter for \"plus\" sign (+) */\u00a0 font-size: 13px;\n  \u00a0 color: white;\u00a0 float: right;\u00a0 \nmargin-left: 5px;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": '\\02795';",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "/* Unicode \ncharacter for \"plus\" sign (+) */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": ": 13px;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": white;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": right;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ": 5px;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0\u00a0content: \"\\2796\"; /* \nUnicode character for \"minus\" sign (-) */",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": \"\\2796\";",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "/* \nUnicode character for \"minus\" sign (-) */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "cssHigh"
        ],
        "isNotranslate": true
      },
      "code": ".collapsible:after {\u00a0\u00a0content: '\\02795'; /* Unicode\ncharacter for \"plus\" sign (+) */\u00a0 font-size: 13px;\ncolor: white;\u00a0 float: right;\nmargin-left: 5px;}\n.active:after {\u00a0\u00a0content: \"\\2796\"; /*\nUnicode character for \"minus\" sign (-) */}",
      "syntax_highlighting": [
        {
          "text": "\n  .collapsible:after {\u00a0\u00a0content: '\\02795'; /* Unicode \ncharacter for \"plus\" sign (+) */\u00a0 font-size: 13px;\n  \u00a0 color: white;\u00a0 float: right;\u00a0 \nmargin-left: 5px;}\n  .active:after {\u00a0\u00a0content: \"\\2796\"; /* \nUnicode character for \"minus\" sign (-) */} ",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0\u00a0content: '\\02795'; /* Unicode \ncharacter for \"plus\" sign (+) */\u00a0 font-size: 13px;\n  \u00a0 color: white;\u00a0 float: right;\u00a0 \nmargin-left: 5px;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": '\\02795';",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "/* Unicode \ncharacter for \"plus\" sign (+) */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": ": 13px;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": white;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": right;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ": 5px;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0\u00a0content: \"\\2796\"; /* \nUnicode character for \"minus\" sign (-) */",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": \"\\2796\";",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "/* \nUnicode character for \"minus\" sign (-) */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate cssHigh\"><span class=\"cssselectorcolor\" style=\"color:#905\">\n  .collapsible:after <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0\u00a0content<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> '\\02795'<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span> <span class=\"commentcolor\" style=\"color:slategray\">/* Unicode \ncharacter for \"plus\" sign (+) */</span><br/>\u00a0 font-size<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 13px<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\n  \u00a0 color<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> white<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 float<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> right<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/>\u00a0 \nmargin-left<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> 5px<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span><br/><br/>\n  .active:after <span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0\u00a0content<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> \"\\2796\"<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span> <span class=\"commentcolor\" style=\"color:slategray\">/* \nUnicode character for \"minus\" sign (-) */</span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span><br/> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  .collapsible:after {\u00a0\u00a0content: '\\02795'; /* Unicode \ncharacter for \"plus\" sign (+) */\u00a0 font-size: 13px;\n  \u00a0 color: white;\u00a0 float: right;\u00a0 \nmargin-left: 5px;}\n  .active:after {\u00a0\u00a0content: \"\\2796\"; /* \nUnicode character for \"minus\" sign (-) */} ",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0\u00a0content: '\\02795'; /* Unicode \ncharacter for \"plus\" sign (+) */\u00a0 font-size: 13px;\n  \u00a0 color: white;\u00a0 float: right;\u00a0 \nmargin-left: 5px;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": '\\02795';",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "/* Unicode \ncharacter for \"plus\" sign (+) */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": ": 13px;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": white;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": right;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ": 5px;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0\u00a0content: \"\\2796\"; /* \nUnicode character for \"minus\" sign (-) */",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": \"\\2796\";",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "/* \nUnicode character for \"minus\" sign (-) */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "is_notranslate": true
    }
  ]
}