{
  "id": "8e67b57c-6a1f-4580-aec7-20184b330b34",
  "title": "CSSGrid Container",
  "slug": "cssgrid-container",
  "metadata": {
    "description": "Learn about CSSGrid Container with clear explanations and practical examples.",
    "keywords": [
      "c",
      "grid",
      "container",
      "content",
      "space",
      "columns",
      "property",
      "display",
      "template",
      "items",
      "example"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 7,
    "category": "LearnCSS",
    "subcategory": "Grid Container"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "CSS\nGrid Container",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "1\n2\n3\n4\n5\n6\n7\n8\n\nGrid Container\nA grid container contains one or more grid items arranged in columns and rows.\nDirect child elements(s) of the grid container automatically becomes grid items.\nAn element becomes a grid container when its\ndisplay\nproperty \nis set to\ngrid\nor\ninline-grid\n.\nGrid Tracks\nThe rows and columns of a grid is defined with the\ngrid-template-rows\nand the\ngrid-template-columns\nproperties (or \nthe shorthand\ngrid\nor\ngrid-template\nproperties).\nThese define the grid tracks. A grid track is the space between two adjacent grid lines.\nThe grid-template-columns Property\nThe\ngrid-template-columns\nproperty defines the \nnumber of columns in your grid layout, and it can define the width of each column.\nThe value is a space-separated-list, where each value defines the width \nof the respective column.\nIf you want your grid layout to contain 4 columns, specify the width of the 4 columns, or \"auto\" if all columns should have the same width.\nExample\nMake a grid with 4 columns of equal width:\n.grid-container {\ndisplay: grid;\ngrid-template-columns: auto auto auto auto;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nThe\ngrid-template-columns\nproperty can also be used to specify the \nexact size (width) of the columns, or a mix of fixed size and auto.\nExample\nSet a fixed size for column 1, 2, and 4, and keep column 3 as auto size:\n.grid-container {\ndisplay: grid;\ngrid-template-columns: 80px 200px auto 40px;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nNote:\nIf you have more than 4 grid items in a 4 columns grid, the grid will automatically \nadd a new row to put the items in.\nCell Sizing with the fr Unit\nThe\nfr\nunit can be used when defining grids, \nlike any other CSS length such as %, px or em.\nThe\nfr\nunit stands for \"fraction\". \nThis unit automatically divides the available space into fractions.\nExample: 1fr will take 1 fraction of the available space, while 2fr will take \n2 fractions of the available space.\nExample\nHere, each column will take up 25% of the container width, splitting it equally:\n.grid-container {\ndisplay: grid;\ngrid-template-columns: 1fr 1fr 1fr 1fr;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nExample\nHere, the second column will be twice as big as the others:\n.grid-container {\ndisplay: grid;\ngrid-template-columns: 1fr 2fr 1fr 1fr;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nThe grid-template-rows Property\nThe\ngrid-template-rows\nproperty defines the height of each row.\nThe value is a space-separated-list, where each value defines the height of the respective row:\nExample\n.grid-container {\ndisplay: grid;\ngrid-template-rows: 80px 200px;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nNotice that the first row in the grid above is 80px high and the second row is 200px high. \nThe \nThe justify-content Property\nThe\njustify-content\nproperty is used to \nalign the grid items when they do not use all available space on the main-axis (horizontally).\nThe\njustify-content\nproperty can have one of the following values:\nspace-evenly\nspace-around\nspace-between\ncenter\nstart\nend\nNote:\nThe grid item's total width has to be less than the container's width for the\njustify-content\nproperty to have any effect.\nExample\nThe\nspace-evenly\nvalue displays the grid items with equal space around them:\n.grid-container {\ndisplay: grid;\njustify-content: space-evenly;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nExample\nThe\nspace-around\nvalue displays the grid items with space \naround them:\n.grid-container {\ndisplay: grid;\njustify-content: space-around;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nExample\nThe\nspace-between\nvalue displays the grid items with space between them:\n.grid-container {\ndisplay: grid;\njustify-content: space-between;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nExample\nThe\ncenter\nvalue positions the grid items in the center of the container:\n.grid-container {\ndisplay: grid;\njustify-content: center;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nExample\nThe\nstart\nvalue positions the grid items at the \n  start of the container:\n.grid-container {\ndisplay: grid;\njustify-content: start;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nExample\nThe\nend\nvalue positions the grid items at the end of the container:\n.grid-container {\ndisplay: grid;\njustify-content: end;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nThe align-content Property\nThe\nalign-content\nproperty is used to \nalign the grid items when they do not use all available space on the cross-axis (vertically).\nThe\nalign-content\nproperty can have one of the following values:\nspace-evenly\nspace-around\nspace-between\ncenter\nstart\nend\nNote:\nThe grid item's total height has to be less than the container's height for the\nalign-content\nproperty to have any effect.\nIn the following examples we use a 400 pixels high container, to better demonstrate the\nalign-content\nproperty.\nExample\nThe\ncenter\nvalue positions the grid items in the middle of the container:\n.grid-container {\ndisplay: grid;\nheight: 400px;\nalign-content: center;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nExample\nWith\nspace-evenly\n, the grid lines are evenly distributed in the \n  grid container, with equal space \non top, bottom and between:\n.grid-container {\ndisplay: grid;\nheight: 400px;\nalign-content: space-evenly;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nExample\nWith\nspace-around\n, the space between the \n  grid lines are \nequal, but the space before the first grid item and after the last grid item is set to \nhalf of the space between the grid lines:\n.grid-container {\ndisplay: grid;\nheight: 400px;\nalign-content: space-around;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nExample\nWith\nspace-between\n, the space between the \n  grid lines are \nequal, but the first grid item is flush with the start edge of the container, and the \nlast grid item is flush with the end edge of the container:\n.grid-container {\ndisplay: grid;\nheight: 400px;\nalign-content: space-between;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nExample\nThe\nstart\nvalue positions the grid items \n  at the start of the container:\n.grid-container {\ndisplay: grid;\nheight: 400px;\nalign-content: start;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nExample\nThe\nend\nvalue positions the grid items at \n  the end of the container:\n.grid-container {\ndisplay: grid;\nheight: 400px;\nalign-content: end;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nThe place-content Property\nThe\nplace-content\nproperty is a shorthand \nproperty for the\nalign-content\nand the\njustify-content\nproperties.\nIf the\nplace-content\nproperty has two \nvalues:\nplace-content: start center;\n- the\nalign-content\nvalue is 'start' and\njustify-content\nvalue is 'center'\nIf the\nplace-content\nproperty has one value:\nplace-content: end;\n- both\nalign-content\nand\njustify-content\nvalues are 'end'\nNote:\nThe grid item's total height and width has to be less than the container's height \nand width for the\nplace-content\nproperty to have any effect.\nExample\nThe\ncenter\nvalue positions the grid items in the middle of the container \n  (both vertically and horizontally):\n.grid-container {\ndisplay: grid;\nheight: 400px;\nplace-content: center;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nExample\nThe\nend space-between\nvalue aligns the grid lines towards the bottom of the grid container, \n  and aligns the grid items with the same space between them horizontally:\n.grid-container {\ndisplay: grid;\nheight: 400px;\nplace-content: end space-between;\n}\nResult:\n1\n2\n3\n4\n5\n6\n7\n8\n\nCSS Grid Container Properties\nProperty\nDescription\nalign-content\nVertically aligns the whole grid inside the container (when total grid \n    size is smaller than container)\nalign-items\nAligns content in a grid item along the column axis\ndisplay\nSpecifies the display behavior (the type of rendering box) of an element\ncolumn-gap\nSpecifies the gap between the columns\ngap\nA shorthand property for the\nrow-gap\nand the\ncolumn-gap\nproperties\ngrid\nA shorthand property for the\ngrid-template-rows, \n    grid-template-columns, grid-template-areas, grid-auto-rows, \n    grid-auto-columns\n, and the\ngrid-auto-flow\nproperties\ngrid-auto-columns\nSpecifies a default column size\ngrid-auto-flow\nSpecifies how auto-placed items are inserted in the grid\ngrid-auto-rows\nSpecifies a default row size\ngrid-template\nA shorthand property for the\ngrid-template-rows\n,\ngrid-template-columns\nand\ngrid-areas\nproperties\ngrid-template-areas\nSpecifies how to display columns and rows, using named grid items\ngrid-template-columns\nSpecifies the size of the columns, and how many columns in a grid layout\ngrid-template-rows\nSpecifies the size of the rows in a grid layout\njustify-content\nHorizontally aligns the whole grid inside the container (when total grid \n    size is smaller than container)\nplace-content\nA shorthand property for the\nalign-content\nand the\njustify-content\nproperties\nrow-gap\nSpecifies the gap between the grid rows\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": ".grid-container {\ndisplay: grid;\ngrid-template-columns: auto auto auto auto;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": ".grid-container {\ndisplay: grid;\ngrid-template-columns: 80px 200px auto 40px;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": ".grid-container {\ndisplay: grid;\ngrid-template-columns: 1fr 1fr 1fr 1fr;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": ".grid-container {\ndisplay: grid;\ngrid-template-columns: 1fr 2fr 1fr 1fr;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": ".grid-container {\ndisplay: grid;\ngrid-template-rows: 80px 200px;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": ".grid-container {\ndisplay: grid;\njustify-content: space-evenly;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": ".grid-container {\ndisplay: grid;\njustify-content: space-around;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": ".grid-container {\ndisplay: grid;\njustify-content: space-between;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": ".grid-container {\ndisplay: grid;\njustify-content: center;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": ".grid-container {\ndisplay: grid;\njustify-content: start;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 13,
      "code": ".grid-container {\ndisplay: grid;\njustify-content: end;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 14,
      "code": ".grid-container {\ndisplay: grid;\nheight: 400px;\nalign-content: center;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 15,
      "code": ".grid-container {\ndisplay: grid;\nheight: 400px;\nalign-content: space-evenly;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 16,
      "code": ".grid-container {\ndisplay: grid;\nheight: 400px;\nalign-content: space-around;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 17,
      "code": ".grid-container {\ndisplay: grid;\nheight: 400px;\nalign-content: space-between;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 18,
      "code": ".grid-container {\ndisplay: grid;\nheight: 400px;\nalign-content: start;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 19,
      "code": ".grid-container {\ndisplay: grid;\nheight: 400px;\nalign-content: end;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 20,
      "code": ".grid-container {\ndisplay: grid;\nheight: 400px;\nplace-content: center;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 21,
      "code": ".grid-container {\ndisplay: grid;\nheight: 400px;\nplace-content: end space-between;\n}",
      "language": "css",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": ".grid-container {\n# TODO: Complete this line\ngrid-template-columns: auto auto auto auto;\n}",
      "solution": ".grid-container {\ndisplay: grid;\ngrid-template-columns: auto auto auto auto;\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": ".grid-container {\ndisplay: grid;\n# TODO: Complete this line\n}",
      "solution": ".grid-container {\ndisplay: grid;\ngrid-template-columns: 80px 200px auto 40px;\n}"
    }
  ],
  "related_topics": [
    {
      "id": "32f0c84d-14bc-45ef-855c-6b48d740a7c0",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "8305dd3c-e34f-4b09-a616-d3a142950d4c",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "7befb5fb-0062-42e8-86d3-c09e091c8d27",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is An element becomes a grid container when its\ndisplay\nproperty?",
      "options": [
        "set to\ngrid\nor\ninline-grid",
        "None of the above.",
        "defined with the\ngrid-template-rows\nand the\ngrid-template-columns\nproperties (or \nthe shorthand\ngrid\nor\ngrid-template\nproperties)",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of An element becomes a grid container when its\ndisplay\nproperty is 'set to\ngrid\nor\ninline-grid'."
    },
    {
      "question": "What is Grid Tracks\nThe rows and columns of a grid?",
      "options": [
        "None of the above.",
        "defined with the\ngrid-template-rows\nand the\ngrid-template-columns\nproperties (or \nthe shorthand\ngrid\nor\ngrid-template\nproperties)",
        "None of the above.",
        "set to\ngrid\nor\ninline-grid"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Grid Tracks\nThe rows and columns of a grid is 'defined with the\ngrid-template-rows\nand the\ngrid-template-columns\nproperties (or \nthe shorthand\ngrid\nor\ngrid-template\nproperties)'."
    }
  ],
  "summary": "This tutorial covers CSSGrid Container concepts and techniques. You'll learn how to use CSSGrid Container effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of CSSGrid Container and how to apply it in your projects."
}