{
  "id": "d3ed525d-35cd-46f8-b49f-ee2e684cd01c",
  "title": "CSSImage Filter Effects",
  "slug": "cssimage-filter-effects",
  "metadata": {
    "description": "Learn about CSSImage Filter Effects with clear explanations and practical examples.",
    "keywords": [
      "c",
      "filter",
      "image",
      "function",
      "element",
      "blur",
      "contrast",
      "grayscale",
      "sepia",
      "effect",
      "opacity"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnCSS",
    "subcategory": "CSS Image Filters"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "CSS\nImage Filter Effects",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The CSS filter property is used to add visual effects to elements.\nCSS Filters\nThe CSS\nfilter\nproperty is used to add visual effects (like blur and saturation) to elements.\nWithin the filter property, you can use the following CSS functions:\nblur()\nbrightness()\ncontrast()\ndrop-shadow()\ngrayscale()\nhue-rotate()\ninvert()\nopacity()\nsaturate()\nsepia()\nThe CSS blur() Function\nThe\nblur()\nfilter function applies a blur effect to an element. A larger value will create more blur.\nExample\nApply different blur effects to <img> elements:\n#img1 {\nfilter: \n  blur(2px);\n}\n#img2 {\nfilter: blur(6px);\n}\n\nThe CSS brightness() Function\nThe\nbrightness()\nfilter function adjusts the \nbrightness of an element.\nValues over 100% will provide brighter results\nValues under 100% will provide darker results\n0% will make the image completely black\n100% is default, and represents the original image\nExample\nMake an image brighter and darker than the original:\n#img1 {\nfilter: brightness(150%);\n}\n#img2 {\nfilter: brightness(50%);\n}\n\nThe CSS contrast() Function\nThe\ncontrast()\nfilter function adjusts the \ncontrast of an element.\nValues over 100% increases the contrast\nValues under 100% decreases the contrast\n0% will make the image completely gray\n100% is default, and represents the original image\nExample\nIncrease and decrease the contrast for an image:\n#img1 {\nfilter: contrast(150%);\n}\n#img2 {\nfilter: \n  contrast(50%);\n}\n\nThe CSS drop-shadow() Function\nThe\ndrop-shadow()\nfilter function applies \na drop-shadow effect to an image.\nExample\nAdd different drop-shadow effects to an image:\n#img1 {\nfilter: drop-shadow(8px 8px 10px gray);\n}\n#img2 {\nfilter: drop-shadow(10px 10px 7px lightblue);\n}\n\nThe CSS grayscale() Function\nThe\ngrayscale()\nfilter function converts \nan image to grayscale.\n100% (or 1) will make the image completely grayscale\n0% (or 0) will have no effect\nExample\nSet various grayscale for an image:\n#img1 {\nfilter: grayscale(1);\n}\n#img2 {\nfilter: \n  grayscale(60%);\n}\n#img3 {\nfilter: grayscale(0.4);\n}\n\nThe CSS hue-rotate() Function\nThe\nhue-rotate()\nfilter function applies a color rotation to an element.\nThis function applies a hue rotation on the image. The value defines the \nnumber of degrees around the color circle the image will be adjusted. A positive \nhue rotation increases the hue value, while a negative rotation decreases the \nhue value. 0deg represents the original image.\nExample\nSet various color rotations for an image:\n#img1 {\nfilter: hue-rotate(200deg);\n}\n#img2 {\nfilter: \n  hue-rotate(90deg);\n}\n#img3 {\nfilter: hue-rotate(-90deg);\n}\n\nThe CSS invert() Function\nThe\ninvert()\nfilter function inverts the color of an image.\n100% (or 1) will make the image completely inverted\n0% (or 0) will have no effect\nExample\nInvert the colors of an image:\n#img1 {\nfilter: invert(0.3);\n}\n#img2 {\nfilter: \n  invert(70%);\n}\n#img3 {\nfilter: invert(100%);\n}\n\nThe CSS opacity() Function\nThe\nopacity()\nfilter function applies an opacity effect to an element.\n100% (or 1) will have no effect\n50% (or 0.5) will make the element 50% transparent\n0% (or 0) will make the element completely transparent\nExample\nSet various opacity for an image:\n#img1 {\nfilter: opacity(80%);\n}\n#img2 {\nfilter: \n  opacity(50%);\n}\n#img3 {\nfilter: opacity(0.2);\n}\n\nThe CSS saturate() Function\nThe\nsaturate()\nfilter function adjusts the saturation (color intensity) of an element.\n0% (or 0) will make the element completely unsaturated\n100% (or 1) will have no effect\n200% (or 2) will make the element super saturated\nExample\nSet various saturations for an image:\n#img1 {\nfilter: saturate(0);\n}\n#img2 {\nfilter: \n  saturate(100%);\n}\n#img3 {\nfilter: saturate(200%);\n}\n\nThe CSS sepia() Function\nThe\nsepia()\nfilter function converts an image to sepia (a warmer, more brown/yellow color).\n100% (or 1) will make the image completely sepia\n0% (or 0) will have no effect\nExample\nSet various sepia for an image:\n#img1 {\nfilter: sepia(1);\n}\n#img2 {\nfilter: sepia(60%);\n}\n#img3 {\nfilter: sepia(0.4);\n}\n\nCSS Filter Functions\nThe following table lists the CSS filter functions:\nFunction\nDescription\nblur()\nApplies a blur effect to an element\nbrightness()\nAdjusts the brightness of an element\ncontrast()\nAdjusts the contrast of an element\ndrop-shadow()\nApplies a drop-shadow effect to an image\ngrayscale()\nConverts an image to grayscale\nhue-rotate()\nApplies a color rotation to an element\ninvert()\nInverts the color of an image\nopacity()\nApplies an opacity effect to an element\nsaturate()\nAdjusts the saturation (color intensity) of an element\nsepia()\nConverts an image to sepia\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "#img1 {\nfilter: \n  blur(2px);\n}\n#img2 {\nfilter: blur(6px);\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "#img1 {\nfilter: brightness(150%);\n}\n#img2 {\nfilter: brightness(50%);\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "#img1 {\nfilter: contrast(150%);\n}\n#img2 {\nfilter: \n  contrast(50%);\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "#img1 {\nfilter: drop-shadow(8px 8px 10px gray);\n}\n#img2 {\nfilter: drop-shadow(10px 10px 7px lightblue);\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "#img1 {\nfilter: grayscale(1);\n}\n#img2 {\nfilter: \n  grayscale(60%);\n}\n#img3 {\nfilter: grayscale(0.4);\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "#img1 {\nfilter: hue-rotate(200deg);\n}\n#img2 {\nfilter: \n  hue-rotate(90deg);\n}\n#img3 {\nfilter: hue-rotate(-90deg);\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "#img1 {\nfilter: invert(0.3);\n}\n#img2 {\nfilter: \n  invert(70%);\n}\n#img3 {\nfilter: invert(100%);\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "#img1 {\nfilter: opacity(80%);\n}\n#img2 {\nfilter: \n  opacity(50%);\n}\n#img3 {\nfilter: opacity(0.2);\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "#img1 {\nfilter: saturate(0);\n}\n#img2 {\nfilter: \n  saturate(100%);\n}\n#img3 {\nfilter: saturate(200%);\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": "#img1 {\nfilter: sepia(1);\n}\n#img2 {\nfilter: sepia(60%);\n}\n#img3 {\nfilter: sepia(0.4);\n}",
      "language": "css",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "#img1 {\nfilter: \n  blur(2px);\n}\n# TODO: Complete this line\nfilter: blur(6px);\n}",
      "solution": "#img1 {\nfilter: \n  blur(2px);\n}\n#img2 {\nfilter: blur(6px);\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "#img1 {\nfilter: brightness(150%);\n}\n#img2 {\nfilter: brightness(50%);\n# TODO: Complete this line",
      "solution": "#img1 {\nfilter: brightness(150%);\n}\n#img2 {\nfilter: brightness(50%);\n}"
    }
  ],
  "related_topics": [
    {
      "id": "d1e7837b-db76-409f-87ed-2fc9be357bbc",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "ab67155c-eb5c-4149-a9f8-93976009cb43",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "c424b4f6-d377-46b2-8604-de684ca02537",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is CSS\nImage Filter Effects\n\nThe CSS filter property?",
      "options": [
        "used to add visual effects to elements",
        "None of the above.",
        "used to add visual effects (like blur and saturation) to elements",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of CSS\nImage Filter Effects\n\nThe CSS filter property is 'used to add visual effects to elements'."
    },
    {
      "question": "What is CSS Filters\nThe CSS\nfilter\nproperty?",
      "options": [
        "used to add visual effects to elements",
        "None of the above.",
        "used to add visual effects (like blur and saturation) to elements",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of CSS Filters\nThe CSS\nfilter\nproperty is 'used to add visual effects (like blur and saturation) to elements'."
    }
  ],
  "summary": "This tutorial covers CSSImage Filter Effects concepts and techniques. You'll learn how to use CSSImage Filter Effects effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of CSSImage Filter Effects and how to apply it in your projects."
}