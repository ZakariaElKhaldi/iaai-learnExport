{
  "id": "ddbc9a2b-aea0-4289-b98d-472a4b74fc55",
  "title": "CSSLayout - width and max-width",
  "slug": "csslayout-width-and-max-width",
  "metadata": {
    "description": "Learn about CSSLayout - width and max-width with clear explanations and practical examples.",
    "keywords": [
      "c",
      "width",
      "element",
      "auto",
      "margin",
      "browser",
      "using",
      "container",
      "margins",
      "window",
      "small"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnCSS",
    "subcategory": "CSS Max-width"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "CSS\nLayout - width and max-width",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Using width, max-width and margin: auto;\nAs mentioned in the \n(stretches out to the left and right as far as it can).\nSetting the\nwidth\nof a block-level element will prevent it from stretching \nout to the edges of its container. Then, you can set the \nmargins to auto, to horizontally center the element within its container. The \nelement will take up the specified width, and the remaining space will be split \nequally between the two margins:\nThis <div> element has a width of 500px, and margin set to auto.\nNote:\nThe problem with the\n<div>\nabove occurs when the browser window is \nsmaller than the width of \nthe element. The browser then adds a horizontal scrollbar to the page.\nUsing\nmax-width\ninstead, in this situation, will improve the \nbrowser's handling of small windows. This is important when making a site usable \non small devices:\nThis <div> element has a max-width of 500px, and margin set to auto.\nTip:\nResize the browser window to less than 500px wide, to see the difference between \nthe two divs!\nHere is an example of the two divs above:\nExample\ndiv.ex1 {\nwidth: 500px;\nmargin: \nauto;\nborder: 3px solid #73AD21;\n}\ndiv.ex2 {\nmax-width: 500px;\nmargin: auto;\nborder: 3px solid #73AD21;\n}\n\nCSS Properties\nProperty\nDescription\nmax-width\nDefines the maximum width of an element\nwidth\nSets the width of an element\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "div.ex1 {\nwidth: 500px;\nmargin: \nauto;\nborder: 3px solid #73AD21;\n}\ndiv.ex2 {\nmax-width: 500px;\nmargin: auto;\nborder: 3px solid #73AD21;\n}",
      "language": "css",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "div.ex1 {\nwidth: 500px;\nmargin: \nauto;\nborder: 3px solid #73AD21;\n}\ndiv.ex2 {\nmax-width: 500px;\nmargin: auto;\nborder: 3px solid #73AD21;\n# TODO: Complete this line",
      "solution": "div.ex1 {\nwidth: 500px;\nmargin: \nauto;\nborder: 3px solid #73AD21;\n}\ndiv.ex2 {\nmax-width: 500px;\nmargin: auto;\nborder: 3px solid #73AD21;\n}"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "26c8628c-97f4-4fb7-a15b-212a3e77b359",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "88a4f17b-f70f-4d20-b126-c1bad76bfc09",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "427beea5-03f0-44d7-8498-e2f4fd3d12c9",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is above occurs when the browser window?",
      "options": [
        "None of the above.",
        "smaller than the width of \nthe element",
        "important when making a site usable \non small devices:\nThis <div> element has a max-width of 500px",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of above occurs when the browser window is 'smaller than the width of \nthe element'."
    },
    {
      "question": "What is This?",
      "options": [
        "None of the above.",
        "None of the above.",
        "important when making a site usable \non small devices:\nThis <div> element has a max-width of 500px",
        "smaller than the width of \nthe element"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of This is 'important when making a site usable \non small devices:\nThis <div> element has a max-width of 500px'."
    }
  ],
  "summary": "This tutorial covers CSSLayout - width and max-width concepts and techniques. You'll learn how to use CSSLayout - width and max-width effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of CSSLayout - width and max-width and how to apply it in your projects."
}