{
  "id": "d6e7e833-f81b-463c-94bd-8ba86d71da07",
  "title": "CSSImage Shapes",
  "slug": "cssimage-shapes",
  "metadata": {
    "description": "Learn about CSSImage Shapes with clear explanations and practical examples.",
    "keywords": [
      "c",
      "clip",
      "circle",
      "ellipse",
      "shape",
      "radius",
      "path",
      "image",
      "outside",
      "property",
      "function"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnCSS",
    "subcategory": "CSS Image Shapes"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "CSS\nImage Shapes",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "With CSS it is easy to shape (clip) images to circles, ellipses and \npolygons.\nThe CSS clip-path Property\nThe\nclip-path\nproperty lets you clip an \nelement to a basic shape.\nThe CSS circle() Function\nThe\ncircle()\nfunction defines a circle with a radius and a position.\nThe\ncircle()\nfunction is used within the\nclip-path\nproperty.\nHere we clip an image to a circle with 50% radius:\nExample\nClip an image to a circle with 50% radius:\nimg {\nclip-path: circle(50%);\n}\n\nWe can also specify the center of the circle. This can be a length or percentage value. It can also be a value such as left, right, top, or bottom. The default value is center.\nHere we clip an image to a circle with 50% radius and position the center of the \ncircle to the right:\nExample\nClip an image to a circle with 50% radius and position the center of the \ncircle to the right:\nimg {\nclip-path: circle(50% at right);\n}\n\nThe CSS shape-outside Property\nThe\nshape-outside\nproperty lets you define a shape for \nthe wrapping of the inline content.\nThe\ncircle()\nfunction is also used within the\nshape-outside\nproperty.\nHere we clip an image to a circle with 40% radius, and set the shape-outside \nto a circle with 45% radius (to shape the text):\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla ac laoreet quam, id aliquet nisl. Etiam id eros ligula. Aenean euismod, enim sed mollis feugiat, magna massa cursus leo, ut maximus metus eros non ante. Praesent eget tincidunt mauris, ut euismod ipsum. In hac habitasse platea dictumst. In dapibus tortor magna, elementum elementum neque sagittis id. Integer vestibulum semper dui, quis finibus libero elementum nec. Fusce ultricies lectus a eros interdum, efficitur iaculis nibh varius. Praesent sed ex bibendum, fermentum tortor nec, tincidunt augue. Maecenas in lobortis ligula, at viverra velit. Donec facilisis blandit purus sed efficitur. Duis est augue, bibendum quis bibendum sed, feugiat vel eros. Quisque ut nisi sed erat malesuada euismod. Aliquam feugiat erat eget sodales imperdiet. Ut vel tortor auctor, rutrum lectus a, tempor nunc. Vivamus nec elit ornare, dictum urna sollicitudin, ornare diam. Nullam dictum arcu vitae odio ultrices iaculis.\nExample\nUse of circle(), clip-path and shape-outside:\nimg {\nfloat: left;\nclip-path: circle(40%);\nshape-outside: circle(45%);\n}\n\nThe CSS ellipse() Function\nThe\nellipse()\nfunction defines an ellipse with two radii x and y.\nThe\nellipse()\nfunction is used within the\nclip-path\nproperty and the\nshape-outside\nproperty.\nHere we clip an image to an ellipse with 50% radius x and 35% radius y:\nExample\nClip an image to an ellipse with 50% radius x and 35% radius y:\nimg {\nclip-path: ellipse(50% 35%);\n}\n\nWe can also specify the center of the ellipse. This can be a length or percentage value. It can also be a value such as left, right, top, or bottom. The default value is center.\nHere we clip an image to an ellipse with 50% radius x and 35% radius y, and \nposition the center of the ellipse to the right:\nExample\nClip an image to an ellipse with 50% radius x and 35% radius y, and \n  position the center of the ellipse to the right:\nimg {\nclip-path: ellipse(50% 35% at right);\n}\n\nThe shape-outside Property and ellipse()\nHere we clip an image to an ellipse with 40% radius x and 50% radius y, and set the shape-outside \nto an ellipse with 45% radius x and 50% radius y (to shape the text):\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla ac laoreet quam, id aliquet nisl. Etiam id eros ligula. Aenean euismod, enim sed mollis feugiat, magna massa cursus leo, ut maximus metus eros non ante. Praesent eget tincidunt mauris, ut euismod ipsum. In hac habitasse platea dictumst. In dapibus tortor magna, elementum elementum neque sagittis id. Integer vestibulum semper dui, quis finibus libero elementum nec. Fusce ultricies lectus a eros interdum, efficitur iaculis nibh varius. Praesent sed ex bibendum, fermentum tortor nec, tincidunt augue. Maecenas in lobortis ligula, at viverra velit. Donec facilisis blandit purus sed efficitur. Duis est augue, bibendum quis bibendum sed, feugiat vel eros. Quisque ut nisi sed erat malesuada euismod. Aliquam feugiat erat eget sodales imperdiet. Ut vel tortor auctor, rutrum lectus a, tempor nunc. Vivamus nec elit ornare, dictum urna sollicitudin, ornare diam. Nullam dictum arcu vitae odio ultrices iaculis.\nExample\nUse of ellipse(), clip-path and shape-outside:\nimg {\nfloat: left;\nclip-path: ellipse(40% 50%);\nshape-outside: ellipse(45% 50%);\n}\n\nThe CSS polygon() Function\nThe\npolygon()\nfunction defines a \npolygon.\nThe\npolygon()\nfunction contains points that \ndefine the polygon. This can be a length or percentage value. Each point is a \npair of x and y coordinates. 0 0 defines the left top corner and 100% 100% \ndefines the right bottom corner.\nThe\npolygon()\nfunction is used within the\nclip-path\nproperty and the\nshape-outside\nproperty.\nHere we clip an image to a polygon:\nExample\nClip an image to a polygon:\nimg {\nclip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);\n}\n\nCSS Properties and Functions\nThe following table lists the CSS properties and functions used in this \nchapter:\nProperty/Function\nDescription\nclip-path\nLets you clip an element to a basic shape or to an SVG source\nshape-outside\nLets you define a shape for the wrapping of the inline content\ncircle()\nDefines a circle with a radius and a position\nellipse()\nDefines an ellipse with two radii x and y\npolygon()\nDefines a polygon\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "img {\nclip-path: circle(50%);\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "img {\nclip-path: circle(50% at right);\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "img {\nfloat: left;\nclip-path: circle(40%);\nshape-outside: circle(45%);\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "img {\nclip-path: ellipse(50% 35%);\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "img {\nclip-path: ellipse(50% 35% at right);\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "img {\nfloat: left;\nclip-path: ellipse(40% 50%);\nshape-outside: ellipse(45% 50%);\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "img {\nclip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);\n}",
      "language": "css",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "img {\n# TODO: Complete this line\n}",
      "solution": "img {\nclip-path: circle(50%);\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "img {\nclip-path: circle(50% at right);\n# TODO: Complete this line",
      "solution": "img {\nclip-path: circle(50% at right);\n}"
    }
  ],
  "related_topics": [
    {
      "id": "52a8c71e-6e21-41b2-bb90-bb6ee7f038cc",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "bf496020-9e02-4159-8ddd-de79292a760d",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "df06b1c7-1629-48b3-802a-f68eaead0937",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is CSS\nImage Shapes\n\nWith CSS it?",
      "options": [
        "used within the\nclip-path\nproperty",
        "None of the above.",
        "easy to shape (clip) images to circles",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of CSS\nImage Shapes\n\nWith CSS it is 'easy to shape (clip) images to circles'."
    },
    {
      "question": "What is function?",
      "options": [
        "easy to shape (clip) images to circles",
        "None of the above.",
        "None of the above.",
        "used within the\nclip-path\nproperty"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of function is 'used within the\nclip-path\nproperty'."
    }
  ],
  "summary": "This tutorial covers CSSImage Shapes concepts and techniques. You'll learn how to use CSSImage Shapes effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of CSSImage Shapes and how to apply it in your projects."
}