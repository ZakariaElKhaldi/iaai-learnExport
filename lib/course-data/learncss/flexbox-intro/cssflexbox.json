{
  "id": "28a6f2fa-bc00-44f0-91ff-5cbaa08a61b5",
  "title": "CSSFlexbox",
  "slug": "cssflexbox",
  "metadata": {
    "description": "Learn about CSSFlexbox with clear explanations and practical examples.",
    "keywords": [
      "c",
      "flex",
      "flexbox",
      "layout",
      "container",
      "items",
      "flexible",
      "module",
      "rows",
      "columns",
      "dimensional"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnCSS",
    "subcategory": "Flexbox Intro"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "CSS\nFlexbox",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "CSS\nFlexbox",
      "content": "1\n2\n3\n4\n5\n6\n7\n8\n\nWhat is CSS Flexbox?\nFlexbox is short for the Flexible Box Layout module.\nFlexbox is a layout method for arranging items in rows or columns.\nFlexbox makes it easier to design a \nflexible responsive layout structure, without using float or positioning.\nFlexbox vs. Grid\nThe CSS Flexbox Layout should be used for one-dimensional layout, with rows \n  OR columns.\nThe\nCSS Grid Layout\nshould be used for two-dimensional layout, with rows \n  AND columns.\nCSS Flexible Box Layout Module\nBefore the Flexible Box Layout module, there were four layout modes:\nBlock, for sections in a webpage\nInline, for text\nTable, for two-dimensional table data\nPositioned, for explicit position of an element\nCSS flexbox is supported in all modern browsers.\nCSS Flexbox Components\nA flexbox always consists of:\na",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Flex Container",
      "content": "- the parent (container) <div> element",
      "order": 3,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Flex Items",
      "content": "- the items inside the container <div>\nA Flex Container with Three Flex Items\nTo start using CSS Flexbox, you need to first define a flex container.\nThe flex container becomes flexible by setting the\ndisplay\nproperty to\nflex\n.\n1\n2\n3\nThe element above represents a\nflex container\n(the blue area) with three\nflex items\n.\nExample\nA flex container with three flex items:\n<div \n  class=\"flex-container\">\n<div>1</div>\n<div>2</div>\n<div>3</div>\n</div>\n\nYou will learn more about flex containers and flex items in the \n\n\u2605\n+1",
      "order": 4,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<div \n  class=\"flex-container\">\n<div>1</div>\n<div>2</div>\n<div>3</div>\n</div>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<div \n# TODO: Complete this line\n<div>1</div>\n<div>2</div>\n<div>3</div>\n</div>",
      "solution": "<div \n  class=\"flex-container\">\n<div>1</div>\n<div>2</div>\n<div>3</div>\n</div>"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "a060e4f3-5128-4f43-adc8-cf5d9a71eb53",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "459f4aa2-2906-4f28-8cd0-a01a29feea66",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "718d40bd-3aa1-49ff-8bee-707edf99fa55",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is What?",
      "options": [
        "CSS Flexbox",
        "short for the Flexible Box Layout module",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of What is 'CSS Flexbox'."
    },
    {
      "question": "What is Flexbox?",
      "options": [
        "None of the above.",
        "None of the above.",
        "CSS Flexbox",
        "short for the Flexible Box Layout module"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Flexbox is 'short for the Flexible Box Layout module'."
    }
  ],
  "summary": "This tutorial covers CSSFlexbox concepts and techniques. You'll learn how to use CSSFlexbox effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of CSSFlexbox and how to apply it in your projects."
}