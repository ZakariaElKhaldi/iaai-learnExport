{
  "id": "f0e3dc2e-2ed0-4978-93b4-706b39c25f1e",
  "title": "CSS Overriding Variables",
  "slug": "css-overriding-variables",
  "metadata": {
    "description": "Learn about CSS Overriding Variables with clear explanations and practical examples.",
    "keywords": [
      "c",
      "blue",
      "color",
      "variable",
      "white",
      "background",
      "button",
      "local",
      "border",
      "solid",
      "padding"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnCSS",
    "subcategory": "Overriding Variables"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "CSS Overriding Variables",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Override Global Variable With Local Variable\nFrom the \nlocal variables can be used only inside the selector where it is declared.\nLook at the example from the \nExample\n:root {\n--blue: #1e90ff;\n--white: #ffffff;\n}\nbody {\nbackground-color: var(--blue);\n}\nh2 {\nborder-bottom: 2px solid var(--blue);\n}\n.container {\ncolor: var(--blue);\nbackground-color: var(--white);\npadding: \n  15px;\n}\nbutton {\nbackground-color: var(--white);\ncolor: var(--blue);\nborder: 1px solid var(--blue);\npadding: 5px;\n}\n\nSometimes we want the variables to change only in a specific section of the page.\nAssume we want a different color of blue for button elements. Then, we can \nre-declare the --blue variable inside the button selector. When we use var(--blue) \ninside this selector, it will use the local --blue variable value declared here.\nWe see that the local --blue variable will override the global --blue \nvariable for the button elements:\nExample\n:root {\n--blue: #1e90ff;\n--white: #ffffff;\n}\nbody {\nbackground-color: var(--blue);\n}\nh2 {\nborder-bottom: 2px solid var(--blue);\n}\n.container {\ncolor: var(--blue);\nbackground-color: var(--white);\npadding: \n  15px;\n}\nbutton {\n--blue: #0000ff; /* local variable will \n  override global */\nbackground-color: var(--white);\ncolor: var(--blue);\nborder: 1px solid var(--blue);\npadding: 5px;\n}\n\nAdd a New Local Variable\nIf a variable is to be used at only one single place, we could also have declared a new local variable, like this:\nExample\n:root {\n--blue: #1e90ff;\n--white: #ffffff;\n}\nbody {\nbackground-color: var(--blue);\n}\nh2 {\nborder-bottom: 2px solid var(--blue);\n}\n.container {\ncolor: var(--blue);\nbackground-color: var(--white);\npadding: \n  15px;\n}\nbutton {\n--button-blue: #0000ff; /* new local \n  variable */\nbackground-color: var(--white);\ncolor: var(--button-blue);\nborder: 1px solid var(--button-blue);\npadding: 5px;\n}\n\nCSS var() Function\nFunction\nDescription\nvar()\nInserts the value of a CSS variable\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": ":root {\n--blue: #1e90ff;\n--white: #ffffff;\n}\nbody {\nbackground-color: var(--blue);\n}\nh2 {\nborder-bottom: 2px solid var(--blue);\n}\n.container {\ncolor: var(--blue);\nbackground-color: var(--white);\npadding: \n  15px;\n}\nbutton {\nbackground-color: var(--white);\ncolor: var(--blue);\nborder: 1px solid var(--blue);\npadding: 5px;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": ":root {\n--blue: #1e90ff;\n--white: #ffffff;\n}\nbody {\nbackground-color: var(--blue);\n}\nh2 {\nborder-bottom: 2px solid var(--blue);\n}\n.container {\ncolor: var(--blue);\nbackground-color: var(--white);\npadding: \n  15px;\n}\nbutton {\n--blue: #0000ff; /* local variable will \n  override global */\nbackground-color: var(--white);\ncolor: var(--blue);\nborder: 1px solid var(--blue);\npadding: 5px;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": ":root {\n--blue: #1e90ff;\n--white: #ffffff;\n}\nbody {\nbackground-color: var(--blue);\n}\nh2 {\nborder-bottom: 2px solid var(--blue);\n}\n.container {\ncolor: var(--blue);\nbackground-color: var(--white);\npadding: \n  15px;\n}\nbutton {\n--button-blue: #0000ff; /* new local \n  variable */\nbackground-color: var(--white);\ncolor: var(--button-blue);\nborder: 1px solid var(--button-blue);\npadding: 5px;\n}",
      "language": "css",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": ":root {\n--blue: #1e90ff;\n--white: #ffffff;\n}\nbody {\nbackground-color: var(--blue);\n}\nh2 {\nborder-bottom: 2px solid var(--blue);\n}\n.container {\ncolor: var(--blue);\nbackground-color: var(--white);\npadding: \n  15px;\n}\nbutton {\nbackground-color: var(--white);\ncolor: var(--blue);\n# TODO: Complete this line\npadding: 5px;\n}",
      "solution": ":root {\n--blue: #1e90ff;\n--white: #ffffff;\n}\nbody {\nbackground-color: var(--blue);\n}\nh2 {\nborder-bottom: 2px solid var(--blue);\n}\n.container {\ncolor: var(--blue);\nbackground-color: var(--white);\npadding: \n  15px;\n}\nbutton {\nbackground-color: var(--white);\ncolor: var(--blue);\nborder: 1px solid var(--blue);\npadding: 5px;\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": ":root {\n--blue: #1e90ff;\n--white: #ffffff;\n}\nbody {\nbackground-color: var(--blue);\n}\nh2 {\nborder-bottom: 2px solid var(--blue);\n}\n.container {\ncolor: var(--blue);\nbackground-color: var(--white);\npadding: \n  15px;\n}\n# TODO: Complete this line\n--blue: #0000ff; /* local variable will \n  override global */\nbackground-color: var(--white);\ncolor: var(--blue);\nborder: 1px solid var(--blue);\npadding: 5px;\n}",
      "solution": ":root {\n--blue: #1e90ff;\n--white: #ffffff;\n}\nbody {\nbackground-color: var(--blue);\n}\nh2 {\nborder-bottom: 2px solid var(--blue);\n}\n.container {\ncolor: var(--blue);\nbackground-color: var(--white);\npadding: \n  15px;\n}\nbutton {\n--blue: #0000ff; /* local variable will \n  override global */\nbackground-color: var(--white);\ncolor: var(--blue);\nborder: 1px solid var(--blue);\npadding: 5px;\n}"
    }
  ],
  "related_topics": [
    {
      "id": "5ae04210-9508-4a59-a175-b1830d055295",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "42816399-687f-4be0-a27b-9fcea2513a3a",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "e80c7374-a1b5-412e-8741-a9bf51274b4b",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is CSS Overriding Variables\n\nOverride Global Variable With Local Variable\nFrom the \nlocal variables can be used only inside the selector where it?",
      "options": [
        "None of the above.",
        "to be used at only one single place",
        "None of the above.",
        "declared"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of CSS Overriding Variables\n\nOverride Global Variable With Local Variable\nFrom the \nlocal variables can be used only inside the selector where it is 'declared'."
    },
    {
      "question": "What is Add a New Local Variable\nIf a variable?",
      "options": [
        "None of the above.",
        "to be used at only one single place",
        "None of the above.",
        "declared"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Add a New Local Variable\nIf a variable is 'to be used at only one single place'."
    }
  ],
  "summary": "This tutorial covers CSS Overriding Variables concepts and techniques. You'll learn how to use CSS Overriding Variables effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of CSS Overriding Variables and how to apply it in your projects."
}