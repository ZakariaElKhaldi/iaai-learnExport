{
  "id": "c154a74d-8feb-4dc9-9592-f5eb0495db4c",
  "title": "MatplotlibSubplot",
  "slug": "matplotlibsubplot",
  "metadata": {
    "description": "Learn about MatplotlibSubplot with clear explanations and practical examples.",
    "keywords": [
      "plot",
      "array",
      "subplot",
      "import",
      "title",
      "plots",
      "figure",
      "matplotlib",
      "function",
      "draw"
    ],
    "difficulty": "beginner",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnMachine Learning",
    "subcategory": "Matplotlib Subplot"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Matplotlib\nSubplot",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Display Multiple Plots\nWith the\nsubplot()\nfunction you can draw multiple plots in one figure:\nExample\nDraw 2 plots:\nimport matplotlib.pyplot as plt\nimport numpy as np\n#plot 1:\nx = \n  np.array([0, 1, 2, 3])\ny = np.array([3, 8, 1, 10])\nplt.subplot(1, 2, 1)\nplt.plot(x,y)\n#plot 2:\nx = np.array([0, 1, 2, 3])\ny = np.array([10, 20, 30, \n  40])\nplt.subplot(1, 2, 2)\nplt.plot(x,y)\nplt.show()\nResult:\n\nThe subplot() Function\nThe\nsubplot()\nfunction takes three arguments that describes the layout of the figure.\nThe layout is organized in rows and columns, which are represented by the\nfirst\nand\nsecond\nargument.\nThe third argument represents the index of the current plot.\nplt.subplot(1, 2, 1)\n#the figure has 1 row, 2 columns, and this plot is the\nfirst\nplot.\nplt.subplot(1, 2, 2)\n#the figure has 1 row, 2 columns, and this plot is the\nsecond\nplot.\nSo, if we want a figure with 2 rows an 1 column (meaning that the two plots will be displayed on top of each other instead of side-by-side),\nwe can write the syntax like this:\nExample\nDraw 2 plots on top of each other:\nimport matplotlib.pyplot as plt\nimport numpy as np\n#plot 1:\nx = \n  np.array([0, 1, 2, 3])\ny = np.array([3, 8, 1, 10])\nplt.subplot(2, 1, 1)\nplt.plot(x,y)\n#plot 2:\nx = np.array([0, 1, 2, 3])\ny = np.array([10, 20, 30, \n  40])\nplt.subplot(2, 1, 2)\nplt.plot(x,y)\nplt.show()\nResult:\n\nYou can draw as many plots you like on one figure, just descibe the number of rows, columns, and the index of the plot.\nExample\nDraw 6 plots:\nimport matplotlib.pyplot as plt\nimport numpy as np\nx = np.array([0, \n  1, 2, 3])\ny = np.array([3, 8, 1, 10])\nplt.subplot(2, 3, 1)\nplt.plot(x,y)\nx = np.array([0, 1, 2, 3])\ny = np.array([10, 20, 30, \n  40])\nplt.subplot(2, 3, 2)\nplt.plot(x,y)\nx = np.array([0, 1, \n  2, 3])\ny = np.array([3, 8, 1, 10])\nplt.subplot(2, 3, 3)\nplt.plot(x,y)\nx = np.array([0, 1, 2, 3])\ny = np.array([10, 20, 30, 40])\nplt.subplot(2, 3, 4)\nplt.plot(x,y)\nx = np.array([0, 1, 2, 3])\ny = \n  np.array([3, 8, 1, 10])\nplt.subplot(2, 3, 5)\nplt.plot(x,y)\nx \n  = np.array([0, 1, 2, 3])\ny = np.array([10, 20, 30, 40])\nplt.subplot(2, \n  3, 6)\nplt.plot(x,y)\nplt.show()\nResult:\n\nTitle\nYou can add a title to each plot with the\ntitle()\nfunction:\nExample\n2 plots, with titles:\nimport matplotlib.pyplot as plt\nimport numpy as np\n#plot 1:\nx = \n  np.array([0, 1, 2, 3])\ny = np.array([3, 8, 1, 10])\nplt.subplot(1, 2, 1)\nplt.plot(x,y)\nplt.title(\"SALES\")\n#plot 2:\nx = np.array([0, 1, 2, 3])\ny = np.array([10, 20, 30, \n  40])\nplt.subplot(1, 2, 2)\nplt.plot(x,y)\nplt.title(\"INCOME\")\nplt.show()\nResult:\n\nSuper Title\nYou can add a title to the entire figure with the\nsuptitle()\nfunction:\nExample\nAdd a title for the entire figure:\nimport matplotlib.pyplot as plt\nimport numpy as np\n#plot 1:\nx = \n  np.array([0, 1, 2, 3])\ny = np.array([3, 8, 1, 10])\nplt.subplot(1, 2, 1)\nplt.plot(x,y)\nplt.title(\"SALES\")\n#plot 2:\nx = np.array([0, 1, 2, 3])\ny = np.array([10, 20, 30, \n  40])\nplt.subplot(1, 2, 2)\nplt.plot(x,y)\nplt.title(\"INCOME\")\nplt.suptitle(\"MY SHOP\")\nplt.show()\nResult:\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "import matplotlib.pyplot as plt\nimport numpy as np\n#plot 1:\nx = \n  np.array([0, 1, 2, 3])\ny = np.array([3, 8, 1, 10])\nplt.subplot(1, 2, 1)\nplt.plot(x,y)\n#plot 2:\nx = np.array([0, 1, 2, 3])\ny = np.array([10, 20, 30, \n  40])\nplt.subplot(1, 2, 2)\nplt.plot(x,y)\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "import matplotlib.pyplot as plt\nimport numpy as np\n#plot 1:\nx = \n  np.array([0, 1, 2, 3])\ny = np.array([3, 8, 1, 10])\nplt.subplot(2, 1, 1)\nplt.plot(x,y)\n#plot 2:\nx = np.array([0, 1, 2, 3])\ny = np.array([10, 20, 30, \n  40])\nplt.subplot(2, 1, 2)\nplt.plot(x,y)\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "import matplotlib.pyplot as plt\nimport numpy as np\nx = np.array([0, \n  1, 2, 3])\ny = np.array([3, 8, 1, 10])\nplt.subplot(2, 3, 1)\nplt.plot(x,y)\nx = np.array([0, 1, 2, 3])\ny = np.array([10, 20, 30, \n  40])\nplt.subplot(2, 3, 2)\nplt.plot(x,y)\nx = np.array([0, 1, \n  2, 3])\ny = np.array([3, 8, 1, 10])\nplt.subplot(2, 3, 3)\nplt.plot(x,y)\nx = np.array([0, 1, 2, 3])\ny = np.array([10, 20, 30, 40])\nplt.subplot(2, 3, 4)\nplt.plot(x,y)\nx = np.array([0, 1, 2, 3])\ny = \n  np.array([3, 8, 1, 10])\nplt.subplot(2, 3, 5)\nplt.plot(x,y)\nx \n  = np.array([0, 1, 2, 3])\ny = np.array([10, 20, 30, 40])\nplt.subplot(2, \n  3, 6)\nplt.plot(x,y)\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "import matplotlib.pyplot as plt\nimport numpy as np\n#plot 1:\nx = \n  np.array([0, 1, 2, 3])\ny = np.array([3, 8, 1, 10])\nplt.subplot(1, 2, 1)\nplt.plot(x,y)\nplt.title(\"SALES\")\n#plot 2:\nx = np.array([0, 1, 2, 3])\ny = np.array([10, 20, 30, \n  40])\nplt.subplot(1, 2, 2)\nplt.plot(x,y)\nplt.title(\"INCOME\")\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "import matplotlib.pyplot as plt\nimport numpy as np\n#plot 1:\nx = \n  np.array([0, 1, 2, 3])\ny = np.array([3, 8, 1, 10])\nplt.subplot(1, 2, 1)\nplt.plot(x,y)\nplt.title(\"SALES\")\n#plot 2:\nx = np.array([0, 1, 2, 3])\ny = np.array([10, 20, 30, \n  40])\nplt.subplot(1, 2, 2)\nplt.plot(x,y)\nplt.title(\"INCOME\")\nplt.suptitle(\"MY SHOP\")\nplt.show()",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "import matplotlib.pyplot as plt\nimport numpy as np\n#plot 1:\nx = \n  np.array([0, 1, 2, 3])\ny = np.array([3, 8, 1, 10])\n# TODO: Complete this line\nplt.plot(x,y)\n#plot 2:\nx = np.array([0, 1, 2, 3])\ny = np.array([10, 20, 30, \n  40])\nplt.subplot(1, 2, 2)\nplt.plot(x,y)\nplt.show()",
      "solution": "import matplotlib.pyplot as plt\nimport numpy as np\n#plot 1:\nx = \n  np.array([0, 1, 2, 3])\ny = np.array([3, 8, 1, 10])\nplt.subplot(1, 2, 1)\nplt.plot(x,y)\n#plot 2:\nx = np.array([0, 1, 2, 3])\ny = np.array([10, 20, 30, \n  40])\nplt.subplot(1, 2, 2)\nplt.plot(x,y)\nplt.show()"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "import matplotlib.pyplot as plt\nimport numpy as np\n#plot 1:\nx = \n  np.array([0, 1, 2, 3])\ny = np.array([3, 8, 1, 10])\nplt.subplot(2, 1, 1)\nplt.plot(x,y)\n#plot 2:\nx = np.array([0, 1, 2, 3])\ny = np.array([10, 20, 30, \n  40])\nplt.subplot(2, 1, 2)\n# TODO: Complete this line\nplt.show()",
      "solution": "import matplotlib.pyplot as plt\nimport numpy as np\n#plot 1:\nx = \n  np.array([0, 1, 2, 3])\ny = np.array([3, 8, 1, 10])\nplt.subplot(2, 1, 1)\nplt.plot(x,y)\n#plot 2:\nx = np.array([0, 1, 2, 3])\ny = np.array([10, 20, 30, \n  40])\nplt.subplot(2, 1, 2)\nplt.plot(x,y)\nplt.show()"
    }
  ],
  "related_topics": [
    {
      "id": "7542d84d-8951-491a-ae85-c4e3c8ab6e2d",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "07d0746d-530c-45e5-a244-ed85625ee15e",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "ab18fd53-686c-41a2-8e73-17bc674ca014",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The layout?",
      "options": [
        "None of the above.",
        "the\nfirst\nplot",
        "organized in rows and columns",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of The layout is 'organized in rows and columns'."
    },
    {
      "question": "What is and this plot?",
      "options": [
        "None of the above.",
        "None of the above.",
        "the\nfirst\nplot",
        "organized in rows and columns"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of and this plot is 'the\nfirst\nplot'."
    }
  ],
  "summary": "This tutorial covers MatplotlibSubplot concepts and techniques. You'll learn how to use MatplotlibSubplot effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of MatplotlibSubplot and how to apply it in your projects."
}