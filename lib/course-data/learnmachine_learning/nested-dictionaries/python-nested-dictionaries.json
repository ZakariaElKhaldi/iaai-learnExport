{
  "id": "eae5e811-82c3-4978-85b9-c0f7c1708fba",
  "title": "Python -Nested Dictionaries",
  "slug": "python-nested-dictionaries",
  "metadata": {
    "description": "Learn about Python -Nested Dictionaries with clear explanations and practical examples.",
    "keywords": [
      "python",
      "dictionaries",
      "name",
      "nested",
      "dictionary",
      "year",
      "example",
      "three",
      "myfamily",
      "items",
      "print"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Python Basics"
    ],
    "estimated_time": 5,
    "category": "LearnMachine Learning",
    "subcategory": "Nested Dictionaries"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Python -\nNested Dictionaries",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Nested Dictionaries\nA dictionary can contain dictionaries, this is called nested \ndictionaries.\nExample\nCreate a dictionary that contain three dictionaries:\nmyfamily = {\n\"child1\" : {\n\"name\" : \"Emil\",\n\"year\" : 2004\n},\n\"child2\" : {\n\"name\" : \"Tobias\",\n\"year\" : 2007\n},\n\"child3\" : {\n\"name\" : \"Linus\",\n\"year\" : 2011\n}\n}\n\nOr, if you want to add three dictionaries into a new \ndictionary:\nExample\nCreate three dictionaries, then create one dictionary that will contain the \nother three dictionaries:\nchild1 = {\n\"name\" : \"Emil\",\n\"year\" : 2004\n}\nchild2 = {\n\"name\" : \"Tobias\",\n\"year\" : 2007\n}\nchild3 = {\n\"name\" : \"Linus\",\n\"year\" : 2011\n}\nmyfamily = {\n\"child1\" : child1,\n\"child2\" : child2,\n\"child3\" : child3\n}\n\nAccess Items in Nested Dictionaries\nTo access items from a nested dictionary, you use the name of the dictionaries, starting with the \nouter dictionary:\nExample\nPrint the name of child 2:\nprint(myfamily[\"child2\"][\"name\"])\n\nLoop Through Nested Dictionaries\nYou can loop through a dictionary by using the\nitems()\nmethod like this:\nExample\nLoop through the keys and values of all nested dictionaries:\nfor x, obj in myfamily.items():\nprint(x)\nfor y in obj:\nprint(y + ':', obj[y])\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "myfamily = {\n\"child1\" : {\n\"name\" : \"Emil\",\n\"year\" : 2004\n},\n\"child2\" : {\n\"name\" : \"Tobias\",\n\"year\" : 2007\n},\n\"child3\" : {\n\"name\" : \"Linus\",\n\"year\" : 2011\n}\n}",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "child1 = {\n\"name\" : \"Emil\",\n\"year\" : 2004\n}\nchild2 = {\n\"name\" : \"Tobias\",\n\"year\" : 2007\n}\nchild3 = {\n\"name\" : \"Linus\",\n\"year\" : 2011\n}\nmyfamily = {\n\"child1\" : child1,\n\"child2\" : child2,\n\"child3\" : child3\n}",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "print(myfamily[\"child2\"][\"name\"])",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "for x, obj in myfamily.items():\nprint(x)\nfor y in obj:\nprint(y + ':', obj[y])",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "myfamily = {\n\"child1\" : {\n\"name\" : \"Emil\",\n\"year\" : 2004\n},\n\"child2\" : {\n\"name\" : \"Tobias\",\n# TODO: Complete this line\n},\n\"child3\" : {\n\"name\" : \"Linus\",\n\"year\" : 2011\n}\n}",
      "solution": "myfamily = {\n\"child1\" : {\n\"name\" : \"Emil\",\n\"year\" : 2004\n},\n\"child2\" : {\n\"name\" : \"Tobias\",\n\"year\" : 2007\n},\n\"child3\" : {\n\"name\" : \"Linus\",\n\"year\" : 2011\n}\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "child1 = {\n\"name\" : \"Emil\",\n\"year\" : 2004\n# TODO: Complete this line\nchild2 = {\n\"name\" : \"Tobias\",\n\"year\" : 2007\n}\nchild3 = {\n\"name\" : \"Linus\",\n\"year\" : 2011\n}\nmyfamily = {\n\"child1\" : child1,\n\"child2\" : child2,\n\"child3\" : child3\n}",
      "solution": "child1 = {\n\"name\" : \"Emil\",\n\"year\" : 2004\n}\nchild2 = {\n\"name\" : \"Tobias\",\n\"year\" : 2007\n}\nchild3 = {\n\"name\" : \"Linus\",\n\"year\" : 2011\n}\nmyfamily = {\n\"child1\" : child1,\n\"child2\" : child2,\n\"child3\" : child3\n}"
    }
  ],
  "related_topics": [
    {
      "id": "444e321c-617e-4398-995b-1207d5264faa",
      "title": "Python Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "3db74d5a-9740-4e76-94ca-e07b5b9226fd",
      "title": "Python Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "fef8db56-9d61-4850-85c6-3a1017c4269a",
      "title": "Python Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is this?",
      "options": [
        "None of the above.",
        "None of the above.",
        "None of the above.",
        "called nested \ndictionaries"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of this is 'called nested \ndictionaries'."
    },
    {
      "question": "Which best describes the main purpose of this python feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers Python -Nested Dictionaries concepts and techniques. You'll learn how to use Python -Nested Dictionaries effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Python -Nested Dictionaries and how to apply it in your projects."
}