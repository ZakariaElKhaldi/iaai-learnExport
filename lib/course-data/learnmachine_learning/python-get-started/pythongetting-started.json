{
  "id": "12eb298c-2333-49ed-8f75-386ce8eb13c5",
  "title": "PythonGetting Started",
  "slug": "pythongetting-started",
  "metadata": {
    "description": "Learn about PythonGetting Started with clear explanations and practical examples.",
    "keywords": [
      "python",
      "hello",
      "command",
      "line",
      "editor",
      "world",
      "users",
      "name",
      "version",
      "type"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "Python Basics"
    ],
    "estimated_time": 5,
    "category": "LearnMachine Learning",
    "subcategory": "Python Get Started"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Python\nGetting Started",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Python Install\nMany PCs and Macs will have python already installed.\nTo check if you have python installed on a Windows PC, search in the start bar for Python or run the following on the Command Line (cmd.exe):\nC:\\Users\\\nYour Name\n>python --version\nTo check if you have python installed on a Linux or Mac, then on linux open the command line or on Mac open the Terminal and type:\npython --version\nIf you find that you do not have Python installed on your computer, then you can download it for free from the following website:\nhttps://www.python.org/\nPython Quickstart\nPython is an interpreted programming language, this means that as a developer you write Python (.py) files in a text editor and then put those files into the python interpreter to be executed.\nLet's write our first Python file, called\nhello.py\n, which can be done in any text editor:\nhello.py\n:\nprint(\"Hello, World!\")\nSimple as that. Save your file. Open your command line, navigate to the directory where you saved your file, and run:\nC:\\Users\\\nYour Name\n>python hello.py\nThe output should be:\nHello, World!\nCongratulations, you have written and executed your first Python program.\n' Python Editor\nWe have an online Python editor where you can execute your own Python code and see the result:\nExample\nTry our online Python editor:\nprint(\"Hello, World!\")\n\nThis editor will be used in the entire tutorial to demonstrate the different aspects of Python.\nPython Version\nTo check the Python version of the editor, you can find it by importing the\nsys\nmodule:\nExample\nCheck the Python version of the editor:\nimport sys\nprint(sys.version)\n\nYou will learn more about importing modules in our\nPython Modules\nchapter.\nThe Python Command Line\nTo test a short amount of code in python sometimes it is quickest and easiest not to write the code in a file. This is made possible because Python can be run as a command line itself.\nType the following on the Windows, Mac or Linux command line:\nC:\\Users\\\nYour Name\n>python\nOr, if the \"python\" command did not work, you can try \"py\":\nC:\\Users\\\nYour Name\n>py\nFrom there you can write any python, including our hello world example from earlier in the tutorial:\nC:\\Users\\\nYour Name\n>python\nPython 3.6.4 (v3.6.4:d48eceb, Dec 19 2017, 06:04:45) [MSC v.1900 32 bit (Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> print(\"Hello, World!\")\nWhich will write \"Hello, World!\" in the command line:\nC:\\Users\\\nYour Name\n>python\nPython 3.6.4 (v3.6.4:d48eceb, Dec 19 2017, 06:04:45) [MSC v.1900 32 bit (Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> print(\"Hello, World!\")\nHello, World!\nWhenever you are done in the python command line, you can simply type the following to quit the python command line interface:\nexit()\nVideo: Python Get Started\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "C:\\Users\\\nYour Name\n>python --version",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "python --version",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "C:\\Users\\\nYour Name\n>python hello.py",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "Hello, World!",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "print(\"Hello, World!\")",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "import sys\nprint(sys.version)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "C:\\Users\\\nYour Name\n>python",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "C:\\Users\\\nYour Name\n>py",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "C:\\Users\\\nYour Name\n>python\nPython 3.6.4 (v3.6.4:d48eceb, Dec 19 2017, 06:04:45) [MSC v.1900 32 bit (Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> print(\"Hello, World!\")",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": "C:\\Users\\\nYour Name\n>python\nPython 3.6.4 (v3.6.4:d48eceb, Dec 19 2017, 06:04:45) [MSC v.1900 32 bit (Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> print(\"Hello, World!\")\nHello, World!",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 13,
      "code": "exit()",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "C:\\Users\\\n# TODO: Complete this line\n>python --version",
      "solution": "C:\\Users\\\nYour Name\n>python --version"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your unknown code here",
      "solution": "python --version"
    }
  ],
  "related_topics": [
    {
      "id": "37479b92-ad5b-47fd-a11d-dd9ec7b08594",
      "title": "Python Functions and Methods",
      "relationship": "next_topic"
    },
    {
      "id": "12e95da7-c394-4991-9e2a-2212f219f6ca",
      "title": "Python Data Structures",
      "relationship": "suggested_next"
    }
  ],
  "quiz": [
    {
      "question": "What is Python Quickstart\nPython?",
      "options": [
        "None of the above.",
        "None of the above.",
        "an interpreted programming language",
        "quickest and easiest not to write the code in a file"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of Python Quickstart\nPython is 'an interpreted programming language'."
    },
    {
      "question": "What is The Python Command Line\nTo test a short amount of code in python sometimes it?",
      "options": [
        "None of the above.",
        "None of the above.",
        "quickest and easiest not to write the code in a file",
        "an interpreted programming language"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of The Python Command Line\nTo test a short amount of code in python sometimes it is 'quickest and easiest not to write the code in a file'."
    }
  ],
  "summary": "This tutorial covers PythonGetting Started concepts and techniques. You'll learn how to use PythonGetting Started effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of PythonGetting Started and how to apply it in your projects."
}