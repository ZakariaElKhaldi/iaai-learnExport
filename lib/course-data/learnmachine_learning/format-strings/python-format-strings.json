{
  "id": "ac2bab86-72fb-4c0e-a671-4c4827ac36a4",
  "title": "Python -Format - Strings",
  "slug": "python-format-strings",
  "metadata": {
    "description": "Learn about Python -Format - Strings with clear explanations and practical examples.",
    "keywords": [
      "price",
      "string",
      "strings",
      "format",
      "example",
      "print",
      "placeholder",
      "python",
      "formatting",
      "variables"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Python Basics"
    ],
    "estimated_time": 5,
    "category": "LearnMachine Learning",
    "subcategory": "Format Strings"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Python -\nFormat - Strings",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "String Format\nAs we learned in the Python Variables chapter, we cannot combine strings and numbers like this:\nExample\nage = 36\ntxt = \"My name is John, I am \" + age\nprint(txt)\n\nBut we can combine strings and numbers by using\nf-strings\nor the\nformat()\nmethod!\nF-Strings\nF-String was introduced in Python 3.6,\nand is now the preferred way of formatting strings.\nTo specify a string as an f-string, simply put an\nf\nin front of the string \nliteral, and add curly brackets\n{}\nas \nplaceholders for variables and other operations.\nExample\nCreate an f-string:\nage = 36\ntxt = f\"My name is John, I am {age}\"\nprint(txt)\n\nPlaceholders and Modifiers\nA placeholder can contain variables,\noperations, functions, and modifiers to format the value.\nExample\nAdd a placeholder for the\nprice\nvariable:\nprice = 59\ntxt = f\"The price is {price} dollars\"\nprint(txt)\n\nA placeholder can include a\nmodifier\nto format the value.\nA modifier is included by adding a colon\n:\nfollowed by a legal formatting type, like\n.2f\nwhich means fixed point number with 2 decimals:\nExample\nDisplay the price with 2 decimals:\nprice = 59\ntxt = f\"The price is {price:.2f} dollars\"\nprint(txt)\n\nA placeholder can contain Python code, like math operations:\nExample\nPerform a math operation in the placeholder, and return the result:\ntxt = f\"The price is {20 * 59} dollars\"\nprint(txt)\n\nLearn more about String Formatting in our\nString Formatting\nchapter.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "age = 36\ntxt = \"My name is John, I am \" + age\nprint(txt)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "age = 36\ntxt = f\"My name is John, I am {age}\"\nprint(txt)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "price = 59\ntxt = f\"The price is {price} dollars\"\nprint(txt)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "price = 59\ntxt = f\"The price is {price:.2f} dollars\"\nprint(txt)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "txt = f\"The price is {20 * 59} dollars\"\nprint(txt)",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "age = 36\ntxt = \"My name is John, I am \" + age\n# TODO: Complete this line",
      "solution": "age = 36\ntxt = \"My name is John, I am \" + age\nprint(txt)"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "age = 36\ntxt = f\"My name is John, I am {age}\"\n# TODO: Complete this line",
      "solution": "age = 36\ntxt = f\"My name is John, I am {age}\"\nprint(txt)"
    }
  ],
  "related_topics": [
    {
      "id": "02fcddfe-0165-40b3-865a-8106c6ce43a5",
      "title": "Python Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "d47695b0-3bb9-497c-9112-f816d3fcd773",
      "title": "Python Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "8550bb71-d924-48c4-b4a4-d7f4434fd218",
      "title": "Python Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is My name?",
      "options": [
        "now the preferred way of formatting strings",
        "John",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of My name is 'John'."
    },
    {
      "question": "What is and?",
      "options": [
        "None of the above.",
        "None of the above.",
        "John",
        "now the preferred way of formatting strings"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of and is 'now the preferred way of formatting strings'."
    }
  ],
  "summary": "This tutorial covers Python -Format - Strings concepts and techniques. You'll learn how to use Python -Format - Strings effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Python -Format - Strings and how to apply it in your projects."
}