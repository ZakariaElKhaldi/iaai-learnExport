{
  "id": "356c9397-b767-43ee-8ae8-2dee26f1afff",
  "title": "Python MySQLCreate Table",
  "slug": "python-mysqlcreate-table",
  "metadata": {
    "description": "Learn about Python MySQLCreate Table with clear explanations and practical examples.",
    "keywords": [
      "python",
      "table",
      "mysql",
      "create",
      "mycursor",
      "example",
      "connector",
      "mydb",
      "primary",
      "database",
      "customers"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Python Basics"
    ],
    "estimated_time": 5,
    "category": "LearnMachine Learning",
    "subcategory": "MySQL Create Table"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Python MySQL\nCreate Table",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Creating a Table\nTo create a table in MySQL, use the \"CREATE TABLE\" statement.\nMake sure you define the name of the database when you create the connection\nExample\nCreate a table named \"customers\":\nimport mysql.connector\nmydb = mysql.connector.connect(\nhost=\"localhost\",\nuser=\"\nyourusername\n\",\npassword=\"\nyourpassword\n\",\ndatabase=\"mydatabase\"\n)\nmycursor = mydb.cursor()\nmycursor.execute(\"CREATE TABLE customers (name VARCHAR(255), \n  address VARCHAR(255))\")\nRun example \u00bb\nIf the above code was executed with no errors, you have now successfully \ncreated a table.\nCheck if Table Exists\nYou can check if a table exist by listing all tables in your database with the \"SHOW TABLES\" statement:\nExample\nReturn a list of your system's databases:\nimport mysql.connector\nmydb = mysql.connector.connect(\nhost=\"localhost\",\nuser=\"\nyourusername\n\",\npassword=\"\nyourpassword\n\",\ndatabase=\"mydatabase\"\n)\nmycursor = mydb.cursor()\nmycursor.execute(\"SHOW TABLES\")\nfor x in mycursor:\nprint(x)\nRun example \u00bb\nPrimary Key\nWhen creating a table, you should also create a column with a unique key for each \nrecord.\nThis can be done by defining a PRIMARY KEY.\nWe use the statement \"INT AUTO_INCREMENT PRIMARY KEY\" which will insert a \nunique number for each record. Starting at 1, and increased by one for each \nrecord.\nExample\nCreate primary key when creating the table:\nimport mysql.connector\nmydb = mysql.connector.connect(\nhost=\"localhost\",\nuser=\"\nyourusername\n\",\npassword=\"\nyourpassword\n\",\ndatabase=\"mydatabase\"\n)\nmycursor = mydb.cursor()\nmycursor.execute(\"CREATE TABLE customers (id INT AUTO_INCREMENT \n  PRIMARY KEY, name VARCHAR(255), \n  address VARCHAR(255))\")\nRun example \u00bb\nIf the table already exists, use the ALTER TABLE keyword:\nExample\nCreate primary key on an existing table:\nimport mysql.connector\nmydb = mysql.connector.connect(\nhost=\"localhost\",\nuser=\"\nyourusername\n\",\npassword=\"\nyourpassword\n\",\ndatabase=\"mydatabase\"\n)\nmycursor = mydb.cursor()\nmycursor.execute(\"ALTER TABLE customers ADD COLUMN id INT AUTO_INCREMENT \n  PRIMARY KEY\")\nRun example \u00bb\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "import mysql.connector\nmydb = mysql.connector.connect(\nhost=\"localhost\",\nuser=\"\nyourusername\n\",\npassword=\"\nyourpassword\n\",\ndatabase=\"mydatabase\"\n)\nmycursor = mydb.cursor()\nmycursor.execute(\"CREATE TABLE customers (name VARCHAR(255), \n  address VARCHAR(255))\")",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "import mysql.connector\nmydb = mysql.connector.connect(\nhost=\"localhost\",\nuser=\"\nyourusername\n\",\npassword=\"\nyourpassword\n\",\ndatabase=\"mydatabase\"\n)\nmycursor = mydb.cursor()\nmycursor.execute(\"SHOW TABLES\")\nfor x in mycursor:\nprint(x)",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "import mysql.connector\nmydb = mysql.connector.connect(\nhost=\"localhost\",\nuser=\"\nyourusername\n\",\npassword=\"\nyourpassword\n\",\ndatabase=\"mydatabase\"\n)\nmycursor = mydb.cursor()\nmycursor.execute(\"CREATE TABLE customers (id INT AUTO_INCREMENT \n  PRIMARY KEY, name VARCHAR(255), \n  address VARCHAR(255))\")",
      "language": "python",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "import mysql.connector\nmydb = mysql.connector.connect(\nhost=\"localhost\",\nuser=\"\nyourusername\n\",\npassword=\"\nyourpassword\n\",\ndatabase=\"mydatabase\"\n)\nmycursor = mydb.cursor()\nmycursor.execute(\"ALTER TABLE customers ADD COLUMN id INT AUTO_INCREMENT \n  PRIMARY KEY\")",
      "language": "python",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "import mysql.connector\nmydb = mysql.connector.connect(\nhost=\"localhost\",\n# TODO: Complete this line\nyourusername\n\",\npassword=\"\nyourpassword\n\",\ndatabase=\"mydatabase\"\n)\nmycursor = mydb.cursor()\nmycursor.execute(\"CREATE TABLE customers (name VARCHAR(255), \n  address VARCHAR(255))\")",
      "solution": "import mysql.connector\nmydb = mysql.connector.connect(\nhost=\"localhost\",\nuser=\"\nyourusername\n\",\npassword=\"\nyourpassword\n\",\ndatabase=\"mydatabase\"\n)\nmycursor = mydb.cursor()\nmycursor.execute(\"CREATE TABLE customers (name VARCHAR(255), \n  address VARCHAR(255))\")"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "import mysql.connector\nmydb = mysql.connector.connect(\nhost=\"localhost\",\nuser=\"\nyourusername\n\",\npassword=\"\n# TODO: Complete this line\n\",\ndatabase=\"mydatabase\"\n)\nmycursor = mydb.cursor()\nmycursor.execute(\"SHOW TABLES\")\nfor x in mycursor:\nprint(x)",
      "solution": "import mysql.connector\nmydb = mysql.connector.connect(\nhost=\"localhost\",\nuser=\"\nyourusername\n\",\npassword=\"\nyourpassword\n\",\ndatabase=\"mydatabase\"\n)\nmycursor = mydb.cursor()\nmycursor.execute(\"SHOW TABLES\")\nfor x in mycursor:\nprint(x)"
    }
  ],
  "related_topics": [
    {
      "id": "42fa02ce-afe5-44f1-b19d-0570ea511d31",
      "title": "Python Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "630c97a3-8b1d-4ac9-aaaf-bbd3cbd5123b",
      "title": "Python Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "c36e01d7-c4b4-409f-90e7-dd5ba9a39989",
      "title": "Python Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this python feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this python feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers Python MySQLCreate Table concepts and techniques. You'll learn how to use Python MySQLCreate Table effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Python MySQLCreate Table and how to apply it in your projects."
}