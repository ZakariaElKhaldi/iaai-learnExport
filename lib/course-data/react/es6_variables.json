{
  "title": "React ES6 Variables",
  "url": "https://www.w3schools.com/react/react_es6_variables.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "React ES6 Variables",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Variables",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Before ES6 there was only one way of defining your variables: with the var keyword. If you did not define them, they would be assigned to the global object. Unless you were in strict mode, then you would get an error if your variables were undefined.",
      "html": "<p>Before ES6 there was only one way of defining your variables: with the <code>\nvar</code> keyword. If you did not define them, they would be assigned to the \nglobal object. Unless you were in strict mode, then you would get an error if \nyour variables were undefined.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Now, with ES6, there are three ways of defining your variables: var , let , and const .",
      "html": "<p>Now, with ES6, there are three ways of defining your variables:\n<code>var</code>, <code>let</code>, and <code>const</code>.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "var\nx\n=\n\n5.6\n;",
      "language": "javascript",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-var\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5.6</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you use var outside of a function, it belongs to the global scope.",
      "html": "<p>If you use <code>var</code> outside of a function, it belongs to the global scope.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you use var inside of a function, it belongs to that function.",
      "html": "<p>If you use <code>var</code> inside of a function, it belongs to that function.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you use var inside of a block, i.e. a for loop, the variable is still available outside of that block.",
      "html": "<p>If you use <code>var</code> inside of a block, i.e. a for loop, the \nvariable is still available outside of that block.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "var has a function scope, not a block scope.",
      "html": "<p><code>var</code> has a <em>function</em> scope, not a \n<em>block</em> scope.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "let\nx\n=\n\n5.6\n;",
      "language": "javascript",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-let\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5.6</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "let is the block scoped version of var , and is limited to the block (or expression) where it is defined.",
      "html": "<p><code>let</code> is the block scoped version of \n<code>var</code>, and is limited to the block (or expression) where it is defined.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you use let inside of a block, i.e. a for loop, the variable is only available inside of that loop.",
      "html": "<p>If you use <code>let</code> inside of a block, i.e. a for loop, the \nvariable is only available inside of that loop.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "let has a block scope.",
      "html": "<p><code>let</code> has a <em>block</em> scope.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "const\nx\n=\n\n5.6\n;",
      "language": "javascript",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-const\">const</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5.6</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "const is a variable that once it has been created, its value can never change.",
      "html": "<p><code>const</code> is a variable that once it has been \ncreated, its value can never change.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "const has a block scope.",
      "html": "<p><code>const</code> has a <em>block</em> scope.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The keyword const is a bit misleading.",
      "html": "<p>The keyword <code>const</code> is a bit misleading.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It does not define a constant value. It defines a constant reference to a value.",
      "html": "<p>It does not define a constant value. It defines a constant reference to a value.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Because of this you can NOT:",
      "html": "<p>Because of this you can NOT:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "But you CAN:",
      "html": "<p>But you CAN:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is NOT a legal keyword for creating variables",
      "html": "<p>What is NOT a legal keyword for creating variables</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "What is NOT a legal keyword for creating variables",
        "options": [
          {
            "value": "0",
            "text": "var"
          },
          {
            "value": "1",
            "text": "let"
          },
          {
            "value": "2",
            "text": "con"
          },
          {
            "value": "3",
            "text": "const"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_es6_variables1"
      },
      "quiz_type": "quiz",
      "question": "What is NOT a legal keyword for creating variables",
      "options": [
        {
          "value": "0",
          "text": "var"
        },
        {
          "value": "1",
          "text": "let"
        },
        {
          "value": "2",
          "text": "con"
        },
        {
          "value": "3",
          "text": "const"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_es6_variables1",
      "html": "<form action=\"exercise.asp?x=xrcise_es6_variables1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\"><code>var</code></label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\"><code>let</code></label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\"><code>con</code></label></div><div class=\"quizoption\"><input id=\"quizoption3\" name=\"quizoption\" type=\"radio\" value=\"3\"/><label for=\"quizoption3\"><code>const</code></label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}