{
  "title": "React ES6 Destructuring",
  "url": "https://www.w3schools.com/react/react_es6_destructuring.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "React ES6 Destructuring",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Destructuring",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To illustrate destructuring, we'll make a sandwich. Do you take everything out of the refrigerator to make your sandwich? No, you only take out the items you would like to use on your sandwich.",
      "html": "<p>To illustrate destructuring, we'll make a sandwich. Do you take everything out of the refrigerator to make your sandwich? No, you only take out the items you would like to use on your sandwich.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Destructuring is exactly the same. We may have an array or object that we are working with, but we only need some of the items contained in these.",
      "html": "<p>Destructuring is exactly the same. We may have an array or object that we are working with, but we only need some of the items contained in these.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Destructuring makes it easy to extract only what is needed.",
      "html": "<p>Destructuring makes it easy to extract only what is needed.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Destructing Arrays",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Here is the old way of assigning array items to a variable:",
      "html": "<p>Here is the old way of assigning array items to a variable:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "const\nvehicles\n=\n\n[\n'mustang'\n,\n\n'f-150'\n,\n\n'expedition'\n]\n;\n\n\n\n// old way\n\n\nconst\ncar\n=\nvehicles\n[\n0\n]\n;\n\n\nconst\ntruck\n=\nvehicles\n[\n1\n]\n;\n\n\nconst\nsuv\n=\nvehicles\n[\n2\n]\n;",
      "language": "javascript",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-const\">const</span> vehicles <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'mustang'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'f-150'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'expedition'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// old way</span>\n<span class=\"token keyword keyword-const\">const</span> car <span class=\"token operator\">=</span> vehicles<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword keyword-const\">const</span> truck <span class=\"token operator\">=</span> vehicles<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword keyword-const\">const</span> suv <span class=\"token operator\">=</span> vehicles<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Here is the new way of assigning array items to a variable:",
      "html": "<p>Here is the new way of assigning array items to a variable:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "const\nvehicles\n=\n\n[\n'mustang'\n,\n\n'f-150'\n,\n\n'expedition'\n]\n;\n\n\n\nconst\n\n[\ncar\n,\ntruck\n,\nsuv\n]\n\n=\nvehicles\n;",
      "language": "javascript",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-const\">const</span> vehicles <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'mustang'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'f-150'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'expedition'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-const\">const</span> <span class=\"token punctuation\">[</span>car<span class=\"token punctuation\">,</span> truck<span class=\"token punctuation\">,</span> suv<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> vehicles<span class=\"token punctuation\">;</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When destructuring arrays, the order that variables are declared is important.",
      "html": "<p>When destructuring arrays, the order that variables are declared is important.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If we only want the car and suv we can simply leave out the truck but keep the comma:",
      "html": "<p>If we only want the car and suv we can simply leave out the truck but keep the comma:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "const\nvehicles\n=\n\n[\n'mustang'\n,\n\n'f-150'\n,\n\n'expedition'\n]\n;\n\n\n\nconst\n\n[\ncar\n,\n,\nsuv\n]\n\n=\nvehicles\n;",
      "language": "javascript",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-const\">const</span> vehicles <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'mustang'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'f-150'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'expedition'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-const\">const</span> <span class=\"token punctuation\">[</span>car<span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span> suv<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> vehicles<span class=\"token punctuation\">;</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Destructuring comes in handy when a function returns an array:",
      "html": "<p>Destructuring comes in handy when a function returns an array:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/react/tryit.asp?filename=tryreact_es6_destructuring_array",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "function\n\ncalculate\n(\na\n,\nb\n)\n\n{\n\n\nconst\nadd\n=\na\n+\nb\n;\n\n\nconst\nsubtract\n=\na\n-\nb\n;\n\n\nconst\nmultiply\n=\na\n*\nb\n;\n\n\nconst\ndivide\n=\na\n/\nb\n;\n\n\n\nreturn\n\n[\nadd\n,\nsubtract\n,\nmultiply\n,\ndivide\n]\n;\n\n\n}\n\n\n\nconst\n\n[\nadd\n,\nsubtract\n,\nmultiply\n,\ndivide\n]\n\n=\n\ncalculate\n(\n4\n,\n\n7\n)\n;",
      "language": "javascript",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-function\">function</span> <span class=\"token function\">calculate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-const\">const</span> add <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword keyword-const\">const</span> subtract <span class=\"token operator\">=</span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword keyword-const\">const</span> multiply <span class=\"token operator\">=</span> a <span class=\"token operator\">*</span> b<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword keyword-const\">const</span> divide <span class=\"token operator\">=</span> a <span class=\"token operator\">/</span> b<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">[</span>add<span class=\"token punctuation\">,</span> subtract<span class=\"token punctuation\">,</span> multiply<span class=\"token punctuation\">,</span> divide<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> <span class=\"token punctuation\">[</span>add<span class=\"token punctuation\">,</span> subtract<span class=\"token punctuation\">,</span> multiply<span class=\"token punctuation\">,</span> divide<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">calculate</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": "https://www.w3schools.com/react/tryit.asp?filename=tryreact_es6_destructuring_array",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Destructuring Objects",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Here is the old way of using an object inside a function:",
      "html": "<p>Here is the old way of using an object inside a function:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "const\nvehicleOne\n=\n\n{\n\n\nbrand\n:\n\n'Ford'\n,\n\n\nmodel\n:\n\n'Mustang'\n,\n\n\ntype\n:\n\n'car'\n,\n\n\nyear\n:\n\n2021\n,\n\n\ncolor\n:\n\n'red'\n\n\n}\n\n\n\nmyVehicle\n(\nvehicleOne\n)\n;\n\n\n\n// old way\n\n\nfunction\n\nmyVehicle\n(\nvehicle\n)\n\n{\n\n\nconst\nmessage\n=\n\n'My '\n\n+\nvehicle\n.\ntype\n+\n\n' is a '\n\n+\nvehicle\n.\ncolor\n+\n\n' '\n\n+\nvehicle\n.\nbrand\n+\n\n' '\n\n+\nvehicle\n.\nmodel\n+\n\n'.'\n;\n\n\n}",
      "language": "javascript",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-const\">const</span> vehicleOne <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">brand</span><span class=\"token operator\">:</span> <span class=\"token string\">'Ford'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">model</span><span class=\"token operator\">:</span> <span class=\"token string\">'Mustang'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">year</span><span class=\"token operator\">:</span> <span class=\"token number\">2021</span><span class=\"token punctuation\">,</span> \n  <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">myVehicle</span><span class=\"token punctuation\">(</span>vehicleOne<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// old way</span>\n<span class=\"token keyword keyword-function\">function</span> <span class=\"token function\">myVehicle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">vehicle</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-const\">const</span> message <span class=\"token operator\">=</span> <span class=\"token string\">'My '</span> <span class=\"token operator\">+</span> vehicle<span class=\"token punctuation\">.</span>type <span class=\"token operator\">+</span> <span class=\"token string\">' is a '</span> <span class=\"token operator\">+</span> vehicle<span class=\"token punctuation\">.</span>color <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> vehicle<span class=\"token punctuation\">.</span>brand <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> vehicle<span class=\"token punctuation\">.</span>model <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Here is the new way of using an object inside a function:",
      "html": "<p>Here is the new way of using an object inside a function:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/react/tryit.asp?filename=tryreact_es6_destructuring_object1",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "const\nvehicleOne\n=\n\n{\n\n\nbrand\n:\n\n'Ford'\n,\n\n\nmodel\n:\n\n'Mustang'\n,\n\n\ntype\n:\n\n'car'\n,\n\n\nyear\n:\n\n2021\n,\n\n\ncolor\n:\n\n'red'\n\n\n}\n\n\n\nmyVehicle\n(\nvehicleOne\n)\n;\n\n\n\nfunction\n\nmyVehicle\n(\n{\ntype\n,\ncolor\n,\nbrand\n,\nmodel\n}\n)\n\n{\n\n\nconst\nmessage\n=\n\n'My '\n\n+\ntype\n+\n\n' is a '\n\n+\ncolor\n+\n\n' '\n\n+\nbrand\n+\n\n' '\n\n+\nmodel\n+\n\n'.'\n;\n\n\n}",
      "language": "javascript",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-const\">const</span> vehicleOne <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">brand</span><span class=\"token operator\">:</span> <span class=\"token string\">'Ford'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">model</span><span class=\"token operator\">:</span> <span class=\"token string\">'Mustang'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">year</span><span class=\"token operator\">:</span> <span class=\"token number\">2021</span><span class=\"token punctuation\">,</span> \n  <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">myVehicle</span><span class=\"token punctuation\">(</span>vehicleOne<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-function\">function</span> <span class=\"token function\">myVehicle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>type<span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">,</span> brand<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-const\">const</span> message <span class=\"token operator\">=</span> <span class=\"token string\">'My '</span> <span class=\"token operator\">+</span> type <span class=\"token operator\">+</span> <span class=\"token string\">' is a '</span> <span class=\"token operator\">+</span> color <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> brand <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> model <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": "https://www.w3schools.com/react/tryit.asp?filename=tryreact_es6_destructuring_object1",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Notice that the object properties do not have to be declared in a specific order.",
      "html": "<p>Notice that the object properties do not have to be declared in a specific order.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We can even destructure deeply nested objects by referencing the nested object then using a colon and curly braces to again destructure the items needed from the nested object:",
      "html": "<p>We can even destructure deeply nested objects by referencing the nested object then using a colon and curly braces to again destructure the items needed from the nested object:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": "https://www.w3schools.com/react/tryit.asp?filename=tryreact_es6_destructuring_object2",
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "const\nvehicleOne\n=\n\n{\n\n\nbrand\n:\n\n'Ford'\n,\n\n\nmodel\n:\n\n'Mustang'\n,\n\n\ntype\n:\n\n'car'\n,\n\n\nyear\n:\n\n2021\n,\n\n\ncolor\n:\n\n'red'\n,\n\n\nregistration\n:\n\n{\n\n\ncity\n:\n\n'Houston'\n,\n\n\nstate\n:\n\n'Texas'\n,\n\n\ncountry\n:\n\n'USA'\n\n\n}\n\n\n}\n\n\n\nmyVehicle\n(\nvehicleOne\n)\n\n\n\nfunction\n\nmyVehicle\n(\n{\nmodel\n,\n\nregistration\n:\n\n{\nstate\n}\n\n}\n)\n\n{\n\n\nconst\nmessage\n=\n\n'My '\n\n+\nmodel\n+\n\n' is registered in '\n\n+\nstate\n+\n\n'.'\n;\n\n\n}",
      "language": "javascript",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-const\">const</span> vehicleOne <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">brand</span><span class=\"token operator\">:</span> <span class=\"token string\">'Ford'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">model</span><span class=\"token operator\">:</span> <span class=\"token string\">'Mustang'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">year</span><span class=\"token operator\">:</span> <span class=\"token number\">2021</span><span class=\"token punctuation\">,</span> \n  <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">registration</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">city</span><span class=\"token operator\">:</span> <span class=\"token string\">'Houston'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> <span class=\"token string\">'Texas'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">country</span><span class=\"token operator\">:</span> <span class=\"token string\">'USA'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">myVehicle</span><span class=\"token punctuation\">(</span>vehicleOne<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword keyword-function\">function</span> <span class=\"token function\">myVehicle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> model<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">registration</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> state <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-const\">const</span> message <span class=\"token operator\">=</span> <span class=\"token string\">'My '</span> <span class=\"token operator\">+</span> model <span class=\"token operator\">+</span> <span class=\"token string\">' is registered in '</span> <span class=\"token operator\">+</span> state <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": "https://www.w3schools.com/react/tryit.asp?filename=tryreact_es6_destructuring_object2",
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "",
      "html": "<p></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Consider this Array:",
      "html": "<p>Consider this Array:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is a correct syntax to put 'Mike' as a value to x ?",
      "html": "<p>What is a correct syntax to put 'Mike' as a value to <code>x</code>?</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "",
      "html": "<p></p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "",
        "options": [
          {
            "value": "0",
            "text": "const [x] = family;"
          },
          {
            "value": "1",
            "text": "const [,x] = family;"
          },
          {
            "value": "2",
            "text": "const [,,x] = family;"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_es6_destructuring1"
      },
      "quiz_type": "quiz",
      "question": "",
      "options": [
        {
          "value": "0",
          "text": "const [x] = family;"
        },
        {
          "value": "1",
          "text": "const [,x] = family;"
        },
        {
          "value": "2",
          "text": "const [,,x] = family;"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_es6_destructuring1",
      "html": "<form action=\"exercise.asp?x=xrcise_es6_destructuring1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\"><code>const [x] = family;</code></label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\"><code>const [,x] = family;</code></label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\"><code>const [,,x] = family;</code></label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}