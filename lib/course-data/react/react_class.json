{
  "title": "React Class Components",
  "url": "https://www.w3schools.com/react/react_class.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "React Class Components",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Before React 16.8, Class components were the only way to track state and lifecycle on a React component. Function components were considered \"state-less\".",
      "html": "<p>Before React 16.8, Class components were the only way to track state and lifecycle on a React component.\nFunction components were considered \"state-less\".</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "With the addition of Hooks, Function components are now almost equivalent to Class components. The differences are so minor that you will probably never need to use a Class component in React.",
      "html": "<p>With the addition of Hooks, Function components are now almost equivalent to Class components.\nThe differences are so minor that you will probably never need to use a Class component in React.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Even though Function components are preferred, there are no current plans on removing Class components from React.",
      "html": "<p>Even though Function components are preferred, there are no current plans on removing Class components from React.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This section will give you an overview of how to use Class components in React.",
      "html": "<p>This section will give you an overview of how to use Class components in React.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Feel free to skip this section, and use Function Components instead.",
      "html": "<p>Feel free to skip this section, and use Function Components instead.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "React Components",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Components are independent and reusable bits of code. They serve the same purpose as JavaScript functions, but work in isolation and return HTML via a render() function.",
      "html": "<p>Components are independent and reusable bits of code.\nThey serve the same purpose as JavaScript functions,\nbut work in isolation and return HTML via a render() function.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Components come in two types, Class components and Function components, in this chapter you will learn about Class components.",
      "html": "<p>Components come in two types, Class components and Function components, in \nthis chapter you will learn about Class components.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Create a Class Component",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When creating a React component, the component's name must start with an upper case letter.",
      "html": "<p>When creating a React component, the component's name must start with an \nupper case letter.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The component has to include the extends React.Component statement, this statement creates an inheritance to React.Component, and gives your component access to React.Component's functions.",
      "html": "<p>The component has to include the <code>extends React.Component</code> statement, this statement creates an inheritance to \nReact.Component, and gives your component access to React.Component's functions.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The component also requires a render() method, this method returns HTML.",
      "html": "<p>The component also requires a <code>render()</code> method, \nthis method returns HTML.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nCar\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n<\nh2\n>\nHi, I am a Car!\n</\nh2\n>\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Car</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hi, I am a Car!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Now your React application has a component called Car, which returns a <h2> element.",
      "html": "<p>Now your React application has a component called Car, which returns a \n<code>&lt;h2&gt;</code> element.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To use this component in your application, use similar syntax as normal HTML: <Car />",
      "html": "<p>To use this component in your application, use similar syntax as normal HTML:\n<code style=\"white-space: nowrap;\">&lt;Car /&gt;</code></p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "const\nroot\n=\nReactDOM\n.\ncreateRoot\n(\ndocument\n.\ngetElementById\n(\n'root'\n)\n)\n;\n\nroot\n.\nrender\n(\n<\nCar\n\n/>\n)\n;",
      "language": "html",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-const\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Car</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Component Constructor",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If there is a constructor() function in your component, this function will be called when the component gets initiated.",
      "html": "<p>If there is a <code><code>constructor()</code></code> function in your component, this function will be called when the \ncomponent gets initiated.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The constructor function is where you initiate the component's properties.",
      "html": "<p>The constructor function is where you initiate the component's properties.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In React, component properties should be kept in an object called state .",
      "html": "<p>In React, component properties should be kept in an object called\n<code>state</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You will learn more about state later in this tutorial.",
      "html": "<p>You will learn more about <code>state</code> later in \nthis tutorial.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The constructor function is also where you honor the inheritance of the parent component by including the super() statement, which executes the parent component's constructor function, and your component has access to all the functions of the parent component ( React.Component ).",
      "html": "<p>The constructor function is also where you honor the inheritance of the \nparent component by including the <code>super()</code> \nstatement, which executes the parent component's constructor function, and your component has access to all the functions of \nthe parent component (<code>React.Component</code>).</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nCar\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nconstructor\n(\n)\n\n{\n\n\nsuper\n(\n)\n;\n\n\nthis\n.\nstate\n=\n\n{\ncolor\n:\n\n\"red\"\n}\n;\n\n\n}\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n<\nh2\n>\nI am a Car!\n</\nh2\n>\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Car</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-super\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">I am a Car!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Use the color property in the render() function:",
      "html": "<p>Use the color property in the render() function:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nCar\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nconstructor\n(\n)\n\n{\n\n\nsuper\n(\n)\n;\n\n\nthis\n.\nstate\n=\n\n{\ncolor\n:\n\n\"red\"\n}\n;\n\n\n}\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n<\nh2\n>\nI am a\n{\nthis\n.\nstate\n.\ncolor\n}\nCar!\n</\nh2\n>\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Car</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-super\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">I am a </span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> Car!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Props",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Another way of handling component properties is by using props .",
      "html": "<p>Another way of handling component properties is by using <code>props</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Props are like function arguments, and you send them into the component as attributes.",
      "html": "<p>Props are like function arguments, and you send them into the component as attributes.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You will learn more about props in the next chapter.",
      "html": "<p>You will learn more about <code>props</code> in the next chapter.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nCar\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n<\nh2\n>\nI am a\n{\nthis\n.\nprops\n.\ncolor\n}\nCar!\n</\nh2\n>\n;\n\n\n}\n\n\n}\n\n\n\nconst\nroot\n=\nReactDOM\n.\ncreateRoot\n(\ndocument\n.\ngetElementById\n(\n'root'\n)\n)\n;\n\nroot\n.\nrender\n(\n<\nCar\n\ncolor\n=\n\"\nred\n\"\n/>\n)\n;",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Car</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">I am a </span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> Car!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Car</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>red<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Props in the Constructor",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If your component has a constructor function, the props should always be passed to the constructor and also to the React.Component via the super() method.",
      "html": "<p>If your component has a constructor function,\nthe props should always be passed to the constructor and also to the React.Component via the <code>super()</code> method.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nCar\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nconstructor\n(\nprops\n)\n\n{\n\n\nsuper\n(\nprops\n)\n;\n\n\n}\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n<\nh2\n>\nI am a\n{\nthis\n.\nprops\n.\nmodel\n}\n!\n</\nh2\n>\n;\n\n\n}\n\n\n}\n\n\n\nconst\nroot\n=\nReactDOM\n.\ncreateRoot\n(\ndocument\n.\ngetElementById\n(\n'root'\n)\n)\n;\n\nroot\n.\nrender\n(\n<\nCar\n\nmodel\n=\n\"\nMustang\n\"\n/>\n)\n;",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Car</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-super\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">I am a </span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">}</span><span class=\"token plain-text\">!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Car</span></span> <span class=\"token attr-name\">model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Mustang<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Components in Components",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We can refer to components inside other components:",
      "html": "<p>We can refer to components inside other components:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nCar\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n<\nh2\n>\nI am a Car!\n</\nh2\n>\n;\n\n\n}\n\n\n}\n\n\n\nclass\n\nGarage\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n(\n\n\n<\ndiv\n>\n\n\n<\nh1\n>\nWho lives in my Garage?\n</\nh1\n>\n\n\n<\nCar\n\n/>\n\n\n</\ndiv\n>\n\n\n)\n;\n\n\n}\n\n\n}\n\n\n\nconst\nroot\n=\nReactDOM\n.\ncreateRoot\n(\ndocument\n.\ngetElementById\n(\n'root'\n)\n)\n;\n\nroot\n.\nrender\n(\n<\nGarage\n\n/>\n)\n;",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Car</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">I am a Car!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Garage</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Who lives in my Garage?</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Car</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Garage</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Components in Files",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "React is all about re-using code, and it can be smart to insert some of your components in separate files.",
      "html": "<p>React is all about re-using code, and it can be smart to insert some of your \ncomponents in separate files.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To do that, create a new file with a .js file extension and put the code inside it:",
      "html": "<p>To do that, create a new file with a <code>.js</code> \nfile extension and put the code inside it:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note that the file must start by importing React (as before), and it has to end with the statement export default Car; .",
      "html": "<p>Note that the file must start by importing React (as before), and it has to \nend with the statement <code style=\"white-space:nowrap\">export default Car;</code>.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "import\nReact\nfrom\n\n'react'\n;\n\n\n\nclass\n\nCar\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n<\nh2\n>\nHi, I am a Car!\n</\nh2\n>\n;\n\n\n}\n\n\n}\n\n\n\nexport\n\ndefault\nCar\n;",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-import\">import</span> React <span class=\"token keyword keyword-from\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Car</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hi, I am a Car!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-export\">export</span> <span class=\"token keyword keyword-default\">default</span> Car<span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To be able to use the Car component, you have to import the file in your application.",
      "html": "<p>To be able to use the <code>Car</code> component, you have to import the file in your \napplication.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "import\nReact\nfrom\n\n'react'\n;\n\n\nimport\nReactDOM\nfrom\n\n'react-dom/client'\n;\n\n\nimport\nCar\nfrom\n\n'./Car.js'\n;\n\n\n\nconst\nroot\n=\nReactDOM\n.\ncreateRoot\n(\ndocument\n.\ngetElementById\n(\n'root'\n)\n)\n;\n\nroot\n.\nrender\n(\n<\nCar\n\n/>\n)\n;",
      "language": "html",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-import\">import</span> React <span class=\"token keyword keyword-from\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword keyword-import\">import</span> ReactDOM <span class=\"token keyword keyword-from\">from</span> <span class=\"token string\">'react-dom/client'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword keyword-import\">import</span> Car <span class=\"token keyword keyword-from\">from</span> <span class=\"token string\">'./Car.js'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-const\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Car</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "React Class Component State",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "React Class components have a built-in state object.",
      "html": "<p>React Class components have a built-in <code>state</code> object.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You might have noticed that we used state earlier in the component constructor section.",
      "html": "<p>You might have noticed that we used <code>state</code> earlier in the component constructor section.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The state object is where you store property values that belongs to the component.",
      "html": "<p>The <code>state</code> object is where you store property values that belongs to the component.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When the state object changes, the component re-renders.",
      "html": "<p>When the <code>state</code> object changes, the component re-renders.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Creating the state Object",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The state object is initialized in the constructor:",
      "html": "<p>The state object is initialized in the constructor:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nCar\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nconstructor\n(\nprops\n)\n\n{\n\n\nsuper\n(\nprops\n)\n;\n\n\nthis\n.\nstate\n=\n\n{\nbrand\n:\n\n\"Ford\"\n}\n;\n\n\n}\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n(\n\n\n<\ndiv\n>\n\n\n<\nh1\n>\nMy Car\n</\nh1\n>\n\n\n</\ndiv\n>\n\n\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Car</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-super\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">brand</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Ford\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">My Car</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The state object can contain as many properties as you like:",
      "html": "<p>The state object can contain as many properties as you like:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nCar\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nconstructor\n(\nprops\n)\n\n{\n\n\nsuper\n(\nprops\n)\n;\n\n\nthis\n.\nstate\n=\n\n{\n\n\nbrand\n:\n\n\"Ford\"\n,\n\n\nmodel\n:\n\n\"Mustang\"\n,\n\n\ncolor\n:\n\n\"red\"\n,\n\n\nyear\n:\n\n1964\n\n\n}\n;\n\n\n}\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n(\n\n\n<\ndiv\n>\n\n\n<\nh1\n>\nMy Car\n</\nh1\n>\n\n\n</\ndiv\n>\n\n\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Car</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-super\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">brand</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Ford\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">model</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Mustang\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">year</span><span class=\"token operator\">:</span> <span class=\"token number\">1964</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">My Car</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Using the state Object",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Refer to the state object anywhere in the component by using the this.state. propertyname syntax:",
      "html": "<p>Refer to the <code>state</code> object anywhere in the component by using the\n<code>this.state.<em>propertyname</em></code> syntax:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nCar\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nconstructor\n(\nprops\n)\n\n{\n\n\nsuper\n(\nprops\n)\n;\n\n\nthis\n.\nstate\n=\n\n{\n\n\nbrand\n:\n\n\"Ford\"\n,\n\n\nmodel\n:\n\n\"Mustang\"\n,\n\n\ncolor\n:\n\n\"red\"\n,\n\n\nyear\n:\n\n1964\n\n\n}\n;\n\n\n}\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n(\n\n\n<\ndiv\n>\n\n\n<\nh1\n>\nMy\n{\nthis\n.\nstate\n.\nbrand\n}\n</\nh1\n>\n\n\n<\np\n>\n\nIt is a\n{\nthis\n.\nstate\n.\ncolor\n}\n\n\n{\nthis\n.\nstate\n.\nmodel\n}\n\nfrom\n{\nthis\n.\nstate\n.\nyear\n}\n.\n\n</\np\n>\n\n\n</\ndiv\n>\n\n\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Car</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-super\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">brand</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Ford\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">model</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Mustang\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">year</span><span class=\"token operator\">:</span> <span class=\"token number\">1964</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">My </span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>brand<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          It is a </span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          from </span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">}</span><span class=\"token plain-text\">.\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Changing the state Object",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To change a value in the state object, use the this.setState() method.",
      "html": "<p>To change a value in the state object, use the <code>this.setState()</code> method.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When a value in the state object changes, the component will re-render, meaning that the output will change according to the new value(s).",
      "html": "<p>When a value in the <code>state</code> object changes, \nthe component will re-render, meaning that the output will change according to \nthe new value(s).</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nCar\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nconstructor\n(\nprops\n)\n\n{\n\n\nsuper\n(\nprops\n)\n;\n\n\nthis\n.\nstate\n=\n\n{\n\n\nbrand\n:\n\n\"Ford\"\n,\n\n\nmodel\n:\n\n\"Mustang\"\n,\n\n\ncolor\n:\n\n\"red\"\n,\n\n\nyear\n:\n\n1964\n\n\n}\n;\n\n\n}\n\n\nchangeColor\n\n=\n\n(\n)\n\n=>\n\n{\n\n\nthis\n.\nsetState\n(\n{\ncolor\n:\n\n\"blue\"\n}\n)\n;\n\n\n}\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n(\n\n\n<\ndiv\n>\n\n\n<\nh1\n>\nMy\n{\nthis\n.\nstate\n.\nbrand\n}\n</\nh1\n>\n\n\n<\np\n>\n\nIt is a\n{\nthis\n.\nstate\n.\ncolor\n}\n\n\n{\nthis\n.\nstate\n.\nmodel\n}\n\nfrom\n{\nthis\n.\nstate\n.\nyear\n}\n.\n\n</\np\n>\n\n\n<\nbutton\n\n\ntype\n=\n\"\nbutton\n\"\n\n\nonClick\n=\n{\nthis\n.\nchangeColor\n}\n\n\n>\nChange color\n</\nbutton\n>\n\n\n</\ndiv\n>\n\n\n)\n;\n\n\n}\n\n\n}",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Car</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-super\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">brand</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Ford\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">model</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Mustang\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">year</span><span class=\"token operator\">:</span> <span class=\"token number\">1964</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function-variable function\">changeColor</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">My </span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>brand<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          It is a </span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          from </span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">}</span><span class=\"token plain-text\">.\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n          <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>changeColor<span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Change color</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Always use the setState() method to change the state object, it will ensure that the component knows its been updated and calls the render() method (and all the other lifecycle methods).",
      "html": "<p>Always use the <code>setState()</code> method to change the state object,\nit will ensure that the component knows its been updated and calls the render() method\n(and all the other lifecycle methods).</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Lifecycle of Components",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Each component in React has a lifecycle which you can monitor and manipulate during its three main phases.",
      "html": "<p>Each component in React has a lifecycle which you can monitor and manipulate during its \nthree main phases.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The three phases are: Mounting , Updating , and Unmounting .",
      "html": "<p>The three phases are: <strong>Mounting</strong>, <strong>Updating</strong>, and\n<strong>Unmounting</strong>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Mounting",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Mounting means putting elements into the DOM.",
      "html": "<p>Mounting means putting elements into the DOM.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "React has four built-in methods that gets called, in this order, when mounting a component:",
      "html": "<p>React has four built-in methods that gets called, in this order, when \nmounting a component:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The render() method is required and will always be called, the others are optional and will be called if you define them.",
      "html": "<p>The <code>render()</code> method is required and will \nalways be called, the others are optional and will be called if you define them.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "constructor",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The constructor() method is called before anything else, when the component is initiated, and it is the natural place to set up the initial state and other initial values.",
      "html": "<p>The <code>constructor()</code> method is called before anything else, \nwhen the component is initiated, and it is the natural \nplace to set up the initial <code>state</code> and other \ninitial values.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The constructor() method is called with the props , as arguments, and you should always start by calling the super(props) before anything else, this will initiate the parent's constructor method and allows the component to inherit methods from its parent ( React.Component ).",
      "html": "<p>The <code>constructor()</code> method is called with the \n<code>props</code>, as arguments, and you should always \nstart by calling the <code>super(props)</code> before \nanything else, this will initiate the parent's constructor method and allows the \ncomponent to inherit methods from its parent (<code>React.Component</code>).</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nHeader\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nconstructor\n(\nprops\n)\n\n{\n\n\nsuper\n(\nprops\n)\n;\n\n\nthis\n.\nstate\n=\n\n{\nfavoritecolor\n:\n\n\"red\"\n}\n;\n\n\n}\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n(\n\n\n<\nh1\n>\nMy Favorite Color is\n{\nthis\n.\nstate\n.\nfavoritecolor\n}\n</\nh1\n>\n\n\n)\n;\n\n\n}\n\n\n}\n\n\n\nconst\nroot\n=\nReactDOM\n.\ncreateRoot\n(\ndocument\n.\ngetElementById\n(\n'root'\n)\n)\n;\n\nroot\n.\nrender\n(\n<\nHeader\n\n/>\n)\n;",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Header</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-super\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">favoritecolor</span><span class=\"token operator\">:</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">My Favorite Color is </span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>favoritecolor<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Header</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "getDerivedStateFromProps",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The getDerivedStateFromProps() method is called right before rendering the element(s) in the DOM.",
      "html": "<p>The <code>getDerivedStateFromProps()</code> method is \ncalled right before rendering the element(s) in the DOM.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This is the natural place to set the state object based on the initial props .",
      "html": "<p>This is the natural place to set the <code>state</code> object based on the initial \n<code>props</code>.\n</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It takes state as an argument, and returns an object with changes to the state .",
      "html": "<p>It takes <code>\nstate</code> as an argument, and returns an object with changes to the\n<code>state</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The example below starts with the favorite color being \"red\", but the getDerivedStateFromProps() method updates the favorite color based on the favcol attribute:",
      "html": "<p>The example below starts with the favorite color being \n\"red\", but the\n<code>\ngetDerivedStateFromProps()</code> method updates the favorite color based on the\n<code>favcol</code> attribute:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nHeader\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nconstructor\n(\nprops\n)\n\n{\n\n\nsuper\n(\nprops\n)\n;\n\n\nthis\n.\nstate\n=\n\n{\nfavoritecolor\n:\n\n\"red\"\n}\n;\n\n\n}\n\n\nstatic\n\ngetDerivedStateFromProps\n(\nprops\n,\nstate\n)\n\n{\n\n\nreturn\n\n{\nfavoritecolor\n:\nprops\n.\nfavcol\n}\n;\n\n\n}\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n(\n\n\n<\nh1\n>\nMy Favorite Color is\n{\nthis\n.\nstate\n.\nfavoritecolor\n}\n</\nh1\n>\n\n\n)\n;\n\n\n}\n\n\n}\n\n\n\nconst\nroot\n=\nReactDOM\n.\ncreateRoot\n(\ndocument\n.\ngetElementById\n(\n'root'\n)\n)\n;\n\nroot\n.\nrender\n(\n<\nHeader\n\nfavcol\n=\n\"\nyellow\n\"\n/>\n)\n;",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Header</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-super\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">favoritecolor</span><span class=\"token operator\">:</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword keyword-static\">static</span> <span class=\"token function\">getDerivedStateFromProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">favoritecolor</span><span class=\"token operator\">:</span> props<span class=\"token punctuation\">.</span>favcol <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">My Favorite Color is </span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>favoritecolor<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Header</span></span> <span class=\"token attr-name\">favcol</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yellow<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "render",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The render() method is required, and is the method that actually outputs the HTML to the DOM.",
      "html": "<p>The <code>render()</code> method is required, and is the \nmethod that actually outputs the HTML to the DOM.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nHeader\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n(\n\n\n<\nh1\n>\nThis is the content of the Header component\n</\nh1\n>\n\n\n)\n;\n\n\n}\n\n\n}\n\n\n\nconst\nroot\n=\nReactDOM\n.\ncreateRoot\n(\ndocument\n.\ngetElementById\n(\n'root'\n)\n)\n;\n\nroot\n.\nrender\n(\n<\nHeader\n\n/>\n)\n;",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Header</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">This is the content of the Header component</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Header</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "componentDidMount",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The componentDidMount() method is called after the component is rendered.",
      "html": "<p>The <code>componentDidMount()</code> method is called after the \ncomponent is rendered.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This is where you run statements that requires that the component is already placed in the DOM.",
      "html": "<p>This is where you run statements that requires that the component is already placed in the DOM.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nHeader\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nconstructor\n(\nprops\n)\n\n{\n\n\nsuper\n(\nprops\n)\n;\n\n\nthis\n.\nstate\n=\n\n{\nfavoritecolor\n:\n\n\"red\"\n}\n;\n\n\n}\n\n\ncomponentDidMount\n(\n)\n\n{\n\n\nsetTimeout\n(\n(\n)\n\n=>\n\n{\n\n\nthis\n.\nsetState\n(\n{\nfavoritecolor\n:\n\n\"yellow\"\n}\n)\n\n\n}\n,\n\n1000\n)\n\n\n}\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n(\n\n\n<\nh1\n>\nMy Favorite Color is\n{\nthis\n.\nstate\n.\nfavoritecolor\n}\n</\nh1\n>\n\n\n)\n;\n\n\n}\n\n\n}\n\n\n\nconst\nroot\n=\nReactDOM\n.\ncreateRoot\n(\ndocument\n.\ngetElementById\n(\n'root'\n)\n)\n;\n\nroot\n.\nrender\n(\n<\nHeader\n\n/>\n)\n;",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Header</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-super\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">favoritecolor</span><span class=\"token operator\">:</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">favoritecolor</span><span class=\"token operator\">:</span> <span class=\"token string\">\"yellow\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">My Favorite Color is </span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>favoritecolor<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Header</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Updating",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The next phase in the lifecycle is when a component is updated .",
      "html": "<p>The next phase in the lifecycle is when a component is <em>updated</em>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A component is updated whenever there is a change in the component's state or props .",
      "html": "<p>A component is updated whenever there is a change in the component's\n<code>state</code> or <code>props</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "React has five built-in methods that gets called, in this order, when a component is updated:",
      "html": "<p>React has five built-in methods that gets called, in this order, when a component \nis updated:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The render() method is required and will always be called, the others are optional and will be called if you define them.",
      "html": "<p>The <code>render()</code> method is required and will \nalways be called, the others are optional and will be called if you define them.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "getDerivedStateFromProps",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Also at updates the getDerivedStateFromProps method is called. This is the first method that is called when a component gets updated.",
      "html": "<p>Also at <em>updates</em> the <code>getDerivedStateFromProps</code> method is \ncalled. This is the first method that is called when a component gets updated.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This is still the natural place to set the state object based on the initial props.",
      "html": "<p>This is still the natural place to set the <code>state</code> object based on the initial props.\n\n\n</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The example below has a button that changes the favorite color to blue, but since the getDerivedStateFromProps() method is called, which updates the state with the color from the favcol attribute, the favorite color is still rendered as yellow:",
      "html": "<p>The example below has a button that changes the favorite color to blue, but \nsince the <code>getDerivedStateFromProps()</code> method is called, \nwhich updates the state with the color from the favcol attribute, the favorite color is \nstill \nrendered as yellow:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nHeader\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nconstructor\n(\nprops\n)\n\n{\n\n\nsuper\n(\nprops\n)\n;\n\n\nthis\n.\nstate\n=\n\n{\nfavoritecolor\n:\n\n\"red\"\n}\n;\n\n\n}\n\n\nstatic\n\ngetDerivedStateFromProps\n(\nprops\n,\nstate\n)\n\n{\n\n\nreturn\n\n{\nfavoritecolor\n:\nprops\n.\nfavcol\n}\n;\n\n\n}\n\n\nchangeColor\n\n=\n\n(\n)\n\n=>\n\n{\n\n\nthis\n.\nsetState\n(\n{\nfavoritecolor\n:\n\n\"blue\"\n}\n)\n;\n\n\n}\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n(\n\n\n<\ndiv\n>\n\n\n<\nh1\n>\nMy Favorite Color is\n{\nthis\n.\nstate\n.\nfavoritecolor\n}\n</\nh1\n>\n\n\n<\nbutton\n\ntype\n=\n\"\nbutton\n\"\n\nonClick\n=\n{\nthis\n.\nchangeColor\n}\n>\nChange color\n</\nbutton\n>\n\n\n</\ndiv\n>\n\n\n)\n;\n\n\n}\n\n\n}\n\n\n\nconst\nroot\n=\nReactDOM\n.\ncreateRoot\n(\ndocument\n.\ngetElementById\n(\n'root'\n)\n)\n;\n\nroot\n.\nrender\n(\n<\nHeader\n\nfavcol\n=\n\"\nyellow\n\"\n\n/>\n)\n;",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Header</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-super\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">favoritecolor</span><span class=\"token operator\">:</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword keyword-static\">static</span> <span class=\"token function\">getDerivedStateFromProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">favoritecolor</span><span class=\"token operator\">:</span> props<span class=\"token punctuation\">.</span>favcol <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function-variable function\">changeColor</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">favoritecolor</span><span class=\"token operator\">:</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">My Favorite Color is </span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>favoritecolor<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>changeColor<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Change color</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Header</span></span> <span class=\"token attr-name\">favcol</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yellow<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "shouldComponentUpdate",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the shouldComponentUpdate() method you can return a Boolean value that specifies whether React should continue with the rendering or not.",
      "html": "<p>In the <code>shouldComponentUpdate()</code> method\nyou can return a Boolean value that specifies whether React should continue with the rendering or not.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The default value is true .",
      "html": "<p>The default value is <code>true</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The example below shows what happens when the shouldComponentUpdate() method returns false :",
      "html": "<p>The example below shows what happens when the <code>\nshouldComponentUpdate()</code> method returns <code>false</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nHeader\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nconstructor\n(\nprops\n)\n\n{\n\n\nsuper\n(\nprops\n)\n;\n\n\nthis\n.\nstate\n=\n\n{\nfavoritecolor\n:\n\n\"red\"\n}\n;\n\n\n}\n\n\nshouldComponentUpdate\n(\n)\n\n{\n\n\nreturn\n\nfalse\n;\n\n\n}\n\n\nchangeColor\n\n=\n\n(\n)\n\n=>\n\n{\n\n\nthis\n.\nsetState\n(\n{\nfavoritecolor\n:\n\n\"blue\"\n}\n)\n;\n\n\n}\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n(\n\n\n<\ndiv\n>\n\n\n<\nh1\n>\nMy Favorite Color is\n{\nthis\n.\nstate\n.\nfavoritecolor\n}\n</\nh1\n>\n\n\n<\nbutton\n\ntype\n=\n\"\nbutton\n\"\n\nonClick\n=\n{\nthis\n.\nchangeColor\n}\n>\nChange color\n</\nbutton\n>\n\n\n</\ndiv\n>\n\n\n)\n;\n\n\n}\n\n\n}\n\n\n\nconst\nroot\n=\nReactDOM\n.\ncreateRoot\n(\ndocument\n.\ngetElementById\n(\n'root'\n)\n)\n;\n\nroot\n.\nrender\n(\n<\nHeader\n\n/>\n)\n;",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Header</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-super\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">favoritecolor</span><span class=\"token operator\">:</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">shouldComponentUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function-variable function\">changeColor</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">favoritecolor</span><span class=\"token operator\">:</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">My Favorite Color is </span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>favoritecolor<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>changeColor<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Change color</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Header</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nHeader\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nconstructor\n(\nprops\n)\n\n{\n\n\nsuper\n(\nprops\n)\n;\n\n\nthis\n.\nstate\n=\n\n{\nfavoritecolor\n:\n\n\"red\"\n}\n;\n\n\n}\n\n\nshouldComponentUpdate\n(\n)\n\n{\n\n\nreturn\n\ntrue\n;\n\n\n}\n\n\nchangeColor\n\n=\n\n(\n)\n\n=>\n\n{\n\n\nthis\n.\nsetState\n(\n{\nfavoritecolor\n:\n\n\"blue\"\n}\n)\n;\n\n\n}\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n(\n\n\n<\ndiv\n>\n\n\n<\nh1\n>\nMy Favorite Color is\n{\nthis\n.\nstate\n.\nfavoritecolor\n}\n</\nh1\n>\n\n\n<\nbutton\n\ntype\n=\n\"\nbutton\n\"\n\nonClick\n=\n{\nthis\n.\nchangeColor\n}\n>\nChange color\n</\nbutton\n>\n\n\n</\ndiv\n>\n\n\n)\n;\n\n\n}\n\n\n}\n\n\n\nconst\nroot\n=\nReactDOM\n.\ncreateRoot\n(\ndocument\n.\ngetElementById\n(\n'root'\n)\n)\n;\n\nroot\n.\nrender\n(\n<\nHeader\n\n/>\n)\n;",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Header</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-super\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">favoritecolor</span><span class=\"token operator\">:</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">shouldComponentUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function-variable function\">changeColor</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">favoritecolor</span><span class=\"token operator\">:</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">My Favorite Color is </span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>favoritecolor<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>changeColor<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Change color</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Header</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "render",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The render() method is of course called when a component gets updated , it has to re-render the HTML to the DOM, with the new changes.",
      "html": "<p>The <code>render()</code> method is of course called when a component gets <em>updated</em>, \nit has to re-render the HTML to the DOM, with the new changes.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The example below has a button that changes the favorite color to blue:",
      "html": "<p>The example below has a button that changes the favorite color to blue:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nHeader\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nconstructor\n(\nprops\n)\n\n{\n\n\nsuper\n(\nprops\n)\n;\n\n\nthis\n.\nstate\n=\n\n{\nfavoritecolor\n:\n\n\"red\"\n}\n;\n\n\n}\n\n\nchangeColor\n\n=\n\n(\n)\n\n=>\n\n{\n\n\nthis\n.\nsetState\n(\n{\nfavoritecolor\n:\n\n\"blue\"\n}\n)\n;\n\n\n}\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n(\n\n\n<\ndiv\n>\n\n\n<\nh1\n>\nMy Favorite Color is\n{\nthis\n.\nstate\n.\nfavoritecolor\n}\n</\nh1\n>\n\n\n<\nbutton\n\ntype\n=\n\"\nbutton\n\"\n\nonClick\n=\n{\nthis\n.\nchangeColor\n}\n>\nChange color\n</\nbutton\n>\n\n\n</\ndiv\n>\n\n\n)\n;\n\n\n}\n\n\n}\n\n\n\nconst\nroot\n=\nReactDOM\n.\ncreateRoot\n(\ndocument\n.\ngetElementById\n(\n'root'\n)\n)\n;\n\nroot\n.\nrender\n(\n<\nHeader\n\n/>\n)\n;",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Header</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-super\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">favoritecolor</span><span class=\"token operator\">:</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function-variable function\">changeColor</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">favoritecolor</span><span class=\"token operator\">:</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">My Favorite Color is </span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>favoritecolor<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>changeColor<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Change color</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Header</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "getSnapshotBeforeUpdate",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the getSnapshotBeforeUpdate() method you have access to the props and state before the update, meaning that even after the update, you can check what the values were before the update.",
      "html": "<p>In the <code>getSnapshotBeforeUpdate()</code> method\nyou have access to the <code>props</code> and \n<code>state</code> <em>before</em> the update, meaning that \neven after the update, you can check what the values were <em>before</em> the \nupdate.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the getSnapshotBeforeUpdate() method is present, you should also include the componentDidUpdate() method, otherwise you will get an error.",
      "html": "<p>If the <code>getSnapshotBeforeUpdate()</code> method\nis present, you should also include the <code>\ncomponentDidUpdate()</code> method, otherwise you will get an error.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The example below might seem complicated, but all it does is this:",
      "html": "<p>The example below might seem complicated, but all it does is this:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When the component is mounting it is rendered with the favorite color \"red\".",
      "html": "<p>When the component is <em>mounting</em> it is rendered with the favorite \ncolor \"red\".</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When the component has been mounted, a timer changes the state, and after one second, the favorite color becomes \"yellow\".",
      "html": "<p>When the component <em>has been mounted,</em> a timer changes the state, and \nafter one second, the favorite color becomes \"yellow\".</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This action triggers the update phase, and since this component has a getSnapshotBeforeUpdate() method, this method is executed, and writes a message to the empty DIV1 element.",
      "html": "<p>This action triggers the <em>update</em> phase, and since this component has a <code>\ngetSnapshotBeforeUpdate()</code> method, this method is executed, and writes a \nmessage to the empty DIV1 element.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Then the componentDidUpdate() method is executed and writes a message in the empty DIV2 element:",
      "html": "<p>Then the <code>componentDidUpdate()</code> method is \nexecuted and writes a message in the empty DIV2 element:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "",
      "html": "<p>\u00a0</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nHeader\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nconstructor\n(\nprops\n)\n\n{\n\n\nsuper\n(\nprops\n)\n;\n\n\nthis\n.\nstate\n=\n\n{\nfavoritecolor\n:\n\n\"red\"\n}\n;\n\n\n}\n\n\ncomponentDidMount\n(\n)\n\n{\n\n\nsetTimeout\n(\n(\n)\n\n=>\n\n{\n\n\nthis\n.\nsetState\n(\n{\nfavoritecolor\n:\n\n\"yellow\"\n}\n)\n\n\n}\n,\n\n1000\n)\n\n\n}\n\n\ngetSnapshotBeforeUpdate\n(\nprevProps\n,\nprevState\n)\n\n{\n\ndocument\n.\ngetElementById\n(\n\"div1\"\n)\n.\ninnerHTML\n=\n\n\n\"Before the update, the favorite was \"\n\n+\nprevState\n.\nfavoritecolor\n;\n\n\n}\n\n\ncomponentDidUpdate\n(\n)\n\n{\n\ndocument\n.\ngetElementById\n(\n\"div2\"\n)\n.\ninnerHTML\n=\n\n\n\"The updated favorite is \"\n\n+\n\nthis\n.\nstate\n.\nfavoritecolor\n;\n\n\n}\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n(\n\n\n<\ndiv\n>\n\n\n<\nh1\n>\nMy Favorite Color is\n{\nthis\n.\nstate\n.\nfavoritecolor\n}\n</\nh1\n>\n\n\n<\ndiv\n\nid\n=\n\"\ndiv1\n\"\n>\n</\ndiv\n>\n\n\n<\ndiv\n\nid\n=\n\"\ndiv2\n\"\n>\n</\ndiv\n>\n\n\n</\ndiv\n>\n\n\n)\n;\n\n\n}\n\n\n}\n\n\n\nconst\nroot\n=\nReactDOM\n.\ncreateRoot\n(\ndocument\n.\ngetElementById\n(\n'root'\n)\n)\n;\n\nroot\n.\nrender\n(\n<\nHeader\n\n/>\n)\n;",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Header</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-super\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">favoritecolor</span><span class=\"token operator\">:</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">favoritecolor</span><span class=\"token operator\">:</span> <span class=\"token string\">\"yellow\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">getSnapshotBeforeUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps<span class=\"token punctuation\">,</span> prevState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span>\n    <span class=\"token string\">\"Before the update, the favorite was \"</span> <span class=\"token operator\">+</span> prevState<span class=\"token punctuation\">.</span>favoritecolor<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span>\n    <span class=\"token string\">\"The updated favorite is \"</span> <span class=\"token operator\">+</span> <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>favoritecolor<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">My Favorite Color is </span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>favoritecolor<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>div1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>div2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Header</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "componentDidUpdate",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The componentDidUpdate method is called after the component is updated in the DOM.",
      "html": "<p>The <code>componentDidUpdate</code> method\nis called after the component is updated in the DOM.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The example below might seem complicated, but all it does is this:",
      "html": "<p>The example below might seem complicated, but all it does is this:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When the component is mounting it is rendered with the favorite color \"red\".",
      "html": "<p>When the component is <em>mounting</em> it is rendered with the favorite \ncolor \"red\".</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When the component has been mounted, a timer changes the state, and the color becomes \"yellow\".",
      "html": "<p>When the component <em>has been mounted,</em> a timer changes the state, and \nthe color becomes \"yellow\".</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This action triggers the update phase, and since this component has a componentDidUpdate method, this method is executed and writes a message in the empty DIV element:",
      "html": "<p>This action triggers the <em>update</em> phase, and since this component has \na <code>componentDidUpdate</code> method, this method is \nexecuted and writes a message in the empty DIV element:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nHeader\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nconstructor\n(\nprops\n)\n\n{\n\n\nsuper\n(\nprops\n)\n;\n\n\nthis\n.\nstate\n=\n\n{\nfavoritecolor\n:\n\n\"red\"\n}\n;\n\n\n}\n\n\ncomponentDidMount\n(\n)\n\n{\n\n\nsetTimeout\n(\n(\n)\n\n=>\n\n{\n\n\nthis\n.\nsetState\n(\n{\nfavoritecolor\n:\n\n\"yellow\"\n}\n)\n\n\n}\n,\n\n1000\n)\n\n\n}\n\n\ncomponentDidUpdate\n(\n)\n\n{\n\ndocument\n.\ngetElementById\n(\n\"mydiv\"\n)\n.\ninnerHTML\n=\n\n\n\"The updated favorite is \"\n\n+\n\nthis\n.\nstate\n.\nfavoritecolor\n;\n\n\n}\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n(\n\n\n<\ndiv\n>\n\n\n<\nh1\n>\nMy Favorite Color is\n{\nthis\n.\nstate\n.\nfavoritecolor\n}\n</\nh1\n>\n\n\n<\ndiv\n\nid\n=\n\"\nmydiv\n\"\n>\n</\ndiv\n>\n\n\n</\ndiv\n>\n\n\n)\n;\n\n\n}\n\n\n}\n\n\n\nconst\nroot\n=\nReactDOM\n.\ncreateRoot\n(\ndocument\n.\ngetElementById\n(\n'root'\n)\n)\n;\n\nroot\n.\nrender\n(\n<\nHeader\n\n/>\n)\n;",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Header</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-super\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">favoritecolor</span><span class=\"token operator\">:</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">favoritecolor</span><span class=\"token operator\">:</span> <span class=\"token string\">\"yellow\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mydiv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span>\n    <span class=\"token string\">\"The updated favorite is \"</span> <span class=\"token operator\">+</span> <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>favoritecolor<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">My Favorite Color is </span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>favoritecolor<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mydiv<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Header</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Unmounting",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The next phase in the lifecycle is when a component is removed from the DOM, or unmounting as React likes to call it.",
      "html": "<p>The next phase in the lifecycle is when a component is removed from the DOM, or <em>unmounting</em> as React likes to call it.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "React has only one built-in method that gets called when a component is unmounted:",
      "html": "<p>React has only one built-in method that gets called when a component is unmounted:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "componentWillUnmount",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The componentWillUnmount method is called when the component is about to be removed from the DOM.",
      "html": "<p>The <code>componentWillUnmount</code> method is \ncalled when the component is about to be removed from the DOM.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "class\n\nContainer\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\nconstructor\n(\nprops\n)\n\n{\n\n\nsuper\n(\nprops\n)\n;\n\n\nthis\n.\nstate\n=\n\n{\nshow\n:\n\ntrue\n}\n;\n\n\n}\n\n\ndelHeader\n\n=\n\n(\n)\n\n=>\n\n{\n\n\nthis\n.\nsetState\n(\n{\nshow\n:\n\nfalse\n}\n)\n;\n\n\n}\n\n\nrender\n(\n)\n\n{\n\n\nlet\nmyheader\n;\n\n\nif\n\n(\nthis\n.\nstate\n.\nshow\n)\n\n{\n\nmyheader\n=\n\n<\nChild\n\n/>\n;\n\n\n}\n;\n\n\nreturn\n\n(\n\n\n<\ndiv\n>\n\n\n{\nmyheader\n}\n\n\n<\nbutton\n\ntype\n=\n\"\nbutton\n\"\n\nonClick\n=\n{\nthis\n.\ndelHeader\n}\n>\nDelete Header\n</\nbutton\n>\n\n\n</\ndiv\n>\n\n\n)\n;\n\n\n}\n\n\n}\n\n\n\nclass\n\nChild\n\nextends\n\nReact\n.\nComponent\n\n{\n\n\ncomponentWillUnmount\n(\n)\n\n{\n\n\nalert\n(\n\"The component named Header is about to be unmounted.\"\n)\n;\n\n\n}\n\n\nrender\n(\n)\n\n{\n\n\nreturn\n\n(\n\n\n<\nh1\n>\nHello World!\n</\nh1\n>\n\n\n)\n;\n\n\n}\n\n\n}\n\n\n\nconst\nroot\n=\nReactDOM\n.\ncreateRoot\n(\ndocument\n.\ngetElementById\n(\n'root'\n)\n)\n;\n\nroot\n.\nrender\n(\n<\nContainer\n\n/>\n)\n;",
      "language": "java",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Container</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-super\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">show</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function-variable function\">delHeader</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">show</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-let\">let</span> myheader<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      myheader <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Child</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>myheader<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>delHeader<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Delete Header</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Child</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The component named Header is about to be unmounted.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello World!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Container</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    }
  ]
}