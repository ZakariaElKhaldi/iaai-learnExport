{
  "title": "Upgrade React",
  "url": "https://www.w3schools.com/react/react_upgrade.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Upgrade React",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Upgrade to React 18",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Upgrading an existing React application to version 18 only requires two steps.",
      "html": "<p>Upgrading an existing React application to version 18 only requires two steps.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If you are already using the latest version of create-react-app which uses React version 18 you can skip this section.",
      "html": "<p>If you are already using the latest version of\n<code>create-react-app</code>\nwhich uses React version 18 you can skip this section.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Step 1: Install React 18",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To install the latest version, from your project folder run the following from the terminal:",
      "html": "<p>To install the latest version, from your project folder run the following from the terminal:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate",
          "w3-black"
        ],
        "isNotranslate": true
      },
      "code": "npm i react@latest react-dom@latest",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate w3-black\">\nnpm i react@latest react-dom@latest\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate",
        "w3-black"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Step 2: Use the new root API",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In order to take advantage of React 18's concurrent features you'll need to use the new root API for client rendering.",
      "html": "<p>In order to take advantage of React 18's concurrent features you'll need to use the new root API for client rendering.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "// Before\n\n\nimport\nReactDOM\nfrom\n\n'react-dom'\n;\n\nReactDOM\n.\nrender\n(\n<\nApp\n\n/>\n,\ndocument\n.\ngetElementById\n(\n'root'\n)\n)\n;\n\n\n\n// After\n\n\nimport\nReactDOM\nfrom\n\n'react-dom/client'\n;\n\n\nconst\nroot\n=\nReactDOM\n.\ncreateRoot\n(\ndocument\n.\ngetElementById\n(\n'root'\n)\n)\n;\n\nroot\n.\nrender\n(\n<\nApp\n\n/>\n)\n;",
      "language": "html",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token comment\">// Before</span>\n<span class=\"token keyword keyword-import\">import</span> ReactDOM <span class=\"token keyword keyword-from\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// After</span>\n<span class=\"token keyword keyword-import\">import</span> ReactDOM <span class=\"token keyword keyword-from\">from</span> <span class=\"token string\">'react-dom/client'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword keyword-const\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Your application will work without using the new root API. If you continue to use ReactDOM.render your application will behave like React 17.",
      "html": "<p>Your application will work without using the new root API. If you continue to use\n<code>ReactDOM.render</code> your application will behave like React 17.</p>"
    }
  ]
}