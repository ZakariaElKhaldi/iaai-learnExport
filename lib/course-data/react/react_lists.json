{
  "title": "React Lists",
  "url": "https://www.w3schools.com/react/react_lists.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "React Lists",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In React, you will render lists with some type of loop.",
      "html": "<p class=\"intro\">In React, you will render lists with some type of loop.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The JavaScript map() array method is generally the preferred method.",
      "html": "<p class=\"intro\">The JavaScript <code>map()</code> array method is generally the preferred method.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "ES6 section",
          "href": "https://www.w3schools.com/react_es6.asp",
          "title": ""
        }
      ],
      "text": "If you need a refresher on the map() method, check out the ES6 section .",
      "html": "<p>If you need a refresher on the <code>map()</code> method, check out the \n<a href=\"react_es6.asp\">ES6 section</a>.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "function\n\nCar\n(\nprops\n)\n\n{\n\n\nreturn\n\n<\nli\n>\nI am a\n{\nprops\n.\nbrand\n}\n</\nli\n>\n;\n\n\n}\n\n\n\nfunction\n\nGarage\n(\n)\n\n{\n\n\nconst\ncars\n=\n\n[\n'Ford'\n,\n\n'BMW'\n,\n\n'Audi'\n]\n;\n\n\nreturn\n\n(\n\n\n<\n>\n\n\n<\nh1\n>\nWho lives in my garage?\n</\nh1\n>\n\n\n<\nul\n>\n\n\n{\ncars\n.\nmap\n(\n(\ncar\n)\n\n=>\n\n<\nCar\n\nbrand\n=\n{\ncar\n}\n\n/>\n)\n}\n\n\n</\nul\n>\n\n\n</\n>\n\n\n)\n;\n\n\n}\n\n\n\nconst\nroot\n=\nReactDOM\n.\ncreateRoot\n(\ndocument\n.\ngetElementById\n(\n'root'\n)\n)\n;\n\nroot\n.\nrender\n(\n<\nGarage\n\n/>\n)\n;",
      "language": "html",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-function\">function</span> <span class=\"token function\">Car</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">I am a </span><span class=\"token punctuation\">{</span> props<span class=\"token punctuation\">.</span>brand <span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-function\">function</span> <span class=\"token function\">Garage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-const\">const</span> cars <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Ford'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'BMW'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Audi'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Who lives in my garage?</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>cars<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">car</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Car</span></span> <span class=\"token attr-name\">brand</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>car<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Garage</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When you run this code in your create-react-app , it will work but you will receive a warning that there is no \"key\" provided for the list items.",
      "html": "<p>When you run this code in your <code>create-react-app</code>, it will work but you will receive a warning that there is no \"key\" provided for the list items.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Keys",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Keys allow React to keep track of elements. This way, if an item is updated or removed, only that item will be re-rendered instead of the entire list.",
      "html": "<p>Keys allow React to keep track of elements. This way, if an item is updated or removed, only that item will be re-rendered instead of the entire list.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Keys need to be unique to each sibling. But they can be duplicated globally.",
      "html": "<p>Keys need to be unique to each sibling. But they can be duplicated globally.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Generally, the key should be a unique ID assigned to each item. As a last resort, you can use the array index as a key.",
      "html": "<p>Generally, the key should be a unique ID assigned to each item. As a last resort, you can use the array index as a key.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-white",
          "language-jsx"
        ],
        "isNotranslate": false
      },
      "code": "function\n\nCar\n(\nprops\n)\n\n{\n\n\nreturn\n\n<\nli\n>\nI am a\n{\nprops\n.\nbrand\n}\n</\nli\n>\n;\n\n\n}\n\n\n\nfunction\n\nGarage\n(\n)\n\n{\n\n\nconst\ncars\n=\n\n[\n\n\n{\nid\n:\n\n1\n,\n\nbrand\n:\n\n'Ford'\n}\n,\n\n\n{\nid\n:\n\n2\n,\n\nbrand\n:\n\n'BMW'\n}\n,\n\n\n{\nid\n:\n\n3\n,\n\nbrand\n:\n\n'Audi'\n}\n\n\n]\n;\n\n\nreturn\n\n(\n\n\n<\n>\n\n\n<\nh1\n>\nWho lives in my garage?\n</\nh1\n>\n\n\n<\nul\n>\n\n\n{\ncars\n.\nmap\n(\n(\ncar\n)\n\n=>\n\n<\nCar\n\nkey\n=\n{\ncar\n.\nid\n}\n\nbrand\n=\n{\ncar\n.\nbrand\n}\n\n/>\n)\n}\n\n\n</\nul\n>\n\n\n</\n>\n\n\n)\n;\n\n\n}\n\n\n\nconst\nroot\n=\nReactDOM\n.\ncreateRoot\n(\ndocument\n.\ngetElementById\n(\n'root'\n)\n)\n;\n\nroot\n.\nrender\n(\n<\nGarage\n\n/>\n)\n;",
      "language": "html",
      "code_html": "<pre class=\"w3-white language-jsx\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword keyword-function\">function</span> <span class=\"token function\">Car</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">I am a </span><span class=\"token punctuation\">{</span> props<span class=\"token punctuation\">.</span>brand <span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-function\">function</span> <span class=\"token function\">Garage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-const\">const</span> cars <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">brand</span><span class=\"token operator\">:</span> <span class=\"token string\">'Ford'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">brand</span><span class=\"token operator\">:</span> <span class=\"token string\">'BMW'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">brand</span><span class=\"token operator\">:</span> <span class=\"token string\">'Audi'</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Who lives in my garage?</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>cars<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">car</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Car</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>car<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">brand</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>car<span class=\"token punctuation\">.</span>brand<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Garage</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>",
      "code_classes": [
        "w3-white",
        "language-jsx"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-white",
        "language-jsx"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Which statement is NOT correct:",
      "html": "<p>Which statement is NOT correct:</p>"
    },
    {
      "type": "page_quiz",
      "metadata": {
        "type": "quiz",
        "question": "Which statement is NOT correct:",
        "options": [
          {
            "value": "0",
            "text": "Keys must be unique to each sibling."
          },
          {
            "value": "1",
            "text": "Keys cannot be a number"
          },
          {
            "value": "2",
            "text": "Keys can be the array index"
          }
        ],
        "formAction": "exercise.asp?x=xrcise_lists1"
      },
      "quiz_type": "quiz",
      "question": "Which statement is NOT correct:",
      "options": [
        {
          "value": "0",
          "text": "Keys must be unique to each sibling."
        },
        {
          "value": "1",
          "text": "Keys cannot be a number"
        },
        {
          "value": "2",
          "text": "Keys can be the array index"
        }
      ],
      "form_action": "exercise.asp?x=xrcise_lists1",
      "html": "<form action=\"exercise.asp?x=xrcise_lists1\" method=\"post\" rel=\"opener\" target=\"_blank\"><div class=\"quizoption\"><input id=\"quizoption0\" name=\"quizoption\" type=\"radio\" value=\"0\"/><label for=\"quizoption0\">Keys must be unique to each sibling.</label></div><div class=\"quizoption\"><input id=\"quizoption1\" name=\"quizoption\" type=\"radio\" value=\"1\"/><label for=\"quizoption1\">Keys cannot be a number</label></div><div class=\"quizoption\"><input id=\"quizoption2\" name=\"quizoption\" type=\"radio\" value=\"2\"/><label for=\"quizoption2\">Keys can be the array index</label></div><br/><button class=\"ws-btn\" type=\"submit\">Submit Answer \u00bb</button></form>"
    }
  ]
}