{
  "id": "9d6ba0ae-214f-4793-af87-99ed2155b74c",
  "title": "KotlinArrays",
  "slug": "kotlinarrays",
  "metadata": {
    "description": "Learn about KotlinArrays with clear explanations and practical examples.",
    "keywords": [
      "kotlin",
      "cars",
      "array",
      "volvo",
      "element",
      "example",
      "arrayof",
      "ford",
      "mazda",
      "println",
      "elements"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Kotlin Basics"
    ],
    "estimated_time": 5,
    "category": "LearnKotlin",
    "subcategory": "Kotlin Arrays"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Kotlin\nArrays",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Kotlin Arrays\nArrays are used to store multiple values in a single variable, instead of \ncreating separate variables for each \nvalue.\nTo create an array, use the\narrayOf()\nfunction, and place the \nvalues in a comma-separated list inside it:\nval cars = arrayOf(\"Volvo\", \"BMW\", \"Ford\", \"Mazda\")\nAccess the Elements of an Array\nYou can access an array element by referring to the\nindex number\n, \ninside\nsquare brackets\n.\nIn this example, we access the value of the first element in cars:\nExample\nval cars = arrayOf(\"Volvo\", \"BMW\", \"Ford\", \"Mazda\")\nprintln(cars[0])\n// Outputs Volvo\n\nNote:\nJust like with Strings, Array indexes start with 0: [0] is the first element. [1] is the second \nelement, etc.\nChange an Array Element\nTo change the value of a specific element, refer to the index number:\nExample\ncars[0] = \"Opel\"\nExample\nval cars = arrayOf(\"Volvo\", \"BMW\", \"Ford\", \"Mazda\")\ncars[0] = \"Opel\"\nprintln(cars[0])\n// Now outputs Opel instead of Volvo\n\nArray Length / Size\nTo find out how many elements an array have, use the\nsize\nproperty:\nExample\nval cars = arrayOf(\"Volvo\", \"BMW\", \"Ford\", \"Mazda\")\nprintln(cars.size)\n// Outputs 4\n\nCheck if an Element Exists\nYou can use the\nin\noperator to check if an element exists in \nan array:\nExample\nval cars = arrayOf(\"Volvo\", \"BMW\", \"Ford\", \"Mazda\")\nif (\"Volvo\" in cars) {\n  println(\"It exists!\")\n} else {\n  println(\"It does not exist.\")\n}\n\nLoop Through an Array\nOften when you work with arrays, you need to loop through all of the \nelements.\nYou can loop through the array elements with the\nfor\nloop, which you will learn even more about in the \nThe following example outputs all elements in the\ncars\narray:\nExample\nval cars = arrayOf(\"Volvo\", \"BMW\", \"Ford\", \"Mazda\")\nfor (x in cars) {\n  println(x)\n}\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "val cars = arrayOf(\"Volvo\", \"BMW\", \"Ford\", \"Mazda\")\ncars[0] = \"Opel\"\nprintln(cars[0])\n// Now outputs Opel instead of Volvo",
      "language": "java",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "val cars = arrayOf(\"Volvo\", \"BMW\", \"Ford\", \"Mazda\")\n# TODO: Complete this line\nprintln(cars[0])\n// Now outputs Opel instead of Volvo",
      "solution": "val cars = arrayOf(\"Volvo\", \"BMW\", \"Ford\", \"Mazda\")\ncars[0] = \"Opel\"\nprintln(cars[0])\n// Now outputs Opel instead of Volvo"
    },
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "9b1256b2-a14a-4aad-90e6-f45966f5f709",
      "title": "Kotlin Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "632adbf9-16fc-424a-9cb6-dabbe17439bf",
      "title": "Kotlin Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "ec6fa149-0ac3-4c94-ad0b-d51c9609ad92",
      "title": "Kotlin Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Kotlin\nArrays\n\nKotlin Arrays\nArrays?",
      "options": [
        "Not a Kotlin\nArrays\n\nKotlin Arrays\nArrays.",
        "None of the above.",
        "None of the above.",
        "used to store multiple values in a single variable"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Kotlin\nArrays\n\nKotlin Arrays\nArrays is 'used to store multiple values in a single variable'."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers KotlinArrays concepts and techniques. You'll learn how to use KotlinArrays effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of KotlinArrays and how to apply it in your projects."
}