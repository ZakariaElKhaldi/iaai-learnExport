{
  "id": "8b026aa3-b91e-4bdc-9d4f-d16f6998181b",
  "title": "KotlinClass Functions",
  "slug": "kotlinclass-functions",
  "metadata": {
    "description": "Learn about KotlinClass Functions with clear explanations and practical examples.",
    "keywords": [
      "class",
      "function",
      "functions",
      "drive",
      "speed",
      "string",
      "parameters",
      "inside",
      "call",
      "println"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnKotlin",
    "subcategory": "Kotlin Class Functions"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Kotlin\nClass Functions",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Kotlin Class Functions\nYou can also use\nfunctions\ninside a class, to perfom certain actions:\nExample\nCreate a\ndrive()\nfunction inside the\nCar\nclass and call it:\nclass Car(var brand: String, var model: String, var year: Int) {\n  // Class function\n  fun drive() {\n    println(\"Wrooom!\")\n  }\n}\n\nfun main() {\n  val c1 = Car(\"Ford\", \"Mustang\", 1969)\n\n// Call the function\n  c1.drive()\n}\n\nTip:\nWhen a function is declared inside a class, it is known as a\nclass function\n, or\nmember function\n.\nNote:\nWhen an object of the class is created, it has access to all of the class functions.\nClass Function Parameters\nJust like with regular functions, you can pass parameters to a class function:\nExample\nCreate two functions:\ndrive()\nand\nspeed()\n, and pass parameters to the\nspeed()\nfunction:\nclass Car(var brand: String, var model: String, var year: Int) {\n  // Class function\n  fun drive() {\n    println(\"Wrooom!\")\n  }\n\n// Class function with parameters\n  fun speed(maxSpeed: Int) {\n    println(\"Max speed is: \" + maxSpeed)\n  }\n}\n\nfun main() {\n  val c1 = Car(\"Ford\", \"Mustang\", 1969)\n\n// Call the functions\n  c1.drive()\n  c1.speed(200)\n}\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "557fc38b-2ae1-4c17-9eeb-fbebb727edf5",
      "title": "Advanced C Techniques",
      "relationship": "next_topic"
    },
    {
      "id": "c4c6a1cb-c0da-4124-bd23-5e0c3efe5f48",
      "title": "C Project: Build a Real-World Application",
      "relationship": "suggested_next"
    },
    {
      "id": "3b86281c-11ba-4a05-8b43-5ec45ba2c1be",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is When a function?",
      "options": [
        "declared inside a class",
        "None of the above.",
        "None of the above.",
        "created"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of When a function is 'declared inside a class'."
    },
    {
      "question": "What is When an object of the class?",
      "options": [
        "created",
        "None of the above.",
        "declared inside a class",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of When an object of the class is 'created'."
    }
  ],
  "summary": "This tutorial covers KotlinClass Functions concepts and techniques. You'll learn how to use KotlinClass Functions effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of KotlinClass Functions and how to apply it in your projects."
}