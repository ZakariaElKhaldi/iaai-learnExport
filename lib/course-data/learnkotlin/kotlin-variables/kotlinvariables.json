{
  "id": "bbddbe5e-8adb-43c0-9a1f-c22bb031236c",
  "title": "KotlinVariables",
  "slug": "kotlinvariables",
  "metadata": {
    "description": "Learn about KotlinVariables with clear explanations and practical examples.",
    "keywords": [
      "name",
      "value",
      "example",
      "println",
      "variable",
      "variables",
      "john",
      "names",
      "birthyear",
      "kotlin"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Kotlin Basics"
    ],
    "estimated_time": 5,
    "category": "LearnKotlin",
    "subcategory": "Kotlin Variables"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Kotlin\nVariables\n\nKotlin Variables\nVariables are containers for storing data values",
      "content": ".\nTo create a variable, use\nvar\nor\nval\n, and assign a value to it with the equal sign (\n=\n):",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Syntax\nvar\nvariableName",
      "content": "=\nvalue\nval\nvariableName\n=\nvalue\nExample\nvar name = \"John\"\nval birthyear = 1975\n\nprintln(name)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Print the value of name\nprintln(birthyear)\u00a0\u00a0\u00a0\u00a0 // Print the value of birthyear\n\nThe difference between\nvar\nand\nval\nis that variables declared \nwith the\nvar\nkeyword\ncan be changed/modified\n, while\nval\nvariables\ncannot\n.\nVariable Type\nUnlike many other programming languages, variables in Kotlin do not need to be declared with a specified\ntype\n(like \"String\" for text or \"Int\" for numbers, if you are familiar with those).\nTo create a variable in Kotlin that should store text and another that should store a number, look at the following example:\nExample\nvar name = \"John\"\u00a0\u00a0\u00a0\u00a0\u00a0 // String (text)\nval birthyear = 1975\u00a0\u00a0 // Int (number)\n\nprintln(name)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Print the value of name\nprintln(birthyear)\u00a0\u00a0\u00a0\u00a0 // Print the value of birthyear\n\nKotlin is smart enough to understand that\n\"John\"\nis a\nString\n(text), and that\n1975\nis an\nInt\n(number) variable.\nHowever, it is possible to specify the type if you insist:\nExample\nvar name: String = \"John\" // String\nval birthyear: Int = 1975 // Int\n\nprintln(name)\nprintln(birthyear)\n\nYou can also declare a variable without assigning the value, and assign the \nvalue later.\nHowever\n, this is only possible when you specify the type:\nExample\nThis works fine:\nvar name: String\nname = \"John\"\nprintln(name)\n\nExample\nThis will generate an error:\nvar name\nname = \"John\"\nprintln(name)\n\nNote:\nYou will learn more about\nData Types in the \n.\nNotes on\nval\nWhen you create a variable with the\nval\nkeyword, the value\ncannot\nbe changed/reassigned.\nThe following example will generate an error:\nExample\nval name = \"John\"\nname = \"Robert\"\u00a0 // Error (Val cannot be reassigned)\nprintln(name)\n\nWhen using\nvar\n, you can change the value whenever you want:\nExample\nvar name = \"John\"\nname = \"Robert\"\nprintln(name)\n\nSo When To Use\nval\n?\nThe\nval\nkeyword is useful when you want a variable to always store the same value, like PI (3.14159...):\nExample\nval pi = 3.14159265359\nprintln(pi)\n\nDisplay Variables\nLike you have seen with the examples above, the\nprintln()\nmethod is often used to display variables.\nTo combine both text and a variable, use the\n+\ncharacter:\nExample\nval name = \"John\"\nprintln(\"Hello \" + name)\n\nYou can also use the\n+\ncharacter to add a variable to another variable:\nExample\nval firstName = \"John \"\nval lastName = \"Doe\"\nval fullName = firstName + lastName\nprintln(fullName)\n\nFor numeric values, the\n+\ncharacter works as \na mathematical operator:\nExample\nval x = 5\nval y = 6\nprintln(x + y) // Print the value of x + y\n\nFrom the example above, you can expect:\nx stores the value 5\ny stores the value 6\nThen we use the\nprintln()\nmethod to display the value of x + y, \n which is\n11\nVariable Names\nA variable can have a short name (like x and y) or more descriptive names (age, sum, totalVolume).\nThe general rule for Kotlin variables are:\nNames can contain letters, digits, underscores, and dollar signs\nNames should start with a letter\nNames can also begin with $ and _ (but we will not use it in this tutorial)\nNames are case sensitive (\"myVar\" and \"myvar\" are different variables)\nNames should start with a lowercase letter and it cannot contain whitespace\nReserved words (like Kotlin keywords, such as\nvar\nor\nString\n) cannot be used as names\ncamelCase variables\nYou might notice that we used\nfirstName\nand\nlastName\nas variable names in the example above, instead of firstname and lastname. This is called \"camelCase\", and it is considered as good practice as it makes it easier to read when you have a variable name with different words in it, for example \"myFavoriteFood\", \"rateActionMovies\" etc.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "0bbf7aef-4d19-45c2-a3d8-c451a7888621",
      "title": "Kotlin Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "cadc2c37-221e-4478-a974-d6431ec054fb",
      "title": "Kotlin Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "e05fbdcd-c294-4b84-977e-8c3efde6df8a",
      "title": "Kotlin Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Kotlin\nVariables\n\nKotlin Variables\nVariables?",
      "options": [
        "that variables declared \nwith the\nvar\nkeyword\ncan be changed/modified",
        "containers for storing data values",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Kotlin\nVariables\n\nKotlin Variables\nVariables is 'containers for storing data values'."
    },
    {
      "question": "What is Print the value of birthyear\n\nThe difference between\nvar\nand\nval?",
      "options": [
        "None of the above.",
        "None of the above.",
        "containers for storing data values",
        "that variables declared \nwith the\nvar\nkeyword\ncan be changed/modified"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Print the value of birthyear\n\nThe difference between\nvar\nand\nval is 'that variables declared \nwith the\nvar\nkeyword\ncan be changed/modified'."
    }
  ],
  "summary": "This tutorial covers KotlinVariables concepts and techniques. You'll learn how to use KotlinVariables effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of KotlinVariables and how to apply it in your projects."
}