{
  "id": "f1d89044-e303-4e6f-8979-51996853bec6",
  "title": "KotlinRanges",
  "slug": "kotlinranges",
  "metadata": {
    "description": "Learn about KotlinRanges with clear explanations and practical examples.",
    "keywords": [
      "nums",
      "println",
      "example",
      "ranges",
      "loop",
      "also",
      "value",
      "range",
      "exists",
      "continue"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Kotlin Basics"
    ],
    "estimated_time": 5,
    "category": "LearnKotlin",
    "subcategory": "Kotlin Ranges"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Kotlin\nRanges",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Kotlin Ranges\nWith the\nfor\nloop\n, you can also create\nranges\nof values with \"\n..\n\":\nExample\nPrint the whole alphabet:\nfor (chars in 'a'..'x') {\n  println(chars)\n}\n\nYou can also create ranges of numbers:\nExample\nfor (nums in 5..15) {\n  println(nums)\n}\n\nNote:\nThe first and last value is included in the range.\nCheck if a Value Exists\nYou can also use the\nin\noperator to check if a value exists in \na range:\nExample\nval nums = arrayOf(2, 4, 6, 8)\nif (2 in nums) {\n  println(\"It exists!\")\n} else {\n  println(\"It does not exist.\")\n}\n\nExample\nval cars = arrayOf(\"Volvo\", \"BMW\", \"Ford\", \"Mazda\")\nif (\"Volvo\" in cars) {\n  println(\"It exists!\")\n} else {\n  println(\"It does not exist.\")\n}\n\nBreak or Continue a Range\nYou can also use the\nbreak\nand\ncontinue\nkeywords in a range/\nfor\nloop:\nExample\nStop the loop when\nnums\nis equal to\n10\n:\nfor (nums in 5..15) {\n  if (nums == 10) {\n    break\n  }\n  println(nums)\n}\n\nExample\nSkip the value of 10 in the loop, and continue with the \nfor (nums in 5..15) {\n  if (nums == 10) {\n    continue\n  }\n  println(nums)\n}\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "de23c43a-a1b6-4b80-899f-557a40d171f7",
      "title": "Kotlin Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "7b1246fb-49cb-423f-9317-c6b66609b6da",
      "title": "Kotlin Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "e63d6f9b-e390-4263-a27b-66270b130ce8",
      "title": "Kotlin Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The first and last value?",
      "options": [
        "equal to\n10\n:\nfor (nums in 5",
        "None of the above.",
        "None of the above.",
        "included in the range"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of The first and last value is 'included in the range'."
    },
    {
      "question": "What is Example\nStop the loop when\nnums?",
      "options": [
        "equal to\n10\n:\nfor (nums in 5",
        "None of the above.",
        "included in the range",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of Example\nStop the loop when\nnums is 'equal to\n10\n:\nfor (nums in 5'."
    }
  ],
  "summary": "This tutorial covers KotlinRanges concepts and techniques. You'll learn how to use KotlinRanges effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of KotlinRanges and how to apply it in your projects."
}