{
  "id": "6d083300-10d2-435f-bee3-53529d7e543a",
  "title": "KotlinComments",
  "slug": "kotlincomments",
  "metadata": {
    "description": "Learn about KotlinComments with clear explanations and practical examples.",
    "keywords": [
      "line",
      "comments",
      "code",
      "example",
      "comment",
      "kotlin",
      "single",
      "hello",
      "world",
      "uses"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnKotlin",
    "subcategory": "Kotlin Comments"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Kotlin\nComments",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Kotlin Comments\nComments can be used to explain Kotlin code, and to make it more readable. It can also be used to \nprevent execution when testing alternative code.\nSingle-line Comments\nSingle-line comments starts with two forward slashes (\n//\n).\nAny text between\n//\nand the end of the line \nis ignored by Kotlin (will not be executed).\nThis example uses a single-line comment before a line of code:\nExample\n// This is a comment\nprintln(\"Hello World\")\n\nThis example uses a single-line comment at the end of a line of code:\nExample\nprintln(\"Hello World\")\u00a0 // This is a comment\n\nMulti-line Comments\nMulti-line comments start with\n/*\nand ends with\n*/\n.\nAny text between\n/*\nand\n*/\nwill be ignored by Kotlin.\nThis example uses a multi-line comment (a comment block) to explain the code:\nExample\n/* The code below will print the words Hello World\nto the screen, and it is amazing */\nprintln(\"Hello World\")\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "d45d4016-56b2-42ec-90be-bfa7f8316fe3",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "98979417-ec52-424d-8deb-37cf79855910",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "50af9f35-4c32-49a4-9b9e-63036c929e71",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is and the end of the line?",
      "options": [
        "None of the above.",
        "ignored by Kotlin (will not be executed)",
        "a comment\nprintln(\"Hello World\")\n\nThis example uses a single-line comment at the end of a line of code:\nExample\nprintln(\"Hello World\")\u00a0 // This is a comment\n\nMulti-line Comments\nMulti-line comments start with\n/*\nand ends with\n*/",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of and the end of the line is 'ignored by Kotlin (will not be executed)'."
    },
    {
      "question": "What is This?",
      "options": [
        "a comment\nprintln(\"Hello World\")\n\nThis example uses a single-line comment at the end of a line of code:\nExample\nprintln(\"Hello World\")\u00a0 // This is a comment\n\nMulti-line Comments\nMulti-line comments start with\n/*\nand ends with\n*/",
        "None of the above.",
        "ignored by Kotlin (will not be executed)",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of This is 'a comment\nprintln(\"Hello World\")\n\nThis example uses a single-line comment at the end of a line of code:\nExample\nprintln(\"Hello World\")\u00a0 // This is a comment\n\nMulti-line Comments\nMulti-line comments start with\n/*\nand ends with\n*/'."
    }
  ],
  "summary": "This tutorial covers KotlinComments concepts and techniques. You'll learn how to use KotlinComments effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of KotlinComments and how to apply it in your projects."
}