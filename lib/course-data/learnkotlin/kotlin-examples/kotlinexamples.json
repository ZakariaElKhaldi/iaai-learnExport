{
  "id": "6e7d952f-754c-428b-84d4-de66fbf504e5",
  "title": "KotlinExamples",
  "slug": "kotlinexamples",
  "metadata": {
    "description": "Learn about KotlinExamples with clear explanations and practical examples.",
    "keywords": [
      "create",
      "kotlin",
      "operator",
      "explained",
      "type",
      "variable",
      "loop",
      "function",
      "string",
      "statement"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "Kotlin Basics"
    ],
    "estimated_time": 5,
    "category": "LearnKotlin",
    "subcategory": "Kotlin Examples"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Kotlin\nExamples",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Kotlin Syntax and Output\nOutput some text\nOutput text on new lines\nDo a simple calculation\nOutput some text with the print() function\nOutput Explained\nKotlin Comments\nSingle-line comment before a line of code\nSingle-line comment at the end of a line of code\nMulti-line comment\nComments Explained\nKotlin Variables\nCreate two variables\nCreate two variables and specify the data type\nDeclare a variable without assigning the value\nCreate variable that cannot be changed/reassigned\nCombine both text and a variable\nAdd a variable to another variable\nVariables Explained\nKotlin Data Types\nCreate different variables of different types\nCreate different variables of different types explicitly\nCreate a Byte type variable\nCreate a Short type variable\nCreate an Int type variable\nCreate a Long type variable\nCreate a Float type variable\nCreate a Double type variable\nCreate a Boolean type variable\nCreate a Char type variable\nCreate a String type variable\nType conversion - Convert a data type to anoter type\nData Types Explained\nKotlin Operators\nAddition operator\nSubtraction operator\nMultiplication operator\nDivision operator\nModulus operator\nIncrement operator\nDecrement operator\nAssignment operator\nEqual operator\nNot equal operator\nGreater than operator\nLess than operator\nGreater than or equal to operator\nLess than or equal to operator\nLogical and operator\nLogical or operator\nLogical not operator\nOperators Explained\nKotlin Strings\nCreate a string\nCreate a string and specify the type\nAccess a string\nFind the length of a string\nCompare two strings\nFind a string in a string\nConcatenate/merge two strings\nConcatenate/merge two strings with the plus() function\nUse quotes inside a string\nStrings Explained\nKotlin Booleans\nCreate a boolean\nCreate a a boolean and specify the type\nCompare two values\nBooleans Explained\nKotlin If...Else\nThe if statement\nThe else statement\nThe else if statement\nIf..else expression\nShort hand if..else\nIf...Else Explained\nKotlin When\nThe when expression\nWhen Explained\nKotlin While Loop\nLoop through a block of code using a while loop\nLoop through a block of code using a do/while loop\nWhile Loop Explained\nKotlin While Loop\nJump out of a loop with the break statement\nSkip a value in a loop with the continue statement\nBreak/continue Explained\nKotlin Arrays\nCreate and access an array\nChange an array element\nFind the length/size of an array\nCheck if an element exists in an array\nLoop through an array\nArrays Explained\nKotlin For Loops\nLoop through an array of strings\nLoop through an array of integers\nFor loop Explained\nKotlin Ranges\nCreate a range of characters\nCreate a range of numbers\nCheck if a value exists in a range\nUsing the break statement in a range\nUsing the continue statement in a range\nRanges Explained\nKotlin Functions\nCreate a function and call it\nCall a function multiple times\nCreate a function with parameters\nUsing the return keyword in a function\nShort hand syntax for return values\nFunctions Explained\nKotlin Classes\nCreate a class and an object of that class\nCreate multiple objects of one class\nCreate a constructor\nCreate a class function\nCreate a class function with parameters\nCreate a class that should inherit properties of a parent class (inheritance)\nClasses Explained\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "42be58e4-ed7a-48b9-8152-01cc5f4a4acd",
      "title": "Kotlin Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "53b61ba2-7534-4126-bc6e-a320947a0f6b",
      "title": "Kotlin Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "84de8d53-1666-4fe8-a837-078397c77207",
      "title": "Kotlin Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this c feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers KotlinExamples concepts and techniques. You'll learn how to use KotlinExamples effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of KotlinExamples and how to apply it in your projects."
}