{
  "id": "83c37130-153f-4bab-91d4-20073b54e4a2",
  "title": "KotlinBreak and Continue",
  "slug": "kotlinbreak-and-continue",
  "metadata": {
    "description": "Learn about KotlinBreak and Continue with clear explanations and practical examples.",
    "keywords": [
      "break",
      "continue",
      "example",
      "kotlin",
      "loop",
      "statement",
      "println",
      "used",
      "jump",
      "jumps"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnKotlin",
    "subcategory": "Kotlin Break/Continue"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Kotlin\nBreak and Continue",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Kotlin Break\nThe\nbreak\nstatement is used to jump out of a\nloop\n.\nThis example jumps out of the loop when i is equal to 4:\nExample\nvar i = 0\nwhile (i < 10) {\n  println(i)\n  i++\n  if (i == 4) {\n    break\n  }\n}\n\nKotlin Continue\nThe\ncontinue\nstatement breaks one iteration (in the loop), if a specified condition occurs, and continues with the \nThis example skips the value of 4:\nExample\nvar i = 0\nwhile (i < 10) {\n  if (i == 4) {\n    i++\n    continue\n  }\n  println(i)\n  i++\n}\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "7309a202-762b-475a-891f-f57b35e2c370",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "acebbd4e-2abe-4397-adf9-be475b4ec69f",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "97a90453-428f-4ae2-ab71-52391b03c432",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Kotlin\nBreak and Continue\n\nKotlin Break\nThe\nbreak\nstatement?",
      "options": [
        "None of the above.",
        "equal to 4:\nExample\nvar i = 0\nwhile (i < 10) {\n  println(i)\n  i++\n  if (i == 4) {\n    break\n  }\n}\n\nKotlin Continue\nThe\ncontinue\nstatement breaks one iteration (in the loop)",
        "None of the above.",
        "used to jump out of a\nloop"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Kotlin\nBreak and Continue\n\nKotlin Break\nThe\nbreak\nstatement is 'used to jump out of a\nloop'."
    },
    {
      "question": "What is This example jumps out of the loop when i?",
      "options": [
        "None of the above.",
        "used to jump out of a\nloop",
        "equal to 4:\nExample\nvar i = 0\nwhile (i < 10) {\n  println(i)\n  i++\n  if (i == 4) {\n    break\n  }\n}\n\nKotlin Continue\nThe\ncontinue\nstatement breaks one iteration (in the loop)",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of This example jumps out of the loop when i is 'equal to 4:\nExample\nvar i = 0\nwhile (i < 10) {\n  println(i)\n  i++\n  if (i == 4) {\n    break\n  }\n}\n\nKotlin Continue\nThe\ncontinue\nstatement breaks one iteration (in the loop)'."
    }
  ],
  "summary": "This tutorial covers KotlinBreak and Continue concepts and techniques. You'll learn how to use KotlinBreak and Continue effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of KotlinBreak and Continue and how to apply it in your projects."
}