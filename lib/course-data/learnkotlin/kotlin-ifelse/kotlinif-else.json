{
  "id": "f4959ab1-5693-4ac6-b64e-7fcce8653997",
  "title": "KotlinIf ... Else",
  "slug": "kotlinif-else",
  "metadata": {
    "description": "Learn about KotlinIf ... Else with clear explanations and practical examples.",
    "keywords": [
      "else",
      "condition",
      "example",
      "good",
      "time",
      "false",
      "code",
      "executed",
      "kotlin",
      "greater"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Kotlin Basics"
    ],
    "estimated_time": 5,
    "category": "LearnKotlin",
    "subcategory": "Kotlin If...Else"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Kotlin\nIf ... Else",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Kotlin Conditions and If..Else\nKotlin supports the usual logical conditions from mathematics:\nLess than:\na < b\nLess than or equal to:\na <= b\nGreater than:\na > b\nGreater than or equal to:\na >= b\nEqual to\na == b\nNot Equal to:\na != b\nYou can use these conditions to perform different actions for different decisions.\nKotlin has the following conditionals:\nUse\nif\nto specify a block of code to be executed, if a specified condition is true\nUse\nelse\nto specify a block of code to be executed, if the same condition is false\nUse\nelse if\nto specify a new condition to test, if the first condition is false\nUse\nwhen\nto specify many alternative blocks of code to be executed\nNote:\nUnlike Java,\nif..else\ncan be used as a\nstatement\nor as an\nexpression\n(to assign a \nvalue to a variable) in Kotlin. See \nan example at the bottom of the page to better understand it.\nKotlin if\nUse\nif\nto specify a block of code to be executed if a condition is\ntrue\n.\nSyntax\nif (\ncondition\n) {\n// block of code to be executed if the condition is true\n}\nNote that\nif\nis in lowercase letters. Uppercase letters (If or IF) will generate an error.\nIn the example below, we test two values to find out if 20 is greater than \n18. If the condition is\ntrue\n, print some text:\nExample\nif (20 > 18) {\n\u00a0 println(\"20 is greater than 18\")\n}\n\nWe can also test variables:\nExample\nval x = 20\nval y = 18\nif (x > y) {\n  println(\"x is greater than y\")\n}\n\nExample explained\nIn the example above we use two variables,\nx\nand\ny\n, \nto test whether x is greater than y \n(using the\n>\noperator). As x is 20, and y is 18, and we know that 20 is greater than 18, we print to the screen that \"x is greater than y\".\nKotlin else\nUse\nelse\nto specify a block of code to be executed if the condition is\nfalse\n.\nSyntax\nif (\ncondition\n) {\n// block of code to be executed if the condition is true\n} else {\n// block of code to be executed if the condition is false\n}\nExample\nval time = 20\nif (time < 18) {\n  println(\"Good day.\")\n} else {\n  println(\"Good evening.\")\n}\n// Outputs \"Good evening.\"\n\nExample explained\nIn the example above, time (20) is greater than 18, so the condition is\nfalse\n, \nso we move on to the\nelse\ncondition and print to the screen \"Good \nevening\". If the time was less than 18, the program would print \"Good day\".\nKotlin else if\nUse\nelse if\nto specify a new condition if the first condition is\nfalse\n.\nSyntax\nif (\ncondition1\n) {\n// block of code to be executed if condition1 is true\n} else if (\ncondition2\n) {\n// block of code to be executed if the condition1 is false and condition2 is true\n} else {\n// block of code to be executed if the condition1 is false and condition2 is false\n}\nExample\nval time = 22\nif (time < 10) {\n  println(\"Good morning.\")\n} else if (time < 20) {\n  println(\"Good day.\")\n} else {\n  println(\"Good evening.\")\n}\n// Outputs \"Good evening.\"\n\nExample explained\nIn the example above, time (22) is greater than 10, so the\nfirst condition\nis\nfalse\n. The \nelse if\nstatement, is also\nfalse\n, so we move on to the\nelse\ncondition since\ncondition1\nand\ncondition2\nis both\nfalse\n- and print to the screen \"Good \nevening\".\nHowever, if the time was 14, our program would print \"Good day.\"\nKotlin If..Else Expressions\nIn Kotlin, you can also use\nif..else\nstatements as expressions \n(assign a value to a variable and return it):\nExample\nval time = 20\nval greeting = if (time < 18) {\n  \"Good day.\"\n} else {\n  \"Good evening.\"\n}\nprintln(greeting)\n\nWhen using\nif\nas an expression, you must also include\nelse\n(required).\nNote:\nYou can ommit the curly braces\n{}\nwhen\nif\nhas only one statement:\nExample\nfun main() {\n  val time = 20\n  val greeting = if (time < 18) \"Good day.\" else \"Good evening.\"\n  println(greeting)\n}\n\nTip:\nThis example is similar to the \"ternary operator\" (short hand if...else) in Java.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise",
      "description": "Create an example that applies the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Add your code here",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "10768f1a-d424-4474-b478-bcf7407bb1b6",
      "title": "Kotlin Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "4f76d04c-9f6a-49fb-a30c-5e1326de6818",
      "title": "Kotlin Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "7d7cc3a1-84eb-4870-8c64-4f7daf29178f",
      "title": "Kotlin Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is if a specified condition?",
      "options": [
        "None of the above.",
        "true\nUse\nelse\nto specify a block of code to be executed",
        "true",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of if a specified condition is 'true\nUse\nelse\nto specify a block of code to be executed'."
    },
    {
      "question": "What is Kotlin if\nUse\nif\nto specify a block of code to be executed if a condition?",
      "options": [
        "true",
        "None of the above.",
        "None of the above.",
        "true\nUse\nelse\nto specify a block of code to be executed"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of Kotlin if\nUse\nif\nto specify a block of code to be executed if a condition is 'true'."
    }
  ],
  "summary": "This tutorial covers KotlinIf ... Else concepts and techniques. You'll learn how to use KotlinIf ... Else effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of KotlinIf ... Else and how to apply it in your projects."
}