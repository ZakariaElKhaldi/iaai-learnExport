{
  "title": "Bash Loops",
  "url": "https://www.w3schools.com/bash/bash_loops.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Bash Loops",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Using Loops in Bash",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This section covers the use of loops in Bash scripting, including for, while, and until loops.",
      "html": "<p>This section covers the use of loops in Bash scripting, including for, while, and until loops.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "For Loops",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "For loops allow you to iterate over a list of items or a range of numbers. They are useful for repeating tasks a specific number of times.",
      "html": "<p>For loops allow you to iterate over a list of items or a range of numbers. They are useful for repeating tasks a specific number of times.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The for keyword is followed by a variable name, a range of values, and a do keyword, which marks the start of the loop block.",
      "html": "<p>The <code class=\"language-bash\"><span class=\"token keyword\">for</span></code> keyword is followed by a variable name, a range of values, and a <code class=\"language-bash\"><span class=\"token keyword\">do</span></code> keyword, which marks the start of the loop block.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "language-bash"
        ],
        "isNotranslate": false
      },
      "code": "# For loop example\n\n\nfor\n\ni\n\nin\n\n{\n1\n..\n5\n}\n;\n\ndo\n\n\necho\n\n\"Iteration\n$i\n\"\n\n\ndone",
      "language": "php",
      "code_html": "<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># For loop example</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Iteration <span class=\"token variable\">$i</span>\"</span>\n<span class=\"token keyword\">done</span></code></pre>",
      "code_classes": [
        "language-bash"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "language-bash"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "While Loops",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "While loops execute a block of code as long as a specified condition is true.",
      "html": "<p>While loops execute a block of code as long as a specified condition is true.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "They are useful for tasks that need to repeat until a certain condition changes.",
      "html": "<p>They are useful for tasks that need to repeat until a certain condition changes.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The condition is enclosed in square brackets [ ] , and the loop ends with done .",
      "html": "<p>The condition is enclosed in square brackets <code class=\"language-bash\"><span class=\"token punctuation\">[</span> <span class=\"token punctuation\">]</span></code>, and the loop ends with <code class=\"language-bash\"><span class=\"token keyword\">done</span></code>.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "language-bash"
        ],
        "isNotranslate": false
      },
      "code": "# While loop example\n\n\ncount\n=\n1\n\n\nwhile\n\n[\n\n$count\n-le\n5\n\n]\n;\n\ndo\n\n\necho\n\n\"Count is\n$count\n\"\n\n\n((\ncount\n++\n))\n\n\ndone",
      "language": "php",
      "code_html": "<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># While loop example</span>\n<span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$count</span> -le <span class=\"token number\">5</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Count is <span class=\"token variable\">$count</span>\"</span>\n  <span class=\"token variable\"><span class=\"token punctuation\">((</span>count<span class=\"token operator\">++</span><span class=\"token punctuation\">))</span></span>\n<span class=\"token keyword\">done</span></code></pre>",
      "code_classes": [
        "language-bash"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "language-bash"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Until Loops",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Until loops are similar to while loops, but they execute until a specified condition becomes true.",
      "html": "<p>Until loops are similar to while loops, but they execute until a specified condition becomes true.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The condition is enclosed in square brackets [ ] , and the loop ends with done .",
      "html": "<p>The condition is enclosed in square brackets <code class=\"language-bash\"><span class=\"token punctuation\">[</span> <span class=\"token punctuation\">]</span></code>, and the loop ends with <code class=\"language-bash\"><span class=\"token keyword\">done</span></code>.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "language-bash"
        ],
        "isNotranslate": false
      },
      "code": "# Until loop example\n\n\ncount\n=\n1\n\n\nuntil\n\n[\n\n$count\n-gt\n5\n\n]\n;\n\ndo\n\n\necho\n\n\"Count is\n$count\n\"\n\n\n((\ncount\n++\n))\n\n\ndone",
      "language": "php",
      "code_html": "<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Until loop example</span>\n<span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">until</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$count</span> -gt <span class=\"token number\">5</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Count is <span class=\"token variable\">$count</span>\"</span>\n  <span class=\"token variable\"><span class=\"token punctuation\">((</span>count<span class=\"token operator\">++</span><span class=\"token punctuation\">))</span></span>\n<span class=\"token keyword\">done</span></code></pre>",
      "code_classes": [
        "language-bash"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "language-bash"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Break and Continue",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Break and continue statements are used to control loop execution. break exits the loop, while continue skips to the next iteration.",
      "html": "<p>Break and continue statements are used to control loop execution. <code class=\"language-bash\"><span class=\"token builtin class-name\">break</span></code> exits the loop, while <code class=\"language-bash\"><span class=\"token builtin class-name\">continue</span></code> skips to the next iteration.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "These statements are typically used inside conditional blocks to alter the flow of the loop.",
      "html": "<p>These statements are typically used inside conditional blocks to alter the flow of the loop.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "language-bash"
        ],
        "isNotranslate": false
      },
      "code": "# Break and continue example\n\n\nfor\n\ni\n\nin\n\n{\n1\n..\n5\n}\n;\n\ndo\n\n\nif\n\n[\n\n$i\n-eq\n3\n\n]\n;\n\nthen\n\n\ncontinue\n\n\nfi\n\n\necho\n\n\"Number\n$i\n\"\n\n\nif\n\n[\n\n$i\n-eq\n4\n\n]\n;\n\nthen\n\n\nbreak\n\n\nfi\n\n\ndone",
      "language": "php",
      "code_html": "<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Break and continue example</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$i</span> -eq <span class=\"token number\">3</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">continue</span>\n  <span class=\"token keyword\">fi</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Number <span class=\"token variable\">$i</span>\"</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$i</span> -eq <span class=\"token number\">4</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">break</span>\n  <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">done</span></code></pre>",
      "code_classes": [
        "language-bash"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "language-bash"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Nested Loops",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Nested loops allow you to place one loop inside another, enabling more complex iteration patterns.",
      "html": "<p>Nested loops allow you to place one loop inside another, enabling more complex iteration patterns.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Each loop must be closed with its own done .",
      "html": "<p>Each loop must be closed with its own <code class=\"language-bash\"><span class=\"token keyword\">done</span></code>.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "language-bash"
        ],
        "isNotranslate": false
      },
      "code": "# Nested loops example\n\n\nfor\n\ni\n\nin\n\n{\n1\n..\n3\n}\n;\n\ndo\n\n\nfor\n\nj\n\nin\n\n{\n1\n..\n2\n}\n;\n\ndo\n\n\necho\n\n\"Outer loop\n$i\n, Inner loop\n$j\n\"\n\n\ndone\n\n\ndone",
      "language": "php",
      "code_html": "<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Nested loops example</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n  <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">j</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Outer loop <span class=\"token variable\">$i</span>, Inner loop <span class=\"token variable\">$j</span>\"</span>\n  <span class=\"token keyword\">done</span>\n<span class=\"token keyword\">done</span></code></pre>",
      "code_classes": [
        "language-bash"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "language-bash"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    }
  ]
}