{
  "title": "Bash Functions",
  "url": "https://www.w3schools.com/bash/bash_functions.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Bash Functions",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Defining Functions",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To define a function in Bash, use the following syntax. The function name is followed by parentheses, and the function body is enclosed in curly braces:",
      "html": "<p>To define a function in Bash, use the following syntax. The function name is followed by parentheses, and the function body is enclosed in curly braces:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "language-bash"
        ],
        "isNotranslate": false
      },
      "code": "my_function\n(\n)\n\n{\n\n\necho\n\n\"Hello, World!\"\n\n\n}",
      "language": "javascript",
      "code_html": "<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function-name function\">my_function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Hello, World!\"</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "code_classes": [
        "language-bash"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "language-bash"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It's a good practice to use descriptive names for functions.",
      "html": "<p class=\"ws-note\">It's a good practice to use descriptive names for functions.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Calling Functions",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In Bash, execute (or call) a function by using its name.",
      "html": "<p>In Bash, execute (or call) a function by using its name.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Functions can be called multiple times, which helps in reusing code:",
      "html": "<p>Functions can be called multiple times, which helps in reusing code:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "language-bash"
        ],
        "isNotranslate": false
      },
      "code": "my_function",
      "language": "javascript",
      "code_html": "<pre class=\"language-bash\"><code class=\"language-bash\">my_function</code></pre>",
      "code_classes": [
        "language-bash"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "language-bash"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Advanced Function Features",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Functions can accept arguments, return values, and use local variables. Here's an example of a function that takes an argument and uses a local variable:",
      "html": "<p>Functions can accept arguments, return values, and use local variables. Here's an example of a function that takes an argument and uses a local variable:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "language-bash"
        ],
        "isNotranslate": false
      },
      "code": "greet\n(\n)\n\n{\n\n\nlocal\n\nname\n=\n$1\n\n\necho\n\n\"Hello,\n$name\n!\"\n\n\n}\n\ngreet\n\"Alice\"",
      "language": "php",
      "code_html": "<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function-name function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin class-name\">local</span> <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token variable\">$1</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Hello, <span class=\"token variable\">$name</span>!\"</span>\n<span class=\"token punctuation\">}</span>\ngreet <span class=\"token string\">\"Alice\"</span></code></pre>",
      "code_classes": [
        "language-bash"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "language-bash"
      ],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can also return values from functions using echo or the return statement:",
      "html": "<p>You can also return values from functions using <code>echo</code> or the <code>return</code> statement:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "language-bash"
        ],
        "isNotranslate": false
      },
      "code": "add\n(\n)\n\n{\n\n\nlocal\n\nsum\n=\n$((\n$\n1\n\n+\n$\n2\n))\n\n\necho\n\n$sum\n\n\n}\n\n\nresult\n=\n$(\nadd\n\n5\n\n3\n)\n\n\necho\n\n\"The sum is\n$result\n\"",
      "language": "php",
      "code_html": "<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function-name function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin class-name\">local</span> <span class=\"token assign-left variable\">sum</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$((</span>$<span class=\"token number\">1</span> <span class=\"token operator\">+</span> $<span class=\"token number\">2</span><span class=\"token variable\">))</span></span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$sum</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token assign-left variable\">result</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">add</span> <span class=\"token number\">5</span> <span class=\"token number\">3</span><span class=\"token variable\">)</span></span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"The sum is <span class=\"token variable\">$result</span>\"</span></code></pre>",
      "code_classes": [
        "language-bash"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "language-bash"
      ],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise ? What is this? Test your skills by answering a few questions about the topics of this page",
      "level": "h2"
    }
  ]
}