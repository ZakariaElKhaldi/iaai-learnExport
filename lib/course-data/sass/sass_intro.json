{
  "title": "Sass Introduction",
  "url": "https://www.w3schools.com/sass/sass_intro.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Sass Introduction",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "What You Should Already Know",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Before you continue you should have a basic understanding of the following:",
      "html": "<p>Before you continue you should have a basic understanding of the following:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Home page",
          "href": "https://www.w3schools.com/default.asp",
          "title": ""
        }
      ],
      "text": "If you want to study these subjects first, find the tutorials on our Home page .",
      "html": "<p>If you want to study these subjects first, find the tutorials on our\n<a href=\"/default.asp\">Home page</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "What is Sass?",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Why Use Sass?",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Stylesheets are getting larger, more complex, and harder to maintain. This is where a CSS pre-processor can help.",
      "html": "<p>Stylesheets are getting larger, more complex, \nand harder to maintain. This is where a CSS pre-processor can help.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Sass lets you use features that do not exist in CSS, like variables, nested rules, mixins, imports, inheritance, built-in functions, and other stuff.",
      "html": "<p>Sass lets \nyou use features that do not exist in CSS, like variables, nested rules, mixins, \nimports, \ninheritance, built-in functions, and other stuff.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "A Simple Example why Sass is Useful",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Let's say we have a website with three main colors:",
      "html": "<p>Let's say we have a website with three main colors:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "#a2b9bc",
      "html": "<p>#a2b9bc</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "#b2ad7f",
      "html": "<p>#b2ad7f</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "#878f99",
      "html": "<p>#878f99</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "So, how many times do you need to type those HEX values? A LOT of times. And what about variations of the same colors?",
      "html": "<p>So, how many times do you need to type those HEX values? A LOT of times. And \nwhat about variations of the same colors? </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Instead of typing the above values a lot of times, you can use Sass and write this:",
      "html": "<p>Instead of typing the above values a lot of times, you can use Sass and write this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  /* define variables for the primary colors */$primary_1: #a2b9bc;\n  $primary_2: #b2ad7f;$primary_3: \n  #878f99;/* \n  use the variables */.main-header\n{\u00a0 background-color: $primary_1;}.menu-left\n{\u00a0 background-color: $primary_2;}.menu-right\n{\u00a0 background-color: $primary_3;} ",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "/* define variables for the primary colors */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "/* \n  use the variables */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0 background-color: $primary_1;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": $primary_1;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0 background-color: $primary_2;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": $primary_2;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0 background-color: $primary_3;",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": $primary_3;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "cssHigh"
        ],
        "isNotranslate": true
      },
      "code": "/* define variables for the primary colors */$primary_1: #a2b9bc;\n$primary_2: #b2ad7f;$primary_3:\n#878f99;/*\nuse the variables */.main-header\n{\u00a0 background-color: $primary_1;}.menu-left\n{\u00a0 background-color: $primary_2;}.menu-right\n{\u00a0 background-color: $primary_3;}",
      "syntax_highlighting": [
        {
          "text": "\n/* define variables for the primary colors */$primary_1: #a2b9bc;\n  $primary_2: #b2ad7f;$primary_3: \n  #878f99;/* \n  use the variables */.main-header\n{\u00a0 background-color: $primary_1;}.menu-left\n{\u00a0 background-color: $primary_2;}.menu-right\n{\u00a0 background-color: $primary_3;} ",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "/* define variables for the primary colors */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "/* \n  use the variables */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0 background-color: $primary_1;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": $primary_1;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0 background-color: $primary_2;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": $primary_2;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0 background-color: $primary_3;",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": $primary_3;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate cssHigh\"><span class=\"cssselectorcolor\" style=\"color:#905\">\n<span class=\"commentcolor\" style=\"color:slategray\">/* define variables for the primary colors */</span><br/>$primary_1: #a2b9bc;<br/>\n  $primary_2: #b2ad7f;<br/>$primary_3: \n  #878f99;<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">/* \n  use the variables */</span><br/>.main-header\n<span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0 background-color<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> $primary_1<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span><br/><br/>.menu-left\n<span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0 background-color<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> $primary_2<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span><br/><br/>.menu-right\n<span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0 background-color<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> $primary_3<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span><br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span><br/> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  /* define variables for the primary colors */$primary_1: #a2b9bc;\n  $primary_2: #b2ad7f;$primary_3: \n  #878f99;/* \n  use the variables */.main-header\n{\u00a0 background-color: $primary_1;}.menu-left\n{\u00a0 background-color: $primary_2;}.menu-right\n{\u00a0 background-color: $primary_3;} ",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "/* define variables for the primary colors */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "/* \n  use the variables */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0 background-color: $primary_1;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": $primary_1;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0 background-color: $primary_2;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": $primary_2;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0 background-color: $primary_3;",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": $primary_3;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "So, when using Sass, and the primary color changes, you only need to change it in one place.",
      "html": "<p>So, when using Sass, and the primary color changes, you only need to change \nit in one place.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "How Does Sass Work?",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A browser does not understand Sass code. Therefore, you will need a Sass pre-processor to convert Sass code into standard CSS.",
      "html": "<p>A browser does not understand Sass code. Therefore, you will need a Sass \npre-processor to convert Sass code into standard CSS.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This process is called transpiling. So, you need to give a transpiler (some kind of program) some Sass code and then get some CSS code back.",
      "html": "<p>This process is called transpiling. So, you need to give a transpiler \n(some kind of program) some Sass code and then get some CSS code back.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Tip: Transpiling is a term for taking a source code written in one language and transform/translate it into another language.",
      "html": "<p><strong>Tip:</strong> Transpiling is a term for taking a source code written in one language \nand transform/translate it into another language.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Sass File Type",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Sass files has the \".scss\" file extension.",
      "html": "<p>Sass files has the \".scss\" file extension. </p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Sass Comments",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Sass supports standard CSS comments /* comment */ , and in addition it supports inline comments // comment :",
      "html": "<p>Sass supports standard CSS comments <code>/* comment */</code>, \nand in addition it supports inline comments <code>// comment</code>:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "\n  /* define primary colors */$primary_1: #a2b9bc;\n  $primary_2: #b2ad7f;/* \n  use the variables */.main-header\n{\u00a0 background-color: $primary_1; // here you can put an inline comment} ",
            "color": "rgb(153, 0, 85)",
            "class": "cssselectorcolor"
          },
          {
            "text": "/* define primary colors */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "/* \n  use the variables */",
            "color": "rgb(112, 128, 144)",
            "class": "commentcolor"
          },
          {
            "text": "{",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "\u00a0 background-color: $primary_1; // here you can put an inline comment",
            "color": "rgb(215, 58, 73)",
            "class": "csspropertycolor"
          },
          {
            "text": ": $primary_1;",
            "color": "rgb(0, 92, 197)",
            "class": "csspropertyvaluecolor"
          },
          {
            "text": ":",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": ";",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          },
          {
            "text": "}",
            "color": "rgb(153, 153, 153)",
            "class": "cssdelimitercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "cssHigh"
        ],
        "isNotranslate": true
      },
      "code": "/* define primary colors */$primary_1: #a2b9bc;\n$primary_2: #b2ad7f;/*\nuse the variables */.main-header\n{\u00a0 background-color: $primary_1; // here you can put an inline comment}",
      "syntax_highlighting": [
        {
          "text": "\n/* define primary colors */$primary_1: #a2b9bc;\n  $primary_2: #b2ad7f;/* \n  use the variables */.main-header\n{\u00a0 background-color: $primary_1; // here you can put an inline comment} ",
          "color": "#905",
          "class": [
            "cssselectorcolor"
          ]
        },
        {
          "text": "/* define primary colors */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "/* \n  use the variables */",
          "color": "slategray",
          "class": [
            "commentcolor"
          ]
        },
        {
          "text": "{",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "\u00a0 background-color: $primary_1; // here you can put an inline comment",
          "color": "#d73a49",
          "class": [
            "csspropertycolor"
          ]
        },
        {
          "text": ": $primary_1;",
          "color": "#005cc5",
          "class": [
            "csspropertyvaluecolor"
          ]
        },
        {
          "text": ":",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": ";",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        },
        {
          "text": "}",
          "color": "#999",
          "class": [
            "cssdelimitercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate cssHigh\"><span class=\"cssselectorcolor\" style=\"color:#905\">\n<span class=\"commentcolor\" style=\"color:slategray\">/* define primary colors */</span><br/>$primary_1: #a2b9bc;<br/>\n  $primary_2: #b2ad7f;<br/><br/><span class=\"commentcolor\" style=\"color:slategray\">/* \n  use the variables */</span><br/>.main-header\n<span class=\"cssdelimitercolor\" style=\"color:#999\">{</span><span class=\"csspropertycolor\" style=\"color:#d73a49\"><br/>\u00a0 background-color<span class=\"csspropertyvaluecolor\" style=\"color:#005cc5\"><span class=\"cssdelimitercolor\" style=\"color:#999\">:</span> $primary_1<span class=\"cssdelimitercolor\" style=\"color:#999\">;</span></span> // here you can put an inline comment<br/></span><span class=\"cssdelimitercolor\" style=\"color:#999\">}</span> </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "\n  /* define primary colors */$primary_1: #a2b9bc;\n  $primary_2: #b2ad7f;/* \n  use the variables */.main-header\n{\u00a0 background-color: $primary_1; // here you can put an inline comment} ",
          "color": "rgb(153, 0, 85)",
          "class": "cssselectorcolor"
        },
        {
          "text": "/* define primary colors */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "/* \n  use the variables */",
          "color": "rgb(112, 128, 144)",
          "class": "commentcolor"
        },
        {
          "text": "{",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "\u00a0 background-color: $primary_1; // here you can put an inline comment",
          "color": "rgb(215, 58, 73)",
          "class": "csspropertycolor"
        },
        {
          "text": ": $primary_1;",
          "color": "rgb(0, 92, 197)",
          "class": "csspropertyvaluecolor"
        },
        {
          "text": ":",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": ";",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        },
        {
          "text": "}",
          "color": "rgb(153, 153, 153)",
          "class": "cssdelimitercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "cssHigh"
      ],
      "is_notranslate": true
    }
  ]
}