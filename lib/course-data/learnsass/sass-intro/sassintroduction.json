{
  "id": "fdf8e998-e843-4e67-b4ac-fa09a8c33e6e",
  "title": "SassIntroduction",
  "slug": "sassintroduction",
  "metadata": {
    "description": "Learn about SassIntroduction with clear explanations and practical examples.",
    "keywords": [
      "c",
      "sass",
      "color",
      "code",
      "variables",
      "colors",
      "need",
      "background",
      "processor",
      "example",
      "main"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnSass",
    "subcategory": "Sass Intro"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Sass\nIntroduction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "What You Should Already Know\nBefore you continue you should have a basic understanding of the following:\nHTML\nCSS\nIf you want to study these subjects first, find the tutorials on our\nHome page\n.\nWhat is Sass?\nSass\nstands for\nS\nyntactically\nA\nwesome\nS\ntyle\ns\nheet\nSass is an extension to CSS\nSass is a CSS pre-processor\nSass is completely compatible with all versions of CSS\nSass reduces repetition of CSS and therefore saves time\nSass was designed by Hampton Catlin and developed by Natalie Weizenbaum in \n  2006\nSass is free to download and use\nWhy Use Sass?\nStylesheets are getting larger, more complex, \nand harder to maintain. This is where a CSS pre-processor can help.\nSass lets \nyou use features that do not exist in CSS, like variables, nested rules, mixins, \nimports, \ninheritance, built-in functions, and other stuff.\nA Simple Example why Sass is Useful\nLet's say we have a website with three main colors:\n#a2b9bc\n#b2ad7f\n#878f99\nSo, how many times do you need to type those HEX values? A LOT of times. And \nwhat about variations of the same colors?\nInstead of typing the above values a lot of times, you can use Sass and write this:\nSass Example\n/* define variables for the primary colors */\n$primary_1: #a2b9bc;\n$primary_2: #b2ad7f;\n$primary_3: \n  #878f99;\n/* \n  use the variables */\n.main-header\n{\nbackground-color: $primary_1;\n}\n.menu-left\n{\nbackground-color: $primary_2;\n}\n.menu-right\n{\nbackground-color: $primary_3;\n}\nSo, when using Sass, and the primary color changes, you only need to change \nit in one place.\nHow Does Sass Work?\nA browser does not understand Sass code. Therefore, you will need a Sass \npre-processor to convert Sass code into standard CSS.\nThis process is called transpiling. So, you need to give a transpiler \n(some kind of program) some Sass code and then get some CSS code back.\nTip:\nTranspiling is a term for taking a source code written in one language \nand transform/translate it into another language.\nSass File Type\nSass files has the \".scss\" file extension.\nSass Comments\nSass supports standard CSS comments\n/* comment */\n, \nand in addition it supports inline comments\n// comment\n:\nSass Example\n/* define primary colors */\n$primary_1: #a2b9bc;\n$primary_2: #b2ad7f;\n/* \n  use the variables */\n.main-header\n{\nbackground-color: $primary_1; // here you can put an inline comment\n}\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Sass Example",
      "content": "",
      "order": 3,
      "code": "/* define variables for the primary colors */\n$primary_1: #a2b9bc;\n$primary_2: #b2ad7f;\n$primary_3: \n  #878f99;\n/* \n  use the variables */\n.main-header\n{\nbackground-color: $primary_1;\n}\n.menu-left\n{\nbackground-color: $primary_2;\n}\n.menu-right\n{\nbackground-color: $primary_3;\n}",
      "language": "css",
      "explanation": "Example of sass example"
    },
    {
      "type": "code_example",
      "title": "Sass Example",
      "content": "",
      "order": 4,
      "code": "/* define primary colors */\n$primary_1: #a2b9bc;\n$primary_2: #b2ad7f;\n/* \n  use the variables */\n.main-header\n{\nbackground-color: $primary_1; // here you can put an inline comment\n}",
      "language": "css",
      "explanation": "Example of sass example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "/* define variables for the primary colors */\n$primary_1: #a2b9bc;\n$primary_2: #b2ad7f;\n# TODO: Complete this line\n  #878f99;\n/* \n  use the variables */\n.main-header\n{\nbackground-color: $primary_1;\n}\n.menu-left\n{\nbackground-color: $primary_2;\n}\n.menu-right\n{\nbackground-color: $primary_3;\n}",
      "solution": "/* define variables for the primary colors */\n$primary_1: #a2b9bc;\n$primary_2: #b2ad7f;\n$primary_3: \n  #878f99;\n/* \n  use the variables */\n.main-header\n{\nbackground-color: $primary_1;\n}\n.menu-left\n{\nbackground-color: $primary_2;\n}\n.menu-right\n{\nbackground-color: $primary_3;\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "/* define primary colors */\n$primary_1: #a2b9bc;\n$primary_2: #b2ad7f;\n/* \n# TODO: Complete this line\n.main-header\n{\nbackground-color: $primary_1; // here you can put an inline comment\n}",
      "solution": "/* define primary colors */\n$primary_1: #a2b9bc;\n$primary_2: #b2ad7f;\n/* \n  use the variables */\n.main-header\n{\nbackground-color: $primary_1; // here you can put an inline comment\n}"
    }
  ],
  "related_topics": [
    {
      "id": "9423a130-918b-4b23-bd28-52ca8c63b431",
      "title": "C Functions and Methods",
      "relationship": "next_topic"
    },
    {
      "id": "5c124e90-e9f5-48c7-9e36-16ff53763275",
      "title": "C Data Structures",
      "relationship": "suggested_next"
    }
  ],
  "quiz": [
    {
      "question": "What is What?",
      "options": [
        "a CSS pre-processor\nSass is completely compatible with all versions of CSS\nSass reduces repetition of CSS and therefore saves time\nSass was designed by Hampton Catlin and developed by Natalie Weizenbaum in \n  2006\nSass is free to download and use\nWhy Use Sass",
        "Sass",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of What is 'Sass'."
    },
    {
      "question": "What is Sass\nstands for\nS\nyntactically\nA\nwesome\nS\ntyle\ns\nheet\nSass is an extension to CSS\nSass?",
      "options": [
        "None of the above.",
        "a CSS pre-processor\nSass is completely compatible with all versions of CSS\nSass reduces repetition of CSS and therefore saves time\nSass was designed by Hampton Catlin and developed by Natalie Weizenbaum in \n  2006\nSass is free to download and use\nWhy Use Sass",
        "Sass",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Sass\nstands for\nS\nyntactically\nA\nwesome\nS\ntyle\ns\nheet\nSass is an extension to CSS\nSass is 'a CSS pre-processor\nSass is completely compatible with all versions of CSS\nSass reduces repetition of CSS and therefore saves time\nSass was designed by Hampton Catlin and developed by Natalie Weizenbaum in \n  2006\nSass is free to download and use\nWhy Use Sass'."
    }
  ],
  "summary": "This tutorial covers SassIntroduction concepts and techniques. You'll learn how to use SassIntroduction effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of SassIntroduction and how to apply it in your projects."
}