{
  "id": "7f8c5dc8-31e6-48e0-a485-979b6e62e52c",
  "title": "Sass@import and Partials",
  "slug": "sassimport-and-partials",
  "metadata": {
    "description": "Learn about Sass@import and Partials with clear explanations and practical examples.",
    "keywords": [
      "file",
      "import",
      "sass",
      "scss",
      "files",
      "reset",
      "font",
      "example",
      "directive",
      "body"
    ],
    "difficulty": "intermediate",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnSass",
    "subcategory": "Sass @import"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Sass\n@import and Partials",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Sass keeps the CSS code DRY (Don't Repeat Yourself). One way to \nwrite DRY code is to keep related code in separate files.\nYou can create small files with CSS snippets to include in other Sass files. Examples \nof such files can be: reset file, variables, colors, fonts, font-sizes, etc.\nSass Importing Files\nJust like CSS, Sass also supports the\n@import\ndirective.\nThe\n@import\ndirective allows you to include \nthe content of one file in another.\nThe CSS\n@import\ndirective has a major drawback \ndue to performance issues; it creates an extra HTTP request \neach time you call it. However, the Sass\n@import\ndirective \nincludes the file in the CSS; so no extra HTTP call is required at runtime!\nSass Import Syntax:\n@import\nfilename\n;\nTip:\nYou do not need to specify a \nfile extension, Sass automatically assumes that you mean a .sass or .scss file. \nYou can also import CSS files. The\n@import\ndirective imports the file and any variables or mixins defined in the imported \nfile can then be used in the main file.\nYou can import as many files as you need in the main file:\nExample\n@import \"variables\";\n@import \n  \"colors\";\n@import \n  \"reset\";\nLet's look at an example: Let's assume we have a reset file called \"reset.scss\", that looks like this:\nExample\nSCSS Syntax (reset.scss):\nhtml,\nbody,\nul,\nol {\nmargin: 0;\npadding: 0;\n}\nand now we want to import the \"reset.scss\" file into another file called \"standard.scss\".\nHere is how we do it: It is normal to add the\n@import\ndirective at the top of a file; this way its content will have a global scope:\nSCSS Syntax (standard.scss):\n@import \"reset\";\nbody {\nfont-family: Helvetica, sans-serif;\nfont-size: 18px;\ncolor: red;\n}\nSo, when the \"standard.css\" file is transpiled, the CSS will look like this:\nCSS output:\nhtml, body, ul, ol {\nmargin: 0;\npadding: 0;\n}\nbody {\nfont-family: Helvetica, sans-serif;\nfont-size: 18px;\ncolor: red;\n}\nRun Example \u00bb\nSass Partials\nBy default, Sass transpiles all the .scss files directly. However, when you want to \nimport a file, you do not need the file to be transpiled directly.\nSass has a mechanism for this: If you start the filename with an underscore, Sass will not transpile it. Files named this way are called partials in \nSass.\nSo, a partial Sass file is named with a leading underscore:\nSass Partial Syntax:\n_\nfilename\n;\nThe following example shows a partial Sass file named \"_colors.scss\". \n(This file will not be transpiled directly to \"colors.css\"):\nExample\n\"_colors.scss\":\n$myPink: #EE82EE;\n$myBlue: #4169E1;\n$myGreen: #8FBC8F;\nNow, if you import the partial file, omit the underscore. Sass understands \nthat it should \nimport the file \"_colors.scss\":\nExample\n@import \"colors\";\nbody {\nfont-family: Helvetica, sans-serif;\nfont-size: 18px;\ncolor: $myBlue;\n}\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "@import\nfilename\n;",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "@import \"variables\";\n@import \n  \"colors\";\n@import \n  \"reset\";",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "html,\nbody,\nul,\nol {\nmargin: 0;\npadding: 0;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "@import \"reset\";\nbody {\nfont-family: Helvetica, sans-serif;\nfont-size: 18px;\ncolor: red;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "html, body, ul, ol {\nmargin: 0;\npadding: 0;\n}\nbody {\nfont-family: Helvetica, sans-serif;\nfont-size: 18px;\ncolor: red;\n}",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "_\nfilename\n;",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "$myPink: #EE82EE;\n$myBlue: #4169E1;\n$myGreen: #8FBC8F;",
      "language": "css",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "@import \"colors\";\nbody {\nfont-family: Helvetica, sans-serif;\nfont-size: 18px;\ncolor: $myBlue;\n}",
      "language": "css",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "@import\nfilename\n# TODO: Complete this line",
      "solution": "@import\nfilename\n;"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "@import \"variables\";\n@import \n  \"colors\";\n@import \n# TODO: Complete this line",
      "solution": "@import \"variables\";\n@import \n  \"colors\";\n@import \n  \"reset\";"
    }
  ],
  "related_topics": [
    {
      "id": "5fa46dca-d403-4b54-b1e2-c06353ae44de",
      "title": "Unknown Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "b78289f0-7f27-4c97-b1e7-4297387f4d01",
      "title": "Unknown Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "462b1ca7-4a36-4454-9369-7bc074ede7ac",
      "title": "Unknown Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is One way to \nwrite DRY code?",
      "options": [
        "None of the above.",
        "None of the above.",
        "to keep related code in separate files",
        "required at runtime"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of One way to \nwrite DRY code is 'to keep related code in separate files'."
    },
    {
      "question": "What is so no extra HTTP call?",
      "options": [
        "to keep related code in separate files",
        "None of the above.",
        "required at runtime",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of so no extra HTTP call is 'required at runtime'."
    }
  ],
  "summary": "This tutorial covers Sass@import and Partials concepts and techniques. You'll learn how to use Sass@import and Partials effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Sass@import and Partials and how to apply it in your projects."
}