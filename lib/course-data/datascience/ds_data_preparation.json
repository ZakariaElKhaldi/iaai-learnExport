{
  "title": "Data Science Data Preparation and Analyze Data",
  "url": "https://www.w3schools.com/datascience/ds_analyze_data.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Data Science - Data Preparation",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Before analyzing data, a Data Scientist must extract the data, and make it clean and valuable.",
      "html": "<p class=\"intro\">Before analyzing data, a Data Scientist must extract the data, \nand make it clean and valuable.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Extract and Read Data With Pandas",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Before data can be analyzed, it must be imported/extracted.",
      "html": "<p>Before data can be analyzed, it must be imported/extracted.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the example below, we show you how to import data using Pandas in Python.",
      "html": "<p>In the example below, we show you how to import data using Pandas in Python.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We use the read_csv() function to import a CSV file with the health data:",
      "html": "<p>We  use the <code>read_csv()</code> function to import a CSV file with the health data:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": "https://www.w3schools.com/datascience/trypython_multi_csv.asp?filename=demo_analyze_data&multi=demo_data_raw_multi",
        "syntaxHighlighting": [
          {
            "text": "\n  import pandas as pdhealth_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\n  print(health_data) ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "import",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\"data.csv\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\",\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "import pandas as pdhealth_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\nprint(health_data)",
      "syntax_highlighting": [
        {
          "text": "\n import pandas as pdhealth_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\n print(health_data) ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "import",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\"data.csv\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\",\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> pandas as pd<br/><br/>health_data = pd.read_csv(<span class=\"pythonstringcolor\" style=\"color:green\">\"data.csv\"</span>, header=<span class=\"pythonnumbercolor\" style=\"color:#905\">0</span>, sep=<span class=\"pythonstringcolor\" style=\"color:green\">\",\"</span>)<br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(health_data) </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/datascience/trypython_multi_csv.asp?filename=demo_analyze_data&multi=demo_data_raw_multi",
      "syntax_highlighting_data": [
        {
          "text": "\n  import pandas as pdhealth_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\n  print(health_data) ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "import",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\"data.csv\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\",\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Example Explained",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Tip: If you have a large CSV file, you can use the head() function to only show the top 5rows:",
      "html": "<p><strong>Tip:</strong> If you have a large CSV file, you can use the <code>\nhead()</code> function to only show the top 5rows:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": "https://www.w3schools.com/datascience/trypython_multi_csv.asp?filename=demo_analyze_data_head&multi=demo_data_raw_multi",
        "syntaxHighlighting": [
          {
            "text": "\n  import pandas as pdhealth_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\n  print(health_data.head()) ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "import",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\"data.csv\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\",\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "import pandas as pdhealth_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\nprint(health_data.head())",
      "syntax_highlighting": [
        {
          "text": "\n import pandas as pdhealth_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\n print(health_data.head()) ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "import",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\"data.csv\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\",\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> pandas as pd<br/><br/>health_data = pd.read_csv(<span class=\"pythonstringcolor\" style=\"color:green\">\"data.csv\"</span>, header=<span class=\"pythonnumbercolor\" style=\"color:#905\">0</span>, sep=<span class=\"pythonstringcolor\" style=\"color:green\">\",\"</span>)<br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(health_data.head()) </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/datascience/trypython_multi_csv.asp?filename=demo_analyze_data_head&multi=demo_data_raw_multi",
      "syntax_highlighting_data": [
        {
          "text": "\n  import pandas as pdhealth_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\n  print(health_data.head()) ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "import",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\"data.csv\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\",\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Data Cleaning",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Look at the imported data. As you can see, the data are \"dirty\" with wrongly or unregistered values:",
      "html": "<p>Look at the imported data. As you can see, the data are \"dirty\" with wrongly or unregistered values:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "So, we must clean the data in order to perform the analysis.",
      "html": "<p>So, we must clean the data in order to perform the analysis.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Remove Blank Rows",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We see that the non-numeric values (9 000 and AF) are in the same rows with missing values.",
      "html": "<p>We see that the non-numeric values (9 000 and AF) are in the same rows with missing values.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Solution: We can remove the rows with missing observations to fix this problem.",
      "html": "<p>Solution: We can remove the rows with missing observations to fix this problem.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When we load a data set using Pandas, all blank cells are automatically converted into \"NaN\" values.",
      "html": "<p>When we load a data set using Pandas, all blank cells are automatically converted into \"NaN\" values. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "So, removing the NaN cells gives us a clean data set that can be analyzed.",
      "html": "<p>So, removing the NaN cells gives us a clean data set that can be analyzed.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We can use the dropna() function to remove the NaNs. axis=0 means that we want to remove all rows that have a NaN value:",
      "html": "<p>We can \nuse the <code>dropna()</code> function to remove the NaNs. axis=0 means that we want to remove all rows that have a NaN value:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/datascience/trypython_multi_csv.asp?filename=demo_clean_data&multi=demo_data_raw_multi",
        "syntaxHighlighting": [
          {
            "text": "\n  health_data.dropna(axis=0,inplace=True)print(health_data) ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "True",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "health_data.dropna(axis=0,inplace=True)print(health_data)",
      "syntax_highlighting": [
        {
          "text": "\n  health_data.dropna(axis=0,inplace=True)print(health_data) ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "True",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  health_data.dropna(axis=<span class=\"pythonnumbercolor\" style=\"color:#905\">0</span>,inplace=<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">True</span>)<br/><br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(health_data) </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/datascience/trypython_multi_csv.asp?filename=demo_clean_data&multi=demo_data_raw_multi",
      "syntax_highlighting_data": [
        {
          "text": "\n  health_data.dropna(axis=0,inplace=True)print(health_data) ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "True",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The result is a data set without NaN rows:",
      "html": "<p>The result is a data set without NaN rows:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Data Categories",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To analyze data, we also need to know the types of data we are dealing with.",
      "html": "<p>To analyze data, we also need to know the types of data we are dealing with.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Data can be split into two main categories:",
      "html": "<p>Data can be split into two main categories:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "By knowing the type of your data, you will be able to know what technique to use when analyzing them.",
      "html": "<p>By knowing the type of your data, you will be able to know what technique to use when analyzing them.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Data Types",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We can use the info() function to list the data types within our data set:",
      "html": "<p>We can use the <code>info()</code> function to list the data types \nwithin our data set:\u00a0</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/datascience/trypython_multi_csv.asp?filename=demo_datatypes_data&multi=demo_data_raw_multi",
        "syntaxHighlighting": [
          {
            "text": "\n  print(health_data.info()) ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "print(health_data.info())",
      "syntax_highlighting": [
        {
          "text": "\n print(health_data.info()) ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(health_data.info()) </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/datascience/trypython_multi_csv.asp?filename=demo_datatypes_data&multi=demo_data_raw_multi",
      "syntax_highlighting_data": [
        {
          "text": "\n  print(health_data.info()) ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Result:",
      "html": "<p>Result:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We see that this data set has two different types of data:",
      "html": "<p>We see that this data set has two different types of data:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We cannot use objects to calculate and perform analysis here. We must convert the type object to float64 (float64 is a number with a decimal in Python).",
      "html": "<p>We cannot use objects to calculate and perform analysis here. We must convert \nthe type object to float64 (float64 is a number with a decimal in Python).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We can use the astype() function to convert the data into float64.",
      "html": "<p>We can use the <code>astype()</code> function to convert the data into float64.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The following example converts \"Average_Pulse\" and \"Max_Pulse\" into data type float64 (the other variables are already of data type float64):",
      "html": "<p>The following example converts \"Average_Pulse\" and \"Max_Pulse\" into data \ntype float64 (the other variables are already of data type float64): </p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/datascience/trypython_multi_csv.asp?filename=demo_float_data&multi=demo_data_raw_multi",
        "syntaxHighlighting": [
          {
            "text": "\n  health_data[\"Average_Pulse\"] \n  = health_data['Average_Pulse'].astype(float)health_data[\"Max_Pulse\"] = \n  health_data[\"Max_Pulse\"].astype(float)print \n  (health_data.info()) ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\"Average_Pulse\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "'Average_Pulse'",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "float",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\"Max_Pulse\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\"Max_Pulse\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "float",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "health_data[\"Average_Pulse\"]\n= health_data['Average_Pulse'].astype(float)health_data[\"Max_Pulse\"] =\nhealth_data[\"Max_Pulse\"].astype(float)print\n(health_data.info())",
      "syntax_highlighting": [
        {
          "text": "\n  health_data[\"Average_Pulse\"] \n  = health_data['Average_Pulse'].astype(float)health_data[\"Max_Pulse\"] = \n  health_data[\"Max_Pulse\"].astype(float)print \n  (health_data.info()) ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\"Average_Pulse\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "'Average_Pulse'",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "float",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\"Max_Pulse\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\"Max_Pulse\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "float",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  health_data[<span class=\"pythonstringcolor\" style=\"color:green\">\"Average_Pulse\"</span>] <span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  = health_data[<span class=\"pythonstringcolor\" style=\"color:green\">'Average_Pulse'</span>].astype(<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">float</span>)<br/>health_data[<span class=\"pythonstringcolor\" style=\"color:green\">\"Max_Pulse\"</span>] = <span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  health_data[<span class=\"pythonstringcolor\" style=\"color:green\">\"Max_Pulse\"</span>].astype(<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">float</span>)<br/><br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span> <span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  (health_data.info()) </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/datascience/trypython_multi_csv.asp?filename=demo_float_data&multi=demo_data_raw_multi",
      "syntax_highlighting_data": [
        {
          "text": "\n  health_data[\"Average_Pulse\"] \n  = health_data['Average_Pulse'].astype(float)health_data[\"Max_Pulse\"] = \n  health_data[\"Max_Pulse\"].astype(float)print \n  (health_data.info()) ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\"Average_Pulse\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "'Average_Pulse'",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "float",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\"Max_Pulse\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\"Max_Pulse\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "float",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Result:",
      "html": "<p>Result:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Now, the data set has only float64 data types.",
      "html": "<p>Now, the data set has only float64 data types.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Analyze the Data",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When we have cleaned the data set, we can start analyzing the data.",
      "html": "<p>When we have cleaned the data set, we can start analyzing the data. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We can use the describe() function in Python to summarize data:",
      "html": "<p>We can use the <code>describe()</code> function in Python \nto summarize data: </p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": "https://www.w3schools.com/datascience/trypython_multi_csv.asp?filename=demo_describe_data&multi=demo_data_multi",
        "syntaxHighlighting": [
          {
            "text": "\n  print(health_data.describe()) ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "print(health_data.describe())",
      "syntax_highlighting": [
        {
          "text": "\n print(health_data.describe()) ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(health_data.describe()) </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/datascience/trypython_multi_csv.asp?filename=demo_describe_data&multi=demo_data_multi",
      "syntax_highlighting_data": [
        {
          "text": "\n  print(health_data.describe()) ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Result:",
      "html": "<p>Result:</p>"
    }
  ]
}