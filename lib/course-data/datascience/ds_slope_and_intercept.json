{
  "title": "Data Science Slope and Intercept",
  "url": "https://www.w3schools.com/datascience/ds_linear_slope.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Data Science - Slope and Intercept",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Slope and Intercept",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Now we will explain how we found the slope and intercept of our function:",
      "html": "<p>Now we will explain how we found the slope and intercept of our function:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<div>f(x) = 2x + 80</div></div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The image below points to the Slope - which indicates how steep the line is, and the Intercept - which is the value of y, when x = 0 (the point where the diagonal line crosses the vertical axis). The red line is the continuation of the blue line from previous page.",
      "html": "<p>The image below points to the Slope - which indicates how steep the line is, \nand the Intercept - which is the value of y, when x = 0 (the point where the \ndiagonal line crosses the vertical axis). The red line is the continuation of \nthe blue line from previous page. </p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Find The Slope",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The slope is defined as how much calorie burnage increases, if average pulse increases by one. It tells us how \"steep\" the diagonal line is.",
      "html": "<p>The slope is defined as how much calorie burnage increases, if average pulse increases by one. \nIt tells us how \"steep\" the diagonal line is. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We can find the slope by using the proportional difference of two points from the graph.",
      "html": "<p>We can find the slope by using the proportional difference of two points from the graph.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We see that if average pulse increases with 10, the calorie burnage increases by 20.",
      "html": "<p>We see that if average pulse increases with 10, the calorie burnage increases by 20.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<div>Slope = 20/10 = 2</div></div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The slope is 2.",
      "html": "<p>The slope is 2.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Mathematically, Slope is Defined as:",
      "level": "h3"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<div>Slope = f(x2) - f(x1) / x2-x1</div></div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "f(x2) = Second observation of Calorie_Burnage = 260 f(x1) = First observation of Calorie_Burnage = 240 x2 = Second observation of Average_Pulse = 90 x1 = First observation of Average_Pulse = 80",
      "html": "<p>f(x2) = Second observation of Calorie_Burnage = 260<br/>f(x1) = First \nobservation of Calorie_Burnage = 240<br/>x2 = Second observation of Average_Pulse = 90<br/>x1 = First observation of \nAverage_Pulse = 80</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<div>Slope = (260-240) / (90 - 80) = 2</div></div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Be consistent to define the observations in the correct order! If not, the prediction will not be correct!",
      "html": "<p>Be consistent to define the observations in the correct order! If not, the \nprediction will not be correct!</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Use Python to Find the Slope",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Calculate the slope with the following code:",
      "html": "<p>Calculate the slope with the following code:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": "https://www.w3schools.com/datascience/trypython.asp?filename=demo_slope",
        "syntaxHighlighting": [
          {
            "text": "\n  def slope(x1, y1, x2, y2):\u00a0 s = (y2-y1)/(x2-x1)\u00a0 return s\nprint (slope(80,240,90,260)) ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "def",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "80",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "240",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "90",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "260",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "def slope(x1, y1, x2, y2):\u00a0 s = (y2-y1)/(x2-x1)\u00a0 return s\nprint (slope(80,240,90,260))",
      "syntax_highlighting": [
        {
          "text": "\n def slope(x1, y1, x2, y2):\u00a0 s = (y2-y1)/(x2-x1)\u00a0 return s\nprint (slope(80,240,90,260)) ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "def",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "80",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "240",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "90",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "260",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">def</span> slope(x1, y1, x2, y2):<br/>\u00a0 s = (y2-y1)/(x2-x1)<br/>\u00a0 <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">return</span> s<br/><br/>\n<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span> (slope(<span class=\"pythonnumbercolor\" style=\"color:#905\">80</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">240</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">90</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">260</span>)) </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/datascience/trypython.asp?filename=demo_slope",
      "syntax_highlighting_data": [
        {
          "text": "\n  def slope(x1, y1, x2, y2):\u00a0 s = (y2-y1)/(x2-x1)\u00a0 return s\nprint (slope(80,240,90,260)) ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "def",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "80",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "240",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "90",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "260",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Find The Intercept",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The intercept is used to fine tune the functions ability to predict Calorie_Burnage.",
      "html": "<p>The intercept is used to fine tune the functions ability to predict Calorie_Burnage.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The intercept is where the diagonal line crosses the y-axis, if it were fully drawn.",
      "html": "<p>The intercept is where the diagonal line crosses the y-axis, if it were fully drawn.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The intercept is the value of y, when x = 0.",
      "html": "<p>The intercept is the value of y, when x = 0.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Here, we see that if average pulse (x) is zero, then the calorie burnage (y) is 80.",
      "html": "<p>Here, we see that if average pulse (x) is zero, then the calorie burnage (y) is 80.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "So, the intercept is 80.",
      "html": "<p>So, the intercept is 80.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Sometimes, the intercept has a practical meaning. Sometimes not.",
      "html": "<p>Sometimes, the intercept has a practical meaning. Sometimes not.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Does it make sense that average pulse is zero?",
      "html": "<p><strong>Does it make sense that average pulse is zero?</strong></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "No, you would be dead and you certainly would not burn any calories.",
      "html": "<p>No, you would be dead and you certainly would not burn any calories.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "However, we need to include the intercept in order to complete the mathematical function's ability to predict Calorie_Burnage correctly.",
      "html": "<p>However, we need to include the intercept in order to complete the \nmathematical function's ability to predict Calorie_Burnage correctly.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Other examples where the intercept of a mathematical function can have a practical meaning:",
      "html": "<p>Other examples where the intercept of a mathematical function can have a practical meaning: </p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Find the Slope and Intercept Using Python",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The np.polyfit() function returns the slope and intercept.",
      "html": "<p>The <code>np.polyfit()</code> function returns the slope and intercept.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If we proceed with the following code, we can both get the slope and intercept from the function.",
      "html": "<p>If we proceed with the following code, we can both get the slope and intercept from the function.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": "https://www.w3schools.com/datascience/trypython_multi_csv.asp?filename=demo_slope_intercept&multi=demo_data_multi",
        "syntaxHighlighting": [
          {
            "text": "\n  import pandas as pdimport numpy as nphealth_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\n  x = health_data[\"Average_Pulse\"]y = health_data[\"Calorie_Burnage\"]\nslope_intercept = np.polyfit(x,y,1)print(slope_intercept) ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "import",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "import",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "as",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\"data.csv\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\",\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\"Average_Pulse\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\"Calorie_Burnage\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "1",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "import pandas as pdimport numpy as nphealth_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\nx = health_data[\"Average_Pulse\"]y = health_data[\"Calorie_Burnage\"]\nslope_intercept = np.polyfit(x,y,1)print(slope_intercept)",
      "syntax_highlighting": [
        {
          "text": "\n import pandas as pdimport numpy as nphealth_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\n x = health_data[\"Average_Pulse\"]y = health_data[\"Calorie_Burnage\"]\nslope_intercept = np.polyfit(x,y,1)print(slope_intercept) ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "import",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "import",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "as",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\"data.csv\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\",\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\"Average_Pulse\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\"Calorie_Burnage\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "1",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> pandas as pd<br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> numpy <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> np<br/><br/>health_data = pd.read_csv(<span class=\"pythonstringcolor\" style=\"color:green\">\"data.csv\"</span>, header=<span class=\"pythonnumbercolor\" style=\"color:#905\">0</span>, sep=<span class=\"pythonstringcolor\" style=\"color:green\">\",\"</span>)<br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <br/>x = health_data[<span class=\"pythonstringcolor\" style=\"color:green\">\"Average_Pulse\"</span>]<br/>y = health_data[<span class=\"pythonstringcolor\" style=\"color:green\">\"Calorie_Burnage\"</span>]<br/>\nslope_intercept = np.polyfit(x,y,<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>)<br/><br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(slope_intercept) </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/datascience/trypython_multi_csv.asp?filename=demo_slope_intercept&multi=demo_data_multi",
      "syntax_highlighting_data": [
        {
          "text": "\n  import pandas as pdimport numpy as nphealth_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\n  x = health_data[\"Average_Pulse\"]y = health_data[\"Calorie_Burnage\"]\nslope_intercept = np.polyfit(x,y,1)print(slope_intercept) ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "import",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "import",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "as",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\"data.csv\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\",\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\"Average_Pulse\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\"Calorie_Burnage\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "1",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Example Explained:",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Tip: linear functions = 1.degree function. In our example, the function is linear, which is in the 1.degree. That means that all coefficients (the numbers) are in the power of one.",
      "html": "<p><strong>Tip:</strong> linear functions = 1.degree function. In our example, the function is linear, which is in the 1.degree. That means \nthat all coefficients (the numbers) are in the power of one.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We have now calculated the slope (2) and the intercept (80). We can write the mathematical function as follow:",
      "html": "<p>We have now calculated the slope (2) and the intercept (80).\n\nWe can write the mathematical function as follow: </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Predict Calorie_Burnage by using a mathematical expression:",
      "html": "<p>Predict Calorie_Burnage by using a mathematical expression:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<div>f(x) = 2x + 80</div></div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Task:",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Now, we want to predict calorie burnage if average pulse is 135.",
      "html": "<p>Now, we want to predict calorie burnage if average pulse \nis 135.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Remember that the intercept is a constant. A constant is a number that does not change.",
      "html": "<p>Remember that the intercept is a constant. A constant is a number that \ndoes not change.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We can now substitute the input x with 135:",
      "html": "<p>We can now substitute the input x with 135:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<div>f(135) = 2 * 135 + 80 = 350</div></div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If average pulse is 135, the calorie burnage is 350.",
      "html": "<p>If average pulse is 135, the calorie burnage is 350.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Define the Mathematical Function in Python",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Here is the exact same mathematical function, but in Python. The function returns 2*x + 80, with x as the input:",
      "html": "<p>Here is the exact same mathematical function, but in Python. The function \nreturns 2*x + 80, with x as the input:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "javascript",
        "tryItLink": "https://www.w3schools.com/datascience/trypython.asp?filename=demo_function",
        "syntaxHighlighting": [
          {
            "text": "\n  def my_function(x):\u00a0 return 2*x + 80\nprint (my_function(135)) ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "def",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "2",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "80",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "135",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "def my_function(x):\u00a0 return 2*x + 80\nprint (my_function(135))",
      "syntax_highlighting": [
        {
          "text": "\n def my_function(x):\u00a0 return 2*x + 80\nprint (my_function(135)) ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "def",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "2",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "80",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "135",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">def</span> my_function(x):<br/>\u00a0 <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">return</span> <span class=\"pythonnumbercolor\" style=\"color:#905\">2</span>*x + <span class=\"pythonnumbercolor\" style=\"color:#905\">80</span><br/><br/>\n<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span> (my_function(<span class=\"pythonnumbercolor\" style=\"color:#905\">135</span>)) </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/datascience/trypython.asp?filename=demo_function",
      "syntax_highlighting_data": [
        {
          "text": "\n  def my_function(x):\u00a0 return 2*x + 80\nprint (my_function(135)) ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "def",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "2",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "80",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "135",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Try to replace x with 140 and 150.",
      "html": "<p>Try to replace x with 140 and 150.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Plot a New Graph in Python",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Here, we plot the same graph as earlier, but formatted the axis a little bit.",
      "html": "<p>Here, we plot the same graph as earlier, but formatted the axis a little bit.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Max value of the y-axis is now 400 and for x-axis is 150:",
      "html": "<p>Max value of the y-axis is now 400 and for x-axis is 150:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": "https://www.w3schools.com/datascience/trypython_multi_csv.asp?filename=demo_function_plot2&multi=demo_data_multi",
        "syntaxHighlighting": [
          {
            "text": "\n  import matplotlib.pyplot as plthealth_data.plot(x ='Average_Pulse', \n  y='Calorie_Burnage', kind='line'),plt.ylim(ymin=0, ymax=400)plt.xlim(xmin=0, \n  xmax=150)\n  plt.show() ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "import",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "as",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "'Average_Pulse'",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "'Calorie_Burnage'",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "'line'",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "400",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "150",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "import matplotlib.pyplot as plthealth_data.plot(x ='Average_Pulse',\ny='Calorie_Burnage', kind='line'),plt.ylim(ymin=0, ymax=400)plt.xlim(xmin=0,\nxmax=150)\nplt.show()",
      "syntax_highlighting": [
        {
          "text": "\n import matplotlib.pyplot as plthealth_data.plot(x ='Average_Pulse', \n  y='Calorie_Burnage', kind='line'),plt.ylim(ymin=0, ymax=400)plt.xlim(xmin=0, \n  xmax=150)\n plt.show() ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "import",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "as",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "'Average_Pulse'",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "'Calorie_Burnage'",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "'line'",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "400",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "150",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> matplotlib.pyplot <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> plt<br/><br/>health_data.plot(x =<span class=\"pythonstringcolor\" style=\"color:green\">'Average_Pulse'</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  y=<span class=\"pythonstringcolor\" style=\"color:green\">'Calorie_Burnage'</span>, kind=<span class=\"pythonstringcolor\" style=\"color:green\">'line'</span>),<br/>plt.ylim(ymin=<span class=\"pythonnumbercolor\" style=\"color:#905\">0</span>, ymax=<span class=\"pythonnumbercolor\" style=\"color:#905\">400</span>)<br/>plt.xlim(xmin=<span class=\"pythonnumbercolor\" style=\"color:#905\">0</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  xmax=<span class=\"pythonnumbercolor\" style=\"color:#905\">150</span>)<br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <br/>plt.show() </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/datascience/trypython_multi_csv.asp?filename=demo_function_plot2&multi=demo_data_multi",
      "syntax_highlighting_data": [
        {
          "text": "\n  import matplotlib.pyplot as plthealth_data.plot(x ='Average_Pulse', \n  y='Calorie_Burnage', kind='line'),plt.ylim(ymin=0, ymax=400)plt.xlim(xmin=0, \n  xmax=150)\n  plt.show() ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "import",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "as",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "'Average_Pulse'",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "'Calorie_Burnage'",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "'line'",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "400",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "150",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Example Explained",
      "level": "h3"
    }
  ]
}