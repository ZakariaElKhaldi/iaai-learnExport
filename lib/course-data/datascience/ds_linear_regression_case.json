{
  "title": "Data Science Linear Regression Case",
  "url": "https://www.w3schools.com/datascience/ds_linear_regression_case.asp",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "Data Science - Linear Regression Case",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Case: Use Duration + Average_Pulse to Predict Calorie_Burnage",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Create a Linear Regression Table with Average_Pulse and Duration as Explanatory Variables:",
      "html": "<p>Create a Linear Regression Table with Average_Pulse and Duration as Explanatory Variables:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": "https://www.w3schools.com/datascience/showpython.asp?filename=demo_linear_regression_case",
        "syntaxHighlighting": [
          {
            "text": "\n  import pandas as pdimport statsmodels.formula.api as smffull_health_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\n  model = smf.ols('Calorie_Burnage ~ Average_Pulse + Duration', data = full_health_data)results \n  = model.fit()print(results.summary()) ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "import",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "import",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "as",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "\"data.csv\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "0",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "\",\"",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "'Calorie_Burnage ~ Average_Pulse + Duration'",
            "color": "rgb(0, 128, 0)",
            "class": "pythonstringcolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "import pandas as pdimport statsmodels.formula.api as smffull_health_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\nmodel = smf.ols('Calorie_Burnage ~ Average_Pulse + Duration', data = full_health_data)results\n= model.fit()print(results.summary())",
      "syntax_highlighting": [
        {
          "text": "\n import pandas as pdimport statsmodels.formula.api as smffull_health_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\n model = smf.ols('Calorie_Burnage ~ Average_Pulse + Duration', data = full_health_data)results \n  = model.fit()print(results.summary()) ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "import",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "import",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "as",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "\"data.csv\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "0",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "\",\"",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "'Calorie_Burnage ~ Average_Pulse + Duration'",
          "color": "green",
          "class": [
            "pythonstringcolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> pandas as pd<br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> statsmodels.formula.api <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> smf<br/><br/>full_health_data = pd.read_csv(<span class=\"pythonstringcolor\" style=\"color:green\">\"data.csv\"</span>, header=<span class=\"pythonnumbercolor\" style=\"color:#905\">0</span>, sep=<span class=\"pythonstringcolor\" style=\"color:green\">\",\"</span>)<br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <br/>model = smf.ols(<span class=\"pythonstringcolor\" style=\"color:green\">'Calorie_Burnage ~ Average_Pulse + Duration'</span>, data = full_health_data)<br/>results <span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>  = model.fit()<br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(results.summary()) </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/datascience/showpython.asp?filename=demo_linear_regression_case",
      "syntax_highlighting_data": [
        {
          "text": "\n  import pandas as pdimport statsmodels.formula.api as smffull_health_data = pd.read_csv(\"data.csv\", header=0, sep=\",\")\n  model = smf.ols('Calorie_Burnage ~ Average_Pulse + Duration', data = full_health_data)results \n  = model.fit()print(results.summary()) ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "import",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "import",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "as",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "\"data.csv\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "0",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "\",\"",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "'Calorie_Burnage ~ Average_Pulse + Duration'",
          "color": "rgb(0, 128, 0)",
          "class": "pythonstringcolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Example Explained:",
      "level": "h3"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h3"
      },
      "text": "Output:",
      "level": "h3"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The linear regression function can be rewritten mathematically as:",
      "html": "<p>The linear regression function can be rewritten mathematically as:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<div>\n  Calorie_Burnage = Average_Pulse * 3.1695 + Duration * 5.8424 - 334.5194 </div></div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Rounded to two decimals:",
      "html": "<p>Rounded to two decimals:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<div>\nCalorie_Burnage = Average_Pulse * 3.17 + \nDuration * 5.84 - 334.52 </div></div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Define the Linear Regression Function in Python",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Define the linear regression function in Python to perform predictions.",
      "html": "<p>Define the linear regression function in Python to perform predictions.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is Calorie_Burnage if:",
      "html": "<p>What is Calorie_Burnage if:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": "https://www.w3schools.com/datascience/trypython.asp?filename=demo_lr_case",
        "syntaxHighlighting": [
          {
            "text": "\n  def Predict_Calorie_Burnage(Average_Pulse, \nDuration):\u00a0return(3.1695*Average_Pulse + 5.8434 * Duration - 334.5194)print(Predict_Calorie_Burnage(110,60))print(Predict_Calorie_Burnage(140,45))print(Predict_Calorie_Burnage(175,20)) ",
            "color": "rgb(0, 0, 0)",
            "class": "pythoncolor"
          },
          {
            "text": "\n",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "def",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "return",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "3.1695",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "5.8434",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "334.5194",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "110",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "60",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "140",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "45",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "print",
            "color": "rgb(0, 92, 197)",
            "class": "pythonkeywordcolor"
          },
          {
            "text": "175",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          },
          {
            "text": "20",
            "color": "rgb(153, 0, 85)",
            "class": "pythonnumbercolor"
          }
        ],
        "classList": [
          "w3-code",
          "notranslate",
          "pythonHigh"
        ],
        "isNotranslate": true
      },
      "code": "def Predict_Calorie_Burnage(Average_Pulse,\nDuration):\u00a0return(3.1695*Average_Pulse + 5.8434 * Duration - 334.5194)print(Predict_Calorie_Burnage(110,60))print(Predict_Calorie_Burnage(140,45))print(Predict_Calorie_Burnage(175,20))",
      "syntax_highlighting": [
        {
          "text": "\n def Predict_Calorie_Burnage(Average_Pulse, \nDuration):\u00a0return(3.1695*Average_Pulse + 5.8434 * Duration - 334.5194)print(Predict_Calorie_Burnage(110,60))print(Predict_Calorie_Burnage(140,45))print(Predict_Calorie_Burnage(175,20)) ",
          "color": "black",
          "class": [
            "pythoncolor"
          ]
        },
        {
          "text": "\n",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "def",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "return",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "3.1695",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "5.8434",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "334.5194",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "110",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "60",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "140",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "45",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "print",
          "color": "#005cc5",
          "class": [
            "pythonkeywordcolor"
          ]
        },
        {
          "text": "175",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        },
        {
          "text": "20",
          "color": "#905",
          "class": [
            "pythonnumbercolor"
          ]
        }
      ],
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate pythonHigh\"><span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span> <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">def</span> Predict_Calorie_Burnage(Average_Pulse, \nDuration):<br/>\u00a0<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">return</span>(<span class=\"pythonnumbercolor\" style=\"color:#905\">3.1695</span>*Average_Pulse + <span class=\"pythonnumbercolor\" style=\"color:#905\">5.8434</span> * Duration - <span class=\"pythonnumbercolor\" style=\"color:#905\">334.5194</span>)<br/><br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(Predict_Calorie_Burnage(<span class=\"pythonnumbercolor\" style=\"color:#905\">110</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">60</span>))<br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(Predict_Calorie_Burnage(<span class=\"pythonnumbercolor\" style=\"color:#905\">140</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">45</span>))<br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(Predict_Calorie_Burnage(<span class=\"pythonnumbercolor\" style=\"color:#905\">175</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">20</span>)) </span></div>",
      "code_classes": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "tryItLink": "https://www.w3schools.com/datascience/trypython.asp?filename=demo_lr_case",
      "syntax_highlighting_data": [
        {
          "text": "\n  def Predict_Calorie_Burnage(Average_Pulse, \nDuration):\u00a0return(3.1695*Average_Pulse + 5.8434 * Duration - 334.5194)print(Predict_Calorie_Burnage(110,60))print(Predict_Calorie_Burnage(140,45))print(Predict_Calorie_Burnage(175,20)) ",
          "color": "rgb(0, 0, 0)",
          "class": "pythoncolor"
        },
        {
          "text": "\n",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "def",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "return",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "3.1695",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "5.8434",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "334.5194",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "110",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "60",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "140",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "45",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "print",
          "color": "rgb(0, 92, 197)",
          "class": "pythonkeywordcolor"
        },
        {
          "text": "175",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        },
        {
          "text": "20",
          "color": "rgb(153, 0, 85)",
          "class": "pythonnumbercolor"
        }
      ],
      "class_list": [
        "w3-code",
        "notranslate",
        "pythonHigh"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Answers:",
      "html": "<p>The Answers:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Access the Coefficients",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Look at the coefficients:",
      "html": "<p>Look at the coefficients:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Access the P-Value",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Look at the P-value for each coefficient.",
      "html": "<p>Look at the P-value for each coefficient.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "So here we can conclude that Average_Pulse and Duration has a relationship with Calorie_Burnage.",
      "html": "<p>So here we can conclude that Average_Pulse and Duration has a relationship with Calorie_Burnage.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Adjusted R-Squared",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "There is a problem with R-squared if we have more than one explanatory variable.",
      "html": "<p>There is a problem with R-squared if we have more than one explanatory variable. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "R-squared will almost always increase if we add more variables, and will never decrease.",
      "html": "<p>R-squared will almost always increase if we add more variables, and will never decrease. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This is because we are adding more data points around the linear regression function.",
      "html": "<p>This is because we are adding more data points around the linear regression function. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If we add random variables that does not affect Calorie_Burnage, we risk to falsely conclude that the linear regression function is a good fit. Adjusted R-squared adjusts for this problem.",
      "html": "<p>If we add random variables that does not affect Calorie_Burnage, we risk to falsely conclude that the \nlinear regression function is a good fit. Adjusted R-squared adjusts for this problem. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It is therefore better to look at the adjusted R-squared value if we have more than one explanatory variable.",
      "html": "<p>It is therefore better to look at the adjusted R-squared value if we have more than one explanatory variable. </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Adjusted R-squared is 0.814.",
      "html": "<p>The Adjusted R-squared is 0.814.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The value of R-Squared is always between 0 to 1 (0% to 100%).",
      "html": "<p>The value of R-Squared is always between 0 to 1 (0% to 100%).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Conclusion: The model fits the data point well!",
      "html": "<p>Conclusion: The model fits the data point well!</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Congratulations! You have now finished the final module of the data science library.",
      "html": "<p>Congratulations! You have now finished the final module of the data science library. </p>"
    }
  ]
}