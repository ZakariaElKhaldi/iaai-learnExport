{
  "id": "84ff0527-f0a6-4780-882e-5ce746c09fba",
  "title": "Plotly.js",
  "slug": "plotlyjs",
  "metadata": {
    "description": "Learn about Plotly.js with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "const",
      "data",
      "layout",
      "plotly",
      "title",
      "xarray",
      "yarray",
      "push",
      "define",
      "source"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnAI",
    "subcategory": "Graph Plotly.js"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Plotly.js",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Plotly.js\nis a charting library that\ncomes with over 40 chart types, 3D charts, statistical graphs, and SVG maps.\nScatter Plots\nSource Code\nconst xArray = [50,60,70,80,90,100,110,120,130,140,150];\nconst yArray = [7,8,8,9,9,9,10,11,14,14,15];\n// Define Data\nconst data = [{\nx: xArray,\ny: yArray,\nmode:\"markers\",\ntype:\"scatter\"\n}];\n// Define Layout\nconst layout = {\nxaxis: {range: [40, 160], title: \"Square Meters\"},\nyaxis: {range: [5, 16], title: \"Price in Millions\"},\ntitle: \"House Prices vs. Size\"\n};\nPlotly.newPlot(\"myPlot\", data, layout);\n\nLine Graphs\nSource Code\nconst xArray = [50,60,70,80,90,100,110,120,130,140,150];\nconst yArray = [7,8,8,9,9,9,10,11,14,14,15];\n// Define Data\nconst data = [{\nx: xArray,\ny: yArray,\nmode: \"lines\",\ntype: \"scatter\"\n}];\n// Define Layout\nconst layout = {\nxaxis: {range: [40, 160], title: \"Square Meters\"},\nyaxis: {range: [5, 16], title: \"Price in Millions\"},\ntitle: \"House Prices vs Size\"\n};\n// Display using Plotly\nPlotly.newPlot(\"myPlot\", data, layout);\n\nLinear Graphs\nSource Code\nlet exp = \"x + 17\";\n// Generate values\nconst xValues = [];\nconst yValues = [];\nfor (let x = 0; x <= 10; x += 1) {\nyValues.push(eval(exp));\nxValues.push(x);\n}\n// Define Data\nconst data = [{\nx: xValues,\ny: yValues,\nmode: \"lines\"\n}];\n// Define Layout\nconst layout = {title: \"y = \" + exp};\n// Display using Plotly\nPlotly.newPlot(\"myPlot\", data, layout);\n\nMultiple Lines\nSource Code\nlet exp1 = \"x\";\nlet exp2 = \"1.5*x\";\nlet exp3 = \"1.5*x + 7\";\n// Generate values\nconst x1Values = [];\nconst x2Values = [];\nconst x3Values = [];\nconst y1Values = [];\nconst y2Values = [];\nconst y3Values = [];\nfor (let x = 0; x <= 10; x += 1) {\nx1Values.push(x);\nx2Values.push(x);\nx3Values.push(x);\ny1Values.push(eval(exp1));\ny2Values.push(eval(exp2));\ny3Values.push(eval(exp3));\n}\n// Define Data\nconst data = [\n{x: x1Values, y: y1Values, mode:\"lines\"},\n{x: x2Values, y: y2Values, mode:\"lines\"},\n{x: x3Values, y: y3Values, mode:\"lines\"}\n];\n// Define Layout\nconst layout = {title: \"[y=\" + exp1 + \"]  [y=\" + exp2 + \"]  [y=\" + exp3 + \"]\"};\n// Display using Plotly\nPlotly.newPlot(\"myPlot\", data, layout);\n\nBar Charts\nSource Code\nconst xArray = [\"Italy\",\"France\",\"Spain\",\"USA\",\"Argentina\"];\nconst yArray = [55, 49, 44, 24, 15];\nconst data = [{\nx: xArray,\ny: yArray,\ntype: \"bar\"\u00a0\n}];\nconst layout = {title:\"World Wide Wine Production\"};\nPlotly.newPlot(\"myPlot\", data, layout);\n\nHorizontal Bar Charts\nSource Code\nconst xArray = [55, 49, 44, 24, 15];\nconst yArray = [\"Italy\",\"France\",\"Spain\",\"USA\",\"Argentina\"];\nconst data = [{\nx: xArray,\ny: yArray,\ntype: \"bar\",\norientation: \"h\"\n}];\nconst layout = {title:\"World Wide Wine Production\"};\nPlotly.newPlot(\"myPlot\", data, layout);\n\nPie Charts\nTo display a pie instead of bars, change x and y to labels and values, and change the type to \"pie\":\nconst data = [{\nlabels: xArray,\nvalues: yArray,\ntype: \"pie\"\n}];\n\nDonut Charts\nTo display a donut instead of a pie, add a hole:\nconst data = [{\nlabels: xArray,\nvalues: yArray,\nhole: .4,\ntype: \"pie\"\n}];\n\nPlotting Equations\n\nSource Code\nlet exp = \"Math.sin(x)\";\n// Generate values\nconst xValues = [];\nconst yValues = [];\nfor (let x = 0; x <= 10; x += 0.1) {\nyValues.push(eval(exp));\nxValues.push(x);\n}\n// Display using Plotly\nconst data = [{x:xValues, y:yValues, mode:\"lines\"}];\nconst layout = {title: \"y = \" + exp};\nPlotly.newPlot(\"myPlot\", data, layout);\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Source Code",
      "content": "",
      "order": 3,
      "code": "const xArray = [50,60,70,80,90,100,110,120,130,140,150];\nconst yArray = [7,8,8,9,9,9,10,11,14,14,15];\n// Define Data\nconst data = [{\nx: xArray,\ny: yArray,\nmode:\"markers\",\ntype:\"scatter\"\n}];\n// Define Layout\nconst layout = {\nxaxis: {range: [40, 160], title: \"Square Meters\"},\nyaxis: {range: [5, 16], title: \"Price in Millions\"},\ntitle: \"House Prices vs. Size\"\n};\nPlotly.newPlot(\"myPlot\", data, layout);",
      "language": "javascript",
      "explanation": "Example of source code"
    },
    {
      "type": "code_example",
      "title": "Source Code",
      "content": "",
      "order": 4,
      "code": "const xArray = [50,60,70,80,90,100,110,120,130,140,150];\nconst yArray = [7,8,8,9,9,9,10,11,14,14,15];\n// Define Data\nconst data = [{\nx: xArray,\ny: yArray,\nmode: \"lines\",\ntype: \"scatter\"\n}];\n// Define Layout\nconst layout = {\nxaxis: {range: [40, 160], title: \"Square Meters\"},\nyaxis: {range: [5, 16], title: \"Price in Millions\"},\ntitle: \"House Prices vs Size\"\n};\n// Display using Plotly\nPlotly.newPlot(\"myPlot\", data, layout);",
      "language": "javascript",
      "explanation": "Example of source code"
    },
    {
      "type": "code_example",
      "title": "Source Code",
      "content": "",
      "order": 5,
      "code": "let exp = \"x + 17\";\n// Generate values\nconst xValues = [];\nconst yValues = [];\nfor (let x = 0; x <= 10; x += 1) {\nyValues.push(eval(exp));\nxValues.push(x);\n}\n// Define Data\nconst data = [{\nx: xValues,\ny: yValues,\nmode: \"lines\"\n}];\n// Define Layout\nconst layout = {title: \"y = \" + exp};\n// Display using Plotly\nPlotly.newPlot(\"myPlot\", data, layout);",
      "language": "javascript",
      "explanation": "Example of source code"
    },
    {
      "type": "code_example",
      "title": "Source Code",
      "content": "",
      "order": 6,
      "code": "let exp1 = \"x\";\nlet exp2 = \"1.5*x\";\nlet exp3 = \"1.5*x + 7\";\n// Generate values\nconst x1Values = [];\nconst x2Values = [];\nconst x3Values = [];\nconst y1Values = [];\nconst y2Values = [];\nconst y3Values = [];\nfor (let x = 0; x <= 10; x += 1) {\nx1Values.push(x);\nx2Values.push(x);\nx3Values.push(x);\ny1Values.push(eval(exp1));\ny2Values.push(eval(exp2));\ny3Values.push(eval(exp3));\n}\n// Define Data\nconst data = [\n{x: x1Values, y: y1Values, mode:\"lines\"},\n{x: x2Values, y: y2Values, mode:\"lines\"},\n{x: x3Values, y: y3Values, mode:\"lines\"}\n];\n// Define Layout\nconst layout = {title: \"[y=\" + exp1 + \"]  [y=\" + exp2 + \"]  [y=\" + exp3 + \"]\"};\n// Display using Plotly\nPlotly.newPlot(\"myPlot\", data, layout);",
      "language": "javascript",
      "explanation": "Example of source code"
    },
    {
      "type": "code_example",
      "title": "Source Code",
      "content": "",
      "order": 7,
      "code": "const xArray = [\"Italy\",\"France\",\"Spain\",\"USA\",\"Argentina\"];\nconst yArray = [55, 49, 44, 24, 15];\nconst data = [{\nx: xArray,\ny: yArray,\ntype: \"bar\"\u00a0\n}];\nconst layout = {title:\"World Wide Wine Production\"};\nPlotly.newPlot(\"myPlot\", data, layout);",
      "language": "javascript",
      "explanation": "Example of source code"
    },
    {
      "type": "code_example",
      "title": "Source Code",
      "content": "",
      "order": 8,
      "code": "const xArray = [55, 49, 44, 24, 15];\nconst yArray = [\"Italy\",\"France\",\"Spain\",\"USA\",\"Argentina\"];\nconst data = [{\nx: xArray,\ny: yArray,\ntype: \"bar\",\norientation: \"h\"\n}];\nconst layout = {title:\"World Wide Wine Production\"};\nPlotly.newPlot(\"myPlot\", data, layout);",
      "language": "javascript",
      "explanation": "Example of source code"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "const data = [{\nlabels: xArray,\nvalues: yArray,\ntype: \"pie\"\n}];",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "const data = [{\nlabels: xArray,\nvalues: yArray,\nhole: .4,\ntype: \"pie\"\n}];",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Source Code",
      "content": "",
      "order": 11,
      "code": "let exp = \"Math.sin(x)\";\n// Generate values\nconst xValues = [];\nconst yValues = [];\nfor (let x = 0; x <= 10; x += 0.1) {\nyValues.push(eval(exp));\nxValues.push(x);\n}\n// Display using Plotly\nconst data = [{x:xValues, y:yValues, mode:\"lines\"}];\nconst layout = {title: \"y = \" + exp};\nPlotly.newPlot(\"myPlot\", data, layout);",
      "language": "javascript",
      "explanation": "Example of source code"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "const xArray = [50,60,70,80,90,100,110,120,130,140,150];\nconst yArray = [7,8,8,9,9,9,10,11,14,14,15];\n// Define Data\nconst data = [{\nx: xArray,\ny: yArray,\nmode:\"markers\",\ntype:\"scatter\"\n}];\n// Define Layout\nconst layout = {\n# TODO: Complete this line\nyaxis: {range: [5, 16], title: \"Price in Millions\"},\ntitle: \"House Prices vs. Size\"\n};\nPlotly.newPlot(\"myPlot\", data, layout);",
      "solution": "const xArray = [50,60,70,80,90,100,110,120,130,140,150];\nconst yArray = [7,8,8,9,9,9,10,11,14,14,15];\n// Define Data\nconst data = [{\nx: xArray,\ny: yArray,\nmode:\"markers\",\ntype:\"scatter\"\n}];\n// Define Layout\nconst layout = {\nxaxis: {range: [40, 160], title: \"Square Meters\"},\nyaxis: {range: [5, 16], title: \"Price in Millions\"},\ntitle: \"House Prices vs. Size\"\n};\nPlotly.newPlot(\"myPlot\", data, layout);"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "const xArray = [50,60,70,80,90,100,110,120,130,140,150];\nconst yArray = [7,8,8,9,9,9,10,11,14,14,15];\n// Define Data\nconst data = [{\nx: xArray,\ny: yArray,\nmode: \"lines\",\ntype: \"scatter\"\n}];\n# TODO: Complete this line\nconst layout = {\nxaxis: {range: [40, 160], title: \"Square Meters\"},\nyaxis: {range: [5, 16], title: \"Price in Millions\"},\ntitle: \"House Prices vs Size\"\n};\n// Display using Plotly\nPlotly.newPlot(\"myPlot\", data, layout);",
      "solution": "const xArray = [50,60,70,80,90,100,110,120,130,140,150];\nconst yArray = [7,8,8,9,9,9,10,11,14,14,15];\n// Define Data\nconst data = [{\nx: xArray,\ny: yArray,\nmode: \"lines\",\ntype: \"scatter\"\n}];\n// Define Layout\nconst layout = {\nxaxis: {range: [40, 160], title: \"Square Meters\"},\nyaxis: {range: [5, 16], title: \"Price in Millions\"},\ntitle: \"House Prices vs Size\"\n};\n// Display using Plotly\nPlotly.newPlot(\"myPlot\", data, layout);"
    }
  ],
  "related_topics": [
    {
      "id": "b708f68e-da81-4044-bccb-8fb1bdb32e63",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "730e2122-0ee0-4bc6-98ee-5993fd02de32",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "95b2cc41-1bb9-4bf8-b0ad-b48028767d21",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is js?",
      "options": [
        "None of the above.",
        "None of the above.",
        "a charting library that\ncomes with over 40 chart types",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of js is 'a charting library that\ncomes with over 40 chart types'."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers Plotly.js concepts and techniques. You'll learn how to use Plotly.js effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Plotly.js and how to apply it in your projects."
}