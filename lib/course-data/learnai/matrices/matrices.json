{
  "id": "a97be905-4489-4aa7-a027-a567dc67767f",
  "title": "Matrices",
  "slug": "matrices",
  "metadata": {
    "description": "Learn about Matrices with clear explanations and practical examples.",
    "keywords": [
      "c",
      "matrix",
      "math",
      "const",
      "matrices",
      "multiply",
      "rows",
      "columns",
      "scalar",
      "result",
      "example"
    ],
    "difficulty": "advanced",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnAI",
    "subcategory": "Matrices"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Matrices",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Matrices\n\nA matrix is set of\nNumbers",
      "content": ".\nA matrix is an\nRectangular Array\n.\nA matrix is arranged in\nRows\nand\nColumns\n.\nMatrix Dimensions\nThis\nMatrix\nhas\n1\nrow and\n3\ncolumns:\nC =\n2\n5\n3\nThe\nDimension\nof the matrix is (\n1\nx\n3\n).\nThis matrix has\n2\nrows and\n3\ncolumns:\nC =\n2\n5\n3\n4\n7\n1\nThe dimension of the matrix is (\n2\nx\n3\n).\nSquare Matrices\nA\nSquare Matrix\nis a matrix with the same number of rows and columns.\nAn n-by-n matrix is known as a square matrix of order n.\nA\n2-by-2\nmatrix (Square matrix of order 2):\nC =\n1\n2\n3\n4\nA\n4-by-4\nmatrix (Square matrix of order 4):\nC =\n1\n-2\n3\n4\n5\n6\n-7\n8\n4\n3\n2\n-1\n8\n7\n6\n-5\nDiagonal Matrices\nA\nDiagonal Matrix\nhas values on the diagonal entries, and\nzero\non the rest:\nC =\n2\n0\n0\n0\n5\n0\n0\n0\n3\nScalar Matrices\nA\nScalar Matrix\nhas equal diagonal entries and\nzero\non the rest:\nC =\n3\n0\n0\n0\n0\n3\n0\n0\n0\n0\n3\n0\n0\n0\n0\n3\nThe Identity Matrix\nThe\nIdentity Matrix\nhas\n1\non the diagonal and\n0\non the rest.\nThis is the matrix equivalent of 1. The symbol is\nI\n.\nI =\n1\n0\n0\n0\n0\n1\n0\n0\n0\n0\n1\n0\n0\n0\n0\n1\nIf you multiply any matrix with the identity matrix, the result equals the original.\nThe Zero Matrix\nThe\nZero Matrix\n(Null Matrix) has only zeros.\nC =\n0\n0\n0\n0\n0\n0\nEqual Matrices\nMatrices are\nEqual\nif each element correspond:\n2\n5\n3\n4\n7\n1\n=\n2\n5\n3\n4\n7\n1\nNegative Matrices\nThe\nNegative\nof a matrix is easy to understand:\n-\n-2\n5\n3\n-4\n7\n1\n=\n2\n-5\n-3\n4\n-7\n-1\nLinear Algebra in JavaScript\nIn linear algebra, the most simple math object is the\nScalar\n:\nconst scalar = 1;\nAnother simple math object is the\nArray\n:\nconst array = [ 1, 2, 3 ];\nMatrices are\n2-dimensional Arrays\n:\nconst matrix = [ [1,2],[3,4],[5,6] ];\nVectors can be written as\nMatrices\nwith only one column:\nconst vector = [ [1],[2],[3] ];\nVectors can also be written as\nArrays\n:\nconst vector = [ 1, 2, 3 ];\nJavaScript Matrix Operations\nProgramming matrix operations in JavaScript, can easily become a spaghetti of loops.\nUsing a JavaScript library will save you a lot of headache.\nOne of the most common libraries to use for matrix operations is called\nmath.js\n.\nIt can be added to your web page with one line of code:\nUsing math.js\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjs/9.3.2/math.js\"></script>\nAdding Matrices\nIf two matrices have the same dimension, we can add them:\n2\n5\n3\n4\n7\n1\n+\n4\n7\n1\n2\n5\n3\n=\n6\n12\n4\n6\n12\n4\nExample\nconst mA = math.matrix([[1, 2], [3, 4], [5, 6]]);\nconst mB = math.matrix([[1,-1], [2,-2], [3,-3]]);\n// Matrix Addition\nconst matrixAdd = math.add(mA, mB);\n// Result [ [2, 1], [5, 2], [8, 3] ]\n\nSubtracting Matrices\nIf two matrices have the same dimension, we can subtract them:\n2\n5\n3\n4\n7\n1\n-\n4\n7\n1\n2\n5\n3\n=\n-2\n-2\n2\n2\n2\n-2\nExample\nconst mA = math.matrix([[1, 2], [3, 4], [5, 6]]);\nconst mB = math.matrix([[1,-1], [2,-2], [3,-3]]);\n// Matrix Subtraction\nconst matrixSub = math.subtract(mA, mB);\n// Result [ [0, 3], [1, 6], [2, 9] ]\n\nTo add or subtract matrices, they must have the same dimension.\nScalar Multiplication\nWhile numbers in rows and columns are called\nMatrices\n, single numbers are called\nScalars\n.\nIt is easy to multiply a matrix with a scalar. Just multiply each number in the matrix with the scalar:\n2\n5\n3\n4\n7\n1\nx 2 =\n4\n10\n6\n8\n14\n2\nExample\nconst mA = math.matrix([[1, 2], [3, 4], [5, 6]]);\n// Matrix Multiplication\nconst matrixMult = math.multiply(2, mA);\n// Result [ [2, 4], [6, 8], [10, 12] ]\n\nExample\nconst mA = math.matrix([[0, 2], [4, 6], [8, 10]]);\n// Matrix Division\nconst matrixDiv = math.divide(mA, 2);\n// Result [ [0, 1], [2, 3], [4, 5] ]\n\nTranspose a Matrix\nTo transpose a matrix, means to replace rows with columns.\nWhen you swap rows and columns, you rotate the matrix around it's diagonal.\nA =\n1\n2\n3\n4",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "A\nT",
      "content": "=\n1\n3\n2\n4\nMultiplying Matrices\nMultiplying matrices is more difficult.\nWe can only multiply two matrices if the number of\ncolums\nin matrix A is the same as the number of\nrows\nin matrix B.\nThen, we need to compile a \"dot product\":\nWe need to multiply the numbers in each\ncolumn of A\nwith the numbers in each\nrow of B\n, and then add the products:\nExample\nconst mA = math.matrix([1, 2, 3]);\nconst mB = math.matrix([[1, 4, 7], [2, 5, 8], [3, 6, 9]]);\n// Matrix Multiplication\nconst matrixMult = math.multiply(mA, mB);\n// Result [14, 32, 50]\n\nExplained:\nA\nB\nC\n1\n2\n3\nx\n1\n4\n7\n2\n5\n8\n3\n6\n9\n=\n14\n32\n50\n(1,2,3) * (1,2,3) = 1x1 + 2x2 + 3x3 =\n14\n(1,2,3) * (4,5,6) = 1x4 + 2x5 + 3x6 =\n32\n(1,2,3) * (7,8,9) = 1x7 + 2x8 + 3x9 =\n50\nIf you know how to multiply matrices, you can solve many complex equations.\nExample\nYou sell roses.\nRed roses are $3 each\nWhite roses are $4 each\nYellow roses are $2 each\nMonday you sold 260 roses\nTuesday you sold 200 roses\nWednesday you sold 120 roses\nWhat was the value of all the sales?\n$3\n$4\n$2\nMon\n120\n80\n60\nTue\n90\n70\n40\nWed\n60\n40\n20\nExample\nconst mA = math.matrix([3, 4, 2]);\nconst mB = math.matrix([[120, 90, 60], [80, 70, 40], [60, 40, 20]);\n// Matrix Multiplication\nconst matrixMult = math.multiply(mA, mB);\n// Result [800, 630, 380]\n\nExplained:\nA\nB\n$3\n$4\n$2\nx\n120\n90\n60\n80\n70\n40\n60\n40\n20\n=\n$800\n$630\n$380\n=\n$1810\n(3,4,2) * (120,80,60)\n= 3x120 + 4x80 + 2x60\n= 800\n(3,4,2) * (90,70,40)\n= 3x90 + 4x70 + 2x40\n= 630\n(3,4,2) * (60,40,20)\n= 3x60 + 4x40 + 2x20\n= 380\nMatrix Factorization\nWith AI, you need to know how to factorize a matrix.\nMatrix factorization is a key tool in linear algebra, especially in Linear Least Squares.\n\n\u2605\n+1",
      "order": 3,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "const scalar = 1;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "const array = [ 1, 2, 3 ];",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "const matrix = [ [1,2],[3,4],[5,6] ];",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "const vector = [ [1],[2],[3] ];",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "const vector = [ 1, 2, 3 ];",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Using math.js",
      "content": "",
      "order": 9,
      "code": "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjs/9.3.2/math.js\"></script>",
      "language": "html",
      "explanation": "Example of using math.js"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "const mA = math.matrix([[1, 2], [3, 4], [5, 6]]);\nconst mB = math.matrix([[1,-1], [2,-2], [3,-3]]);\n// Matrix Addition\nconst matrixAdd = math.add(mA, mB);\n// Result [ [2, 1], [5, 2], [8, 3] ]",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "const mA = math.matrix([[1, 2], [3, 4], [5, 6]]);\nconst mB = math.matrix([[1,-1], [2,-2], [3,-3]]);\n// Matrix Subtraction\nconst matrixSub = math.subtract(mA, mB);\n// Result [ [0, 3], [1, 6], [2, 9] ]",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": "const mA = math.matrix([[1, 2], [3, 4], [5, 6]]);\n// Matrix Multiplication\nconst matrixMult = math.multiply(2, mA);\n// Result [ [2, 4], [6, 8], [10, 12] ]",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 13,
      "code": "const mA = math.matrix([[0, 2], [4, 6], [8, 10]]);\n// Matrix Division\nconst matrixDiv = math.divide(mA, 2);\n// Result [ [0, 1], [2, 3], [4, 5] ]",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 14,
      "code": "const mA = math.matrix([1, 2, 3]);\nconst mB = math.matrix([[1, 4, 7], [2, 5, 8], [3, 6, 9]]);\n// Matrix Multiplication\nconst matrixMult = math.multiply(mA, mB);\n// Result [14, 32, 50]",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 15,
      "code": "const mA = math.matrix([3, 4, 2]);\nconst mB = math.matrix([[120, 90, 60], [80, 70, 40], [60, 40, 20]);\n// Matrix Multiplication\nconst matrixMult = math.multiply(mA, mB);\n// Result [800, 630, 380]",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "const scalar = 1;"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "const array = [ 1, 2, 3 ];"
    }
  ],
  "related_topics": [
    {
      "id": "1d8fccfd-77e9-4e5f-898e-3f53bf34cc8f",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "69f4ec5c-edbf-4715-8370-cce731537012",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "1c2f6d3b-96df-4f08-b1ba-ee4673ba5ccf",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Matrices\n\nA matrix?",
      "options": [
        "None of the above.",
        "set of\nNumbers",
        "an\nRectangular Array",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Matrices\n\nA matrix is 'set of\nNumbers'."
    },
    {
      "question": "What is A matrix?",
      "options": [
        "an\nRectangular Array",
        "None of the above.",
        "None of the above.",
        "set of\nNumbers"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of A matrix is 'an\nRectangular Array'."
    }
  ],
  "summary": "This tutorial covers Matrices concepts and techniques. You'll learn how to use Matrices effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Matrices and how to apply it in your projects."
}