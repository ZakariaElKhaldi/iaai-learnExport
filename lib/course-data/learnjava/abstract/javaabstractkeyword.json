{
  "id": "943928a7-9c51-4a30-9e06-a4d333005390",
  "title": "JavaabstractKeyword",
  "slug": "javaabstractkeyword",
  "metadata": {
    "description": "Learn about JavaabstractKeyword with clear explanations and practical examples.",
    "keywords": [
      "abstract",
      "class",
      "main",
      "method",
      "public",
      "java",
      "body",
      "myobj",
      "student",
      "system"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "Java Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJava",
    "subcategory": "abstract"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Java\nabstract\nKeyword",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nAn\nabstract\nmethod belongs to an\nabstract\nclass, and it does not have a body. \nThe body is provided by the subclass:\n// Code from filename: Main.java\n// abstract class\nabstract class Main {\n\u00a0 public String fname = \"John\";\n\u00a0 public int age = 24;\n\u00a0 public\nabstract\nvoid study(); // abstract method\n}\n\n// Subclass (inherit from Main)\nclass Student extends Main {\n\u00a0 public int graduationYear = 2018;\n\u00a0 public void study() { // the body of the abstract method is provided here\n\u00a0\u00a0\u00a0 System.out.println(\"Studying all day long\");\n\u00a0 }\n}\n// End code from filename: Main.java\n\n// Code from filename: Second.java\nclass Second {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 // create an object of the Student class (which inherits attributes and methods from Main)\n\u00a0\u00a0\u00a0 Student myObj = new Student();\n\nSystem.out.println(\"Name: \" + myObj.fname);\n\u00a0\u00a0\u00a0 System.out.println(\"Age: \" + myObj.age);\n\u00a0\u00a0\u00a0 System.out.println(\"Graduation Year: \" + myObj.graduationYear);\n\u00a0\u00a0\u00a0 myObj.study(); // call abstract method\n\u00a0 }\n}\n\nDefinition and Usage\nThe\nabstract\nkeyword is a non-access modifier, used for classes and methods.\nClass:\nAn abstract class is a restricted class that cannot be used to create objects (to access it, it must be inherited from another class).\nMethod:\nAn abstract method can only be used in an abstract class, and it does not have a body. The body is provided by the subclass (inherited from).\nRelated Pages\nRead more about modifiers in our\nJava Modifiers Tutorial\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Implement a Function",
      "description": "Create a function that demonstrates the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Write your java function here\n",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "dfa908ee-4ff3-4ade-8ddb-cc5fa580d997",
      "title": "Java Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "93b3edcb-ced0-4b50-a641-098846947daf",
      "title": "Java Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "9d35c6b3-3081-4145-920e-ba1a6d7942ee",
      "title": "Java Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The body?",
      "options": [
        "None of the above.",
        "provided here\n\u00a0\u00a0\u00a0 System",
        "None of the above.",
        "provided by the subclass:\n// Code from filename: Main"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of The body is 'provided by the subclass:\n// Code from filename: Main'."
    },
    {
      "question": "What is the body of the abstract method?",
      "options": [
        "None of the above.",
        "provided here\n\u00a0\u00a0\u00a0 System",
        "None of the above.",
        "provided by the subclass:\n// Code from filename: Main"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of the body of the abstract method is 'provided here\n\u00a0\u00a0\u00a0 System'."
    }
  ],
  "summary": "This tutorial covers JavaabstractKeyword concepts and techniques. You'll learn how to use JavaabstractKeyword effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaabstractKeyword and how to apply it in your projects."
}