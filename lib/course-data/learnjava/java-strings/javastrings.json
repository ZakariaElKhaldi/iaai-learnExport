{
  "id": "a47b7095-1bd5-49b4-abbd-1e47ab194891",
  "title": "JavaStrings",
  "slug": "javastrings",
  "metadata": {
    "description": "Learn about JavaStrings with clear explanations and practical examples.",
    "keywords": [
      "string",
      "java",
      "example",
      "methods",
      "strings",
      "length",
      "hello",
      "system",
      "println",
      "reference"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Java Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJava",
    "subcategory": "Java Strings"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Java\nStrings",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Java Strings\nStrings are used for storing text.\nA\nString\nvariable contains a collection of characters surrounded by double quotes:\nExample\nCreate a variable of type\nString\nand assign it a value:\nString greeting = \"Hello\";\n\nString Length\nA String in Java is actually an object, which contain methods that can perform certain operations on strings. For example, the length of a string can be found with the\nlength()\nmethod:\nExample\nString txt = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nSystem.out.println(\"The length of the txt string is: \" + txt.length());\n\nMore String Methods\nThere are many string methods available, for example\ntoUpperCase()\nand\ntoLowerCase()\n:\nExample\nString txt = \"Hello World\";\nSystem.out.println(txt.toUpperCase());\u00a0\u00a0 // Outputs \"HELLO WORLD\"\nSystem.out.println(txt.toLowerCase());\u00a0\u00a0 // Outputs \"hello world\"\n\nFinding a Character in a String\nThe\nindexOf()\nmethod returns the\nindex\n(the position) \nof the first occurrence of a specified text in a string \n(including whitespace):\nExample\nString txt = \"Please locate where 'locate' occurs!\";\nSystem.out.println(txt.indexOf(\"locate\")); // Outputs 7\n\nJava counts positions from zero.\n0 is the first position in a \nstring, 1 is the second, 2 is the third ...\nComplete String Reference\nFor a complete reference of String methods, go to our\nJava String Methods Reference\n.\nThe reference contains descriptions and examples of all string methods.\nVideo: Java Strings\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Implement a Function",
      "description": "Create a function that demonstrates the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Write your java function here\n",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "3b3afec0-686a-4ed1-a313-eff119d6186b",
      "title": "Java Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "49d79e26-5076-44d5-a9e0-13641a2122fb",
      "title": "Java Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "8898cf8b-c85e-4701-985d-a5dbcddab98d",
      "title": "Java Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Java\nStrings\n\nJava Strings\nStrings?",
      "options": [
        "None of the above.",
        "None of the above.",
        "actually an object",
        "used for storing text"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Java\nStrings\n\nJava Strings\nStrings is 'used for storing text'."
    },
    {
      "question": "What is String Length\nA String in Java?",
      "options": [
        "used for storing text",
        "None of the above.",
        "actually an object",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of String Length\nA String in Java is 'actually an object'."
    }
  ],
  "summary": "This tutorial covers JavaStrings concepts and techniques. You'll learn how to use JavaStrings effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaStrings and how to apply it in your projects."
}