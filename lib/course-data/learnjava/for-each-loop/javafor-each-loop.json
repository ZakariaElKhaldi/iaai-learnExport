{
  "id": "c095cc9c-d1a0-4e81-8b58-fc8b8ac50c4f",
  "title": "JavaFor Each Loop",
  "slug": "javafor-each-loop",
  "metadata": {
    "description": "Learn about JavaFor Each Loop with clear explanations and practical examples.",
    "keywords": [
      "loop",
      "example",
      "cars",
      "java",
      "elements",
      "array",
      "string",
      "arrays",
      "also",
      "used"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Java Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJava",
    "subcategory": "For-Each Loop"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Java\nFor Each Loop",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "For-Each Loop\nThere is also a \"\nfor-each\n\" loop, which is used exclusively to loop through elements in an\narray\n(or other data sets):\nSyntax\nfor (\ntype\nvariableName\n:\narrayName\n) {\n// code block to be executed\n}\nThe following example outputs all elements in the\ncars\narray, using a \"\nfor-each\n\" loop:\nExample\nString[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\nfor (String i : cars) {\n\u00a0 System.out.println(i);\n}\n\nNote:\nDon't worry if you don't understand the example above. You will learn more about Arrays in the\nJava Arrays chapter\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Implement a Function",
      "description": "Create a function that demonstrates the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Write your java function here\n",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "caa1f86a-ed03-4d29-9851-4b20bbb368f4",
      "title": "Java Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "9ffe7688-62b5-4345-b0e1-0e601718e68b",
      "title": "Java Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "4b318ed6-d0ab-4c1d-b578-eca6f91ac1d8",
      "title": "Java Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Each Loop\nThere?",
      "options": [
        "None of the above.",
        "also a \"\nfor-each\n\" loop",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Each Loop\nThere is 'also a \"\nfor-each\n\" loop'."
    },
    {
      "question": "Which best describes the main purpose of this java feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers JavaFor Each Loop concepts and techniques. You'll learn how to use JavaFor Each Loop effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaFor Each Loop and how to apply it in your projects."
}