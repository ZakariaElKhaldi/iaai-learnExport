{
  "id": "9c039e74-bd1f-41bb-8af3-338bf4aec4ce",
  "title": "JavaGetting Started",
  "slug": "javagetting-started",
  "metadata": {
    "description": "Learn about JavaGetting Started with clear explanations and practical examples.",
    "keywords": [
      "java",
      "main",
      "code",
      "editor",
      "public",
      "class",
      "hello",
      "world",
      "installed",
      "name"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Java Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJava",
    "subcategory": "Java Get Started"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Java\nGetting Started",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Get Started With Java\nAt , you can try Java without installing anything.\nOur Online Java Editor runs directly in your browser, and shows both the code and the result:\nMain.java\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 System.out.println(\"Hello World\");\n\u00a0 }\n}\n\nThis editor will be used in the entire tutorial to demonstrate the different aspects of Java.\nJava Install\nHowever, if you want to download and install Java, follow the instructions here.\nSome PCs might have Java already installed.\nTo check if you have Java installed on a Windows PC, search in the start bar for Java or type the following in Command Prompt (cmd.exe):\nC:\\Users\\\nYour Name\n>java -version\nIf Java is installed, you will see something like this (depending on version):\njava version \"22.0.0\" 2024-08-21 LTS\nJava(TM) SE Runtime Environment 22.9 (build 22.0.0+13-LTS)\nJava HotSpot(TM) 64-Bit Server VM 22.9 (build 22.0.0+13-LTS, mixed mode)\nIf you do not have Java installed on your computer, you can download it at\noracle.com\n.\nNote:\nIn this tutorial, we will write Java code in a text editor. However, it is possible to write Java in an Integrated Development Environment, such as IntelliJ IDEA, Netbeans or Eclipse, which are particularly useful when managing larger collections of Java files.\nJava Quickstart\nIn Java, every application begins with a class name, and that class must match the filename.\nLet's create our first Java file, called Main.java, which can be done in any text editor \n(like Notepad).\nThe file should contain a \"Hello World\" message, which is written with the \nfollowing code:\nMain.java\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 System.out.println(\"Hello World\");\n\u00a0 }\n}\n\nDon't worry if you don't understand the code above - we will discuss it in detail in later chapters. \nFor now, focus on\nhow\nto run the code above.\nSave the code in Notepad as \"Main.java\". Open Command Prompt (cmd.exe), navigate to the directory where you saved your file, and type \"javac \nMain.java\":\nC:\\Users\\\nYour Name\n>javac Main.java\nThis will compile your code. If there are no errors in the code, the command prompt will take you to the \nNow, type \"java Main\" to run the file:\nC:\\Users\\\nYour Name\n>java Main\nThe output should read:\nHello World\n\nCongratulations!\nYou have written and executed your first Java program.\nVideo: Java Get Started\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "C:\\Users\\\nYour Name\n>java -version",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "C:\\Users\\\nYour Name\n>javac Main.java",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "C:\\Users\\\nYour Name\n>java Main",
      "language": "unknown",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "C:\\Users\\\n# TODO: Complete this line\n>java -version",
      "solution": "C:\\Users\\\nYour Name\n>java -version"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "C:\\Users\\\n# TODO: Complete this line\n>javac Main.java",
      "solution": "C:\\Users\\\nYour Name\n>javac Main.java"
    }
  ],
  "related_topics": [
    {
      "id": "f2fa76e6-39f1-42b0-8e7c-da1ca522eeb0",
      "title": "Java Functions and Methods",
      "relationship": "next_topic"
    },
    {
      "id": "3ae04cad-e886-45b7-823a-89c9305429cf",
      "title": "Java Data Structures",
      "relationship": "suggested_next"
    }
  ],
  "quiz": [
    {
      "question": "What is version\nIf Java?",
      "options": [
        "installed",
        "None of the above.",
        "possible to write Java in an Integrated Development Environment",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of version\nIf Java is 'installed'."
    },
    {
      "question": "What is it?",
      "options": [
        "possible to write Java in an Integrated Development Environment",
        "None of the above.",
        "None of the above.",
        "installed"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of it is 'possible to write Java in an Integrated Development Environment'."
    }
  ],
  "summary": "This tutorial covers JavaGetting Started concepts and techniques. You'll learn how to use JavaGetting Started effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaGetting Started and how to apply it in your projects."
}