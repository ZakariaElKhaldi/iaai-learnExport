{
  "id": "9fd75907-687e-447b-beb0-567325b44dbd",
  "title": "JavaHow To Add Two Numbers",
  "slug": "javahow-to-add-two-numbers",
  "metadata": {
    "description": "Learn about JavaHow To Add Two Numbers with clear explanations and practical examples.",
    "keywords": [
      "numbers",
      "system",
      "scanner",
      "println",
      "java",
      "example",
      "myobj",
      "learn",
      "print",
      "user"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Java Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJava",
    "subcategory": "Add Two Numbers"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Java\nHow To Add Two Numbers",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Add Two Numbers\nLearn how to add two numbers in Java:\nExample\nint x = 5;\nint y = 6;\nint sum = x + y;\nSystem.out.println(sum); // Print the sum of x + y\n\nAdd Two Numbers with User Input\nLearn how to add two numbers with user input:\nExample\nimport java.util.Scanner; // Import the Scanner class\n\nclass MyClass {\n  public static void main(String[] args) {\n    int x, y, sum;\n    Scanner myObj = new Scanner(System.in); // Create a Scanner object\n    System.out.println(\"Type a number:\");\n    x = myObj.\n\nSystem.out.println(\"Type another number:\");\n    y = myObj.\n\nsum = x + y;  // Calculate the sum of x + y\n    System.out.println(\"Sum is: \" + sum); // Print the sum\n  }\n}\nRun Example \u00bb\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Implement a Function",
      "description": "Create a function that demonstrates the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Write your java function here\n",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "1b1c53ac-775a-4b35-bba3-e52cde379771",
      "title": "Java Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "b138a0c1-4e00-4607-b67b-81e08e52cafd",
      "title": "Java Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "b1841cdc-6595-486e-8bbd-72142c8ec0dd",
      "title": "Java Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this java feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this java feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers JavaHow To Add Two Numbers concepts and techniques. You'll learn how to use JavaHow To Add Two Numbers effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaHow To Add Two Numbers and how to apply it in your projects."
}