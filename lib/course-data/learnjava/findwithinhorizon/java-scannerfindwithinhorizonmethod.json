{
  "id": "5071fc34-f96f-4052-a2b1-d84ec6b7bdd0",
  "title": "Java ScannerfindWithinHorizon()Method",
  "slug": "java-scannerfindwithinhorizonmethod",
  "metadata": {
    "description": "Learn about Java ScannerfindWithinHorizon()Method with clear explanations and practical examples.",
    "keywords": [
      "email",
      "pattern",
      "string",
      "scanner",
      "findwithinhorizon",
      "found",
      "match",
      "horizon",
      "parameter",
      "object"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Java Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJava",
    "subcategory": "findWithinHorizon()"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Java Scanner\nfindWithinHorizon",
      "content": "()\nMethod\n\nExample\nFind an email address in a line of text:\n// Create a scanner object\nScanner myObj = new Scanner(\"Please send an email to info@example.com for more details.\");\n\n// Get the email address with a pattern\nString email = myObj.findWithinHorizon(\"[a-zA-Z]+@[a-zA-Z]+.[a-zA-Z]{2,}\", 0);\n\n// Show the email if found\nif (email != null) {\n  System.out.println(email);\n} else {\n  System.out.println(\"No email found\");\n}\nDefinition and Usage\nThe\nfindWithinHorizon()\nmethod searches through a specified number of characters for the first match of a regular expression provided by a\nPattern\nobject or a string. If a match is not found then it returns\nnull\n.\nThe number of characters to search is specified by the\nhorizon\nparameter, if it is set to zero then it continues searching without limit.\nIf a match is found the scanner advances to the first character following the match.\nLearn more about the regular expressions in our\nJava RegEx tutorial\n.\nSyntax\nOne of the following:\npublic String findWithinHorizon(Pattern\npattern\n, int\nhorizon\n)\npublic String findWithinHorizon(String\npattern\n, int\nhorizon\n)\nParameter Values\nParameter\nDescription\npattern\nRequired. A string or\nPattern\nobject. Specifies the regular expression used in the search.\nhorizon\nRequired. Specifies a limit for how far ahead to search. If the value is zero then there is no limit.\nTechnical Details\nReturns:\nA\nString\ncontaining the matched text or\nnull\nif no match was found.\nThrows:",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "IllegalStateException",
      "content": "- If the scanner has been closed.",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "IllegalArgumentException",
      "content": "- If the\nhorizon\nparameter is negative.\n\n\u2605\n+1",
      "order": 3,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Implement a Function",
      "description": "Create a function that demonstrates the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Write your java function here\n",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "d6758f9b-e51b-4465-9032-10341f384ac2",
      "title": "Java Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "f5e93f20-b5e1-4b47-b0d7-c9eea9aed9b8",
      "title": "Java Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "4e86d7a4-8b3e-4963-964f-0af27ec79d6f",
      "title": "Java Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is If a match?",
      "options": [
        "None of the above.",
        "None of the above.",
        "not found then it returns\nnull",
        "specified by the\nhorizon\nparameter"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of If a match is 'not found then it returns\nnull'."
    },
    {
      "question": "What is The number of characters to search?",
      "options": [
        "specified by the\nhorizon\nparameter",
        "None of the above.",
        "None of the above.",
        "not found then it returns\nnull"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of The number of characters to search is 'specified by the\nhorizon\nparameter'."
    }
  ],
  "summary": "This tutorial covers Java ScannerfindWithinHorizon()Method concepts and techniques. You'll learn how to use Java ScannerfindWithinHorizon()Method effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Java ScannerfindWithinHorizon()Method and how to apply it in your projects."
}