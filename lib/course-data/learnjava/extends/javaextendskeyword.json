{
  "id": "56abcf86-16d5-46ef-bfd2-61214ef1463d",
  "title": "JavaextendsKeyword",
  "slug": "javaextendskeyword",
  "metadata": {
    "description": "Learn about JavaextendsKeyword with clear explanations and practical examples.",
    "keywords": [
      "class",
      "vehicle",
      "mycar",
      "extends",
      "java",
      "keyword",
      "string",
      "brand",
      "attribute",
      "honk"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "Java Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJava",
    "subcategory": "extends"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "Java\nextends\nKeyword",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Example\nThe\nCar\nclass \n(subclass) inherits the attributes and methods from the\nVehicle\nclass \n(superclass):\nclass Vehicle {\n\u00a0 protected String brand = \"Ford\";\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 // Vehicle attribute\n\u00a0 public void honk() {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Vehicle method\n\u00a0\u00a0\u00a0 System.out.println(\"Tuut, tuut!\");\n\u00a0 }\n}\n\nclass Car extends Vehicle {\n\u00a0 private String modelName = \"Mustang\";\u00a0\u00a0\u00a0 // Car attribute\n\u00a0 public static void main(String[] args) {\n\n// Create a myCar object\n\u00a0\u00a0\u00a0 Car myCar = new Car();\n\n// Call the honk() method (from the Vehicle class) on the myCar object\n\u00a0\u00a0\u00a0 myCar.honk();\n\n// Display the value of the brand attribute (from the Vehicle class) and the value of the modelName from the Car class\n\u00a0\u00a0\u00a0 System.out.println(myCar.brand + \" \" + myCar.modelName);\n\u00a0 }\n}\n\nDefinition and Usage\nThe\nextends\nkeyword extends a class (indicates that a class is inherited from another class).\nIn Java, it is possible to inherit attributes and methods from one class to another. We group the \"inheritance concept\" into two categories:\nsubclass\n(child) - the class that inherits from another class\nsuperclass\n(parent) - the class being inherited from\nTo inherit from a class, use the\nextends\nkeyword.\nRelated Pages\nRead more about inheritance in our\nJava Inheritance Tutorial\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Implement a Function",
      "description": "Create a function that demonstrates the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Write your java function here\n",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "fc36158c-cc49-4620-abb9-750f84bff99d",
      "title": "Java Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "509d9626-3c4a-45ef-a322-aca76fc39619",
      "title": "Java Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "e1261e26-9678-48ff-a0d0-db766332acc9",
      "title": "Java Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is indicates that a class?",
      "options": [
        "None of the above.",
        "inherited from another class)",
        "None of the above.",
        "possible to inherit attributes and methods from one class to another"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of indicates that a class is 'inherited from another class)'."
    },
    {
      "question": "What is it?",
      "options": [
        "None of the above.",
        "possible to inherit attributes and methods from one class to another",
        "None of the above.",
        "inherited from another class)"
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of it is 'possible to inherit attributes and methods from one class to another'."
    }
  ],
  "summary": "This tutorial covers JavaextendsKeyword concepts and techniques. You'll learn how to use JavaextendsKeyword effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaextendsKeyword and how to apply it in your projects."
}