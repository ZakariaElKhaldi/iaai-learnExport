{
  "id": "36548db4-59a0-4bc7-ad45-0ed2c3d14822",
  "title": "Java ScannerfindInLine()Method",
  "slug": "java-scannerfindinlinemethod",
  "metadata": {
    "description": "Learn about Java ScannerfindInLine()Method with clear explanations and practical examples.",
    "keywords": [
      "email",
      "scanner",
      "pattern",
      "string",
      "findinline",
      "found",
      "match",
      "object",
      "myobj",
      "null"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Java Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJava",
    "subcategory": "findInLine()"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Java Scanner\nfindInLine",
      "content": "()\nMethod\n\nExample\nFind an email address in a line of text:\n// Create a scanner object\nScanner myObj = new Scanner(\"Please send an email to info@example.com for more details.\");\n\n// Get the email address with a pattern\nString email = myObj.findInLine(\"[a-zA-Z]+@[a-zA-Z]+.[a-zA-Z]{2,}\");\n\n// Show the email if found\nif (email != null) {\n  System.out.println(email);\n} else {\n  System.out.println(\"No email found\");\n}\n\n// Close the scanner\nmyObj.close();\nDefinition and Usage\nThe\nfindInLine()\nmethod searches up to the \nPattern\nobject or a string. If a match is not found then it returns\nnull\n.\nIf a match is found the scanner advances to the first character following the match.\nLearn more about the regular expressions in our\nJava RegEx tutorial\n.\nSyntax\nOne of the following:\npublic String findInLine(Pattern\npattern\n)\npublic String findInLine(String\npattern\n)\nParameter Values\nParameter\nDescription\npattern\nRequired. A string or\nPattern\nobject. Specifies the regular expression used in the search.\nTechnical Details\nReturns:\nA\nString\ncontaining the matched text or\nnull\nif no match was found.\nThrows:",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "IllegalStateException",
      "content": "- If the scanner has been closed.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    }
  ],
  "practice_exercises": [
    {
      "title": "Implement a Function",
      "description": "Create a function that demonstrates the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Write your java function here\n",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "681ae0c1-09d0-4442-9137-254289d071b5",
      "title": "Java Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "c4bfe96e-8839-4ce2-850b-df1e4e7a5611",
      "title": "Java Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "9394be2f-9308-49e7-931d-34d82c872525",
      "title": "Java Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is If a match?",
      "options": [
        "not found then it returns\nnull",
        "None of the above.",
        "None of the above.",
        "found the scanner advances to the first character following the match"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of If a match is 'not found then it returns\nnull'."
    },
    {
      "question": "What is If a match?",
      "options": [
        "None of the above.",
        "None of the above.",
        "found the scanner advances to the first character following the match",
        "not found then it returns\nnull"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of If a match is 'found the scanner advances to the first character following the match'."
    }
  ],
  "summary": "This tutorial covers Java ScannerfindInLine()Method concepts and techniques. You'll learn how to use Java ScannerfindInLine()Method effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of Java ScannerfindInLine()Method and how to apply it in your projects."
}