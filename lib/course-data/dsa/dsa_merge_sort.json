{
  "title": "DSA Merge Sort",
  "url": "https://www.w3schools.com/dsa/dsa_algo_mergesort.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "DSA Merge Sort",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Merge Sort",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Merge Sort algorithm is a divide-and-conquer algorithm that sorts an array by first breaking it down into smaller arrays, and then building the array back together the correct way so that it is sorted.",
      "html": "<p>The Merge Sort algorithm is a divide-and-conquer algorithm that sorts an array by first breaking it down into smaller arrays, and then building the array back together the correct way so that it is sorted.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Speed:",
      "html": "<p>Speed: <input max=\"500\" min=\"50\" type=\"range\"/></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Divide: The algorithm starts with breaking up the array into smaller and smaller pieces until one such sub-array only consists of one element.",
      "html": "<p><strong>Divide: </strong>The algorithm starts with breaking up the array into smaller and smaller pieces until one such sub-array only consists of one element.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Conquer: The algorithm merges the small pieces of the array back together by putting the lowest values first, resulting in a sorted array.",
      "html": "<p><strong>Conquer: </strong>The algorithm merges the small pieces of the array back together by putting the lowest values first, resulting in a sorted array.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The breaking down and building up of the array to sort the array is done recursively.",
      "html": "<p>The breaking down and building up of the array to sort the array is done recursively.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the animation above, each time the bars are pushed down represents a recursive call, splitting the array into smaller pieces. When the bars are lifted up, it means that two sub-arrays have been merged together.",
      "html": "<p>In the animation above, each time the bars are pushed down represents a recursive call, splitting the array into smaller pieces. When the bars are lifted up, it means that two sub-arrays have been merged together.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Merge Sort algorithm can be described like this:",
      "html": "<p>The Merge Sort algorithm can be described like this:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "How it works:",
      "html": "<p><strong>How it works:</strong></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Take a look at the drawing below to see how Merge Sort works from a different perspective. As you can see, the array is split into smaller and smaller pieces until it is merged back together. And as the merging happens, values from each sub-array are compared so that the lowest value comes first.",
      "html": "<p>Take a look at the drawing below to see how Merge Sort works from a different perspective. As you can see, the array is split into smaller and smaller pieces until it is merged back together. And as the merging happens, values from each sub-array are compared so that the lowest value comes first.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Manual Run Through",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Let's try to do the sorting manually, just to get an even better understanding of how Merge Sort works before actually implementing it in a programming language.",
      "html": "<p>Let's try to do the sorting manually, just to get an even better understanding of how Merge Sort works before actually implementing it in a programming language.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 1: We start with an unsorted array, and we know that it splits in half until the sub-arrays only consist of one element. The Merge Sort function calls itself two times, once for each half of the array. That means that the first sub-array will split into the smallest pieces first.",
      "html": "<p><strong>Step 1:</strong> We start with an unsorted array, and we know that it splits in half until the sub-arrays only consist of one element. The Merge Sort function calls itself two times, once for each half of the array. That means that the first sub-array will split into the smallest pieces first.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></code><br/>\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></code><br/>\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></code><br/>\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 2: The splitting of the first sub-array is finished, and now it is time to merge. 8 and 9 are the first two elements to be merged. 8 is the lowest value, so that comes before 9 in the first merged sub-array.",
      "html": "<p><strong>Step 2:</strong> The splitting of the first sub-array is finished, and now it is time to merge. 8 and 9 are the first two elements to be merged. 8 is the lowest value, so that comes before 9 in the first merged sub-array.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><mark class=\"dsa_mark\"> <span class=\"token number\">8</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">9</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 3: The next sub-arrays to be merged is [ 12] and [ 8, 9]. Values in both arrays are compared from the start. 8 is lower than 12, so 8 comes first, and 9 is also lower than 12.",
      "html": "<p><strong>Step 3:</strong> The next sub-arrays to be merged is [ 12] and [ 8, 9]. Values in both arrays are compared from the start. 8 is lower than 12, so 8 comes first, and 9 is also lower than 12.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span><mark class=\"dsa_mark\"> <span class=\"token number\">8</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">9</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">12</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 4: Now the second big sub-array is split recursively.",
      "html": "<p><strong>Step 4:</strong> Now the second big sub-array is split recursively.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></code><br/>\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></code><br/>\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></code><br/>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 5: 3 and 11 are merged back together in the same order as they are shown because 3 is lower than 11.",
      "html": "<p><strong>Step 5:</strong> 3 and 11 are merged back together in the same order as they are shown because 3 is lower than 11.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><mark class=\"dsa_mark\"> <span class=\"token number\">3</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">11</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></code><br/>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 6: Sub-array with values 5 and 4 is split, then merged so that 4 comes before 5.",
      "html": "<p><strong>Step 6:</strong> Sub-array with values 5 and 4 is split, then merged so that 4 comes before 5.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><mark class=\"dsa_mark\"> <span class=\"token number\">5</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><mark class=\"dsa_mark\"> <span class=\"token number\">4</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">]</span></code><br/>\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><mark class=\"dsa_mark\"> <span class=\"token number\">4</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">5</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">]</span></code><br/>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 7: The two sub-arrays on the right are merged. Comparisons are done to create elements in the new merged array:",
      "html": "<p><strong>Step 7:</strong> The two sub-arrays on the right are merged. Comparisons are done to create elements in the new merged array:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><mark class=\"dsa_mark\"> <span class=\"token number\">3</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">4</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">5</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">11</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">]</span></code><br/>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 8: The two last remaining sub-arrays are merged. Let's look at how the comparisons are done in more detail to create the new merged and finished sorted array:",
      "html": "<p><strong>Step 8:</strong> The two last remaining sub-arrays are merged. Let's look at how the comparisons are done in more detail to create the new merged and finished sorted array:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "3 is lower than 8:",
      "html": "<p>3 is lower than 8:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\">Before <span class=\"token punctuation\">[</span><mark class=\"dsa_mark\"> <span class=\"token number\">8</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><mark class=\"dsa_mark\"> <span class=\"token number\">3</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span></code><br/>\n<code class=\"w3-white language-python\">After<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><mark class=\"dsa_mark\"> <span class=\"token number\">3</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">8</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span></code><br/>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 9: 4 is lower than 8:",
      "html": "<p><strong>Step 9:</strong> 4 is lower than 8:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\">Before <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">8</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><mark class=\"dsa_mark\"> <span class=\"token number\">4</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span></code><br/>\n<code class=\"w3-white language-python\">After<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">4</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">8</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span></code><br/>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 10: 5 is lower than 8:",
      "html": "<p><strong>Step 10:</strong> 5 is lower than 8:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\">Before <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">8</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><mark class=\"dsa_mark\"> <span class=\"token number\">5</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span></code><br/>\n<code class=\"w3-white language-python\">After<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">5</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">8</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span></code><br/>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 11: 8 and 9 are lower than 11:",
      "html": "<p><strong>Step 11:</strong> 8 and 9 are lower than 11:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\">Before <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">8</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">9</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><mark class=\"dsa_mark\"> <span class=\"token number\">11</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">]</span></code><br/>\n<code class=\"w3-white language-python\">After<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">8</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">9</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><mark class=\"dsa_mark\"> <span class=\"token number\">11</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">]</span></code><br/>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 12: 11 is lower than 12:",
      "html": "<p><strong>Step 12:</strong> 11 is lower than 12:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\">Before <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">12</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><mark class=\"dsa_mark\"> <span class=\"token number\">11</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">]</span></code><br/>\n<code class=\"w3-white language-python\">After<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">11</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">12</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">]</span></code><br/>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The sorting is finished!",
      "html": "<p>The sorting is finished!</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Run the simulation below to see the steps above animated:",
      "html": "<p>Run the simulation below to see the steps above animated:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "[",
      "language": "unknown",
      "code_html": "<pre>[</pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "12",
      "language": "unknown",
      "code_html": "<pre> 12</pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": ",",
      "language": "unknown",
      "code_html": "<pre>, </pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "8",
      "language": "unknown",
      "code_html": "<pre>8</pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": ",",
      "language": "unknown",
      "code_html": "<pre>, </pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "9",
      "language": "unknown",
      "code_html": "<pre>9</pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": ",",
      "language": "unknown",
      "code_html": "<pre>, </pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "3",
      "language": "unknown",
      "code_html": "<pre>3</pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": ",",
      "language": "unknown",
      "code_html": "<pre>, </pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "11",
      "language": "unknown",
      "code_html": "<pre>11</pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": ",",
      "language": "unknown",
      "code_html": "<pre>, </pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "5",
      "language": "unknown",
      "code_html": "<pre>5</pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": ",",
      "language": "unknown",
      "code_html": "<pre>, </pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "4",
      "language": "unknown",
      "code_html": "<pre>4</pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "]",
      "language": "unknown",
      "code_html": "<pre>]</pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Manual Run Through: What Happened?",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We see that the algorithm has two stages: first splitting, then merging.",
      "html": "<p>We see that the algorithm has two stages: first splitting, then merging.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Although it is possible to implement the Merge Sort algorithm without recursion, we will use recursion because that is the most common approach.",
      "html": "<p>Although it is possible to implement the Merge Sort algorithm without recursion, we will use recursion because that is the most common approach.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We cannot see it in the steps above, but to split an array in two, the length of the array is divided by two, and then rounded down to get a value we call \"mid\". This \"mid\" value is used as an index for where to split the array.",
      "html": "<p>We cannot see it in the steps above, but to split an array in two, the length of the array is divided by two, and then rounded down to get a value we call \"mid\". This \"mid\" value is used as an index for where to split the array.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "After the array is split, the sorting function calls itself with each half, so that the array can be split again recursively. The splitting stops when a sub-array only consists of one element.",
      "html": "<p>After the array is split, the sorting function calls itself with each half, so that the array can be split again recursively. The splitting stops when a sub-array only consists of one element.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "At the end of the Merge Sort function the sub-arrays are merged so that the sub-arrays are always sorted as the array is built back up. To merge two sub-arrays so that the result is sorted, the values of each sub-array are compared, and the lowest value is put into the merged array. After that the next value in each of the two sub-arrays are compared, putting the lowest one into the merged array.",
      "html": "<p>At the end of the Merge Sort function the sub-arrays are merged so that the sub-arrays are always sorted as the array is built back up. To merge two sub-arrays so that the result is sorted, the values of each sub-array are compared, and the lowest value is put into the merged array. After that the next value in each of the two sub-arrays are compared, putting the lowest one into the merged array.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Merge Sort Implementation",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To implement the Merge Sort algorithm we need:",
      "html": "<p>To implement the Merge Sort algorithm we need:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The resulting code looks like this:",
      "html": "<p>The resulting code looks like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "line-numbers",
          "w3-white",
          "language-python"
        ],
        "isNotranslate": true
      },
      "code": "def\n\nmergeSort\n(\narr\n)\n:\n\n\nif\n\nlen\n(\narr\n)\n\n<=\n\n1\n:\n\n\nreturn\narr\n\nmid\n=\n\nlen\n(\narr\n)\n\n//\n\n2\n\nleftHalf\n=\narr\n[\n:\nmid\n]\n\nrightHalf\n=\narr\n[\nmid\n:\n]\n\n\nsortedLeft\n=\nmergeSort\n(\nleftHalf\n)\n\nsortedRight\n=\nmergeSort\n(\nrightHalf\n)\n\n\n\nreturn\nmerge\n(\nsortedLeft\n,\nsortedRight\n)\n\n\n\ndef\n\nmerge\n(\nleft\n,\nright\n)\n:\n\nresult\n=\n\n[\n]\n\ni\n=\nj\n=\n\n0\n\n\n\nwhile\ni\n<\n\nlen\n(\nleft\n)\n\nand\nj\n<\n\nlen\n(\nright\n)\n:\n\n\nif\nleft\n[\ni\n]\n\n<\nright\n[\nj\n]\n:\n\nresult\n.\nappend\n(\nleft\n[\ni\n]\n)\n\ni\n+=\n\n1\n\n\nelse\n:\n\nresult\n.\nappend\n(\nright\n[\nj\n]\n)\n\nj\n+=\n\n1\n\n\nresult\n.\nextend\n(\nleft\n[\ni\n:\n]\n)\n\nresult\n.\nextend\n(\nright\n[\nj\n:\n]\n)\n\n\n\nreturn\nresult\n\nunsortedArr\n=\n\n[\n3\n,\n\n7\n,\n\n6\n,\n\n-\n10\n,\n\n15\n,\n\n23.5\n,\n\n55\n,\n\n-\n13\n]\n\nsortedArr\n=\nmergeSort\n(\nunsortedArr\n)\n\n\nprint\n(\n\"Sorted array:\"\n,\nsortedArr\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate line-numbers w3-white language-python\" data-line=\"6-7,26-27\" tabindex=\"0\"><code class=\"language-python\"><span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-if\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-return\">return</span> arr\n\n    mid <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n    leftHalf <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>mid<span class=\"token punctuation\">]</span>\n    rightHalf <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n\n    sortedLeft <span class=\"token operator\">=</span> mergeSort<span class=\"token punctuation\">(</span>leftHalf<span class=\"token punctuation\">)</span>\n    sortedRight <span class=\"token operator\">=</span> mergeSort<span class=\"token punctuation\">(</span>rightHalf<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword keyword-return\">return</span> merge<span class=\"token punctuation\">(</span>sortedLeft<span class=\"token punctuation\">,</span> sortedRight<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    i <span class=\"token operator\">=</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token keyword keyword-while\">while</span> i <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">)</span> <span class=\"token keyword keyword-and\">and</span> j <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-if\">if</span> left<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword keyword-else\">else</span><span class=\"token punctuation\">:</span>\n            result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            j <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    result<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    result<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword keyword-return\">return</span> result\n\nunsortedArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span>\nsortedArr <span class=\"token operator\">=</span> mergeSort<span class=\"token punctuation\">(</span>unsortedArr<span class=\"token punctuation\">)</span>\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sorted array:\"</span><span class=\"token punctuation\">,</span> sortedArr<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"6-7\" style=\"top: 111px; height: 44px; width: 789px;\"></div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"26-27\" style=\"top: 551px; height: 44px; width: 789px;\"></div></pre>",
      "code_classes": [
        "notranslate",
        "line-numbers",
        "w3-white",
        "language-python"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "line-numbers",
        "w3-white",
        "language-python"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "On line 6 , arr[:mid] takes all values from the array up until, but not including, the value on index \"mid\".",
      "html": "<p><strong>On line 6</strong>, arr[:mid] takes all values from the array up until, but not including, the value on index \"mid\".</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "On line 7 , arr[mid:] takes all values from the array, starting at the value on index \"mid\" and all the next values.",
      "html": "<p><strong>On line 7</strong>, arr[mid:] takes all values from the array, starting at the value on index \"mid\" and all the next values.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "On lines 26-27 , the first part of the merging is done. At this this point the values of the two sub-arrays are compared, and either the left sub-array or the right sub-array is empty, so the result array can just be filled with the remaining values from either the left or the right sub-array. These lines can be swapped, and the result will be the same.",
      "html": "<p><strong>On lines 26-27</strong>, the first part of the merging is done. At this this point the values of the two sub-arrays are compared, and either the left sub-array or the right sub-array is empty, so the result array can just be filled with the remaining values from either the left or the right sub-array. These lines can be swapped, and the result will be the same.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Merge Sort without Recursion",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Since Merge Sort is a divide and conquer algorithm, recursion is the most intuitive code to use for implementation. The recursive implementation of Merge Sort is also perhaps easier to understand, and uses less code lines in general.",
      "html": "<p>Since Merge Sort is a divide and conquer algorithm, recursion is the most intuitive code to use for implementation. The recursive implementation of Merge Sort is also perhaps easier to understand, and uses less code lines in general.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "But Merge Sort can also be implemented without the use of recursion, so that there is no function calling itself.",
      "html": "<p>But Merge Sort can also be implemented without the use of recursion, so that there is no function calling itself.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Take a look at the Merge Sort implementation below, that does not use recursion:",
      "html": "<p>Take a look at the Merge Sort implementation below, that does not use recursion:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-python"
        ],
        "isNotranslate": true
      },
      "code": "def\n\nmerge\n(\nleft\n,\nright\n)\n:\n\nresult\n=\n\n[\n]\n\ni\n=\nj\n=\n\n0\n\n\n\nwhile\ni\n<\n\nlen\n(\nleft\n)\n\nand\nj\n<\n\nlen\n(\nright\n)\n:\n\n\nif\nleft\n[\ni\n]\n\n<\nright\n[\nj\n]\n:\n\nresult\n.\nappend\n(\nleft\n[\ni\n]\n)\n\ni\n+=\n\n1\n\n\nelse\n:\n\nresult\n.\nappend\n(\nright\n[\nj\n]\n)\n\nj\n+=\n\n1\n\n\nresult\n.\nextend\n(\nleft\n[\ni\n:\n]\n)\n\nresult\n.\nextend\n(\nright\n[\nj\n:\n]\n)\n\n\n\nreturn\nresult\n\n\ndef\n\nmergeSort\n(\narr\n)\n:\n\nstep\n=\n\n1\n\n# Starting with sub-arrays of length 1\n\nlength\n=\n\nlen\n(\narr\n)\n\n\n\nwhile\nstep\n<\nlength\n:\n\n\nfor\ni\nin\n\nrange\n(\n0\n,\nlength\n,\n\n2\n\n*\nstep\n)\n:\n\nleft\n=\narr\n[\ni\n:\ni\n+\nstep\n]\n\nright\n=\narr\n[\ni\n+\nstep\n:\ni\n+\n\n2\n\n*\nstep\n]\n\n\nmerged\n=\nmerge\n(\nleft\n,\nright\n)\n\n\n\n# Place the merged array back into the original array\n\n\nfor\nj\n,\nval\nin\n\nenumerate\n(\nmerged\n)\n:\n\narr\n[\ni\n+\nj\n]\n\n=\nval\n\nstep\n*=\n\n2\n\n# Double the sub-array length for the next iteration\n\n\n\nreturn\narr\n\nunsortedArr\n=\n\n[\n3\n,\n\n7\n,\n\n6\n,\n\n-\n10\n,\n\n15\n,\n\n23.5\n,\n\n55\n,\n\n-\n13\n]\n\nsortedArr\n=\nmergeSort\n(\nunsortedArr\n)\n\n\nprint\n(\n\"Sorted array:\"\n,\nsortedArr\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-python\" data-line=\"22-33\" tabindex=\"0\"><code class=\"language-python\"><span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    i <span class=\"token operator\">=</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    \n    <span class=\"token keyword keyword-while\">while</span> i <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">)</span> <span class=\"token keyword keyword-and\">and</span> j <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-if\">if</span> left<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword keyword-else\">else</span><span class=\"token punctuation\">:</span>\n            result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            j <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            \n    result<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    result<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword keyword-return\">return</span> result\n\n<span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    step <span class=\"token operator\">=</span> <span class=\"token number\">1</span>  <span class=\"token comment\"># Starting with sub-arrays of length 1</span>\n    length <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword keyword-while\">while</span> step <span class=\"token operator\">&lt;</span> length<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-for\">for</span> i <span class=\"token keyword keyword-in\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> step<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            left <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i <span class=\"token operator\">+</span> step<span class=\"token punctuation\">]</span>\n            right <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> step<span class=\"token punctuation\">:</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> step<span class=\"token punctuation\">]</span>\n            \n            merged <span class=\"token operator\">=</span> merge<span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">)</span>\n            \n            <span class=\"token comment\"># Place the merged array back into the original array</span>\n            <span class=\"token keyword keyword-for\">for</span> j<span class=\"token punctuation\">,</span> val <span class=\"token keyword keyword-in\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>merged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                arr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> val\n                \n        step <span class=\"token operator\">*=</span> <span class=\"token number\">2</span>  <span class=\"token comment\"># Double the sub-array length for the next iteration</span>\n        \n    <span class=\"token keyword keyword-return\">return</span> arr\n\nunsortedArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span>\nsortedArr <span class=\"token operator\">=</span> mergeSort<span class=\"token punctuation\">(</span>unsortedArr<span class=\"token punctuation\">)</span>\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sorted array:\"</span><span class=\"token punctuation\">,</span> sortedArr<span class=\"token punctuation\">)</span>\n<div aria-hidden=\"true\" class=\"line-highlight\" data-end=\"33\" data-range=\"22-33\" data-start=\"22\" style=\"top: 462px; width: 789px;\"> \n \n \n \n \n \n \n \n \n \n \n \n</div></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You might notice that the merge functions are exactly the same in the two Merge Sort implementations above, but in the implementation right above here the while loop inside the mergeSort function is used to replace the recursion. The while loop does the splitting and merging of the array in place, and that makes the code a bit harder to understand.",
      "html": "<p>You might notice that the merge functions are exactly the same in the two Merge Sort implementations above, but in the implementation right above here the while loop inside the mergeSort function is used to replace the recursion. The while loop does the splitting and merging of the array in place, and that makes the code a bit harder to understand.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To put it simply, the while loop inside the mergeSort function uses short step lengths to sort tiny pieces (sub-arrays) of the initial array using the merge function. Then the step length is increased to merge and sort larger pieces of the array until the whole array is sorted.",
      "html": "<p>To put it simply, the while loop inside the mergeSort function uses short step lengths to sort tiny pieces (sub-arrays) of the initial array using the merge function. Then the step length is increased to merge and sort larger pieces of the array until the whole array is sorted.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Merge Sort Time Complexity",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "this page",
          "href": "https://www.w3schools.com/dsa_timecomplexity_theory.php",
          "title": ""
        }
      ],
      "text": "For a general explanation of what time complexity is, visit this page .",
      "html": "<p class=\"fontComment\">For a general explanation of what time complexity is, visit <a href=\"dsa_timecomplexity_theory.php\">this page</a>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "this page",
          "href": "https://www.w3schools.com/dsa_timecomplexity_mergesort.php",
          "title": ""
        }
      ],
      "text": "For a more thorough and detailed explanation of Merge Sort time complexity, visit this page .",
      "html": "<p class=\"fontComment\">For a more thorough and detailed explanation of Merge Sort time complexity, visit <a href=\"dsa_timecomplexity_mergesort.php\">this page</a>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The time complexity for Merge Sort is",
      "html": "<p>The time complexity for Merge Sort is</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "O ( n \u22c5 log n ) O ( n \u22c5 log \u2061 n )",
      "html": "<p><span class=\"math display\"><span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MJXc-display\" style=\"text-align: center;\"><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;&amp;#x2061;&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-1-Frame\" role=\"presentation\" style=\"font-size: 119%; text-align: center; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-1\"><span class=\"mjx-mrow\" id=\"MJXc-Node-2\"><span class=\"mjx-mi\" id=\"MJXc-Node-3\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-4\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-5\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-6\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.003em; padding-bottom: 0.339em;\">\u22c5</span></span><span class=\"mjx-mi MJXc-space2\" id=\"MJXc-Node-7\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.563em;\">log</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-8\"><span class=\"mjx-char\"></span></span><span class=\"mjx-mi MJXc-space1\" id=\"MJXc-Node-9\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-10\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML MJX_Assistive_MathML_Block\" role=\"presentation\"><math display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>\u22c5</mo><mi>log</mi><mo>\u2061</mo><mi>n</mi><mo stretchy=\"false\">)</mo></math></span></span></span></span></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "And the time complexity is pretty much the same for different kinds of arrays. The algorithm needs to split the array and merge it back together whether it is already sorted or completely shuffled.",
      "html": "<p>And the time complexity is pretty much the same for different kinds of arrays. The algorithm needs to split the array and merge it back together whether it is already sorted or completely shuffled.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The image below shows the time complexity for Merge Sort.",
      "html": "<p>The image below shows the time complexity for Merge Sort.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Run the simulation below for different number of values in an array, and see how the number of operations Merge Sort needs on an array of n n elements is O ( n log n ) O ( n log \u2061 n ) :",
      "html": "<p>Run the simulation below for different number of values in an array, and see how the number of operations Merge Sort needs on an array of <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-2-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-11\"><span class=\"mjx-mrow\" id=\"MJXc-Node-12\"><span class=\"mjx-mi\" id=\"MJXc-Node-13\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span> elements is <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;&amp;#x2061;&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-3-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-14\"><span class=\"mjx-mrow\" id=\"MJXc-Node-15\"><span class=\"mjx-mi\" id=\"MJXc-Node-16\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-17\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-18\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mi MJXc-space1\" id=\"MJXc-Node-19\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.563em;\">log</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-20\"><span class=\"mjx-char\"></span></span><span class=\"mjx-mi MJXc-space1\" id=\"MJXc-Node-21\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-22\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi>log</mi><mo>\u2061</mo><mi>n</mi><mo stretchy=\"false\">)</mo></math></span></span>:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Set values: 300",
      "html": "<p><label>Set values: <input max=\"480\" min=\"100\" type=\"range\"/></label> 300</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Random",
      "html": "<p><label><input type=\"radio\" value=\"single\"/> Random</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Descending",
      "html": "<p><label><input type=\"radio\" value=\"worstCase\"/> Descending</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Ascending",
      "html": "<p><label><input type=\"radio\" value=\"bestCase\"/> Ascending</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "10 Random",
      "html": "<p><label><input type=\"radio\" value=\"random30\"/> 10 Random</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Operations: 0",
      "html": "<p>Operations: 0</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If we hold the number of values n n fixed, the number of operations needed for the \"Random\", \"Descending\" and \"Ascending\" is almost the same.",
      "html": "<p>If we hold the number of values <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-4-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-23\"><span class=\"mjx-mrow\" id=\"MJXc-Node-24\"><span class=\"mjx-mi\" id=\"MJXc-Node-25\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span> fixed, the number of operations needed for the \"Random\", \"Descending\" and \"Ascending\" is almost the same.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Merge Sort performs almost the same every time because the array is split, and merged using comparison, both if the array is already sorted or not.",
      "html": "<p>Merge Sort performs almost the same every time because the array is split, and merged using comparison, both if the array is already sorted or not.</p>"
    }
  ]
}