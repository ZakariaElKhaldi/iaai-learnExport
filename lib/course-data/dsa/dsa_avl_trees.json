{
  "title": "DSA AVL Trees",
  "url": "https://www.w3schools.com/dsa/dsa_data_avltrees.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "DSA AVL Trees",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The AVL Tree is a type of Binary Search Tree named after two Soviet inventors Georgy A delson- V elsky and Evgenii L andis who invented the AVL Tree in 1962.",
      "html": "<p>The <strong>AVL</strong> Tree is a type of Binary Search Tree named after two Soviet inventors Georgy <strong>A</strong>delson-<strong>V</strong>elsky and Evgenii <strong>L</strong>andis who invented the AVL Tree in 1962.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "AVL trees are self-balancing, which means that the tree height is kept to a minimum so that a very fast runtime is guaranteed for searching, inserting and deleting nodes, with time complexity O ( log n ) O ( log \u2061 n ) .",
      "html": "<p>AVL trees are self-balancing, which means that the tree height is kept to a minimum so that a very fast runtime is guaranteed for searching, inserting and deleting nodes, with time complexity <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;&amp;#x2061;&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-1-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-1\"><span class=\"mjx-mrow\" id=\"MJXc-Node-2\"><span class=\"mjx-mi\" id=\"MJXc-Node-3\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-4\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-5\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.563em;\">log</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-6\"><span class=\"mjx-char\"></span></span><span class=\"mjx-mi MJXc-space1\" id=\"MJXc-Node-7\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-8\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><mi>log</mi><mo>\u2061</mo><mi>n</mi><mo stretchy=\"false\">)</mo></math></span></span>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "AVL Trees",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Binary Search Tree",
          "href": "https://www.w3schools.com/dsa_data_binarysearchtrees.php",
          "title": ""
        }
      ],
      "text": "The only difference between a regular Binary Search Tree and an AVL Tree is that AVL Trees do rotation operations in addition, to keep the tree balance.",
      "html": "<p>The only difference between a regular <a href=\"dsa_data_binarysearchtrees.php\">Binary Search Tree</a> and an AVL Tree is that AVL Trees do rotation operations in addition, to keep the tree balance.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A Binary Search Tree is in balance when the difference in height between left and right subtrees is less than 2.",
      "html": "<p>A Binary Search Tree is in balance when the difference in height between left and right subtrees is less than 2.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "By keeping balance, the AVL Tree ensures a minimum tree height, which means that search, insert, and delete operations can be done really fast.",
      "html": "<p>By keeping balance, the AVL Tree ensures a minimum tree height, which means that search, insert, and delete operations can be done really fast.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The two trees above are both Binary Search Trees, they have the same nodes, and the same in-order traversal (alphabetical), but the height is very different because the AVL Tree has balanced itself.",
      "html": "<p>The two trees above are both Binary Search Trees, they have the same nodes, and the same in-order traversal (alphabetical), but the height is very different because the AVL Tree has balanced itself.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step through the building of an AVL Tree in the animation below to see how the balance factors are updated, and how rotation operations are done when required to restore the balance.",
      "html": "<p>Step through the building of an AVL Tree in the animation below to see how the balance factors are updated, and how rotation operations are done when required to restore the balance.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Continue reading to learn more about how the balance factor is calculated, how rotation operations are done, and how AVL Trees can be implemented.",
      "html": "<p>Continue reading to learn more about how the balance factor is calculated, how rotation operations are done, and how AVL Trees can be implemented.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Left and Right Rotations",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To restore balance in an AVL Tree, left or right rotations are done, or a combination of left and right rotations.",
      "html": "<p>To restore balance in an AVL Tree, left or right rotations are done, or a combination of left and right rotations.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The previous animation shows one specific left rotation, and one specific right rotation.",
      "html": "<p>The previous animation shows one specific left rotation, and one specific right rotation.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "But in general, left and right rotations are done like in the animation below.",
      "html": "<p>But in general, left and right rotations are done like in the animation below.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Notice how the subtree changes its parent. Subtrees change parent in this way during rotation to maintain the correct in-order traversal, and to maintain the BST property that the left child is less than the right child, for all nodes in the tree.",
      "html": "<p>Notice how the subtree changes its parent. Subtrees change parent in this way during rotation to maintain the correct in-order traversal, and to maintain the BST property that the left child is less than the right child, for all nodes in the tree.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Also keep in mind that it is not always the root node that become unbalanced and need rotation.",
      "html": "<p>Also keep in mind that it is not always the root node that become unbalanced and need rotation.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Balance Factor",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A node's balance factor is the difference in subtree heights.",
      "html": "<p>A node's balance factor is the difference in subtree heights.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The subtree heights are stored at each node for all nodes in an AVL Tree, and the balance factor is calculated based on its subtree heights to check if the tree has become out of balance.",
      "html": "<p>The subtree heights are stored at each node for all nodes in an AVL Tree, and the balance factor is calculated based on its subtree heights to check if the tree has become out of balance.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The height of a subtree is the number of edges between the root node of the subtree and the leaf node farthest down in that subtree.",
      "html": "<p>The height of a subtree is the number of edges between the root node of the subtree and the leaf node farthest down in that subtree.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Balance Factor ( B F B F ) for a node ( X X ) is the difference in height between its right and left subtrees.",
      "html": "<p>The <strong>Balance Factor</strong> (<span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-2-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-9\"><span class=\"mjx-mrow\" id=\"MJXc-Node-10\"><span class=\"mjx-mi\" id=\"MJXc-Node-11\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">B</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-12\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.106em;\">F</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>B</mi><mi>F</mi></math></span></span>) for a node (<span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-3-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-13\"><span class=\"mjx-mrow\" id=\"MJXc-Node-14\"><span class=\"mjx-mi\" id=\"MJXc-Node-15\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.024em;\">X</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>X</mi></math></span></span>) is the difference in height between its right and left subtrees.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "B F ( X ) = h e i g h t ( r i g h t S u b t r e e ( X ) ) \u2212 h e i g h t ( l e f t S u b t r e e ( X ) ) B F ( X ) = h e i g h t ( r i g h t S u b t r e e ( X ) ) \u2212 h e i g h t ( l e f t S u b t r e e ( X ) )",
      "html": "<p><span class=\"math display\"><span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MJXc-display\" style=\"text-align: center;\"><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;mo&gt;&amp;#x2212;&lt;/mo&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-4-Frame\" role=\"presentation\" style=\"font-size: 119%; text-align: center; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-16\"><span class=\"mjx-mrow\" id=\"MJXc-Node-17\"><span class=\"mjx-mi\" id=\"MJXc-Node-18\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">B</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-19\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.106em;\">F</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-20\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-21\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.024em;\">X</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-22\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-23\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-mi MJXc-space3\" id=\"MJXc-Node-24\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-25\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">e</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-26\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">i</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-27\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.507em; padding-right: 0.003em;\">g</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-28\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-29\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.395em; padding-bottom: 0.283em;\">t</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-30\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-31\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">r</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-32\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">i</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-33\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.507em; padding-right: 0.003em;\">g</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-34\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-35\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.395em; padding-bottom: 0.283em;\">t</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-36\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em; padding-right: 0.032em;\">S</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-37\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">u</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-38\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">b</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-39\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.395em; padding-bottom: 0.283em;\">t</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-40\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">r</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-41\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">e</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-42\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">e</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-43\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-44\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.024em;\">X</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-45\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-46\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-47\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">\u2212</span></span><span class=\"mjx-mi MJXc-space2\" id=\"MJXc-Node-48\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-49\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">e</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-50\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">i</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-51\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.507em; padding-right: 0.003em;\">g</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-52\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-53\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.395em; padding-bottom: 0.283em;\">t</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-54\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-55\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">l</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-56\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">e</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-57\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.507em; padding-right: 0.06em;\">f</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-58\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.395em; padding-bottom: 0.283em;\">t</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-59\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em; padding-right: 0.032em;\">S</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-60\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">u</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-61\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">b</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-62\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.395em; padding-bottom: 0.283em;\">t</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-63\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">r</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-64\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">e</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-65\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">e</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-66\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-67\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.024em;\">X</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-68\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-69\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML MJX_Assistive_MathML_Block\" role=\"presentation\"><math display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>B</mi><mi>F</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>h</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mi>S</mi><mi>u</mi><mi>b</mi><mi>t</mi><mi>r</mi><mi>e</mi><mi>e</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>\u2212</mo><mi>h</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi><mi>S</mi><mi>u</mi><mi>b</mi><mi>t</mi><mi>r</mi><mi>e</mi><mi>e</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></math></span></span></span></span></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Balance factor values",
      "html": "<p>Balance factor values</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the balance factor is less than -1, or more than 1, for one or more nodes in the tree, the tree is considered not in balance, and a rotation operation is needed to restore balance.",
      "html": "<p>If the balance factor is less than -1, or more than 1, for one or more nodes in the tree, the tree is considered not in balance, and a rotation operation is needed to restore balance.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Let's take a closer look at the different rotation operations that an AVL Tree can do to regain balance.",
      "html": "<p>Let's take a closer look at the different rotation operations that an AVL Tree can do to regain balance.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Four \"out-of-balance\" Cases",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When the balance factor of just one node is less than -1, or more than 1, the tree is regarded as out of balance, and a rotation is needed to restore balance.",
      "html": "<p>When the balance factor of just one node is less than -1, or more than 1, the tree is regarded as out of balance, and a rotation is needed to restore balance.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "There are four different ways an AVL Tree can be out of balance, and each of these cases require a different rotation operation.",
      "html": "<p>There are four different ways an AVL Tree can be out of balance, and each of these cases require a different rotation operation.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody>\n<tr>\n<th style=\"width:20ch\">Case</th>\n<th>Description</th>\n<th>Rotation to Restore Balance</th>\n</tr>\n<tr>\n<td>Left-Left (LL)</td>\n<td>The unbalanced node and its left child node are both left-heavy.</td>\n<td>A single right rotation.</td>\n</tr>\n<tr>\n<td>Right-Right (RR)</td>\n<td>The unbalanced node and its right child node are both right-heavy.</td>\n<td>A single left rotation.</td>\n</tr>\n<tr>\n<td>Left-Right (LR)</td>\n<td>The unbalanced node is left heavy, and its left child node is right heavy.</td>\n<td>First do a left rotation on the left child node, then do a right rotation on the unbalanced node.</td>\n</tr>\n<tr>\n<td>Right-Left (RL)</td>\n<td>The unbalanced node is right heavy, and its right child node is left heavy.</td>\n<td>First do a right rotation on the right child node, then do a left rotation on the unbalanced node.</td>\n</tr>\n</tbody>\n</table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "See animations and explanations of these cases below.",
      "html": "<p>See animations and explanations of these cases below.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Left-Left (LL) Case",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The node where the unbalance is discovered is left heavy, and the node's left child node is also left heavy.",
      "html": "<p>The node where the unbalance is discovered is left heavy, and the node's left child node is also left heavy.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When this LL case happens, a single right rotation on the unbalanced node is enough to restore balance.",
      "html": "<p>When this LL case happens, a single right rotation on the unbalanced node is enough to restore balance.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step through the animation below to see the LL case, and how the balance is restored by a single right rotation.",
      "html": "<p>Step through the animation below to see the LL case, and how the balance is restored by a single right rotation.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "As you step through the animation above, two LL cases happen:",
      "html": "<p>As you step through the animation above, two LL cases happen:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: The second time the LL case happens in the animation above, a right rotation is done, and L goes from being the right child of D to being the left child of P. Rotations are done like that to keep the correct in-order traversal ('B, C, D, L, P, Q' in the animation above). Another reason for changing parent when a rotation is done is to keep the BST property, that the left child is always lower than the node, and that the right child always higher.",
      "html": "<p><strong>Note: </strong>The second time the LL case happens in the animation above, a right rotation is done, and L goes from being the right child of D to being the left child of P. Rotations are done like that to keep the correct in-order traversal ('B, C, D, L, P, Q' in the animation above). Another reason for changing parent when a rotation is done is to keep the BST property, that the left child is always lower than the node, and that the right child always higher.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Right-Right (RR) Case",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A Right-Right case happens when a node is unbalanced and right heavy, and the right child node is also right heavy.",
      "html": "<p>A Right-Right case happens when a node is unbalanced and right heavy, and the right child node is also right heavy.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A single left rotation at the unbalanced node is enough to restore balance in the RR case.",
      "html": "<p>A single left rotation at the unbalanced node is enough to restore balance in the RR case.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The RR case happens two times in the animation above:",
      "html": "<p>The RR case happens two times in the animation above:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Left-Right (LR) Case",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Left-Right case is when the unbalanced node is left heavy, but its left child node is right heavy.",
      "html": "<p>The Left-Right case is when the unbalanced node is left heavy, but its left child node is right heavy.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In this LR case, a left rotation is first done on the left child node, and then a right rotation is done on the original unbalanced node.",
      "html": "<p>In this LR case, a left rotation is first done on the left child node, and then a right rotation is done on the original unbalanced node.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step through the animation below to see how the Left-Right case can happen, and how the rotation operations are done to restore balance.",
      "html": "<p>Step through the animation below to see how the Left-Right case can happen, and how the rotation operations are done to restore balance.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "As you are building the AVL Tree in the animation above, the Left-Right case happens 2 times, and rotation operations are required and done to restore balance:",
      "html": "<p>As you are building the AVL Tree in the animation above, the Left-Right case happens 2 times, and rotation operations are required and done to restore balance:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Right-Left (RL) Case",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Right-Left case is when the unbalanced node is right heavy, and its right child node is left heavy.",
      "html": "<p>The Right-Left case is when the unbalanced node is right heavy, and its right child node is left heavy.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In this case we first do a right rotation on the unbalanced node's right child, and then we do a left rotation on the unbalanced node itself.",
      "html": "<p>In this case we first do a right rotation on the unbalanced node's right child, and then we do a left rotation on the unbalanced node itself.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step through the animation below to see how the Right-Left case can occur, and how rotations are done to restore the balance.",
      "html": "<p>Step through the animation below to see how the Right-Left case can occur, and how rotations are done to restore the balance.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "After inserting node B, we get a Right-Left case because node A becomes unbalanced and right heavy, and its right child is left heavy. To restore balance, a right rotation is first done on node F, and then a left rotation is done on node A.",
      "html": "<p>After inserting node B, we get a Right-Left case because node A becomes unbalanced and right heavy, and its right child is left heavy. To restore balance, a right rotation is first done on node F, and then a left rotation is done on node A.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The next Right-Left case occurs after nodes G, E, and D are added. This is a Right-Left case because B is unbalanced and right heavy, and its right child F is left heavy. To restore balance, a right rotation is first done on node F, and then a left rotation is done on node B.",
      "html": "<p>The next Right-Left case occurs after nodes G, E, and D are added. This is a Right-Left case because B is unbalanced and right heavy, and its right child F is left heavy. To restore balance, a right rotation is first done on node F, and then a left rotation is done on node B.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Retracing in AVL Trees",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "After inserting or deleting a node in an AVL tree, the tree may become unbalanced. To find out if the tree is unbalanced, we need to update the heights and recalculate the balance factors of all ancestor nodes.",
      "html": "<p>After inserting or deleting a node in an AVL tree, the tree may become unbalanced. To find out if the tree is unbalanced, we need to update the heights and recalculate the balance factors of all ancestor nodes.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This process, known as retracing, is handled through recursion. As the recursive calls propagate back to the root after an insertion or deletion, each ancestor node's height is updated and the balance factor is recalculated. If any ancestor node is found to have a balance factor outside the range of -1 to 1, a rotation is performed at that node to restore the tree's balance.",
      "html": "<p>This process, known as retracing, is handled through recursion. As the recursive calls propagate back to the root after an insertion or deletion, each ancestor node's height is updated and the balance factor is recalculated. If any ancestor node is found to have a balance factor outside the range of -1 to 1, a rotation is performed at that node to restore the tree's balance.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the simulation below, after inserting node F, the nodes C, E and H are all unbalanced, but since retracing works through recursion, the unbalance at node H is discovered and fixed first, which in this case also fixes the unbalance in nodes E and C.",
      "html": "<p>In the simulation below, after inserting node F, the nodes C, E and H are all unbalanced, but since retracing works through recursion, the unbalance at node H is discovered and fixed first, which in this case also fixes the unbalance in nodes E and C.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "After node F is inserted, the code will retrace, calculating balancing factors as it propagates back up towards the root node. When node H is reached and the balancing factor -2 is calculated, a right rotation is done. Only after this rotation is done, the code will continue to retrace, calculating balancing factors further up on ancestor nodes E and C.",
      "html": "<p>After node F is inserted, the code will retrace, calculating balancing factors as it propagates back up towards the root node. When node H is reached and the balancing factor -2 is calculated, a right rotation is done. Only after this rotation is done, the code will continue to retrace, calculating balancing factors further up on ancestor nodes E and C.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Because of the rotation, balancing factors for nodes E and C stay the same as before node F was inserted.",
      "html": "<p>Because of the rotation, balancing factors for nodes E and C stay the same as before node F was inserted.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "AVL Insert Node Implementation",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This code is based on the BST implementation on the previous page, for inserting nodes.",
      "html": "<p>This code is based on the BST implementation on the previous page, for inserting nodes.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "There is only one new attribute for each node in the AVL tree compared to the BST, and that is the height, but there are many new functions and extra code lines needed for the AVL Tree implementation because of how the AVL Tree rebalances itself.",
      "html": "<p>There is only one new attribute for each node in the AVL tree compared to the BST, and that is the height, but there are many new functions and extra code lines needed for the AVL Tree implementation because of how the AVL Tree rebalances itself.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The implementation below builds an AVL tree based on a list of characters, to create the AVL Tree in the simulation above. The last node to be inserted 'F', also triggers a right rotation, just like in the simulation above.",
      "html": "<p>The implementation below builds an AVL tree based on a list of characters, to create the AVL Tree in the simulation above. The last node to be inserted 'F', also triggers a right rotation, just like in the simulation above.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-python"
        ],
        "isNotranslate": true
      },
      "code": "class\n\nTreeNode\n:\n\n\ndef\n\n__init__\n(\nself\n,\ndata\n)\n:\n\nself\n.\ndata\n=\ndata\nself\n.\nleft\n=\n\nNone\n\nself\n.\nright\n=\n\nNone\n\nself\n.\nheight\n=\n\n1\n\n\n\ndef\n\ngetHeight\n(\nnode\n)\n:\n\n\nif\n\nnot\nnode\n:\n\n\nreturn\n\n0\n\n\nreturn\nnode\n.\nheight\n\n\ndef\n\ngetBalance\n(\nnode\n)\n:\n\n\nif\n\nnot\nnode\n:\n\n\nreturn\n\n0\n\n\nreturn\ngetHeight\n(\nnode\n.\nleft\n)\n\n-\ngetHeight\n(\nnode\n.\nright\n)\n\n\n\ndef\n\nrightRotate\n(\ny\n)\n:\n\n\nprint\n(\n'Rotate right on node'\n,\ny\n.\ndata\n)\n\nx\n=\ny\n.\nleft\nT2\n=\nx\n.\nright\nx\n.\nright\n=\ny\ny\n.\nleft\n=\nT2\ny\n.\nheight\n=\n\n1\n\n+\n\nmax\n(\ngetHeight\n(\ny\n.\nleft\n)\n,\ngetHeight\n(\ny\n.\nright\n)\n)\n\nx\n.\nheight\n=\n\n1\n\n+\n\nmax\n(\ngetHeight\n(\nx\n.\nleft\n)\n,\ngetHeight\n(\nx\n.\nright\n)\n)\n\n\nreturn\nx\n\n\ndef\n\nleftRotate\n(\nx\n)\n:\n\n\nprint\n(\n'Rotate left on node'\n,\nx\n.\ndata\n)\n\ny\n=\nx\n.\nright\nT2\n=\ny\n.\nleft\ny\n.\nleft\n=\nx\nx\n.\nright\n=\nT2\nx\n.\nheight\n=\n\n1\n\n+\n\nmax\n(\ngetHeight\n(\nx\n.\nleft\n)\n,\ngetHeight\n(\nx\n.\nright\n)\n)\n\ny\n.\nheight\n=\n\n1\n\n+\n\nmax\n(\ngetHeight\n(\ny\n.\nleft\n)\n,\ngetHeight\n(\ny\n.\nright\n)\n)\n\n\nreturn\ny\n\n\ndef\n\ninsert\n(\nnode\n,\ndata\n)\n:\n\n\nif\n\nnot\nnode\n:\n\n\nreturn\nTreeNode\n(\ndata\n)\n\n\n\nif\ndata\n<\nnode\n.\ndata\n:\n\nnode\n.\nleft\n=\ninsert\n(\nnode\n.\nleft\n,\ndata\n)\n\n\nelif\ndata\n>\nnode\n.\ndata\n:\n\nnode\n.\nright\n=\ninsert\n(\nnode\n.\nright\n,\ndata\n)\n\n\n\n# Update the balance factor and balance the tree\n\nnode\n.\nheight\n=\n\n1\n\n+\n\nmax\n(\ngetHeight\n(\nnode\n.\nleft\n)\n,\ngetHeight\n(\nnode\n.\nright\n)\n)\n\nbalance\n=\ngetBalance\n(\nnode\n)\n\n\n\n# Balancing the tree\n\n\n# Left Left\n\n\nif\nbalance\n>\n\n1\n\nand\ngetBalance\n(\nnode\n.\nleft\n)\n\n>=\n\n0\n:\n\n\nreturn\nrightRotate\n(\nnode\n)\n\n\n\n# Left Right\n\n\nif\nbalance\n>\n\n1\n\nand\ngetBalance\n(\nnode\n.\nleft\n)\n\n<\n\n0\n:\n\nnode\n.\nleft\n=\nleftRotate\n(\nnode\n.\nleft\n)\n\n\nreturn\nrightRotate\n(\nnode\n)\n\n\n\n# Right Right\n\n\nif\nbalance\n<\n\n-\n1\n\nand\ngetBalance\n(\nnode\n.\nright\n)\n\n<=\n\n0\n:\n\n\nreturn\nleftRotate\n(\nnode\n)\n\n\n\n# Right Left\n\n\nif\nbalance\n<\n\n-\n1\n\nand\ngetBalance\n(\nnode\n.\nright\n)\n\n>\n\n0\n:\n\nnode\n.\nright\n=\nrightRotate\n(\nnode\n.\nright\n)\n\n\nreturn\nleftRotate\n(\nnode\n)\n\n\n\nreturn\nnode\n\n\ndef\n\ninOrderTraversal\n(\nnode\n)\n:\n\n\nif\nnode\nis\n\nNone\n:\n\n\nreturn\n\ninOrderTraversal\n(\nnode\n.\nleft\n)\n\n\nprint\n(\nnode\n.\ndata\n,\nend\n=\n\", \"\n)\n\ninOrderTraversal\n(\nnode\n.\nright\n)\n\n\n\n# Inserting nodes\n\nroot\n=\n\nNone\n\nletters\n=\n\n[\n'C'\n,\n\n'B'\n,\n\n'E'\n,\n\n'A'\n,\n\n'D'\n,\n\n'H'\n,\n\n'G'\n,\n\n'F'\n]\n\n\nfor\nletter\nin\nletters\n:\n\nroot\n=\ninsert\n(\nroot\n,\nletter\n)\n\n\ninOrderTraversal\n(\nroot\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-python\" tabindex=\"0\"><code class=\"language-python\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">TreeNode</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> data\n        self<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n        self<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n        self<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n<span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-if\">if</span> <span class=\"token keyword keyword-not\">not</span> node<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-return\">return</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword keyword-return\">return</span> node<span class=\"token punctuation\">.</span>height\n\n<span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-if\">if</span> <span class=\"token keyword keyword-not\">not</span> node<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-return\">return</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword keyword-return\">return</span> getHeight<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> getHeight<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">rightRotate</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Rotate right on node'</span><span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n    x <span class=\"token operator\">=</span> y<span class=\"token punctuation\">.</span>left\n    T2 <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>right\n    x<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> y\n    y<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> T2\n    y<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>getHeight<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> getHeight<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    x<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>getHeight<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> getHeight<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword keyword-return\">return</span> x\n\n<span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">leftRotate</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Rotate left on node'</span><span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n    y <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>right\n    T2 <span class=\"token operator\">=</span> y<span class=\"token punctuation\">.</span>left\n    y<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> x\n    x<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> T2\n    x<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>getHeight<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> getHeight<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    y<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>getHeight<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> getHeight<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword keyword-return\">return</span> y\n\n<span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-if\">if</span> <span class=\"token keyword keyword-not\">not</span> node<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-return\">return</span> TreeNode<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword keyword-if\">if</span> data <span class=\"token operator\">&lt;</span> node<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">:</span>\n        node<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> insert<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword keyword-elif\">elif</span> data <span class=\"token operator\">&gt;</span> node<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">:</span>\n        node<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> insert<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Update the balance factor and balance the tree</span>\n    node<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>getHeight<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> getHeight<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    balance <span class=\"token operator\">=</span> getBalance<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Balancing the tree</span>\n    <span class=\"token comment\"># Left Left</span>\n    <span class=\"token keyword keyword-if\">if</span> balance <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span> <span class=\"token keyword keyword-and\">and</span> getBalance<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-return\">return</span> rightRotate<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Left Right</span>\n    <span class=\"token keyword keyword-if\">if</span> balance <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span> <span class=\"token keyword keyword-and\">and</span> getBalance<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        node<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> leftRotate<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword keyword-return\">return</span> rightRotate<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Right Right</span>\n    <span class=\"token keyword keyword-if\">if</span> balance <span class=\"token operator\">&lt;</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword keyword-and\">and</span> getBalance<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-return\">return</span> leftRotate<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Right Left</span>\n    <span class=\"token keyword keyword-if\">if</span> balance <span class=\"token operator\">&lt;</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword keyword-and\">and</span> getBalance<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        node<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> rightRotate<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword keyword-return\">return</span> leftRotate<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword keyword-return\">return</span> node\n\n<span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">inOrderTraversal</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-if\">if</span> node <span class=\"token keyword keyword-is\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-return\">return</span>\n    inOrderTraversal<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\", \"</span><span class=\"token punctuation\">)</span>\n    inOrderTraversal<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Inserting nodes</span>\nroot <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\nletters <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'D'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'H'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'G'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword keyword-for\">for</span> letter <span class=\"token keyword keyword-in\">in</span> letters<span class=\"token punctuation\">:</span>\n    root <span class=\"token operator\">=</span> insert<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> letter<span class=\"token punctuation\">)</span>\n\ninOrderTraversal<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "AVL Delete Node Implementation",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When deleting a node that is not a leaf node, the AVL Tree requires the minValueNode() function to find a node's next node in the in-order traversal. This is the same as when deleting a node in a Binary Search Tree, as explained on the previous page.",
      "html": "<p>When deleting a node that is not a leaf node, the AVL Tree requires the <code>minValueNode()</code> function to find a node's next  node in the in-order traversal. This is the same as when deleting a node in a Binary Search Tree, as explained on the previous page.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To delete a node in an AVL Tree, the same code to restore balance is needed as for the code to insert a node.",
      "html": "<p>To delete a node in an AVL Tree, the same code to restore balance is needed as for the code to insert a node.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-python"
        ],
        "isNotranslate": true
      },
      "code": "def\n\nminValueNode\n(\nnode\n)\n:\n\ncurrent\n=\nnode\n\nwhile\ncurrent\n.\nleft\nis\n\nnot\n\nNone\n:\n\ncurrent\n=\ncurrent\n.\nleft\n\nreturn\ncurrent\n\n\ndef\n\ndelete\n(\nnode\n,\ndata\n)\n:\n\n\nif\n\nnot\nnode\n:\n\n\nreturn\nnode\n\n\nif\ndata\n<\nnode\n.\ndata\n:\n\nnode\n.\nleft\n=\ndelete\n(\nnode\n.\nleft\n,\ndata\n)\n\n\nelif\ndata\n>\nnode\n.\ndata\n:\n\nnode\n.\nright\n=\ndelete\n(\nnode\n.\nright\n,\ndata\n)\n\n\nelse\n:\n\n\nif\nnode\n.\nleft\nis\n\nNone\n:\n\ntemp\n=\nnode\n.\nright\nnode\n=\n\nNone\n\n\nreturn\ntemp\n\nelif\nnode\n.\nright\nis\n\nNone\n:\n\ntemp\n=\nnode\n.\nleft\nnode\n=\n\nNone\n\n\nreturn\ntemp\n\ntemp\n=\nminValueNode\n(\nnode\n.\nright\n)\n\nnode\n.\ndata\n=\ntemp\n.\ndata\nnode\n.\nright\n=\ndelete\n(\nnode\n.\nright\n,\ntemp\n.\ndata\n)\n\n\n\nif\nnode\nis\n\nNone\n:\n\n\nreturn\nnode\n\n\n# Update the balance factor and balance the tree\n\nnode\n.\nheight\n=\n\n1\n\n+\n\nmax\n(\ngetHeight\n(\nnode\n.\nleft\n)\n,\ngetHeight\n(\nnode\n.\nright\n)\n)\n\nbalance\n=\ngetBalance\n(\nnode\n)\n\n\n\n# Balancing the tree\n\n\n# Left Left\n\n\nif\nbalance\n>\n\n1\n\nand\ngetBalance\n(\nnode\n.\nleft\n)\n\n>=\n\n0\n:\n\n\nreturn\nrightRotate\n(\nnode\n)\n\n\n\n# Left Right\n\n\nif\nbalance\n>\n\n1\n\nand\ngetBalance\n(\nnode\n.\nleft\n)\n\n<\n\n0\n:\n\nnode\n.\nleft\n=\nleftRotate\n(\nnode\n.\nleft\n)\n\n\nreturn\nrightRotate\n(\nnode\n)\n\n\n\n# Right Right\n\n\nif\nbalance\n<\n\n-\n1\n\nand\ngetBalance\n(\nnode\n.\nright\n)\n\n<=\n\n0\n:\n\n\nreturn\nleftRotate\n(\nnode\n)\n\n\n\n# Right Left\n\n\nif\nbalance\n<\n\n-\n1\n\nand\ngetBalance\n(\nnode\n.\nright\n)\n\n>\n\n0\n:\n\nnode\n.\nright\n=\nrightRotate\n(\nnode\n.\nright\n)\n\n\nreturn\nleftRotate\n(\nnode\n)\n\n\n\nreturn\nnode",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-python\" tabindex=\"0\"><code class=\"language-python\"><span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">minValueNode</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    current <span class=\"token operator\">=</span> node\n    <span class=\"token keyword keyword-while\">while</span> current<span class=\"token punctuation\">.</span>left <span class=\"token keyword keyword-is\">is</span> <span class=\"token keyword keyword-not\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        current <span class=\"token operator\">=</span> current<span class=\"token punctuation\">.</span>left\n    <span class=\"token keyword keyword-return\">return</span> current\n\n<span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-if\">if</span> <span class=\"token keyword keyword-not\">not</span> node<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-return\">return</span> node\n\n    <span class=\"token keyword keyword-if\">if</span> data <span class=\"token operator\">&lt;</span> node<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">:</span>\n        node<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> delete<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword keyword-elif\">elif</span> data <span class=\"token operator\">&gt;</span> node<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">:</span>\n        node<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> delete<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword keyword-else\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-if\">if</span> node<span class=\"token punctuation\">.</span>left <span class=\"token keyword keyword-is\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            temp <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>right\n            node <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n            <span class=\"token keyword keyword-return\">return</span> temp\n        <span class=\"token keyword keyword-elif\">elif</span> node<span class=\"token punctuation\">.</span>right <span class=\"token keyword keyword-is\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            temp <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>left\n            node <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n            <span class=\"token keyword keyword-return\">return</span> temp\n\n        temp <span class=\"token operator\">=</span> minValueNode<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span>\n        node<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">.</span>data\n        node<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> delete<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">,</span> temp<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword keyword-if\">if</span> node <span class=\"token keyword keyword-is\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-return\">return</span> node\n\n    <span class=\"token comment\"># Update the balance factor and balance the tree</span>\n    node<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>getHeight<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> getHeight<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    balance <span class=\"token operator\">=</span> getBalance<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Balancing the tree</span>\n    <span class=\"token comment\"># Left Left</span>\n    <span class=\"token keyword keyword-if\">if</span> balance <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span> <span class=\"token keyword keyword-and\">and</span> getBalance<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-return\">return</span> rightRotate<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Left Right</span>\n    <span class=\"token keyword keyword-if\">if</span> balance <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span> <span class=\"token keyword keyword-and\">and</span> getBalance<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        node<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> leftRotate<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword keyword-return\">return</span> rightRotate<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Right Right</span>\n    <span class=\"token keyword keyword-if\">if</span> balance <span class=\"token operator\">&lt;</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword keyword-and\">and</span> getBalance<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-return\">return</span> leftRotate<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Right Left</span>\n    <span class=\"token keyword keyword-if\">if</span> balance <span class=\"token operator\">&lt;</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword keyword-and\">and</span> getBalance<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        node<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> rightRotate<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword keyword-return\">return</span> leftRotate<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword keyword-return\">return</span> node\n</code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Time Complexity for AVL Trees",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Take a look at the unbalanced Binary Search Tree below. Searching for \"M\" means that all nodes except 1 must be compared. But searching for \"M\" in the AVL Tree below only requires us to visit 4 nodes.",
      "html": "<p>Take a look at the unbalanced Binary Search Tree below. Searching for \"M\" means that all nodes except 1 must be compared. But searching for \"M\" in the AVL Tree below only requires us to visit 4 nodes.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "So in worst case, algorithms like search, insert, and delete must run through the whole height of the tree. This means that keeping the height ( h h ) of the tree low, like we do using AVL Trees, gives us a lower runtime.",
      "html": "<p>So in worst case, algorithms like search, insert, and delete must run through the whole height of the tree. This means that keeping the height (<span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-5-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-70\"><span class=\"mjx-mrow\" id=\"MJXc-Node-71\"><span class=\"mjx-mi\" id=\"MJXc-Node-72\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>h</mi></math></span></span>) of the tree low, like we do using AVL Trees, gives us a lower runtime.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "See the comparison of the time complexities between Binary Search Trees and AVL Trees below, and how the time complexities relate to the height ( h h ) of the tree, and the number of nodes ( n n ) in the tree.",
      "html": "<p>See the comparison of the time complexities between Binary Search Trees and AVL Trees below, and how the time complexities relate to the height (<span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-6-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-73\"><span class=\"mjx-mrow\" id=\"MJXc-Node-74\"><span class=\"mjx-mi\" id=\"MJXc-Node-75\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>h</mi></math></span></span>) of the tree, and the number of nodes (<span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-7-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-76\"><span class=\"mjx-mrow\" id=\"MJXc-Node-77\"><span class=\"mjx-mi\" id=\"MJXc-Node-78\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span>) in the tree.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "O ( log n ) O ( log \u2061 n ) Explained",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The fact that the time complexity is O ( h ) = O ( log n ) O ( h ) = O ( log \u2061 n ) for search, insert, and delete on an AVL Tree with height h h and nodes n n can be explained like this:",
      "html": "<p>The fact that the time complexity is <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;&amp;#x2061;&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-11-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-111\"><span class=\"mjx-mrow\" id=\"MJXc-Node-112\"><span class=\"mjx-mi\" id=\"MJXc-Node-113\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-114\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-115\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-116\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-117\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-mi MJXc-space3\" id=\"MJXc-Node-118\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-119\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-120\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.563em;\">log</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-121\"><span class=\"mjx-char\"></span></span><span class=\"mjx-mi MJXc-space1\" id=\"MJXc-Node-122\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-123\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><mi>h</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>O</mi><mo stretchy=\"false\">(</mo><mi>log</mi><mo>\u2061</mo><mi>n</mi><mo stretchy=\"false\">)</mo></math></span></span> for search, insert, and delete on an AVL Tree with height <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-12-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-124\"><span class=\"mjx-mrow\" id=\"MJXc-Node-125\"><span class=\"mjx-mi\" id=\"MJXc-Node-126\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>h</mi></math></span></span> and nodes <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-13-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-127\"><span class=\"mjx-mrow\" id=\"MJXc-Node-128\"><span class=\"mjx-mi\" id=\"MJXc-Node-129\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span> can be explained like this:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Imagine a perfect Binary Tree where all nodes have two child nodes except on the lowest level, like the AVL Tree below.",
      "html": "<p>Imagine a perfect Binary Tree where all nodes have two child nodes except on the lowest level, like the AVL Tree below.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The number of nodes on each level in such an AVL Tree are:",
      "html": "<p>The number of nodes on each level in such an AVL Tree are:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "1 , 2 , 4 , 8 , 16 , 32 , . . 1 , 2 , 4 , 8 , 16 , 32 , . .",
      "html": "<p><span class=\"math display\"><span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MJXc-display\" style=\"text-align: center;\"><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;,&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mo&gt;,&lt;/mo&gt;&lt;mn&gt;4&lt;/mn&gt;&lt;mo&gt;,&lt;/mo&gt;&lt;mn&gt;8&lt;/mn&gt;&lt;mo&gt;,&lt;/mo&gt;&lt;mn&gt;16&lt;/mn&gt;&lt;mo&gt;,&lt;/mo&gt;&lt;mn&gt;32&lt;/mn&gt;&lt;mo&gt;,&lt;/mo&gt;&lt;mo&gt;.&lt;/mo&gt;&lt;mo&gt;.&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-14-Frame\" role=\"presentation\" style=\"font-size: 119%; text-align: center; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-130\"><span class=\"mjx-mrow\" id=\"MJXc-Node-131\"><span class=\"mjx-mn\" id=\"MJXc-Node-132\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">1</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-133\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.165em; padding-bottom: 0.563em;\">,</span></span><span class=\"mjx-mn MJXc-space1\" id=\"MJXc-Node-134\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-135\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.165em; padding-bottom: 0.563em;\">,</span></span><span class=\"mjx-mn MJXc-space1\" id=\"MJXc-Node-136\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">4</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-137\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.165em; padding-bottom: 0.563em;\">,</span></span><span class=\"mjx-mn MJXc-space1\" id=\"MJXc-Node-138\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">8</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-139\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.165em; padding-bottom: 0.563em;\">,</span></span><span class=\"mjx-mn MJXc-space1\" id=\"MJXc-Node-140\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">16</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-141\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.165em; padding-bottom: 0.563em;\">,</span></span><span class=\"mjx-mn MJXc-space1\" id=\"MJXc-Node-142\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">32</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-143\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.165em; padding-bottom: 0.563em;\">,</span></span><span class=\"mjx-mo MJXc-space1\" id=\"MJXc-Node-144\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.165em; padding-bottom: 0.339em;\">.</span></span><span class=\"mjx-mo MJXc-space1\" id=\"MJXc-Node-145\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.165em; padding-bottom: 0.339em;\">.</span></span></span></span><span class=\"MJX_Assistive_MathML MJX_Assistive_MathML_Block\" role=\"presentation\"><math display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>8</mn><mo>,</mo><mn>16</mn><mo>,</mo><mn>32</mn><mo>,</mo><mo>.</mo><mo>.</mo></math></span></span></span></span></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Which is the same as:",
      "html": "<p>Which is the same as:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "2 0 , 2 1 , 2 2 , 2 3 , 2 4 , 2 5 , . . 2 0 , 2 1 , 2 2 , 2 3 , 2 4 , 2 5 , . .",
      "html": "<p><span class=\"math display\"><span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MJXc-display\" style=\"text-align: center;\"><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;,&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;,&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;,&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;,&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;4&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;,&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;5&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;,&lt;/mo&gt;&lt;mo&gt;.&lt;/mo&gt;&lt;mo&gt;.&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-15-Frame\" role=\"presentation\" style=\"font-size: 119%; text-align: center; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-146\"><span class=\"mjx-mrow\" id=\"MJXc-Node-147\"><span class=\"mjx-msubsup\" id=\"MJXc-Node-148\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-149\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-150\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">0</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-151\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.165em; padding-bottom: 0.563em;\">,</span></span><span class=\"mjx-msubsup MJXc-space1\" id=\"MJXc-Node-152\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-153\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-154\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">1</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-155\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.165em; padding-bottom: 0.563em;\">,</span></span><span class=\"mjx-msubsup MJXc-space1\" id=\"MJXc-Node-156\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-157\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-158\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-159\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.165em; padding-bottom: 0.563em;\">,</span></span><span class=\"mjx-msubsup MJXc-space1\" id=\"MJXc-Node-160\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-161\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-162\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">3</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-163\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.165em; padding-bottom: 0.563em;\">,</span></span><span class=\"mjx-msubsup MJXc-space1\" id=\"MJXc-Node-164\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-165\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-166\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">4</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-167\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.165em; padding-bottom: 0.563em;\">,</span></span><span class=\"mjx-msubsup MJXc-space1\" id=\"MJXc-Node-168\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-169\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-170\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">5</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-171\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.165em; padding-bottom: 0.563em;\">,</span></span><span class=\"mjx-mo MJXc-space1\" id=\"MJXc-Node-172\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.165em; padding-bottom: 0.339em;\">.</span></span><span class=\"mjx-mo MJXc-space1\" id=\"MJXc-Node-173\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.165em; padding-bottom: 0.339em;\">.</span></span></span></span><span class=\"MJX_Assistive_MathML MJX_Assistive_MathML_Block\" role=\"presentation\"><math display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><msup><mn>2</mn><mn>0</mn></msup><mo>,</mo><msup><mn>2</mn><mn>1</mn></msup><mo>,</mo><msup><mn>2</mn><mn>2</mn></msup><mo>,</mo><msup><mn>2</mn><mn>3</mn></msup><mo>,</mo><msup><mn>2</mn><mn>4</mn></msup><mo>,</mo><msup><mn>2</mn><mn>5</mn></msup><mo>,</mo><mo>.</mo><mo>.</mo></math></span></span></span></span></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To get the number of nodes n n in a perfect Binary Tree with height h = 3 h = 3 , we can add the number of nodes on each level together:",
      "html": "<p>To get the number of nodes <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-16-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-174\"><span class=\"mjx-mrow\" id=\"MJXc-Node-175\"><span class=\"mjx-mi\" id=\"MJXc-Node-176\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span> in a perfect Binary Tree with height <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;/math&gt;' id=\"MathJax-Element-17-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-177\"><span class=\"mjx-mrow\" id=\"MJXc-Node-178\"><span class=\"mjx-mi\" id=\"MJXc-Node-179\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-180\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-mn MJXc-space3\" id=\"MJXc-Node-181\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">3</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>h</mi><mo>=</mo><mn>3</mn></math></span></span>, we can add the number of nodes on each level together:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "n 3 = 2 0 + 2 1 + 2 2 + 2 3 = 15 n 3 = 2 0 + 2 1 + 2 2 + 2 3 = 15",
      "html": "<p><span class=\"math display\"><span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MJXc-display\" style=\"text-align: center;\"><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"&gt;&lt;msub&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;15&lt;/mn&gt;&lt;/math&gt;' id=\"MathJax-Element-18-Frame\" role=\"presentation\" style=\"font-size: 119%; text-align: center; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-182\"><span class=\"mjx-mrow\" id=\"MJXc-Node-183\"><span class=\"mjx-msubsup\" id=\"MJXc-Node-184\"><span class=\"mjx-base\"><span class=\"mjx-mi\" id=\"MJXc-Node-185\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span><span class=\"mjx-sub\" style=\"font-size: 70.7%; vertical-align: -0.212em; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-186\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">3</span></span></span></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-187\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-msubsup MJXc-space3\" id=\"MJXc-Node-188\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-189\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-190\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">0</span></span></span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-191\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">+</span></span><span class=\"mjx-msubsup MJXc-space2\" id=\"MJXc-Node-192\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-193\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-194\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">1</span></span></span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-195\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">+</span></span><span class=\"mjx-msubsup MJXc-space2\" id=\"MJXc-Node-196\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-197\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-198\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-199\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">+</span></span><span class=\"mjx-msubsup MJXc-space2\" id=\"MJXc-Node-200\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-201\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-202\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">3</span></span></span></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-203\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-mn MJXc-space3\" id=\"MJXc-Node-204\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">15</span></span></span></span><span class=\"MJX_Assistive_MathML MJX_Assistive_MathML_Block\" role=\"presentation\"><math display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>n</mi><mn>3</mn></msub><mo>=</mo><msup><mn>2</mn><mn>0</mn></msup><mo>+</mo><msup><mn>2</mn><mn>1</mn></msup><mo>+</mo><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><msup><mn>2</mn><mn>3</mn></msup><mo>=</mo><mn>15</mn></math></span></span></span></span></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Which is actually the same as:",
      "html": "<p>Which is actually the same as:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "n 3 = 2 4 \u2212 1 = 15 n 3 = 2 4 \u2212 1 = 15",
      "html": "<p><span class=\"math display\"><span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MJXc-display\" style=\"text-align: center;\"><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"&gt;&lt;msub&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;4&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;&amp;#x2212;&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;15&lt;/mn&gt;&lt;/math&gt;' id=\"MathJax-Element-19-Frame\" role=\"presentation\" style=\"font-size: 119%; text-align: center; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-205\"><span class=\"mjx-mrow\" id=\"MJXc-Node-206\"><span class=\"mjx-msubsup\" id=\"MJXc-Node-207\"><span class=\"mjx-base\"><span class=\"mjx-mi\" id=\"MJXc-Node-208\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span><span class=\"mjx-sub\" style=\"font-size: 70.7%; vertical-align: -0.212em; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-209\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">3</span></span></span></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-210\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-msubsup MJXc-space3\" id=\"MJXc-Node-211\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-212\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-213\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">4</span></span></span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-214\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">\u2212</span></span><span class=\"mjx-mn MJXc-space2\" id=\"MJXc-Node-215\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">1</span></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-216\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-mn MJXc-space3\" id=\"MJXc-Node-217\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">15</span></span></span></span><span class=\"MJX_Assistive_MathML MJX_Assistive_MathML_Block\" role=\"presentation\"><math display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>n</mi><mn>3</mn></msub><mo>=</mo><msup><mn>2</mn><mn>4</mn></msup><mo>\u2212</mo><mn>1</mn><mo>=</mo><mn>15</mn></math></span></span></span></span></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "And this is actually the case for larger trees as well! If we want to get the number of nodes n n in a tree with height h = 5 h = 5 for example, we find the number of nodes like this:",
      "html": "<p>And this is actually the case for larger trees as well! If we want to get the number of nodes <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-20-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-218\"><span class=\"mjx-mrow\" id=\"MJXc-Node-219\"><span class=\"mjx-mi\" id=\"MJXc-Node-220\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span> in a tree with height <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;5&lt;/mn&gt;&lt;/math&gt;' id=\"MathJax-Element-21-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-221\"><span class=\"mjx-mrow\" id=\"MJXc-Node-222\"><span class=\"mjx-mi\" id=\"MJXc-Node-223\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-224\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-mn MJXc-space3\" id=\"MJXc-Node-225\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">5</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>h</mi><mo>=</mo><mn>5</mn></math></span></span> for example, we find the number of nodes like this:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "n 5 = 2 6 \u2212 1 = 63 n 5 = 2 6 \u2212 1 = 63",
      "html": "<p><span class=\"math display\"><span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MJXc-display\" style=\"text-align: center;\"><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"&gt;&lt;msub&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mn&gt;5&lt;/mn&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;6&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;&amp;#x2212;&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;63&lt;/mn&gt;&lt;/math&gt;' id=\"MathJax-Element-22-Frame\" role=\"presentation\" style=\"font-size: 119%; text-align: center; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-226\"><span class=\"mjx-mrow\" id=\"MJXc-Node-227\"><span class=\"mjx-msubsup\" id=\"MJXc-Node-228\"><span class=\"mjx-base\"><span class=\"mjx-mi\" id=\"MJXc-Node-229\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span><span class=\"mjx-sub\" style=\"font-size: 70.7%; vertical-align: -0.212em; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-230\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">5</span></span></span></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-231\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-msubsup MJXc-space3\" id=\"MJXc-Node-232\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-233\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-234\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">6</span></span></span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-235\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">\u2212</span></span><span class=\"mjx-mn MJXc-space2\" id=\"MJXc-Node-236\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">1</span></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-237\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-mn MJXc-space3\" id=\"MJXc-Node-238\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">63</span></span></span></span><span class=\"MJX_Assistive_MathML MJX_Assistive_MathML_Block\" role=\"presentation\"><math display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>n</mi><mn>5</mn></msub><mo>=</mo><msup><mn>2</mn><mn>6</mn></msup><mo>\u2212</mo><mn>1</mn><mo>=</mo><mn>63</mn></math></span></span></span></span></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "So in general, the relationship between the height h h of a perfect Binary Tree and the number of nodes in it n n , can be expressed like this:",
      "html": "<p>So in general, the relationship between the height <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-23-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-239\"><span class=\"mjx-mrow\" id=\"MJXc-Node-240\"><span class=\"mjx-mi\" id=\"MJXc-Node-241\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>h</mi></math></span></span> of a perfect Binary Tree and the number of nodes in it <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-24-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-242\"><span class=\"mjx-mrow\" id=\"MJXc-Node-243\"><span class=\"mjx-mi\" id=\"MJXc-Node-244\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span>, can be expressed like this:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "n h = 2 h + 1 \u2212 1 n h = 2 h + 1 \u2212 1",
      "html": "<p><span class=\"math display\"><span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MJXc-display\" style=\"text-align: center;\"><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"&gt;&lt;msub&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mrow class=\"MJX-TeXAtom-ORD\"&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;mo&gt;&amp;#x2212;&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/math&gt;' id=\"MathJax-Element-25-Frame\" role=\"presentation\" style=\"font-size: 119%; text-align: center; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-245\"><span class=\"mjx-mrow\" id=\"MJXc-Node-246\"><span class=\"mjx-msubsup\" id=\"MJXc-Node-247\"><span class=\"mjx-base\"><span class=\"mjx-mi\" id=\"MJXc-Node-248\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span><span class=\"mjx-sub\" style=\"font-size: 70.7%; vertical-align: -0.219em; padding-right: 0.071em;\"><span class=\"mjx-mi\" id=\"MJXc-Node-249\" style=\"\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span></span></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-250\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-msubsup MJXc-space3\" id=\"MJXc-Node-251\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-252\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-texatom\" id=\"MJXc-Node-253\" style=\"\"><span class=\"mjx-mrow\" id=\"MJXc-Node-254\"><span class=\"mjx-mi\" id=\"MJXc-Node-255\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-256\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">+</span></span><span class=\"mjx-mn\" id=\"MJXc-Node-257\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">1</span></span></span></span></span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-258\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">\u2212</span></span><span class=\"mjx-mn MJXc-space2\" id=\"MJXc-Node-259\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">1</span></span></span></span><span class=\"MJX_Assistive_MathML MJX_Assistive_MathML_Block\" role=\"presentation\"><math display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>n</mi><mi>h</mi></msub><mo>=</mo><msup><mn>2</mn><mrow class=\"MJX-TeXAtom-ORD\"><mi>h</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>\u2212</mo><mn>1</mn></math></span></span></span></span></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: The formula above can also be found by calculating the sum of the geometric series 2 0 + 2 1 + 2 2 + 2 3 + . . . + 2 n 2 0 + 2 1 + 2 2 + 2 3 + . . . + 2 n",
      "html": "<p><strong>Note: </strong>The formula above can also be found by calculating the sum of the geometric series <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mo&gt;.&lt;/mo&gt;&lt;mo&gt;.&lt;/mo&gt;&lt;mo&gt;.&lt;/mo&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msup&gt;&lt;/math&gt;' id=\"MathJax-Element-26-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-260\"><span class=\"mjx-mrow\" id=\"MJXc-Node-261\"><span class=\"mjx-msubsup\" id=\"MJXc-Node-262\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-263\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-264\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">0</span></span></span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-265\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">+</span></span><span class=\"mjx-msubsup MJXc-space2\" id=\"MJXc-Node-266\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-267\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-268\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">1</span></span></span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-269\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">+</span></span><span class=\"mjx-msubsup MJXc-space2\" id=\"MJXc-Node-270\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-271\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-272\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-273\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">+</span></span><span class=\"mjx-msubsup MJXc-space2\" id=\"MJXc-Node-274\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-275\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-276\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">3</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-277\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">+</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-278\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.165em; padding-bottom: 0.339em;\">.</span></span><span class=\"mjx-mo MJXc-space1\" id=\"MJXc-Node-279\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.165em; padding-bottom: 0.339em;\">.</span></span><span class=\"mjx-mo MJXc-space1\" id=\"MJXc-Node-280\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.165em; padding-bottom: 0.339em;\">.</span></span><span class=\"mjx-mo MJXc-space1\" id=\"MJXc-Node-281\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">+</span></span><span class=\"mjx-msubsup\" id=\"MJXc-Node-282\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-283\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mi\" id=\"MJXc-Node-284\" style=\"\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msup><mn>2</mn><mn>0</mn></msup><mo>+</mo><msup><mn>2</mn><mn>1</mn></msup><mo>+</mo><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><msup><mn>2</mn><mn>3</mn></msup><mo>+</mo><mo>.</mo><mo>.</mo><mo>.</mo><mo>+</mo><msup><mn>2</mn><mi>n</mi></msup></math></span></span></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We know that the time complexity for searching, deleting, or inserting a node in an AVL tree is O ( h ) O ( h ) , but we want to argue that the time complexity is actually O ( log ( n ) ) O ( log \u2061 ( n ) ) , so we need to find the height h h described by the number of nodes n n :",
      "html": "<p>We know that the time complexity for searching, deleting, or inserting a node in an AVL tree is <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-27-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-285\"><span class=\"mjx-mrow\" id=\"MJXc-Node-286\"><span class=\"mjx-mi\" id=\"MJXc-Node-287\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-288\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-289\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-290\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><mi>h</mi><mo stretchy=\"false\">)</mo></math></span></span>, but we want to argue that the time complexity is actually <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;&amp;#x2061;&lt;/mo&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-28-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-291\"><span class=\"mjx-mrow\" id=\"MJXc-Node-292\"><span class=\"mjx-mi\" id=\"MJXc-Node-293\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-294\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-295\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.563em;\">log</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-296\"><span class=\"mjx-char\"></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-297\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-298\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-299\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-300\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><mi>log</mi><mo>\u2061</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></math></span></span>, so we need to find the height <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-29-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-301\"><span class=\"mjx-mrow\" id=\"MJXc-Node-302\"><span class=\"mjx-mi\" id=\"MJXc-Node-303\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>h</mi></math></span></span> described by the number of nodes <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-30-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-304\"><span class=\"mjx-mrow\" id=\"MJXc-Node-305\"><span class=\"mjx-mi\" id=\"MJXc-Node-306\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span>:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "n = 2 h + 1 \u2212 1 n + 1 = 2 h + 1 log 2 ( n + 1 ) = log 2 ( 2 h + 1 ) h = log 2 ( n + 1 ) \u2212 1 O ( h ) = O ( log n ) n = 2 h + 1 \u2212 1 n + 1 = 2 h + 1 log 2 \u2061 ( n + 1 ) = log 2 \u2061 ( 2 h + 1 ) h = log 2 \u2061 ( n + 1 ) \u2212 1 O ( h ) = O ( log \u2061 n )",
      "html": "<p><span class=\"math display\"><span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MJXc-display\" style=\"text-align: center;\"><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"&gt;&lt;mtable columnalign=\"right left right left right left right left right left right left\" rowspacing=\"3pt\" columnspacing=\"0em 2em 0em 2em 0em 2em 0em 2em 0em 2em 0em\" displaystyle=\"true\"&gt;&lt;mtr&gt;&lt;mtd&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mtd&gt;&lt;mtd&gt;&lt;mi&gt;&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mrow class=\"MJX-TeXAtom-ORD\"&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;mo&gt;&amp;#x2212;&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mtd&gt;&lt;/mtr&gt;&lt;mtr&gt;&lt;mtd&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mtd&gt;&lt;mtd&gt;&lt;mi&gt;&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mrow class=\"MJX-TeXAtom-ORD\"&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;/mtd&gt;&lt;/mtr&gt;&lt;mtr&gt;&lt;mtd&gt;&lt;msub&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mo&gt;&amp;#x2061;&lt;/mo&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/mtd&gt;&lt;mtd&gt;&lt;mi&gt;&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mo&gt;&amp;#x2061;&lt;/mo&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mrow class=\"MJX-TeXAtom-ORD\"&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/mtd&gt;&lt;/mtr&gt;&lt;mtr&gt;&lt;mtd&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;/mtd&gt;&lt;mtd&gt;&lt;mi&gt;&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mo&gt;&amp;#x2061;&lt;/mo&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;mo&gt;&amp;#x2212;&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mtd&gt;&lt;/mtr&gt;&lt;mtr&gt;&lt;mtd /&gt;&lt;/mtr&gt;&lt;mtr&gt;&lt;mtd&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/mtd&gt;&lt;mtd&gt;&lt;mi&gt;&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;&amp;#x2061;&lt;/mo&gt;&lt;mrow class=\"MJX-TeXAtom-ORD\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mrow&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/mtd&gt;&lt;/mtr&gt;&lt;/mtable&gt;&lt;/math&gt;' id=\"MathJax-Element-31-Frame\" role=\"presentation\" style=\"font-size: 119%; text-align: center; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-307\"><span class=\"mjx-mrow\" id=\"MJXc-Node-308\"><span class=\"mjx-mtable\" id=\"MJXc-Node-309\" style=\"vertical-align: -3.811em; padding: 0px 0.167em;\"><span class=\"mjx-table\"><span class=\"mjx-mtr\" id=\"MJXc-Node-310\" style=\"height: 1.276em;\"><span class=\"mjx-mtd\" id=\"MJXc-Node-311\" style=\"padding: 0px; text-align: right; width: 4.767em;\"><span class=\"mjx-mrow\" id=\"MJXc-Node-312\" style=\"margin-top: -0.074em;\"><span class=\"mjx-mi\" id=\"MJXc-Node-313\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-strut\"></span></span></span><span class=\"mjx-mtd\" id=\"MJXc-Node-314\" style=\"padding: 0px; text-align: left; width: 7.823em;\"><span class=\"mjx-mrow\" id=\"MJXc-Node-315\" style=\"margin-top: -0.074em;\"><span class=\"mjx-mi\" id=\"MJXc-Node-316\"></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-317\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-msubsup MJXc-space3\" id=\"MJXc-Node-318\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-319\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-texatom\" id=\"MJXc-Node-320\" style=\"\"><span class=\"mjx-mrow\" id=\"MJXc-Node-321\"><span class=\"mjx-mi\" id=\"MJXc-Node-322\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-323\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">+</span></span><span class=\"mjx-mn\" id=\"MJXc-Node-324\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">1</span></span></span></span></span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-325\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">\u2212</span></span><span class=\"mjx-mn MJXc-space2\" id=\"MJXc-Node-326\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">1</span></span><span class=\"mjx-strut\"></span></span></span></span><span class=\"mjx-mtr\" id=\"MJXc-Node-327\" style=\"height: 1.426em;\"><span class=\"mjx-mtd\" id=\"MJXc-Node-328\" style=\"padding: 0.15em 0px 0px; text-align: right;\"><span class=\"mjx-mrow\" id=\"MJXc-Node-329\" style=\"margin-top: -0.074em;\"><span class=\"mjx-mi\" id=\"MJXc-Node-330\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-331\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">+</span></span><span class=\"mjx-mn MJXc-space2\" id=\"MJXc-Node-332\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">1</span></span><span class=\"mjx-strut\"></span></span></span><span class=\"mjx-mtd\" id=\"MJXc-Node-333\" style=\"padding: 0.15em 0px 0px; text-align: left;\"><span class=\"mjx-mrow\" id=\"MJXc-Node-334\" style=\"margin-top: -0.074em;\"><span class=\"mjx-mi\" id=\"MJXc-Node-335\"></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-336\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-msubsup MJXc-space3\" id=\"MJXc-Node-337\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-338\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-texatom\" id=\"MJXc-Node-339\" style=\"\"><span class=\"mjx-mrow\" id=\"MJXc-Node-340\"><span class=\"mjx-mi\" id=\"MJXc-Node-341\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-342\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">+</span></span><span class=\"mjx-mn\" id=\"MJXc-Node-343\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">1</span></span></span></span></span></span><span class=\"mjx-strut\"></span></span></span></span><span class=\"mjx-mtr\" id=\"MJXc-Node-344\" style=\"height: 1.51em;\"><span class=\"mjx-mtd\" id=\"MJXc-Node-345\" style=\"padding: 0.15em 0px 0px; text-align: right;\"><span class=\"mjx-mrow\" id=\"MJXc-Node-346\" style=\"margin-top: -0.074em;\"><span class=\"mjx-msubsup\" id=\"MJXc-Node-347\"><span class=\"mjx-base\"><span class=\"mjx-mi\" id=\"MJXc-Node-348\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.563em;\">log</span></span></span><span class=\"mjx-sub\" style=\"font-size: 70.7%; vertical-align: -0.377em; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-349\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-350\"><span class=\"mjx-char\"></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-351\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-352\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-353\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">+</span></span><span class=\"mjx-mn MJXc-space2\" id=\"MJXc-Node-354\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">1</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-355\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-strut\"></span></span></span><span class=\"mjx-mtd\" id=\"MJXc-Node-356\" style=\"padding: 0.15em 0px 0px; text-align: left;\"><span class=\"mjx-mrow\" id=\"MJXc-Node-357\" style=\"margin-top: -0.074em;\"><span class=\"mjx-mi\" id=\"MJXc-Node-358\"></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-359\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-msubsup MJXc-space3\" id=\"MJXc-Node-360\"><span class=\"mjx-base\"><span class=\"mjx-mi\" id=\"MJXc-Node-361\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.563em;\">log</span></span></span><span class=\"mjx-sub\" style=\"font-size: 70.7%; vertical-align: -0.377em; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-362\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-363\"><span class=\"mjx-char\"></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-364\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-msubsup\" id=\"MJXc-Node-365\"><span class=\"mjx-base\"><span class=\"mjx-mn\" id=\"MJXc-Node-366\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.591em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-texatom\" id=\"MJXc-Node-367\" style=\"\"><span class=\"mjx-mrow\" id=\"MJXc-Node-368\"><span class=\"mjx-mi\" id=\"MJXc-Node-369\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-370\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">+</span></span><span class=\"mjx-mn\" id=\"MJXc-Node-371\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">1</span></span></span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-372\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-strut\"></span></span></span></span><span class=\"mjx-mtr\" id=\"MJXc-Node-373\" style=\"height: 1.384em;\"><span class=\"mjx-mtd\" id=\"MJXc-Node-374\" style=\"padding: 0.15em 0px 0px; text-align: right;\"><span class=\"mjx-mrow\" id=\"MJXc-Node-375\" style=\"margin-top: -0.2em;\"><span class=\"mjx-mi\" id=\"MJXc-Node-376\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span><span class=\"mjx-strut\"></span></span></span><span class=\"mjx-mtd\" id=\"MJXc-Node-377\" style=\"padding: 0.15em 0px 0px; text-align: left;\"><span class=\"mjx-mrow\" id=\"MJXc-Node-378\" style=\"margin-top: -0.2em;\"><span class=\"mjx-mi\" id=\"MJXc-Node-379\"></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-380\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-msubsup MJXc-space3\" id=\"MJXc-Node-381\"><span class=\"mjx-base\"><span class=\"mjx-mi\" id=\"MJXc-Node-382\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.563em;\">log</span></span></span><span class=\"mjx-sub\" style=\"font-size: 70.7%; vertical-align: -0.377em; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-383\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-384\"><span class=\"mjx-char\"></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-385\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-386\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-387\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">+</span></span><span class=\"mjx-mn MJXc-space2\" id=\"MJXc-Node-388\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">1</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-389\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-390\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">\u2212</span></span><span class=\"mjx-mn MJXc-space2\" id=\"MJXc-Node-391\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">1</span></span><span class=\"mjx-strut\"></span></span></span></span><span class=\"mjx-mtr\" id=\"MJXc-Node-392\" style=\"height: 1.3em;\"><span class=\"mjx-mtd\" id=\"MJXc-Node-393\" style=\"padding: 0.15em 0px 0px; text-align: right;\"><span class=\"mjx-mrow\" id=\"MJXc-Node-394\" style=\"margin-top: -0.2em;\"><span class=\"mjx-strut\"></span></span></span><span class=\"mjx-mtd\" style=\"padding: 0.15em 0px 0px; text-align: left;\"><span style=\"margin-top: -0.2em;\"></span></span></span><span class=\"mjx-mtr\" id=\"MJXc-Node-395\" style=\"height: 1.225em;\"><span class=\"mjx-mtd\" id=\"MJXc-Node-396\" style=\"padding: 0.15em 0px 0px; text-align: right;\"><span class=\"mjx-mrow\" id=\"MJXc-Node-397\" style=\"margin-top: -0.2em;\"><span class=\"mjx-mi\" id=\"MJXc-Node-398\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-399\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-400\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-401\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-strut\"></span></span></span><span class=\"mjx-mtd\" id=\"MJXc-Node-402\" style=\"padding: 0.15em 0px 0px; text-align: left;\"><span class=\"mjx-mrow\" id=\"MJXc-Node-403\" style=\"margin-top: -0.2em;\"><span class=\"mjx-mi\" id=\"MJXc-Node-404\"></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-405\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-mi MJXc-space3\" id=\"MJXc-Node-406\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-407\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-408\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.563em;\">log</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-409\"><span class=\"mjx-char\"></span></span><span class=\"mjx-texatom MJXc-space1\" id=\"MJXc-Node-410\"><span class=\"mjx-mrow\" id=\"MJXc-Node-411\"><span class=\"mjx-mi\" id=\"MJXc-Node-412\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-413\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-strut\"></span></span></span></span></span></span></span></span><span class=\"MJX_Assistive_MathML MJX_Assistive_MathML_Block\" role=\"presentation\"><math display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><mtable columnalign=\"right left right left right left right left right left right left\" columnspacing=\"0em 2em 0em 2em 0em 2em 0em 2em 0em 2em 0em\" displaystyle=\"true\" rowspacing=\"3pt\"><mtr><mtd><mi>n</mi></mtd><mtd><mi></mi><mo>=</mo><msup><mn>2</mn><mrow class=\"MJX-TeXAtom-ORD\"><mi>h</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>\u2212</mo><mn>1</mn></mtd></mtr><mtr><mtd><mi>n</mi><mo>+</mo><mn>1</mn></mtd><mtd><mi></mi><mo>=</mo><msup><mn>2</mn><mrow class=\"MJX-TeXAtom-ORD\"><mi>h</mi><mo>+</mo><mn>1</mn></mrow></msup></mtd></mtr><mtr><mtd><msub><mi>log</mi><mn>2</mn></msub><mo>\u2061</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mtd><mtd><mi></mi><mo>=</mo><msub><mi>log</mi><mn>2</mn></msub><mo>\u2061</mo><mo stretchy=\"false\">(</mo><msup><mn>2</mn><mrow class=\"MJX-TeXAtom-ORD\"><mi>h</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">)</mo></mtd></mtr><mtr><mtd><mi>h</mi></mtd><mtd><mi></mi><mo>=</mo><msub><mi>log</mi><mn>2</mn></msub><mo>\u2061</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>\u2212</mo><mn>1</mn></mtd></mtr><mtr><mtd></mtd></mtr><mtr><mtd><mi>O</mi><mo stretchy=\"false\">(</mo><mi>h</mi><mo stretchy=\"false\">)</mo></mtd><mtd><mi></mi><mo>=</mo><mi>O</mi><mo stretchy=\"false\">(</mo><mi>log</mi><mo>\u2061</mo><mrow class=\"MJX-TeXAtom-ORD\"><mi>n</mi></mrow><mo stretchy=\"false\">)</mo></mtd></mtr></mtable></math></span></span></span></span></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "this page",
          "href": "https://www.w3schools.com/dsa_timecomplexity_theory.php",
          "title": ""
        }
      ],
      "text": "How the last line above is derived might not be obvious, but for a Binary Tree with a lot of nodes (big n n ), the \"+1\" and \"-1\" terms are not important when we consider time complexity. For more details on how to calculate the time complexity using Big O notation, see this page .",
      "html": "<p>How the last line above is derived might not be obvious, but for a Binary Tree with a lot of nodes (big <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-32-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-414\"><span class=\"mjx-mrow\" id=\"MJXc-Node-415\"><span class=\"mjx-mi\" id=\"MJXc-Node-416\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span>), the \"+1\" and \"-1\" terms are not important when we consider time complexity. For more details on how to calculate the time complexity using Big O notation, see <a href=\"dsa_timecomplexity_theory.php\">this page</a>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The math above shows that the time complexity for search, delete, and insert operations on an AVL Tree O ( h ) O ( h ) , can actually be expressed as O ( log n ) O ( log \u2061 n ) , which is fast, a lot faster than the time complexity for BSTs which is O ( n ) O ( n ) .",
      "html": "<p>The math above shows that the time complexity for search, delete, and insert operations on an AVL Tree <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-33-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-417\"><span class=\"mjx-mrow\" id=\"MJXc-Node-418\"><span class=\"mjx-mi\" id=\"MJXc-Node-419\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-420\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-421\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em;\">h</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-422\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><mi>h</mi><mo stretchy=\"false\">)</mo></math></span></span>, can actually be expressed as <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;&amp;#x2061;&lt;/mo&gt;&lt;mrow class=\"MJX-TeXAtom-ORD\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mrow&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-34-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-423\"><span class=\"mjx-mrow\" id=\"MJXc-Node-424\"><span class=\"mjx-mi\" id=\"MJXc-Node-425\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-426\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-427\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.563em;\">log</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-428\"><span class=\"mjx-char\"></span></span><span class=\"mjx-texatom MJXc-space1\" id=\"MJXc-Node-429\"><span class=\"mjx-mrow\" id=\"MJXc-Node-430\"><span class=\"mjx-mi\" id=\"MJXc-Node-431\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-432\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><mi>log</mi><mo>\u2061</mo><mrow class=\"MJX-TeXAtom-ORD\"><mi>n</mi></mrow><mo stretchy=\"false\">)</mo></math></span></span>, which is fast, a lot faster than the time complexity for BSTs which is <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-35-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-433\"><span class=\"mjx-mrow\" id=\"MJXc-Node-434\"><span class=\"mjx-mi\" id=\"MJXc-Node-435\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-436\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-437\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-438\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></math></span></span>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "DSA Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Test Yourself With Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise:",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Each node in the AVL Tree below is displayed together with its balance factor:",
      "html": "<p>Each node in the AVL Tree below is displayed together with its balance factor:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What is the balance factor?",
      "html": "<p>What is the balance factor?</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "The balance factor is the\ndifference between each node's\nleft and right subtree\n.",
      "language": "unknown",
      "code_html": "<pre style=\"overflow: auto;\">The balance factor is the \ndifference between each node's \nleft and right subtree <input maxlength=\"7\" name=\"ex1\" style=\"width: 8ch;\"/>.\n</pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Start the Exercise",
          "href": "https://www.w3schools.com/exercise.php?filename=exercise_data_avltrees1",
          "title": ""
        }
      ],
      "text": "Start the Exercise",
      "html": "<p><a href=\"exercise.php?filename=exercise_data_avltrees1\" target=\"_blank\">Start the Exercise</a></p>"
    }
  ]
}