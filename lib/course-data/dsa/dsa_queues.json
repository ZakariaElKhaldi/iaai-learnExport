{
  "title": "DSA Queues",
  "url": "https://www.w3schools.com/dsa/dsa_data_queues.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "DSA Queues",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Queues",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A queue is a data structure that can hold many elements.",
      "html": "<p>A queue is a data structure that can hold many elements.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Result:",
      "html": "<p>Result: </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Think of a queue as people standing in line in a supermarket.",
      "html": "<p>Think of a queue as people standing in line in a supermarket.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The first person to stand in line is also the first who can pay and leave the supermarket. This way of organizing elements is called FIFO: First In First Out.",
      "html": "<p>The first person to stand in line is also the first who can pay and leave the supermarket. This way of organizing elements is called FIFO: First In First Out.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Basic operations we can do on a queue are:",
      "html": "<p>Basic operations we can do on a queue are:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Experiment with these basic operations in the queue animation above.",
      "html": "<p>Experiment with these basic operations in the queue animation above.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Queues can be implemented by using arrays or linked lists.",
      "html": "<p>Queues can be implemented by using arrays or linked lists.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Queues can be used to implement job scheduling for an office printer, order processing for e-tickets, or to create algorithms for breadth-first search in graphs.",
      "html": "<p>Queues can be used to implement job scheduling for an office printer, order processing for e-tickets, or to create algorithms for breadth-first search in graphs.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "previous page",
          "href": "https://www.w3schools.com/dsa_data_stacks.php",
          "title": ""
        }
      ],
      "text": "Queues are often mentioned together with Stacks, which is a similar data structure described on the previous page .",
      "html": "<p>Queues are often mentioned together with Stacks, which is a similar data structure described on the <a href=\"dsa_data_stacks.php\">previous page</a>.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Queue Implementation using Arrays",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "this page",
          "href": "https://www.w3schools.com/dsa_theory_linkedlists_memory.php",
          "title": ""
        }
      ],
      "text": "To better understand the benefits with using arrays or linked lists to implement queues, you should check out this page that explains how arrays and linked lists are stored in memory.",
      "html": "<p>To better understand the benefits with using arrays or linked lists to implement queues, you should check out <a href=\"dsa_theory_linkedlists_memory.php\">this page</a> that explains how arrays and linked lists are stored in memory.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This is how it looks like when we use an array as a queue:",
      "html": "<p>This is how it looks like when we use an array as a queue:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Result:",
      "html": "<p>Result: </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Reasons to implement queues using arrays:",
      "html": "<p>Reasons to implement queues using arrays:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Reasons for not using arrays to implement queues:",
      "html": "<p>Reasons for <strong>not</strong> using arrays to implement queues:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "here",
          "href": "https://www.w3schools.com/python/python_lists.asp",
          "title": ""
        }
      ],
      "text": "Note: When using arrays in Python for this tutorial, we are really using the Python 'list' data type, but for the scope of this tutorial the 'list' data type can be used in the same way as an array. Learn more about Python lists here .",
      "html": "<p><strong>Note:</strong> When using arrays in Python for this tutorial, we are really using the Python 'list' data type, but for the scope of this tutorial the 'list' data type can be used in the same way as an array. Learn more about Python lists <a href=\"https://www.w3schools.com/python/python_lists.asp\">here</a>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Since Python lists has good support for functionality needed to implement queues, we start with creating a queue and do queue operations with just a few lines:",
      "html": "<p>Since Python lists has good support for functionality needed to implement queues, we start with creating a queue and do queue operations with just a few lines:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-python"
        ],
        "isNotranslate": true
      },
      "code": "queue\n=\n\n[\n]\n\n\n\n# Enqueue\n\nqueue\n.\nappend\n(\n'A'\n)\n\nqueue\n.\nappend\n(\n'B'\n)\n\nqueue\n.\nappend\n(\n'C'\n)\n\n\nprint\n(\n\"Queue: \"\n,\nqueue\n)\n\n\n\n# Dequeue\n\nelement\n=\nqueue\n.\npop\n(\n0\n)\n\n\nprint\n(\n\"Dequeue: \"\n,\nelement\n)\n\n\n\n# Peek\n\nfrontElement\n=\nqueue\n[\n0\n]\n\n\nprint\n(\n\"Peek: \"\n,\nfrontElement\n)\n\n\n\n# isEmpty\n\nisEmpty\n=\n\nnot\n\nbool\n(\nqueue\n)\n\n\nprint\n(\n\"isEmpty: \"\n,\nisEmpty\n)\n\n\n\n# Size\n\n\nprint\n(\n\"Size: \"\n,\n\nlen\n(\nqueue\n)\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-python\" tabindex=\"0\"><code class=\"language-python\">queue <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># Enqueue</span>\nqueue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">)</span>\nqueue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">)</span>\nqueue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Queue: \"</span><span class=\"token punctuation\">,</span> queue<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Dequeue</span>\nelement <span class=\"token operator\">=</span> queue<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Dequeue: \"</span><span class=\"token punctuation\">,</span> element<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Peek</span>\nfrontElement <span class=\"token operator\">=</span> queue<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Peek: \"</span><span class=\"token punctuation\">,</span> frontElement<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># isEmpty</span>\nisEmpty <span class=\"token operator\">=</span> <span class=\"token keyword keyword-not\">not</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">)</span>\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"isEmpty: \"</span><span class=\"token punctuation\">,</span> isEmpty<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Size</span>\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Size: \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "But to explicitly create a data structure for queues, with basic operations, we should create a queue class instead. This way of creating queues in Python is also more similar to how queues can be created in other programming languages like C and Java.",
      "html": "<p>But to explicitly create a data structure for queues, with basic operations, we should create a queue class instead. This way of creating queues in Python is also more similar to how queues can be created in other programming languages like C and Java.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-python"
        ],
        "isNotranslate": true
      },
      "code": "class\n\nQueue\n:\n\n\ndef\n\n__init__\n(\nself\n)\n:\n\nself\n.\nqueue\n=\n\n[\n]\n\n\n\ndef\n\nenqueue\n(\nself\n,\nelement\n)\n:\n\nself\n.\nqueue\n.\nappend\n(\nelement\n)\n\n\n\ndef\n\ndequeue\n(\nself\n)\n:\n\n\nif\nself\n.\nisEmpty\n(\n)\n:\n\n\nreturn\n\n\"Queue is empty\"\n\n\nreturn\nself\n.\nqueue\n.\npop\n(\n0\n)\n\n\n\ndef\n\npeek\n(\nself\n)\n:\n\n\nif\nself\n.\nisEmpty\n(\n)\n:\n\n\nreturn\n\n\"Queue is empty\"\n\n\nreturn\nself\n.\nqueue\n[\n0\n]\n\n\n\ndef\n\nisEmpty\n(\nself\n)\n:\n\n\nreturn\n\nlen\n(\nself\n.\nqueue\n)\n\n==\n\n0\n\n\n\ndef\n\nsize\n(\nself\n)\n:\n\n\nreturn\n\nlen\n(\nself\n.\nqueue\n)\n\n\n\n# Create a queue\n\nmyQueue\n=\nQueue\n(\n)\n\n\nmyQueue\n.\nenqueue\n(\n'A'\n)\n\nmyQueue\n.\nenqueue\n(\n'B'\n)\n\nmyQueue\n.\nenqueue\n(\n'C'\n)\n\n\nprint\n(\n\"Queue: \"\n,\nmyQueue\n.\nqueue\n)\n\n\n\nprint\n(\n\"Dequeue: \"\n,\nmyQueue\n.\ndequeue\n(\n)\n)\n\n\n\nprint\n(\n\"Peek: \"\n,\nmyQueue\n.\npeek\n(\n)\n)\n\n\n\nprint\n(\n\"isEmpty: \"\n,\nmyQueue\n.\nisEmpty\n(\n)\n)\n\n\n\nprint\n(\n\"Size: \"\n,\nmyQueue\n.\nsize\n(\n)\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-python\" tabindex=\"0\"><code class=\"language-python\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Queue</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>queue <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    \n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">enqueue</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">dequeue</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-if\">if</span> self<span class=\"token punctuation\">.</span>isEmpty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword keyword-return\">return</span> <span class=\"token string\">\"Queue is empty\"</span>\n        <span class=\"token keyword keyword-return\">return</span> self<span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">peek</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-if\">if</span> self<span class=\"token punctuation\">.</span>isEmpty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword keyword-return\">return</span> <span class=\"token string\">\"Queue is empty\"</span>\n        <span class=\"token keyword keyword-return\">return</span> self<span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    \n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-return\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span>\n    \n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">size</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-return\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Create a queue</span>\nmyQueue <span class=\"token operator\">=</span> Queue<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nmyQueue<span class=\"token punctuation\">.</span>enqueue<span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">)</span>\nmyQueue<span class=\"token punctuation\">.</span>enqueue<span class=\"token punctuation\">(</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">)</span>\nmyQueue<span class=\"token punctuation\">.</span>enqueue<span class=\"token punctuation\">(</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Queue: \"</span><span class=\"token punctuation\">,</span> myQueue<span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Dequeue: \"</span><span class=\"token punctuation\">,</span> myQueue<span class=\"token punctuation\">.</span>dequeue<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Peek: \"</span><span class=\"token punctuation\">,</span> myQueue<span class=\"token punctuation\">.</span>peek<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"isEmpty: \"</span><span class=\"token punctuation\">,</span> myQueue<span class=\"token punctuation\">.</span>isEmpty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Size: \"</span><span class=\"token punctuation\">,</span> myQueue<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Queue Implementation using Linked Lists",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Reasons for using linked lists to implement queues:",
      "html": "<p>Reasons for using linked lists to implement queues:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Reasons for not using linked lists to implement queues:",
      "html": "<p>Reasons for <strong>not</strong> using linked lists to implement queues:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This is how a queue can be implemented using a linked list.",
      "html": "<p>This is how a queue can be implemented using a linked list.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-python"
        ],
        "isNotranslate": true
      },
      "code": "class\n\nNode\n:\n\n\ndef\n\n__init__\n(\nself\n,\ndata\n)\n:\n\nself\n.\ndata\n=\ndata\nself\n.\nnext\n\n=\n\nNone\n\n\n\nclass\n\nQueue\n:\n\n\ndef\n\n__init__\n(\nself\n)\n:\n\nself\n.\nfront\n=\n\nNone\n\nself\n.\nrear\n=\n\nNone\n\nself\n.\nlength\n=\n\n0\n\n\n\ndef\n\nenqueue\n(\nself\n,\nelement\n)\n:\n\nnew_node\n=\nNode\n(\nelement\n)\n\n\nif\nself\n.\nrear\nis\n\nNone\n:\n\nself\n.\nfront\n=\nself\n.\nrear\n=\nnew_node\nself\n.\nlength\n+=\n\n1\n\n\nreturn\n\nself\n.\nrear\n.\nnext\n\n=\nnew_node\nself\n.\nrear\n=\nnew_node\nself\n.\nlength\n+=\n\n1\n\n\n\ndef\n\ndequeue\n(\nself\n)\n:\n\n\nif\nself\n.\nisEmpty\n(\n)\n:\n\n\nreturn\n\n\"Queue is empty\"\n\ntemp\n=\nself\n.\nfront\nself\n.\nfront\n=\ntemp\n.\nnext\n\nself\n.\nlength\n-=\n\n1\n\n\nif\nself\n.\nfront\nis\n\nNone\n:\n\nself\n.\nrear\n=\n\nNone\n\n\nreturn\ntemp\n.\ndata\n\n\ndef\n\npeek\n(\nself\n)\n:\n\n\nif\nself\n.\nisEmpty\n(\n)\n:\n\n\nreturn\n\n\"Queue is empty\"\n\n\nreturn\nself\n.\nfront\n.\ndata\n\n\ndef\n\nisEmpty\n(\nself\n)\n:\n\n\nreturn\nself\n.\nlength\n==\n\n0\n\n\n\ndef\n\nsize\n(\nself\n)\n:\n\n\nreturn\nself\n.\nlength\n\n\ndef\n\nprintQueue\n(\nself\n)\n:\n\ntemp\n=\nself\n.\nfront\n\nwhile\ntemp\n:\n\n\nprint\n(\ntemp\n.\ndata\n,\nend\n=\n\" \"\n)\n\ntemp\n=\ntemp\n.\nnext\n\n\nprint\n(\n)\n\n\n\n# Create a queue\n\nmyQueue\n=\nQueue\n(\n)\n\n\nmyQueue\n.\nenqueue\n(\n'A'\n)\n\nmyQueue\n.\nenqueue\n(\n'B'\n)\n\nmyQueue\n.\nenqueue\n(\n'C'\n)\n\n\nprint\n(\n\"Queue: \"\n,\nend\n=\n\"\"\n)\n\nmyQueue\n.\nprintQueue\n(\n)\n\n\n\nprint\n(\n\"Dequeue: \"\n,\nmyQueue\n.\ndequeue\n(\n)\n)\n\n\n\nprint\n(\n\"Peek: \"\n,\nmyQueue\n.\npeek\n(\n)\n)\n\n\n\nprint\n(\n\"isEmpty: \"\n,\nmyQueue\n.\nisEmpty\n(\n)\n)\n\n\n\nprint\n(\n\"Size: \"\n,\nmyQueue\n.\nsize\n(\n)\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-python\" tabindex=\"0\"><code class=\"language-python\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> data\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n\n<span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Queue</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>front <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n        self<span class=\"token punctuation\">.</span>rear <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n        self<span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    \n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">enqueue</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        new_node <span class=\"token operator\">=</span> Node<span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword keyword-if\">if</span> self<span class=\"token punctuation\">.</span>rear <span class=\"token keyword keyword-is\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>front <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>rear <span class=\"token operator\">=</span> new_node\n            self<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword keyword-return\">return</span>\n        self<span class=\"token punctuation\">.</span>rear<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> new_node\n        self<span class=\"token punctuation\">.</span>rear <span class=\"token operator\">=</span> new_node\n        self<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    \n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">dequeue</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-if\">if</span> self<span class=\"token punctuation\">.</span>isEmpty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword keyword-return\">return</span> <span class=\"token string\">\"Queue is empty\"</span>\n        temp <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>front\n        self<span class=\"token punctuation\">.</span>front <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n        self<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword keyword-if\">if</span> self<span class=\"token punctuation\">.</span>front <span class=\"token keyword keyword-is\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>rear <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n        <span class=\"token keyword keyword-return\">return</span> temp<span class=\"token punctuation\">.</span>data\n    \n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">peek</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-if\">if</span> self<span class=\"token punctuation\">.</span>isEmpty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword keyword-return\">return</span> <span class=\"token string\">\"Queue is empty\"</span>\n        <span class=\"token keyword keyword-return\">return</span> self<span class=\"token punctuation\">.</span>front<span class=\"token punctuation\">.</span>data\n    \n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-return\">return</span> self<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span>\n    \n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">size</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-return\">return</span> self<span class=\"token punctuation\">.</span>length\n\n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">printQueue</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        temp <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>front\n        <span class=\"token keyword keyword-while\">while</span> temp<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n            temp <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n        <span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Create a queue</span>\nmyQueue <span class=\"token operator\">=</span> Queue<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nmyQueue<span class=\"token punctuation\">.</span>enqueue<span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">)</span>\nmyQueue<span class=\"token punctuation\">.</span>enqueue<span class=\"token punctuation\">(</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">)</span>\nmyQueue<span class=\"token punctuation\">.</span>enqueue<span class=\"token punctuation\">(</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Queue: \"</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\nmyQueue<span class=\"token punctuation\">.</span>printQueue<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Dequeue: \"</span><span class=\"token punctuation\">,</span> myQueue<span class=\"token punctuation\">.</span>dequeue<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Peek: \"</span><span class=\"token punctuation\">,</span> myQueue<span class=\"token punctuation\">.</span>peek<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"isEmpty: \"</span><span class=\"token punctuation\">,</span> myQueue<span class=\"token punctuation\">.</span>isEmpty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Size: \"</span><span class=\"token punctuation\">,</span> myQueue<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "DSA Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Test Yourself With Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise:",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Array below is used as a Queue data structure:",
      "html": "<p>The Array below is used as a Queue data structure:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Which indexes and values are affected by the endueue and dedueue operations?",
      "html": "<p>Which indexes and values are affected by the <span>endueue</span> and <span>dedueue</span> operations?</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "enqueue(7):\nvalue 7 is placed on\nindex\nin the array.\n\ndequeue():\nvalue\nis taken\nout of the queue.",
      "language": "unknown",
      "code_html": "<pre style=\"overflow: auto;\">enqueue(7): \n    value 7 is placed on \n    index <input maxlength=\"1\" name=\"ex1\" style=\"width: 2ch;\"/> in the array.\n\ndequeue(): \n    value <input maxlength=\"1\" name=\"ex2\" style=\"width: 2ch;\"/> is taken \n    out of the queue.\n</pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Start the Exercise",
          "href": "https://www.w3schools.com/exercise.php?filename=exercise_data_queues1",
          "title": ""
        }
      ],
      "text": "Start the Exercise",
      "html": "<p><a href=\"exercise.php?filename=exercise_data_queues1\" target=\"_blank\">Start the Exercise</a></p>"
    }
  ]
}