{
  "title": "DSA Prim's Algorithm",
  "url": "https://www.w3schools.com/dsa/dsa_algo_mst_prim.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "DSA Prim's Algorithm",
      "level": "h1"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Prim's algorithm was invented in 1930 by the Czech mathematician Vojt\u011bch Jarn\u00edk.",
      "html": "<p>Prim's algorithm was invented in 1930 by the Czech mathematician Vojt\u011bch Jarn\u00edk.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The algorithm was then rediscovered by Robert C. Prim in 1957, and also rediscovered by Edsger W. Dijkstra in 1959. Therefore, the algorithm is also sometimes called \"Jarn\u00edk's algorithm\", or the \"Prim-Jarn\u00edk algorithm\".",
      "html": "<p>The algorithm was then rediscovered by Robert C. Prim in 1957, and also rediscovered by Edsger W. Dijkstra in 1959. Therefore, the algorithm is also sometimes called \"Jarn\u00edk's algorithm\", or the \"Prim-Jarn\u00edk algorithm\".</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Prim's Algorithm",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Prim's algorithm finds the Minimum Spanning Tree (MST) in a connected and undirected graph.",
      "html": "<p>Prim's algorithm finds the Minimum Spanning Tree (MST) in a connected and undirected graph.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The MST found by Prim's algorithm is the collection of edges in a graph, that connects all vertices, with a minimum sum of edge weights.",
      "html": "<p>The MST found by Prim's algorithm is the collection of edges in a graph, that connects all vertices, with a minimum sum of edge weights.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Prim's algorithm finds the MST by first including a random vertex to the MST. The algorithm then finds the vertex with the lowest edge weight from the current MST, and includes that to the MST. Prim's algorithm keeps doing this until all nodes are included in the MST.",
      "html": "<p>Prim's algorithm finds the MST by first including a random vertex to the MST. The algorithm then finds the vertex with the lowest edge weight from the current MST, and includes that to the MST. Prim's algorithm keeps doing this until all nodes are included in the MST.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Prim's algorithm is greedy, and has a straightforward way to create a minimum spanning tree.",
      "html": "<p>Prim's algorithm is greedy, and has a straightforward way to create a minimum spanning tree.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Kruskal's algorithm",
          "href": "https://www.w3schools.com/dsa_algo_mst_kruskal.php",
          "title": ""
        }
      ],
      "text": "For Prim's algorithm to work, all the nodes must be connected. To find the MST's in an unconnected graph, Kruskal's algorithm can be used instead. You can read about Kruskal's algorithm on the next page.",
      "html": "<p>For Prim's algorithm to work, all the nodes must be connected. To find the MST's in an unconnected graph, <a href=\"dsa_algo_mst_kruskal.php\">Kruskal's algorithm</a> can be used instead. You can read about Kruskal's algorithm on the next page.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "How it works:",
      "html": "<p><strong>How it works:</strong></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "NOTE: Since the starting vertex is chosen at random, it is possible to have different edges included in the MST for the same graph, but the total edge weight of the MST will still have the same minimum value.",
      "html": "<p><strong>NOTE: </strong>Since the starting vertex is chosen at random, it is possible to have different edges included in the MST for the same graph, but the total edge weight of the MST will still have the same minimum value.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Manual Run Through",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Let's run through Prim's algorithm manually on the graph below, so that we understand the detailed step-by-step operations before we try to program it.",
      "html": "<p>Let's run through Prim's algorithm manually on the graph below, so that we understand the detailed step-by-step operations before we try to program it.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Prim's algorithm starts growing the Minimum Spanning Tree (MST) from a random vertex, but for this demonstration vertex A is chosen as the starting vertex.",
      "html": "<p>Prim's algorithm starts growing the Minimum Spanning Tree (MST) from a random vertex, but for this demonstration vertex A is chosen as the starting vertex.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "From vertex A, the MST grows along the edge with the lowest weight. So vertices A and D now belong to the group of vertices that belong to the Minimum Spanning Tree.",
      "html": "<p>From vertex A, the MST grows along the edge with the lowest weight. So vertices A and D now belong to the group of vertices that belong to the Minimum Spanning Tree.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A parents array is central to how Prim's algorithm grows the edges in the MST.",
      "html": "<p>A <code>parents</code> array is central to how Prim's algorithm grows the edges in the MST.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "At this point, the parents array looks like this:",
      "html": "<p>At this point, the <code>parents</code> array looks like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-python"
        ],
        "isNotranslate": true
      },
      "code": "parents\n=\n\n[\n-\n1\n,\n\n0\n,\n\n-\n1\n,\n\n0\n,\n\n3\n,\n\n3\n,\n\n-\n1\n,\n\n-\n1\n]\n\n\n#vertices [ A,  B,  C,  D,  E,  F,  G,  H]",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-python\" tabindex=\"0\"><code class=\"language-python\">parents <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#vertices [ A,  B,  C,  D,  E,  F,  G,  H]</span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Vertex A, the starting vertex, has no parent, and has therefore value -1 . Vertex D's parent is A, that is why D's parent value is 0 (vertex A is located at index 0). B's parent is also A, and D is the parent of E and F.",
      "html": "<p>Vertex A, the starting vertex, has no parent, and has therefore value <code>-1</code>. Vertex D's parent is A, that is why D's parent value is <code>0</code> (vertex A is located at index 0). B's parent is also A, and D is the parent of E and F.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The parents array helps us to keep the MST tree structure (a vertex can only have one parent).",
      "html": "<p>The <code>parents</code> array helps us to keep the MST tree structure (a vertex can only have one parent).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Also, to avoid cycles and to keep track of which vertices are currently in the MST, the in_mst array is used.",
      "html": "<p>Also, to avoid cycles and to keep track of which vertices are currently in the MST, the <code>in_mst</code> array is used.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The in_mst array currently looks like this:",
      "html": "<p>The <code>in_mst</code> array currently looks like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-python"
        ],
        "isNotranslate": true
      },
      "code": "in_mst\n=\n\n[\ntrue\n,\nfalse\n,\nfalse\n,\ntrue\n,\nfalse\n,\nfalse\n,\nfalse\n,\nfalse\n]\n\n\n#vertices [    A,     B,     C,     D,     E,     F,     G,     H]",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-python\" tabindex=\"0\"><code class=\"language-python\"> in_mst <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> true<span class=\"token punctuation\">,</span> false<span class=\"token punctuation\">,</span> false<span class=\"token punctuation\">,</span>  true<span class=\"token punctuation\">,</span> false<span class=\"token punctuation\">,</span> false<span class=\"token punctuation\">,</span> false<span class=\"token punctuation\">,</span> false<span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#vertices [    A,     B,     C,     D,     E,     F,     G,     H]</span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The next step in Prim's algorithm is to include one more vertex as part of the MST, and the vertex closest to the current MST nodes A and D is chosen.",
      "html": "<p>The next step in Prim's algorithm is to include one more vertex as part of the MST, and the vertex closest to the current MST nodes A and D is chosen.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Since both A-B and D-F have the same lowest edge weight 4 , either B or F can be chosen as the next MST vertex. We choose B as the next MST vertex for this demonstration.",
      "html": "<p>Since both A-B and D-F have the same lowest edge weight <code>4</code>, either B or F can be chosen as the next MST vertex. We choose B as the next MST vertex for this demonstration.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "As you can see, the MST edge to E came from vertex D before, now it comes from vertex B, because B-E with weight 6 is lower than D-E with weight 7 . Vertex E can only have one parent in the MST tree structure (and in the parents array), so B-E and D-E cannot both be MST edges to E.",
      "html": "<p>As you can see, the MST edge to E came from vertex D before, now it comes from vertex B, because B-E with weight <code>6</code> is lower than D-E with weight <code>7</code>. Vertex E can only have one parent in the MST tree structure (and in the <code>parents</code> array), so B-E and D-E cannot both be MST edges to E.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The next vertex in the MST is vertex C, because edge B-C with weight 3 is the shortest edge weight from the current MST vertices.",
      "html": "<p>The next vertex in the MST is vertex C, because edge B-C with weight <code>3</code> is the shortest edge weight from the current MST vertices.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "As vertex C is included in the MST, edges out from C are checked to see if there are edges with a lower weight from this MST vertex to vertices outside the MST. Edge C-E has a lower weight ( 3 ) than the previous B-E MST edge ( 6 ), and the C-H edge gets included in the MST with edge weight 2 .",
      "html": "<p>As vertex C is included in the MST, edges out from C are checked to see if there are edges with a lower weight from this MST vertex to vertices outside the MST. Edge C-E has a lower weight (<code>3</code>) than the previous B-E MST edge (<code>6</code>), and the C-H edge gets included in the MST with edge weight <code>2</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Vertex H is the next to be included in the MST, as it has the lowest edge weight 6 , and vertex H becomes the parent of vertex G in the parents array.",
      "html": "<p>Vertex H is the next to be included in the MST, as it has the lowest edge weight <code>6</code>, and vertex H becomes the parent of vertex G in the <code>parents</code> array.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The next vertex to be included in the MST is either E or F because they have both the lowest edge weight to them: 4 .",
      "html": "<p>The next vertex to be included in the MST is either E or F because they have both the lowest edge weight to them: <code>4</code>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We choose vertex E as the next vertex to be included in the MST for this demonstration.",
      "html": "<p>We choose vertex E as the next vertex to be included in the MST for this demonstration.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The next and last two vertices to be added to the MST are vertices F and G. D-F is the MST edge to F, and E-G is the MST edge to G because these edges are the edges with the lowest weight from the current MST.",
      "html": "<p>The next and last two vertices to be added to the MST are vertices F and G. D-F is the MST edge to F, and E-G is the MST edge to G because these edges are the edges with the lowest weight from the current MST.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Run the simulation below to see Prim's algorithm doing the manual steps that we have just done.",
      "html": "<p>Run the simulation below to see Prim's algorithm doing the manual steps that we have just done.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Implementation of Prim's Algorithm",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "For Prim's algorithm to find a Minimum Spanning Tree (MST), we create a Graph class. We will use the methods inside this Graph class later to create the graph from the example above, and to run Prim's algorithm on it.",
      "html": "<p>For Prim's algorithm to find a Minimum Spanning Tree (MST), we create a <code>Graph</code> class. We will use the methods inside this <code>Graph</code> class later to create the graph from the example above, and to run Prim's algorithm on it.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "line-numbers",
          "language-python"
        ],
        "isNotranslate": true
      },
      "code": "class\n\nGraph\n:\n\n\ndef\n\n__init__\n(\nself\n,\nsize\n)\n:\n\nself\n.\nadj_matrix\n=\n\n[\n[\n0\n]\n\n*\nsize\nfor\n_\nin\n\nrange\n(\nsize\n)\n]\n\nself\n.\nsize\n=\nsize\nself\n.\nvertex_data\n=\n\n[\n''\n]\n\n*\nsize\n\n\ndef\n\nadd_edge\n(\nself\n,\nu\n,\nv\n,\nweight\n)\n:\n\n\nif\n\n0\n\n<=\nu\n<\nself\n.\nsize\nand\n\n0\n\n<=\nv\n<\nself\n.\nsize\n:\n\nself\n.\nadj_matrix\n[\nu\n]\n[\nv\n]\n\n=\nweight\nself\n.\nadj_matrix\n[\nv\n]\n[\nu\n]\n\n=\nweight\n# For undirected graph\n\n\n\ndef\n\nadd_vertex_data\n(\nself\n,\nvertex\n,\ndata\n)\n:\n\n\nif\n\n0\n\n<=\nvertex\n<\nself\n.\nsize\n:\n\nself\n.\nvertex_data\n[\nvertex\n]\n\n=\ndata",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white line-numbers language-python\" data-line=\"3-5, 7-10, 12-14\" tabindex=\"0\"><code class=\"language-python\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Graph</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>adj_matrix <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> size <span class=\"token keyword keyword-for\">for</span> _ <span class=\"token keyword keyword-in\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> size\n        self<span class=\"token punctuation\">.</span>vertex_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">''</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> size\n\n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">add_edge</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-if\">if</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> u <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>size <span class=\"token keyword keyword-and\">and</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> v <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>adj_matrix<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> weight\n            self<span class=\"token punctuation\">.</span>adj_matrix<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> weight  <span class=\"token comment\"># For undirected graph</span>\n\n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">add_vertex_data</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> vertex<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-if\">if</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> vertex <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>vertex_data<span class=\"token punctuation\">[</span>vertex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> data<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"3-5\" style=\"top: 45px; height: 66px; width: 789px;\"></div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"7-10\" style=\"top: 133px; height: 88px; width: 789px;\"></div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"12-14\" style=\"top: 243px; height: 66px; width: 789px;\"></div></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "line-numbers",
        "language-python"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "line-numbers",
        "language-python"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Line 3-5: At first, the adjacency matrix is empty, meaning there are no edges in the graph. Also, the vertices have no names to start with.",
      "html": "<p><strong>Line 3-5: </strong>At first, the adjacency matrix is empty, meaning there are no edges in the graph. Also, the vertices have no names to start with.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Line 7-10: The add_edge method is for adding an edge, with an edge weight value, to the undirected graph.",
      "html": "<p><strong>Line 7-10: </strong>The <code>add_edge</code> method is for adding an edge, with an edge weight value, to the undirected graph.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Line 12-14: The add_vertex_data method is used for giving names to the vertices, like for example 'A' or 'B'.",
      "html": "<p><strong>Line 12-14: </strong>The <code>add_vertex_data</code> method is used for giving names to the vertices, like for example 'A' or 'B'.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Now that the structure for creating a graph is in place, we can implement Prim's algorithm as a method inside the Graph class:",
      "html": "<p>Now that the structure for creating a graph is in place, we can implement Prim's algorithm as a method inside the <code>Graph</code> class:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "line-numbers",
          "language-python"
        ],
        "isNotranslate": true
      },
      "code": "def\n\nprims_algorithm\n(\nself\n)\n:\n\nin_mst\n=\n\n[\nFalse\n]\n\n*\nself\n.\nsize\nkey_values\n=\n\n[\nfloat\n(\n'inf'\n)\n]\n\n*\nself\n.\nsize\nparents\n=\n\n[\n-\n1\n]\n\n*\nself\n.\nsize\n\nkey_values\n[\n0\n]\n\n=\n\n0\n\n# Starting vertex\n\n\n\nprint\n(\n\"Edge \\tWeight\"\n)\n\n\nfor\n_\nin\n\nrange\n(\nself\n.\nsize\n)\n:\n\nu\n=\n\nmin\n(\n(\nv\nfor\nv\nin\n\nrange\n(\nself\n.\nsize\n)\n\nif\n\nnot\nin_mst\n[\nv\n]\n)\n,\nkey\n=\nlambda\nv\n:\nkey_values\n[\nv\n]\n)\n\n\nin_mst\n[\nu\n]\n\n=\n\nTrue\n\n\n\nif\nparents\n[\nu\n]\n\n!=\n\n-\n1\n:\n\n# Skip printing for the first vertex since it has no parent\n\n\nprint\n(\nf\"\n{\nself\n.\nvertex_data\n[\nparents\n[\nu\n]\n]\n}\n-\n{\nself\n.\nvertex_data\n[\nu\n]\n}\n\\t\n{\nself\n.\nadj_matrix\n[\nu\n]\n[\nparents\n[\nu\n]\n]\n}\n\"\n)\n\n\n\nfor\nv\nin\n\nrange\n(\nself\n.\nsize\n)\n:\n\n\nif\n\n0\n\n<\nself\n.\nadj_matrix\n[\nu\n]\n[\nv\n]\n\n<\nkey_values\n[\nv\n]\n\nand\n\nnot\nin_mst\n[\nv\n]\n:\n\nkey_values\n[\nv\n]\n\n=\nself\n.\nadj_matrix\n[\nu\n]\n[\nv\n]\n\nparents\n[\nv\n]\n\n=\nu",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white line-numbers language-python\" data-line=\"17-19,21,25,32-35\" data-line-offset=\"16\" data-start=\"16\" style=\"counter-reset: linenumber 15;\" tabindex=\"0\"><code class=\"language-python\">    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">prims_algorithm</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        in_mst <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>size\n        key_values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inf'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>size\n        parents <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>size\n\n        key_values<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>  <span class=\"token comment\"># Starting vertex</span>\n\n        <span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Edge \\tWeight\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword keyword-for\">for</span> _ <span class=\"token keyword keyword-in\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            u <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v <span class=\"token keyword keyword-for\">for</span> v <span class=\"token keyword keyword-in\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span> <span class=\"token keyword keyword-if\">if</span> <span class=\"token keyword keyword-not\">not</span> in_mst<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword keyword-lambda\">lambda</span> v<span class=\"token punctuation\">:</span> key_values<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n            in_mst<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n            <span class=\"token keyword keyword-if\">if</span> parents<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># Skip printing for the first vertex since it has no parent</span>\n                <span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>vertex_data<span class=\"token punctuation\">[</span>parents<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">-</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>vertex_data<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> \\t</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>adj_matrix<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>parents<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword keyword-for\">for</span> v <span class=\"token keyword keyword-in\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword keyword-if\">if</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>adj_matrix<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> key_values<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token keyword keyword-and\">and</span> <span class=\"token keyword keyword-not\">not</span> in_mst<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                    key_values<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>adj_matrix<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span>\n                    parents<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> u<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"17-19\" style=\"top: 23px; height: 66px; width: 1089px;\"></div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"21\" style=\"top: 111px; height: 22px; width: 1089px;\"></div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"25\" style=\"top: 199px; height: 22px; width: 1089px;\"></div><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"32-35\" style=\"top: 353px; height: 88px; width: 1089px;\"></div></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "line-numbers",
        "language-python"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "line-numbers",
        "language-python"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Line 17: The in_mst array holds the status of which vertices are currently in the MST. Initially, none of the vertices are part of the MST.",
      "html": "<p><strong>Line 17: </strong>The <code>in_mst</code> array holds the status of which vertices are currently in the MST. Initially, none of the vertices are part of the MST.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Line 18: The key_values array holds the current shortest distance from the MST vertices to each vertex outside the MST.",
      "html": "<p><strong>Line 18: </strong>The <code>key_values</code> array holds the current shortest distance from the MST vertices to each vertex outside the MST.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Line 19: The MST edges are stored in the parents array. Each MST edge is stored by storing the parent index for each vertex.",
      "html": "<p><strong>Line 19: </strong>The MST edges are stored in the <code>parents</code> array. Each MST edge is stored by storing the parent index for each vertex.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Line 21: To keep it simple, and to make this code run like in the \"Manual Run Through\" animation/example above, the first vertex (vertex A at index 0 ) is set as the staring vertex. Changing the index to 4 will run Prim's algorithm from vertex E, and that works just as well.",
      "html": "<p><strong>Line 21: </strong>To keep it simple, and to make this code run like in the \"Manual Run Through\" animation/example above, the first vertex (vertex A at index <code>0</code>) is set as the staring vertex. Changing the index to <code>4</code> will run Prim's algorithm from vertex E, and that works just as well.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "min",
          "href": "https://www.w3schools.com/python/ref_func_min.asp",
          "title": ""
        },
        {
          "text": "lambda",
          "href": "https://www.w3schools.com/python/python_lambda.asp",
          "title": ""
        }
      ],
      "text": "Line 25: The index is found for the vertex with the lowest key value that is not yet part of the MST. Check out these explanations for min and lambda to better understand this Python code line.",
      "html": "<p><strong>Line 25: </strong>The index is found for the vertex with the lowest key value that is not yet part of the MST. Check out these explanations for <code><a href=\"/python/ref_func_min.asp\">min</a></code> and <code><a href=\"/python/python_lambda.asp\">lambda</a></code> to better understand this Python code line.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Line 32-35: After a new vertex is added to the MST (line 27), this part of the code checks to see if there are now edges from this newly added MST vertex that can lower the key values to other vertices outside the MST. If that is the case, the key_values and parents arrays are updated accordingly. This can be seen clearly in the animation when a new vertex is added to the MST and becomes the active (current) vertex.",
      "html": "<p><strong>Line 32-35: </strong>After a new vertex is added to the MST (line 27), this part of the code checks to see if there are now edges from this newly added MST vertex that can lower the key values to other vertices outside the MST. If that is the case, the <code>key_values</code> and <code>parents</code> arrays are updated accordingly. This can be seen clearly in the animation when a new vertex is added to the MST and becomes the active (current) vertex.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Now let's create the graph from the \"Manual Run Through\" above and run Prim's algorithm on it:",
      "html": "<p>Now let's create the graph from the \"Manual Run Through\" above and run Prim's algorithm on it:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "css",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "line-numbers",
          "language-python"
        ],
        "isNotranslate": true
      },
      "code": "class\n\nGraph\n:\n\n\ndef\n\n__init__\n(\nself\n,\nsize\n)\n:\n\nself\n.\nadj_matrix\n=\n\n[\n[\n0\n]\n\n*\nsize\nfor\n_\nin\n\nrange\n(\nsize\n)\n]\n\nself\n.\nsize\n=\nsize\nself\n.\nvertex_data\n=\n\n[\n''\n]\n\n*\nsize\n\n\ndef\n\nadd_edge\n(\nself\n,\nu\n,\nv\n,\nweight\n)\n:\n\n\nif\n\n0\n\n<=\nu\n<\nself\n.\nsize\nand\n\n0\n\n<=\nv\n<\nself\n.\nsize\n:\n\nself\n.\nadj_matrix\n[\nu\n]\n[\nv\n]\n\n=\nweight\nself\n.\nadj_matrix\n[\nv\n]\n[\nu\n]\n\n=\nweight\n# For undirected graph\n\n\n\ndef\n\nadd_vertex_data\n(\nself\n,\nvertex\n,\ndata\n)\n:\n\n\nif\n\n0\n\n<=\nvertex\n<\nself\n.\nsize\n:\n\nself\n.\nvertex_data\n[\nvertex\n]\n\n=\ndata\n\n\ndef\n\nprims_algorithm\n(\nself\n)\n:\n\nin_mst\n=\n\n[\nFalse\n]\n\n*\nself\n.\nsize\nkey_values\n=\n\n[\nfloat\n(\n'inf'\n)\n]\n\n*\nself\n.\nsize\nparents\n=\n\n[\n-\n1\n]\n\n*\nself\n.\nsize\n\nkey_values\n[\n0\n]\n\n=\n\n0\n\n# Starting vertex\n\n\n\nprint\n(\n\"Edge \\tWeight\"\n)\n\n\nfor\n_\nin\n\nrange\n(\nself\n.\nsize\n)\n:\n\nu\n=\n\nmin\n(\n(\nv\nfor\nv\nin\n\nrange\n(\nself\n.\nsize\n)\n\nif\n\nnot\nin_mst\n[\nv\n]\n)\n,\nkey\n=\nlambda\nv\n:\nkey_values\n[\nv\n]\n)\n\n\nin_mst\n[\nu\n]\n\n=\n\nTrue\n\n\n\nif\nparents\n[\nu\n]\n\n!=\n\n-\n1\n:\n\n# Skip printing for the first vertex since it has no parent\n\n\nprint\n(\nf\"\n{\nself\n.\nvertex_data\n[\nparents\n[\nu\n]\n]\n}\n-\n{\nself\n.\nvertex_data\n[\nu\n]\n}\n\\t\n{\nself\n.\nadj_matrix\n[\nu\n]\n[\nparents\n[\nu\n]\n]\n}\n\"\n)\n\n\n\nfor\nv\nin\n\nrange\n(\nself\n.\nsize\n)\n:\n\n\nif\n\n0\n\n<\nself\n.\nadj_matrix\n[\nu\n]\n[\nv\n]\n\n<\nkey_values\n[\nv\n]\n\nand\n\nnot\nin_mst\n[\nv\n]\n:\n\nkey_values\n[\nv\n]\n\n=\nself\n.\nadj_matrix\n[\nu\n]\n[\nv\n]\n\nparents\n[\nv\n]\n\n=\nu\n\ng\n=\nGraph\n(\n8\n)\n\n\ng\n.\nadd_vertex_data\n(\n0\n,\n\n'A'\n)\n\ng\n.\nadd_vertex_data\n(\n1\n,\n\n'B'\n)\n\ng\n.\nadd_vertex_data\n(\n2\n,\n\n'C'\n)\n\ng\n.\nadd_vertex_data\n(\n3\n,\n\n'D'\n)\n\ng\n.\nadd_vertex_data\n(\n4\n,\n\n'E'\n)\n\ng\n.\nadd_vertex_data\n(\n5\n,\n\n'F'\n)\n\ng\n.\nadd_vertex_data\n(\n6\n,\n\n'G'\n)\n\ng\n.\nadd_vertex_data\n(\n7\n,\n\n'H'\n)\n\n\ng\n.\nadd_edge\n(\n0\n,\n\n1\n,\n\n4\n)\n\n# A - B\n\ng\n.\nadd_edge\n(\n0\n,\n\n3\n,\n\n3\n)\n\n# A - D\n\ng\n.\nadd_edge\n(\n1\n,\n\n2\n,\n\n3\n)\n\n# B - C\n\ng\n.\nadd_edge\n(\n1\n,\n\n3\n,\n\n5\n)\n\n# B - D\n\ng\n.\nadd_edge\n(\n1\n,\n\n4\n,\n\n6\n)\n\n# B - E\n\ng\n.\nadd_edge\n(\n2\n,\n\n4\n,\n\n4\n)\n\n# C - E\n\ng\n.\nadd_edge\n(\n2\n,\n\n7\n,\n\n2\n)\n\n# C - H\n\ng\n.\nadd_edge\n(\n3\n,\n\n4\n,\n\n7\n)\n\n# D - E\n\ng\n.\nadd_edge\n(\n3\n,\n\n5\n,\n\n4\n)\n\n# D - F\n\ng\n.\nadd_edge\n(\n4\n,\n\n5\n,\n\n5\n)\n\n# E - F\n\ng\n.\nadd_edge\n(\n4\n,\n\n6\n,\n\n3\n)\n\n# E - G\n\ng\n.\nadd_edge\n(\n5\n,\n\n6\n,\n\n7\n)\n\n# F - G\n\ng\n.\nadd_edge\n(\n6\n,\n\n7\n,\n\n5\n)\n\n# G - H\n\n\n\nprint\n(\n\"Prim's Algorithm MST:\"\n)\n\ng\n.\nprims_algorithm\n(\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white line-numbers language-python\" data-line=\"32\" style=\"height: 400px; overflow: auto;\" tabindex=\"0\"><code class=\"language-python\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Graph</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>adj_matrix <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> size <span class=\"token keyword keyword-for\">for</span> _ <span class=\"token keyword keyword-in\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> size\n        self<span class=\"token punctuation\">.</span>vertex_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">''</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> size\n\n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">add_edge</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-if\">if</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> u <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>size <span class=\"token keyword keyword-and\">and</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> v <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>adj_matrix<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> weight\n            self<span class=\"token punctuation\">.</span>adj_matrix<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> weight  <span class=\"token comment\"># For undirected graph</span>\n\n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">add_vertex_data</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> vertex<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-if\">if</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> vertex <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>vertex_data<span class=\"token punctuation\">[</span>vertex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> data\n\n    <span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">prims_algorithm</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        in_mst <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>size\n        key_values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inf'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>size\n        parents <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>size\n\n        key_values<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>  <span class=\"token comment\"># Starting vertex</span>\n\n        <span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Edge \\tWeight\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword keyword-for\">for</span> _ <span class=\"token keyword keyword-in\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            u <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v <span class=\"token keyword keyword-for\">for</span> v <span class=\"token keyword keyword-in\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span> <span class=\"token keyword keyword-if\">if</span> <span class=\"token keyword keyword-not\">not</span> in_mst<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword keyword-lambda\">lambda</span> v<span class=\"token punctuation\">:</span> key_values<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n            in_mst<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n            <span class=\"token keyword keyword-if\">if</span> parents<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># Skip printing for the first vertex since it has no parent</span>\n                <span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>vertex_data<span class=\"token punctuation\">[</span>parents<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">-</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>vertex_data<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> \\t</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>adj_matrix<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>parents<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword keyword-for\">for</span> v <span class=\"token keyword keyword-in\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword keyword-if\">if</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>adj_matrix<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> key_values<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token keyword keyword-and\">and</span> <span class=\"token keyword keyword-not\">not</span> in_mst<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                    key_values<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>adj_matrix<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span>\n                    parents<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> u\n\ng <span class=\"token operator\">=</span> Graph<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n\ng<span class=\"token punctuation\">.</span>add_vertex_data<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span>add_vertex_data<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span>add_vertex_data<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span>add_vertex_data<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'D'</span><span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span>add_vertex_data<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'E'</span><span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span>add_vertex_data<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span>add_vertex_data<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'G'</span><span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span>add_vertex_data<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'H'</span><span class=\"token punctuation\">)</span>\n\ng<span class=\"token punctuation\">.</span>add_edge<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># A - B</span>\ng<span class=\"token punctuation\">.</span>add_edge<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># A - D</span>\ng<span class=\"token punctuation\">.</span>add_edge<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># B - C</span>\ng<span class=\"token punctuation\">.</span>add_edge<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># B - D</span>\ng<span class=\"token punctuation\">.</span>add_edge<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># B - E</span>\ng<span class=\"token punctuation\">.</span>add_edge<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># C - E</span>\ng<span class=\"token punctuation\">.</span>add_edge<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># C - H</span>\ng<span class=\"token punctuation\">.</span>add_edge<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># D - E</span>\ng<span class=\"token punctuation\">.</span>add_edge<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># D - F</span>\ng<span class=\"token punctuation\">.</span>add_edge<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># E - F</span>\ng<span class=\"token punctuation\">.</span>add_edge<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># E - G</span>\ng<span class=\"token punctuation\">.</span>add_edge<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># F - G</span>\ng<span class=\"token punctuation\">.</span>add_edge<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># G - H</span>\n\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Prim's Algorithm MST:\"</span><span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span>prims_algorithm<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"32\" style=\"top: 683px; height: 22px; width: 1089px;\"></div></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "line-numbers",
        "language-python"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "line-numbers",
        "language-python"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Line 32: We can actually avoid the last loop in Prim's algorithm by changing this line to for _ in range(self.size - 1): . This is because when there is just one vertex not yet in the MST, the parent vertex for that vertex is already set correctly in the parents array, so the MST is actually already found at this point.",
      "html": "<p><strong>Line 32: </strong>We can actually avoid the last loop in Prim's algorithm by changing this line to <code>for _ in range(self.size - 1):</code>. This is because when there is just one vertex not yet in the MST, the parent vertex for that vertex is already set correctly in the <code>parents</code> array, so the MST is actually already found at this point.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Time Complexity for Prim's Algorithm",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "this page",
          "href": "https://www.w3schools.com/dsa_timecomplexity_theory.php",
          "title": ""
        }
      ],
      "text": "For a general explanation of what time complexity is, visit this page .",
      "html": "<p style=\"font-style: oblique;\">For a general explanation of what time complexity is, visit <a href=\"dsa_timecomplexity_theory.php\">this page</a>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "With V V as the number of vertices in our graph, the time complexity for Prim's algorithm is",
      "html": "<p>With <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-1-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-1\"><span class=\"mjx-mrow\" id=\"MJXc-Node-2\"><span class=\"mjx-mi\" id=\"MJXc-Node-3\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.186em;\">V</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>V</mi></math></span></span> as the number of vertices in our graph, the time complexity for Prim's algorithm is</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "O ( V 2 ) O ( V 2 )",
      "html": "<p><span class=\"math display\"><span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MJXc-display\" style=\"text-align: center;\"><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-2-Frame\" role=\"presentation\" style=\"font-size: 119%; text-align: center; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-4\"><span class=\"mjx-mrow\" id=\"MJXc-Node-5\"><span class=\"mjx-mi\" id=\"MJXc-Node-6\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-7\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-msubsup\" id=\"MJXc-Node-8\"><span class=\"mjx-base\" style=\"margin-right: -0.186em;\"><span class=\"mjx-mi\" id=\"MJXc-Node-9\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.186em;\">V</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.584em; padding-left: 0.413em; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-10\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-11\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML MJX_Assistive_MathML_Block\" role=\"presentation\"><math display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>V</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></math></span></span></span></span></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The reason why we get this time complexity is because of the nested loops inside the Prim's algorithm (one for-loop with two other for-loops inside it).",
      "html": "<p>The reason why we get this time complexity is because of the nested loops inside the Prim's algorithm (one for-loop with two other for-loops inside it).</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The first for-loop (line 24) goes through all the vertices in the graph. This has time complexity O ( V ) O ( V ) .",
      "html": "<p>The first for-loop (line 24) goes through all the vertices in the graph. This has time complexity <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-3-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-12\"><span class=\"mjx-mrow\" id=\"MJXc-Node-13\"><span class=\"mjx-mi\" id=\"MJXc-Node-14\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-15\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-16\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.186em;\">V</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-17\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><mi>V</mi><mo stretchy=\"false\">)</mo></math></span></span>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The second for-loop (line 25) goes through all the adjacent vertices in the graph to find the vertex with the lowest key value that is outside the MST, so that it can be the next vertex included in the MST. This has time complexity O ( V ) O ( V ) .",
      "html": "<p>The second for-loop (line 25) goes through all the adjacent vertices in the graph to find the vertex with the lowest key value that is outside the MST, so that it can be the next vertex included in the MST. This has time complexity <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-4-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-18\"><span class=\"mjx-mrow\" id=\"MJXc-Node-19\"><span class=\"mjx-mi\" id=\"MJXc-Node-20\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-21\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-22\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.186em;\">V</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-23\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><mi>V</mi><mo stretchy=\"false\">)</mo></math></span></span>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "After a new vertex is included in the MST, a third for-loop (line 32) checks all other vertices to see if there are outgoing edges from the newly added MST vertex to vertices outside the MST that can lead to lower key values and updated parent relations. This also has time complexity O ( V ) O ( V ) .",
      "html": "<p>After a new vertex is included in the MST, a third for-loop (line 32) checks all other vertices to see if there are outgoing edges from the newly added MST vertex to vertices outside the MST that can lead to lower key values and updated parent relations. This also has time complexity <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-5-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-24\"><span class=\"mjx-mrow\" id=\"MJXc-Node-25\"><span class=\"mjx-mi\" id=\"MJXc-Node-26\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-27\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-28\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.186em;\">V</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-29\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><mi>V</mi><mo stretchy=\"false\">)</mo></math></span></span>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Putting the time complexities together we get:",
      "html": "<p>Putting the time complexities together we get:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "O ( V ) \u22c5 ( O ( V ) + O ( V ) ) = O ( V ) \u22c5 ( 2 \u22c5 O ( V ) ) = O ( V \u22c5 2 \u22c5 V ) = O ( 2 \u22c5 V 2 ) = O ( V 2 ) O ( V ) \u22c5 ( O ( V ) + O ( V ) ) = O ( V ) \u22c5 ( 2 \u22c5 O ( V ) ) = O ( V \u22c5 2 \u22c5 V ) = O ( 2 \u22c5 V 2 ) = O ( V 2 )",
      "html": "<p><span class=\"math display\"><span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MJXc-display\" style=\"text-align: center;\"><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"&gt;&lt;mtable columnalign=\"right left right left right left right left right left right left\" rowspacing=\"3pt\" columnspacing=\"0em 2em 0em 2em 0em 2em 0em 2em 0em 2em 0em\" displaystyle=\"true\"&gt;&lt;mtr&gt;&lt;mtd&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/mtd&gt;&lt;mtd&gt;&lt;mi&gt;&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/mtd&gt;&lt;/mtr&gt;&lt;mtr&gt;&lt;mtd /&gt;&lt;mtd&gt;&lt;mi&gt;&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/mtd&gt;&lt;/mtr&gt;&lt;mtr&gt;&lt;mtd /&gt;&lt;mtd&gt;&lt;mi&gt;&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/mtd&gt;&lt;/mtr&gt;&lt;mtr&gt;&lt;mtd /&gt;&lt;/mtr&gt;&lt;mtr&gt;&lt;mtd /&gt;&lt;mtd&gt;&lt;mi&gt;&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/mtd&gt;&lt;/mtr&gt;&lt;/mtable&gt;&lt;/math&gt;' id=\"MathJax-Element-6-Frame\" role=\"presentation\" style=\"font-size: 119%; text-align: center; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-30\"><span class=\"mjx-mrow\" id=\"MJXc-Node-31\"><span class=\"mjx-mtable\" id=\"MJXc-Node-32\" style=\"vertical-align: -3.102em; padding: 0px 0.167em;\"><span class=\"mjx-table\"><span class=\"mjx-mtr\" id=\"MJXc-Node-33\" style=\"height: 1.225em;\"><span class=\"mjx-mtd\" id=\"MJXc-Node-34\" style=\"padding: 0px; text-align: right; width: 9.653em;\"><span class=\"mjx-mrow\" id=\"MJXc-Node-35\" style=\"margin-top: -0.2em;\"><span class=\"mjx-mi\" id=\"MJXc-Node-36\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-37\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-38\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.186em;\">V</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-39\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-40\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.003em; padding-bottom: 0.339em;\">\u22c5</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-41\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-42\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-43\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-44\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.186em;\">V</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-45\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-46\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">+</span></span><span class=\"mjx-mi MJXc-space2\" id=\"MJXc-Node-47\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-48\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-49\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.186em;\">V</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-50\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-51\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-strut\"></span></span></span><span class=\"mjx-mtd\" id=\"MJXc-Node-52\" style=\"padding: 0px; text-align: left; width: 8.676em;\"><span class=\"mjx-mrow\" id=\"MJXc-Node-53\" style=\"margin-top: -0.2em;\"><span class=\"mjx-mi\" id=\"MJXc-Node-54\"></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-55\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-mi MJXc-space3\" id=\"MJXc-Node-56\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-57\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-58\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.186em;\">V</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-59\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-60\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.003em; padding-bottom: 0.339em;\">\u22c5</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-61\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mn\" id=\"MJXc-Node-62\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-63\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.003em; padding-bottom: 0.339em;\">\u22c5</span></span><span class=\"mjx-mi MJXc-space2\" id=\"MJXc-Node-64\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-65\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-66\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.186em;\">V</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-67\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-68\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-strut\"></span></span></span></span><span class=\"mjx-mtr\" id=\"MJXc-Node-69\" style=\"height: 1.375em;\"><span class=\"mjx-mtd\" id=\"MJXc-Node-70\" style=\"padding: 0.15em 0px 0px; text-align: right;\"><span class=\"mjx-mrow\" id=\"MJXc-Node-71\" style=\"margin-top: -0.2em;\"><span class=\"mjx-strut\"></span></span></span><span class=\"mjx-mtd\" id=\"MJXc-Node-72\" style=\"padding: 0.15em 0px 0px; text-align: left;\"><span class=\"mjx-mrow\" id=\"MJXc-Node-73\" style=\"margin-top: -0.2em;\"><span class=\"mjx-mi\" id=\"MJXc-Node-74\"></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-75\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-mi MJXc-space3\" id=\"MJXc-Node-76\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-77\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-78\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.186em;\">V</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-79\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.003em; padding-bottom: 0.339em;\">\u22c5</span></span><span class=\"mjx-mn MJXc-space2\" id=\"MJXc-Node-80\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-81\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.003em; padding-bottom: 0.339em;\">\u22c5</span></span><span class=\"mjx-mi MJXc-space2\" id=\"MJXc-Node-82\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.186em;\">V</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-83\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-strut\"></span></span></span></span><span class=\"mjx-mtr\" id=\"MJXc-Node-84\" style=\"height: 1.477em;\"><span class=\"mjx-mtd\" id=\"MJXc-Node-85\" style=\"padding: 0.15em 0px 0px; text-align: right;\"><span class=\"mjx-mrow\" id=\"MJXc-Node-86\" style=\"margin-top: -0.098em;\"><span class=\"mjx-strut\"></span></span></span><span class=\"mjx-mtd\" id=\"MJXc-Node-87\" style=\"padding: 0.15em 0px 0px; text-align: left;\"><span class=\"mjx-mrow\" id=\"MJXc-Node-88\" style=\"margin-top: -0.098em;\"><span class=\"mjx-mi\" id=\"MJXc-Node-89\"></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-90\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-mi MJXc-space3\" id=\"MJXc-Node-91\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-92\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mn\" id=\"MJXc-Node-93\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-94\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.003em; padding-bottom: 0.339em;\">\u22c5</span></span><span class=\"mjx-msubsup MJXc-space2\" id=\"MJXc-Node-95\"><span class=\"mjx-base\" style=\"margin-right: -0.186em;\"><span class=\"mjx-mi\" id=\"MJXc-Node-96\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.186em;\">V</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.584em; padding-left: 0.413em; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-97\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-98\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-strut\"></span></span></span></span><span class=\"mjx-mtr\" id=\"MJXc-Node-99\" style=\"height: 1.3em;\"><span class=\"mjx-mtd\" id=\"MJXc-Node-100\" style=\"padding: 0.15em 0px 0px; text-align: right;\"><span class=\"mjx-mrow\" id=\"MJXc-Node-101\" style=\"margin-top: -0.2em;\"><span class=\"mjx-strut\"></span></span></span><span class=\"mjx-mtd\" style=\"padding: 0.15em 0px 0px; text-align: left;\"><span style=\"margin-top: -0.2em;\"></span></span></span><span class=\"mjx-mtr\" id=\"MJXc-Node-102\" style=\"height: 1.327em;\"><span class=\"mjx-mtd\" id=\"MJXc-Node-103\" style=\"padding: 0.15em 0px 0px; text-align: right;\"><span class=\"mjx-mrow\" id=\"MJXc-Node-104\" style=\"margin-top: -0.098em;\"><span class=\"mjx-strut\"></span></span></span><span class=\"mjx-mtd\" id=\"MJXc-Node-105\" style=\"padding: 0.15em 0px 0px; text-align: left;\"><span class=\"mjx-mrow\" id=\"MJXc-Node-106\" style=\"margin-top: -0.098em;\"><span class=\"mjx-mi\" id=\"MJXc-Node-107\"></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-108\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-mi MJXc-space3\" id=\"MJXc-Node-109\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-110\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-msubsup\" id=\"MJXc-Node-111\"><span class=\"mjx-base\" style=\"margin-right: -0.186em;\"><span class=\"mjx-mi\" id=\"MJXc-Node-112\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.186em;\">V</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.584em; padding-left: 0.413em; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-113\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-114\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-strut\"></span></span></span></span></span></span></span></span><span class=\"MJX_Assistive_MathML MJX_Assistive_MathML_Block\" role=\"presentation\"><math display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><mtable columnalign=\"right left right left right left right left right left right left\" columnspacing=\"0em 2em 0em 2em 0em 2em 0em 2em 0em 2em 0em\" displaystyle=\"true\" rowspacing=\"3pt\"><mtr><mtd><mi>O</mi><mo stretchy=\"false\">(</mo><mi>V</mi><mo stretchy=\"false\">)</mo><mo>\u22c5</mo><mo stretchy=\"false\">(</mo><mi>O</mi><mo stretchy=\"false\">(</mo><mi>V</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>O</mi><mo stretchy=\"false\">(</mo><mi>V</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mtd><mtd><mi></mi><mo>=</mo><mi>O</mi><mo stretchy=\"false\">(</mo><mi>V</mi><mo stretchy=\"false\">)</mo><mo>\u22c5</mo><mo stretchy=\"false\">(</mo><mn>2</mn><mo>\u22c5</mo><mi>O</mi><mo stretchy=\"false\">(</mo><mi>V</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mtd></mtr><mtr><mtd></mtd><mtd><mi></mi><mo>=</mo><mi>O</mi><mo stretchy=\"false\">(</mo><mi>V</mi><mo>\u22c5</mo><mn>2</mn><mo>\u22c5</mo><mi>V</mi><mo stretchy=\"false\">)</mo></mtd></mtr><mtr><mtd></mtd><mtd><mi></mi><mo>=</mo><mi>O</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo>\u22c5</mo><msup><mi>V</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mtd></mtr><mtr><mtd></mtd></mtr><mtr><mtd></mtd><mtd><mi></mi><mo>=</mo><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>V</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mtd></mtr></mtable></math></span></span></span></span></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "By using a priority queue data structure to manage key values, instead of using an array like we do here, the time complexity for Prim's algorithm can be reduced to:",
      "html": "<p>By using a priority queue data structure to manage key values, instead of using an array like we do here, the time complexity for Prim's algorithm can be reduced to:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "O ( E \u22c5 log V ) O ( E \u22c5 log \u2061 V )",
      "html": "<p><span class=\"math display\"><span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MJXc-display\" style=\"text-align: center;\"><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;&amp;#x2061;&lt;/mo&gt;&lt;mrow class=\"MJX-TeXAtom-ORD\"&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;/mrow&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-7-Frame\" role=\"presentation\" style=\"font-size: 119%; text-align: center; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-115\"><span class=\"mjx-mrow\" id=\"MJXc-Node-116\"><span class=\"mjx-mi\" id=\"MJXc-Node-117\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-118\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-119\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.026em;\">E</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-120\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.003em; padding-bottom: 0.339em;\">\u22c5</span></span><span class=\"mjx-mi MJXc-space2\" id=\"MJXc-Node-121\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.563em;\">log</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-122\"><span class=\"mjx-char\"></span></span><span class=\"mjx-texatom MJXc-space1\" id=\"MJXc-Node-123\"><span class=\"mjx-mrow\" id=\"MJXc-Node-124\"><span class=\"mjx-mi\" id=\"MJXc-Node-125\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.186em;\">V</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-126\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML MJX_Assistive_MathML_Block\" role=\"presentation\"><math display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><mi>E</mi><mo>\u22c5</mo><mi>log</mi><mo>\u2061</mo><mrow class=\"MJX-TeXAtom-ORD\"><mi>V</mi></mrow><mo stretchy=\"false\">)</mo></math></span></span></span></span></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Where E E is the number of edges in the graph, and V V is the number of vertices.",
      "html": "<p>Where <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-8-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-127\"><span class=\"mjx-mrow\" id=\"MJXc-Node-128\"><span class=\"mjx-mi\" id=\"MJXc-Node-129\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.026em;\">E</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>E</mi></math></span></span> is the number of edges in the graph, and <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-9-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-130\"><span class=\"mjx-mrow\" id=\"MJXc-Node-131\"><span class=\"mjx-mi\" id=\"MJXc-Node-132\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.186em;\">V</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>V</mi></math></span></span> is the number of vertices.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Such an implementation of Prim's algorithm using a priority queue is best for sparse graphs. A graph is sparse when the each vertex is just connected to a few of the other vertices.",
      "html": "<p>Such an implementation of Prim's algorithm using a priority queue is best for sparse graphs. A graph is sparse when the each vertex is just connected to a few of the other vertices.</p>"
    }
  ]
}