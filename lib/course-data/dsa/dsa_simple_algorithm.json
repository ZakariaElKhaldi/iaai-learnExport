{
  "title": "DSA Simple Algorithm",
  "url": "https://www.w3schools.com/dsa/dsa_algo_simple.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "A Simple Algorithm",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Fibonacci Numbers",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Fibonacci numbers are very useful for introducing algorithms, so before we continue, here is a short introduction to Fibonacci numbers.",
      "html": "<p style=\"font-style: oblique;\">The Fibonacci numbers are very useful for introducing algorithms, so before we continue, here is a short introduction to Fibonacci numbers.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Fibonacci numbers are named after a 13th century Italian mathematician known as Fibonacci.",
      "html": "<p>The Fibonacci numbers are named after a 13th century Italian mathematician known as Fibonacci.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The two first Fibonacci numbers are 0 and 1, and the next Fibonacci number is always the sum of the two previous numbers, so we get 0, 1, 1, 2, 3, 5, 8, 13, 21, ...",
      "html": "<p>The two first Fibonacci numbers are 0 and 1, and the next Fibonacci number is always the sum of the two previous numbers, so we get 0, 1, 1, 2, 3, 5, 8, 13, 21, ...</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Create fibonacci numbers.",
      "html": "<p>Create fibonacci numbers.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This tutorial will use loops and recursion a lot. So before we continue, let's implement three different versions of the algorithm to create Fibonacci numbers, just to see the difference between programming with loops and programming with recursion in a simple way.",
      "html": "<p>This tutorial will use loops and recursion a lot. So before we continue, let's implement three different versions of the algorithm to create Fibonacci numbers, just to see the difference between programming with loops and programming with recursion in a simple way.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Fibonacci Number Algorithm",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To generate a Fibonacci number, all we need to do is to add the two previous Fibonacci numbers.",
      "html": "<p>To generate a Fibonacci number, all we need to do is to add the two previous Fibonacci numbers.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Fibonacci numbers is a good way of demonstrating what an algorithm is. We know the principle of how to find the next number, so we can write an algorithm to create as many Fibonacci numbers as possible.",
      "html": "<p>The Fibonacci numbers is a good way of demonstrating what an algorithm is. We know the principle of how to find the next number, so we can write an algorithm to create as many Fibonacci numbers as possible.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Below is the algorithm to create the 20 first Fibonacci numbers.",
      "html": "<p>Below is the algorithm to create the 20 first Fibonacci numbers.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "How it works:",
      "html": "<p><strong>How it works:</strong></p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Loops vs Recursion",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To show the difference between loops and recursion, we will implement solutions to find Fibonacci numbers in three different ways:",
      "html": "<p>To show the difference between loops and recursion, we will implement solutions to find Fibonacci numbers in three different ways:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "1. Implementation Using a For Loop",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It can be a good idea to list what the code must contain or do before programming it:",
      "html": "<p>It can be a good idea to list what the code must contain or do before programming it:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Using the list above, it is easier to write the program:",
      "html": "<p>Using the list above, it is easier to write the program:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-python"
        ],
        "isNotranslate": true
      },
      "code": "prev2\n=\n\n0\n\nprev1\n=\n\n1\n\n\n\nprint\n(\nprev2\n)\n\n\nprint\n(\nprev1\n)\n\n\nfor\nfibo\nin\n\nrange\n(\n18\n)\n:\n\nnewFibo\n=\nprev1\n+\nprev2\n\nprint\n(\nnewFibo\n)\n\nprev2\n=\nprev1\nprev1\n=\nnewFibo",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-python\" tabindex=\"0\"><code class=\"language-python\">prev2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nprev1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span>prev2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span>prev1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword keyword-for\">for</span> fibo <span class=\"token keyword keyword-in\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    newFibo <span class=\"token operator\">=</span> prev1 <span class=\"token operator\">+</span> prev2\n    <span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span>newFibo<span class=\"token punctuation\">)</span>\n    prev2 <span class=\"token operator\">=</span> prev1\n    prev1 <span class=\"token operator\">=</span> newFibo</code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "2. Implementation Using Recursion",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Recursion is when a function calls itself.",
      "html": "<p>Recursion is when a function calls itself.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To implement the Fibonacci algorithm we need most of the same things as in the code example above, but we need to replace the for loop with recursion.",
      "html": "<p>To implement the Fibonacci algorithm we need most of the same things as in the code example above, but we need to replace the for loop with recursion.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To replace the for loop with recursion, we need to encapsulate much of the code in a function, and we need the function to call itself to create a new Fibonacci number as long as the produced number of Fibonacci numbers is below, or equal to, 19.",
      "html": "<p>To replace the for loop with recursion, we need to encapsulate much of the code in a function, and we need the function to call itself to create a new Fibonacci number as long as the produced number of Fibonacci numbers is below, or equal to, 19.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Our code looks like this:",
      "html": "<p>Our code looks like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-python"
        ],
        "isNotranslate": true
      },
      "code": "print\n(\n0\n)\n\n\nprint\n(\n1\n)\n\ncount\n=\n\n2\n\n\n\ndef\n\nfibonacci\n(\nprev1\n,\nprev2\n)\n:\n\n\nglobal\ncount\n\nif\ncount\n<=\n\n19\n:\n\nnewFibo\n=\nprev1\n+\nprev2\n\nprint\n(\nnewFibo\n)\n\nprev2\n=\nprev1\nprev1\n=\nnewFibo\ncount\n+=\n\n1\n\nfibonacci\n(\nprev1\n,\nprev2\n)\n\n\nelse\n:\n\n\nreturn\n\n\nfibonacci\n(\n1\n,\n0\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-python\" tabindex=\"0\"><code class=\"language-python\"><span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ncount <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n\n<span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span>prev1<span class=\"token punctuation\">,</span> prev2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-global\">global</span> count\n    <span class=\"token keyword keyword-if\">if</span> count <span class=\"token operator\">&lt;=</span> <span class=\"token number\">19</span><span class=\"token punctuation\">:</span>\n        newFibo <span class=\"token operator\">=</span> prev1 <span class=\"token operator\">+</span> prev2\n        <span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span>newFibo<span class=\"token punctuation\">)</span>\n        prev2 <span class=\"token operator\">=</span> prev1\n        prev1 <span class=\"token operator\">=</span> newFibo\n        count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        fibonacci<span class=\"token punctuation\">(</span>prev1<span class=\"token punctuation\">,</span> prev2<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword keyword-else\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-return\">return</span>\n\nfibonacci<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "3. Finding The n n th Fibonacci Number Using Recursion",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To find the n n th Fibonacci number we can write code based on the mathematic formula for Fibonacci number n n :",
      "html": "<p>To find the <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-3-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-7\"><span class=\"mjx-mrow\" id=\"MJXc-Node-8\"><span class=\"mjx-mi\" id=\"MJXc-Node-9\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span>th Fibonacci number we can write code based on the mathematic formula for Fibonacci number <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-4-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-10\"><span class=\"mjx-mrow\" id=\"MJXc-Node-11\"><span class=\"mjx-mi\" id=\"MJXc-Node-12\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span>:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "F ( n ) = F ( n \u2212 1 ) + F ( n \u2212 2 ) F ( n ) = F ( n \u2212 1 ) + F ( n \u2212 2 )",
      "html": "<p><span class=\"math display\"><span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MJXc-display\" style=\"text-align: center;\"><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;&amp;#x2212;&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;&amp;#x2212;&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-5-Frame\" role=\"presentation\" style=\"font-size: 119%; text-align: center; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-13\"><span class=\"mjx-mrow\" id=\"MJXc-Node-14\"><span class=\"mjx-mi\" id=\"MJXc-Node-15\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.106em;\">F</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-16\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-17\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-18\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-19\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.059em; padding-bottom: 0.339em;\">=</span></span><span class=\"mjx-mi MJXc-space3\" id=\"MJXc-Node-20\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.106em;\">F</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-21\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-22\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-23\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">\u2212</span></span><span class=\"mjx-mn MJXc-space2\" id=\"MJXc-Node-24\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">1</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-25\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-26\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">+</span></span><span class=\"mjx-mi MJXc-space2\" id=\"MJXc-Node-27\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.106em;\">F</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-28\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-29\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-30\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.283em; padding-bottom: 0.451em;\">\u2212</span></span><span class=\"mjx-mn MJXc-space2\" id=\"MJXc-Node-31\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-32\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML MJX_Assistive_MathML_Block\" role=\"presentation\"><math display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>F</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>\u2212</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>\u2212</mo><mn>2</mn><mo stretchy=\"false\">)</mo></math></span></span></span></span></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This just means that for example the 10th Fibonacci number is the sum of the 9th and 8th Fibonacci numbers.",
      "html": "<p>This just means that for example the 10th Fibonacci number is the sum of the 9th and 8th Fibonacci numbers.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Note: This formula uses a 0-based index. This means that to generate the 20th Fibonacci number, we must write F ( 19 ) F ( 19 ) .",
      "html": "<p><strong>Note: </strong>This formula uses a 0-based index. This means that to generate the 20th Fibonacci number, we must write <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mn&gt;19&lt;/mn&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-6-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-33\"><span class=\"mjx-mrow\" id=\"MJXc-Node-34\"><span class=\"mjx-mi\" id=\"MJXc-Node-35\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.106em;\">F</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-36\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mn\" id=\"MJXc-Node-37\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">19</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-38\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>F</mi><mo stretchy=\"false\">(</mo><mn>19</mn><mo stretchy=\"false\">)</mo></math></span></span>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When using this concept with recursion, we can let the function call itself as long as n n is less than, or equal to, 1. If n \u2264 1 n \u2264 1 it means that the code execution has reached one of the first two Fibonacci numbers 1 or 0.",
      "html": "<p>When using this concept with recursion, we can let the function call itself as long as <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-7-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-39\"><span class=\"mjx-mrow\" id=\"MJXc-Node-40\"><span class=\"mjx-mi\" id=\"MJXc-Node-41\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span> is less than, or equal to, 1. If <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;&amp;#x2264;&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/math&gt;' id=\"MathJax-Element-8-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-42\"><span class=\"mjx-mrow\" id=\"MJXc-Node-43\"><span class=\"mjx-mi\" id=\"MJXc-Node-44\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mo MJXc-space3\" id=\"MJXc-Node-45\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.339em; padding-bottom: 0.507em;\">\u2264</span></span><span class=\"mjx-mn MJXc-space3\" id=\"MJXc-Node-46\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">1</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi><mo>\u2264</mo><mn>1</mn></math></span></span> it means that the code execution has reached one of the first two Fibonacci numbers 1 or 0.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The code looks like this:",
      "html": "<p>The code looks like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-python"
        ],
        "isNotranslate": true
      },
      "code": "def\n\nF\n(\nn\n)\n:\n\n\nif\nn\n<=\n\n1\n:\n\n\nreturn\nn\n\nelse\n:\n\n\nreturn\nF\n(\nn\n-\n\n1\n)\n\n+\nF\n(\nn\n-\n\n2\n)\n\n\n\nprint\n(\nF\n(\n19\n)\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-python\" tabindex=\"0\"><code class=\"language-python\"><span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">F</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-if\">if</span> n <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-return\">return</span> n\n    <span class=\"token keyword keyword-else\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-return\">return</span> F<span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> F<span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">(</span><span class=\"token number\">19</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Notice that this recursive method calls itself two times, not just one. This makes a huge difference in how the program will actually run on our computer. The number of calculations will explode when we increase the number of the Fibonacci number we want. To be more precise, the number of function calls will double every time we increase the Fibonacci number we want by one.",
      "html": "<p>Notice that this recursive method calls itself two times, not just one. This makes a huge difference in how the program will actually run on our computer. The number of calculations will explode when we increase the number of the Fibonacci number we want. To be more precise, the number of function calls will double every time we increase the Fibonacci number we want by one.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Just take a look at the number of function calls for F ( 5 ) F ( 5 ) :",
      "html": "<p>Just take a look at the number of function calls for <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mn&gt;5&lt;/mn&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-9-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-47\"><span class=\"mjx-mrow\" id=\"MJXc-Node-48\"><span class=\"mjx-mi\" id=\"MJXc-Node-49\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.106em;\">F</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-50\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mn\" id=\"MJXc-Node-51\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">5</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-52\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>F</mi><mo stretchy=\"false\">(</mo><mn>5</mn><mo stretchy=\"false\">)</mo></math></span></span>:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To better understand the code, here is how the recursive function calls return values so that F ( 5 ) F ( 5 ) returns the correct value in the end:",
      "html": "<p>To better understand the code, here is how the recursive function calls return values so that <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mn&gt;5&lt;/mn&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-10-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-53\"><span class=\"mjx-mrow\" id=\"MJXc-Node-54\"><span class=\"mjx-mi\" id=\"MJXc-Node-55\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.106em;\">F</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-56\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mn\" id=\"MJXc-Node-57\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">5</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-58\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>F</mi><mo stretchy=\"false\">(</mo><mn>5</mn><mo stretchy=\"false\">)</mo></math></span></span> returns the correct value in the end:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "There are two important things to notice here: The amount of function calls, and the amount of times the function is called with the same arguments.",
      "html": "<p>There are two important things to notice here: The amount of function calls, and the amount of times the function is called with the same arguments.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "So even though the code is fascinating and shows how recursion work, the actual code execution is too slow and ineffective to use for creating large Fibonacci numbers.",
      "html": "<p>So even though the code is fascinating and shows how recursion work, the actual code execution is too slow and ineffective to use for creating large Fibonacci numbers.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Summary",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Before we continue, let's look at what we have seen so far:",
      "html": "<p>Before we continue, let's look at what we have seen so far:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It is time to move on to the first data structure we will look at, the array.",
      "html": "<p>It is time to move on to the first data structure we will look at, the array.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Click the \"Next\" button to continue.",
      "html": "<p>Click the \"Next\" button to continue.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "DSA Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Test Yourself With Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise:",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "How can we make this fibonacci() function recursive?",
      "html": "<p>How can we make this fibonacci() function recursive?</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "print(0)\nprint(1)\ncount = 2\n\ndef fibonacci(prev1, prev2):\nglobal count\nif count <= 19:\nnewFibo = prev1 + prev2\nprint(newFibo)\nprev2 = prev1\nprev1 = newFibo\ncount += 1\n\n(prev1, prev2)\nelse:\nreturn\n\nfibonacci(1,0)",
      "language": "python",
      "code_html": "<pre style=\"overflow: auto;\">print(0)\nprint(1)\ncount = 2\n\ndef fibonacci(prev1, prev2):\n    global count\n    if count &lt;= 19:\n        newFibo = prev1 + prev2\n        print(newFibo)\n        prev2 = prev1\n        prev1 = newFibo\n        count += 1\n        <input maxlength=\"9\" name=\"ex1\" style=\"width: 10ch;\"/>(prev1, prev2)\n    else:\n        return\n\nfibonacci(1,0)\n</pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Start the Exercise",
          "href": "https://www.w3schools.com/exercise.php?filename=exercise_algo_simple3",
          "title": ""
        }
      ],
      "text": "Start the Exercise",
      "html": "<p><a href=\"exercise.php?filename=exercise_algo_simple3\" target=\"_blank\">Start the Exercise</a></p>"
    }
  ]
}