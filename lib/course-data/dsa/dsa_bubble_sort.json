{
  "title": "DSA Bubble Sort",
  "url": "https://www.w3schools.com/dsa/dsa_algo_bubblesort.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "DSA Bubble Sort",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Bubble Sort",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Bubble Sort is an algorithm that sorts an array from the lowest value to the highest value.",
      "html": "<p>Bubble Sort is an algorithm that sorts an array from the lowest value to the highest value.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Speed:",
      "html": "<p>Speed: <input max=\"900\" min=\"500\" type=\"range\"/></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Run the simulation to see how it looks like when the Bubble Sort algorithm sorts an array of values. Each value in the array is represented by a column.",
      "html": "<p>Run the simulation to see how it looks like when the Bubble Sort algorithm sorts an array of values. Each value in the array is represented by a column.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The word 'Bubble' comes from how this algorithm works, it makes the highest values 'bubble up'.",
      "html": "<p>The word 'Bubble' comes from how this algorithm works, it makes the highest values 'bubble up'.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "How it works:",
      "html": "<p><strong>How it works:</strong></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Continue reading to fully understand the Bubble Sort algorithm and how to implement it yourself.",
      "html": "<p>Continue reading to fully understand the Bubble Sort algorithm and how to implement it yourself.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Manual Run Through",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Before we implement the Bubble Sort algorithm in a programming language, let's manually run through a short array only one time, just to get the idea.",
      "html": "<p>Before we implement the Bubble Sort algorithm in a programming language, let's manually run through a short array only one time, just to get the idea.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 1: We start with an unsorted array.",
      "html": "<p><strong>Step 1:</strong> We start with an unsorted array.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 2: We look at the two first values. Does the lowest value come first? Yes, so we don't need to swap them.",
      "html": "<p><strong>Step 2:</strong> We look at the two first values. Does the lowest value come first? Yes, so we don't need to swap them.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span><span class=\"token number\"></span><mark class=\"dsa_mark\"><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span></mark><span class=\"token punctuation\"></span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 3: Take one step forward and look at values 12 and 9. Does the lowest value come first? No.",
      "html": "<p><strong>Step 3:</strong> Take one step forward and look at values 12 and 9. Does the lowest value come first? No.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\"></span><mark class=\"dsa_mark\"><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span></mark><span class=\"token punctuation\"></span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 4: So we need to swap them so that 9 comes first.",
      "html": "<p><strong>Step 4:</strong> So we need to swap them so that 9 comes first.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\"></span><mark class=\"dsa_mark\"><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span></mark><span class=\"token punctuation\"></span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 5: Taking one step forward, looking at 12 and 11.",
      "html": "<p><strong>Step 5:</strong> Taking one step forward, looking at 12 and 11.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\"></span><mark class=\"dsa_mark\"><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span></mark><span class=\"token punctuation\"></span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 6: We must swap so that 11 comes before 12.",
      "html": "<p><strong>Step 6:</strong> We must swap so that 11 comes before 12.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\"></span><mark class=\"dsa_mark\"><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span></mark><span class=\"token punctuation\"></span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 7: Looking at 12 and 3, do we need to swap them? Yes.",
      "html": "<p><strong>Step 7:</strong> Looking at 12 and 3, do we need to swap them? Yes.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\"></span><mark class=\"dsa_mark\"><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 8: Swapping 12 and 3 so that 3 comes first.",
      "html": "<p><strong>Step 8:</strong> Swapping 12 and 3 so that 3 comes first.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\"></span><mark class=\"dsa_mark\"><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Run the simulation below to see the 8 steps above animated:",
      "html": "<p>Run the simulation below to see the 8 steps above animated:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Manual Run Through: What Happened?",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We must understand what happened in this first run through to fully understand the algorithm, so that we can implement the algorithm in a programming language.",
      "html": "<p>We must understand what happened in this first run through to fully understand the algorithm, so that we can implement the algorithm in a programming language.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Can you see what happened to the highest value 12? It has bubbled up to the end of the array, where it belongs. But the rest of the array remains unsorted.",
      "html": "<p>Can you see what happened to the highest value 12? It has bubbled up to the end of the array, where it belongs. But the rest of the array remains unsorted.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "So the Bubble Sort algorithm must run through the array again, and again, and again, each time the next highest value bubbles up to its correct position. The sorting continues until the lowest value 3 is left at the start of the array. This means that we need to run through the array 4 times, to sort the array of 5 values.",
      "html": "<p>So the Bubble Sort algorithm must run through the array again, and again, and again, each time the next highest value bubbles up to its correct position. The sorting continues until the lowest value 3 is left at the start of the array. This means that we need to run through the array 4 times, to sort the array of 5 values.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "And each time the algorithm runs through the array, the remaining unsorted part of the array becomes shorter.",
      "html": "<p>And each time the algorithm runs through the array, the remaining unsorted part of the array becomes shorter.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This is how a full manual run through looks like:",
      "html": "<p>This is how a full manual run through looks like:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We will now use what we have learned to implement the Bubble Sort algorithm in a programming language.",
      "html": "<p>We will now use what we have learned to implement the Bubble Sort algorithm in a programming language.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Bubble Sort Implementation",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To implement the Bubble Sort algorithm in a programming language, we need:",
      "html": "<p>To implement the Bubble Sort algorithm in a programming language, we need:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The resulting code looks like this:",
      "html": "<p>The resulting code looks like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-python"
        ],
        "isNotranslate": true
      },
      "code": "my_array\n=\n\n[\n64\n,\n\n34\n,\n\n25\n,\n\n12\n,\n\n22\n,\n\n11\n,\n\n90\n,\n\n5\n]\n\n\nn\n=\n\nlen\n(\nmy_array\n)\n\n\nfor\ni\nin\n\nrange\n(\nn\n-\n1\n)\n:\n\n\nfor\nj\nin\n\nrange\n(\nn\n-\ni\n-\n1\n)\n:\n\n\nif\nmy_array\n[\nj\n]\n\n>\nmy_array\n[\nj\n+\n1\n]\n:\n\nmy_array\n[\nj\n]\n,\nmy_array\n[\nj\n+\n1\n]\n\n=\nmy_array\n[\nj\n+\n1\n]\n,\nmy_array\n[\nj\n]\n\n\n\nprint\n(\n\"Sorted array:\"\n,\nmy_array\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-python\" tabindex=\"0\"><code class=\"language-python\">my_array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n\nn <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>my_array<span class=\"token punctuation\">)</span>\n<span class=\"token keyword keyword-for\">for</span> i <span class=\"token keyword keyword-in\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-for\">for</span> j <span class=\"token keyword keyword-in\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-if\">if</span> my_array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> my_array<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            my_array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> my_array<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> my_array<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> my_array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sorted array:\"</span><span class=\"token punctuation\">,</span> my_array<span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Bubble Sort Improvement",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Bubble Sort algorithm can be improved a little bit more.",
      "html": "<p>The Bubble Sort algorithm can be improved a little bit more.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Imagine that the array is almost sorted already, with the lowest numbers at the start, like this for example:",
      "html": "<p>Imagine that the array is almost sorted already, with the lowest numbers at the start, like this for example:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-python"
        ],
        "isNotranslate": true
      },
      "code": "my_array\n=\n\n[\n7\n,\n\n3\n,\n\n9\n,\n\n12\n,\n\n11\n]",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-python\" tabindex=\"0\"><code class=\"language-python\">my_array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In this case, the array will be sorted after the first run, but the Bubble Sort algorithm will continue to run, without swapping elements, and that is not necessary.",
      "html": "<p>In this case, the array will be sorted after the first run, but the Bubble Sort algorithm will continue to run, without swapping elements, and that is not necessary.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the algorithm goes through the array one time without swapping any values, the array must be finished sorted, and we can stop the algorithm, like this:",
      "html": "<p>If the algorithm goes through the array one time without swapping any values, the array must be finished sorted, and we can stop the algorithm, like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-python"
        ],
        "isNotranslate": true
      },
      "code": "my_array\n=\n\n[\n7\n,\n\n3\n,\n\n9\n,\n\n12\n,\n\n11\n]\n\n\nn\n=\n\nlen\n(\nmy_array\n)\n\n\nfor\ni\nin\n\nrange\n(\nn\n-\n1\n)\n:\n\nswapped\n=\n\nFalse\n\n\nfor\nj\nin\n\nrange\n(\nn\n-\ni\n-\n1\n)\n:\n\n\nif\nmy_array\n[\nj\n]\n\n>\nmy_array\n[\nj\n+\n1\n]\n:\n\nmy_array\n[\nj\n]\n,\nmy_array\n[\nj\n+\n1\n]\n\n=\nmy_array\n[\nj\n+\n1\n]\n,\nmy_array\n[\nj\n]\n\nswapped\n=\n\nTrue\n\n\nif\n\nnot\nswapped\n:\n\n\nbreak\n\n\n\nprint\n(\n\"Sorted array:\"\n,\nmy_array\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-python\" data-line=\"5,9-11\" tabindex=\"0\"><code class=\"language-python\">my_array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span>\n\nn <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>my_array<span class=\"token punctuation\">)</span>\n<span class=\"token keyword keyword-for\">for</span> i <span class=\"token keyword keyword-in\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    swapped <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n    <span class=\"token keyword keyword-for\">for</span> j <span class=\"token keyword keyword-in\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-if\">if</span> my_array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> my_array<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            my_array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> my_array<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> my_array<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> my_array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n            swapped <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword keyword-if\">if</span> <span class=\"token keyword keyword-not\">not</span> swapped<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-break\">break</span>\n\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sorted array:\"</span><span class=\"token punctuation\">,</span> my_array<span class=\"token punctuation\">)</span><div aria-hidden=\"true\" class=\"line-highlight\" data-range=\"5\" data-start=\"5\" style=\"top: 88px; width: 789px;\"> \n</div><div aria-hidden=\"true\" class=\"line-highlight\" data-end=\"11\" data-range=\"9-11\" data-start=\"9\" style=\"top: 176px; width: 789px;\"> \n \n \n</div></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Bubble Sort Time Complexity",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "this page",
          "href": "https://www.w3schools.com/dsa_timecomplexity_theory.php",
          "title": ""
        }
      ],
      "text": "For a general explanation of what time complexity is, visit this page .",
      "html": "<p class=\"fontComment\">For a general explanation of what time complexity is, visit <a href=\"dsa_timecomplexity_theory.php\">this page</a>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "this page",
          "href": "https://www.w3schools.com/dsa_timecomplexity_bblsort.php",
          "title": ""
        }
      ],
      "text": "For a more thorough and detailed explanation of Bubble Sort time complexity, visit this page .",
      "html": "<p class=\"fontComment\">For a more thorough and detailed explanation of Bubble Sort time complexity, visit <a href=\"dsa_timecomplexity_bblsort.php\">this page</a>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Bubble Sort algorithm loops through every value in the array, comparing it to the value next to it. So for an array of n n values, there must be n n such comparisons in one loop.",
      "html": "<p>The Bubble Sort algorithm loops through every value in the array, comparing it to the value next to it. So for an array of <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-1-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-1\"><span class=\"mjx-mrow\" id=\"MJXc-Node-2\"><span class=\"mjx-mi\" id=\"MJXc-Node-3\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span> values, there must be <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-2-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-4\"><span class=\"mjx-mrow\" id=\"MJXc-Node-5\"><span class=\"mjx-mi\" id=\"MJXc-Node-6\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span> such comparisons in one loop.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "And after one loop, the array is looped through again and again n n times.",
      "html": "<p>And after one loop, the array is looped through again and again <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-3-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-7\"><span class=\"mjx-mrow\" id=\"MJXc-Node-8\"><span class=\"mjx-mi\" id=\"MJXc-Node-9\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span> times.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This means there are n \u22c5 n n \u22c5 n comparisons done in total, so the time complexity for Bubble Sort is:",
      "html": "<p>This means there are <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-4-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-10\"><span class=\"mjx-mrow\" id=\"MJXc-Node-11\"><span class=\"mjx-mi\" id=\"MJXc-Node-12\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-13\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.003em; padding-bottom: 0.339em;\">\u22c5</span></span><span class=\"mjx-mi MJXc-space2\" id=\"MJXc-Node-14\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi><mo>\u22c5</mo><mi>n</mi></math></span></span> comparisons done in total, so the time complexity for Bubble Sort is:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "O ( n 2 ) \u2013 \u2013\u2013\u2013\u2013\u2013 \u2013 \u2013 \u2013\u2013\u2013\u2013\u2013 \u2013 O ( n 2 ) _ _",
      "html": "<p><span class=\"math display\"><span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MJXc-display\" style=\"text-align: center;\"><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"&gt;&lt;munder&gt;&lt;munder&gt;&lt;mrow&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;mo&gt;&amp;#x005F;&lt;/mo&gt;&lt;/munder&gt;&lt;mo&gt;&amp;#x005F;&lt;/mo&gt;&lt;/munder&gt;&lt;/math&gt;' id=\"MathJax-Element-5-Frame\" role=\"presentation\" style=\"font-size: 119%; text-align: center; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-15\"><span class=\"mjx-mrow\" id=\"MJXc-Node-16\"><span class=\"mjx-munderover\" id=\"MJXc-Node-17\"><span class=\"mjx-itable\" style=\"margin-bottom: -0.223em;\"><span class=\"mjx-row\"><span class=\"mjx-cell\"><span class=\"mjx-op\"><span class=\"mjx-munderover\" id=\"MJXc-Node-18\"><span class=\"mjx-itable\" style=\"margin-bottom: -0.223em;\"><span class=\"mjx-row\"><span class=\"mjx-cell\"><span class=\"mjx-op\"><span class=\"mjx-mrow\" id=\"MJXc-Node-19\"><span class=\"mjx-mi\" id=\"MJXc-Node-20\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-21\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-msubsup\" id=\"MJXc-Node-22\"><span class=\"mjx-base\"><span class=\"mjx-mi\" id=\"MJXc-Node-23\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.584em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-24\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-25\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span></span></span><span class=\"mjx-row\"><span class=\"mjx-under\" style=\"padding-top: 0.12em;\"><span class=\"mjx-mo\" id=\"MJXc-Node-26\" style=\"vertical-align: top;\"><span class=\"mjx-delim-h\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin: 0px -0.001em 0px 0px; padding-bottom: 0.537em;\">\u2013</span><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin: 0px 0.135em 0px -0.136em; padding-bottom: 0.537em; letter-spacing: -0.174em;\">\u2013\u2013\u2013\u2013\u2013</span><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: 0px; padding-bottom: 0.537em; margin-right: -0.001em; margin-bottom: 0px;\">\u2013</span></span></span></span></span></span></span></span></span></span><span class=\"mjx-row\"><span class=\"mjx-under\" style=\"padding-top: 0.12em;\"><span class=\"mjx-mo\" id=\"MJXc-Node-27\" style=\"vertical-align: top;\"><span class=\"mjx-delim-h\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin: 0px -0.001em 0px 0px; padding-bottom: 0.537em;\">\u2013</span><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin: 0px 0.135em 0px -0.136em; padding-bottom: 0.537em; letter-spacing: -0.174em;\">\u2013\u2013\u2013\u2013\u2013</span><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: 0px; padding-bottom: 0.537em; margin-right: -0.001em; margin-bottom: 0px;\">\u2013</span></span></span></span></span></span></span></span></span><span class=\"MJX_Assistive_MathML MJX_Assistive_MathML_Block\" role=\"presentation\"><math display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><munder><munder><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><mo>_</mo></munder><mo>_</mo></munder></math></span></span></span></span></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The graph describing the Bubble Sort time complexity looks like this:",
      "html": "<p>The graph describing the Bubble Sort time complexity looks like this:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "As you can see, the run time increases really fast when the size of the array is increased.",
      "html": "<p>As you can see, the run time increases really fast when the size of the array is increased.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Quicksort",
          "href": "https://www.w3schools.com/dsa_algo_quicksort.php",
          "title": ""
        }
      ],
      "text": "Luckily there are sorting algorithms that are faster than this, like Quicksort , that we will look at later.",
      "html": "<p>Luckily there are sorting algorithms that are faster than this, like <a href=\"dsa_algo_quicksort.php\">Quicksort</a>, that we will look at later.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "You can simulate Bubble Sort below, where the red and dashed line is the theoretical time complexity O ( n 2 ) O ( n 2 ) . You can choose a number of values n n , and run an actual Bubble Sort implementation where the operations are counted and the count is marked as a blue cross in the plot below. How does theory compare with practice?",
      "html": "<p>You can simulate Bubble Sort below, where the red and dashed line is the theoretical time complexity <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-6-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-28\"><span class=\"mjx-mrow\" id=\"MJXc-Node-29\"><span class=\"mjx-mi\" id=\"MJXc-Node-30\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-31\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-msubsup\" id=\"MJXc-Node-32\"><span class=\"mjx-base\"><span class=\"mjx-mi\" id=\"MJXc-Node-33\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.513em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-34\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-35\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></math></span></span>. You can choose a number of values <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-7-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-36\"><span class=\"mjx-mrow\" id=\"MJXc-Node-37\"><span class=\"mjx-mi\" id=\"MJXc-Node-38\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span>, and run an actual Bubble Sort implementation where the operations are counted and the count is marked as a blue cross in the plot below. How does theory compare with practice?</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Set values: 300",
      "html": "<p><label>Set values: <input max=\"480\" min=\"100\" type=\"range\"/></label> 300</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Random",
      "html": "<p><label><input type=\"radio\" value=\"single\"/> Random</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Worst Case",
      "html": "<p><label><input type=\"radio\" value=\"worstCase\"/> Worst Case</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Best Case",
      "html": "<p><label><input type=\"radio\" value=\"bestCase\"/> Best Case</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "10 Random",
      "html": "<p><label><input type=\"radio\" value=\"random30\"/> 10 Random</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Operations: 0",
      "html": "<p>Operations: 0</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "DSA Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Test Yourself With Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise:",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Using Bubble Sort on this array:",
      "html": "<p>Using Bubble Sort on this array: </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To sort the values from left to right in an increasing (ascending) order.",
      "html": "<p>To sort the values from left to right in an increasing (ascending) order.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "How does the array look like after the FIRST run through?",
      "html": "<p>How does the array look like after the FIRST run through? </p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "[\n,\n,\n,\n,\n]",
      "language": "unknown",
      "code_html": "<pre style=\"overflow: auto;\">[<input maxlength=\"2\" name=\"ex1\" style=\"width: 3ch;\"/>,<input maxlength=\"2\" name=\"ex2\" style=\"width: 3ch;\"/>,<input maxlength=\"2\" name=\"ex3\" style=\"width: 3ch;\"/>,<input maxlength=\"2\" name=\"ex4\" style=\"width: 3ch;\"/>,<input maxlength=\"2\" name=\"ex5\" style=\"width: 3ch;\"/>]\n</pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Start the Exercise",
          "href": "https://www.w3schools.com/exercise.php?filename=exercise_algo_bubblesort1",
          "title": ""
        }
      ],
      "text": "Start the Exercise",
      "html": "<p><a href=\"exercise.php?filename=exercise_algo_bubblesort1\" target=\"_blank\">Start the Exercise</a></p>"
    }
  ]
}