{
  "title": "DSA Trees",
  "url": "https://www.w3schools.com/dsa/dsa_theory_trees.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "DSA Trees",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Trees",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Linked Lists",
          "href": "https://www.w3schools.com/dsa_theory_linkedlists.php",
          "title": ""
        }
      ],
      "text": "The Tree data structure is similar to Linked Lists in that each node contains data and can be linked to other nodes.",
      "html": "<p>The Tree data structure is similar to <a href=\"dsa_theory_linkedlists.php\">Linked Lists</a> in that each node contains data and can be linked to other nodes.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We have previously covered data structures like Arrays, Linked Lists, Stacks, and Queues. These are all linear structures, which means that each element follows directly after another in a sequence. Trees however, are different. In a Tree, a single element can have multiple 'next' elements, allowing the data structure to branch out in various directions.",
      "html": "<p>We have previously covered data structures like Arrays, Linked Lists, Stacks, and Queues. These are all linear structures, which means that each element follows directly after another in a sequence. Trees however, are different. In a Tree, a single element can have multiple 'next' elements, allowing the data structure to branch out in various directions.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The data structure is called a \"tree\" because it looks like a tree, only upside down, just like in the image below.",
      "html": "<p>The data structure is called a \"tree\" because it looks like a tree, only upside down, just like in the image below.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Tree data structure can be useful in many cases:",
      "html": "<p>The Tree data structure can be useful in many cases:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Tree Terminology and Rules",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Learn words used to describe the tree data structure by using the interactive tree visualization below.",
      "html": "<p>Learn words used to describe the tree data structure by using the interactive tree visualization below.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The whole tree",
      "html": "<p><label><input checked=\"\" name=\"rbgTree\" onchange=\"showTree(this.value)\" type=\"radio\" value=\"all\"/>The whole tree</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Root node",
      "html": "<p><label><input name=\"rbgTree\" onchange=\"showTree(this.value)\" type=\"radio\" value=\"root\"/>Root node</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Edges",
      "html": "<p><label><input name=\"rbgTree\" onchange=\"showTree(this.value)\" type=\"radio\" value=\"branches\"/>Edges</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Nodes",
      "html": "<p><label><input name=\"rbgTree\" onchange=\"showTree(this.value)\" type=\"radio\" value=\"nodes\"/>Nodes</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Leaf nodes",
      "html": "<p><label><input name=\"rbgTree\" onchange=\"showTree(this.value)\" type=\"radio\" value=\"leaves\"/>Leaf nodes</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Child nodes",
      "html": "<p><label><input name=\"rbgTree\" onchange=\"showTree(this.value)\" type=\"radio\" value=\"children\"/>Child nodes</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Parent nodes",
      "html": "<p><label><input name=\"rbgTree\" onchange=\"showTree(this.value)\" type=\"radio\" value=\"parents\"/>Parent nodes</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Tree height (h=2)",
      "html": "<p><label><input name=\"rbgTree\" onchange=\"showTree(this.value)\" type=\"radio\" value=\"height\"/>Tree height (h=2)</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Tree size (n=10)",
      "html": "<p><label><input name=\"rbgTree\" onchange=\"showTree(this.value)\" type=\"radio\" value=\"nodes\"/>Tree size (n=10)</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The first node in a tree is called the root node.",
      "html": "<p>The first node in a tree is called the <strong>root</strong> node.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A link connecting one node to another is called an edge .",
      "html": "<p>A link connecting one node to another is called an <strong>edge</strong>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A parent node has links to its child nodes. Another word for a parent node is internal node.",
      "html": "<p>A <strong>parent</strong> node has links to its <strong>child</strong> nodes. Another word for a parent node is <strong>internal</strong> node.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A node can have zero, one, or many child nodes.",
      "html": "<p>A node can have zero, one, or many child nodes.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A node can only have one parent node.",
      "html": "<p>A node can only have one parent node.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Nodes without links to other child nodes are called leaves , or leaf nodes .",
      "html": "<p>Nodes without links to other child nodes are called <strong>leaves</strong>, or <strong>leaf nodes</strong>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The tree height is the maximum number of edges from the root node to a leaf node. The height of the tree above is 2.",
      "html": "<p>The <strong>tree height</strong> is the maximum number of edges from the root node to a leaf node. The height of the tree above is 2.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The height of a node is the maximum number of edges between the node and a leaf node.",
      "html": "<p>The <strong>height of a node</strong> is the maximum number of edges between the node and a leaf node.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The tree size is the number of nodes in the tree.",
      "html": "<p>The <strong>tree size</strong> is the number of nodes in the tree.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Types of Trees",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Trees are a fundamental data structure in computer science, used to represent hierarchical relationships. This tutorial covers several key types of trees.",
      "html": "<p>Trees are a fundamental data structure in computer science, used to represent hierarchical relationships. This tutorial covers several key types of trees.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Binary Trees: Each node has up to two children, the left child node and the right child node. This structure is the foundation for more complex tree types like Binay Search Trees and AVL Trees.",
      "html": "<p><strong>Binary Trees: </strong>Each node has up to two children, the left child node and the right child node. This structure is the foundation for more complex tree types like Binay Search Trees and AVL Trees.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Binary Search Trees (BSTs): A type of Binary Tree where for each node, the left child node has a lower value, and the right child node has a higher value.",
      "html": "<p><strong>Binary Search Trees (BSTs): </strong>A type of Binary Tree where for each node, the left child node has a lower value, and the right child node has a higher value.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "AVL Trees: A type of Binary Search Tree that self-balances so that for every node, the difference in height between the left and right subtrees is at most one. This balance is maintained through rotations when nodes are inserted or deleted.",
      "html": "<p><strong>AVL Trees: </strong>A type of Binary Search Tree that self-balances so that for every node, the difference in height between the left and right subtrees is at most one. This balance is maintained through rotations when nodes are inserted or deleted.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Each of these data structures are described in detail on the next pages, including animations and how to implement them.",
      "html": "<p>Each of these data structures are described in detail on the next pages, including animations and how to implement them.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "DSA Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Test Yourself With Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise:",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In a Tree data structure, like the one below:",
      "html": "<p>In a Tree data structure, like the one below: </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "What are nodes C, D, E, and G called?",
      "html": "<p>What are nodes C, D, E, and G called?</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "Nodes C, D, E, and G\nare called\nnodes.",
      "language": "unknown",
      "code_html": "<pre style=\"overflow: auto;\">Nodes C, D, E, and G \nare called <input maxlength=\"5\" name=\"ex1\" style=\"width: 6ch;\"/> nodes.\n</pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Start the Exercise",
          "href": "https://www.w3schools.com/exercise.php?filename=exercise_theory_trees1",
          "title": ""
        }
      ],
      "text": "Start the Exercise",
      "html": "<p><a href=\"exercise.php?filename=exercise_theory_trees1\" target=\"_blank\">Start the Exercise</a></p>"
    }
  ]
}