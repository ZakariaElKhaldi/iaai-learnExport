{
  "title": "DSA Minimum Spanning Tree",
  "url": "https://www.w3schools.com/dsa/dsa_theory_mst_minspantree.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "DSA Minimum Spanning Tree",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "The Minimum Spanning Tree Problem",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Minimum Spanning Tree (MST) is the collection of edges required to connect all vertices in an undirected graph, with the minimum total edge weight.",
      "html": "<p>The Minimum Spanning Tree (MST) is the collection of edges required to connect all vertices in an undirected graph, with the minimum total edge weight.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Prim's algorithm",
          "href": "https://www.w3schools.com/dsa_algo_mst_prim.php",
          "title": ""
        },
        {
          "text": "Kruskal's algorithm",
          "href": "https://www.w3schools.com/dsa_algo_mst_kruskal.php",
          "title": ""
        }
      ],
      "text": "The animation above runs Prim's algorithm to find the MST. Another way to find the MST, which also works for unconnected graphs, is to run Kruskal's algorithm .",
      "html": "<p>The animation above runs <a href=\"dsa_algo_mst_prim.php\">Prim's algorithm</a> to find the MST. Another way to find the MST, which also works for unconnected graphs, is to run <a href=\"dsa_algo_mst_kruskal.php\">Kruskal's algorithm</a>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "It is called a Minimum Spanning Tree , because it is a connected, acyclic, undirected graph, which is the definition of a tree data structure.",
      "html": "<p>It is called a Minimum Spanning <strong>Tree</strong>, because it is a connected, acyclic, undirected graph, which is the definition of a tree data structure.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In the real world, finding the Minimum Spanning Tree can help us find the most effective way to connect houses to the internet or to the electrical grid, or it can help us finding the fastest route to deliver packages.",
      "html": "<p>In the real world, finding the Minimum Spanning Tree can help us find the most effective way to connect houses to the internet or to the electrical grid, or it can help us finding the fastest route to deliver packages.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "An MST Thought Experiment",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Let's imagine that the circles in the animation above are villages that are without electrical power, and you want to connect them to the electrical grid. After one village is given electrical power, the electrical cables must be spread out from that village to the others. The villages can be connected in a lot of different ways, each route having a different cost.",
      "html": "<p>Let's imagine that the circles in the animation above are villages that are without electrical power, and you want to connect them to the electrical grid. After one village is given electrical power, the electrical cables must be spread out from that village to the others. The villages can be connected in a lot of different ways, each route having a different cost.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The electrical cables are expensive, and digging ditches for the cables, or stretching the cables in the air is expensive as well. The terrain can certainly be a challenge, and then there is perhaps a future cost for maintenance that is different depending on where the cables end up.",
      "html": "<p>The electrical cables are expensive, and digging ditches for the cables, or stretching the cables in the air is expensive as well. The terrain can certainly be a challenge, and then there is perhaps a future cost for maintenance that is different depending on where the cables end up.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "All these route costs can be factored in as edge weights in a graph. Every vertex represents a village, and every edge represents a possible route for the electrical cable between two villages.",
      "html": "<p>All these route costs can be factored in as edge weights in a graph. Every vertex represents a village, and every edge represents a possible route for the electrical cable between two villages.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "After such a graph is created, the Minimum Spanning Tree (MST) can be found, and that will be the most effective way to connect these villages to the electrical grid.",
      "html": "<p>After such a graph is created, the Minimum Spanning Tree (MST) can be found, and that will be the most effective way to connect these villages to the electrical grid.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "And this is actually what the first MST algorithm (Bor\u016fvka's algorithm) was made for in 1926: To find the best way to connect the historical region of Moravia, in the Check Republic, to the electrical grid.",
      "html": "<p>And this is actually what the first MST algorithm (Bor\u016fvka's algorithm) was made for in 1926: To find the best way to connect the historical region of Moravia, in the Check Republic, to the electrical grid.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "MST Algorithms",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Prim's algorithm",
          "href": "https://www.w3schools.com/dsa_algo_mst_prim.php",
          "title": ""
        },
        {
          "text": "Kruskal's algorithm",
          "href": "https://www.w3schools.com/dsa_algo_mst_kruskal.php",
          "title": ""
        }
      ],
      "text": "The next two pages in this tutorial explains two algorithms that finds the Minimum Spanning Tree in a graph: Prim's algorithm , and Kruskal's algorithm .",
      "html": "<p>The next two pages in this tutorial explains two algorithms that finds the Minimum Spanning Tree in a graph: <a href=\"dsa_algo_mst_prim.php\">Prim's algorithm</a>, and <a href=\"dsa_algo_mst_kruskal.php\">Kruskal's algorithm</a>.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "MathJax_Preview"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "MathJax_Preview"
          },
          {
            "text": "",
            "color": "rgb(0, 0, 0)",
            "class": "MathJax_Preview"
          }
        ],
        "classList": [
          "ws-table-all",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "syntax_highlighting": [
        {
          "text": "",
          "color": "inherit",
          "class": [
            "MathJax_Preview"
          ]
        },
        {
          "text": "",
          "color": "inherit",
          "class": [
            "MathJax_Preview"
          ]
        },
        {
          "text": "",
          "color": "inherit",
          "class": [
            "MathJax_Preview"
          ]
        }
      ],
      "language": "unknown",
      "code_html": "<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th></th>\n<th>Prim's algorithm</th>\n<th>Kruskal's algorithm</th>\n</tr>\n<tr>\n<td><i>Can it find MSTs (a Minimum Spanning Forest) in an unconnected graph?</i></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td><i>How does it start?</i></td>\n<td>The MST grows from a randomly chosen vertex.</td>\n<td>The first edge in the MST is the edge with lowest edge weight.</td>\n</tr>\n<tr>\n<td><i>What time complexity does it have?</i></td>\n<td><span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-1-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-1\"><span class=\"mjx-mrow\" id=\"MJXc-Node-2\"><span class=\"mjx-mi\" id=\"MJXc-Node-3\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-4\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-msubsup\" id=\"MJXc-Node-5\"><span class=\"mjx-base\" style=\"margin-right: -0.186em;\"><span class=\"mjx-mi\" id=\"MJXc-Node-6\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.186em;\">V</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.513em; padding-left: 0.413em; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-7\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-8\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>V</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></math></span></span><script id=\"MathJax-Element-1\" type=\"math/tex\">O(V^2)</script>, or <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;&amp;#x2061;&lt;/mo&gt;&lt;mrow class=\"MJX-TeXAtom-ORD\"&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;/mrow&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-2-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-9\"><span class=\"mjx-mrow\" id=\"MJXc-Node-10\"><span class=\"mjx-mi\" id=\"MJXc-Node-11\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-12\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-13\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.026em;\">E</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-14\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.003em; padding-bottom: 0.339em;\">\u22c5</span></span><span class=\"mjx-mi MJXc-space2\" id=\"MJXc-Node-15\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.563em;\">log</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-16\"><span class=\"mjx-char\"></span></span><span class=\"mjx-texatom MJXc-space1\" id=\"MJXc-Node-17\"><span class=\"mjx-mrow\" id=\"MJXc-Node-18\"><span class=\"mjx-mi\" id=\"MJXc-Node-19\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.186em;\">V</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-20\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><mi>E</mi><mo>\u22c5</mo><mi>log</mi><mo>\u2061</mo><mrow class=\"MJX-TeXAtom-ORD\"><mi>V</mi></mrow><mo stretchy=\"false\">)</mo></math></span></span><script id=\"MathJax-Element-2\" type=\"math/tex\"> O( E \\cdot \\log{V}) </script> (Optimized)</td>\n<td><span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;&amp;#x2061;&lt;/mo&gt;&lt;mrow class=\"MJX-TeXAtom-ORD\"&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;/mrow&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-3-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-21\"><span class=\"mjx-mrow\" id=\"MJXc-Node-22\"><span class=\"mjx-mi\" id=\"MJXc-Node-23\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-24\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-25\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.026em;\">E</span></span><span class=\"mjx-mo MJXc-space2\" id=\"MJXc-Node-26\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.003em; padding-bottom: 0.339em;\">\u22c5</span></span><span class=\"mjx-mi MJXc-space2\" id=\"MJXc-Node-27\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.563em;\">log</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-28\"><span class=\"mjx-char\"></span></span><span class=\"mjx-texatom MJXc-space1\" id=\"MJXc-Node-29\"><span class=\"mjx-mrow\" id=\"MJXc-Node-30\"><span class=\"mjx-mi\" id=\"MJXc-Node-31\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.451em; padding-bottom: 0.283em; padding-right: 0.026em;\">E</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-32\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><mi>E</mi><mo>\u22c5</mo><mi>log</mi><mo>\u2061</mo><mrow class=\"MJX-TeXAtom-ORD\"><mi>E</mi></mrow><mo stretchy=\"false\">)</mo></math></span></span><script id=\"MathJax-Element-3\" type=\"math/tex\"> O( E \\cdot \\log{E} ) </script></td>\n</tr>\n</tbody></table>",
      "code_classes": [
        "ws-table-all",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "MathJax_Preview"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "MathJax_Preview"
        },
        {
          "text": "",
          "color": "rgb(0, 0, 0)",
          "class": "MathJax_Preview"
        }
      ],
      "class_list": [
        "ws-table-all",
        "notranslate"
      ],
      "is_notranslate": true
    }
  ]
}