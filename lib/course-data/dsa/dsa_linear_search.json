{
  "title": "DSA Linear Search",
  "url": "https://www.w3schools.com/dsa/dsa_algo_linearsearch.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "DSA Linear Search",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Linear Search",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Linear Search algorithm searches through an array and returns the index of the value it searches for.",
      "html": "<p>The Linear Search algorithm searches through an array and returns the index of the value it searches for.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Speed:",
      "html": "<p>Speed: <input max=\"500\" min=\"50\" type=\"range\"/></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Find value:",
      "html": "<p><label>Find value: <input max=\"10\" min=\"1\" step=\"1\" type=\"number\"/></label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "",
      "html": "<p></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Current value:",
      "html": "<p>Current value: </p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "",
      "html": "<p></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Run the simulation above to see how the Linear Search algorithm works.",
      "html": "<p>Run the simulation above to see how the Linear Search algorithm works.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Too see what happens when a value is not found, try to find value 5.",
      "html": "<p>Too see what happens when a value is not found, try to find value 5.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This algorithm is very simple and easy to understand and implement.",
      "html": "<p>This algorithm is very simple and easy to understand and implement.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the array is already sorted, it is better to use the much faster Binary Search algorithm that we will explore on the next page.",
      "html": "<p>If the array is already sorted, it is better to use the much faster Binary Search algorithm that we will explore on the next page.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "A big difference between sorting algorithms and searching algorithms is that sorting algorithms modify the array, but searching algorithms leave the array unchanged.",
      "html": "<p>A big difference between <span style=\"font-style: italic;\">sorting</span> algorithms and <span style=\"font-style: italic;\">searching</span> algorithms is that sorting algorithms modify the array, but searching algorithms leave the array unchanged.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "How it works:",
      "html": "<p><strong>How it works:</strong></p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Manual Run Through",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Let's try to do the searching manually, just to get an even better understanding of how Linear Search works before actually implementing it in a programming language. We will search for value 11.",
      "html": "<p>Let's try to do the searching manually, just to get an even better understanding of how Linear Search works before actually implementing it in a programming language. We will search for value 11.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 1: We start with an array of random values.",
      "html": "<p><strong>Step 1:</strong> We start with an array of random values.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 2: We look at the first value in the array, is it equal to 11?",
      "html": "<p><strong>Step 2:</strong> We look at the first value in the array, is it equal to 11?</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span><mark class=\"dsa_mark\"> <span class=\"token number\">12</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 3: We move on to the next value at index 1, and compare it to 11 to see if it is equal.",
      "html": "<p><strong>Step 3:</strong> We move on to the next value at index 1, and compare it to 11 to see if it is equal.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">8</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 4: We check the next value at index 2.",
      "html": "<p><strong>Step 4:</strong> We check the next value at index 2.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">9</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 5: We move on to the next value at index 3. Is it equal to 11?",
      "html": "<p><strong>Step 5:</strong> We move on to the next value at index 3. Is it equal to 11?</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">11</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We have found it!",
      "html": "<p>We have found it!</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Value 11 is found at index 3.",
      "html": "<p>Value 11 is found at index 3.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Returning index position 3.",
      "html": "<p>Returning index position 3.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Linear Search is finished.",
      "html": "<p>Linear Search is finished.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Run the simulation below to see the steps above animated:",
      "html": "<p>Run the simulation below to see the steps above animated:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Manual Run Through: What Happened?",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This algorithm is really straight forward.",
      "html": "<p>This algorithm is really straight forward.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Every value is checked from the start of the array to see if the value is equal to 11, the value we are trying to find.",
      "html": "<p>Every value is checked from the start of the array to see if the value is equal to 11, the value we are trying to find.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "When the value is found, the searching is stopped, and the index where the value is found is returned.",
      "html": "<p>When the value is found, the searching is stopped, and the index where the value is found is returned.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If the array is searched through without finding the value, -1 is returned.",
      "html": "<p>If the array is searched through without finding the value, -1 is returned.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Linear Search Implementation",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To implement the Linear Search algorithm we need:",
      "html": "<p>To implement the Linear Search algorithm we need:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The resulting code for Linear Search looks like this:",
      "html": "<p>The resulting code for Linear Search looks like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-python"
        ],
        "isNotranslate": true
      },
      "code": "def\n\nlinearSearch\n(\narr\n,\ntargetVal\n)\n:\n\n\nfor\ni\nin\n\nrange\n(\nlen\n(\narr\n)\n)\n:\n\n\nif\narr\n[\ni\n]\n\n==\ntargetVal\n:\n\n\nreturn\ni\n\nreturn\n\n-\n1\n\n\narr\n=\n\n[\n3\n,\n\n7\n,\n\n2\n,\n\n9\n,\n\n5\n]\n\ntargetVal\n=\n\n9\n\n\nresult\n=\nlinearSearch\n(\narr\n,\ntargetVal\n)\n\n\n\nif\nresult\n!=\n\n-\n1\n:\n\n\nprint\n(\n\"Value\"\n,\ntargetVal\n,\n\"found at index\"\n,\nresult\n)\n\n\nelse\n:\n\n\nprint\n(\n\"Value\"\n,\ntargetVal\n,\n\"not found\"\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-python\" tabindex=\"0\"><code class=\"language-python\"><span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">linearSearch</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> targetVal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-for\">for</span> i <span class=\"token keyword keyword-in\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-if\">if</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> targetVal<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword keyword-return\">return</span> i\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n\narr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\ntargetVal <span class=\"token operator\">=</span> <span class=\"token number\">9</span>\n\nresult <span class=\"token operator\">=</span> linearSearch<span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> targetVal<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword keyword-if\">if</span> result <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Value\"</span><span class=\"token punctuation\">,</span>targetVal<span class=\"token punctuation\">,</span><span class=\"token string\">\"found at index\"</span><span class=\"token punctuation\">,</span>result<span class=\"token punctuation\">)</span>\n<span class=\"token keyword keyword-else\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Value\"</span><span class=\"token punctuation\">,</span>targetVal<span class=\"token punctuation\">,</span><span class=\"token string\">\"not found\"</span><span class=\"token punctuation\">)</span></code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Linear Search Time Complexity",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "this page",
          "href": "https://www.w3schools.com/dsa_timecomplexity_theory.php",
          "title": ""
        }
      ],
      "text": "For a general explanation of what time complexity is, visit this page .",
      "html": "<p class=\"fontComment\">For a general explanation of what time complexity is, visit <a href=\"dsa_timecomplexity_theory.php\">this page</a>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "this page",
          "href": "https://www.w3schools.com/dsa_timecomplexity_insertionsort.php",
          "title": ""
        }
      ],
      "text": "For a more thorough and detailed explanation of Insertion Sort time complexity, visit this page .",
      "html": "<p class=\"fontComment\">For a more thorough and detailed explanation of Insertion Sort time complexity, visit <a href=\"dsa_timecomplexity_insertionsort.php\">this page</a>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If Linear Search runs and finds the target value as the first array value in an array with n n values, only one compare is needed.",
      "html": "<p>If Linear Search runs and finds the target value as the first array value in an array with <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-1-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-1\"><span class=\"mjx-mrow\" id=\"MJXc-Node-2\"><span class=\"mjx-mi\" id=\"MJXc-Node-3\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span> values, only one compare is needed.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "But if Linear Search runs through the whole array of n n values, without finding the target value, n n compares are needed.",
      "html": "<p>But if Linear Search runs through the whole array of <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-2-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-4\"><span class=\"mjx-mrow\" id=\"MJXc-Node-5\"><span class=\"mjx-mi\" id=\"MJXc-Node-6\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span> values, without finding the target value, <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-3-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-7\"><span class=\"mjx-mrow\" id=\"MJXc-Node-8\"><span class=\"mjx-mi\" id=\"MJXc-Node-9\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span> compares are needed.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "This means that time complexity for Linear Search is",
      "html": "<p>This means that time complexity for Linear Search is</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "O ( n ) O ( n )",
      "html": "<p><span class=\"math display\"><span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MJXc-display\" style=\"text-align: center;\"><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-4-Frame\" role=\"presentation\" style=\"font-size: 119%; text-align: center; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-10\"><span class=\"mjx-mrow\" id=\"MJXc-Node-11\"><span class=\"mjx-mi\" id=\"MJXc-Node-12\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-13\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-14\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-15\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML MJX_Assistive_MathML_Block\" role=\"presentation\"><math display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></math></span></span></span></span></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "If we draw how much time Linear Search needs to find a value in an array of n n values, we get this graph:",
      "html": "<p>If we draw how much time Linear Search needs to find a value in an array of <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-5-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-16\"><span class=\"mjx-mrow\" id=\"MJXc-Node-17\"><span class=\"mjx-mi\" id=\"MJXc-Node-18\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span> values, we get this graph:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Run the simulation below for different number of values in an array, and see how many compares are needed for Linear Search to find a value in an array of n n values:",
      "html": "<p>Run the simulation below for different number of values in an array, and see how many compares are needed for Linear Search to find a value in an array of <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-6-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-19\"><span class=\"mjx-mrow\" id=\"MJXc-Node-20\"><span class=\"mjx-mi\" id=\"MJXc-Node-21\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span> values:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Set values: 300",
      "html": "<p><label>Set values: <input max=\"480\" min=\"100\" type=\"range\"/></label> 300</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Random",
      "html": "<p><label><input type=\"radio\" value=\"single\"/> Random</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Descending",
      "html": "<p><label><input type=\"radio\" value=\"worstCase\"/> Descending</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Ascending",
      "html": "<p><label><input type=\"radio\" value=\"bestCase\"/> Ascending</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "10 Random",
      "html": "<p><label><input type=\"radio\" value=\"random30\"/> 10 Random</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Operations: 0 Not found!",
      "html": "<p>Operations: 0<br/><span id=\"notFound\" style=\"display: none;\">Not found!</span></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Choosing \"Random\", \"Descending\" or \"Ascending\" in the simulation above has no effect on how fast Linear Search is.",
      "html": "<p>Choosing \"Random\", \"Descending\" or \"Ascending\" in the simulation above has no effect on how fast Linear Search is.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "DSA Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Test Yourself With Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise:",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Complete the code.",
      "html": "<p>Complete the code.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "def linearSearch(arr, targetVal):\nfor i in range(len(arr)):\nif arr[i] == targetVal:\n\n\nreturn -1",
      "language": "python",
      "code_html": "<pre style=\"overflow: auto;\">def linearSearch(arr, targetVal):\n    for i in range(len(arr)):\n        if arr[i] == targetVal:\n          <input maxlength=\"8\" name=\"ex1\" style=\"width: 9ch;\"/>\n    return -1\n</pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Start the Exercise",
          "href": "https://www.w3schools.com/exercise.php?filename=exercise_algo_linearsearch2",
          "title": ""
        }
      ],
      "text": "Start the Exercise",
      "html": "<p><a href=\"exercise.php?filename=exercise_algo_linearsearch2\" target=\"_blank\">Start the Exercise</a></p>"
    }
  ]
}