{
  "title": "DSA Quicksort",
  "url": "https://www.w3schools.com/dsa/dsa_algo_quicksort.php",
  "metadata": {
    "viewport": "width=device-width, initial-scale=1",
    "title": "W3Schools.com",
    "Keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website",
    "Description": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.",
    "og:image": "https://www.w3schools.com/images/w3schools_logo_436_2.png",
    "og:image:type": "image/png",
    "og:image:width": "436",
    "og:image:height": "228",
    "og:description": "W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.",
    "msapplication-TileColor": "#00a300",
    "theme-color": "#ffffff",
    "keywords": "HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, W3.CSS, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website"
  },
  "content": [
    {
      "type": "header",
      "metadata": {
        "level": "h1"
      },
      "text": "DSA Quicksort",
      "level": "h1"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Quicksort",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "As the name suggests, Quicksort is one of the fastest sorting algorithms.",
      "html": "<p>As the name suggests, Quicksort is one of the fastest sorting algorithms.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The Quicksort algorithm takes an array of values, chooses one of the values as the 'pivot' element, and moves the other values so that lower values are on the left of the pivot element, and higher values are on the right of it.",
      "html": "<p>The Quicksort algorithm takes an array of values, chooses one of the values as the 'pivot' element, and moves the other values so that lower values are on the left of the pivot element, and higher values are on the right of it.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Speed:",
      "html": "<p>Speed: <input max=\"900\" min=\"50\" type=\"range\"/></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "In this tutorial the last element of the array is chosen to be the pivot element, but we could also have chosen the first element of the array, or any element in the array really.",
      "html": "<p>In this tutorial the last element of the array is chosen to be the pivot element, but we could also have chosen the first element of the array, or any element in the array really.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Then, the Quicksort algorithm does the same operation recursively on the sub-arrays to the left and right side of the pivot element. This continues until the array is sorted.",
      "html": "<p>Then, the Quicksort algorithm does the same operation recursively on the sub-arrays to the left and right side of the pivot element. This continues until the array is sorted.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Recursion is when a function calls itself.",
      "html": "<p><strong>Recursion </strong>is when a function calls itself.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "After the Quicksort algorithm has put the pivot element in between a sub-array with lower values on the left side, and a sub-array with higher values on the right side, the algorithm calls itself twice, so that Quicksort runs again for the sub-array on the left side, and for the sub-array on the right side. The Quicksort algorithm continues to call itself until the sub-arrays are too small to be sorted.",
      "html": "<p>After the Quicksort algorithm has put the pivot element in between a sub-array with lower values on the left side, and a sub-array with higher values on the right side, the algorithm calls itself twice, so that Quicksort runs again for the sub-array on the left side, and for the sub-array on the right side. The Quicksort algorithm continues to call itself until the sub-arrays are too small to be sorted.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The algorithm can be described like this:",
      "html": "<p>The algorithm can be described like this:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "How it works:",
      "html": "<p><strong>How it works:</strong></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Continue reading to fully understand the Quicksort algorithm and how to implement it yourself.",
      "html": "<p>Continue reading to fully understand the Quicksort algorithm and how to implement it yourself.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Manual Run Through",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Before we implement the Quicksort algorithm in a programming language, let's manually run through a short array, just to get the idea.",
      "html": "<p>Before we implement the Quicksort algorithm in a programming language, let's manually run through a short array, just to get the idea.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 1: We start with an unsorted array.",
      "html": "<p><strong>Step 1:</strong> We start with an unsorted array.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 2: We choose the last value 3 as the pivot element.",
      "html": "<p><strong>Step 2:</strong> We choose the last value 3 as the pivot element.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">3</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 3: The rest of the values in the array are all greater than 3, and must be on the right side of 3. Swap 3 with 11.",
      "html": "<p><strong>Step 3:</strong> The rest of the values in the array are all greater than 3, and must be on the right side of 3. Swap 3 with 11.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span><mark class=\"dsa_mark\"> <span class=\"token number\">3</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">11</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 4: Value 3 is now in the correct position. We need to sort the values to the right of 3. We choose the last value 11 as the new pivot element.",
      "html": "<p><strong>Step 4:</strong> Value 3 is now in the correct position. We need to sort the values to the right of 3. We choose the last value 11 as the new pivot element.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">11</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 5: The value 7 must be to the left of pivot value 11, and 12 must be to the right of it. Move 7 and 12.",
      "html": "<p><strong>Step 5:</strong> The value 7 must be to the left of pivot value 11, and 12 must be to the right of it. Move 7 and 12.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 6: Swap 11 with 12 so that lower values 9 and 7 are on the left side of 11, and 12 is on the right side.",
      "html": "<p><strong>Step 6:</strong> Swap 11 with 12 so that lower values 9 and 7 are on the left side of 11, and 12 is on the right side.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 7: 11 and 12 are in the correct positions. We choose 7 as the pivot element in sub-array [ 9, 7], to the left of 11.",
      "html": "<p><strong>Step 7:</strong> 11 and 12 are in the correct positions. We choose 7 as the pivot element in sub-array [ 9, 7], to the left of 11.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">7</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Step 8: We must swap 9 with 7.",
      "html": "<p><strong>Step 8:</strong> We must swap 9 with 7.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "unknown",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "w3-code",
          "notranslate"
        ],
        "isNotranslate": true
      },
      "code": "",
      "language": "html",
      "code_html": "<div class=\"w3-code notranslate\">\n<code class=\"w3-white language-python\"><span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span><mark class=\"dsa_mark\"> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span></mark><span class=\"token number\"></span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span></code>\n</div>",
      "code_classes": [
        "w3-code",
        "notranslate"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "w3-code",
        "notranslate"
      ],
      "is_notranslate": true
    },
    {
      "type": "text",
      "metadata": {},
      "text": "And now, the array is sorted.",
      "html": "<p>And now, the array is sorted.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Run the simulation below to see the steps above animated:",
      "html": "<p>Run the simulation below to see the steps above animated:</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Manual Run Through: What Happened?",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Before we implement the algorithm in a programming language we need to go through what happened above in more detail.",
      "html": "<p>Before we implement the algorithm in a programming language we need to go through what happened above in more detail.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "We have already seen that last value of the array is chosen as the pivot element, and the rest of the values are arranged so that the values lower than the pivot value are to the left, and the higher values are to the right.",
      "html": "<p>We have already seen that last value of the array is chosen as the pivot element, and the rest of the values are arranged so that the values lower than the pivot value are to the left, and the higher values are to the right.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "After that, the pivot element is swapped with the first of the higher values. This splits the original array in two, with the pivot element in between the lower and the higher values.",
      "html": "<p>After that, the pivot element is swapped with the first of the higher values. This splits the original array in two, with the pivot element in between the lower and the higher values.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Now we need to do the same as above with the sub-arrays on the left and right side of the old pivot element. And if a sub-array has length 0 or 1, we consider it finished sorted.",
      "html": "<p>Now we need to do the same as above with the sub-arrays on the left and right side of the old pivot element. And if a sub-array has length 0 or 1, we consider it finished sorted.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To sum up, the Quicksort algorithm makes the sub-arrays become shorter and shorter until array is sorted.",
      "html": "<p>To sum up, the Quicksort algorithm makes the sub-arrays become shorter and shorter until array is sorted.</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Quicksort Implementation",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "here",
          "href": "https://www.w3schools.com/python/gloss_python_function_recursion.asp",
          "title": ""
        }
      ],
      "text": "To write a 'quickSort' method that splits the array into shorter and shorter sub-arrays we use recursion. This means that the 'quickSort' method must call itself with the new sub-arrays to the left and right of the pivot element. Read more about recursion here .",
      "html": "<p>To write a 'quickSort' method that splits the array into shorter and shorter sub-arrays we use recursion. This means that the 'quickSort' method must call itself with the new sub-arrays to the left and right of the pivot element. Read more about recursion  <a href=\"https://www.w3schools.com/python/gloss_python_function_recursion.asp\">here</a>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "To implement the Quicksort algorithm in a programming language, we need:",
      "html": "<p>To implement the Quicksort algorithm in a programming language, we need:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The resulting code looks like this:",
      "html": "<p>The resulting code looks like this:</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [
          "notranslate",
          "w3-white",
          "language-python"
        ],
        "isNotranslate": true
      },
      "code": "def\n\npartition\n(\narray\n,\nlow\n,\nhigh\n)\n:\n\npivot\n=\narray\n[\nhigh\n]\n\ni\n=\nlow\n-\n\n1\n\n\n\nfor\nj\nin\n\nrange\n(\nlow\n,\nhigh\n)\n:\n\n\nif\narray\n[\nj\n]\n\n<=\npivot\n:\n\ni\n+=\n\n1\n\narray\n[\ni\n]\n,\narray\n[\nj\n]\n\n=\narray\n[\nj\n]\n,\narray\n[\ni\n]\n\n\narray\n[\ni\n+\n1\n]\n,\narray\n[\nhigh\n]\n\n=\narray\n[\nhigh\n]\n,\narray\n[\ni\n+\n1\n]\n\n\nreturn\ni\n+\n1\n\n\n\ndef\n\nquicksort\n(\narray\n,\nlow\n=\n0\n,\nhigh\n=\nNone\n)\n:\n\n\nif\nhigh\nis\n\nNone\n:\n\nhigh\n=\n\nlen\n(\narray\n)\n\n-\n\n1\n\n\n\nif\nlow\n<\nhigh\n:\n\npivot_index\n=\npartition\n(\narray\n,\nlow\n,\nhigh\n)\n\nquicksort\n(\narray\n,\nlow\n,\npivot_index\n-\n1\n)\n\nquicksort\n(\narray\n,\npivot_index\n+\n1\n,\nhigh\n)\n\n\nmy_array\n=\n\n[\n64\n,\n\n34\n,\n\n25\n,\n\n12\n,\n\n22\n,\n\n11\n,\n\n90\n,\n\n5\n]\n\nquicksort\n(\nmy_array\n)\n\n\nprint\n(\n\"Sorted array:\"\n,\nmy_array\n)",
      "language": "python",
      "code_html": "<pre class=\"notranslate w3-white language-python\" tabindex=\"0\"><code class=\"language-python\"><span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> low<span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pivot <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>high<span class=\"token punctuation\">]</span>\n    i <span class=\"token operator\">=</span> low <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword keyword-for\">for</span> j <span class=\"token keyword keyword-in\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>low<span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword keyword-if\">if</span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> pivot<span class=\"token punctuation\">:</span>\n            i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n\n    array<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>high<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>high<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword keyword-return\">return</span> i<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n\n<span class=\"token keyword keyword-def\">def</span> <span class=\"token function\">quicksort</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> low<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> high<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword keyword-if\">if</span> high <span class=\"token keyword keyword-is\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        high <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword keyword-if\">if</span> low <span class=\"token operator\">&lt;</span> high<span class=\"token punctuation\">:</span>\n        pivot_index <span class=\"token operator\">=</span> partition<span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> low<span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span>\n        quicksort<span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> low<span class=\"token punctuation\">,</span> pivot_index<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        quicksort<span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> pivot_index<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span>\n\nmy_array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nquicksort<span class=\"token punctuation\">(</span>my_array<span class=\"token punctuation\">)</span>\n<span class=\"token keyword keyword-print\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sorted array:\"</span><span class=\"token punctuation\">,</span> my_array<span class=\"token punctuation\">)</span>\n</code></pre>",
      "code_classes": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [
        "notranslate",
        "w3-white",
        "language-python"
      ],
      "is_notranslate": true
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Quicksort Time Complexity",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "this page",
          "href": "https://www.w3schools.com/dsa_timecomplexity_theory.php",
          "title": ""
        }
      ],
      "text": "For a general explanation of what time complexity is, visit this page .",
      "html": "<p class=\"fontComment\">For a general explanation of what time complexity is, visit <a href=\"dsa_timecomplexity_theory.php\">this page</a>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "this page",
          "href": "https://www.w3schools.com/dsa_timecomplexity_quicksort.php",
          "title": ""
        }
      ],
      "text": "For a more thorough and detailed explanation of Quicksort time complexity, visit this page .",
      "html": "<p class=\"fontComment\">For a more thorough and detailed explanation of Quicksort time complexity, visit <a href=\"dsa_timecomplexity_quicksort.php\">this page</a>.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The worst case scenario for Quicksort is O ( n 2 ) O ( n 2 ) . This is when the pivot element is either the highest or lowest value in every sub-array, which leads to a lot of recursive calls. With our implementation above, this happens when the array is already sorted.",
      "html": "<p>The worst case scenario for Quicksort is <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-1-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-1\"><span class=\"mjx-mrow\" id=\"MJXc-Node-2\"><span class=\"mjx-mi\" id=\"MJXc-Node-3\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-4\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-msubsup\" id=\"MJXc-Node-5\"><span class=\"mjx-base\"><span class=\"mjx-mi\" id=\"MJXc-Node-6\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.513em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-7\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-8\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></math></span></span>. This is when the pivot element is either the highest or lowest value in every sub-array, which leads to a lot of recursive calls. With our implementation above, this happens when the array is already sorted.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "But on average, the time complexity for Quicksort is actually just O ( n log n ) O ( n log \u2061 n ) , which is a lot better than for the previous sorting algorithms we have looked at. That is why Quicksort is so popular.",
      "html": "<p>But on average, the time complexity for Quicksort is actually just <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;&amp;#x2061;&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-2-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-9\"><span class=\"mjx-mrow\" id=\"MJXc-Node-10\"><span class=\"mjx-mi\" id=\"MJXc-Node-11\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-12\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-13\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mi MJXc-space1\" id=\"MJXc-Node-14\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.563em;\">log</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-15\"><span class=\"mjx-char\"></span></span><span class=\"mjx-mi MJXc-space1\" id=\"MJXc-Node-16\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-17\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi>log</mi><mo>\u2061</mo><mi>n</mi><mo stretchy=\"false\">)</mo></math></span></span>, which is a lot better than for the previous sorting algorithms we have looked at. That is why Quicksort is so popular.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Below you can see the significant improvement in time complexity for Quicksort in an average scenario O ( n log n ) O ( n log \u2061 n ) , compared to the previous sorting algorithms Bubble, Selection and Insertion Sort with time complexity O ( n 2 ) O ( n 2 ) :",
      "html": "<p>Below you can see the significant improvement in time complexity for Quicksort in an average scenario <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;&amp;#x2061;&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-3-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-18\"><span class=\"mjx-mrow\" id=\"MJXc-Node-19\"><span class=\"mjx-mi\" id=\"MJXc-Node-20\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-21\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-mi\" id=\"MJXc-Node-22\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mi MJXc-space1\" id=\"MJXc-Node-23\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.563em;\">log</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-24\"><span class=\"mjx-char\"></span></span><span class=\"mjx-mi MJXc-space1\" id=\"MJXc-Node-25\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-26\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi>log</mi><mo>\u2061</mo><mi>n</mi><mo stretchy=\"false\">)</mo></math></span></span>, compared to the previous sorting algorithms Bubble, Selection and Insertion Sort with time complexity <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=\"false\"&gt;(&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo stretchy=\"false\"&gt;)&lt;/mo&gt;&lt;/math&gt;' id=\"MathJax-Element-4-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-27\"><span class=\"mjx-mrow\" id=\"MJXc-Node-28\"><span class=\"mjx-mi\" id=\"MJXc-Node-29\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.507em; padding-bottom: 0.283em;\">O</span></span><span class=\"mjx-mo\" id=\"MJXc-Node-30\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">(</span></span><span class=\"mjx-msubsup\" id=\"MJXc-Node-31\"><span class=\"mjx-base\"><span class=\"mjx-mi\" id=\"MJXc-Node-32\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span><span class=\"mjx-sup\" style=\"font-size: 70.7%; vertical-align: 0.513em; padding-left: 0px; padding-right: 0.071em;\"><span class=\"mjx-mn\" id=\"MJXc-Node-33\" style=\"\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.395em; padding-bottom: 0.339em;\">2</span></span></span></span><span class=\"mjx-mo\" id=\"MJXc-Node-34\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"padding-top: 0.451em; padding-bottom: 0.619em;\">)</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></math></span></span>:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "The recursion part of the Quicksort algorithm is actually a reason why the average sorting scenario is so fast, because for good picks of the pivot element, the array will be split in half somewhat evenly each time the algorithm calls itself. So the number of recursive calls do not double, even if the number of values n n double.",
      "html": "<p>The recursion part of the Quicksort algorithm is actually a reason why the average sorting scenario is so fast, because for good picks of the pivot element, the array will be split in half somewhat evenly each time the algorithm calls itself. So the number of recursive calls do not double, even if the number of values <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"mjx-chtml MathJax_CHTML\" data-mathml='&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;' id=\"MathJax-Element-5-Frame\" role=\"presentation\" style=\"font-size: 119%; position: relative;\" tabindex=\"0\"><span aria-hidden=\"true\" class=\"mjx-math\" id=\"MJXc-Node-35\"><span class=\"mjx-mrow\" id=\"MJXc-Node-36\"><span class=\"mjx-mi\" id=\"MJXc-Node-37\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.227em; padding-bottom: 0.283em;\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></span></span> double.</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Run Quicksort on different kinds of arrays with different number of values in the simulation below:",
      "html": "<p>Run Quicksort on different kinds of arrays with different number of values in the simulation below:</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Set values: 300",
      "html": "<p><label>Set values: <input max=\"480\" min=\"100\" type=\"range\"/></label> 300</p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Random",
      "html": "<p><label><input type=\"radio\" value=\"single\"/> Random</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Descending",
      "html": "<p><label><input type=\"radio\" value=\"worstCase\"/> Descending</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Ascending",
      "html": "<p><label><input type=\"radio\" value=\"bestCase\"/> Ascending</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "10 Random",
      "html": "<p><label><input type=\"radio\" value=\"random30\"/> 10 Random</label></p>"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Operations: 0",
      "html": "<p>Operations: 0</p>"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "DSA Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Test Yourself With Exercises",
      "level": "h2"
    },
    {
      "type": "header",
      "metadata": {
        "level": "h2"
      },
      "text": "Exercise:",
      "level": "h2"
    },
    {
      "type": "text",
      "metadata": {},
      "text": "Complete the code for the Quicksort algorithm.",
      "html": "<p>Complete the code for the Quicksort algorithm.</p>"
    },
    {
      "type": "code",
      "metadata": {
        "language": "python",
        "tryItLink": null,
        "syntaxHighlighting": [],
        "classList": [],
        "isNotranslate": false
      },
      "code": "def partition(array, low, high):\npivot = array[high]\ni = low - 1\n\nfor j in range(low, high):\nif array[j] <= pivot:\ni += 1\narray[i], array[j] = array[j], array[i]\n\narray[i+1], array[high] = array[high], array[i+1]\nreturn i+1\n\ndef quicksort(array, low=0, high=None):\nif high is None:\nhigh = len(array) - 1\n\nif low < high:\npivot_index = partition(array, low, high)\n\n(array, low, pivot_index-1)\n\n(array, pivot_index+1, high)\n\nmy_array = [64, 34, 25, 12, 22, 11, 90, 5]\nquicksort(my_array)\nprint(\"Sorted array:\", my_array)",
      "language": "python",
      "code_html": "<pre style=\"overflow: auto;\">def partition(array, low, high):\n    pivot = array[high]\n    i = low - 1\n\n    for j in range(low, high):\n        if array[j] &lt;= pivot:\n            i += 1\n            array[i], array[j] = array[j], array[i]\n\n    array[i+1], array[high] = array[high], array[i+1]\n    return i+1\n\ndef quicksort(array, low=0, high=None):\n    if high is None:\n        high = len(array) - 1\n\n    if low &lt; high:\n        pivot_index = partition(array, low, high)\n        <input maxlength=\"9\" name=\"ex1\" style=\"width: 10ch;\"/>(array, low, pivot_index-1)\n        <input maxlength=\"9\" name=\"ex2\" style=\"width: 10ch;\"/>(array, pivot_index+1, high)\n\nmy_array = [64, 34, 25, 12, 22, 11, 90, 5]\nquicksort(my_array)\nprint(\"Sorted array:\", my_array)\n</pre>",
      "code_classes": [],
      "tryItLink": null,
      "syntax_highlighting_data": [],
      "class_list": [],
      "is_notranslate": false
    },
    {
      "type": "text",
      "metadata": {},
      "links": [
        {
          "text": "Start the Exercise",
          "href": "https://www.w3schools.com/exercise.php?filename=exercise_algo_quicksort1",
          "title": ""
        }
      ],
      "text": "Start the Exercise",
      "html": "<p><a href=\"exercise.php?filename=exercise_algo_quicksort1\" target=\"_blank\">Start the Exercise</a></p>"
    }
  ]
}