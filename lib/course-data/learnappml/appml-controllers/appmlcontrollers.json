{
  "id": "67812760-021f-4503-a7da-7f1f10b1ca74",
  "title": "AppMLControllers",
  "slug": "appmlcontrollers",
  "metadata": {
    "description": "Learn about AppMLControllers with clear explanations and practical examples.",
    "keywords": [
      "c",
      "appml",
      "controller",
      "data",
      "application",
      "display",
      "sent",
      "table",
      "city",
      "country",
      "customername"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "C Basics"
    ],
    "estimated_time": 5,
    "category": "LearnAppML",
    "subcategory": "AppML Controllers"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "AppML\nControllers",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The purpose of an\nAppML controller\n, is to let you\ncontrol\nyour \napplication.\nWhat Can a Controller Do?\nSet initial data\nChange application data\nHandle input and output\nValidate data\nSummarize data\nHandle errors\nStart and stop applications\nAnd much more\nWithout a Controller\nBy default AppML applications run without a controller:\nExample\n<table appml-data=\"customers.js\n\"\n>\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n\nWith a Controller\nWith an AppML controller, you can\ncontrol\nyour application with\nJavaScript\n.\nThe controller is a JavaScript function,\nprovided by you\n.\nThe\nappml-controller\nattribute is used to refer to a controller \nfunction.\nExample\n<h1>Customers</h1>\n<table appml-data=\"customers.js\"\nappml-controller=\"myController\n\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n<script>\nfunction myController($appml) {\nif ($appml.message == \"display\") {\nif ($appml.display.name == \"CustomerName\") \n    {\n$appml.display.value = $appml.display.value.toUpperCase();\n}\n}\n}\n</script>\n\nThe controller (myController) in the example above, changes the value of \"CustomerName\" to \nuppercase, before it is displayed.\nIf you have a controller, AppML will send\nthe application object\n($appml) to the controller, for every important action.\nOne of the application properties is a message ($appml.message), describing \nthe application state.\nMessage\nDescription\nready\nSent after AppML is initiated, and ready to load data.\nloaded\nSent after AppML is fully loaded, ready to display data.\ndisplay\nSent before AppML displays a data item.\ndone\nSent after AppML is done (finished displaying).\nsubmit\nSent before AppML submits data.\nerror\nSent after AppML has encountered an error.\nMessages are explained in the\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<table appml-data=\"customers.js\n\"\n>\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<h1>Customers</h1>\n<table appml-data=\"customers.js\"\nappml-controller=\"myController\n\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n<script>\nfunction myController($appml) {\nif ($appml.message == \"display\") {\nif ($appml.display.name == \"CustomerName\") \n    {\n$appml.display.value = $appml.display.value.toUpperCase();\n}\n}\n}\n</script>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<table appml-data=\"customers.js\n\"\n>\n<tr>\n# TODO: Complete this line\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>",
      "solution": "<table appml-data=\"customers.js\n\"\n>\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<h1>Customers</h1>\n<table appml-data=\"customers.js\"\n# TODO: Complete this line\n\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n<script>\nfunction myController($appml) {\nif ($appml.message == \"display\") {\nif ($appml.display.name == \"CustomerName\") \n    {\n$appml.display.value = $appml.display.value.toUpperCase();\n}\n}\n}\n</script>",
      "solution": "<h1>Customers</h1>\n<table appml-data=\"customers.js\"\nappml-controller=\"myController\n\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n<script>\nfunction myController($appml) {\nif ($appml.message == \"display\") {\nif ($appml.display.name == \"CustomerName\") \n    {\n$appml.display.value = $appml.display.value.toUpperCase();\n}\n}\n}\n</script>"
    }
  ],
  "related_topics": [
    {
      "id": "ad7710ec-ce56-4b45-9542-52bba77caf3f",
      "title": "C Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "9d47f942-23f1-428a-adab-43c94c0b33cb",
      "title": "C Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "5342fa21-1b1c-4fa5-baf3-6c26d325f9e9",
      "title": "C Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is The controller?",
      "options": [
        "None of the above.",
        "Not a The controller.",
        "a JavaScript function",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of The controller is 'a JavaScript function'."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers AppMLControllers concepts and techniques. You'll learn how to use AppMLControllers effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of AppMLControllers and how to apply it in your projects."
}