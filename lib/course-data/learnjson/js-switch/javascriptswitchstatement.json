{
  "id": "e9fd5ccf-2cb4-445a-a5ca-22e555ef6602",
  "title": "JavaScriptSwitchStatement",
  "slug": "javascriptswitchstatement",
  "metadata": {
    "description": "Learn about JavaScriptSwitchStatement with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "case",
      "break",
      "switch",
      "default",
      "block",
      "text",
      "code",
      "example",
      "statement",
      "match"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJSON",
    "subcategory": "JS Switch"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JavaScript\nSwitch\nStatement",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The\nswitch\nstatement is used to perform different actions based on different conditions.\nThe JavaScript Switch Statement\nUse the\nswitch\nstatement to select one of many code blocks to be executed.\nSyntax\nswitch(\nexpression\n) {\ncase\nx\n:\n// code block\nbreak;\ncase\ny\n:\n// code block\nbreak;\ndefault:\n//\ncode block\n}\nThis is how it works:\nThe switch expression is evaluated once.\nThe value of the expression is compared with the values of each case.\nIf there is a match, the associated block of code is executed.\nIf there is no match, the default code block is executed.\nExample\nThe\ngetDay()\nmethod returns the weekday as a number between \n 0 and 6.\n(Sunday=0, Monday=1, Tuesday=2 ..)\nThis example uses the weekday number to calculate the weekday name:\nswitch (new Date().getDay()) {\ncase 0:\nday = \"Sunday\";\nbreak;\ncase 1:\nday = \"Monday\";\nbreak;\ncase 2:\nday = \"Tuesday\";\nbreak;\ncase 3:\nday = \"Wednesday\";\nbreak;\ncase 4:\nday = \"Thursday\";\nbreak;\ncase 5:\nday = \"Friday\";\nbreak;\ncase 6:\nday = \"Saturday\";\n}\nThe result of day will be:\n\nThe break Keyword\nWhen JavaScript reaches a\nbreak\nkeyword, it breaks out of the switch block.\nThis will stop the execution inside the switch block.\nIt is not necessary to break the last case in a switch block. The block breaks (ends) there anyway.\nNote:\nIf you omit the break statement, the \nthe evaluation does not match the case.\nThe default Keyword\nThe\ndefault\nkeyword specifies the code to run if there is no \ncase match:\nExample\nThe\ngetDay()\nmethod returns the weekday as a number between \n 0 and 6.\nIf today is neither Saturday (6) nor Sunday (0), write a default message:\nswitch (new Date().getDay()) {\ncase 6:\ntext = \"Today is Saturday\";\nbreak;\ncase 0:\ntext = \"Today is Sunday\";\nbreak;\ndefault:\ntext = \"Looking forward to the Weekend\";\n}\nThe result of text will be:\n\nThe\ndefault\ncase does not have to be the last case in a switch \nblock:\nExample\nswitch (new Date().getDay()) {\ndefault:\ntext = \"Looking forward to the Weekend\";\nbreak;\ncase 6:\ntext = \"Today is Saturday\";\nbreak;\ncase 0:\ntext = \"Today is Sunday\";\n}\n\nIf\ndefault\nis not the last case in the switch block, remember to end the default case with a break.\nCommon Code Blocks\nSometimes you will want different \nswitch cases to use the same \ncode.\nIn this example case 4 and 5 share the same code block, and 0 and 6 share \nanother code block:\nExample\nswitch (new Date().getDay()) {\ncase 4:\ncase 5:\ntext = \"Soon it is Weekend\";\nbreak;\ncase 0:\ncase 6:\ntext = \"It is Weekend\";\nbreak;\ndefault:\ntext = \"Looking forward to the Weekend\";\n}\n\nSwitching Details\nIf multiple cases matches a case value, the\nfirst\ncase is selected.\nIf no matching cases are found, the program continues to the\ndefault\nlabel.\nIf no default label is found, the program continues to the statement(s)\nafter the switch\n.\nStrict Comparison\nSwitch cases use\nstrict\ncomparison (===).\nThe values must be of the same type to match.\nA strict comparison can only be true if the operands are of the same type.\nIn this example there will be no match for x:\nExample\nlet x = \"0\";\nswitch (x) {\ncase 0:\ntext = \"Off\";\nbreak;\ncase 1:\ntext = \"On\";\nbreak;\ndefault:\ntext = \"No value found\";\n}\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "switch (new Date().getDay()) {\ncase 0:\nday = \"Sunday\";\nbreak;\ncase 1:\nday = \"Monday\";\nbreak;\ncase 2:\nday = \"Tuesday\";\nbreak;\ncase 3:\nday = \"Wednesday\";\nbreak;\ncase 4:\nday = \"Thursday\";\nbreak;\ncase 5:\nday = \"Friday\";\nbreak;\ncase 6:\nday = \"Saturday\";\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "switch (new Date().getDay()) {\ncase 6:\ntext = \"Today is Saturday\";\nbreak;\ncase 0:\ntext = \"Today is Sunday\";\nbreak;\ndefault:\ntext = \"Looking forward to the Weekend\";\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "switch (new Date().getDay()) {\ndefault:\ntext = \"Looking forward to the Weekend\";\nbreak;\ncase 6:\ntext = \"Today is Saturday\";\nbreak;\ncase 0:\ntext = \"Today is Sunday\";\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "switch (new Date().getDay()) {\ncase 4:\ncase 5:\ntext = \"Soon it is Weekend\";\nbreak;\ncase 0:\ncase 6:\ntext = \"It is Weekend\";\nbreak;\ndefault:\ntext = \"Looking forward to the Weekend\";\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "let x = \"0\";\nswitch (x) {\ncase 0:\ntext = \"Off\";\nbreak;\ncase 1:\ntext = \"On\";\nbreak;\ndefault:\ntext = \"No value found\";\n}",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "switch (new Date().getDay()) {\ncase 0:\nday = \"Sunday\";\nbreak;\ncase 1:\nday = \"Monday\";\nbreak;\ncase 2:\nday = \"Tuesday\";\nbreak;\ncase 3:\nday = \"Wednesday\";\nbreak;\ncase 4:\nday = \"Thursday\";\nbreak;\n# TODO: Complete this line\nday = \"Friday\";\nbreak;\ncase 6:\nday = \"Saturday\";\n}",
      "solution": "switch (new Date().getDay()) {\ncase 0:\nday = \"Sunday\";\nbreak;\ncase 1:\nday = \"Monday\";\nbreak;\ncase 2:\nday = \"Tuesday\";\nbreak;\ncase 3:\nday = \"Wednesday\";\nbreak;\ncase 4:\nday = \"Thursday\";\nbreak;\ncase 5:\nday = \"Friday\";\nbreak;\ncase 6:\nday = \"Saturday\";\n}"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "switch (new Date().getDay()) {\ncase 6:\ntext = \"Today is Saturday\";\nbreak;\ncase 0:\ntext = \"Today is Sunday\";\nbreak;\ndefault:\ntext = \"Looking forward to the Weekend\";\n# TODO: Complete this line",
      "solution": "switch (new Date().getDay()) {\ncase 6:\ntext = \"Today is Saturday\";\nbreak;\ncase 0:\ntext = \"Today is Sunday\";\nbreak;\ndefault:\ntext = \"Looking forward to the Weekend\";\n}"
    }
  ],
  "related_topics": [
    {
      "id": "deee5ffd-f924-4691-aa00-1bcabc720af3",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "87721fad-9959-44d7-979c-a73f8b3bc663",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "871f8049-36d4-45a0-b87a-ba8144de014d",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is JavaScript\nSwitch\nStatement\n\nThe\nswitch\nstatement?",
      "options": [
        "used to perform different actions based on different conditions",
        "how it works:\nThe switch expression is evaluated once",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of JavaScript\nSwitch\nStatement\n\nThe\nswitch\nstatement is 'used to perform different actions based on different conditions'."
    },
    {
      "question": "What is This?",
      "options": [
        "used to perform different actions based on different conditions",
        "how it works:\nThe switch expression is evaluated once",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of This is 'how it works:\nThe switch expression is evaluated once'."
    }
  ],
  "summary": "This tutorial covers JavaScriptSwitchStatement concepts and techniques. You'll learn how to use JavaScriptSwitchStatement effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaScriptSwitchStatement and how to apply it in your projects."
}