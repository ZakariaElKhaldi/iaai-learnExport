{
  "id": "a402745a-d2c3-47f1-b25a-4e9ee0ef0a09",
  "title": "JavaScriptDate Formats",
  "slug": "javascriptdate-formats",
  "metadata": {
    "description": "Learn about JavaScriptDate Formats with clear explanations and practical examples.",
    "keywords": [
      "date",
      "time",
      "const",
      "example",
      "dates",
      "javascript",
      "yyyy",
      "format",
      "zone",
      "written"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJSON",
    "subcategory": "JS Date Formats"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JavaScript\nDate Formats",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "JavaScript Date Input\nThere are generally 3 types of JavaScript date input formats:\nType\nExample\nISO Date\n\"2015-03-25\"  (The International Standard)\nShort Date\n\"03/25/2015\"\nLong Date\n\"Mar 25 2015\" or \"25 Mar 2015\"\nThe ISO format follows a strict standard in JavaScript.\nThe other formats are not \n so well defined and might be browser specific.\nJavaScript Date Output\nIndependent of input format, JavaScript will (by default) output dates in full \ntext string format:\nJavaScript ISO Dates\nISO 8601 is the international standard for the representation of dates and \ntimes.\nThe ISO 8601 syntax (YYYY-MM-DD) is also the preferred JavaScript date format:\nExample (Complete date)\nconst d = new Date(\"2015-03-25\");\n\nThe computed date will be relative to your time zone.\nDepending on your time zone, the result above \nwill vary between March 24 and March 25.\nISO Dates (Year and Month)\nISO dates can be written without specifying the day (YYYY-MM):\nExample\nconst d = new Date(\"2015-03\");\n\nTime zones will vary the result above between February 28 and March 01.\nISO Dates (Only Year)\nISO dates can be written without month and day (YYYY):\nExample\nconst d = new Date(\"2015\");\n\nTime zones will vary the result above between December 31 2014 and January 01 2015.\nISO Dates (Date-Time)\nISO dates can be written with added hours, minutes, and seconds \n(YYYY-MM-DDTHH:MM:SSZ):\nExample\nconst d = new Date(\"2015-03-25T12:00:00Z\");\n\nDate and time is separated with a capital T.\nUTC time is defined with a capital letter Z.\nIf you want to modify the time relative to UTC, remove the Z and add +HH:MM or -HH:MM \ninstead:\nExample\nconst d = new Date(\"2015-03-25T12:00:00-06:30\");\n\nUTC (Universal Time Coordinated)  is the same as GMT (Greenwich Mean Time).\nOmitting T or Z in a date-time string can give different results in different browsers.\nTime Zones\nWhen setting a date, without specifying the time zone, JavaScript will use \nthe browser's time zone.\nWhen getting a date, without specifying the time zone, the result is \nconverted to the browser's time zone.\nIn other words: If a date/time is created in GMT (Greenwich Mean Time), the \ndate/time will be converted to CDT (Central US Daylight Time) if a user browses \nfrom central US.\nJavaScript Short Dates.\nShort dates are written with an \"MM/DD/YYYY\" syntax like this:\nExample\nconst d = new Date(\"03/25/2015\");\n\nWARNINGS !\nIn some browsers, months or days with no leading zeroes may produce an error:\nconst d = new Date(\"2015-3-25\");\nThe behavior of \"YYYY/MM/DD\" is undefined.\nSome browsers will \ntry to guess the format. Some will return NaN.\nconst d = new Date(\"2015/03/25\");\nThe behavior of\u00a0 \"DD-MM-YYYY\" is also undefined.\nSome browsers will \ntry to guess the format. Some will return NaN.\nconst d = new Date(\"25-03-2015\");\nJavaScript Long Dates.\nLong dates are most often written with a \"MMM DD YYYY\" syntax like this:\nExample\nconst d = new Date(\"Mar 25 2015\");\n\nMonth and day can be in any order:\nExample\nconst d = new Date(\"25 Mar 2015\");\n\nAnd, month can be written in full (January), or abbreviated (Jan):\nExample\nconst d = new Date(\"January 25 2015\");\n\nExample\nconst d = new Date(\"Jan 25 2015\");\n\nCommas are ignored. Names are case insensitive:\nExample\nconst d = new Date(\"JANUARY, 25, 2015\");\n\nDate Input - Parsing Dates\nIf you have a valid date string, you can use the\nDate.parse()\nmethod to convert it to milliseconds.\nDate.parse()\nreturns the number of milliseconds between the date and January \n1, 1970:\nExample\nlet msec = Date.parse(\"March 21, 2012\");\n\nYou can then use the number of milliseconds to\nconvert it to a date\nobject:\nExample\nlet msec = Date.parse(\"March 21, 2012\");\nconst d = new Date(msec);\n\nComplete JavaScript Date Reference\nFor a complete Date reference, go to our:\nComplete JavaScript Date Reference\n.\nThe reference contains descriptions and examples of all Date properties and \nmethods.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "",
      "language": "unknown",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example (Complete date)",
      "content": "",
      "order": 4,
      "code": "const d = new Date(\"2015-03-25\");",
      "language": "javascript",
      "explanation": "Example of example (complete date)"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "const d = new Date(\"2015-03\");",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "const d = new Date(\"2015\");",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "const d = new Date(\"2015-03-25T12:00:00Z\");",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "const d = new Date(\"2015-03-25T12:00:00-06:30\");",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "const d = new Date(\"03/25/2015\");",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "const d = new Date(\"2015-3-25\");",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "const d = new Date(\"2015/03/25\");",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": "const d = new Date(\"25-03-2015\");",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 13,
      "code": "const d = new Date(\"Mar 25 2015\");",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 14,
      "code": "const d = new Date(\"25 Mar 2015\");",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 15,
      "code": "const d = new Date(\"January 25 2015\");",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 16,
      "code": "const d = new Date(\"Jan 25 2015\");",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 17,
      "code": "const d = new Date(\"JANUARY, 25, 2015\");",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 18,
      "code": "let msec = Date.parse(\"March 21, 2012\");",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 19,
      "code": "let msec = Date.parse(\"March 21, 2012\");\nconst d = new Date(msec);",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "const d = new Date(\"2015-03-25\");"
    },
    {
      "title": "Implement a Function",
      "description": "Create a function that demonstrates the concepts from this tutorial.",
      "difficulty": "medium",
      "starter_code": "# Write your javascript function here\n",
      "solution": "# Example solution would go here"
    }
  ],
  "related_topics": [
    {
      "id": "d635bcf7-478c-4e79-8d90-a0d5c7595041",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "dba02950-4819-4a15-b4c0-f2eb6adb5779",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "ac351c0b-8701-4da7-88cb-1572b16b81aa",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is JavaScript\nDate Formats\n\nJavaScript Date Input\nThere?",
      "options": [
        "not \n so well defined and might be browser specific",
        "None of the above.",
        "None of the above.",
        "generally 3 types of JavaScript date input formats:\nType\nExample\nISO Date\n\"2015-03-25\"  (The International Standard)\nShort Date\n\"03/25/2015\"\nLong Date\n\"Mar 25 2015\" or \"25 Mar 2015\"\nThe ISO format follows a strict standard in JavaScript"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of JavaScript\nDate Formats\n\nJavaScript Date Input\nThere is 'generally 3 types of JavaScript date input formats:\nType\nExample\nISO Date\n\"2015-03-25\"  (The International Standard)\nShort Date\n\"03/25/2015\"\nLong Date\n\"Mar 25 2015\" or \"25 Mar 2015\"\nThe ISO format follows a strict standard in JavaScript'."
    },
    {
      "question": "What is The other formats?",
      "options": [
        "not \n so well defined and might be browser specific",
        "None of the above.",
        "generally 3 types of JavaScript date input formats:\nType\nExample\nISO Date\n\"2015-03-25\"  (The International Standard)\nShort Date\n\"03/25/2015\"\nLong Date\n\"Mar 25 2015\" or \"25 Mar 2015\"\nThe ISO format follows a strict standard in JavaScript",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of The other formats is 'not \n so well defined and might be browser specific'."
    }
  ],
  "summary": "This tutorial covers JavaScriptDate Formats concepts and techniques. You'll learn how to use JavaScriptDate Formats effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaScriptDate Formats and how to apply it in your projects."
}