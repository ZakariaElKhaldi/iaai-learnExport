{
  "id": "a636e95e-e4ba-43b8-bfd5-f7a5186ea4a1",
  "title": "JavaScript Destructuring",
  "slug": "javascript-destructuring",
  "metadata": {
    "description": "Learn about JavaScript Destructuring with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "destructuring",
      "lastname",
      "firstname",
      "example",
      "const",
      "array",
      "person",
      "create",
      "object",
      "values"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJSON",
    "subcategory": "JS Destructuring"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JavaScript Destructuring",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Destructuring Assignment Syntax\nThe destructuring assignment syntax unpack object properties into variables:\nlet {firstName, lastName} = person;\nIt can also unpack arrays and any other iterables:\nlet [firstName, lastName] = person;\nObject Destructuring\nExample\n// Create an Object\nconst person = {\nfirstName: \"John\",\nlastName: \"Doe\",\nage: 50\n};\n// Destructuring\nlet {firstName, lastName} = person;\n\nThe order of the properties does not matter:\nExample\n// Create an Object\nconst person = {\nfirstName: \"John\",\nlastName: \"Doe\",\nage: 50\n};\n// Destructuring\nlet {lastName, firstName} = person;\n\nNote:\nDestructuring is not destructive.\nDestructuring does not change the original object.\nObject Default Values\nFor potentially missing properties we can set default values:\nExample\n// Create an Object\nconst person = {\nfirstName: \"John\",\nlastName: \"Doe\",\nage: 50\n};\n// Destructuring\nlet {firstName, lastName, country = \"US\"} = person;\n\nObject Property Alias\nExample\n// Create an Object\nconst person = {\nfirstName: \"John\",\nlastName: \"Doe\",\nage: 50\n};\n// Destructuring\nlet {lastName : name} = person;\n\nString Destructuring\nOne use for destructuring is unpacking string characters.\nExample\n// Create a String\nlet name = \"\";\n// Destructuring\nlet [a1, a2, a3, a4, a5] = name;\n\nNote:\nDestructuring can be used with any iterables.\nArray Destructuring\nWe can pick up array variables into our own variables:\nExample\n// Create an Array\nconst fruits = [\"Bananas\", \"Oranges\", \"Apples\", \"Mangos\"];\n// Destructuring\nlet [fruit1, fruit2] = fruits;\n\nSkipping Array Values\nWe can skip array values using two or more commas:\nExample\n// Create an Array\nconst fruits = [\"Bananas\", \"Oranges\", \"Apples\", \"Mangos\"];\n// Destructuring\nlet [fruit1,,,fruit2] = fruits;\n\nArray Position Values\nWe can pick up values from specific index locations of an array:\nExample\n// Create an Array\nconst fruits = [\"Bananas\", \"Oranges\", \"Apples\", \"Mangos\"];\n// Destructuring\nlet {[0]:fruit1 ,[1]:fruit2} = fruits;\n\nThe Rest Property\nYou can end a destructuring syntax with a rest property.\nThis syntax will store all remaining values into a new array:\nExample\n// Create an Array\nconst numbers = [10, 20, 30, 40, 50, 60, 70];\n// Destructuring\nconst [a,b, ...rest] = numbers\n\nDestructuring Maps\nExample\n// Create a Map\nconst fruits = new Map([\n[\"apples\", 500],\n[\"bananas\", 300],\n[\"oranges\", 200]\n]);\n// Destructing\nlet text = \"\";\nfor (const [key, value] of fruits) {\ntext += key + \" is \" + value;\n}\n\nSwapping JavaScript Variables\nYou can swap the values of two variables using a destructuring assignment:\nExample\nlet firstName = \"John\";\nlet lastName = \"Doe\";\n// Destructing\n[firstName, lastName] = [lastName, firstName];\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "// Create an Object\nconst person = {\nfirstName: \"John\",\nlastName: \"Doe\",\nage: 50\n};\n// Destructuring\nlet {firstName, lastName} = person;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "// Create an Object\nconst person = {\nfirstName: \"John\",\nlastName: \"Doe\",\nage: 50\n};\n// Destructuring\nlet {lastName, firstName} = person;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "// Create an Object\nconst person = {\nfirstName: \"John\",\nlastName: \"Doe\",\nage: 50\n};\n// Destructuring\nlet {firstName, lastName, country = \"US\"} = person;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "// Create an Object\nconst person = {\nfirstName: \"John\",\nlastName: \"Doe\",\nage: 50\n};\n// Destructuring\nlet {lastName : name} = person;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "// Create a String\nlet name = \"W3Schools\";\n// Destructuring\nlet [a1, a2, a3, a4, a5] = name;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "// Create an Array\nconst fruits = [\"Bananas\", \"Oranges\", \"Apples\", \"Mangos\"];\n// Destructuring\nlet [fruit1, fruit2] = fruits;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "// Create an Array\nconst fruits = [\"Bananas\", \"Oranges\", \"Apples\", \"Mangos\"];\n// Destructuring\nlet [fruit1,,,fruit2] = fruits;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "// Create an Array\nconst fruits = [\"Bananas\", \"Oranges\", \"Apples\", \"Mangos\"];\n// Destructuring\nlet {[0]:fruit1 ,[1]:fruit2} = fruits;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "// Create an Array\nconst numbers = [10, 20, 30, 40, 50, 60, 70];\n// Destructuring\nconst [a,b, ...rest] = numbers",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": "// Create a Map\nconst fruits = new Map([\n[\"apples\", 500],\n[\"bananas\", 300],\n[\"oranges\", 200]\n]);\n// Destructing\nlet text = \"\";\nfor (const [key, value] of fruits) {\ntext += key + \" is \" + value;\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 13,
      "code": "let firstName = \"John\";\nlet lastName = \"Doe\";\n// Destructing\n[firstName, lastName] = [lastName, firstName];",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "// Create an Object\nconst person = {\nfirstName: \"John\",\nlastName: \"Doe\",\n# TODO: Complete this line\n};\n// Destructuring\nlet {firstName, lastName} = person;",
      "solution": "// Create an Object\nconst person = {\nfirstName: \"John\",\nlastName: \"Doe\",\nage: 50\n};\n// Destructuring\nlet {firstName, lastName} = person;"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "// Create an Object\nconst person = {\n# TODO: Complete this line\nlastName: \"Doe\",\nage: 50\n};\n// Destructuring\nlet {lastName, firstName} = person;",
      "solution": "// Create an Object\nconst person = {\nfirstName: \"John\",\nlastName: \"Doe\",\nage: 50\n};\n// Destructuring\nlet {lastName, firstName} = person;"
    }
  ],
  "related_topics": [
    {
      "id": "eb047aeb-9f54-4c37-a5fc-91ae80879480",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "45a2fc4f-7bbf-4dab-917a-a61aa02f4a56",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "b74ebfa4-7776-40eb-afcf-9411a1f1dbe5",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Destructuring?",
      "options": [
        "unpacking string characters",
        "not destructive",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of Destructuring is 'not destructive'."
    },
    {
      "question": "What is String Destructuring\nOne use for destructuring?",
      "options": [
        "None of the above.",
        "unpacking string characters",
        "not destructive",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of String Destructuring\nOne use for destructuring is 'unpacking string characters'."
    }
  ],
  "summary": "This tutorial covers JavaScript Destructuring concepts and techniques. You'll learn how to use JavaScript Destructuring effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaScript Destructuring and how to apply it in your projects."
}