{
  "id": "f670a297-cf0d-4b65-bdbb-45f5a55fe158",
  "title": "JavaScript Display Objects",
  "slug": "javascript-display-objects",
  "metadata": {
    "description": "Learn about JavaScript Display Objects with clear explanations and practical examples.",
    "keywords": [
      "object",
      "person",
      "name",
      "properties",
      "javascript",
      "display",
      "displaying",
      "const",
      "city",
      "json"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJSON",
    "subcategory": "JS Object Display"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JavaScript Display Objects",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "How to Display JavaScript Objects?\nDisplaying a JavaScript object will output\n[object Object]\n.\nExample\n// Create an Object\nconst person = {\nname: \"John\",\nage: 30,\ncity: \"New York\"\n};\ndocument.getElementById(\"demo\").innerHTML = person;\n\nSome solutions to display JavaScript objects are:\nDisplaying the Object Properties by name\nDisplaying the Object Properties in a Loop\nDisplaying the Object using Object.values()\nDisplaying the Object using JSON.stringify()\nDisplaying Object Properties\nThe properties of an object can be displayed as a string:\nExample\n// Create an Object\nconst person = {\nname: \"John\",\nage: 30,\ncity: \"New York\"\n};\n// Display Properties\ndocument.getElementById(\"demo\").innerHTML =\nperson.name + \",\" + person.age + \",\" + person.city;\n\nDisplaying Properties in a Loop\nThe properties of an object can be collected in a loop:\nExample\n// Create an Object\nconst person = {\nname: \"John\",\nage: 30,\ncity: \"New York\"\n};\n// Build a Text\nlet text = \"\";\nfor (let x in person) {\ntext += person[x] + \" \";\n};\n// Display the Text\ndocument.getElementById(\"demo\").innerHTML = text;\n\nNote:\nYou must use\nperson[x]\nin the loop.\nperson.x\nwill not work (Because\nx\nis the loop variable).\nUsing Object.values()\nObject.values()\ncreates an array from the property values:\n// Create an Object\nconst person = {\nname: \"John\",\nage: 30,\ncity: \"New York\"\n};\n// Create an Array\nconst myArray = Object.values(person);\n// Display the Array\ndocument.getElementById(\"demo\").innerHTML = myArray;\n\nUsing Object.entries()\nObject.entries()\nmakes it simple to use objects in loops:\nExample\nconst fruits = {Bananas:300, Oranges:200, Apples:500};\nlet text = \"\";\nfor (let [fruit, value] of Object.entries(fruits)) {\ntext += fruit + \": \" + value + \"<br>\";\n}\n\nUsing JSON.stringify()\nJavaScript objects can be converted to a string with JSON method\nJSON.stringify()\n.\nJSON.stringify()\nis included in JavaScript and supported in all major browsers.\nNote:\nThe result will be a string written in JSON notation:\n{\"name\":\"John\",\"age\":50,\"city\":\"New York\"}\nExample\n// Create an Object\nconst person = {\nname: \"John\",\nage: 30,\ncity: \"New York\"\n};\n// Stringify Object\nlet myString = JSON.stringify(person);\n// Display String\ndocument.getElementById(\"demo\").innerHTML = myString;\n\nComplete Object Reference\nFor a complete reference, go to our:\nComplete JavaScript Object Reference\n.\nThe reference contains descriptions and examples of all Object Properties and Methods.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "// Create an Object\nconst person = {\nname: \"John\",\nage: 30,\ncity: \"New York\"\n};\ndocument.getElementById(\"demo\").innerHTML = person;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "// Create an Object\nconst person = {\nname: \"John\",\nage: 30,\ncity: \"New York\"\n};\n// Display Properties\ndocument.getElementById(\"demo\").innerHTML =\nperson.name + \",\" + person.age + \",\" + person.city;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "// Create an Object\nconst person = {\nname: \"John\",\nage: 30,\ncity: \"New York\"\n};\n// Build a Text\nlet text = \"\";\nfor (let x in person) {\ntext += person[x] + \" \";\n};\n// Display the Text\ndocument.getElementById(\"demo\").innerHTML = text;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "// Create an Object\nconst person = {\nname: \"John\",\nage: 30,\ncity: \"New York\"\n};\n// Create an Array\nconst myArray = Object.values(person);\n// Display the Array\ndocument.getElementById(\"demo\").innerHTML = myArray;",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "const fruits = {Bananas:300, Oranges:200, Apples:500};\nlet text = \"\";\nfor (let [fruit, value] of Object.entries(fruits)) {\ntext += fruit + \": \" + value + \"<br>\";\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "// Create an Object\nconst person = {\nname: \"John\",\nage: 30,\ncity: \"New York\"\n};\n// Stringify Object\nlet myString = JSON.stringify(person);\n// Display String\ndocument.getElementById(\"demo\").innerHTML = myString;",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "// Create an Object\nconst person = {\nname: \"John\",\nage: 30,\n# TODO: Complete this line\n};\ndocument.getElementById(\"demo\").innerHTML = person;",
      "solution": "// Create an Object\nconst person = {\nname: \"John\",\nage: 30,\ncity: \"New York\"\n};\ndocument.getElementById(\"demo\").innerHTML = person;"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "// Create an Object\nconst person = {\nname: \"John\",\nage: 30,\n# TODO: Complete this line\n};\n// Display Properties\ndocument.getElementById(\"demo\").innerHTML =\nperson.name + \",\" + person.age + \",\" + person.city;",
      "solution": "// Create an Object\nconst person = {\nname: \"John\",\nage: 30,\ncity: \"New York\"\n};\n// Display Properties\ndocument.getElementById(\"demo\").innerHTML =\nperson.name + \",\" + person.age + \",\" + person.city;"
    }
  ],
  "related_topics": [
    {
      "id": "5006520a-ae8d-40c7-b37d-7a694d07f64a",
      "title": "Advanced Javascript Techniques",
      "relationship": "next_topic"
    },
    {
      "id": "2b814461-5bc0-4f40-9980-9afc3ca72eda",
      "title": "Javascript Project: Build a Real-World Application",
      "relationship": "suggested_next"
    },
    {
      "id": "190f3df7-dc61-4530-bffa-d0b49be3a1e2",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is Because\nx?",
      "options": [
        "Not a Because\nx.",
        "None of the above.",
        "None of the above.",
        "the loop variable)"
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Because\nx is 'the loop variable)'."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers JavaScript Display Objects concepts and techniques. You'll learn how to use JavaScript Display Objects effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaScript Display Objects and how to apply it in your projects."
}