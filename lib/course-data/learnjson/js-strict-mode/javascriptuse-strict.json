{
  "id": "7f989afe-fb74-4fe5-b363-1b7e6f930fea",
  "title": "JavaScriptUse Strict",
  "slug": "javascriptuse-strict",
  "metadata": {
    "description": "Learn about JavaScriptUse Strict with clear explanations and practical examples.",
    "keywords": [
      "strict",
      "error",
      "mode",
      "cause",
      "variable",
      "allowed",
      "function",
      "javascript",
      "object",
      "eval"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJSON",
    "subcategory": "JS Strict Mode"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JavaScript\nUse Strict",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "\"use strict\";\nDefines that \nJavaScript code should be executed in \n\"strict mode\".\nThe \"use strict\" Directive\nThe\n\"use strict\"\ndirective was new in ECMAScript version 5.\nIt is not a statement, but a literal expression, ignored by earlier versions \nof JavaScript.\nThe purpose of\n\"use strict\"\nis to indicate that the code should be executed in \"strict mode\".\nWith strict mode, you can not, for example, use undeclared variables.\nAll modern browsers support \"use strict\" except Internet Explorer 9 and lower:\nDirective\n\"use strict\"\n13.0\n10.0\n4.0\n6.0\n12.1\nThe numbers in the table specify the first browser version that fully supports the directive.\nYou can use strict mode in all your programs. It helps you to write cleaner code,\nlike preventing you from using undeclared variables.\n\"use strict\"\nis just a string, so IE 9 will not throw an error even if it does not understand it.\nDeclaring Strict Mode\nStrict mode is declared by adding\n\"use strict\";\nto the beginning of a \nscript or a function.\nDeclared at the beginning of a script, it has global scope (all code \nin the script will execute in strict mode):\nExample\n\"use strict\";\nx = 3.14;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // This will cause an error \n because x is not declared\n\nExample\n\"use strict\";\nmyFunction();\nfunction myFunction() {\ny = 3.14;\u00a0\u00a0 // This will also cause an error \n because y is not declared\n}\n\nDeclared inside a function, it has local scope (only the code inside the function is \nin strict mode):\nx = 3.14;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // This will not cause an error.\nmyFunction();\nfunction \n myFunction() {\n\"use strict\";\ny = 3.14;\u00a0\u00a0 // This will cause an error\n}\n\nThe \"use strict\"; Syntax\nThe syntax, for declaring strict mode, was designed to be compatible with \nolder versions of JavaScript.\nCompiling a numeric literal (4 + 5;) or a string literal (\"John Doe\";) in a \nJavaScript program has no side effects. It simply compiles to a non existing \nvariable and dies.\nSo\n\"use strict\";\nonly matters to new compilers that \"understand\" the meaning \nof it.\nWhy Strict Mode?\nStrict mode makes it easier to write \"secure\" JavaScript.\nStrict mode changes \nAs an example, in normal JavaScript, mistyping a variable name creates a new \nglobal variable. In strict mode, this will throw an error, making it impossible \nto accidentally create a global variable.\nIn normal JavaScript, a developer will not receive any error feedback \nassigning values to non-writable properties.\nIn strict mode, any assignment to a non-writable property, a getter-only \nproperty, a non-existing property, a non-existing variable, or a non-existing \nobject, will throw an error.\nNot Allowed in Strict Mode\nUsing a variable, without declaring it, is not allowed:\n\"use strict\";\nx = 3.14;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // This will cause an error\n\nObjects are variables too.\nUsing an object, without declaring it, is not allowed:\n\"use strict\";\nx = {p1:10, p2:20};\u00a0\u00a0\u00a0\u00a0\u00a0 // This will cause an error\n\nDeleting a variable (or object) is not allowed.\n\"use strict\";\nlet x = 3.14;\ndelete x;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // This \nwill cause an error\n\nDeleting a function is not allowed.\n\"use strict\";\nfunction x(p1, p2) {};\ndelete x;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n // This will cause an error\n\nDuplicating a parameter name is not allowed:\n\"use strict\";\nfunction x(p1, p1) {};\u00a0\u00a0 // This will cause an error\n\nOctal numeric literals are not allowed:\n\"use strict\";\nlet x = 010;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // This \nwill cause an error\n\nOctal escape characters are not allowed:\n\"use strict\";\nlet x = \"\\010\";\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // This will cause an error\n\nWriting to a read-only property is not allowed:\n\"use strict\";\nconst obj = {};\nObject.defineProperty(obj, \"x\", {value:0, writable:false});\nobj.x = 3.14;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 // This \nwill cause an error\n\nWriting to a get-only property is not allowed:\n\"use strict\";\nconst obj = {get x() \n{return 0} };\nobj.x = 3.14;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // This \nwill cause an error\n\nDeleting an undeletable property is not allowed:\n\"use strict\";\ndelete Object.prototype; // This will cause an error\n\nThe word\neval\ncannot be used as a variable:\n\"use strict\";\nlet eval = 3.14;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // This will cause an error\n\nThe word\narguments\ncannot be used as a variable:\n\"use strict\";\nlet arguments = 3.14;\u00a0\u00a0\u00a0 // This will cause an error\n\nThe\nwith\nstatement is not allowed:\n\"use strict\";\nwith (Math){x = cos(2)}; // This will cause an error\n\nFor security reasons,\neval()\nis not allowed to create  \nvariables in the scope from which it was called.\nIn strict mode, a variable can not be used before it is declared:\n\"use strict\";\neval (\"x = 2\");\nalert (x);\u00a0\u00a0\u00a0\u00a0 \u00a0// This \nwill cause an error\n\nIn strict mode, eval() can not declare a variable using the var keyword:\n\"use strict\";\neval (\"var x = 2\");\nalert (x);\u00a0\u00a0\u00a0\u00a0// This \nwill cause an error\n\neval() can not declare a variable using the let keyword:\neval (\"let x = 2\");\nalert (x);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0// This \nwill cause an error\n\nThe\nthis\nkeyword in functions behaves \ndifferently in strict mode.\nThe\nthis\nkeyword refers to the object that \ncalled the function.\nIf the object is not specified, functions in strict mode \nwill return\nundefined\nand functions in normal \nmode will return the global object (window):\n\"use strict\";\nfunction myFunction() {\nalert(this); // will alert \"undefined\"\n}\nmyFunction();\n\nFuture Proof!\nKeywords reserved for future JavaScript versions can NOT be used as variable \nnames in strict mode.\nThese are:\nimplements\ninterface\nlet\npackage\nprivate\nprotected\npublic\nstatic\nyield\n\"use strict\";\nlet public = 1500;\u00a0\u00a0\u00a0\u00a0\u00a0 // This will cause an error\n\nWatch Out!\nThe \"use strict\" directive is only recognized at the\nbeginning\nof a script \nor a function.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "\"use strict\";\nx = 3.14;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // This will cause an error \n because x is not declared",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "\"use strict\";\nmyFunction();\nfunction myFunction() {\ny = 3.14;\u00a0\u00a0 // This will also cause an error \n because y is not declared\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "x = 3.14;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // This will not cause an error.\nmyFunction();\nfunction \n myFunction() {\n\"use strict\";\ny = 3.14;\u00a0\u00a0 // This will cause an error\n}",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "\"use strict\";\nx = 3.14;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // This will cause an error",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "\"use strict\";\nx = {p1:10, p2:20};\u00a0\u00a0\u00a0\u00a0\u00a0 // This will cause an error",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "\"use strict\";\nlet x = 3.14;\ndelete x;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // This \nwill cause an error",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "\"use strict\";\nfunction x(p1, p2) {};\ndelete x;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n // This will cause an error",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 10,
      "code": "\"use strict\";\nfunction x(p1, p1) {};\u00a0\u00a0 // This will cause an error",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 11,
      "code": "\"use strict\";\nlet x = 010;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // This \nwill cause an error",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 12,
      "code": "\"use strict\";\nlet x = \"\\010\";\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // This will cause an error",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 13,
      "code": "\"use strict\";\nconst obj = {};\nObject.defineProperty(obj, \"x\", {value:0, writable:false});\nobj.x = 3.14;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 // This \nwill cause an error",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 14,
      "code": "\"use strict\";\nconst obj = {get x() \n{return 0} };\nobj.x = 3.14;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // This \nwill cause an error",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 15,
      "code": "\"use strict\";\ndelete Object.prototype; // This will cause an error",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 16,
      "code": "\"use strict\";\nlet eval = 3.14;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // This will cause an error",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 17,
      "code": "\"use strict\";\nlet arguments = 3.14;\u00a0\u00a0\u00a0 // This will cause an error",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 18,
      "code": "\"use strict\";\nwith (Math){x = cos(2)}; // This will cause an error",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 19,
      "code": "\"use strict\";\neval (\"x = 2\");\nalert (x);\u00a0\u00a0\u00a0\u00a0 \u00a0// This \nwill cause an error",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 20,
      "code": "\"use strict\";\neval (\"var x = 2\");\nalert (x);\u00a0\u00a0\u00a0\u00a0// This \nwill cause an error",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 21,
      "code": "eval (\"let x = 2\");\nalert (x);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0// This \nwill cause an error",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 22,
      "code": "\"use strict\";\nfunction myFunction() {\nalert(this); // will alert \"undefined\"\n}\nmyFunction();",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 23,
      "code": "\"use strict\";\nlet public = 1500;\u00a0\u00a0\u00a0\u00a0\u00a0 // This will cause an error",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "\"use strict\";\nx = 3.14;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // This will cause an error \n# TODO: Complete this line",
      "solution": "\"use strict\";\nx = 3.14;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // This will cause an error \n because x is not declared"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "\"use strict\";\nmyFunction();\nfunction myFunction() {\ny = 3.14;\u00a0\u00a0 // This will also cause an error \n# TODO: Complete this line\n}",
      "solution": "\"use strict\";\nmyFunction();\nfunction myFunction() {\ny = 3.14;\u00a0\u00a0 // This will also cause an error \n because y is not declared\n}"
    }
  ],
  "related_topics": [
    {
      "id": "e5684e0a-e54a-4def-865b-e3081097fad2",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "09fc2c5e-1d7a-4ee0-b708-2cd082c85b32",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "ae473b26-92a7-49ec-983f-f0d4e7a441fa",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is It?",
      "options": [
        "not a statement",
        "Not a It.",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of It is 'not a statement'."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers JavaScriptUse Strict concepts and techniques. You'll learn how to use JavaScriptUse Strict effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaScriptUse Strict and how to apply it in your projects."
}