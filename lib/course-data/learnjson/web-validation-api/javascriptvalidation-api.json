{
  "id": "01d26fd8-8950-4cf2-901e-878486aeced7",
  "title": "JavaScriptValidation API",
  "slug": "javascriptvalidation-api",
  "metadata": {
    "description": "Learn about JavaScriptValidation API with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "input",
      "element",
      "value",
      "true",
      "validity",
      "attribute",
      "property",
      "number",
      "button",
      "myfunction"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJSON",
    "subcategory": "Web Validation API"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JavaScript\nValidation API",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "Constraint Validation DOM Methods\nProperty\nDescription\ncheckValidity()\nReturns true if an input element contains valid data.\nsetCustomValidity()\nSets the validationMessage property of an input element.\nIf an input field contains invalid data, display a message:\nThe checkValidity() Method\n<input id=\"id1\" type=\"number\" min=\"100\" max=\"300\" \n    required>\n<button onclick=\"myFunction()\">OK</button>\n<p id=\"demo\"></p>\n<script>\nfunction myFunction() {\nconst inpObj = document.getElementById(\"id1\");\nif (!inpObj.checkValidity()) {\ndocument.getElementById(\"demo\").innerHTML = inpObj.validationMessage;\n}\n}\n</script>\n\nConstraint Validation DOM Properties\nProperty\nDescription\nvalidity\nContains boolean properties related to the validity of an input element.\nvalidationMessage\nContains the message a browser will display when the validity is false.\nwillValidate\nIndicates if an input element will be validated.\nValidity Properties\nThe\nvalidity property\nof an input element contains a number \nof properties related to the validity of data:\nProperty\nDescription\ncustomError\nSet to true, if a custom validity message is set.\npatternMismatch\nSet to true, if an element's value does not match its pattern attribute.\nrangeOverflow\nSet to true, if an element's value is greater than its max attribute.\nrangeUnderflow\nSet to true, if an element's value is less than its min attribute.\nstepMismatch\nSet to true, if an element's value is invalid per its step attribute.\ntooLong\nSet to true, if an element's value exceeds its maxLength attribute.\ntypeMismatch\nSet to true, if an element's value is invalid per its type attribute.\nvalueMissing\nSet to true, if an element (with a required attribute) has no value.\nvalid\nSet to true, if an element's value is valid.\nExamples\nIf the number in an input field is greater than 100 (the input's\nmax\nattribute), display a message:\nThe rangeOverflow Property\n<input id=\"id1\" type=\"number\" max=\"100\">\n<button onclick=\"myFunction()\">OK</button>\n<p id=\"demo\"></p>\n<script>\nfunction myFunction() {\nlet text = \"Value OK\";\nif (document.getElementById(\"id1\").validity.rangeOverflow) {\ntext = \"Value too large\";\n}\n}\n</script>\n\nIf the number in an input field is less than 100 (the input's\nmin\nattribute), display a message:\nThe rangeUnderflow Property\n<input id=\"id1\" type=\"number\" min=\"100\">\n<button onclick=\"myFunction()\">OK</button>\n<p id=\"demo\"></p>\n<script>\nfunction myFunction() {\nlet text = \"Value OK\";\nif (document.getElementById(\"id1\").validity.rangeUnderflow) {\ntext = \"Value too small\";\n}\n}\n</script>\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "The checkValidity() Method",
      "content": "",
      "order": 3,
      "code": "<input id=\"id1\" type=\"number\" min=\"100\" max=\"300\" \n    required>\n<button onclick=\"myFunction()\">OK</button>\n<p id=\"demo\"></p>\n<script>\nfunction myFunction() {\nconst inpObj = document.getElementById(\"id1\");\nif (!inpObj.checkValidity()) {\ndocument.getElementById(\"demo\").innerHTML = inpObj.validationMessage;\n}\n}\n</script>",
      "language": "html",
      "explanation": "Example of the checkvalidity() method"
    },
    {
      "type": "code_example",
      "title": "The rangeOverflow Property",
      "content": "",
      "order": 4,
      "code": "<input id=\"id1\" type=\"number\" max=\"100\">\n<button onclick=\"myFunction()\">OK</button>\n<p id=\"demo\"></p>\n<script>\nfunction myFunction() {\nlet text = \"Value OK\";\nif (document.getElementById(\"id1\").validity.rangeOverflow) {\ntext = \"Value too large\";\n}\n}\n</script>",
      "language": "html",
      "explanation": "Example of the rangeoverflow property"
    },
    {
      "type": "code_example",
      "title": "The rangeUnderflow Property",
      "content": "",
      "order": 5,
      "code": "<input id=\"id1\" type=\"number\" min=\"100\">\n<button onclick=\"myFunction()\">OK</button>\n<p id=\"demo\"></p>\n<script>\nfunction myFunction() {\nlet text = \"Value OK\";\nif (document.getElementById(\"id1\").validity.rangeUnderflow) {\ntext = \"Value too small\";\n}\n}\n</script>",
      "language": "html",
      "explanation": "Example of the rangeunderflow property"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<input id=\"id1\" type=\"number\" min=\"100\" max=\"300\" \n    required>\n# TODO: Complete this line\n<p id=\"demo\"></p>\n<script>\nfunction myFunction() {\nconst inpObj = document.getElementById(\"id1\");\nif (!inpObj.checkValidity()) {\ndocument.getElementById(\"demo\").innerHTML = inpObj.validationMessage;\n}\n}\n</script>",
      "solution": "<input id=\"id1\" type=\"number\" min=\"100\" max=\"300\" \n    required>\n<button onclick=\"myFunction()\">OK</button>\n<p id=\"demo\"></p>\n<script>\nfunction myFunction() {\nconst inpObj = document.getElementById(\"id1\");\nif (!inpObj.checkValidity()) {\ndocument.getElementById(\"demo\").innerHTML = inpObj.validationMessage;\n}\n}\n</script>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<input id=\"id1\" type=\"number\" max=\"100\">\n<button onclick=\"myFunction()\">OK</button>\n<p id=\"demo\"></p>\n<script>\nfunction myFunction() {\nlet text = \"Value OK\";\nif (document.getElementById(\"id1\").validity.rangeOverflow) {\ntext = \"Value too large\";\n}\n# TODO: Complete this line\n</script>",
      "solution": "<input id=\"id1\" type=\"number\" max=\"100\">\n<button onclick=\"myFunction()\">OK</button>\n<p id=\"demo\"></p>\n<script>\nfunction myFunction() {\nlet text = \"Value OK\";\nif (document.getElementById(\"id1\").validity.rangeOverflow) {\ntext = \"Value too large\";\n}\n}\n</script>"
    }
  ],
  "related_topics": [
    {
      "id": "0e58f503-4d3a-4b3a-a20d-2005690667be",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "a81d1cc3-0337-4de2-83ca-1456e066a25d",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "d3816f9c-ee60-4abf-a211-70a48d090ce9",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is validationMessage\nContains the message a browser will display when the validity?",
      "options": [
        "None of the above.",
        "false",
        "set",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of validationMessage\nContains the message a browser will display when the validity is 'false'."
    },
    {
      "question": "What is if a custom validity message?",
      "options": [
        "None of the above.",
        "None of the above.",
        "set",
        "false"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of if a custom validity message is 'set'."
    }
  ],
  "summary": "This tutorial covers JavaScriptValidation API concepts and techniques. You'll learn how to use JavaScriptValidation API effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaScriptValidation API and how to apply it in your projects."
}