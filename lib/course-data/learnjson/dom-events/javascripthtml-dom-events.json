{
  "id": "0b605655-659c-4506-9fa6-22f0cee00291",
  "title": "JavaScriptHTML DOM Events",
  "slug": "javascripthtml-dom-events",
  "metadata": {
    "description": "Learn about JavaScriptHTML DOM Events with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "html",
      "event",
      "events",
      "example",
      "mouse",
      "user",
      "onclick",
      "element",
      "button",
      "input"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJSON",
    "subcategory": "DOM Events"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JavaScript\nHTML DOM Events",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "HTML DOM allows JavaScript to react to HTML events:\nMouse Over Me\nClick Me\nReacting to Events\nA JavaScript can be executed when an event occurs, like when a user clicks on an HTML element.\nTo execute code when a user clicks on an element, add JavaScript code to an HTML event attribute:\nonclick=\nJavaScript\nExamples of HTML events:\nWhen a user clicks the mouse\nWhen a web page has loaded\nWhen an image has been loaded\nWhen the mouse moves over an element\nWhen an input field is changed\nWhen an HTML form is submitted\nWhen a user strokes a key\nIn this example, the content of the\n<h1>\nelement is changed when a user clicks on it:\nExample\n<!DOCTYPE html>\n<html>\n<body>\n<h2 onclick=\"this.innerHTML = 'Ooops!'\">Click on this text!</h1>\n</body>\n</html>\n\nIn this example, a function is called from the event handler:\nExample\n<!DOCTYPE html>\n<html>\n<body>\n<h2 onclick=\"changeText(this)\">Click on this text!</h1>\n<script>\nfunction changeText(id) {\nid.innerHTML = \"Ooops!\";\n}\n</script>\n</body>\n</html>\n\nHTML Event Attributes\nTo assign events to HTML elements you can use event attributes.\nExample\nAssign an onclick event to a button element:\n<button onclick=\"displayDate()\">Try it</button>\n\nIn the example above, a function named\ndisplayDate\nwill be executed \nwhen the button is clicked.\nAssign Events Using the HTML DOM\nThe HTML DOM allows you to assign events to HTML elements using JavaScript:\nExample\nAssign an onclick event to a button element:\n<script>\ndocument.getElementById(\"myBtn\").onclick = displayDate;\n</script>\n\nIn the example above, a function named\ndisplayDate\nis assigned to \nan HTML element with the\nid=\"myBtn\"\n.\nThe function will be executed \nwhen the button is clicked.\nThe onload and onunload Events\nThe\nonload\nand\nonunload\nevents are triggered when the user enters or leaves the page.\nThe\nonload\nevent can be used to check the visitor's browser type and browser version, and load the proper version of the web page based on the information.\nThe\nonload\nand\nonunload\nevents can be used to deal with cookies.\nExample\n<body onload=\"checkCookies()\">\n\nThe oninput Event\nThe\noninput\nevent is often to some action while the user input data.\nBelow is an example of how to use the oninput to change the content of an input field.\nExample\n<input type=\"text\" id=\"fname\"\noninput=\"upperCase()\">\n\nThe onchange Event\nThe\nonchange\nevent is often used in combination with validation of input fields.\nBelow is an example of how to use the onchange. The\nupperCase()\nfunction will be called when a user changes the content of an input field.\nExample\n<input type=\"text\" id=\"fname\"\nonchange=\"upperCase()\">\n\nThe onmouseover and onmouseout Events\nThe\nonmouseover\nand\nonmouseout\nevents can be used to trigger a function when the user mouses \nover, or out of, an HTML element:\nMouse Over Me\n\nThe onmousedown, onmouseup and onclick Events\nThe\nonmousedown\n,\nonmouseup\n, and\nonclick\nevents are all parts of a \nmouse-click. First when a mouse-button is clicked, the onmousedown event is \ntriggered, then, when the mouse-button \nis released, the onmouseup event is triggered, finally, when the mouse-click is completed, the onclick event is triggered.\nClick Me\n\nMore Examples\nonmousedown and onmouseup\nChange an image when a user holds down the mouse button.\nonload\nDisplay an alert box when the page has finished loading.\nonfocus\nChange the background-color of an input field when it gets focus.\nMouse Events\nChange the color of an element when the cursor moves over it.\nHTML DOM Event Object Reference\nFor a list of all HTML DOM events, look at our complete\nHTML DOM Event Object Reference\n.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<!DOCTYPE html>\n<html>\n<body>\n<h2 onclick=\"this.innerHTML = 'Ooops!'\">Click on this text!</h1>\n</body>\n</html>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<!DOCTYPE html>\n<html>\n<body>\n<h2 onclick=\"changeText(this)\">Click on this text!</h1>\n<script>\nfunction changeText(id) {\nid.innerHTML = \"Ooops!\";\n}\n</script>\n</body>\n</html>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<button onclick=\"displayDate()\">Try it</button>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "<script>\ndocument.getElementById(\"myBtn\").onclick = displayDate;\n</script>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "<body onload=\"checkCookies()\">",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "<input type=\"text\" id=\"fname\"\noninput=\"upperCase()\">",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 9,
      "code": "<input type=\"text\" id=\"fname\"\nonchange=\"upperCase()\">",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Complete the Code 1",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<!DOCTYPE html>\n<html>\n<body>\n<h2 onclick=\"this.innerHTML = 'Ooops!'\">Click on this text!</h1>\n# TODO: Complete this line\n</html>",
      "solution": "<!DOCTYPE html>\n<html>\n<body>\n<h2 onclick=\"this.innerHTML = 'Ooops!'\">Click on this text!</h1>\n</body>\n</html>"
    },
    {
      "title": "Complete the Code 2",
      "description": "Fill in the missing line to make this code work.",
      "difficulty": "medium",
      "starter_code": "<!DOCTYPE html>\n<html>\n<body>\n# TODO: Complete this line\n<script>\nfunction changeText(id) {\nid.innerHTML = \"Ooops!\";\n}\n</script>\n</body>\n</html>",
      "solution": "<!DOCTYPE html>\n<html>\n<body>\n<h2 onclick=\"changeText(this)\">Click on this text!</h1>\n<script>\nfunction changeText(id) {\nid.innerHTML = \"Ooops!\";\n}\n</script>\n</body>\n</html>"
    }
  ],
  "related_topics": [
    {
      "id": "17e04811-760c-413e-b5fb-8f054f577913",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "28fe1a85-da54-4c57-ac86-7bb9b08bdc88",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "c0bdb96a-6e9a-4fda-ab4d-436ac7f8a306",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is When a user clicks the mouse\nWhen a web page has loaded\nWhen an image has been loaded\nWhen the mouse moves over an element\nWhen an input field is changed\nWhen an HTML form?",
      "options": [
        "None of the above.",
        "submitted\nWhen a user strokes a key\nIn this example",
        "called from the event handler:\nExample\n<",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of When a user clicks the mouse\nWhen a web page has loaded\nWhen an image has been loaded\nWhen the mouse moves over an element\nWhen an input field is changed\nWhen an HTML form is 'submitted\nWhen a user strokes a key\nIn this example'."
    },
    {
      "question": "What is a function?",
      "options": [
        "called from the event handler:\nExample\n<",
        "None of the above.",
        "None of the above.",
        "submitted\nWhen a user strokes a key\nIn this example"
      ],
      "correct_answer": 0,
      "explanation": "The correct definition of a function is 'called from the event handler:\nExample\n<'."
    }
  ],
  "summary": "This tutorial covers JavaScriptHTML DOM Events concepts and techniques. You'll learn how to use JavaScriptHTML DOM Events effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaScriptHTML DOM Events and how to apply it in your projects."
}