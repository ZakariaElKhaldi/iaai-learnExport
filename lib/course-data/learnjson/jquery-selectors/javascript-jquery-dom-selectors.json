{
  "id": "858747f8-247b-4335-8929-fa70c40484db",
  "title": "JavaScript / jQuery DOM Selectors",
  "slug": "javascript-jquery-dom-selectors",
  "metadata": {
    "description": "Learn about JavaScript / jQuery DOM Selectors with clear explanations and practical examples.",
    "keywords": [
      "javascript",
      "jquery",
      "elements",
      "myelements",
      "intro",
      "html",
      "finding",
      "return",
      "document",
      "class"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJSON",
    "subcategory": "jQuery Selectors"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JavaScript / jQuery DOM Selectors",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "jQuery vs JavaScript\njQuery\nwas created in 2006 by John Resig. \nIt was designed to handle Browser Incompatibilities and to simplify HTML DOM Manipulation, Event Handling, Animations, and Ajax.\nFor more than 10 years, jQuery has been the most popular JavaScript library in the world.\nHowever, after JavaScript\nVersion 5\n(2009), most of the jQuery utilities can be solved with a few lines of standard JavaScript:\nFinding HTML Element by Id\nReturn the element with id=\"id01\":\njQuery\nmyElement = $(\"#id01\");\n\nJavaScript\nmyElement = document.getElementById(\"id01\");\n\nFinding HTML Elements by Tag Name\nReturn all <p> elements:\njQuery\nmyElements = $(\"p\");\n\nJavaScript\nmyElements = document.getElementsByTagName(\"p\");\n\nFinding HTML Elements by Class Name\nReturn all elements with class=\"intro\".\njQuery\nmyElements = $(\".intro\");\n\nJavaScript\nmyElements = document.getElementsByClassName(\"intro\");\n\nFinding HTML Elements by CSS Selectors\nReturn a list of all <p> elements with class=\"intro\".\njQuery\nmyElements = $(\"p.intro\");\n\nJavaScript\nmyElements = document.querySelectorAll(\"p.intro\");\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "jQuery",
      "content": "",
      "order": 3,
      "code": "myElement = $(\"#id01\");",
      "language": "javascript",
      "explanation": "Example of jquery"
    },
    {
      "type": "code_example",
      "title": "JavaScript",
      "content": "",
      "order": 4,
      "code": "myElement = document.getElementById(\"id01\");",
      "language": "javascript",
      "explanation": "Example of javascript"
    },
    {
      "type": "code_example",
      "title": "jQuery",
      "content": "",
      "order": 5,
      "code": "myElements = $(\"p\");",
      "language": "javascript",
      "explanation": "Example of jquery"
    },
    {
      "type": "code_example",
      "title": "JavaScript",
      "content": "",
      "order": 6,
      "code": "myElements = document.getElementsByTagName(\"p\");",
      "language": "javascript",
      "explanation": "Example of javascript"
    },
    {
      "type": "code_example",
      "title": "jQuery",
      "content": "",
      "order": 7,
      "code": "myElements = $(\".intro\");",
      "language": "javascript",
      "explanation": "Example of jquery"
    },
    {
      "type": "code_example",
      "title": "JavaScript",
      "content": "",
      "order": 8,
      "code": "myElements = document.getElementsByClassName(\"intro\");",
      "language": "javascript",
      "explanation": "Example of javascript"
    },
    {
      "type": "code_example",
      "title": "jQuery",
      "content": "",
      "order": 9,
      "code": "myElements = $(\"p.intro\");",
      "language": "javascript",
      "explanation": "Example of jquery"
    },
    {
      "type": "code_example",
      "title": "JavaScript",
      "content": "",
      "order": 10,
      "code": "myElements = document.querySelectorAll(\"p.intro\");",
      "language": "javascript",
      "explanation": "Example of javascript"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "myElement = $(\"#id01\");"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "myElement = document.getElementById(\"id01\");"
    }
  ],
  "related_topics": [
    {
      "id": "2a577e9a-7ad6-4291-9f9e-98cfd4c9dbc7",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "fbaf98fa-4351-40cf-97a2-c030e736ef9b",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "919a4aa2-0180-469c-b541-1d825d97e1c7",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers JavaScript / jQuery DOM Selectors concepts and techniques. You'll learn how to use JavaScript / jQuery DOM Selectors effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaScript / jQuery DOM Selectors and how to apply it in your projects."
}