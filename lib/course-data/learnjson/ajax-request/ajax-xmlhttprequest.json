{
  "id": "895617e4-538c-4b89-a136-35b4d082b5fc",
  "title": "AJAX - XMLHttpRequest",
  "slug": "ajax-xmlhttprequest",
  "metadata": {
    "description": "Learn about AJAX - XMLHttpRequest with clear explanations and practical examples.",
    "keywords": [
      "server",
      "xhttp",
      "send",
      "open",
      "request",
      "post",
      "method",
      "async",
      "false",
      "true"
    ],
    "difficulty": "intermediate",
    "prerequisites": [],
    "estimated_time": 5,
    "category": "LearnJSON",
    "subcategory": "AJAX Request"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "AJAX - XMLHttpRequest",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "The XMLHttpRequest object is used to request data from a server.\nSend a Request To a Server\nTo send a request to a server, we use the open() and send() methods of the\nXMLHttpRequest\nobject:\nxhttp.open(\"GET\", \"ajax_info.txt\", true);\nxhttp.send();\nMethod\nDescription\nopen(\nmethod, url, async\n)\nSpecifies the type of request\nmethod\n: the type of request: GET or POST\nurl\n: the server (file) location\nasync\n: true (asynchronous) or false (synchronous)\nsend()\nSends the request to the server (used for GET)\nsend(\nstring\n)\nSends the request to the server (used for POST)\nThe url - A File On a Server\nThe url parameter of the\nopen()\nmethod, is an address to a file on a server:\nxhttp.open(\"GET\", \"ajax_test.asp\", true);\nThe file can be any kind of file, like .txt and \n.xml, or server scripting files like .asp and .php (which can perform  \nactions on the server before sending the response back).\nAsynchronous - True or False?\nServer requests should be sent asynchronously.\nThe async parameter of the open() \nmethod should be set to true:\nxhttp.open(\"GET\", \"ajax_test.asp\", true);\nBy sending asynchronously, the \nJavaScript does not have to wait for the server response, but can instead:\nexecute other scripts while waiting for server response\ndeal with the response after the response is ready\nThe default value for the async parameter is async = true.\nYou can safely remove the third parameter from your code.\nSynchronous XMLHttpRequest (async = false) is not recommended because the JavaScript will \nstop executing until the server response is ready. If the server is busy or slow, the \napplication will hang or stop.\nGET or POST?\nGET\nis simpler and faster than\nPOST\n, and can be used in most cases.\nHowever, always use POST requests when:\nA cached file is not an option (update a file or database on the server).\nSending a large amount of data to the server (POST has no size limitations).\nSending user input (which can contain unknown characters), POST is more robust and secure than GET.\nGET Requests\nA simple\nGET\nrequest:\nExample\nxhttp.open(\"GET\", \"demo_get.asp\");\nxhttp.send();\n\nIn the example above, you may get a cached result. To avoid this, add a unique ID to the URL:\nExample\nxhttp.open(\"GET\", \"demo_get.asp?t=\" + Math.random());\nxhttp.send();\n\nIf you want to send information with the\nGET\nmethod, add the information to the URL:\nExample\nxhttp.open(\"GET\", \"demo_get2.asp?fname=Henry&lname=Ford\");\nxhttp.send();\n\nHow the server uses the input and how the server responds to a request, is explained in a later chapter.\nPOST Requests\nA simple\nPOST\nrequest:\nExample\nxhttp.open(\"POST\", \"demo_post.asp\");\nxhttp.send();\n\nTo POST data like an HTML form, add an HTTP header with\nsetRequestHeader()\n. \nSpecify the data you want to send in the\nsend()\nmethod:\nExample\nxhttp.open(\"POST\", \"ajax_test.asp\");\nxhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\nxhttp.send(\"fname=Henry&lname=Ford\");\n\nMethod\nDescription\nsetRequestHeader(\nheader, value\n)\nAdds HTTP headers to the request\nheader\n: specifies the header name\nvalue\n: specifies the header value\nSynchronous Request\nTo execute a synchronous request, change the third parameter in the\nopen()\nmethod to\nfalse\n:\nxhttp.open(\"GET\", \"ajax_info.txt\", false);\nSometimes async = false are used for quick testing. You will also find \nsynchronous requests in older JavaScript code.\nSince the code will wait for server completion, there is no need for an\nonreadystatechange\nfunction:\nExample\nxhttp.open(\"GET\", \"ajax_info.txt\", false);\nxhttp.send();\ndocument.getElementById(\"demo\").innerHTML = xhttp.responseText;\n\nSynchronous XMLHttpRequest (async = false) is not recommended because the JavaScript will \nstop executing until the server response is ready. If the server is busy or slow, the \napplication will hang or stop.\nModern developer tools are encouraged to warn about using \nsynchronous requests and may throw an InvalidAccessError exception when it occurs.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "xhttp.open(\"GET\", \"demo_get.asp\");\nxhttp.send();",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "xhttp.open(\"GET\", \"demo_get.asp?t=\" + Math.random());\nxhttp.send();",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "xhttp.open(\"GET\", \"demo_get2.asp?fname=Henry&lname=Ford\");\nxhttp.send();",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 6,
      "code": "xhttp.open(\"POST\", \"demo_post.asp\");\nxhttp.send();",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 7,
      "code": "xhttp.open(\"POST\", \"ajax_test.asp\");\nxhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\nxhttp.send(\"fname=Henry&lname=Ford\");",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 8,
      "code": "xhttp.open(\"GET\", \"ajax_info.txt\", false);\nxhttp.send();\ndocument.getElementById(\"demo\").innerHTML = xhttp.responseText;",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "xhttp.open(\"GET\", \"demo_get.asp\");\nxhttp.send();"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "xhttp.open(\"GET\", \"demo_get.asp?t=\" + Math.random());\nxhttp.send();"
    }
  ],
  "related_topics": [
    {
      "id": "e90a2515-dd4f-4939-b5c3-0c12259ce93c",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "5e6f6348-f863-4ef5-ba92-1d11c7b45015",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "a9975cf7-666f-4173-a4cb-12625d03a317",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is XMLHttpRequest\n\nThe XMLHttpRequest object?",
      "options": [
        "None of the above.",
        "used to request data from a server",
        "Not a XMLHttpRequest\n\nThe XMLHttpRequest object.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of XMLHttpRequest\n\nThe XMLHttpRequest object is 'used to request data from a server'."
    },
    {
      "question": "Which best describes the main purpose of this javascript feature?",
      "options": [
        "To organize and structure code",
        "To improve code readability",
        "To enhance performance",
        "All of the above"
      ],
      "correct_answer": 3,
      "explanation": "This feature serves multiple purposes in software development."
    }
  ],
  "summary": "This tutorial covers AJAX - XMLHttpRequest concepts and techniques. You'll learn how to use AJAX - XMLHttpRequest effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of AJAX - XMLHttpRequest and how to apply it in your projects."
}