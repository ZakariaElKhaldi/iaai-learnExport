{
  "id": "0fce8309-81c1-4ee3-b66d-8c44dfc245b6",
  "title": "JSON- Introduction",
  "slug": "json-introduction",
  "metadata": {
    "description": "Learn about JSON- Introduction with clear explanations and practical examples.",
    "keywords": [
      "json",
      "javascript",
      "data",
      "text",
      "format",
      "object",
      "objects",
      "storing",
      "string",
      "name"
    ],
    "difficulty": "beginner",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJSON",
    "subcategory": "JSON Intro"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JSON\n- Introduction",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "JSON\nJSON stands for\nJ\nava\nS\ncript\nO\nbject\nN\notation\nJSON is a\ntext format\nfor storing and transporting data\nJSON is \"self-describing\" and easy to understand\nJSON Example\nThis example is a JSON string:\n'{\"name\":\"John\", \"age\":30, \"car\":null}'\nIt defines an object with 3 properties:\nname\nage\ncar\nEach property has a value.\nIf you parse the JSON string with a JavaScript program, you can access the data\nas an object:\nlet personName = obj.name;\nlet personAge = obj.age;\nWhat is JSON?\nJSON stands for\nJ\nava\nS\ncript\nO\nbject\nN\notation\nJSON is a lightweight data-interchange format\nJSON is plain text written in JavaScript object notation\nJSON is used to send data between computers\nJSON is language independent\n*\n*\nThe JSON syntax is derived from JavaScript object notation, but the JSON format is text only.\nCode for reading and generating JSON exists in many programming languages.\nThe JSON format was originally specified by\nDouglas Crockford\n.\nWhy Use JSON?\nThe JSON format is syntactically similar to the code for creating \nJavaScript objects.\nBecause of this, a JavaScript program \ncan easily convert JSON data into JavaScript objects.\nSince the format is text only, JSON data can easily be sent between computers,\nand used by any programming language.\nJavaScript has a built in function for converting JSON strings into JavaScript objects:\nJSON.parse()\nJavaScript also has a built in function for converting an object into a JSON string:\nJSON.stringify()\nYou can receive pure text from a server and use it as a JavaScript object.\nYou can send a JavaScript object to a server in pure text format.\nYou can work with data as JavaScript objects, with no complicated \nparsing and translations.\nStoring Data\nWhen storing data, the data has to be a certain format, and regardless of where you choose to store it,\ntext\nis always one of the legal formats.\nJSON makes it possible to store JavaScript objects as text.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "'{\"name\":\"John\", \"age\":30, \"car\":null}'",
      "language": "javascript",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "let personName = obj.name;\nlet personAge = obj.age;",
      "language": "javascript",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "'{\"name\":\"John\", \"age\":30, \"car\":null}'"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your javascript code here",
      "solution": "let personName = obj.name;\nlet personAge = obj.age;"
    }
  ],
  "related_topics": [
    {
      "id": "b02c9772-da82-4bb3-9cf8-664acfbefc96",
      "title": "Javascript Functions and Methods",
      "relationship": "next_topic"
    },
    {
      "id": "2d17b2c2-f258-47b4-a117-734ef9646908",
      "title": "Javascript Data Structures",
      "relationship": "suggested_next"
    }
  ],
  "quiz": [
    {
      "question": "What is Introduction\n\nJSON\nJSON stands for\nJ\nava\nS\ncript\nO\nbject\nN\notation\nJSON is a\ntext format\nfor storing and transporting data\nJSON?",
      "options": [
        "None of the above.",
        "None of the above.",
        "JSON",
        "\"self-describing\" and easy to understand\nJSON Example\nThis example is a JSON string:\n'{\"name\":\"John\""
      ],
      "correct_answer": 3,
      "explanation": "The correct definition of Introduction\n\nJSON\nJSON stands for\nJ\nava\nS\ncript\nO\nbject\nN\notation\nJSON is a\ntext format\nfor storing and transporting data\nJSON is '\"self-describing\" and easy to understand\nJSON Example\nThis example is a JSON string:\n'{\"name\":\"John\"'."
    },
    {
      "question": "What is What?",
      "options": [
        "\"self-describing\" and easy to understand\nJSON Example\nThis example is a JSON string:\n'{\"name\":\"John\"",
        "None of the above.",
        "JSON",
        "None of the above."
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of What is 'JSON'."
    }
  ],
  "summary": "This tutorial covers JSON- Introduction concepts and techniques. You'll learn how to use JSON- Introduction effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JSON- Introduction and how to apply it in your projects."
}