{
  "id": "108dff4d-c054-4c19-b96f-2bd0d05804c3",
  "title": "JavaScriptEvents",
  "slug": "javascriptevents",
  "metadata": {
    "description": "Learn about JavaScriptEvents with clear explanations and practical examples.",
    "keywords": [
      "html",
      "javascript",
      "events",
      "event",
      "user",
      "button",
      "element",
      "code",
      "example",
      "onclick"
    ],
    "difficulty": "intermediate",
    "prerequisites": [
      "Javascript Basics"
    ],
    "estimated_time": 5,
    "category": "LearnJSON",
    "subcategory": "JS Events"
  },
  "content_sections": [
    {
      "type": "introduction",
      "title": "Introduction",
      "content": "JavaScript\nEvents",
      "order": 1,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "concept",
      "title": "Details",
      "content": "HTML events are\n\"things\"\nthat happen to HTML elements.\nWhen JavaScript is used in HTML pages, JavaScript can\n\"react\"\non \nthese events.\nHTML Events\nAn HTML event can be something the browser does, or something a user does.\nHere are some examples of HTML events:\nAn HTML web page has finished loading\nAn HTML input field was changed\nAn HTML button was clicked\nOften, when events happen, you may want to do something.\nJavaScript lets you execute code when events are detected.\nHTML allows event handler attributes,\nwith JavaScript code\n, to be added to HTML elements.\nWith single quotes:\n<\nelement\nevent\n=\n'\nsome JavaScript\n'\n>\nWith double quotes:\n<\nelement\nevent\n=\n\"\nsome JavaScript\n\"\n>\nIn the following example, an\nonclick\nattribute (with code), is added to a\n<button>\nelement:\nExample\n<button onclick=\"document.getElementById('demo').innerHTML = Date()\">The time is?</button>\n\nIn the example above, the JavaScript code changes the content of \nthe element with id=\"demo\".\nIn the \nits own element (using\nthis\n.innerHTML\n):\nExample\n<button onclick=\"this.innerHTML = Date()\">The time is?</button>\n\nJavaScript code is often several lines long. It is more common to see event attributes calling functions:\nExample\n<button onclick=\"displayDate()\">The time is?</button>\n\nCommon HTML Events\nHere is a list of some common HTML events:\nEvent\nDescription\nonchange\nAn HTML element has been changed\nonclick\nThe user clicks an HTML element\nonmouseover\nThe user moves the mouse over an HTML element\nonmouseout\nThe user moves the mouse away from an HTML element\nonkeydown\nThe user pushes a keyboard key\nonload\nThe browser has finished loading the page\nThe list is much longer:\n JavaScript Reference HTML DOM Events\n.\nJavaScript Event Handlers\nEvent handlers can be used to handle and verify user input, user actions, \nand browser actions:\nThings that should be done every time a page loads\nThings that should be done when the page is closed\nAction that should be performed when a user clicks a button\nContent that should be verified when a user inputs data\nAnd more ...\nMany different methods can be used to let JavaScript work with events:\nHTML event attributes can execute JavaScript code directly\nHTML event attributes can call JavaScript functions\nYou can assign your own event handler functions to HTML elements\nYou can prevent events from being sent or being handled\nAnd more ...\nYou will learn a lot more about events and event handlers in the HTML DOM chapters.\n\n\u2605\n+1",
      "order": 2,
      "code": null,
      "language": null,
      "explanation": null
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 3,
      "code": "<button onclick=\"document.getElementById('demo').innerHTML = Date()\">The time is?</button>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 4,
      "code": "<button onclick=\"this.innerHTML = Date()\">The time is?</button>",
      "language": "html",
      "explanation": "Example of example"
    },
    {
      "type": "code_example",
      "title": "Example",
      "content": "",
      "order": 5,
      "code": "<button onclick=\"displayDate()\">The time is?</button>",
      "language": "html",
      "explanation": "Example of example"
    }
  ],
  "practice_exercises": [
    {
      "title": "Practice Exercise 1",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your html code here",
      "solution": "<button onclick=\"document.getElementById('demo').innerHTML = Date()\">The time is?</button>"
    },
    {
      "title": "Practice Exercise 2",
      "description": "Write code that implements similar functionality.",
      "difficulty": "easy",
      "starter_code": "# Write your html code here",
      "solution": "<button onclick=\"this.innerHTML = Date()\">The time is?</button>"
    }
  ],
  "related_topics": [
    {
      "id": "9474c636-7b90-4f43-9a1c-a8f80ce29308",
      "title": "Javascript Best Practices",
      "relationship": "related_topic"
    },
    {
      "id": "10e99299-3d73-4052-aab1-6fdbfbbc148a",
      "title": "Javascript Common Pitfalls and How to Avoid Them",
      "relationship": "suggested_reading"
    },
    {
      "id": "7487034d-6345-45d1-b64a-c01898ecc0e6",
      "title": "Javascript Fundamentals",
      "relationship": "prerequisite"
    }
  ],
  "quiz": [
    {
      "question": "What is JavaScript\nEvents\n\nHTML events?",
      "options": [
        "used in HTML pages",
        "\"things\"\nthat happen to HTML elements",
        "None of the above.",
        "None of the above."
      ],
      "correct_answer": 1,
      "explanation": "The correct definition of JavaScript\nEvents\n\nHTML events is '\"things\"\nthat happen to HTML elements'."
    },
    {
      "question": "What is When JavaScript?",
      "options": [
        "None of the above.",
        "None of the above.",
        "used in HTML pages",
        "\"things\"\nthat happen to HTML elements"
      ],
      "correct_answer": 2,
      "explanation": "The correct definition of When JavaScript is 'used in HTML pages'."
    }
  ],
  "summary": "This tutorial covers JavaScriptEvents concepts and techniques. You'll learn how to use JavaScriptEvents effectively, including key principles, common patterns, and practical examples. By the end of this tutorial, you'll have a solid understanding of JavaScriptEvents and how to apply it in your projects."
}